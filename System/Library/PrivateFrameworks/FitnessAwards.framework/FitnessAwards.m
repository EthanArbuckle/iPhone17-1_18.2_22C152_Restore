uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for AwardImageLayout(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AwardImageLayout(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize()
{
  if (!qword_26B1D3098)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_26B1D3098);
    }
  }
}

uint64_t sub_24EAA769C(uint64_t a1, _OWORD *a2)
{
  *(void *)(v3 + 168) = a1;
  sub_24EB3D220();
  *(void *)(v3 + 176) = swift_task_alloc();
  sub_24EB3DC60();
  *(void *)(v3 + 184) = swift_task_alloc();
  sub_24EB3DC40();
  *(void *)(v3 + 192) = swift_task_alloc();
  long long v5 = a2[1];
  *(_OWORD *)(v3 + 200) = *a2;
  *(_OWORD *)(v3 + 216) = v5;
  *(_OWORD *)(v3 + 232) = a2[5];
  *(_OWORD *)(v3 + 248) = *(_OWORD *)v2;
  *(unsigned char *)(v3 + 49) = *(unsigned char *)(v2 + 16);
  return MEMORY[0x270FA2498](sub_24EAA77AC, 0, 0);
}

uint64_t sub_24EAA77AC()
{
  switch(*(unsigned char *)(v0 + 49))
  {
    case 1:
      v11 = (uint64_t (*)(void))(*(void *)(v0 + 232) + **(int **)(v0 + 232));
      swift_bridgeObjectRetain();
      v8 = (void *)swift_task_alloc();
      *(void *)(v0 + 264) = v8;
      void *v8 = v0;
      v8[1] = sub_24EAA7AC8;
      uint64_t result = v11();
      break;
    case 2:
      uint64_t v3 = *(void *)(v0 + 256);
      v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 216) + **(int **)(v0 + 216));
      swift_bridgeObjectRetain();
      v4 = (void *)swift_task_alloc();
      *(void *)(v0 + 272) = v4;
      void *v4 = v0;
      v4[1] = sub_24EAA7C00;
      uint64_t v5 = *(void *)(v0 + 248);
      uint64_t result = v10(v0 + 16, v5, v3);
      break;
    case 3:
      v9 = (uint64_t (*)(void *))(*(void *)(v0 + 200) + **(int **)(v0 + 200));
      uint64_t v7 = (void *)swift_task_alloc();
      *(void *)(v0 + 392) = v7;
      *uint64_t v7 = v0;
      v7[1] = sub_24EAA89E4;
      uint64_t v2 = &unk_27007C398;
      goto LABEL_7;
    default:
      v9 = (uint64_t (*)(void *))(*(void *)(v0 + 200) + **(int **)(v0 + 200));
      uint64_t v1 = (void *)swift_task_alloc();
      *(void *)(v0 + 328) = v1;
      *uint64_t v1 = v0;
      v1[1] = sub_24EAA82F4;
      uint64_t v2 = &unk_27007C368;
LABEL_7:
      uint64_t result = v9(v2);
      break;
  }
  return result;
}

uint64_t sub_24EAA7AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  swift_task_dealloc();
  if (v2)
  {
    MEMORY[0x2533495D0](v2);
    uint64_t v7 = sub_24EAA7ED8;
  }
  else
  {
    *(void *)(v6 + 288) = a2;
    *(void *)(v6 + 296) = a1;
    uint64_t v7 = sub_24EAA7D20;
  }
  return MEMORY[0x270FA2498](v7, 0, 0);
}

uint64_t sub_24EAA7C00()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 280) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_24EAA8E28(*(void *)(v2 + 248), *(void *)(v2 + 256), 2);
    uint64_t v3 = sub_24EAA8CF8;
  }
  else
  {
    uint64_t v3 = sub_24EAA860C;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_24EAA7D20()
{
  sub_24EB3DC30();
  sub_24EB3DC20();
  sub_24EB3DC10();
  swift_bridgeObjectRelease();
  sub_24EB3DC20();
  sub_24EB3DC50();
  type metadata accessor for AwardsLocalizationBundle();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v2 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_24EB3D210();
  v0[19] = sub_24EB3DC90();
  v0[20] = v3;
  uint64_t v4 = v0[31];
  uint64_t v5 = (int *)v0[25];
  v0[38] = v3;
  v8 = (uint64_t (*)(uint64_t))((char *)v5 + *v5);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[39] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_24EAA8044;
  return v8(v4);
}

uint64_t sub_24EAA7ED8()
{
  sub_24EB3DBF0();
  type metadata accessor for AwardsLocalizationBundle();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v2 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_24EB3D210();
  v0[19] = sub_24EB3DC90();
  v0[20] = v3;
  uint64_t v4 = v0[31];
  uint64_t v5 = (int *)v0[25];
  v0[38] = v3;
  v8 = (uint64_t (*)(uint64_t))((char *)v5 + *v5);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[39] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_24EAA8044;
  return v8(v4);
}

uint64_t sub_24EAA8044(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[7] = v2;
  v3[8] = a1;
  v3[9] = v1;
  uint64_t v4 = (void *)*v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = v3[31];
    uint64_t v5 = v3[32];
    swift_bridgeObjectRelease();
    sub_24EAA8E28(v6, v5, 1);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))v4[1];
    return v7();
  }
  else
  {
    v3[40] = v3[19];
    return MEMORY[0x270FA2498](sub_24EAA81C8, 0, 0);
  }
}

uint64_t sub_24EAA81C8()
{
  sub_24EB3DBF0();
  type metadata accessor for AwardsLocalizationBundle();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v2 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_24EB3D210();
  uint64_t v3 = sub_24EB3DC90();
  uint64_t v4 = v0[40];
  uint64_t v5 = v0[8];
  uint64_t v6 = v0[38];
  uint64_t v7 = v0[21];
  *(void *)uint64_t v7 = v0[31];
  *(void *)(v7 + 8) = v4;
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v3;
  *(void *)(v7 + 32) = v8;
  *(void *)(v7 + 40) = v5;
  *(unsigned char *)(v7 + 48) = 0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_24EAA82F4(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[10] = v2;
  v3[11] = a1;
  v3[12] = v1;
  uint64_t v4 = (void *)*v2;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v4[1];
    return v5();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_24EAA8454, 0, 0);
  }
}

uint64_t sub_24EAA8454()
{
  sub_24EB3DBF0();
  type metadata accessor for AwardsLocalizationBundle();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_24EB3D210();
  uint64_t v4 = sub_24EB3DC90();
  uint64_t v6 = v5;
  sub_24EB3DBF0();
  id v7 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_24EB3D210();
  uint64_t v8 = sub_24EB3DC90();
  uint64_t v9 = v0[11];
  uint64_t v10 = v0[21];
  *(void *)uint64_t v10 = &unk_27007C368;
  *(void *)(v10 + 8) = v4;
  *(void *)(v10 + 16) = v6;
  *(void *)(v10 + 24) = v8;
  *(void *)(v10 + 32) = v11;
  *(void *)(v10 + 40) = v9;
  *(unsigned char *)(v10 + 48) = 2;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_24EAA860C()
{
  uint64_t v2 = *(void *)(v0 + 248);
  uint64_t v1 = *(void *)(v0 + 256);
  id v3 = *(int **)(v0 + 200);
  *(_OWORD *)(v0 + 336) = *(_OWORD *)(v0 + 16);
  *(void *)(v0 + 352) = *(void *)(v0 + 40);
  *(void *)(v0 + 360) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3200);
  uint64_t v4 = swift_allocObject();
  *(void *)(v0 + 368) = v4;
  *(_OWORD *)(v4 + 16) = xmmword_24EB3E630;
  *(void *)(v4 + 32) = v2;
  *(void *)(v4 + 40) = v1;
  id v7 = (uint64_t (*)(uint64_t))((char *)v3 + *v3);
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 376) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_24EAA8740;
  return v7(v4);
}

uint64_t sub_24EAA8740(uint64_t a1)
{
  id v3 = (void *)*v2;
  v3[13] = v2;
  v3[14] = a1;
  v3[15] = v1;
  v3[48] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_24EAA8D78;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_24EAA8864;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_24EAA8864()
{
  uint64_t v2 = v0[31];
  uint64_t v1 = v0[32];
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_24EB3E630;
  *(void *)(v3 + 32) = v2;
  *(void *)(v3 + 40) = v1;
  swift_bridgeObjectRetain();
  sub_24EB3DBF0();
  type metadata accessor for AwardsLocalizationBundle();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v5 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_24EB3D210();
  uint64_t v6 = sub_24EB3DC90();
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = v0[14];
  uint64_t v11 = v0[42];
  uint64_t v10 = v0[43];
  uint64_t v12 = v0[21];
  *(void *)uint64_t v12 = v3;
  *(void *)(v12 + 8) = v11;
  *(void *)(v12 + 16) = v10;
  *(void *)(v12 + 24) = v6;
  *(void *)(v12 + 32) = v8;
  *(void *)(v12 + 40) = v9;
  *(unsigned char *)(v12 + 48) = 1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_24EAA89E4(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[16] = v2;
  v3[17] = a1;
  v3[18] = v1;
  uint64_t v4 = (void *)*v2;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v5 = (uint64_t (*)(void))v4[1];
    return v5();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_24EAA8B44, 0, 0);
  }
}

uint64_t sub_24EAA8B44()
{
  sub_24EB3DBF0();
  type metadata accessor for AwardsLocalizationBundle();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_24EB3D210();
  uint64_t v4 = sub_24EB3DC90();
  uint64_t v6 = v5;
  sub_24EB3DBF0();
  id v7 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_24EB3D210();
  uint64_t v8 = sub_24EB3DC90();
  uint64_t v9 = v0[17];
  uint64_t v10 = v0[21];
  *(void *)uint64_t v10 = &unk_27007C398;
  *(void *)(v10 + 8) = v4;
  *(void *)(v10 + 16) = v6;
  *(void *)(v10 + 24) = v8;
  *(void *)(v10 + 32) = v11;
  *(void *)(v10 + 40) = v9;
  *(unsigned char *)(v10 + 48) = 3;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_24EAA8CF8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24EAA8D78()
{
  uint64_t v2 = v0[31];
  uint64_t v1 = v0[32];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24EAA8E28(v2, v1, 2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_24EAA8E28(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1 || a3 == 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t AwardDetailState.templateUniqueName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void AwardDetailState.layout.getter(unsigned char *a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 17);
  *a1 = *(unsigned char *)(v1 + 16);
  a1[1] = v2;
}

unint64_t AwardDetailState.suggestedWorkoutsLoadState.getter()
{
  unint64_t v1 = *(void *)(v0 + 24);
  sub_24EAA8EB8(v1);
  return v1;
}

unint64_t sub_24EAA8EB8(unint64_t result)
{
  if (result >= 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t AwardDetailState.suggestedWorkoutsLoadState.setter(uint64_t a1)
{
  unint64_t result = sub_24EAA8EF4(*(void *)(v1 + 24));
  *(void *)(v1 + 24) = a1;
  return result;
}

unint64_t sub_24EAA8EF4(unint64_t result)
{
  if (result >= 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t (*AwardDetailState.suggestedWorkoutsLoadState.modify())()
{
  return nullsub_1;
}

uint64_t AwardDetailState.earnedLoadState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for AwardDetailState();
  return sub_24EAA9BE4(v1 + *(int *)(v3 + 28), a1, (uint64_t (*)(void))type metadata accessor for AwardEarnedLoadState);
}

uint64_t type metadata accessor for AwardDetailState()
{
  uint64_t result = qword_269931CD8;
  if (!qword_269931CD8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t AwardDetailState.earnedLoadState.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AwardDetailState() + 28);
  return sub_24EAA9004(a1, v3);
}

uint64_t sub_24EAA9004(uint64_t a1, uint64_t a2)
{
  uint64_t State = type metadata accessor for AwardEarnedLoadState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(State - 8) + 40))(a2, a1, State);
  return a2;
}

uint64_t (*AwardDetailState.earnedLoadState.modify())()
{
  return nullsub_1;
}

uint64_t AwardDetailState.init(templateUniqueName:layout:suggestedWorkoutsLoadState:earnedLoadState:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char v8 = *a3;
  char v9 = a3[1];
  *(void *)a6 = a1;
  *(void *)(a6 + 8) = a2;
  *(unsigned char *)(a6 + 16) = v8;
  *(unsigned char *)(a6 + 17) = v9;
  *(void *)(a6 + 24) = a4;
  uint64_t v10 = a6 + *(int *)(type metadata accessor for AwardDetailState() + 28);
  return sub_24EAA9110(a5, v10);
}

uint64_t sub_24EAA9110(uint64_t a1, uint64_t a2)
{
  uint64_t State = type metadata accessor for AwardEarnedLoadState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(State - 8) + 32))(a2, a1, State);
  return a2;
}

unint64_t sub_24EAA9174(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x74756F79616CLL;
      break;
    case 2:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 3:
      unint64_t result = 0x6F4C64656E726165;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_24EAA9214(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_24EAA9228()
{
  return sub_24EB3E0D0();
}

uint64_t sub_24EAA9270()
{
  return sub_24EB3E0A0();
}

uint64_t sub_24EAA929C()
{
  return sub_24EB3E0D0();
}

unint64_t sub_24EAA92E0()
{
  return sub_24EAA9174(*v0);
}

uint64_t sub_24EAA92E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EAA9C84(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EAA9310()
{
  return 0;
}

void sub_24EAA931C(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_24EAA9328(uint64_t a1)
{
  unint64_t v2 = sub_24EAA9610();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAA9364(uint64_t a1)
{
  unint64_t v2 = sub_24EAA9610();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AwardDetailState.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269931C88);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EAA9610();
  sub_24EB3E0F0();
  char v16 = 0;
  sub_24EB3DFB0();
  if (!v2)
  {
    char v9 = *(unsigned char *)(v3 + 17);
    char v14 = *(unsigned char *)(v3 + 16);
    char v15 = v9;
    char v13 = 1;
    sub_24EAA9664();
    sub_24EB3DFF0();
    uint64_t v12 = *(void *)(v3 + 24);
    v11[15] = 2;
    sub_24EAA96B8();
    sub_24EB3DFF0();
    type metadata accessor for AwardDetailState();
    v11[14] = 3;
    type metadata accessor for AwardEarnedLoadState();
    sub_24EAA9BA0(&qword_269931CA8);
    sub_24EB3DFF0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_24EAA9610()
{
  unint64_t result = qword_269931C90;
  if (!qword_269931C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931C90);
  }
  return result;
}

unint64_t sub_24EAA9664()
{
  unint64_t result = qword_269931C98;
  if (!qword_269931C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931C98);
  }
  return result;
}

unint64_t sub_24EAA96B8()
{
  unint64_t result = qword_269931CA0;
  if (!qword_269931CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931CA0);
  }
  return result;
}

uint64_t AwardDetailState.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t State = type metadata accessor for AwardEarnedLoadState();
  MEMORY[0x270FA5388](State);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269931CB0);
  uint64_t v22 = *(void *)(v7 - 8);
  uint64_t v23 = v7;
  MEMORY[0x270FA5388](v7);
  char v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for AwardDetailState();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  v24 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_24EAA9610();
  sub_24EB3E0E0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  }
  uint64_t v20 = v10;
  uint64_t v14 = (uint64_t)v6;
  uint64_t v16 = v22;
  uint64_t v15 = v23;
  char v31 = 0;
  *(void *)uint64_t v12 = sub_24EB3DF10();
  *((void *)v12 + 1) = v17;
  char v28 = 1;
  sub_24EAA9AF8();
  sub_24EB3DF50();
  char v18 = v30;
  v12[16] = v29;
  v12[17] = v18;
  char v27 = 2;
  sub_24EAA9B4C();
  sub_24EB3DF50();
  *((void *)v12 + 3) = v25;
  char v26 = 3;
  sub_24EAA9BA0(&qword_269931CC8);
  sub_24EB3DF50();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v15);
  sub_24EAA9110(v14, (uint64_t)&v12[*(int *)(v20 + 28)]);
  sub_24EAA9BE4((uint64_t)v12, v21, (uint64_t (*)(void))type metadata accessor for AwardDetailState);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return sub_24EAAA3FC((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for AwardDetailState);
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

unint64_t sub_24EAA9AF8()
{
  unint64_t result = qword_269931CB8;
  if (!qword_269931CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931CB8);
  }
  return result;
}

unint64_t sub_24EAA9B4C()
{
  unint64_t result = qword_269931CC0;
  if (!qword_269931CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931CC0);
  }
  return result;
}

uint64_t sub_24EAA9BA0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for AwardEarnedLoadState();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EAA9BE4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24EAA9C4C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AwardDetailState.init(from:)(a1, a2);
}

uint64_t sub_24EAA9C64(void *a1)
{
  return AwardDetailState.encode(to:)(a1);
}

uint64_t sub_24EAA9C84(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x800000024EB4A250 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74756F79616CLL && a2 == 0xE600000000000000 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000024EB4A270 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F4C64656E726165 && a2 == 0xEF65746174536461)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t _s13FitnessAwards16AwardDetailStateV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (!v4 && (sub_24EB3E010() & 1) == 0
    || *(unsigned __int8 *)(a1 + 16) != *(unsigned __int8 *)(a2 + 16)
    || ((*(unsigned __int8 *)(a1 + 17) ^ *(unsigned __int8 *)(a2 + 17)) & 1) != 0)
  {
    return 0;
  }
  uint64_t v5 = *(void *)(a1 + 24);
  unint64_t v6 = *(void *)(a2 + 24);
  if (v5)
  {
    if (v5 == 1)
    {
      if (v6 != 1) {
        return 0;
      }
    }
    else if (v6 < 2 || (sub_24EAE5E7C(v5, v6) & 1) == 0)
    {
      return 0;
    }
  }
  else if (v6)
  {
    return 0;
  }
  uint64_t v7 = *(int *)(type metadata accessor for AwardDetailState() + 28);
  return _s13FitnessAwards20AwardEarnedLoadStateO2eeoiySbAC_ACtFZ_0(a1 + v7, a2 + v7);
}

uint64_t initializeBufferWithCopyOfBuffer for AwardDetailState(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *(void *)a1 = *a2;
    a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
    unint64_t v8 = a2[3];
    swift_bridgeObjectRetain();
    if (v8 >= 2) {
      swift_bridgeObjectRetain();
    }
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = *(int *)(a3 + 28);
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (char *)a2 + v9;
    uint64_t State = type metadata accessor for AwardEarnedLoadState();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v10, v11, *(void *)(*(void *)(State - 8) + 64));
    }
    else
    {
      uint64_t v14 = sub_24EB3D1F0();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v10, v11, v14);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for AwardDetailState(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 24) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  type metadata accessor for AwardEarnedLoadState();
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (!result)
  {
    uint64_t v6 = sub_24EB3D1F0();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    return v7(v4, v6);
  }
  return result;
}

uint64_t initializeWithCopy for AwardDetailState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  unint64_t v7 = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v7 >= 2) {
    swift_bridgeObjectRetain();
  }
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t State = type metadata accessor for AwardEarnedLoadState();
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v9, v10, *(void *)(*(void *)(State - 8) + 64));
  }
  else
  {
    uint64_t v12 = sub_24EB3D1F0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 16))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t assignWithCopy for AwardDetailState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (unint64_t *)(a1 + 24);
  unint64_t v7 = *(void *)(a1 + 24);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  unint64_t v8 = *(void *)(a2 + 24);
  if (v7 >= 2)
  {
    if (v8 >= 2)
    {
      *uint64_t v6 = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (a1 == a2) {
        return a1;
      }
    }
    else
    {
      sub_24EAAA39C(a1 + 24);
      *uint64_t v6 = *(void *)(a2 + 24);
      if (a1 == a2) {
        return a1;
      }
    }
  }
  else if (v8 >= 2)
  {
    *uint64_t v6 = v8;
    swift_bridgeObjectRetain();
    if (a1 == a2) {
      return a1;
    }
  }
  else
  {
    *uint64_t v6 = v8;
    if (a1 == a2) {
      return a1;
    }
  }
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  sub_24EAAA3FC(a1 + v9, (uint64_t (*)(void))type metadata accessor for AwardEarnedLoadState);
  uint64_t State = type metadata accessor for AwardEarnedLoadState();
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v10, v11, *(void *)(*(void *)(State - 8) + 64));
  }
  else
  {
    uint64_t v13 = sub_24EB3D1F0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 16))(v10, v11, v13);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24EAAA39C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269931CD0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24EAAA3FC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t initializeWithTake for AwardDetailState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 28);
  int v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t State = type metadata accessor for AwardEarnedLoadState();
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v5, v6, *(void *)(*(void *)(State - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_24EB3D1F0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t assignWithTake for AwardDetailState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v8 = (unint64_t *)(a1 + 24);
  unint64_t v7 = *(void *)(a1 + 24);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  unint64_t v9 = *(void *)(a2 + 24);
  if (v7 >= 2)
  {
    if (v9 >= 2)
    {
      unint64_t *v8 = v9;
      swift_bridgeObjectRelease();
      if (a1 == a2) {
        return a1;
      }
      goto LABEL_7;
    }
    sub_24EAAA39C(a1 + 24);
  }
  unint64_t *v8 = v9;
  if (a1 == a2) {
    return a1;
  }
LABEL_7:
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (const void *)(a2 + v10);
  sub_24EAAA3FC(a1 + v10, (uint64_t (*)(void))type metadata accessor for AwardEarnedLoadState);
  uint64_t State = type metadata accessor for AwardEarnedLoadState();
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v11, v12, *(void *)(*(void *)(State - 8) + 64));
  }
  else
  {
    uint64_t v14 = sub_24EB3D1F0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 32))(v11, v12, v14);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for AwardDetailState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EAAA6A0);
}

uint64_t sub_24EAAA6A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t State = type metadata accessor for AwardEarnedLoadState();
    unint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(State - 8) + 48);
    uint64_t v10 = State;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for AwardDetailState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EAAA764);
}

uint64_t sub_24EAAA764(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t State = type metadata accessor for AwardEarnedLoadState();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(State - 8) + 56);
    uint64_t v9 = State;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_24EAAA80C()
{
  uint64_t result = type metadata accessor for AwardEarnedLoadState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for AwardDetailState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AwardDetailState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EAAAA20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_24EAAAA48(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_24EAAAA50(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for AwardDetailState.CodingKeys()
{
  return &type metadata for AwardDetailState.CodingKeys;
}

unint64_t sub_24EAAAA6C()
{
  unint64_t result = qword_269931CE8;
  if (!qword_269931CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931CE8);
  }
  return result;
}

unint64_t sub_24EAAAAC4()
{
  unint64_t result = qword_269931CF0;
  if (!qword_269931CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931CF0);
  }
  return result;
}

unint64_t sub_24EAAAB1C()
{
  unint64_t result = qword_269931CF8;
  if (!qword_269931CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931CF8);
  }
  return result;
}

BOOL static AwardToastType.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_24EAAAB80(char a1)
{
  return *(void *)&aCoalescesingul[8 * a1];
}

uint64_t sub_24EAAABA0()
{
  return 0;
}

void sub_24EAAABAC(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_24EAAABB8(uint64_t a1)
{
  unint64_t v2 = sub_24EAAB410();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAAABF4(uint64_t a1)
{
  unint64_t v2 = sub_24EAAB410();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EAAAC38()
{
  return sub_24EAAAB80(*v0);
}

uint64_t sub_24EAAAC40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EAAB534(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EAAAC68(uint64_t a1)
{
  unint64_t v2 = sub_24EAAB2C0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAAACA4(uint64_t a1)
{
  unint64_t v2 = sub_24EAAB2C0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EAAACE0(uint64_t a1)
{
  unint64_t v2 = sub_24EAAB368();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAAAD1C(uint64_t a1)
{
  unint64_t v2 = sub_24EAAB368();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EAAAD58@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_24EAAAD88(uint64_t a1)
{
  unint64_t v2 = sub_24EAAB3BC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAAADC4(uint64_t a1)
{
  unint64_t v2 = sub_24EAAB3BC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EAAAE00(uint64_t a1)
{
  unint64_t v2 = sub_24EAAB314();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAAAE3C(uint64_t a1)
{
  unint64_t v2 = sub_24EAAB314();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AwardToastType.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v31 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269931D00);
  uint64_t v29 = *(void *)(v3 - 8);
  uint64_t v30 = v3;
  MEMORY[0x270FA5388](v3);
  char v28 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269931D08);
  uint64_t v26 = *(void *)(v5 - 8);
  uint64_t v27 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v25 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269931D10);
  uint64_t v23 = *(void *)(v7 - 8);
  uint64_t v24 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269931D18);
  uint64_t v22 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269931D20);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EAAB2C0();
  sub_24EB3E0F0();
  switch((char)v31)
  {
    case 1:
      char v33 = 1;
      sub_24EAAB3BC();
      sub_24EB3DF70();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v24);
      break;
    case 2:
      char v34 = 2;
      sub_24EAAB368();
      uint64_t v17 = v25;
      sub_24EB3DF70();
      uint64_t v19 = v26;
      uint64_t v18 = v27;
      goto LABEL_5;
    case 3:
      char v35 = 3;
      sub_24EAAB314();
      uint64_t v17 = v28;
      sub_24EB3DF70();
      uint64_t v19 = v29;
      uint64_t v18 = v30;
LABEL_5:
      (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
      break;
    default:
      char v32 = 0;
      sub_24EAAB410();
      sub_24EB3DF70();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v10);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

unint64_t sub_24EAAB2C0()
{
  unint64_t result = qword_269931D28;
  if (!qword_269931D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931D28);
  }
  return result;
}

unint64_t sub_24EAAB314()
{
  unint64_t result = qword_269931D30;
  if (!qword_269931D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931D30);
  }
  return result;
}

unint64_t sub_24EAAB368()
{
  unint64_t result = qword_269931D38;
  if (!qword_269931D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931D38);
  }
  return result;
}

unint64_t sub_24EAAB3BC()
{
  unint64_t result = qword_269931D40;
  if (!qword_269931D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931D40);
  }
  return result;
}

unint64_t sub_24EAAB410()
{
  unint64_t result = qword_269931D48;
  if (!qword_269931D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931D48);
  }
  return result;
}

char *AwardToastType.init(from:)(void *a1)
{
  return sub_24EAAB708(a1);
}

char *sub_24EAAB47C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_24EAAB708(a1);
  if (!v2) {
    *a2 = (_BYTE)result;
  }
  return result;
}

uint64_t sub_24EAAB4A8(void *a1)
{
  return AwardToastType.encode(to:)(a1, *v1);
}

uint64_t AwardToastType.hash(into:)()
{
  return sub_24EB3E0A0();
}

uint64_t AwardToastType.hashValue.getter()
{
  return sub_24EB3E0D0();
}

uint64_t sub_24EAAB534(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x656373656C616F63 && a2 == 0xE900000000000064;
  if (v3 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x72616C75676E6973 && a2 == 0xE800000000000000 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6961746E69616DLL && a2 == 0xEE006B6165727453 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7274537472617473 && a2 == 0xEB000000006B6165)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

char *sub_24EAAB708(void *a1)
{
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_269931DB0);
  uint64_t v45 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  v44 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_269931DB8);
  uint64_t v42 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  v43 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269931DC0);
  uint64_t v38 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  MEMORY[0x270FA5388](v4);
  char v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269931DC8);
  uint64_t v37 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269931DD0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  v46 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_24EAAB2C0();
  uint64_t v15 = v47;
  sub_24EB3E0E0();
  if (v15) {
    goto LABEL_7;
  }
  uint64_t v35 = v7;
  v36 = v9;
  uint64_t v16 = v43;
  uint64_t v17 = v44;
  uint64_t v47 = 0;
  uint64_t v18 = v45;
  uint64_t v19 = v11;
  uint64_t v20 = v13;
  uint64_t v21 = sub_24EB3DF60();
  uint64_t v22 = (char *)v21;
  if (*(void *)(v21 + 16) != 1)
  {
    uint64_t v25 = sub_24EB3DE40();
    swift_allocError();
    uint64_t v13 = v22;
    uint64_t v26 = v10;
    char v28 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269931DD8);
    *char v28 = &type metadata for AwardToastType;
    sub_24EB3DED0();
    sub_24EB3DE30();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v25 - 8) + 104))(v28, *MEMORY[0x263F8DCB0], v25);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v26);
LABEL_7:
    uint64_t v29 = (uint64_t)v46;
    goto LABEL_8;
  }
  uint64_t v13 = (char *)*(unsigned __int8 *)(v21 + 32);
  switch(*(unsigned char *)(v21 + 32))
  {
    case 1:
      char v49 = 1;
      sub_24EAAB3BC();
      uint64_t v31 = v47;
      sub_24EB3DEC0();
      if (v31) {
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v38 + 8))(v6, v39);
      goto LABEL_14;
    case 2:
      char v50 = 2;
      sub_24EAAB368();
      uint64_t v32 = v47;
      sub_24EB3DEC0();
      if (v32) {
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v42 + 8))(v16, v40);
      goto LABEL_14;
    case 3:
      char v51 = 3;
      sub_24EAAB314();
      uint64_t v33 = v47;
      sub_24EB3DEC0();
      if (v33) {
        goto LABEL_14;
      }
      (*(void (**)(char *, uint64_t))(v18 + 8))(v17, v41);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v10);
      uint64_t v29 = (uint64_t)v46;
      break;
    default:
      char v48 = 0;
      sub_24EAAB410();
      uint64_t v23 = v36;
      uint64_t v24 = v47;
      sub_24EB3DEC0();
      if (v24)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v10);
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v37 + 8))(v23, v35);
LABEL_14:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v10);
      uint64_t v29 = (uint64_t)v46;
      break;
  }
LABEL_8:
  __swift_destroy_boxed_opaque_existential_1(v29);
  return v13;
}

unint64_t sub_24EAABD44()
{
  unint64_t result = qword_269931D50;
  if (!qword_269931D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931D50);
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardToastType()
{
  return &type metadata for AwardToastType;
}

unsigned char *_s13FitnessAwards14AwardToastTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EAABE7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardToastType.CodingKeys()
{
  return &type metadata for AwardToastType.CodingKeys;
}

ValueMetadata *type metadata accessor for AwardToastType.CoalescedCodingKeys()
{
  return &type metadata for AwardToastType.CoalescedCodingKeys;
}

ValueMetadata *type metadata accessor for AwardToastType.SingularCodingKeys()
{
  return &type metadata for AwardToastType.SingularCodingKeys;
}

ValueMetadata *type metadata accessor for AwardToastType.MaintainStreakCodingKeys()
{
  return &type metadata for AwardToastType.MaintainStreakCodingKeys;
}

ValueMetadata *type metadata accessor for AwardToastType.StartStreakCodingKeys()
{
  return &type metadata for AwardToastType.StartStreakCodingKeys;
}

unint64_t sub_24EAABEF8()
{
  unint64_t result = qword_269931D58;
  if (!qword_269931D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931D58);
  }
  return result;
}

unint64_t sub_24EAABF50()
{
  unint64_t result = qword_269931D60;
  if (!qword_269931D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931D60);
  }
  return result;
}

unint64_t sub_24EAABFA8()
{
  unint64_t result = qword_269931D68;
  if (!qword_269931D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931D68);
  }
  return result;
}

unint64_t sub_24EAAC000()
{
  unint64_t result = qword_269931D70;
  if (!qword_269931D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931D70);
  }
  return result;
}

unint64_t sub_24EAAC058()
{
  unint64_t result = qword_269931D78;
  if (!qword_269931D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931D78);
  }
  return result;
}

unint64_t sub_24EAAC0B0()
{
  unint64_t result = qword_269931D80;
  if (!qword_269931D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931D80);
  }
  return result;
}

unint64_t sub_24EAAC108()
{
  unint64_t result = qword_269931D88;
  if (!qword_269931D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931D88);
  }
  return result;
}

unint64_t sub_24EAAC160()
{
  unint64_t result = qword_269931D90;
  if (!qword_269931D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931D90);
  }
  return result;
}

unint64_t sub_24EAAC1B8()
{
  unint64_t result = qword_269931D98;
  if (!qword_269931D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931D98);
  }
  return result;
}

unint64_t sub_24EAAC210()
{
  unint64_t result = qword_269931DA0;
  if (!qword_269931DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931DA0);
  }
  return result;
}

unint64_t sub_24EAAC268()
{
  unint64_t result = qword_269931DA8;
  if (!qword_269931DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931DA8);
  }
  return result;
}

double AwardImageLayout.size.getter()
{
  return *(double *)v0;
}

FitnessAwards::AwardImageLayout __swiftcall AwardImageLayout.init(size:)(FitnessAwards::AwardImageLayout size)
{
  *unint64_t v1 = size.size.width;
  v1[1] = size.size.height;
  return size;
}

uint64_t sub_24EAAC2E0()
{
  return 1;
}

uint64_t sub_24EAAC2E8()
{
  return sub_24EB3E0D0();
}

uint64_t sub_24EAAC32C()
{
  return sub_24EB3E0A0();
}

uint64_t sub_24EAAC354()
{
  return sub_24EB3E0D0();
}

uint64_t sub_24EAAC398@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EAACC80(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24EAAC3C4(uint64_t a1)
{
  unint64_t v2 = sub_24EAAC5AC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAAC400(uint64_t a1)
{
  unint64_t v2 = sub_24EAAC5AC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AwardImageLayout.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269931DE0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  uint64_t v8 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EAAC5AC();
  sub_24EB3E0F0();
  v10[0] = v7;
  v10[1] = v8;
  type metadata accessor for CGSize();
  sub_24EAAC790(&qword_26B1D3090);
  sub_24EB3DFF0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_24EAAC5AC()
{
  unint64_t result = qword_269931DE8;
  if (!qword_269931DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931DE8);
  }
  return result;
}

uint64_t AwardImageLayout.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269931DF0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EAAC5AC();
  sub_24EB3E0E0();
  if (!v2)
  {
    type metadata accessor for CGSize();
    sub_24EAAC790(&qword_269931DF8);
    sub_24EB3DF50();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_24EAAC790(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CGSize();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EAAC7D4@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return AwardImageLayout.init(from:)(a1, a2);
}

uint64_t sub_24EAAC7EC(void *a1)
{
  return AwardImageLayout.encode(to:)(a1);
}

uint64_t AwardImageLayout.hash(into:)()
{
  return sub_24EB3E0C0();
}

BOOL static AwardImageLayout.== infix(_:_:)(double *a1, double *a2)
{
  return a1[1] == a2[1] && *a1 == *a2;
}

uint64_t AwardImageLayout.hashValue.getter()
{
  return sub_24EB3E0D0();
}

uint64_t sub_24EAAC8CC()
{
  return sub_24EB3E0D0();
}

uint64_t sub_24EAAC920()
{
  return sub_24EAAC994();
}

uint64_t sub_24EAAC928()
{
  return sub_24EB3E0D0();
}

BOOL sub_24EAAC978(double *a1, double *a2)
{
  return a1[1] == a2[1] && *a1 == *a2;
}

uint64_t sub_24EAAC994()
{
  return sub_24EB3E0C0();
}

unint64_t sub_24EAAC9E4()
{
  unint64_t result = qword_269931E00;
  if (!qword_269931E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931E00);
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardImageLayout()
{
  return &type metadata for AwardImageLayout;
}

uint64_t getEnumTagSinglePayload for AwardImageLayout.CodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for AwardImageLayout.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24EAACB38);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24EAACB60()
{
  return 0;
}

ValueMetadata *type metadata accessor for AwardImageLayout.CodingKeys()
{
  return &type metadata for AwardImageLayout.CodingKeys;
}

unint64_t sub_24EAACB7C()
{
  unint64_t result = qword_269931E08;
  if (!qword_269931E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931E08);
  }
  return result;
}

unint64_t sub_24EAACBD4()
{
  unint64_t result = qword_269931E10;
  if (!qword_269931E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931E10);
  }
  return result;
}

unint64_t sub_24EAACC2C()
{
  unint64_t result = qword_269931E18;
  if (!qword_269931E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931E18);
  }
  return result;
}

uint64_t sub_24EAACC80(uint64_t a1, uint64_t a2)
{
  if (a1 == 1702521203 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_24EAACCF8()
{
  return 1702521203;
}

uint64_t AwardProgressView.init(store:descriptionStyle:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  char v7 = *a3;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(void *)a4 = sub_24EAACDA8;
  *(void *)(a4 + 8) = result;
  *(unsigned char *)(a4 + 16) = 0;
  *(unsigned char *)(a4 + 17) = v7;
  return result;
}

uint64_t sub_24EAACD70()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24EAACDA8()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t AwardProgressView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v20 = a1;
  uint64_t State = type metadata accessor for AwardProgressLoadState();
  MEMORY[0x270FA5388](State);
  char v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2F98);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2DA8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)v1;
  uint64_t v11 = *(void *)(v1 + 8);
  int v12 = *(unsigned __int8 *)(v1 + 16);
  int v13 = *(unsigned __int8 *)(v1 + 17);
  sub_24EAAD0C4(*(void *)v1, v11, v12 | (v13 << 8), (uint64_t)v6);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v10;
  *(void *)(v14 + 24) = v11;
  *(unsigned char *)(v14 + 32) = v12;
  *(unsigned char *)(v14 + 33) = v13;
  sub_24EAB1D9C((uint64_t)v6, (uint64_t)v9, &qword_26B1D2F98);
  uint64_t v15 = (uint64_t (**)())&v9[*(int *)(v7 + 36)];
  *uint64_t v15 = sub_24EAB0A98;
  v15[1] = (uint64_t (*)())v14;
  v15[2] = 0;
  v15[3] = 0;
  sub_24EAB0AB0();
  sub_24EAB1E00((uint64_t)v6, &qword_26B1D2F98);
  sub_24EAB0AB0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3030);
  sub_24EAB15E8(&qword_26B1D3028, &qword_26B1D3030);
  sub_24EB3D350();
  sub_24EAB0A90();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v10;
  *(void *)(v16 + 24) = v11;
  *(unsigned char *)(v16 + 32) = v12;
  *(unsigned char *)(v16 + 33) = v13;
  sub_24EAB0AB0();
  sub_24EAB0F40();
  sub_24EAB16E4();
  sub_24EB3D900();
  swift_release();
  sub_24EAB173C((uint64_t)v3);
  return sub_24EAB1E00((uint64_t)v9, &qword_26B1D2DA8);
}

uint64_t sub_24EAAD0C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v58 = a4;
  int v46 = a3;
  int v6 = a3 & 1;
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2E58);
  MEMORY[0x270FA5388](v47);
  char v49 = (_OWORD *)((char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2EF8);
  MEMORY[0x270FA5388](v48);
  uint64_t v45 = (uint64_t)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2F18);
  MEMORY[0x270FA5388](v57);
  char v50 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2F88);
  uint64_t v10 = *(void *)(v56 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v56);
  v52 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  v53 = (char *)&v45 - v13;
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2E40);
  MEMORY[0x270FA5388](v54);
  uint64_t v55 = (uint64_t)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_24EB3D430();
  uint64_t v15 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t State = type metadata accessor for AwardProgressLoadState();
  MEMORY[0x270FA5388](State);
  uint64_t v20 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EAB0AB0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3030);
  sub_24EAB15E8(&qword_26B1D3028, &qword_26B1D3030);
  sub_24EB3D350();
  sub_24EAB0A90();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    uint64_t v30 = sub_24EB3D1F0();
    (*(void (**)(char *, uint64_t))(*(void *)(v30 - 8) + 8))(v20, v30);
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload != 1)
  {
LABEL_6:
    sub_24EB3D530();
    *(void *)&long long v63 = sub_24EB3D760();
    *((void *)&v63 + 1) = v31;
    LOBYTE(v64) = v32 & 1;
    *((void *)&v64 + 1) = v33;
    sub_24EB3D420();
    uint64_t v34 = MEMORY[0x263F1A830];
    uint64_t v35 = MEMORY[0x263F1A820];
    v36 = v52;
    sub_24EB3D910();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v51);
    sub_24EAB1A80(v63, *((uint64_t *)&v63 + 1), v64);
    swift_bridgeObjectRelease();
    uint64_t v37 = v53;
    uint64_t v38 = v56;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v53, v36, v56);
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(v55, v37, v38);
    swift_storeEnumTagMultiPayload();
    *(void *)&long long v63 = v34;
    *((void *)&v63 + 1) = v35;
    swift_getOpaqueTypeConformance2();
    sub_24EAB1150(&qword_26B1D2F10, &qword_26B1D2F18, (void (*)(void))sub_24EAB1114, (void (*)(void))sub_24EAB162C);
    sub_24EB3D590();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v37, v38);
  }
  uint64_t v22 = *(void *)v20;
  uint64_t v23 = *((void *)v20 + 1);
  if (v20[32])
  {
    uint64_t v59 = a1;
    uint64_t v60 = a2;
    BOOL v61 = v6 != 0;
    char v62 = BYTE1(v46);
    sub_24EAAF150(v22, v23 & 1, (uint64_t)&v63);
    uint64_t v24 = v65;
    __int16 v25 = v66;
    char v26 = v67;
    long long v27 = v64;
    char v28 = v49;
    *char v49 = v63;
    v28[1] = v27;
    *((void *)v28 + 4) = v24;
    *((_WORD *)v28 + 20) = v25;
    *((unsigned char *)v28 + 42) = v26;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2EE8);
    sub_24EAB1114();
    sub_24EAB162C();
    uint64_t v29 = (uint64_t)v50;
    sub_24EB3D590();
  }
  else
  {
    BOOL v40 = v6 != 0;
    v43 = v20 + 16;
    uint64_t v42 = *((void *)v20 + 2);
    uint64_t v41 = *((void *)v43 + 1);
    *(void *)&long long v63 = a1;
    *((void *)&v63 + 1) = a2;
    LOBYTE(v64) = v40;
    BYTE1(v64) = BYTE1(v46);
    uint64_t v44 = v45;
    sub_24EAAD8E4(v45, *(double *)&v41, *(double *)&v42);
    sub_24EAB1D9C(v44, (uint64_t)v49, &qword_26B1D2EF8);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2EE8);
    sub_24EAB1114();
    sub_24EAB162C();
    uint64_t v29 = (uint64_t)v50;
    sub_24EB3D590();
    sub_24EAB1A70(v22, v23, v42, v41, 0);
    sub_24EAB1E00(v44, &qword_26B1D2EF8);
  }
  sub_24EAB1D9C(v29, v55, &qword_26B1D2F18);
  swift_storeEnumTagMultiPayload();
  *(void *)&long long v63 = MEMORY[0x263F1A830];
  *((void *)&v63 + 1) = MEMORY[0x263F1A820];
  swift_getOpaqueTypeConformance2();
  sub_24EAB1150(&qword_26B1D2F10, &qword_26B1D2F18, (void (*)(void))sub_24EAB1114, (void (*)(void))sub_24EAB162C);
  sub_24EB3D590();
  return sub_24EAB1E00(v29, &qword_26B1D2F18);
}

uint64_t sub_24EAAD8E4@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t v118 = a1;
  uint64_t v6 = sub_24EB3D950();
  uint64_t v104 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = &v101[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2D60);
  uint64_t v105 = *(void *)(v106 - 8);
  MEMORY[0x270FA5388](v106);
  uint64_t v10 = &v101[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2F78);
  uint64_t v107 = *(void *)(v108 - 8);
  MEMORY[0x270FA5388](v108);
  uint64_t v12 = &v101[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2D98);
  uint64_t v13 = MEMORY[0x270FA5388](v111);
  uint64_t v15 = &v101[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v13);
  v109 = &v101[-v16];
  uint64_t v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2E48);
  MEMORY[0x270FA5388](v115);
  v117 = &v101[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2E28);
  MEMORY[0x270FA5388](v110);
  uint64_t v19 = &v101[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2E98);
  MEMORY[0x270FA5388](v116);
  v112 = &v101[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = sub_24EB3D220();
  MEMORY[0x270FA5388](v21 - 8);
  v113 = &v101[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = sub_24EB3DC60();
  MEMORY[0x270FA5388](v23 - 8);
  v114 = &v101[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v25 = sub_24EB3DC40();
  uint64_t v26 = MEMORY[0x270FA5388](v25 - 8);
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  MEMORY[0x270FA5388](v27);
  switch(*(unsigned char *)(v3 + 17))
  {
    case 1:
      sub_24EB3DC30();
      sub_24EB3DC20();
      if ((~*(void *)&a3 & 0x7FF0000000000000) == 0) {
        goto LABEL_32;
      }
      if (a3 <= -9.22337204e18) {
        goto LABEL_33;
      }
      if (a3 >= 9.22337204e18) {
        goto LABEL_34;
      }
      *(void *)&long long v125 = (uint64_t)a3;
      sub_24EB3DC00();
      sub_24EB3DC20();
      if ((~*(void *)&a2 & 0x7FF0000000000000) == 0) {
        goto LABEL_35;
      }
      if (a2 <= -9.22337204e18) {
        goto LABEL_36;
      }
      if (a2 >= 9.22337204e18) {
        goto LABEL_37;
      }
      *(void *)&long long v125 = (uint64_t)a2;
      sub_24EB3DC00();
      sub_24EB3DC20();
      sub_24EB3DC50();
      type metadata accessor for AwardsLocalizationBundle();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v43 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      sub_24EAB0AB0();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3030);
      sub_24EAB15E8(&qword_26B1D3028, &qword_26B1D3030);
      sub_24EB3D350();
      sub_24EAB0A90();
      swift_getKeyPath();
      sub_24EB3DBA0();
      swift_release();
      swift_release();
      uint64_t v44 = sub_24EB3D720();
      uint64_t v46 = v45;
      v114 = v47;
      uint64_t v49 = v48 & 1;
      uint64_t KeyPath = swift_getKeyPath();
      sub_24EAB0AB0();
      sub_24EB3D350();
      sub_24EAB0A90();
      swift_getKeyPath();
      sub_24EB3DBA0();
      swift_release();
      swift_release();
      LOWORD(v119) = v125;
      uint64_t v51 = sub_24EB1A9A8();
      uint64_t v52 = swift_getKeyPath();
      *(void *)&long long v119 = v44;
      *((void *)&v119 + 1) = v46;
      *(void *)&long long v120 = v49;
      *((void *)&v120 + 1) = v114;
      long long v121 = (unint64_t)KeyPath;
      *(void *)&long long v122 = v52;
      *((void *)&v122 + 1) = v51;
      unsigned int v123 = 0;
      __int16 v124 = 0;
      sub_24EAB1B08(v44, v46, v49);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2DE8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2EA8);
      sub_24EAB1214();
      sub_24EAB14D4();
      sub_24EB3D590();
      unsigned int v53 = v129;
      unsigned __int8 v54 = v130;
      unsigned __int8 v55 = v131;
      long long v56 = v126;
      uint64_t v57 = v117;
      _OWORD *v117 = v125;
      v57[1] = v56;
      long long v58 = v128;
      v57[2] = v127;
      v57[3] = v58;
      *((unsigned char *)v57 + 68) = v54;
      *((_DWORD *)v57 + 16) = v53;
      *((unsigned char *)v57 + 69) = v55;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2E88);
      sub_24EAB11D8();
      sub_24EAB1498();
      sub_24EB3D590();
      sub_24EAB1A80(v44, v46, v49);
      swift_release();
      swift_release();
      goto LABEL_16;
    case 2:
      *(double *)&long long v125 = a3 / a2;
      BYTE8(v125) = 0;
      *(void *)&long long v119 = 0x3FF0000000000000;
      sub_24EAB1CE0();
      sub_24EB3D360();
      (*(void (**)(unsigned char *, void, uint64_t))(v104 + 104))(v8, *MEMORY[0x263F1B388], v6);
      uint64_t v60 = MEMORY[0x253348C10](v8, 0.650980392, 1.0, 0.0, 1.0);
      sub_24EB3D970();
      uint64_t v61 = sub_24EB3D980();
      swift_release();
      *(void *)&long long v125 = v60;
      *((void *)&v125 + 1) = v61;
      *(void *)&long long v126 = 0x4024000000000000;
      sub_24EAB15E8(&qword_26B1D2D58, &qword_26B1D2D60);
      sub_24EAB1444();
      uint64_t v62 = v106;
      sub_24EB3D7B0();
      swift_release();
      swift_release();
      (*(void (**)(unsigned char *, uint64_t))(v105 + 8))(v10, v62);
      sub_24EB3DB00();
      sub_24EB3D380();
      uint64_t v63 = v107;
      uint64_t v64 = v108;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v107 + 16))(v15, v12, v108);
      uint64_t v65 = &v15[*(int *)(v111 + 36)];
      long long v66 = v126;
      *uint64_t v65 = v125;
      v65[1] = v66;
      v65[2] = v127;
      (*(void (**)(unsigned char *, uint64_t))(v63 + 8))(v12, v64);
      char v67 = v109;
      sub_24EAB1D34((uint64_t)v15, (uint64_t)v109);
      sub_24EAB1D9C((uint64_t)v67, (uint64_t)v19, &qword_26B1D2D98);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2DE8);
      sub_24EAB1214();
      sub_24EAB1354();
      v68 = v112;
      sub_24EB3D590();
      sub_24EAB1D9C((uint64_t)v68, (uint64_t)v117, &qword_26B1D2E98);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2E88);
      sub_24EAB11D8();
      sub_24EAB1498();
      sub_24EB3D590();
      sub_24EAB1E00((uint64_t)v68, &qword_26B1D2E98);
      return sub_24EAB1E00((uint64_t)v67, &qword_26B1D2D98);
    case 3:
      double v69 = ceil(a2 - a3);
      if ((~*(void *)&v69 & 0x7FF0000000000000) == 0) {
        goto LABEL_38;
      }
      if (v69 <= -9.22337204e18) {
        goto LABEL_39;
      }
      if (v69 >= 9.22337204e18) {
        goto LABEL_40;
      }
      uint64_t v70 = (uint64_t)v69;
      if ((uint64_t)v69 == 1)
      {
        sub_24EB3DBF0();
        type metadata accessor for AwardsLocalizationBundle();
        uint64_t v71 = swift_getObjCClassFromMetadata();
        v112 = objc_msgSend(self, sel_bundleForClass_, v71);
        sub_24EAB0AB0();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3030);
        sub_24EAB15E8(&qword_26B1D3028, &qword_26B1D3030);
        sub_24EB3D350();
        sub_24EAB0A90();
        swift_getKeyPath();
        sub_24EB3DBA0();
        swift_release();
        swift_release();
        uint64_t v72 = sub_24EB3D720();
        uint64_t v74 = v73;
        v114 = v75;
        uint64_t v77 = v76 & 1;
        uint64_t v78 = swift_getKeyPath();
        sub_24EAB0AB0();
        sub_24EB3D350();
        sub_24EAB0A90();
        swift_getKeyPath();
        sub_24EB3DBA0();
        swift_release();
        swift_release();
        LOWORD(v119) = v125;
        uint64_t v79 = sub_24EB1A9A8();
        uint64_t v80 = swift_getKeyPath();
        unsigned int v81 = sub_24EB3D5D0();
        *(void *)&long long v119 = v72;
        *((void *)&v119 + 1) = v74;
        *(void *)&long long v120 = v77;
        *((void *)&v120 + 1) = v114;
        long long v121 = (unint64_t)v78;
        *(void *)&long long v122 = v80;
        *((void *)&v122 + 1) = v79;
        unsigned int v123 = v81;
        LOBYTE(v124) = 0;
      }
      else
      {
        sub_24EB3DC30();
        sub_24EB3DC20();
        *(void *)&long long v125 = v70;
        sub_24EB3DC00();
        sub_24EB3DC20();
        sub_24EB3DC50();
        type metadata accessor for AwardsLocalizationBundle();
        uint64_t v82 = swift_getObjCClassFromMetadata();
        v112 = objc_msgSend(self, sel_bundleForClass_, v82);
        sub_24EAB0AB0();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3030);
        sub_24EAB15E8(&qword_26B1D3028, &qword_26B1D3030);
        sub_24EB3D350();
        sub_24EAB0A90();
        swift_getKeyPath();
        sub_24EB3DBA0();
        swift_release();
        swift_release();
        uint64_t v83 = sub_24EB3D720();
        uint64_t v85 = v84;
        v114 = v86;
        uint64_t v88 = v87 & 1;
        uint64_t v89 = swift_getKeyPath();
        sub_24EAB0AB0();
        sub_24EB3D350();
        sub_24EAB0A90();
        swift_getKeyPath();
        sub_24EB3DBA0();
        swift_release();
        swift_release();
        LOWORD(v119) = v125;
        uint64_t v90 = sub_24EB1A9A8();
        uint64_t v91 = swift_getKeyPath();
        unsigned int v92 = sub_24EB3D5D0();
        *(void *)&long long v119 = v83;
        *((void *)&v119 + 1) = v85;
        *(void *)&long long v120 = v88;
        *((void *)&v120 + 1) = v114;
        long long v121 = (unint64_t)v89;
        *(void *)&long long v122 = v91;
        *((void *)&v122 + 1) = v90;
        unsigned int v123 = v92;
        LOBYTE(v124) = 1;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2E08);
      sub_24EAB1548();
      sub_24EB3D590();
      LODWORD(v104) = v129;
      LODWORD(v105) = v130;
      long long v119 = v125;
      long long v120 = v126;
      long long v121 = v127;
      long long v122 = v128;
      unsigned int v123 = v129;
      LOBYTE(v124) = v130 != 0;
      HIBYTE(v124) = 1;
      v112 = (unsigned char *)*((void *)&v125 + 1);
      v113 = (unsigned char *)v125;
      uint64_t v110 = *((void *)&v126 + 1);
      uint64_t v111 = v126;
      uint64_t v108 = *((void *)&v127 + 1);
      v109 = (unsigned char *)v127;
      uint64_t v106 = *((void *)&v128 + 1);
      uint64_t v107 = v128;
      sub_24EAB1AA0(v125, *((uint64_t *)&v125 + 1), v126);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2DE8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2EA8);
      sub_24EAB1214();
      sub_24EAB14D4();
      sub_24EB3D590();
      long long v93 = v125;
      long long v94 = v126;
      long long v95 = v127;
      long long v96 = v128;
      unsigned __int8 v97 = v130;
      unsigned int v98 = v129;
      v114 = (unsigned char *)(v129 | ((unint64_t)v130 << 32));
      int v99 = v131;
      v100 = v117;
      _OWORD *v117 = v125;
      v100[1] = v94;
      uint64_t v103 = v94;
      v100[2] = v95;
      v100[3] = v96;
      *((unsigned char *)v100 + 68) = v97;
      *((_DWORD *)v100 + 16) = v98;
      *((unsigned char *)v100 + 69) = v99;
      int v102 = v99;
      swift_storeEnumTagMultiPayload();
      sub_24EAB1B18(v93, *((uint64_t *)&v93 + 1), v94, *((uint64_t *)&v94 + 1), v95, *((uint64_t *)&v95 + 1), v96, *((uint64_t *)&v96 + 1), (uint64_t)v114, v99);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2E88);
      sub_24EAB11D8();
      sub_24EAB1498();
      sub_24EB3D590();
      sub_24EAB1BC8((uint64_t)v113, (uint64_t)v112, v111);
      return sub_24EAB1C30(v93, *((uint64_t *)&v93 + 1), v103, *((uint64_t *)&v94 + 1), v95, *((uint64_t *)&v95 + 1), v96, *((uint64_t *)&v96 + 1), (uint64_t)v114, v102);
    default:
      sub_24EB3DC30();
      sub_24EB3DC20();
      if ((~*(void *)&a3 & 0x7FF0000000000000) == 0)
      {
        __break(1u);
        goto LABEL_27;
      }
      if (a3 <= -9.22337204e18)
      {
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
      if (a3 >= 9.22337204e18)
      {
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
      *(void *)&long long v125 = (uint64_t)a3;
      sub_24EB3DC00();
      sub_24EB3DC20();
      if ((~*(void *)&a2 & 0x7FF0000000000000) == 0)
      {
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
      if (a2 <= -9.22337204e18)
      {
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        JUMPOUT(0x24EAAF140);
      }
      if (a2 >= 9.22337204e18) {
        goto LABEL_31;
      }
      *(void *)&long long v125 = (uint64_t)a2;
      sub_24EB3DC00();
      sub_24EB3DC20();
      sub_24EB3DC50();
      type metadata accessor for AwardsLocalizationBundle();
      uint64_t v28 = swift_getObjCClassFromMetadata();
      id v29 = objc_msgSend(self, sel_bundleForClass_, v28);
      sub_24EAB0AB0();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3030);
      sub_24EAB15E8(&qword_26B1D3028, &qword_26B1D3030);
      sub_24EB3D350();
      sub_24EAB0A90();
      swift_getKeyPath();
      sub_24EB3DBA0();
      swift_release();
      swift_release();
      uint64_t v30 = sub_24EB3D720();
      v109 = v31;
      v114 = v32;
      LODWORD(v28) = v33 & 1;
      uint64_t v34 = swift_getKeyPath();
      sub_24EAB0AB0();
      sub_24EB3D350();
      sub_24EAB0A90();
      swift_getKeyPath();
      sub_24EB3DBA0();
      swift_release();
      swift_release();
      LOWORD(v119) = v125;
      uint64_t v35 = sub_24EB1A9A8();
      uint64_t v36 = swift_getKeyPath();
      uint64_t v37 = v109;
      *(void *)uint64_t v19 = v30;
      *((void *)v19 + 1) = v37;
      LODWORD(v113) = v28;
      v19[16] = v28;
      *((void *)v19 + 3) = v114;
      *((void *)v19 + 4) = v34;
      v19[40] = 1;
      *((void *)v19 + 6) = v36;
      *((void *)v19 + 7) = v35;
      swift_storeEnumTagMultiPayload();
      uint64_t v38 = v30;
      uint64_t v39 = v30;
      uint64_t v40 = (uint64_t)v37;
      sub_24EAB1B08(v38, (uint64_t)v37, v28);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2DE8);
      sub_24EAB1214();
      sub_24EAB1354();
      uint64_t v41 = v112;
      sub_24EB3D590();
      sub_24EAB1D9C((uint64_t)v41, (uint64_t)v117, &qword_26B1D2E98);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2E88);
      sub_24EAB11D8();
      sub_24EAB1498();
      sub_24EB3D590();
      sub_24EAB1E00((uint64_t)v41, &qword_26B1D2E98);
      sub_24EAB1A80(v39, v40, (char)v113);
      swift_release();
      swift_release();
LABEL_16:
      swift_release();
      return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24EAAF150@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v170 = a1;
  uint64_t v6 = sub_24EB3D520();
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = &v153[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  v175 = &v153[-v10];
  uint64_t v11 = sub_24EB3D220();
  MEMORY[0x270FA5388](v11 - 8);
  v173 = &v153[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_24EB3DC60();
  MEMORY[0x270FA5388](v13 - 8);
  v172 = &v153[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_24EB3DC40();
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  v169 = &v153[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = sub_24EB3D950();
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = &v153[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v22 = *(void **)(v3 + 8);
  int v23 = *(unsigned __int8 *)(v3 + 16);
  uint64_t v24 = *(unsigned __int8 *)(v3 + 17);
  if (a2)
  {
    uint64_t v25 = sub_24EB3D990();
  }
  else
  {
    (*(void (**)(unsigned char *, void))(v19 + 104))(v21, *MEMORY[0x263F1B388]);
    uint64_t v25 = MEMORY[0x253348C10](v21, 0.650980392, 1.0, 0.0, 1.0);
  }
  uint64_t v171 = a3;
  uint64_t v176 = v25;
  switch(v24)
  {
    case 1:
    case 3:
      sub_24EB3D9E0();
      uint64_t v26 = sub_24EB3D780();
      uint64_t v28 = v27;
      v160 = v9;
      char v30 = v29 & 1;
      *(void *)&long long v180 = v25;
      uint64_t v31 = sub_24EB3D730();
      uint64_t v33 = v32;
      uint64_t v164 = v34;
      char v36 = v35 & 1;
      sub_24EAB1A80(v26, v28, v30);
      swift_bridgeObjectRelease();
      sub_24EAB0AB0();
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3030);
      uint64_t v174 = sub_24EAB15E8(&qword_26B1D3028, &qword_26B1D3030);
      v175 = (unsigned char *)v37;
      sub_24EB3D350();
      sub_24EAB0A90();
      swift_getKeyPath();
      sub_24EB3DBA0();
      swift_release();
      swift_release();
      LOWORD(v177) = v180;
      sub_24EB1A9A8();
      uint64_t v167 = sub_24EB3D750();
      uint64_t v166 = v38;
      LOBYTE(v26) = v39;
      uint64_t v168 = v40;
      swift_release();
      LODWORD(v165) = v26 & 1;
      sub_24EAB1A80(v31, v33, v36);
      swift_bridgeObjectRelease();
      sub_24EB3DBF0();
      type metadata accessor for AwardsLocalizationBundle();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      uint64_t v159 = ObjCClassFromMetadata;
      id v158 = self;
      id v42 = objc_msgSend(v158, sel_bundleForClass_, ObjCClassFromMetadata);
      sub_24EAB0AB0();
      sub_24EB3D350();
      sub_24EAB0A90();
      swift_getKeyPath();
      sub_24EB3DBA0();
      swift_release();
      swift_release();
      uint64_t v43 = sub_24EB3D720();
      uint64_t v45 = v44;
      LOBYTE(v37) = v46 & 1;
      *(void *)&long long v180 = v176;
      uint64_t v47 = sub_24EB3D730();
      uint64_t v49 = v48;
      uint64_t v157 = v50;
      LOBYTE(v31) = v51 & 1;
      sub_24EAB1A80(v43, v45, v37);
      swift_bridgeObjectRelease();
      sub_24EAB0AB0();
      sub_24EB3D350();
      sub_24EAB0A90();
      swift_getKeyPath();
      sub_24EB3DBA0();
      swift_release();
      swift_release();
      LOWORD(v177) = v180;
      sub_24EB1A9A8();
      uint64_t v163 = sub_24EB3D750();
      uint64_t v162 = v52;
      LOBYTE(v45) = v53;
      uint64_t v164 = v54;
      swift_release();
      LODWORD(v161) = v45 & 1;
      sub_24EAB1A80(v47, v49, v31);
      swift_bridgeObjectRelease();
      sub_24EB3DC30();
      sub_24EB3DC20();
      *(void *)&long long v180 = v170;
      sub_24EB3DC00();
      sub_24EB3DC20();
      sub_24EB3DC50();
      id v55 = objc_msgSend(v158, sel_bundleForClass_, v159);
      sub_24EAB0AB0();
      sub_24EB3D350();
      sub_24EAB0A90();
      swift_getKeyPath();
      sub_24EB3DBA0();
      swift_release();
      swift_release();
      uint64_t v56 = sub_24EB3D720();
      uint64_t v58 = v57;
      LOBYTE(v31) = v59 & 1;
      LODWORD(v180) = sub_24EB3D5D0();
      uint64_t v60 = sub_24EB3D730();
      uint64_t v62 = v61;
      uint64_t v159 = v63;
      LOBYTE(v49) = v64 & 1;
      sub_24EAB1A80(v56, v58, v31);
      swift_bridgeObjectRelease();
      sub_24EAB0AB0();
      sub_24EB3D350();
      sub_24EAB0A90();
      swift_getKeyPath();
      sub_24EB3DBA0();
      swift_release();
      swift_release();
      LOWORD(v177) = v180;
      sub_24EB1A9A8();
      v172 = (unsigned char *)sub_24EB3D750();
      uint64_t v170 = v65;
      LOBYTE(v58) = v66;
      v173 = v67;
      swift_release();
      LODWORD(v169) = v58 & 1;
      sub_24EAB1A80(v60, v62, v49);
      swift_bridgeObjectRelease();
      sub_24EB3D530();
      uint64_t v68 = sub_24EB3D760();
      uint64_t v70 = v69;
      LOBYTE(v37) = v71 & 1;
      LODWORD(v180) = sub_24EB3D5D0();
      uint64_t v72 = sub_24EB3D730();
      uint64_t v74 = v73;
      uint64_t v155 = v75;
      LOBYTE(v60) = v76 & 1;
      sub_24EAB1A80(v68, v70, v37);
      swift_bridgeObjectRelease();
      sub_24EAB0AB0();
      sub_24EB3D350();
      sub_24EAB0A90();
      swift_getKeyPath();
      sub_24EB3DBA0();
      swift_release();
      swift_release();
      LOWORD(v177) = v180;
      sub_24EB1A9A8();
      id v158 = (id)sub_24EB3D750();
      uint64_t v157 = v77;
      char v79 = v78;
      uint64_t v159 = v80;
      swift_release();
      LODWORD(v156) = v79 & 1;
      sub_24EAB1A80(v72, v74, v60);
      swift_bridgeObjectRelease();
      sub_24EB3D510();
      sub_24EB3D500();
      sub_24EB3D4F0();
      sub_24EB3D500();
      sub_24EB3D4F0();
      sub_24EB3D500();
      sub_24EB3D4F0();
      sub_24EB3D500();
      sub_24EB3D4F0();
      sub_24EB3D500();
      sub_24EB3D540();
      uint64_t v81 = sub_24EB3D760();
      uint64_t v83 = v82;
      uint64_t v85 = v84;
      uint64_t v87 = v86 & 1;
      uint64_t KeyPath = swift_getKeyPath();
      *(void *)&long long v177 = v81;
      *((void *)&v177 + 1) = v83;
      *(void *)v178 = v87;
      *(void *)&v178[8] = v85;
      *(void *)&v178[16] = KeyPath;
      *(_WORD *)&v178[24] = 0;
      char v179 = 1;
      sub_24EAB1B08(v81, v83, v87);
      swift_bridgeObjectRetain();
      sub_24EAB1B08(v81, v83, v87);
      swift_bridgeObjectRetain();
      swift_retain();
      sub_24EAB1B08(v81, v83, v87);
      swift_bridgeObjectRetain();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2E68);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2D78);
      sub_24EAB1668();
      sub_24EAB12B4();
      sub_24EB3D590();
      swift_release();
      sub_24EAB1A80(v81, v83, v87);
      swift_bridgeObjectRelease();
      v175 = (unsigned char *)v180;
      uint64_t v89 = v181;
      uint64_t v174 = *((void *)&v180 + 1);
      uint64_t v90 = v182;
      uint64_t v91 = v183;
      __int16 v92 = v184;
      char v93 = v185;
      sub_24EAB1A80((uint64_t)v158, v157, v156);
      swift_bridgeObjectRelease();
      sub_24EAB1A80((uint64_t)v172, v170, (char)v169);
      swift_bridgeObjectRelease();
      sub_24EAB1A80(v163, v162, v161);
      swift_bridgeObjectRelease();
      sub_24EAB1A80(v167, v166, v165);
      swift_bridgeObjectRelease();
      sub_24EAB1A80(v81, v83, v87);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v94 = v81;
      uint64_t v95 = v171;
      sub_24EAB1A80(v94, v83, v87);
      swift_release();
      goto LABEL_10;
    case 2:
      swift_bridgeObjectRelease();
      memset(v178, 0, 25);
      long long v177 = 0u;
      v178[25] = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2D78);
      sub_24EAB12B4();
      sub_24EB3D590();
      long long v145 = v180;
      char v146 = v181;
      uint64_t v147 = v182;
      uint64_t v148 = v183;
      char v149 = HIBYTE(v184);
      uint64_t v150 = v184;
      if (HIBYTE(v184)) {
        __int16 v151 = 256;
      }
      else {
        __int16 v151 = 0;
      }
      long long v177 = v180;
      *(void *)v178 = v181;
      *(void *)&v178[8] = v182;
      *(void *)&v178[16] = v183;
      *(_WORD *)&v178[24] = v151 | v184;
      char v179 = 0;
      sub_24EAB1E5C(v180, *((uint64_t *)&v180 + 1), v181, v182, v183, v184, SHIBYTE(v184));
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2E68);
      sub_24EAB1668();
      sub_24EB3D590();
      swift_release();
      uint64_t v152 = v148;
      uint64_t v95 = v171;
      uint64_t result = sub_24EAB1EAC(v145, *((uint64_t *)&v145 + 1), v146, v147, v152, v150, v149);
      uint64_t v143 = *((void *)&v180 + 1);
      v144 = (unsigned char *)v180;
      uint64_t v89 = v181;
      uint64_t v90 = v182;
      uint64_t v91 = v183;
      __int16 v92 = v184;
      char v93 = v185;
      break;
    default:
      sub_24EB3D9E0();
      uint64_t v96 = sub_24EB3D780();
      uint64_t v98 = v97;
      char v100 = v99 & 1;
      *(void *)&long long v180 = v25;
      uint64_t v168 = sub_24EB3D730();
      uint64_t v167 = v101;
      v169 = v102;
      char v104 = v103 & 1;
      sub_24EAB1A80(v96, v98, v100);
      swift_bridgeObjectRelease();
      sub_24EAB0AB0();
      uint64_t v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3030);
      uint64_t v174 = sub_24EAB15E8(&qword_26B1D3028, &qword_26B1D3030);
      sub_24EB3D350();
      sub_24EAB0A90();
      swift_getKeyPath();
      sub_24EB3DBA0();
      swift_release();
      swift_release();
      LOWORD(v177) = v180;
      sub_24EB1A9A8();
      uint64_t v105 = v168;
      uint64_t v106 = v167;
      uint64_t v165 = sub_24EB3D750();
      uint64_t v164 = v107;
      LODWORD(v159) = v23;
      id v158 = v22;
      char v109 = v108;
      swift_release();
      sub_24EAB1A80(v105, v106, v104);
      swift_bridgeObjectRelease();
      sub_24EB3D530();
      uint64_t v110 = v165;
      uint64_t v111 = v164;
      uint64_t v168 = sub_24EB3D740();
      uint64_t v167 = v112;
      LOBYTE(v96) = v113;
      v169 = v114;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      LODWORD(v166) = v96 & 1;
      sub_24EAB1A80(v110, v111, v109 & 1);
      swift_bridgeObjectRelease();
      sub_24EB3DC30();
      sub_24EB3DC20();
      *(void *)&long long v180 = v170;
      sub_24EB3DC00();
      sub_24EB3DC20();
      sub_24EB3DC50();
      type metadata accessor for AwardsLocalizationBundle();
      uint64_t v115 = swift_getObjCClassFromMetadata();
      id v116 = objc_msgSend(self, sel_bundleForClass_, v115);
      sub_24EAB0AB0();
      sub_24EB3D350();
      sub_24EAB0A90();
      swift_getKeyPath();
      sub_24EB3DBA0();
      swift_release();
      swift_release();
      v172 = (unsigned char *)sub_24EB3D720();
      uint64_t v170 = v117;
      v173 = v118;
      LODWORD(v165) = v119 & 1;
      sub_24EB3D510();
      sub_24EB3D500();
      sub_24EB3D4F0();
      sub_24EB3D500();
      sub_24EB3D4F0();
      sub_24EB3D500();
      sub_24EB3D540();
      uint64_t v162 = sub_24EB3D760();
      uint64_t v161 = v120;
      uint64_t v164 = v121;
      LODWORD(v160) = v122 & 1;
      *(void *)&long long v180 = v176;
      uint64_t v123 = sub_24EB3D730();
      uint64_t v125 = v124;
      LOBYTE(v98) = v126 & 1;
      sub_24EAB0AB0();
      sub_24EB3D350();
      sub_24EAB0A90();
      swift_getKeyPath();
      sub_24EB3DBA0();
      swift_release();
      swift_release();
      LOWORD(v177) = v180;
      sub_24EB1A9A8();
      uint64_t v127 = sub_24EB3D750();
      unsigned int v129 = v128;
      char v131 = v130;
      uint64_t v133 = v132;
      swift_release();
      sub_24EAB1A80(v123, v125, v98);
      swift_bridgeObjectRelease();
      uint64_t v134 = swift_getKeyPath();
      uint64_t v159 = v127;
      *(void *)&long long v177 = v127;
      id v158 = v129;
      *((void *)&v177 + 1) = v129;
      uint64_t v157 = v131 & 1;
      *(void *)v178 = v157;
      uint64_t v163 = v133;
      *(void *)&v178[8] = v133;
      *(void *)&v178[16] = v134;
      uint64_t v156 = v134;
      *(_WORD *)&v178[24] = 1;
      sub_24EAB1B08(v127, (uint64_t)v129, v131 & 1);
      swift_bridgeObjectRetain();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2D78);
      sub_24EAB12B4();
      sub_24EB3D590();
      uint64_t v135 = *((void *)&v180 + 1);
      uint64_t v155 = v180;
      char v137 = v181;
      uint64_t v136 = v182;
      uint64_t v138 = v183;
      uint64_t v139 = v184;
      int v154 = HIBYTE(v184);
      if (HIBYTE(v184)) {
        __int16 v140 = 256;
      }
      else {
        __int16 v140 = 0;
      }
      long long v177 = v180;
      *(void *)v178 = v181;
      *(void *)&v178[8] = v182;
      *(void *)&v178[16] = v183;
      *(_WORD *)&v178[24] = v140 | v184;
      char v179 = 0;
      sub_24EAB1E5C(v180, *((uint64_t *)&v180 + 1), v181, v182, v183, v184, SHIBYTE(v184));
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2E68);
      sub_24EAB1668();
      sub_24EB3D590();
      v175 = (unsigned char *)v180;
      uint64_t v89 = v181;
      uint64_t v174 = *((void *)&v180 + 1);
      uint64_t v90 = v182;
      uint64_t v91 = v183;
      __int16 v92 = v184;
      char v93 = v185;
      sub_24EAB1A80(v162, v161, (char)v160);
      swift_bridgeObjectRelease();
      sub_24EAB1A80((uint64_t)v172, v170, v165);
      swift_bridgeObjectRelease();
      sub_24EAB1A80(v168, v167, v166);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v141 = v138;
      uint64_t v95 = v171;
      sub_24EAB1EAC(v155, v135, v137, v136, v141, v139, v154);
      sub_24EAB1A80(v159, (uint64_t)v158, v157);
      swift_release();
LABEL_10:
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v143 = v174;
      v144 = v175;
      break;
  }
  *(void *)uint64_t v95 = v144;
  *(void *)(v95 + 8) = v143;
  *(void *)(v95 + 16) = v89;
  *(void *)(v95 + 24) = v90;
  *(void *)(v95 + 32) = v91;
  *(_WORD *)(v95 + 40) = v92;
  *(unsigned char *)(v95 + 42) = v93;
  return result;
}

uint64_t sub_24EAB09B8()
{
  return swift_release();
}

uint64_t sub_24EAB0A90()
{
  return swift_release();
}

uint64_t sub_24EAB0A98()
{
  return sub_24EAB0F1C((uint64_t (*)(void, void, void))sub_24EAB09B8);
}

uint64_t sub_24EAB0AB0()
{
  return swift_retain();
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_24EAB0B00()
{
  uint64_t State = type metadata accessor for AwardProgressLoadState();
  MEMORY[0x270FA5388](State);
  uint64_t v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EAB0AB0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3030);
  sub_24EAB15E8(&qword_26B1D3028, &qword_26B1D3030);
  sub_24EB3D350();
  sub_24EAB0A90();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = sub_24EAB173C((uint64_t)v2);
  if (EnumCaseMultiPayload == 2)
  {
    if (qword_26B1D27C0 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_24EB3D2C0();
    __swift_project_value_buffer(v5, (uint64_t)qword_26B1D27A8);
    sub_24EAB0AB0();
    sub_24EAB0AB0();
    uint64_t v6 = sub_24EB3D2A0();
    os_log_type_t v7 = sub_24EB3DD80();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v14 = v13;
      uint64_t v12 = v8;
      *(_DWORD *)uint64_t v8 = 136315138;
      uint64_t v11 = v8 + 4;
      sub_24EAB0AB0();
      sub_24EB3D350();
      sub_24EAB0A90();
      swift_getKeyPath();
      sub_24EB3DBA0();
      swift_release();
      swift_release();
      *(void *)&long long v15 = sub_24EAC5098(v15, *((unint64_t *)&v15 + 1), &v14);
      sub_24EB3DDB0();
      swift_bridgeObjectRelease();
      sub_24EAB0A90();
      sub_24EAB0A90();
      uint64_t v9 = v12;
      _os_log_impl(&dword_24EAA5000, v6, v7, "[AwardProgressView] Load state was reset to idle for  %s", v12, 0xCu);
      uint64_t v10 = v13;
      swift_arrayDestroy();
      MEMORY[0x2533497D0](v10, -1, -1);
      MEMORY[0x2533497D0](v9, -1, -1);
    }
    else
    {
      sub_24EAB0A90();
      sub_24EAB0A90();
    }

    sub_24EAB0AB0();
    sub_24EB3D350();
    sub_24EAB0A90();
    long long v15 = 0u;
    long long v16 = 0u;
    char v17 = 0x80;
    sub_24EB3DBB0();
    return swift_release();
  }
  return result;
}

uint64_t objectdestroy_2Tm()
{
  sub_24EAB0A90();
  return MEMORY[0x270FA0238](v0, 34, 7);
}

uint64_t sub_24EAB0F04()
{
  return sub_24EAB0F1C((uint64_t (*)(void, void, void))sub_24EAB0B00);
}

uint64_t sub_24EAB0F1C(uint64_t (*a1)(void, void, void))
{
  return a1(*(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32) | (*(unsigned __int8 *)(v1 + 33) << 8));
}

unint64_t sub_24EAB0F40()
{
  unint64_t result = qword_26B1D2DA0;
  if (!qword_26B1D2DA0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2DA8);
    sub_24EAB0FBC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2DA0);
  }
  return result;
}

unint64_t sub_24EAB0FBC()
{
  unint64_t result = qword_26B1D2F90;
  if (!qword_26B1D2F90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2F98);
    sub_24EAB1030();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2F90);
  }
  return result;
}

unint64_t sub_24EAB1030()
{
  unint64_t result = qword_26B1D2ED0;
  if (!qword_26B1D2ED0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2ED8);
    swift_getOpaqueTypeConformance2();
    sub_24EAB1150(&qword_26B1D2F10, &qword_26B1D2F18, (void (*)(void))sub_24EAB1114, (void (*)(void))sub_24EAB162C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2ED0);
  }
  return result;
}

uint64_t sub_24EAB1114()
{
  return sub_24EAB1150(&qword_26B1D2EF0, &qword_26B1D2EF8, (void (*)(void))sub_24EAB11D8, (void (*)(void))sub_24EAB1498);
}

uint64_t sub_24EAB1150(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EAB11D8()
{
  return sub_24EAB1150(&qword_26B1D2E90, &qword_26B1D2E98, (void (*)(void))sub_24EAB1214, (void (*)(void))sub_24EAB1354);
}

unint64_t sub_24EAB1214()
{
  unint64_t result = qword_26B1D2DE0;
  if (!qword_26B1D2DE0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2DE8);
    sub_24EAB12B4();
    sub_24EAB15E8(&qword_26B1D2F50, &qword_26B1D2F58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2DE0);
  }
  return result;
}

unint64_t sub_24EAB12B4()
{
  unint64_t result = qword_26B1D2D70;
  if (!qword_26B1D2D70)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2D78);
    sub_24EAB15E8(&qword_26B1D2F40, &qword_26B1D2F48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2D70);
  }
  return result;
}

unint64_t sub_24EAB1354()
{
  unint64_t result = qword_26B1D2D90;
  if (!qword_26B1D2D90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2D98);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2D60);
    sub_24EAB15E8(&qword_26B1D2D58, &qword_26B1D2D60);
    sub_24EAB1444();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2D90);
  }
  return result;
}

unint64_t sub_24EAB1444()
{
  unint64_t result = qword_26B1D2CC8;
  if (!qword_26B1D2CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2CC8);
  }
  return result;
}

uint64_t sub_24EAB1498()
{
  return sub_24EAB1150(&qword_26B1D2E80, &qword_26B1D2E88, (void (*)(void))sub_24EAB1214, (void (*)(void))sub_24EAB14D4);
}

unint64_t sub_24EAB14D4()
{
  unint64_t result = qword_26B1D2EA0;
  if (!qword_26B1D2EA0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2EA8);
    sub_24EAB1548();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2EA0);
  }
  return result;
}

unint64_t sub_24EAB1548()
{
  unint64_t result = qword_26B1D2E00;
  if (!qword_26B1D2E00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2E08);
    sub_24EAB1214();
    sub_24EAB15E8(&qword_26B1D2F30, &qword_26B1D2F38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2E00);
  }
  return result;
}

uint64_t sub_24EAB15E8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EAB162C()
{
  return sub_24EAB1150(&qword_26B1D2EE0, &qword_26B1D2EE8, (void (*)(void))sub_24EAB1668, (void (*)(void))sub_24EAB12B4);
}

unint64_t sub_24EAB1668()
{
  unint64_t result = qword_26B1D2E60;
  if (!qword_26B1D2E60)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2E68);
    sub_24EAB12B4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2E60);
  }
  return result;
}

unint64_t sub_24EAB16E4()
{
  unint64_t result = qword_26B1D2B38;
  if (!qword_26B1D2B38)
  {
    type metadata accessor for AwardProgressLoadState();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2B38);
  }
  return result;
}

uint64_t sub_24EAB173C(uint64_t a1)
{
  uint64_t State = type metadata accessor for AwardProgressLoadState();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(State - 8) + 8))(a1, State);
  return a1;
}

uint64_t sub_24EAB1798()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24EAB17BC()
{
  return sub_24EB3D830();
}

uint64_t destroy for AwardProgressView()
{
  return sub_24EAB0A90();
}

uint64_t _s13FitnessAwards17AwardProgressViewVwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_24EAB0AB0();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 17) = *((unsigned char *)a2 + 17);
  return a1;
}

uint64_t assignWithCopy for AwardProgressView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_24EAB0AB0();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  sub_24EAB0A90();
  *(unsigned char *)(a1 + 17) = *((unsigned char *)a2 + 17);
  return a1;
}

__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for AwardProgressView(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  sub_24EAB0A90();
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

uint64_t getEnumTagSinglePayload for AwardProgressView(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 18)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AwardProgressView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 18) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardProgressView()
{
  return &type metadata for AwardProgressView;
}

uint64_t sub_24EAB19BC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_24EAB1A70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) == 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24EAB1A80(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24EAB1AA0(uint64_t a1, uint64_t a2, char a3)
{
  sub_24EAB1B08(a1, a2, a3 & 1);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return swift_retain();
}

uint64_t sub_24EAB1B08(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_24EAB1B18(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  if (a10)
  {
    return sub_24EAB1AA0(a1, a2, a3);
  }
  else
  {
    sub_24EAB1B08(a1, a2, a3 & 1);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    return swift_retain();
  }
}

uint64_t sub_24EAB1BC8(uint64_t a1, uint64_t a2, char a3)
{
  sub_24EAB1A80(a1, a2, a3 & 1);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_24EAB1C30(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  if (a10)
  {
    return sub_24EAB1BC8(a1, a2, a3);
  }
  else
  {
    sub_24EAB1A80(a1, a2, a3 & 1);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
}

unint64_t sub_24EAB1CE0()
{
  unint64_t result = qword_269931E20;
  if (!qword_269931E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931E20);
  }
  return result;
}

uint64_t sub_24EAB1D34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2D98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EAB1D9C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24EAB1E00(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24EAB1E5C(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if ((a7 & 1) == 0)
  {
    sub_24EAB1B08(result, a2, a3 & 1);
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_24EAB1EAC(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if ((a7 & 1) == 0)
  {
    sub_24EAB1A80(result, a2, a3 & 1);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_24EAB1EFC(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E61436863746566;
      break;
    case 2:
    case 8:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    case 4:
      unint64_t result = 0xD00000000000002ALL;
      break;
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    case 6:
      unint64_t result = 0xD000000000000016;
      break;
    case 7:
      unint64_t result = 0xD000000000000010;
      break;
    case 9:
      unint64_t result = 0x746F4E7473616F74;
      break;
    case 10:
      unint64_t result = 0x6572507473616F74;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24EAB2058()
{
  return sub_24EAB1EFC(*v0);
}

uint64_t sub_24EAB2060@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EAB5E68(a1, a2);
  *a3 = result;
  return result;
}

void sub_24EAB2088(unsigned char *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_24EAB2094(uint64_t a1)
{
  unint64_t v2 = sub_24EAB3350();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAB20D0(uint64_t a1)
{
  unint64_t v2 = sub_24EAB3350();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EAB210C(uint64_t a1)
{
  unint64_t v2 = sub_24EAB383C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAB2148(uint64_t a1)
{
  unint64_t v2 = sub_24EAB383C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EAB2184(uint64_t a1)
{
  unint64_t v2 = sub_24EAB37E8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAB21C0(uint64_t a1)
{
  unint64_t v2 = sub_24EAB37E8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EAB21FC(uint64_t a1)
{
  unint64_t v2 = sub_24EAB3794();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAB2238(uint64_t a1)
{
  unint64_t v2 = sub_24EAB3794();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EAB2280(uint64_t a1)
{
  unint64_t v2 = sub_24EAB36EC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAB22BC(uint64_t a1)
{
  unint64_t v2 = sub_24EAB36EC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EAB22F8(uint64_t a1)
{
  unint64_t v2 = sub_24EAB3644();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAB2334(uint64_t a1)
{
  unint64_t v2 = sub_24EAB3644();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EAB2370(uint64_t a1)
{
  unint64_t v2 = sub_24EAB3548();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAB23AC(uint64_t a1)
{
  unint64_t v2 = sub_24EAB3548();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EAB23E8(uint64_t a1)
{
  unint64_t v2 = sub_24EAB359C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAB2424(uint64_t a1)
{
  unint64_t v2 = sub_24EAB359C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EAB2460(uint64_t a1)
{
  unint64_t v2 = sub_24EAB344C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAB249C(uint64_t a1)
{
  unint64_t v2 = sub_24EAB344C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EAB24D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EAB62B8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24EAB2504(uint64_t a1)
{
  unint64_t v2 = sub_24EAB34A0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAB2540(uint64_t a1)
{
  unint64_t v2 = sub_24EAB34A0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EAB257C(uint64_t a1)
{
  unint64_t v2 = sub_24EAB33F8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAB25B8(uint64_t a1)
{
  unint64_t v2 = sub_24EAB33F8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EAB25F4(uint64_t a1)
{
  unint64_t v2 = sub_24EAB33A4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAB2630(uint64_t a1)
{
  unint64_t v2 = sub_24EAB33A4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AwardToastPresentationAction.encode(to:)(void *a1)
{
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3178);
  uint64_t v45 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v44 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3170);
  uint64_t v48 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v47 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3190);
  uint64_t v51 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  uint64_t v50 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3180);
  uint64_t v74 = *(void *)(v6 - 8);
  uint64_t v75 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v73 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3198);
  uint64_t v54 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  char v53 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3188);
  uint64_t v71 = *(void *)(v9 - 8);
  uint64_t v72 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v70 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D31B8);
  uint64_t v68 = *(void *)(v11 - 8);
  uint64_t v69 = v11;
  MEMORY[0x270FA5388](v11);
  char v67 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D31B0);
  uint64_t v65 = *(void *)(v66 - 8);
  MEMORY[0x270FA5388](v66);
  char v64 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3168);
  uint64_t v57 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58);
  uint64_t v56 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D31A8);
  uint64_t v60 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  char v59 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3160);
  uint64_t v62 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  char v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D31A0);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v79 = v18;
  uint64_t v80 = v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = *v1;
  uint64_t v22 = v1[2];
  uint64_t v23 = v1[3];
  uint64_t v76 = v1[1];
  uint64_t v77 = v22;
  uint64_t v24 = v1[4];
  uint64_t v25 = v1[5];
  unsigned int v26 = *((unsigned __int8 *)v1 + 48);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EAB3350();
  char v78 = v21;
  sub_24EB3E0F0();
  switch(v26 >> 5)
  {
    case 1u:
      LOBYTE(v81) = 4;
      sub_24EAB3644();
      uint64_t v27 = v67;
      char v29 = v78;
      uint64_t v28 = v79;
      sub_24EB3DF70();
      uint64_t v81 = v88;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3040);
      sub_24EAB4AD4(&qword_26B1D3048, (void (*)(void))sub_24EAB3698);
      uint64_t v30 = v69;
      sub_24EB3DFF0();
      uint64_t v31 = v68;
      goto LABEL_6;
    case 2u:
      LOBYTE(v81) = 5;
      sub_24EAB359C();
      uint64_t v27 = v70;
      char v29 = v78;
      uint64_t v28 = v79;
      sub_24EB3DF70();
      uint64_t v81 = v88;
      uint64_t v82 = v76;
      uint64_t v83 = v77;
      uint64_t v84 = v23;
      uint64_t v85 = v24;
      uint64_t v86 = v25;
      char v87 = v26 & 0x1F;
      sub_24EAB35F0();
      uint64_t v30 = v72;
      sub_24EB3DFF0();
      uint64_t v31 = v71;
      goto LABEL_6;
    case 3u:
      LOBYTE(v81) = 7;
      sub_24EAB34A0();
      uint64_t v27 = v73;
      char v29 = v78;
      uint64_t v28 = v79;
      sub_24EB3DF70();
      uint64_t v81 = v88;
      uint64_t v82 = v76;
      LOBYTE(v83) = v77;
      sub_24EAB34F4();
      uint64_t v30 = v75;
      sub_24EB3DFF0();
      uint64_t v31 = v74;
      goto LABEL_6;
    case 4u:
      if (v77 | v76 | v88 | v23 | v24 | v25 || v26 != 128)
      {
        uint64_t v35 = v77 | v76 | v23 | v24 | v25;
        if (v26 == 128 && v88 == 1 && !v35)
        {
          LOBYTE(v81) = 1;
          sub_24EAB37E8();
          char v36 = v59;
          uint64_t v38 = v78;
          uint64_t v37 = v79;
          sub_24EB3DF70();
          (*(void (**)(char *, uint64_t))(v60 + 8))(v36, v61);
        }
        else if (v26 == 128 && v88 == 2 && !v35)
        {
          LOBYTE(v81) = 2;
          sub_24EAB3794();
          char v39 = v56;
          uint64_t v38 = v78;
          uint64_t v37 = v79;
          sub_24EB3DF70();
          (*(void (**)(char *, uint64_t))(v57 + 8))(v39, v58);
        }
        else if (v26 == 128 && v88 == 3 && !v35)
        {
          LOBYTE(v81) = 6;
          sub_24EAB3548();
          uint64_t v40 = v53;
          uint64_t v38 = v78;
          uint64_t v37 = v79;
          sub_24EB3DF70();
          (*(void (**)(char *, uint64_t))(v54 + 8))(v40, v55);
        }
        else if (v26 == 128 && v88 == 4 && !v35)
        {
          LOBYTE(v81) = 8;
          sub_24EAB344C();
          uint64_t v41 = v50;
          uint64_t v38 = v78;
          uint64_t v37 = v79;
          sub_24EB3DF70();
          (*(void (**)(char *, uint64_t))(v51 + 8))(v41, v52);
        }
        else if (v26 == 128 && v88 == 5 && !v35)
        {
          LOBYTE(v81) = 9;
          sub_24EAB33F8();
          id v42 = v47;
          uint64_t v38 = v78;
          uint64_t v37 = v79;
          sub_24EB3DF70();
          (*(void (**)(char *, uint64_t))(v48 + 8))(v42, v49);
        }
        else
        {
          LOBYTE(v81) = 10;
          sub_24EAB33A4();
          uint64_t v43 = v44;
          uint64_t v38 = v78;
          uint64_t v37 = v79;
          sub_24EB3DF70();
          (*(void (**)(char *, uint64_t))(v45 + 8))(v43, v46);
        }
        return (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v38, v37);
      }
      else
      {
        LOBYTE(v81) = 0;
        sub_24EAB383C();
        uint64_t v33 = v78;
        uint64_t v34 = v79;
        sub_24EB3DF70();
        (*(void (**)(char *, uint64_t))(v62 + 8))(v17, v63);
        return (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v33, v34);
      }
    default:
      LOBYTE(v81) = 3;
      sub_24EAB36EC();
      uint64_t v27 = v64;
      char v29 = v78;
      uint64_t v28 = v79;
      sub_24EB3DF70();
      uint64_t v81 = v88;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3070);
      sub_24EAB4BA4(&qword_26B1D3078, (void (*)(void))sub_24EAB3740);
      uint64_t v30 = v66;
      sub_24EB3DFF0();
      uint64_t v31 = v65;
LABEL_6:
      (*(void (**)(char *, uint64_t))(v31 + 8))(v27, v30);
      return (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v29, v28);
  }
}

unint64_t sub_24EAB3350()
{
  unint64_t result = qword_26B1D2C38;
  if (!qword_26B1D2C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2C38);
  }
  return result;
}

unint64_t sub_24EAB33A4()
{
  unint64_t result = qword_269931E28;
  if (!qword_269931E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931E28);
  }
  return result;
}

unint64_t sub_24EAB33F8()
{
  unint64_t result = qword_26B1D2BD0;
  if (!qword_26B1D2BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2BD0);
  }
  return result;
}

unint64_t sub_24EAB344C()
{
  unint64_t result = qword_269931E30;
  if (!qword_269931E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931E30);
  }
  return result;
}

unint64_t sub_24EAB34A0()
{
  unint64_t result = qword_269931E38;
  if (!qword_269931E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931E38);
  }
  return result;
}

unint64_t sub_24EAB34F4()
{
  unint64_t result = qword_269931E40;
  if (!qword_269931E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931E40);
  }
  return result;
}

unint64_t sub_24EAB3548()
{
  unint64_t result = qword_269931E48;
  if (!qword_269931E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931E48);
  }
  return result;
}

unint64_t sub_24EAB359C()
{
  unint64_t result = qword_269931E50;
  if (!qword_269931E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931E50);
  }
  return result;
}

unint64_t sub_24EAB35F0()
{
  unint64_t result = qword_269931E58;
  if (!qword_269931E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931E58);
  }
  return result;
}

unint64_t sub_24EAB3644()
{
  unint64_t result = qword_26B1D2C80;
  if (!qword_26B1D2C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2C80);
  }
  return result;
}

unint64_t sub_24EAB3698()
{
  unint64_t result = qword_26B1D2B98;
  if (!qword_26B1D2B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2B98);
  }
  return result;
}

unint64_t sub_24EAB36EC()
{
  unint64_t result = qword_26B1D2C68;
  if (!qword_26B1D2C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2C68);
  }
  return result;
}

unint64_t sub_24EAB3740()
{
  unint64_t result = qword_26B1D2810;
  if (!qword_26B1D2810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2810);
  }
  return result;
}

unint64_t sub_24EAB3794()
{
  unint64_t result = qword_26B1D2BB8;
  if (!qword_26B1D2BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2BB8);
  }
  return result;
}

unint64_t sub_24EAB37E8()
{
  unint64_t result = qword_26B1D2C50;
  if (!qword_26B1D2C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2C50);
  }
  return result;
}

unint64_t sub_24EAB383C()
{
  unint64_t result = qword_26B1D2BA0;
  if (!qword_26B1D2BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2BA0);
  }
  return result;
}

uint64_t AwardToastPresentationAction.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v96 = a2;
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_269931E60);
  uint64_t v101 = *(void *)(v86 - 8);
  MEMORY[0x270FA5388](v86);
  uint64_t v95 = (char *)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_269931E68);
  uint64_t v84 = *(void *)(v85 - 8);
  MEMORY[0x270FA5388](v85);
  char v100 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_269931E70);
  uint64_t v81 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  char v93 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_269931E78);
  uint64_t v90 = *(void *)(v83 - 8);
  MEMORY[0x270FA5388](v83);
  uint64_t v94 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_269931E80);
  uint64_t v79 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80);
  __int16 v92 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_269931E88);
  uint64_t v89 = *(void *)(v76 - 8);
  MEMORY[0x270FA5388](v76);
  char v99 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_269931E90);
  uint64_t v88 = *(void *)(v78 - 8);
  MEMORY[0x270FA5388](v78);
  uint64_t v98 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_269931E98);
  uint64_t v87 = *(void *)(v77 - 8);
  MEMORY[0x270FA5388](v77);
  uint64_t v97 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_269931EA0);
  uint64_t v74 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  uint64_t v91 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_269931EA8);
  uint64_t v72 = *(void *)(v73 - 8);
  MEMORY[0x270FA5388](v73);
  uint64_t v13 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269931EB0);
  uint64_t v71 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269931EB8);
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1[3];
  int v102 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v21);
  sub_24EAB3350();
  uint64_t v22 = v109;
  sub_24EB3E0E0();
  if (v22) {
    goto LABEL_25;
  }
  uint64_t v68 = v16;
  uint64_t v67 = v14;
  uint64_t v69 = v13;
  uint64_t v24 = v97;
  uint64_t v23 = v98;
  uint64_t v25 = v99;
  unsigned int v26 = v100;
  uint64_t v70 = 0;
  uint64_t v27 = v101;
  uint64_t v109 = v18;
  uint64_t v28 = sub_24EB3DF60();
  if (*(void *)(v28 + 16) != 1)
  {
    uint64_t v37 = sub_24EB3DE40();
    swift_allocError();
    char v39 = v38;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269931DD8);
    *char v39 = &type metadata for AwardToastPresentationAction;
    sub_24EB3DED0();
    sub_24EB3DE30();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v37 - 8) + 104))(v39, *MEMORY[0x263F8DCB0], v37);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v109 + 8))(v20, v17);
LABEL_25:
    uint64_t v62 = (uint64_t)v102;
    return __swift_destroy_boxed_opaque_existential_1(v62);
  }
  switch(*(unsigned char *)(v28 + 32))
  {
    case 1:
      LOBYTE(v103) = 1;
      sub_24EAB37E8();
      uint64_t v40 = v69;
      uint64_t v41 = v70;
      sub_24EB3DEC0();
      if (v41) {
        goto LABEL_24;
      }
      (*(void (**)(char *, uint64_t))(v72 + 8))(v40, v73);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v109 + 8))(v20, v17);
      uint64_t v32 = 0;
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      long long v35 = 0uLL;
      char v36 = 0x80;
      uint64_t v31 = 1;
      goto LABEL_31;
    case 2:
      LOBYTE(v103) = 2;
      sub_24EAB3794();
      id v42 = v91;
      uint64_t v43 = v70;
      sub_24EB3DEC0();
      if (v43) {
        goto LABEL_24;
      }
      (*(void (**)(char *, uint64_t))(v74 + 8))(v42, v75);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v109 + 8))(v20, v17);
      uint64_t v32 = 0;
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      long long v35 = 0uLL;
      char v36 = 0x80;
      uint64_t v31 = 2;
      goto LABEL_31;
    case 3:
      LOBYTE(v103) = 3;
      sub_24EAB36EC();
      uint64_t v44 = v70;
      sub_24EB3DEC0();
      if (v44) {
        goto LABEL_24;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3070);
      sub_24EAB4BA4(&qword_269931EE0, (void (*)(void))sub_24EAB4C14);
      uint64_t v45 = v77;
      sub_24EB3DF50();
      (*(void (**)(char *, uint64_t))(v87 + 8))(v24, v45);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v109 + 8))(v20, v17);
      uint64_t v32 = 0;
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      char v36 = 0;
      uint64_t v31 = v103;
      long long v35 = 0uLL;
      goto LABEL_31;
    case 4:
      LOBYTE(v103) = 4;
      sub_24EAB3644();
      uint64_t v46 = v23;
      uint64_t v47 = v70;
      sub_24EB3DEC0();
      if (v47) {
        goto LABEL_24;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3040);
      sub_24EAB4AD4(&qword_269931ED0, (void (*)(void))sub_24EAB4B50);
      uint64_t v48 = v78;
      sub_24EB3DF50();
      (*(void (**)(char *, uint64_t))(v88 + 8))(v46, v48);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v109 + 8))(v20, v17);
      uint64_t v32 = 0;
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      uint64_t v31 = v103;
      long long v35 = 0uLL;
      char v36 = 32;
      goto LABEL_31;
    case 5:
      LOBYTE(v103) = 5;
      sub_24EAB359C();
      uint64_t v49 = v25;
      uint64_t v50 = v70;
      sub_24EB3DEC0();
      if (v50) {
        goto LABEL_24;
      }
      sub_24EAB4A80();
      uint64_t v51 = v76;
      sub_24EB3DF50();
      uint64_t v52 = v109;
      (*(void (**)(char *, uint64_t))(v89 + 8))(v49, v51);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v20, v17);
      uint64_t v31 = v103;
      uint64_t v32 = v104;
      uint64_t v33 = v105;
      long long v35 = v106;
      uint64_t v34 = v107;
      char v36 = v108 | 0x40;
      goto LABEL_31;
    case 6:
      LOBYTE(v103) = 6;
      sub_24EAB3548();
      char v53 = v92;
      uint64_t v54 = v70;
      sub_24EB3DEC0();
      if (v54) {
        goto LABEL_24;
      }
      (*(void (**)(char *, uint64_t))(v79 + 8))(v53, v80);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v109 + 8))(v20, v17);
      uint64_t v32 = 0;
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      long long v35 = 0uLL;
      char v36 = 0x80;
      uint64_t v31 = 3;
      goto LABEL_31;
    case 7:
      LOBYTE(v103) = 7;
      sub_24EAB34A0();
      uint64_t v55 = v94;
      uint64_t v56 = v70;
      sub_24EB3DEC0();
      if (v56) {
        goto LABEL_24;
      }
      sub_24EAB4A2C();
      uint64_t v57 = v83;
      sub_24EB3DF50();
      uint64_t v58 = v109;
      (*(void (**)(char *, uint64_t))(v90 + 8))(v55, v57);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v20, v17);
      uint64_t v34 = 0;
      uint64_t v31 = v103;
      uint64_t v32 = v104;
      long long v35 = 0uLL;
      char v36 = 96;
      uint64_t v33 = v105;
      goto LABEL_31;
    case 8:
      LOBYTE(v103) = 8;
      sub_24EAB344C();
      char v59 = v93;
      uint64_t v60 = v70;
      sub_24EB3DEC0();
      if (v60) {
        goto LABEL_24;
      }
      (*(void (**)(char *, uint64_t))(v81 + 8))(v59, v82);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v109 + 8))(v20, v17);
      uint64_t v32 = 0;
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      long long v35 = 0uLL;
      char v36 = 0x80;
      uint64_t v31 = 4;
      goto LABEL_31;
    case 9:
      LOBYTE(v103) = 9;
      sub_24EAB33F8();
      uint64_t v61 = v70;
      sub_24EB3DEC0();
      if (v61) {
        goto LABEL_24;
      }
      (*(void (**)(char *, uint64_t))(v84 + 8))(v26, v85);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v109 + 8))(v20, v17);
      uint64_t v32 = 0;
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      long long v35 = 0uLL;
      char v36 = 0x80;
      uint64_t v31 = 5;
      goto LABEL_31;
    case 0xA:
      LOBYTE(v103) = 10;
      sub_24EAB33A4();
      char v64 = v95;
      uint64_t v65 = v70;
      sub_24EB3DEC0();
      if (v65)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v109 + 8))(v20, v17);
        uint64_t v62 = (uint64_t)v102;
        return __swift_destroy_boxed_opaque_existential_1(v62);
      }
      (*(void (**)(char *, uint64_t))(v27 + 8))(v64, v86);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v109 + 8))(v20, v17);
      uint64_t v32 = 0;
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      long long v35 = 0uLL;
      char v36 = 0x80;
      uint64_t v31 = 6;
      uint64_t v62 = (uint64_t)v102;
      uint64_t v66 = v96;
      goto LABEL_32;
    default:
      LOBYTE(v103) = 0;
      sub_24EAB383C();
      char v29 = v68;
      uint64_t v30 = v70;
      sub_24EB3DEC0();
      if (v30)
      {
LABEL_24:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v109 + 8))(v20, v17);
        goto LABEL_25;
      }
      (*(void (**)(char *, uint64_t))(v71 + 8))(v29, v67);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v109 + 8))(v20, v17);
      uint64_t v31 = 0;
      uint64_t v32 = 0;
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      long long v35 = 0uLL;
      char v36 = 0x80;
LABEL_31:
      uint64_t v62 = (uint64_t)v102;
      uint64_t v66 = v96;
LABEL_32:
      *(void *)uint64_t v66 = v31;
      *(void *)(v66 + 8) = v32;
      *(void *)(v66 + 16) = v33;
      *(_OWORD *)(v66 + 24) = v35;
      *(void *)(v66 + 40) = v34;
      *(unsigned char *)(v66 + 48) = v36;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v62);
}

unint64_t sub_24EAB4A2C()
{
  unint64_t result = qword_269931EC0;
  if (!qword_269931EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931EC0);
  }
  return result;
}

unint64_t sub_24EAB4A80()
{
  unint64_t result = qword_269931EC8;
  if (!qword_269931EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931EC8);
  }
  return result;
}

uint64_t sub_24EAB4AD4(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D3040);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24EAB4B50()
{
  unint64_t result = qword_269931ED8;
  if (!qword_269931ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931ED8);
  }
  return result;
}

uint64_t sub_24EAB4BA4(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D3070);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24EAB4C14()
{
  unint64_t result = qword_269931EE8;
  if (!qword_269931EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931EE8);
  }
  return result;
}

uint64_t sub_24EAB4C68@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AwardToastPresentationAction.init(from:)(a1, a2);
}

uint64_t sub_24EAB4C80(void *a1)
{
  return AwardToastPresentationAction.encode(to:)(a1);
}

uint64_t initializeBufferWithCopyOfBuffer for AwardCanvasPlaceholder(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t sub_24EAB4CCC(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  switch(a7 >> 5)
  {
    case 0:
    case 1:
      goto LABEL_3;
    case 2:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_3:
      unint64_t result = swift_bridgeObjectRetain();
      break;
    case 3:
      unint64_t result = sub_24EAB4DA4(result, a2, a3);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24EAB4DA4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1 || a3 == 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for AwardToastPresentationAction(uint64_t a1)
{
  return sub_24EAB4DDC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48));
}

uint64_t sub_24EAB4DDC(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  switch(a7 >> 5)
  {
    case 0:
    case 1:
      goto LABEL_3;
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_3:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 3:
      uint64_t result = sub_24EAA8E28(result, a2, a3);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t initializeWithCopy for AwardToastPresentationAction(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  unsigned __int8 v9 = *(unsigned char *)(a2 + 48);
  sub_24EAB4CCC(*(void *)a2, v4, v5, v6, v7, v8, v9);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v9;
  return a1;
}

uint64_t assignWithCopy for AwardToastPresentationAction(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  unsigned __int8 v9 = *(unsigned char *)(a2 + 48);
  sub_24EAB4CCC(*(void *)a2, v4, v5, v6, v7, v8, v9);
  uint64_t v10 = *(void *)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 40);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  unsigned __int8 v16 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v9;
  sub_24EAB4DDC(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AwardToastPresentationAction(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 48);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  unsigned __int8 v11 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v3;
  sub_24EAB4DDC(v4, v6, v5, v7, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for AwardToastPresentationAction(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3C && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 60);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 48) >> 5) & 0xFFFFFFC7 | (8 * ((*(unsigned __int8 *)(a1 + 48) >> 2) & 7))) ^ 0x3F;
  if (v3 >= 0x3B) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for AwardToastPresentationAction(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3B)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 - 60;
    if (a3 >= 0x3C) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3C) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2)
    {
      *(_OWORD *)(result + 16) = 0u;
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)__n128 result = 0u;
      *(unsigned char *)(result + 48) = 4 * (((-a2 >> 3) & 7) - 8 * a2);
    }
  }
  return result;
}

uint64_t sub_24EAB50E4(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 48);
  int v2 = (char)v1;
  unsigned int v3 = v1 >> 5;
  if (v2 >= 0) {
    return v3;
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_24EAB5104(uint64_t result)
{
  *(unsigned char *)(result + 48) &= 0x1Fu;
  return result;
}

uint64_t sub_24EAB5114(uint64_t result, unsigned int a2)
{
  if (a2 < 4)
  {
    *(unsigned char *)(result + 48) = *(unsigned char *)(result + 48) & 3 | (32 * a2);
  }
  else
  {
    *(void *)__n128 result = a2 - 4;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)(result + 40) = 0;
    *(unsigned char *)(result + 48) = 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardToastPresentationAction()
{
  return &type metadata for AwardToastPresentationAction;
}

uint64_t getEnumTagSinglePayload for AwardToastPresentationAction.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AwardToastPresentationAction.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *__n128 result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EAB52BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardToastPresentationAction.CodingKeys()
{
  return &type metadata for AwardToastPresentationAction.CodingKeys;
}

ValueMetadata *type metadata accessor for AwardToastPresentationAction.FetchAwardToastKindCodingKeys()
{
  return &type metadata for AwardToastPresentationAction.FetchAwardToastKindCodingKeys;
}

ValueMetadata *type metadata accessor for AwardToastPresentationAction.FetchCandidatesCodingKeys()
{
  return &type metadata for AwardToastPresentationAction.FetchCandidatesCodingKeys;
}

ValueMetadata *type metadata accessor for AwardToastPresentationAction.PresentToastIfNeededCodingKeys()
{
  return &type metadata for AwardToastPresentationAction.PresentToastIfNeededCodingKeys;
}

ValueMetadata *type metadata accessor for AwardToastPresentationAction.ProgressUpdatesFetchedCodingKeys()
{
  return &type metadata for AwardToastPresentationAction.ProgressUpdatesFetchedCodingKeys;
}

ValueMetadata *type metadata accessor for AwardToastPresentationAction.SuggestedWorkoutsSectionDescriptorsUpdatedCodingKeys()
{
  return &type metadata for AwardToastPresentationAction.SuggestedWorkoutsSectionDescriptorsUpdatedCodingKeys;
}

ValueMetadata *type metadata accessor for AwardToastPresentationAction.ToastDetailFetchedCodingKeys()
{
  return &type metadata for AwardToastPresentationAction.ToastDetailFetchedCodingKeys;
}

ValueMetadata *type metadata accessor for AwardToastPresentationAction.ToastDetailFetchFailedCodingKeys()
{
  return &type metadata for AwardToastPresentationAction.ToastDetailFetchFailedCodingKeys;
}

unsigned char *_s13FitnessAwards28AwardToastPresentationActionO32ProgressUpdatesFetchedCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24EAB5408);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardToastPresentationAction.ToastKindFetchedCodingKeys()
{
  return &type metadata for AwardToastPresentationAction.ToastKindFetchedCodingKeys;
}

ValueMetadata *type metadata accessor for AwardToastPresentationAction.ToastKindFetchFailedCodingKeys()
{
  return &type metadata for AwardToastPresentationAction.ToastKindFetchFailedCodingKeys;
}

ValueMetadata *type metadata accessor for AwardToastPresentationAction.ToastNotFoundCodingKeys()
{
  return &type metadata for AwardToastPresentationAction.ToastNotFoundCodingKeys;
}

ValueMetadata *type metadata accessor for AwardToastPresentationAction.ToastPresentedCodingKeys()
{
  return &type metadata for AwardToastPresentationAction.ToastPresentedCodingKeys;
}

unint64_t sub_24EAB5474()
{
  unint64_t result = qword_269931EF0;
  if (!qword_269931EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931EF0);
  }
  return result;
}

unint64_t sub_24EAB54CC()
{
  unint64_t result = qword_269931EF8;
  if (!qword_269931EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931EF8);
  }
  return result;
}

unint64_t sub_24EAB5524()
{
  unint64_t result = qword_269931F00;
  if (!qword_269931F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931F00);
  }
  return result;
}

unint64_t sub_24EAB557C()
{
  unint64_t result = qword_269931F08;
  if (!qword_269931F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931F08);
  }
  return result;
}

unint64_t sub_24EAB55D4()
{
  unint64_t result = qword_269931F10;
  if (!qword_269931F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931F10);
  }
  return result;
}

unint64_t sub_24EAB562C()
{
  unint64_t result = qword_26B1D2BB0;
  if (!qword_26B1D2BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2BB0);
  }
  return result;
}

unint64_t sub_24EAB5684()
{
  unint64_t result = qword_26B1D2BA8;
  if (!qword_26B1D2BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2BA8);
  }
  return result;
}

unint64_t sub_24EAB56DC()
{
  unint64_t result = qword_26B1D2C60;
  if (!qword_26B1D2C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2C60);
  }
  return result;
}

unint64_t sub_24EAB5734()
{
  unint64_t result = qword_26B1D2C58;
  if (!qword_26B1D2C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2C58);
  }
  return result;
}

unint64_t sub_24EAB578C()
{
  unint64_t result = qword_26B1D2BC8;
  if (!qword_26B1D2BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2BC8);
  }
  return result;
}

unint64_t sub_24EAB57E4()
{
  unint64_t result = qword_26B1D2BC0;
  if (!qword_26B1D2BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2BC0);
  }
  return result;
}

unint64_t sub_24EAB583C()
{
  unint64_t result = qword_26B1D2C78;
  if (!qword_26B1D2C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2C78);
  }
  return result;
}

unint64_t sub_24EAB5894()
{
  unint64_t result = qword_26B1D2C70;
  if (!qword_26B1D2C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2C70);
  }
  return result;
}

unint64_t sub_24EAB58EC()
{
  unint64_t result = qword_26B1D2C90;
  if (!qword_26B1D2C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2C90);
  }
  return result;
}

unint64_t sub_24EAB5944()
{
  unint64_t result = qword_26B1D2C88;
  if (!qword_26B1D2C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2C88);
  }
  return result;
}

unint64_t sub_24EAB599C()
{
  unint64_t result = qword_26B1D2C10;
  if (!qword_26B1D2C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2C10);
  }
  return result;
}

unint64_t sub_24EAB59F4()
{
  unint64_t result = qword_26B1D2C08;
  if (!qword_26B1D2C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2C08);
  }
  return result;
}

unint64_t sub_24EAB5A4C()
{
  unint64_t result = qword_26B1D2C30;
  if (!qword_26B1D2C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2C30);
  }
  return result;
}

unint64_t sub_24EAB5AA4()
{
  unint64_t result = qword_26B1D2C28;
  if (!qword_26B1D2C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2C28);
  }
  return result;
}

unint64_t sub_24EAB5AFC()
{
  unint64_t result = qword_26B1D2C00;
  if (!qword_26B1D2C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2C00);
  }
  return result;
}

unint64_t sub_24EAB5B54()
{
  unint64_t result = qword_26B1D2BF8;
  if (!qword_26B1D2BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2BF8);
  }
  return result;
}

unint64_t sub_24EAB5BAC()
{
  unint64_t result = qword_26B1D2C20;
  if (!qword_26B1D2C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2C20);
  }
  return result;
}

unint64_t sub_24EAB5C04()
{
  unint64_t result = qword_26B1D2C18;
  if (!qword_26B1D2C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2C18);
  }
  return result;
}

unint64_t sub_24EAB5C5C()
{
  unint64_t result = qword_26B1D2BE0;
  if (!qword_26B1D2BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2BE0);
  }
  return result;
}

unint64_t sub_24EAB5CB4()
{
  unint64_t result = qword_26B1D2BD8;
  if (!qword_26B1D2BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2BD8);
  }
  return result;
}

unint64_t sub_24EAB5D0C()
{
  unint64_t result = qword_26B1D2BF0;
  if (!qword_26B1D2BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2BF0);
  }
  return result;
}

unint64_t sub_24EAB5D64()
{
  unint64_t result = qword_26B1D2BE8;
  if (!qword_26B1D2BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2BE8);
  }
  return result;
}

unint64_t sub_24EAB5DBC()
{
  unint64_t result = qword_26B1D2C48;
  if (!qword_26B1D2C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2C48);
  }
  return result;
}

unint64_t sub_24EAB5E14()
{
  unint64_t result = qword_26B1D2C40;
  if (!qword_26B1D2C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2C40);
  }
  return result;
}

uint64_t sub_24EAB5E68(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x800000024EB4A4A0 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E61436863746566 && a2 == 0xEF73657461646964 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000024EB4A4C0 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000024EB4A4E0 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000002ALL && a2 == 0x800000024EB4A500 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000024EB4A530 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000024EB4A550 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024EB4A570 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000024EB4A590 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x746F4E7473616F74 && a2 == 0xED0000646E756F46 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6572507473616F74 && a2 == 0xEE006465746E6573)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    char v5 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    if (v5) {
      return 10;
    }
    else {
      return 11;
    }
  }
}

uint64_t sub_24EAB62B8(uint64_t a1, uint64_t a2)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_24EAB6328()
{
  return 12383;
}

_OWORD *TVAwardHeaderLayout.init(awardImageLayout:descriptionMaxWidth:height:imageToTextSpacing:progressToDescriptionSpacing:titleToProgressSpacing:)@<X0>(_OWORD *result@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>, double a7@<D4>)
{
  *(_OWORD *)a2 = *result;
  *(double *)(a2 + 16) = a3;
  *(double *)(a2 + 24) = a4;
  *(double *)(a2 + 32) = a5;
  *(double *)(a2 + 40) = a6;
  *(double *)(a2 + 48) = a7;
  return result;
}

unint64_t sub_24EAB6354(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000013;
      break;
    case 2:
      unint64_t result = 0x746867696568;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24EAB6408()
{
  return sub_24EAB6354(*v0);
}

uint64_t sub_24EAB6410@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EAB719C(a1, a2);
  *a3 = result;
  return result;
}

void sub_24EAB6438(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_24EAB6444(uint64_t a1)
{
  unint64_t v2 = sub_24EAB6754();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAB6480(uint64_t a1)
{
  unint64_t v2 = sub_24EAB6754();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TVAwardHeaderLayout.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269931F18);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  BOOL v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v9 = v1[1];
  uint64_t v11 = v1[2];
  uint64_t v10 = v1[3];
  uint64_t v13 = v1[4];
  uint64_t v12 = v1[5];
  uint64_t v14 = v1[6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EAB6754();
  sub_24EB3E0F0();
  v16[0] = v8;
  v16[1] = v9;
  char v17 = 0;
  sub_24EAB67A8();
  sub_24EB3DFF0();
  if (!v2)
  {
    v16[0] = v11;
    char v17 = 1;
    sub_24EAB67FC();
    sub_24EB3DFF0();
    v16[0] = v10;
    char v17 = 2;
    sub_24EB3DFF0();
    v16[0] = v13;
    char v17 = 3;
    sub_24EB3DFF0();
    v16[0] = v12;
    char v17 = 4;
    sub_24EB3DFF0();
    v16[0] = v14;
    char v17 = 5;
    sub_24EB3DFF0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_24EAB6754()
{
  unint64_t result = qword_269931F20;
  if (!qword_269931F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931F20);
  }
  return result;
}

unint64_t sub_24EAB67A8()
{
  unint64_t result = qword_269931F28;
  if (!qword_269931F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931F28);
  }
  return result;
}

unint64_t sub_24EAB67FC()
{
  unint64_t result = qword_269931F30;
  if (!qword_269931F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931F30);
  }
  return result;
}

uint64_t TVAwardHeaderLayout.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269931F38);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EAB6754();
  sub_24EB3E0E0();
  if (!v2)
  {
    char v18 = 0;
    sub_24EAB6B38();
    sub_24EB3DF50();
    uint64_t v9 = v17[0];
    uint64_t v10 = v17[1];
    char v18 = 1;
    sub_24EAB6B8C();
    sub_24EB3DF50();
    uint64_t v11 = v17[0];
    char v18 = 2;
    sub_24EB3DF50();
    uint64_t v12 = v17[0];
    char v18 = 3;
    sub_24EB3DF50();
    uint64_t v13 = v17[0];
    char v18 = 4;
    sub_24EB3DF50();
    uint64_t v15 = v17[0];
    char v18 = 5;
    sub_24EB3DF50();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v16 = v17[0];
    *a2 = v9;
    a2[1] = v10;
    a2[2] = v11;
    a2[3] = v12;
    a2[4] = v13;
    a2[5] = v15;
    a2[6] = v16;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_24EAB6B38()
{
  unint64_t result = qword_269931F40;
  if (!qword_269931F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931F40);
  }
  return result;
}

unint64_t sub_24EAB6B8C()
{
  unint64_t result = qword_269931F48;
  if (!qword_269931F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931F48);
  }
  return result;
}

uint64_t sub_24EAB6BE0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return TVAwardHeaderLayout.init(from:)(a1, a2);
}

uint64_t sub_24EAB6BF8(void *a1)
{
  return TVAwardHeaderLayout.encode(to:)(a1);
}

uint64_t TVAwardHeaderLayout.hash(into:)()
{
  return sub_24EB3E0C0();
}

uint64_t TVAwardHeaderLayout.hashValue.getter()
{
  return sub_24EB3E0D0();
}

uint64_t sub_24EAB6CFC()
{
  return sub_24EB3E0D0();
}

uint64_t sub_24EAB6D5C()
{
  return sub_24EB3E0D0();
}

BOOL _s13FitnessAwards19TVAwardHeaderLayoutV2eeoiySbAC_ACtFZ_0(float64x2_t *a1, float64x2_t *a2)
{
  BOOL result = 0;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*a1, *a2), (int32x4_t)vceqq_f64(a1[1], a2[1]))), 0xFuLL))) & 1) != 0&& a1[2].f64[0] == a2[2].f64[0]&& a1[2].f64[1] == a2[2].f64[1])
  {
    return a1[3].f64[0] == a2[3].f64[0];
  }
  return result;
}

unint64_t sub_24EAB6E28()
{
  unint64_t result = qword_269931F50;
  if (!qword_269931F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931F50);
  }
  return result;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for TVAwardHeaderLayout(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 56)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TVAwardHeaderLayout(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 56) = v3;
  return result;
}

ValueMetadata *type metadata accessor for TVAwardHeaderLayout()
{
  return &type metadata for TVAwardHeaderLayout;
}

uint64_t getEnumTagSinglePayload for TVAwardHeaderLayout.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TVAwardHeaderLayout.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EAB705CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TVAwardHeaderLayout.CodingKeys()
{
  return &type metadata for TVAwardHeaderLayout.CodingKeys;
}

unint64_t sub_24EAB7098()
{
  unint64_t result = qword_269931F58;
  if (!qword_269931F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931F58);
  }
  return result;
}

unint64_t sub_24EAB70F0()
{
  unint64_t result = qword_269931F60;
  if (!qword_269931F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931F60);
  }
  return result;
}

unint64_t sub_24EAB7148()
{
  unint64_t result = qword_269931F68;
  if (!qword_269931F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269931F68);
  }
  return result;
}

uint64_t sub_24EAB719C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x800000024EB4A5B0 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000024EB4A5D0 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746867696568 && a2 == 0xE600000000000000 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000024EB4A5F0 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x800000024EB4A610 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000024EB4A630)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v5 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    if (v5) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_24EAB73E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, a1, a2);
}

uint64_t sub_24EAB7420()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269932000);
  sub_24EAB15E8(&qword_269932008, &qword_269932000);
  return sub_24EB3D350();
}

uint64_t AwardHeaderView.init(store:awardImageViewBuilder:awardProgressViewBuilder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(void *)a7 = sub_24EAACDA8;
  *(void *)(a7 + 8) = result;
  *(unsigned char *)(a7 + 16) = 0;
  *(void *)(a7 + 24) = a3;
  *(void *)(a7 + 32) = a4;
  *(void *)(a7 + 40) = a5;
  *(void *)(a7 + 48) = a6;
  return result;
}

uint64_t sub_24EAB7538()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t AwardHeaderView.body.getter@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v45 = a1[2];
  sub_24EB3D3E0();
  uint64_t v43 = a1[4];
  uint64_t v70 = v43;
  uint64_t v71 = MEMORY[0x263F198F8];
  uint64_t v47 = MEMORY[0x263F18E48];
  swift_getWitnessTable();
  uint64_t v42 = MEMORY[0x263F1AF48];
  swift_getOpaqueTypeMetadata2();
  *(void *)&long long v72 = sub_24EB3D3E0();
  *((void *)&v72 + 1) = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269931F70);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2DD8);
  uint64_t v3 = a1[3];
  uint64_t v46 = a1[5];
  uint64_t v44 = v3;
  swift_getOpaqueTypeMetadata2();
  sub_24EB3D3E0();
  swift_getTupleTypeMetadata2();
  sub_24EB3DB20();
  sub_24EB3DDA0();
  swift_getTupleTypeMetadata();
  sub_24EB3DB20();
  swift_getWitnessTable();
  uint64_t v37 = sub_24EB3DA60();
  sub_24EB3D3E0();
  sub_24EB3D3E0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_269931F78);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2DD8);
  sub_24EB3D3E0();
  swift_getTupleTypeMetadata2();
  sub_24EB3DB20();
  sub_24EB3DDA0();
  swift_getTupleTypeMetadata();
  sub_24EB3DB20();
  swift_getWitnessTable();
  uint64_t v39 = sub_24EB3DA60();
  uint64_t v38 = sub_24EB3D3E0();
  uint64_t v34 = sub_24EB3D5A0();
  v32[1] = MEMORY[0x263F1B6E0];
  uint64_t WitnessTable = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  *(void *)&long long v72 = MEMORY[0x263F1B6B0];
  uint64_t v4 = v43;
  uint64_t v66 = v43;
  uint64_t v67 = MEMORY[0x263F18860];
  uint64_t v64 = swift_getWitnessTable();
  uint64_t v65 = MEMORY[0x263F18C10];
  swift_getWitnessTable();
  *((void *)&v72 + 1) = sub_24EB3DA60();
  *(void *)&long long v73 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2DD8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_269931F78);
  swift_getTupleTypeMetadata2();
  sub_24EB3DB20();
  sub_24EB3DDA0();
  swift_getTupleTypeMetadata2();
  sub_24EB3DB20();
  swift_getWitnessTable();
  uint64_t v68 = sub_24EB3DA60();
  uint64_t v69 = swift_getWitnessTable();
  *((void *)&v73 + 1) = swift_getOpaqueTypeMetadata2();
  *(void *)&long long v74 = MEMORY[0x263F1B6B0];
  swift_getTupleTypeMetadata();
  sub_24EB3DB20();
  swift_getWitnessTable();
  v32[2] = sub_24EB3DA40();
  v32[3] = sub_24EB3D5A0();
  v32[4] = sub_24EB3D5A0();
  uint64_t v5 = sub_24EB3D9C0();
  uint64_t v35 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  BOOL v7 = (char *)v32 - v6;
  uint64_t v8 = sub_24EB3D3E0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v33 = (char *)v32 - v13;
  long long v14 = v40[1];
  long long v72 = *v40;
  long long v73 = v14;
  long long v74 = v40[2];
  uint64_t v75 = *((void *)v40 + 6);
  uint64_t v48 = v45;
  uint64_t v49 = v44;
  uint64_t v50 = v4;
  uint64_t v51 = v46;
  uint64_t v52 = &v72;
  uint64_t v15 = swift_getWitnessTable();
  uint64_t v16 = WitnessTable;
  uint64_t v62 = WitnessTable;
  uint64_t v63 = MEMORY[0x263F18860];
  uint64_t v17 = swift_getWitnessTable();
  uint64_t v60 = v15;
  uint64_t v61 = v17;
  uint64_t v18 = swift_getWitnessTable();
  uint64_t v68 = v39;
  uint64_t v69 = v16;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v20 = swift_getWitnessTable();
  uint64_t v58 = OpaqueTypeConformance2;
  uint64_t v59 = v20;
  uint64_t v21 = swift_getWitnessTable();
  uint64_t v56 = v18;
  uint64_t v57 = v21;
  uint64_t v22 = swift_getWitnessTable();
  sub_24EB3D9B0();
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = v44;
  *(void *)(v23 + 16) = v45;
  *(void *)(v23 + 24) = v24;
  uint64_t v25 = v46;
  *(void *)(v23 + 32) = v43;
  *(void *)(v23 + 40) = v25;
  long long v26 = v73;
  *(_OWORD *)(v23 + 48) = v72;
  *(_OWORD *)(v23 + 64) = v26;
  *(_OWORD *)(v23 + 80) = v74;
  *(void *)(v23 + 96) = v75;
  sub_24EAB9FFC((uint64_t)&v72);
  uint64_t v55 = v22;
  uint64_t v27 = swift_getWitnessTable();
  sub_24EB3D8F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v7, v5);
  uint64_t v53 = v27;
  uint64_t v54 = MEMORY[0x263F1A240];
  swift_getWitnessTable();
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  char v29 = v33;
  v28(v33, v12, v8);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v9 + 8);
  v30(v12, v8);
  v28(v41, v29, v8);
  return ((uint64_t (*)(char *, uint64_t))v30)(v29, v8);
}

uint64_t sub_24EAB7DE4@<X0>(void (*a1)(char *, uint64_t)@<X0>, void (*a2)(void, void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v134 = a3;
  uint64_t v135 = a5;
  uint64_t v145 = a4;
  char v146 = a2;
  uint64_t v136 = a1;
  uint64_t v142 = a6;
  uint64_t v7 = MEMORY[0x263F1B6B0];
  *(void *)&long long v184 = MEMORY[0x263F1B6B0];
  sub_24EB3D3E0();
  uint64_t v8 = sub_24EB3D3E0();
  uint64_t v192 = a4;
  uint64_t v193 = MEMORY[0x263F18860];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v191 = MEMORY[0x263F18C10];
  swift_getWitnessTable();
  *((void *)&v184 + 1) = sub_24EB3DA60();
  *(void *)&long long v185 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2DD8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_269931F78);
  sub_24EB3D3E0();
  swift_getTupleTypeMetadata2();
  sub_24EB3DB20();
  sub_24EB3DDA0();
  swift_getTupleTypeMetadata2();
  sub_24EB3DB20();
  swift_getWitnessTable();
  uint64_t v180 = sub_24EB3DA60();
  uint64_t v181 = swift_getWitnessTable();
  *((void *)&v185 + 1) = swift_getOpaqueTypeMetadata2();
  *(void *)&long long v186 = v7;
  swift_getTupleTypeMetadata();
  sub_24EB3DB20();
  swift_getWitnessTable();
  uint64_t v9 = sub_24EB3DA40();
  uint64_t v120 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  char v119 = (char *)&v118 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v125 = (char *)&v118 - v12;
  *(void *)&long long v184 = v8;
  *((void *)&v184 + 1) = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_269931F78);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2DD8);
  swift_getTupleTypeMetadata2();
  sub_24EB3DB20();
  *(void *)&long long v185 = sub_24EB3DDA0();
  *((void *)&v185 + 1) = v13;
  swift_getTupleTypeMetadata();
  sub_24EB3DB20();
  swift_getWitnessTable();
  uint64_t v14 = sub_24EB3DA60();
  uint64_t v15 = swift_getWitnessTable();
  *(void *)&long long v184 = v14;
  *((void *)&v184 + 1) = v15;
  uint64_t v143 = v15;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v140 = v9;
  uint64_t v17 = sub_24EB3D5A0();
  uint64_t v126 = *(void *)(v17 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v128 = (uint64_t)&v118 - v19;
  uint64_t v124 = OpaqueTypeMetadata2;
  uint64_t v127 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v118 = (char *)&v118 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v123 = (char *)&v118 - v22;
  uint64_t v147 = v14;
  uint64_t v23 = sub_24EB3D3E0();
  uint64_t v122 = *(void *)(v23 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v121 = (char *)&v118 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  char v130 = (char *)&v118 - v26;
  uint64_t v27 = sub_24EB3D3E0();
  uint64_t v188 = v145;
  uint64_t v189 = MEMORY[0x263F198F8];
  uint64_t v28 = swift_getWitnessTable();
  *(void *)&long long v184 = v27;
  *((void *)&v184 + 1) = v28;
  swift_getOpaqueTypeMetadata2();
  *(void *)&long long v184 = sub_24EB3D3E0();
  *((void *)&v184 + 1) = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269931F70);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2DD8);
  uint64_t v30 = v134;
  uint64_t v31 = v135;
  uint64_t v180 = v134;
  uint64_t v181 = v135;
  swift_getOpaqueTypeMetadata2();
  sub_24EB3D3E0();
  swift_getTupleTypeMetadata2();
  sub_24EB3DB20();
  *(void *)&long long v185 = sub_24EB3DDA0();
  *((void *)&v185 + 1) = v29;
  swift_getTupleTypeMetadata();
  sub_24EB3DB20();
  swift_getWitnessTable();
  uint64_t v32 = sub_24EB3DA60();
  uint64_t v144 = v23;
  uint64_t v33 = sub_24EB3D5A0();
  uint64_t v131 = *(void *)(v33 - 8);
  uint64_t v34 = MEMORY[0x270FA5388](v33);
  uint64_t v133 = (uint64_t)&v118 - v35;
  uint64_t v129 = *(void *)(v32 - 8);
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  uint64_t v38 = (char *)&v118 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v36);
  uint64_t v132 = (char *)&v118 - v39;
  uint64_t v40 = (int *)type metadata accessor for AwardHeaderLayout();
  MEMORY[0x270FA5388](v40);
  uint64_t v42 = (char *)&v118 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = v17;
  uint64_t v43 = sub_24EB3D5A0();
  uint64_t v138 = *(void *)(v43 - 8);
  uint64_t v139 = v43;
  MEMORY[0x270FA5388](v43);
  char v137 = (char *)&v118 - v44;
  long long v45 = *((_OWORD *)v136 + 1);
  long long v184 = *(_OWORD *)v136;
  long long v185 = v45;
  long long v186 = *((_OWORD *)v136 + 2);
  uint64_t v46 = v136;
  uint64_t v187 = *((void *)v136 + 6);
  uint64_t v180 = (uint64_t)v146;
  uint64_t v181 = v30;
  uint64_t v182 = v145;
  uint64_t v183 = v31;
  uint64_t v47 = (void *)type metadata accessor for AwardHeaderView();
  sub_24EAB7420();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  LODWORD(v29) = v42[v40[11]];
  sub_24EABF598((uint64_t)v42);
  if (v29 != 1)
  {
    uint64_t v145 = v32;
    char v146 = (void (*)(void, void))v33;
    long long v61 = *((_OWORD *)v46 + 1);
    long long v184 = *(_OWORD *)v46;
    long long v185 = v61;
    long long v186 = *((_OWORD *)v46 + 2);
    uint64_t v187 = *((void *)v46 + 6);
    sub_24EAB7420();
    swift_getKeyPath();
    sub_24EB3DBA0();
    swift_release();
    swift_release();
    int v62 = v42[v40[12]];
    sub_24EABF598((uint64_t)v42);
    if (v62 == 1)
    {
      long long v63 = *((_OWORD *)v46 + 1);
      long long v184 = *(_OWORD *)v46;
      long long v185 = v63;
      long long v186 = *((_OWORD *)v46 + 2);
      uint64_t v187 = *((void *)v46 + 6);
      uint64_t v64 = v121;
      sub_24EAB948C((uint64_t)v47, v121);
      uint64_t v60 = v143;
      uint64_t v65 = v144;
      uint64_t v158 = v143;
      uint64_t v159 = MEMORY[0x263F18860];
      uint64_t v66 = swift_getWitnessTable();
      uint64_t v67 = v122;
      uint64_t v68 = *(void (**)(char *, char *, uint64_t))(v122 + 16);
      uint64_t v69 = v130;
      v68(v130, v64, v65);
      uint64_t v70 = *(void (**)(char *, uint64_t))(v67 + 8);
      v70(v64, v65);
      uint64_t v136 = v70;
      v68(v64, v69, v65);
      uint64_t v71 = v145;
      uint64_t v72 = swift_getWitnessTable();
      sub_24EB16834((uint64_t)v64, v71, v65);
      v70(v64, v65);
      uint64_t v156 = v72;
      uint64_t v157 = v66;
      uint64_t v73 = (uint64_t)v146;
      swift_getWitnessTable();
      *(void *)&long long v184 = v147;
      *((void *)&v184 + 1) = v60;
      uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
      uint64_t v75 = swift_getWitnessTable();
      uint64_t v154 = OpaqueTypeConformance2;
      uint64_t v155 = v75;
      swift_getWitnessTable();
      uint64_t v76 = v133;
      uint64_t v59 = v137;
      sub_24EB1673C(v133, v73);
      (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v76, v73);
      uint64_t v77 = v130;
      uint64_t v78 = v65;
    }
    else
    {
      long long v79 = *((_OWORD *)v46 + 1);
      long long v184 = *(_OWORD *)v46;
      long long v185 = v79;
      long long v186 = *((_OWORD *)v46 + 2);
      uint64_t v187 = *((void *)v46 + 6);
      sub_24EAB7420();
      swift_getKeyPath();
      sub_24EB3DBA0();
      swift_release();
      swift_release();
      int v80 = v42[v40[10]];
      sub_24EABF598((uint64_t)v42);
      if (v80 == 1)
      {
        long long v81 = *((_OWORD *)v46 + 1);
        long long v184 = *(_OWORD *)v46;
        long long v185 = v81;
        long long v186 = *((_OWORD *)v46 + 2);
        uint64_t v187 = *((void *)v46 + 6);
        uint64_t v82 = v118;
        sub_24EAB9814((uint64_t)v47, v118, 0.6);
        uint64_t v60 = v143;
        *(void *)&long long v184 = v147;
        *((void *)&v184 + 1) = v143;
        uint64_t v134 = swift_getOpaqueTypeConformance2();
        uint64_t v83 = v127;
        uint64_t v84 = *(void (**)(char *, char *, uint64_t))(v127 + 16);
        uint64_t v86 = v123;
        uint64_t v85 = v124;
        v84(v123, v82, v124);
        uint64_t v87 = *(void (**)(char *, uint64_t))(v83 + 8);
        v87(v82, v85);
        uint64_t v127 = v83 + 8;
        uint64_t v136 = v87;
        v84(v82, v86, v85);
        uint64_t v135 = swift_getWitnessTable();
        uint64_t v88 = v134;
        sub_24EB1673C((uint64_t)v82, v85);
        v87(v82, v85);
        uint64_t v89 = swift_getWitnessTable();
        uint64_t v164 = v60;
        uint64_t v165 = MEMORY[0x263F18860];
        uint64_t v90 = swift_getWitnessTable();
        uint64_t v162 = v89;
        uint64_t v163 = v90;
        uint64_t v91 = v146;
        uint64_t v133 = swift_getWitnessTable();
        uint64_t v160 = v88;
        uint64_t v161 = v135;
        uint64_t v92 = (uint64_t)v91;
        uint64_t v93 = v141;
        swift_getWitnessTable();
        uint64_t v59 = v137;
        uint64_t v94 = v128;
        sub_24EB16834(v128, v92, v93);
        (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v94, v93);
        v136(v123, v85);
        goto LABEL_9;
      }
      long long v95 = *((_OWORD *)v46 + 1);
      long long v184 = *(_OWORD *)v46;
      long long v185 = v95;
      long long v186 = *((_OWORD *)v46 + 2);
      uint64_t v187 = *((void *)v46 + 6);
      uint64_t v96 = v119;
      sub_24EAB9BB4(v47, v119);
      uint64_t v97 = v140;
      uint64_t v135 = swift_getWitnessTable();
      uint64_t v98 = v120;
      char v99 = *(void (**)(char *, char *, uint64_t))(v120 + 16);
      char v100 = v125;
      v99(v125, v96, v97);
      uint64_t v101 = *(void (**)(char *, uint64_t))(v98 + 8);
      v101(v96, v97);
      uint64_t v136 = v101;
      v99(v96, v100, v97);
      uint64_t v60 = v143;
      *(void *)&long long v184 = v147;
      *((void *)&v184 + 1) = v143;
      uint64_t v102 = swift_getOpaqueTypeConformance2();
      uint64_t v103 = v128;
      sub_24EB16834((uint64_t)v96, v124, v97);
      v101(v96, v97);
      uint64_t v104 = swift_getWitnessTable();
      uint64_t v178 = v60;
      uint64_t v179 = MEMORY[0x263F18860];
      uint64_t v105 = swift_getWitnessTable();
      uint64_t v176 = v104;
      uint64_t v177 = v105;
      long long v106 = v146;
      uint64_t v134 = swift_getWitnessTable();
      uint64_t v174 = v102;
      uint64_t v107 = (uint64_t)v106;
      uint64_t v175 = v135;
      uint64_t v108 = v141;
      swift_getWitnessTable();
      uint64_t v59 = v137;
      sub_24EB16834(v103, v107, v108);
      (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v103, v108);
      uint64_t v77 = v125;
      uint64_t v78 = v97;
    }
    v136(v77, v78);
    goto LABEL_9;
  }
  long long v48 = *((_OWORD *)v46 + 1);
  long long v184 = *(_OWORD *)v46;
  long long v185 = v48;
  long long v186 = *((_OWORD *)v46 + 2);
  uint64_t v187 = *((void *)v46 + 6);
  sub_24EAB9164(v47, v38);
  uint64_t v145 = swift_getWitnessTable();
  uint64_t v49 = v129;
  uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v129 + 16);
  uint64_t v51 = v132;
  v50(v132, v38, v32);
  uint64_t v52 = *(void (**)(char *, uint64_t))(v49 + 8);
  v52(v38, v32);
  char v146 = (void (*)(void, void))v52;
  v50(v38, v51, v32);
  uint64_t v152 = v143;
  uint64_t v53 = v143;
  uint64_t v153 = MEMORY[0x263F18860];
  uint64_t v54 = swift_getWitnessTable();
  uint64_t v55 = v133;
  uint64_t v56 = v145;
  sub_24EB1673C((uint64_t)v38, v32);
  v52(v38, v32);
  uint64_t v150 = v56;
  uint64_t v151 = v54;
  swift_getWitnessTable();
  *(void *)&long long v184 = v147;
  *((void *)&v184 + 1) = v53;
  uint64_t v57 = swift_getOpaqueTypeConformance2();
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v148 = v57;
  uint64_t v149 = v58;
  swift_getWitnessTable();
  uint64_t v59 = v137;
  sub_24EB1673C(v55, v33);
  (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v55, v33);
  v146(v132, v32);
  uint64_t v60 = v143;
LABEL_9:
  uint64_t v109 = swift_getWitnessTable();
  uint64_t v172 = v60;
  uint64_t v173 = MEMORY[0x263F18860];
  uint64_t v110 = swift_getWitnessTable();
  uint64_t v170 = v109;
  uint64_t v171 = v110;
  uint64_t v111 = swift_getWitnessTable();
  *(void *)&long long v184 = v147;
  *((void *)&v184 + 1) = v60;
  uint64_t v112 = swift_getOpaqueTypeConformance2();
  uint64_t v113 = swift_getWitnessTable();
  uint64_t v168 = v112;
  uint64_t v169 = v113;
  uint64_t v114 = swift_getWitnessTable();
  uint64_t v166 = v111;
  uint64_t v167 = v114;
  uint64_t v115 = v139;
  swift_getWitnessTable();
  uint64_t v116 = v138;
  (*(void (**)(uint64_t, char *, uint64_t))(v138 + 16))(v142, v59, v115);
  return (*(uint64_t (**)(char *, uint64_t))(v116 + 8))(v59, v115);
}

uint64_t sub_24EAB914C()
{
  return sub_24EABFBFC((uint64_t (*)(void, void, void, void, void))sub_24EAB7DE4);
}

uint64_t sub_24EAB9164@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v19 = a1[2];
  uint64_t v20 = a2;
  sub_24EB3D3E0();
  uint64_t v28 = a1[4];
  uint64_t v4 = v28;
  uint64_t v29 = MEMORY[0x263F198F8];
  swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  *(void *)&long long v30 = sub_24EB3D3E0();
  *((void *)&v30 + 1) = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269931F70);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2DD8);
  uint64_t v7 = a1[5];
  uint64_t v26 = a1[3];
  uint64_t v6 = v26;
  uint64_t v27 = v7;
  swift_getOpaqueTypeMetadata2();
  sub_24EB3D3E0();
  swift_getTupleTypeMetadata2();
  sub_24EB3DB20();
  *(void *)&long long v31 = sub_24EB3DDA0();
  *((void *)&v31 + 1) = v5;
  swift_getTupleTypeMetadata();
  sub_24EB3DB20();
  swift_getWitnessTable();
  uint64_t v8 = sub_24EB3DA60();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v19 - v13;
  long long v15 = v2[1];
  long long v30 = *v2;
  long long v31 = v15;
  long long v32 = v2[2];
  uint64_t v33 = *((void *)v2 + 6);
  uint64_t v21 = v19;
  uint64_t v22 = v6;
  uint64_t v23 = v4;
  uint64_t v24 = v7;
  uint64_t v25 = &v30;
  sub_24EB3D560();
  sub_24EB3DA50();
  swift_getWitnessTable();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v16(v14, v12, v8);
  uint64_t v17 = *(void (**)(char *, uint64_t))(v9 + 8);
  v17(v12, v8);
  v16(v20, v14, v8);
  return ((uint64_t (*)(char *, uint64_t))v17)(v14, v8);
}

uint64_t sub_24EAB948C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v21 = a2;
  sub_24EB3D3E0();
  *(void *)&long long v24 = sub_24EB3D3E0();
  *((void *)&v24 + 1) = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_269931F78);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2DD8);
  sub_24EB3D3E0();
  swift_getTupleTypeMetadata2();
  sub_24EB3DB20();
  uint64_t v25 = sub_24EB3DDA0();
  *(void *)&long long v26 = v4;
  swift_getTupleTypeMetadata();
  sub_24EB3DB20();
  swift_getWitnessTable();
  uint64_t v5 = sub_24EB3DA60();
  uint64_t v20 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = sub_24EB3D3E0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v20 - v13;
  char v15 = *((unsigned char *)v2 + 16);
  long long v24 = *v2;
  LOBYTE(v25) = v15;
  long long v26 = *(long long *)((char *)v2 + 24);
  long long v27 = *(long long *)((char *)v2 + 40);
  sub_24EABB8D0(a1, v7);
  sub_24EB3DB00();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24EB3D8A0();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v5);
  uint64_t v22 = WitnessTable;
  uint64_t v23 = MEMORY[0x263F18860];
  swift_getWitnessTable();
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v17(v14, v12, v8);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v9 + 8);
  v18(v12, v8);
  v17(v21, v14, v8);
  return ((uint64_t (*)(char *, uint64_t))v18)(v14, v8);
}

uint64_t sub_24EAB9814@<X0>(uint64_t a1@<X0>, char *a2@<X8>, double a3@<D0>)
{
  long long v24 = a2;
  sub_24EB3D3E0();
  *(void *)&long long v25 = sub_24EB3D3E0();
  *((void *)&v25 + 1) = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_269931F78);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2DD8);
  sub_24EB3D3E0();
  swift_getTupleTypeMetadata2();
  sub_24EB3DB20();
  uint64_t v26 = sub_24EB3DDA0();
  *(void *)&long long v27 = v6;
  swift_getTupleTypeMetadata();
  sub_24EB3DB20();
  swift_getWitnessTable();
  uint64_t v7 = sub_24EB3DA60();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v23 - v9;
  uint64_t WitnessTable = swift_getWitnessTable();
  *(void *)&long long v25 = v7;
  *((void *)&v25 + 1) = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v13 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v23 - v17;
  char v19 = *((unsigned char *)v3 + 16);
  long long v25 = *v3;
  LOBYTE(v26) = v19;
  long long v27 = *(long long *)((char *)v3 + 24);
  long long v28 = *(long long *)((char *)v3 + 40);
  sub_24EABB8D0(a1, v10);
  sub_24EB3D610();
  *(double *)(swift_allocObject() + 16) = a3;
  sub_24EB3DB00();
  sub_24EB3D880();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v20(v18, v16, OpaqueTypeMetadata2);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v13 + 8);
  v21(v16, OpaqueTypeMetadata2);
  v20(v24, v18, OpaqueTypeMetadata2);
  return ((uint64_t (*)(char *, uint64_t))v21)(v18, OpaqueTypeMetadata2);
}

uint64_t sub_24EAB9BB4@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v4 = MEMORY[0x263F1B6B0];
  *(void *)&long long v32 = MEMORY[0x263F1B6B0];
  uint64_t v19 = a1[2];
  sub_24EB3D3E0();
  sub_24EB3D3E0();
  uint64_t v30 = a1[4];
  uint64_t v5 = v30;
  uint64_t v31 = MEMORY[0x263F18860];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v29 = MEMORY[0x263F18C10];
  swift_getWitnessTable();
  *((void *)&v32 + 1) = sub_24EB3DA60();
  *(void *)&long long v33 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2DD8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_269931F78);
  uint64_t v6 = a1[3];
  sub_24EB3D3E0();
  swift_getTupleTypeMetadata2();
  sub_24EB3DB20();
  sub_24EB3DDA0();
  swift_getTupleTypeMetadata2();
  sub_24EB3DB20();
  swift_getWitnessTable();
  uint64_t v26 = sub_24EB3DA60();
  uint64_t v27 = swift_getWitnessTable();
  *((void *)&v33 + 1) = swift_getOpaqueTypeMetadata2();
  *(void *)&long long v34 = v4;
  swift_getTupleTypeMetadata();
  sub_24EB3DB20();
  swift_getWitnessTable();
  uint64_t v7 = sub_24EB3DA40();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v19 - v12;
  long long v14 = v2[1];
  long long v32 = *v2;
  long long v33 = v14;
  long long v34 = v2[2];
  uint64_t v35 = *((void *)v2 + 6);
  sub_24EB3D4E0();
  uint64_t v21 = v19;
  uint64_t v22 = v6;
  uint64_t v15 = a1[5];
  uint64_t v23 = v5;
  uint64_t v24 = v15;
  long long v25 = &v32;
  sub_24EB3DA30();
  swift_getWitnessTable();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v16(v13, v11, v7);
  uint64_t v17 = *(void (**)(char *, uint64_t))(v8 + 8);
  v17(v11, v7);
  v16(v20, v13, v7);
  return ((uint64_t (*)(char *, uint64_t))v17)(v13, v7);
}

uint64_t sub_24EAB9F80()
{
  return swift_release();
}

uint64_t sub_24EAB9FEC()
{
  return sub_24EAB9F80();
}

uint64_t sub_24EAB9FFC(uint64_t a1)
{
  return a1;
}

uint64_t sub_24EABA050()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24EABA094@<X0>(void (**a1)(uint64_t)@<X0>, uint64_t a2@<X1>, void (*a3)(void, void)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v151 = a5;
  uint64_t v131 = a4;
  uint64_t v149 = a6;
  uint64_t v153 = a3;
  uint64_t v121 = *((void *)a3 - 1);
  MEMORY[0x270FA5388](a1);
  char v130 = (char *)&v120 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v218 = v10;
  *((void *)&v218 + 1) = v11;
  uint64_t v137 = MEMORY[0x263F1AF48];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v122 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v129 = (char *)&v120 - v13;
  uint64_t v124 = v14;
  uint64_t v15 = sub_24EB3D3E0();
  uint64_t v126 = *(void *)(v15 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v123 = (char *)&v120 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v127 = (char *)&v120 - v18;
  uint64_t v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3000);
  MEMORY[0x270FA5388](v144);
  uint64_t v140 = (char *)&v120 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FB0);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v142 = v20;
  uint64_t v143 = v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v141 = (char *)&v120 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2DD8);
  uint64_t v125 = v15;
  swift_getTupleTypeMetadata2();
  uint64_t v159 = sub_24EB3DB20();
  uint64_t v161 = sub_24EB3DDA0();
  uint64_t v158 = *(void *)(v161 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v161);
  uint64_t v160 = (char *)&v120 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v168 = (uint64_t)&v120 - v25;
  uint64_t v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932010);
  uint64_t v150 = *(void (***)(uint64_t, char *, uint64_t))(v152 - 8);
  MEMORY[0x270FA5388](v152);
  uint64_t v139 = (char *)&v120 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_269931F70);
  uint64_t v27 = MEMORY[0x270FA5388](v157);
  uint64_t v167 = (uint64_t)&v120 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v166 = (uint64_t)&v120 - v29;
  uint64_t v30 = sub_24EB3D280();
  uint64_t v147 = *(void *)(v30 - 8);
  uint64_t v148 = (void (*)(void, void))v30;
  MEMORY[0x270FA5388](v30);
  char v146 = (char *)&v120 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = type metadata accessor for AwardHeaderLayout();
  uint64_t v32 = MEMORY[0x270FA5388](v163);
  uint64_t v128 = (char *)&v120 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v162 = (char *)&v120 - v35;
  uint64_t v134 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v37 = (char *)&v120 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_24EB3D3E0();
  uint64_t v135 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v40 = (char *)&v120 - v39;
  uint64_t v210 = a4;
  uint64_t v211 = MEMORY[0x263F198F8];
  uint64_t v145 = (void (*)(char *, char *, uint64_t))MEMORY[0x263F18E48];
  uint64_t WitnessTable = swift_getWitnessTable();
  *(void *)&long long v218 = v38;
  *((void *)&v218 + 1) = WitnessTable;
  uint64_t v136 = swift_getOpaqueTypeMetadata2();
  uint64_t v138 = *(void *)(v136 - 8);
  MEMORY[0x270FA5388](v136);
  uint64_t v133 = (char *)&v120 - v41;
  uint64_t v156 = sub_24EB3D3E0();
  uint64_t v165 = *(void *)(v156 - 8);
  uint64_t v42 = MEMORY[0x270FA5388](v156);
  uint64_t v44 = (char *)&v120 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = MEMORY[0x270FA5388](v42);
  uint64_t v164 = (char *)&v120 - v46;
  a1[3](v45);
  uint64_t v47 = v131;
  sub_24EB3D7D0();
  (*(void (**)(char *, uint64_t))(v134 + 8))(v37, a2);
  sub_24EB3D610();
  sub_24EB3DB00();
  uint64_t v48 = WitnessTable;
  sub_24EB3D880();
  uint64_t v49 = v151;
  (*(void (**)(char *, uint64_t))(v135 + 8))(v40, v38);
  long long v50 = *((_OWORD *)a1 + 1);
  long long v218 = *(_OWORD *)a1;
  long long v219 = v50;
  long long v220 = *((_OWORD *)a1 + 2);
  *(void *)&long long v221 = a1[6];
  *(void *)&long long v196 = a2;
  *((void *)&v196 + 1) = v153;
  *(void *)&long long v197 = v47;
  *((void *)&v197 + 1) = v49;
  uint64_t v51 = (uint64_t *)type metadata accessor for AwardHeaderView();
  sub_24EAB7420();
  swift_getKeyPath();
  uint64_t v52 = v162;
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  uint64_t v53 = &v52[*(int *)(v163 + 32)];
  uint64_t v54 = (uint64_t)v52;
  uint64_t v55 = v146;
  uint64_t v56 = v147;
  uint64_t v57 = v148;
  (*(void (**)(char *, char *, void (*)(void, void)))(v147 + 16))(v146, v53, v148);
  sub_24EABF598(v54);
  sub_24EB3D230();
  (*(void (**)(char *, void))(v56 + 8))(v55, v57);
  *(void *)&long long v218 = v38;
  *((void *)&v218 + 1) = v48;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v59 = v136;
  uint64_t v60 = v133;
  sub_24EB3D8E0();
  (*(void (**)(char *, uint64_t))(v138 + 8))(v60, v59);
  uint64_t v208 = OpaqueTypeConformance2;
  uint64_t v209 = MEMORY[0x263F18C10];
  uint64_t v61 = v156;
  uint64_t v147 = swift_getWitnessTable();
  uint64_t v62 = v165;
  uint64_t v145 = *(void (**)(char *, char *, uint64_t))(v165 + 16);
  char v146 = (char *)(v165 + 16);
  v145(v164, v44, v61);
  long long v63 = *(void (**)(void, void))(v62 + 8);
  uint64_t v155 = v44;
  uint64_t v165 = v62 + 8;
  uint64_t v148 = v63;
  v63(v44, v61);
  long long v64 = *((_OWORD *)a1 + 1);
  long long v218 = *(_OWORD *)a1;
  long long v219 = v64;
  long long v220 = *((_OWORD *)a1 + 2);
  *(void *)&long long v221 = a1[6];
  uint64_t v65 = sub_24EB3D560();
  sub_24EABB4B0(v65, v51, (uint64_t)&v196);
  long long v226 = v204;
  long long v227 = v205;
  long long v228 = v206;
  long long v222 = v200;
  long long v223 = v201;
  long long v224 = v202;
  long long v225 = v203;
  long long v218 = v196;
  long long v219 = v197;
  long long v220 = v198;
  long long v221 = v199;
  long long v193 = v205;
  long long v194 = v206;
  long long v189 = v201;
  long long v190 = v202;
  long long v191 = v203;
  long long v192 = v204;
  long long v184 = v196;
  long long v185 = v197;
  long long v186 = v198;
  __int16 v229 = v207;
  __int16 v195 = v207;
  long long v187 = v199;
  long long v188 = v200;
  sub_24EB3D610();
  sub_24EB3DB00();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269932018);
  sub_24EABF60C();
  uint64_t v66 = v139;
  uint64_t v67 = (uint64_t)v140;
  sub_24EB3D880();
  sub_24EABFB28((uint64_t)&v218, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))sub_24EABF6AC);
  uint64_t v68 = (void (**)(char *, uint64_t))v150;
  uint64_t v69 = v167;
  uint64_t v70 = v152;
  v150[2](v167, v66, v152);
  *(_WORD *)(v69 + *(int *)(v157 + 36)) = 256;
  v68[1](v66, v70);
  sub_24EABF928(v69, v166, &qword_269931F70);
  long long v71 = *((_OWORD *)a1 + 1);
  long long v196 = *(_OWORD *)a1;
  long long v197 = v71;
  long long v198 = *((_OWORD *)a1 + 2);
  uint64_t v150 = (void (**)(uint64_t, char *, uint64_t))a1;
  *(void *)&long long v199 = a1[6];
  uint64_t v152 = (uint64_t)v51;
  sub_24EAB7420();
  swift_getKeyPath();
  uint64_t v72 = v141;
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  uint64_t v73 = v142;
  sub_24EB3DB50();
  (*(void (**)(char *, uint64_t))(v143 + 8))(v72, v73);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_24EAB1E00(v67, &qword_26B1D3000);
    uint64_t v81 = (uint64_t)v160;
    uint64_t v80 = v161;
    goto LABEL_7;
  }
  uint64_t v75 = (uint64_t)v128;
  long long v74 = v129;
  uint64_t v76 = v130;
  int v77 = *(unsigned __int8 *)(v67 + 32);
  uint64_t v78 = v67 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1D28C0) + 48);
  uint64_t v79 = sub_24EB3D1C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v79 - 8) + 8))(v78, v79);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v81 = (uint64_t)v160;
  uint64_t v80 = v161;
  if (v77 != 1)
  {
LABEL_7:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v159 - 8) + 56))(v81, 1, 1, v159);
    swift_getWitnessTable();
    sub_24EB05920(v81, v168);
    uint64_t v102 = *(void (**)(void, void))(v158 + 8);
    uint64_t v151 = (v158 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v103 = v81;
    uint64_t v104 = v80;
    goto LABEL_8;
  }
  uint64_t v82 = v150;
  long long v83 = *((_OWORD *)v150 + 1);
  long long v196 = *(_OWORD *)v150;
  long long v197 = v83;
  long long v198 = *((_OWORD *)v150 + 2);
  *(void *)&long long v199 = v150[6];
  sub_24EAB7420();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  uint64_t v84 = v75 + *(int *)(v163 + 56);
  double v85 = *(double *)v84;
  int v86 = *(unsigned __int8 *)(v84 + 8);
  sub_24EABF598(v75);
  if (v86) {
    double v85 = 0.6;
  }
  long long v87 = *((_OWORD *)v82 + 1);
  long long v196 = *(_OWORD *)v82;
  long long v197 = v87;
  long long v198 = *((_OWORD *)v82 + 2);
  *(void *)&long long v199 = v82[6];
  sub_24EAB7420();
  swift_getKeyPath();
  uint64_t v88 = (uint64_t)v162;
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  sub_24EABF598(v88);
  sub_24EB3DB00();
  uint64_t v89 = sub_24EB3D380();
  uint64_t v144 = v212;
  LODWORD(v143) = v213;
  uint64_t v142 = v214;
  LODWORD(v141) = v215;
  uint64_t v139 = v217;
  uint64_t v140 = v216;
  ((void (*)(uint64_t))v82[5])(v89);
  sub_24EB3D610();
  sub_24EB3DB00();
  *(double *)(swift_allocObject() + 16) = v85;
  uint64_t v90 = v153;
  uint64_t v91 = v151;
  sub_24EB3D880();
  swift_release();
  (*(void (**)(char *, void))(v121 + 8))(v76, v90);
  *(void *)&long long v196 = v90;
  *((void *)&v196 + 1) = v91;
  uint64_t v92 = swift_getOpaqueTypeConformance2();
  uint64_t v94 = v123;
  uint64_t v93 = v124;
  sub_24EB3D920();
  (*(void (**)(char *, uint64_t))(v122 + 8))(v74, v93);
  uint64_t v169 = v92;
  uint64_t v170 = MEMORY[0x263F190E0];
  uint64_t v95 = v125;
  uint64_t v96 = swift_getWitnessTable();
  uint64_t v98 = v126;
  uint64_t v97 = v127;
  char v99 = *(void (**)(char *, char *, uint64_t))(v126 + 16);
  v99(v127, v94, v95);
  char v100 = *(void (**)(char *, uint64_t))(v98 + 8);
  v100(v94, v95);
  *(void *)&long long v196 = 0;
  BYTE8(v196) = 1;
  *(void *)&long long v197 = v144;
  BYTE8(v197) = v143;
  *(void *)&long long v198 = v142;
  BYTE8(v198) = (_BYTE)v141;
  *(void *)&long long v199 = v140;
  *((void *)&v199 + 1) = v139;
  *(void *)&long long v184 = &v196;
  v99(v94, v97, v95);
  *((void *)&v184 + 1) = v94;
  uint64_t v180 = v154;
  uint64_t v181 = v95;
  unint64_t v176 = sub_24EABF88C();
  uint64_t v177 = v96;
  uint64_t v101 = (uint64_t)v160;
  sub_24EB1692C((uint64_t)&v184, 2uLL, (uint64_t)&v180);
  v100(v97, v95);
  v100(v94, v95);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v159 - 8) + 56))(v101, 0, 1, v159);
  swift_getWitnessTable();
  sub_24EB05920(v101, v168);
  uint64_t v102 = *(void (**)(void, void))(v158 + 8);
  uint64_t v151 = (v158 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v103 = v101;
  uint64_t v104 = v161;
LABEL_8:
  uint64_t v153 = v102;
  v102(v103, v104);
  long long v105 = *((_OWORD *)v150 + 1);
  long long v196 = *(_OWORD *)v150;
  long long v197 = v105;
  long long v198 = *((_OWORD *)v150 + 2);
  *(void *)&long long v199 = v150[6];
  sub_24EAB7420();
  swift_getKeyPath();
  uint64_t v106 = (uint64_t)v162;
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  sub_24EABF598(v106);
  sub_24EB3DB00();
  sub_24EB3D380();
  uint64_t v107 = v184;
  char v108 = BYTE8(v184);
  uint64_t v109 = v185;
  char v110 = BYTE8(v185);
  long long v111 = v186;
  uint64_t v112 = v155;
  unint64_t v113 = v156;
  v145(v155, v164, v156);
  uint64_t v180 = (uint64_t)v112;
  uint64_t v114 = v167;
  sub_24EABF774(v166, v167);
  uint64_t v181 = v114;
  uint64_t v115 = v160;
  uint64_t v116 = v161;
  (*(void (**)(char *, uint64_t, uint64_t))(v158 + 16))(v160, v168, v161);
  *(void *)&long long v196 = 0;
  BYTE8(v196) = 1;
  *(void *)&long long v197 = v107;
  BYTE8(v197) = v108;
  *(void *)&long long v198 = v109;
  BYTE8(v198) = v110;
  long long v199 = v111;
  uint64_t v182 = v115;
  uint64_t v183 = &v196;
  unint64_t v176 = v113;
  uint64_t v177 = v157;
  uint64_t v178 = v116;
  uint64_t v179 = v154;
  uint64_t v172 = v147;
  unint64_t v173 = sub_24EABF7DC();
  uint64_t v171 = swift_getWitnessTable();
  uint64_t v174 = swift_getWitnessTable();
  unint64_t v175 = sub_24EABF88C();
  sub_24EB1692C((uint64_t)&v180, 4uLL, (uint64_t)&v176);
  uint64_t v117 = (void (*)(char *, uint64_t))v153;
  v153(v168, v116);
  sub_24EAB1E00(v166, &qword_269931F70);
  uint64_t v118 = (uint64_t (*)(char *, unint64_t))v148;
  v148(v164, v113);
  v117(v115, v116);
  sub_24EAB1E00(v167, &qword_269931F70);
  return v118(v155, v113);
}

double sub_24EABB4A0(double a1)
{
  return a1 * 0.76;
}

double sub_24EABB4B0@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3000);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FB0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v13 = *(_OWORD *)(v3 + 16);
  v50[0] = *(_OWORD *)v3;
  v50[1] = v13;
  long long v15 = *(_OWORD *)v3;
  long long v14 = *(_OWORD *)(v3 + 16);
  v50[2] = *(_OWORD *)(v3 + 32);
  uint64_t v51 = *(void *)(v3 + 48);
  long long v52 = v15;
  long long v53 = v14;
  long long v54 = *(_OWORD *)(v3 + 32);
  *(void *)&long long v55 = *(void *)(v3 + 48);
  sub_24EAB7420();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  sub_24EB3DB50();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v17 = *(void *)v8;
      uint64_t v16 = *((void *)v8 + 1);
      uint64_t v19 = *((void *)v8 + 2);
      uint64_t v18 = *((void *)v8 + 3);
      char v20 = v8[32];
      uint64_t v21 = &v8[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1D28C0) + 48)];
      uint64_t v22 = sub_24EB3D1C0();
      (*(void (**)(char *, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
      goto LABEL_4;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 3u:
    case 4u:
LABEL_6:
      v36[0] = sub_24EB3D960();
      sub_24EABF98C((uint64_t)v36);
      break;
    default:
      uint64_t v17 = *(void *)v8;
      uint64_t v16 = *((void *)v8 + 1);
      uint64_t v19 = *((void *)v8 + 2);
      uint64_t v18 = *((void *)v8 + 3);
      char v20 = v8[32];
LABEL_4:
      v48[0] = v17;
      v48[1] = v16;
      v48[2] = v19;
      v48[3] = v18;
      char v49 = v20;
      sub_24EABE600(v48, v50, a2[2], a2[3], a2[4], a2[5], (uint64_t *)v32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_OWORD *)((char *)&v34[7] + 7) = v32[7];
      *(_OWORD *)((char *)&v34[6] + 7) = v32[6];
      *(_OWORD *)((char *)&v34[3] + 7) = v32[3];
      *(_OWORD *)((char *)&v34[2] + 7) = v32[2];
      *(_OWORD *)((char *)&v34[8] + 7) = v33[0];
      v34[9] = *(_OWORD *)((char *)v33 + 9);
      *(_OWORD *)((char *)&v34[4] + 7) = v32[4];
      *(_OWORD *)((char *)&v34[5] + 7) = v32[5];
      *(_OWORD *)((char *)v34 + 7) = v32[0];
      *(_OWORD *)((char *)&v34[1] + 7) = v32[1];
      long long v44 = v34[6];
      long long v45 = v34[7];
      long long v46 = v34[8];
      long long v47 = *(_OWORD *)((char *)v33 + 9);
      long long v40 = v34[2];
      long long v41 = v34[3];
      long long v42 = v34[4];
      long long v43 = v34[5];
      long long v38 = v34[0];
      char v35 = 0;
      v36[0] = v30;
      v36[1] = 0;
      char v37 = 0;
      long long v39 = v34[1];
      sub_24EABF91C((uint64_t)v36);
      break;
  }
  sub_24EABF928((uint64_t)v36, (uint64_t)&v31, &qword_269932040);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269932030);
  sub_24EAB15E8(&qword_269932028, &qword_269932030);
  sub_24EB3D590();
  long long v23 = v61;
  *(_OWORD *)(a3 + 128) = v60;
  *(_OWORD *)(a3 + 144) = v23;
  *(_OWORD *)(a3 + 160) = v62;
  *(_WORD *)(a3 + 176) = v63;
  long long v24 = v57;
  *(_OWORD *)(a3 + 64) = v56;
  *(_OWORD *)(a3 + 80) = v24;
  long long v25 = v59;
  *(_OWORD *)(a3 + 96) = v58;
  *(_OWORD *)(a3 + 112) = v25;
  long long v26 = v53;
  *(_OWORD *)a3 = v52;
  *(_OWORD *)(a3 + 16) = v26;
  double result = *(double *)&v54;
  long long v28 = v55;
  *(_OWORD *)(a3 + 32) = v54;
  *(_OWORD *)(a3 + 48) = v28;
  return result;
}

double sub_24EABB8C0(double a1)
{
  return a1 * 0.8;
}

uint64_t sub_24EABB8D0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v4 = *(void *)(a1 + 16);
  sub_24EB3D3E0();
  *(void *)&long long v24 = sub_24EB3D3E0();
  *((void *)&v24 + 1) = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_269931F78);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2DD8);
  uint64_t v6 = *(void *)(a1 + 24);
  sub_24EB3D3E0();
  swift_getTupleTypeMetadata2();
  sub_24EB3DB20();
  *(void *)&long long v25 = sub_24EB3DDA0();
  *((void *)&v25 + 1) = v5;
  swift_getTupleTypeMetadata();
  sub_24EB3DB20();
  swift_getWitnessTable();
  uint64_t v7 = sub_24EB3DA60();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  long long v13 = (char *)&v18 - v12;
  long long v14 = v2[1];
  long long v24 = *v2;
  long long v25 = v14;
  long long v26 = v2[2];
  uint64_t v27 = *((void *)v2 + 6);
  uint64_t v20 = v4;
  uint64_t v21 = v6;
  long long v22 = *(_OWORD *)(a1 + 32);
  long long v23 = &v24;
  sub_24EB3D560();
  sub_24EB3DA50();
  swift_getWitnessTable();
  long long v15 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v15(v13, v11, v7);
  uint64_t v16 = *(void (**)(char *, uint64_t))(v8 + 8);
  v16(v11, v7);
  v15(v19, v13, v7);
  return ((uint64_t (*)(char *, uint64_t))v16)(v13, v7);
}

uint64_t sub_24EABBB80@<X0>(void (**a1)(uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v105 = a4;
  uint64_t v118 = a6;
  uint64_t v98 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v103 = (char *)&v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24EB3D3E0();
  uint64_t v101 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v102 = (char *)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  char v100 = (char *)&v96 - v15;
  uint64_t v114 = (void (*)(uint64_t, uint64_t))__swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3000);
  MEMORY[0x270FA5388](v114);
  unint64_t v113 = (char *)&v96 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FB0);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v111 = v17;
  uint64_t v112 = v18;
  MEMORY[0x270FA5388](v17);
  char v108 = (char *)&v96 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2DD8);
  uint64_t v99 = v12;
  swift_getTupleTypeMetadata2();
  uint64_t v125 = sub_24EB3DB20();
  uint64_t v20 = sub_24EB3DDA0();
  uint64_t v119 = *(void *)(v20 - 8);
  uint64_t v120 = v20;
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  uint64_t v117 = (char *)&v96 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v126 = (uint64_t)&v96 - v23;
  uint64_t v121 = sub_24EB3D280();
  uint64_t v116 = *(void (***)(char *, char *, uint64_t))(v121 - 8);
  MEMORY[0x270FA5388](v121);
  uint64_t v115 = (char *)&v96 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = type metadata accessor for AwardHeaderLayout();
  uint64_t v25 = MEMORY[0x270FA5388](v127);
  uint64_t v27 = (void (**)(char *, uint64_t))((char *)&v96 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v122 = *(void (***)(char *, uint64_t))(a2 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v29 = (char *)&v96 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = a2;
  uint64_t v30 = sub_24EB3D3E0();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v109 = (void (*)(void))v30;
  uint64_t v110 = v31;
  MEMORY[0x270FA5388](v30);
  uint64_t v107 = (char *)&v96 - v32;
  uint64_t v124 = sub_24EB3D3E0();
  uint64_t v130 = *(void *)(v124 - 8);
  uint64_t v33 = MEMORY[0x270FA5388](v124);
  uint64_t v129 = (char *)&v96 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v128 = (char *)&v96 - v36;
  a1[3](v35);
  long long v37 = *((_OWORD *)a1 + 1);
  long long v160 = *(_OWORD *)a1;
  long long v161 = v37;
  long long v162 = *((_OWORD *)a1 + 2);
  *(void *)&long long v163 = a1[6];
  *(void *)&long long v147 = a2;
  *((void *)&v147 + 1) = a3;
  uint64_t v104 = a3;
  *(void *)&long long v148 = a4;
  *((void *)&v148 + 1) = a5;
  uint64_t v97 = a5;
  long long v38 = (uint64_t *)type metadata accessor for AwardHeaderView();
  sub_24EAB7420();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  sub_24EABF598((uint64_t)v27);
  long long v39 = *((_OWORD *)a1 + 1);
  long long v160 = *(_OWORD *)a1;
  long long v161 = v39;
  long long v162 = *((_OWORD *)a1 + 2);
  *(void *)&long long v163 = a1[6];
  sub_24EAB7420();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  sub_24EABF598((uint64_t)v27);
  sub_24EB3DB00();
  uint64_t v40 = v106;
  long long v41 = v107;
  uint64_t v42 = v105;
  sub_24EB3D8A0();
  v122[1](v29, v40);
  long long v43 = *((_OWORD *)a1 + 1);
  long long v160 = *(_OWORD *)a1;
  long long v161 = v43;
  long long v162 = *((_OWORD *)a1 + 2);
  *(void *)&long long v163 = a1[6];
  sub_24EAB7420();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  long long v44 = v115;
  long long v45 = v116;
  uint64_t v46 = v121;
  v116[2](v115, (char *)v27 + *(int *)(v127 + 32), v121);
  uint64_t v122 = v27;
  sub_24EABF598((uint64_t)v27);
  sub_24EB3D230();
  ((void (*)(char *, uint64_t))v45[1])(v44, v46);
  uint64_t v174 = v42;
  uint64_t v175 = MEMORY[0x263F18860];
  long long v47 = v109;
  uint64_t WitnessTable = swift_getWitnessTable();
  char v49 = v129;
  sub_24EB3D8E0();
  (*(void (**)(char *, void (*)(void)))(v110 + 8))(v41, v47);
  uint64_t v172 = WitnessTable;
  uint64_t v173 = MEMORY[0x263F18C10];
  uint64_t v50 = v124;
  uint64_t v51 = swift_getWitnessTable();
  uint64_t v52 = v130;
  uint64_t v109 = *(void (**)(void))(v130 + 16);
  uint64_t v110 = v130 + 16;
  ((void (*)(char *, char *, uint64_t))v109)(v128, v49, v50);
  long long v53 = *(void (***)(char *, char *, uint64_t))(v52 + 8);
  uint64_t v130 = v52 + 8;
  ((void (*)(char *, uint64_t))v53)(v49, v50);
  long long v54 = *((_OWORD *)a1 + 1);
  long long v160 = *(_OWORD *)a1;
  long long v161 = v54;
  long long v162 = *((_OWORD *)a1 + 2);
  *(void *)&long long v163 = a1[6];
  uint64_t v55 = sub_24EB3D560();
  sub_24EABB4B0(v55, v38, (uint64_t)v188);
  long long v198 = v188[8];
  long long v199 = v188[9];
  long long v200 = v188[10];
  __int16 v201 = v189;
  long long v194 = v188[4];
  long long v195 = v188[5];
  long long v196 = v188[6];
  long long v197 = v188[7];
  long long v190 = v188[0];
  long long v191 = v188[1];
  long long v192 = v188[2];
  long long v193 = v188[3];
  long long v56 = *((_OWORD *)a1 + 1);
  long long v160 = *(_OWORD *)a1;
  long long v161 = v56;
  long long v162 = *((_OWORD *)a1 + 2);
  *(void *)&long long v163 = a1[6];
  uint64_t v121 = (uint64_t)v38;
  sub_24EAB7420();
  swift_getKeyPath();
  long long v57 = v108;
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  uint64_t v58 = (uint64_t)v113;
  uint64_t v59 = v111;
  sub_24EB3DB50();
  (*(void (**)(char *, uint64_t))(v112 + 8))(v57, v59);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v115 = (char *)v51;
  uint64_t v116 = v53;
  if (EnumCaseMultiPayload != 1)
  {
    sub_24EAB1E00(v58, &qword_26B1D3000);
    uint64_t v68 = v119;
    uint64_t v67 = v120;
    goto LABEL_5;
  }
  long long v61 = v103;
  uint64_t v62 = v104;
  __int16 v63 = v102;
  int v64 = *(unsigned __int8 *)(v58 + 32);
  uint64_t v65 = v58 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1D28C0) + 48);
  uint64_t v66 = sub_24EB3D1C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v66 - 8) + 8))(v65, v66);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v68 = v119;
  uint64_t v67 = v120;
  if (v64 != 1)
  {
LABEL_5:
    uint64_t v83 = (uint64_t)v117;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v125 - 8) + 56))(v117, 1, 1, v125);
    swift_getWitnessTable();
    sub_24EB05920(v83, v126);
    uint64_t v84 = *(void (**)(uint64_t, uint64_t))(v68 + 8);
    unint64_t v113 = (char *)((v68 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000);
    uint64_t v114 = v84;
    uint64_t v82 = v83;
    v84(v83, v67);
    uint64_t v80 = v67;
    uint64_t v79 = v68;
    goto LABEL_6;
  }
  long long v69 = *((_OWORD *)a1 + 1);
  long long v160 = *(_OWORD *)a1;
  long long v161 = v69;
  long long v162 = *((_OWORD *)a1 + 2);
  *(void *)&long long v163 = a1[6];
  sub_24EAB7420();
  swift_getKeyPath();
  uint64_t v70 = (uint64_t)v122;
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  sub_24EABF598(v70);
  sub_24EB3DB00();
  uint64_t v71 = sub_24EB3D380();
  uint64_t v114 = v176;
  LODWORD(v113) = v177;
  uint64_t v112 = v178;
  LODWORD(v111) = v179;
  uint64_t v107 = v181;
  char v108 = v180;
  a1[5](v71);
  uint64_t v72 = v97;
  sub_24EB3D920();
  (*(void (**)(char *, uint64_t))(v98 + 8))(v61, v62);
  uint64_t v131 = v72;
  uint64_t v132 = MEMORY[0x263F190E0];
  uint64_t v73 = v99;
  uint64_t v106 = swift_getWitnessTable();
  uint64_t v75 = v100;
  uint64_t v74 = v101;
  uint64_t v76 = *(void (**)(char *, char *, uint64_t))(v101 + 16);
  v76(v100, v63, v73);
  int v77 = *(void (**)(char *, uint64_t))(v74 + 8);
  v77(v63, v73);
  *(void *)&long long v160 = 0;
  BYTE8(v160) = 1;
  *(void *)&long long v161 = v114;
  BYTE8(v161) = (_BYTE)v113;
  *(void *)&long long v162 = v112;
  BYTE8(v162) = v111;
  *(void *)&long long v163 = v108;
  *((void *)&v163 + 1) = v107;
  *(void *)&long long v147 = &v160;
  v76(v63, v75, v73);
  *((void *)&v147 + 1) = v63;
  uint64_t v139 = v123;
  uint64_t v140 = v73;
  unint64_t v182 = sub_24EABF88C();
  uint64_t v183 = v106;
  uint64_t v78 = (uint64_t)v117;
  sub_24EB1692C((uint64_t)&v147, 2uLL, (uint64_t)&v139);
  v77(v75, v73);
  v77(v63, v73);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v125 - 8) + 56))(v78, 0, 1, v125);
  swift_getWitnessTable();
  sub_24EB05920(v78, v126);
  uint64_t v79 = v119;
  uint64_t v80 = v120;
  uint64_t v81 = *(void (**)(uint64_t, uint64_t))(v119 + 8);
  unint64_t v113 = (char *)((v119 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000);
  uint64_t v114 = v81;
  uint64_t v82 = v78;
  v81(v78, v120);
LABEL_6:
  long long v85 = *((_OWORD *)a1 + 1);
  long long v160 = *(_OWORD *)a1;
  long long v161 = v85;
  long long v162 = *((_OWORD *)a1 + 2);
  *(void *)&long long v163 = a1[6];
  sub_24EAB7420();
  swift_getKeyPath();
  uint64_t v86 = (uint64_t)v122;
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  sub_24EABF598(v86);
  sub_24EB3DB00();
  sub_24EB3D380();
  uint64_t v127 = v182;
  LODWORD(v122) = v183;
  uint64_t v121 = v184;
  char v87 = v185;
  uint64_t v88 = v186;
  uint64_t v89 = v187;
  uint64_t v90 = v129;
  uint64_t v91 = v124;
  v109();
  long long v155 = v198;
  long long v156 = v199;
  long long v157 = v200;
  LOWORD(v158) = v201;
  long long v151 = v194;
  long long v152 = v195;
  long long v153 = v196;
  long long v154 = v197;
  long long v147 = v190;
  long long v148 = v191;
  long long v149 = v192;
  long long v150 = v193;
  HIWORD(v158) = 256;
  v159[0] = v90;
  v159[1] = &v147;
  uint64_t v92 = v126;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v79 + 16))(v82, v126, v80);
  uint64_t v139 = 0;
  LOBYTE(v140) = 1;
  uint64_t v141 = v127;
  char v142 = (char)v122;
  uint64_t v143 = v121;
  char v144 = v87;
  uint64_t v145 = v88;
  uint64_t v146 = v89;
  v159[2] = v82;
  v159[3] = &v139;
  sub_24EABFB28((uint64_t)v188, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))sub_24EABFA08);
  v138[0] = v91;
  v138[1] = __swift_instantiateConcreteTypeFromMangledName(qword_269931F78);
  v138[2] = v80;
  v138[3] = v123;
  uint64_t v134 = v115;
  unint64_t v135 = sub_24EABFAAC();
  uint64_t v133 = swift_getWitnessTable();
  uint64_t v136 = swift_getWitnessTable();
  unint64_t v137 = sub_24EABF88C();
  sub_24EB1692C((uint64_t)v159, 4uLL, (uint64_t)v138);
  uint64_t v93 = v114;
  v114(v92, v80);
  sub_24EABFB28((uint64_t)v188, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))sub_24EABF6AC);
  uint64_t v94 = v116;
  ((void (*)(char *, uint64_t))v116)(v128, v91);
  v93(v82, v80);
  long long v168 = v155;
  long long v169 = v156;
  long long v170 = v157;
  int v171 = v158;
  long long v164 = v151;
  long long v165 = v152;
  long long v166 = v153;
  long long v167 = v154;
  long long v160 = v147;
  long long v161 = v148;
  long long v162 = v149;
  long long v163 = v150;
  sub_24EABFB28((uint64_t)&v160, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))sub_24EABF6AC);
  return ((uint64_t (*)(char *, uint64_t))v94)(v129, v91);
}

uint64_t sub_24EABCC2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t OpaqueTypeConformance2 = a5;
  uint64_t v57 = a3;
  uint64_t v62 = a1;
  uint64_t v72 = a6;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_269931F78);
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2DD8);
  sub_24EB3D3E0();
  swift_getTupleTypeMetadata2();
  sub_24EB3DB20();
  sub_24EB3DDA0();
  swift_getTupleTypeMetadata2();
  uint64_t v64 = sub_24EB3DB20();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v8 = sub_24EB3DA60();
  uint64_t v66 = v8;
  uint64_t v70 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v58 = (char *)&v46 - v9;
  long long v60 = (uint64_t (*)(char *, uint64_t))MEMORY[0x263F1B6E0];
  uint64_t v10 = swift_getWitnessTable();
  uint64_t v94 = v8;
  uint64_t v95 = v10;
  uint64_t v67 = v10;
  uint64_t v68 = MEMORY[0x263F1AF48];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v75 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  long long v61 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v65 = (char *)&v46 - v13;
  uint64_t v14 = a2;
  uint64_t v46 = a2;
  sub_24EB3D3E0();
  sub_24EB3D3E0();
  v104[7] = a4;
  v104[8] = MEMORY[0x263F18860];
  v104[5] = swift_getWitnessTable();
  v104[6] = MEMORY[0x263F18C10];
  swift_getWitnessTable();
  uint64_t v15 = sub_24EB3DA60();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v53 = v19;
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v46 - v20;
  uint64_t v73 = (char *)&v46 - v20;
  sub_24EB3D560();
  uint64_t v22 = v57;
  uint64_t v81 = v14;
  uint64_t v82 = v57;
  uint64_t v83 = a4;
  uint64_t v84 = OpaqueTypeConformance2;
  uint64_t v23 = v62;
  uint64_t v85 = v62;
  sub_24EB3DA50();
  uint64_t v24 = swift_getWitnessTable();
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  uint64_t v54 = v16 + 16;
  uint64_t v55 = v25;
  uint64_t v56 = v24;
  v25(v21, v19, v15);
  uint64_t v26 = *(uint64_t (**)(char *, uint64_t))(v16 + 8);
  uint64_t v59 = v16 + 8;
  long long v60 = v26;
  v26(v19, v15);
  sub_24EB3DB00();
  sub_24EB3D380();
  uint64_t v52 = v104[9];
  int v51 = v105;
  uint64_t v50 = v106;
  int v49 = v107;
  uint64_t v47 = v109;
  uint64_t v48 = v108;
  sub_24EB3D570();
  uint64_t v27 = v46;
  uint64_t v76 = v46;
  uint64_t v77 = v22;
  uint64_t v28 = OpaqueTypeConformance2;
  uint64_t v78 = a4;
  uint64_t v79 = OpaqueTypeConformance2;
  uint64_t v80 = v23;
  uint64_t v29 = v58;
  sub_24EB3DA50();
  sub_24EB3D610();
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = v27;
  *(void *)(v30 + 24) = v22;
  *(void *)(v30 + 32) = a4;
  *(void *)(v30 + 40) = v28;
  long long v31 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)(v30 + 48) = *(_OWORD *)v23;
  *(_OWORD *)(v30 + 64) = v31;
  *(_OWORD *)(v30 + 80) = *(_OWORD *)(v23 + 32);
  *(void *)(v30 + 96) = *(void *)(v23 + 48);
  sub_24EAB9FFC(v23);
  sub_24EB3DB00();
  uint64_t v32 = v61;
  uint64_t v34 = v66;
  uint64_t v33 = v67;
  sub_24EB3D880();
  swift_release();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v29, v34);
  uint64_t v94 = v34;
  uint64_t v95 = v33;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v35 = v75;
  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v75 + 16);
  long long v37 = v65;
  long long v38 = v32;
  long long v39 = v32;
  uint64_t v40 = OpaqueTypeMetadata2;
  v36(v65, v39, OpaqueTypeMetadata2);
  long long v41 = *(void (**)(char *, uint64_t))(v35 + 8);
  uint64_t v75 = v35 + 8;
  v41(v38, v40);
  uint64_t v102 = 0;
  char v103 = 1;
  v104[0] = &v102;
  uint64_t v42 = v53;
  v55(v53, v73, v15);
  uint64_t v94 = 0;
  LOBYTE(v95) = 1;
  uint64_t v96 = v52;
  char v97 = v51;
  uint64_t v98 = v50;
  char v99 = v49;
  uint64_t v100 = v48;
  uint64_t v101 = v47;
  v104[1] = v42;
  v104[2] = &v94;
  v36(v38, v37, v40);
  uint64_t v92 = 0;
  char v93 = 1;
  v104[3] = v38;
  v104[4] = &v92;
  v91[0] = MEMORY[0x263F1B6B0];
  v91[1] = v15;
  v91[2] = v71;
  v91[3] = v40;
  v91[4] = MEMORY[0x263F1B6B0];
  uint64_t v43 = MEMORY[0x263F1B698];
  uint64_t v86 = MEMORY[0x263F1B698];
  uint64_t v87 = v56;
  unint64_t v88 = sub_24EABF88C();
  uint64_t v89 = OpaqueTypeConformance2;
  uint64_t v90 = v43;
  sub_24EB1692C((uint64_t)v104, 5uLL, (uint64_t)v91);
  v41(v37, v40);
  long long v44 = v60;
  v60(v73, v15);
  v41(v38, v40);
  return v44(v42, v15);
}

uint64_t sub_24EABD37C@<X0>(void (**a1)(uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  uint64_t v39 = a4;
  uint64_t v50 = a6;
  uint64_t v49 = sub_24EB3D280();
  uint64_t v48 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v46 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for AwardHeaderLayout() - 8;
  uint64_t v12 = MEMORY[0x270FA5388](v44);
  uint64_t v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_24EB3D3E0();
  uint64_t v47 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v18 = (char *)&v39 - v17;
  uint64_t v19 = sub_24EB3D3E0();
  uint64_t v45 = *(void *)(v19 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  long long v41 = (char *)&v39 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v43 = (char *)&v39 - v23;
  a1[3](v22);
  long long v24 = *((_OWORD *)a1 + 1);
  long long v59 = *(_OWORD *)a1;
  long long v60 = v24;
  long long v61 = *((_OWORD *)a1 + 2);
  uint64_t v62 = a1[6];
  uint64_t v55 = a2;
  uint64_t v56 = a3;
  uint64_t v57 = a4;
  uint64_t v58 = a5;
  type metadata accessor for AwardHeaderView();
  sub_24EAB7420();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  sub_24EABF598((uint64_t)v14);
  long long v25 = *((_OWORD *)a1 + 1);
  long long v59 = *(_OWORD *)a1;
  long long v60 = v25;
  long long v61 = *((_OWORD *)a1 + 2);
  uint64_t v62 = a1[6];
  sub_24EAB7420();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  sub_24EABF598((uint64_t)v14);
  sub_24EB3DB00();
  uint64_t v26 = v39;
  sub_24EB3D8A0();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v16, a2);
  long long v27 = *((_OWORD *)a1 + 1);
  long long v59 = *(_OWORD *)a1;
  long long v60 = v27;
  long long v61 = *((_OWORD *)a1 + 2);
  uint64_t v62 = a1[6];
  sub_24EAB7420();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  uint64_t v28 = v48;
  uint64_t v29 = v46;
  uint64_t v30 = v49;
  (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v46, &v14[*(int *)(v44 + 40)], v49);
  sub_24EABF598((uint64_t)v14);
  sub_24EB3D230();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v30);
  uint64_t v53 = v26;
  uint64_t v54 = MEMORY[0x263F18860];
  uint64_t v31 = v42;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v33 = v41;
  sub_24EB3D8E0();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v18, v31);
  uint64_t v51 = WitnessTable;
  uint64_t v52 = MEMORY[0x263F18C10];
  swift_getWitnessTable();
  uint64_t v34 = v45;
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
  uint64_t v36 = v43;
  v35(v43, v33, v19);
  long long v37 = *(void (**)(char *, uint64_t))(v34 + 8);
  v37(v33, v19);
  v35(v50, v36, v19);
  return ((uint64_t (*)(char *, uint64_t))v37)(v36, v19);
}

uint64_t sub_24EABD984@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v63 = a4;
  uint64_t v70 = a6;
  uint64_t v57 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v54 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24EB3D3E0();
  uint64_t v59 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v56 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v58 = (char *)&v50 - v13;
  uint64_t v53 = type metadata accessor for AwardHeaderLayout();
  MEMORY[0x270FA5388](v53);
  long long v61 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3000);
  MEMORY[0x270FA5388](v64);
  uint64_t v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FB0);
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2DD8);
  uint64_t v60 = v10;
  swift_getTupleTypeMetadata2();
  uint64_t v67 = sub_24EB3DB20();
  uint64_t v69 = sub_24EB3DDA0();
  uint64_t v65 = *(void *)(v69 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v69);
  uint64_t v68 = (char *)&v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v66 = (uint64_t)&v50 - v23;
  long long v24 = a1[1];
  long long v92 = *a1;
  long long v93 = v24;
  long long v94 = a1[2];
  *(void *)&long long v95 = *((void *)a1 + 6);
  uint64_t v25 = sub_24EB3D570();
  *(void *)&long long v78 = v62;
  *((void *)&v78 + 1) = a3;
  *(void *)&long long v79 = v63;
  *((void *)&v79 + 1) = a5;
  uint64_t v62 = a3;
  uint64_t v63 = a5;
  uint64_t v26 = (uint64_t *)type metadata accessor for AwardHeaderView();
  sub_24EABB4B0(v25, v26, (uint64_t)v110);
  long long v120 = v110[8];
  long long v121 = v110[9];
  long long v122 = v110[10];
  __int16 v123 = v111;
  long long v116 = v110[4];
  long long v117 = v110[5];
  long long v118 = v110[6];
  long long v119 = v110[7];
  long long v112 = v110[0];
  long long v113 = v110[1];
  long long v114 = v110[2];
  long long v115 = v110[3];
  long long v27 = a1[1];
  long long v92 = *a1;
  long long v93 = v27;
  long long v94 = a1[2];
  *(void *)&long long v95 = *((void *)a1 + 6);
  sub_24EAB7420();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  sub_24EB3DB50();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_24EAB1E00((uint64_t)v16, &qword_26B1D3000);
    goto LABEL_5;
  }
  uint64_t v28 = (uint64_t)v61;
  int v29 = v16[32];
  uint64_t v30 = &v16[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1D28C0) + 48)];
  uint64_t v31 = sub_24EB3D1C0();
  (*(void (**)(char *, uint64_t))(*(void *)(v31 - 8) + 8))(v30, v31);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v29 != 1)
  {
LABEL_5:
    uint64_t v44 = (uint64_t)v68;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v68, 1, 1, v67);
    goto LABEL_6;
  }
  long long v32 = a1[1];
  long long v92 = *a1;
  long long v93 = v32;
  long long v94 = a1[2];
  *(void *)&long long v95 = *((void *)a1 + 6);
  sub_24EAB7420();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  sub_24EABF598(v28);
  sub_24EB3DB00();
  uint64_t v33 = sub_24EB3D380();
  uint64_t v64 = v104;
  LODWORD(v61) = v105;
  uint64_t v53 = v106;
  int v52 = v107;
  uint64_t v50 = v109;
  uint64_t v51 = v108;
  uint64_t v34 = v54;
  (*((void (**)(uint64_t))a1 + 5))(v33);
  uint64_t v35 = v56;
  uint64_t v37 = v62;
  uint64_t v36 = v63;
  sub_24EB3D920();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v34, v37);
  uint64_t v71 = v36;
  uint64_t v72 = MEMORY[0x263F190E0];
  uint64_t v38 = v60;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v40 = v58;
  uint64_t v41 = v59;
  uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v59 + 16);
  v42(v58, v35, v38);
  uint64_t v43 = *(void (**)(char *, uint64_t))(v41 + 8);
  v43(v35, v38);
  *(void *)&long long v92 = 0;
  BYTE8(v92) = 1;
  *(void *)&long long v93 = v64;
  BYTE8(v93) = (_BYTE)v61;
  *(void *)&long long v94 = v53;
  BYTE8(v94) = v52;
  *(void *)&long long v95 = v51;
  *((void *)&v95 + 1) = v50;
  *(void *)&long long v78 = &v92;
  v42(v35, v40, v38);
  *((void *)&v78 + 1) = v35;
  uint64_t v90 = (long long *)v55;
  uint64_t v91 = v38;
  unint64_t v76 = sub_24EABF88C();
  uint64_t v77 = WitnessTable;
  uint64_t v44 = (uint64_t)v68;
  sub_24EB1692C((uint64_t)&v78, 2uLL, (uint64_t)&v90);
  v43(v40, v38);
  v43(v35, v38);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v44, 0, 1, v67);
LABEL_6:
  swift_getWitnessTable();
  uint64_t v45 = v66;
  sub_24EB05920(v44, v66);
  uint64_t v46 = v65;
  uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
  uint64_t v48 = v69;
  v47(v44, v69);
  long long v87 = v121;
  long long v88 = v122;
  long long v83 = v117;
  long long v84 = v118;
  LOWORD(v89) = v123;
  long long v85 = v119;
  long long v86 = v120;
  long long v78 = v112;
  long long v79 = v113;
  long long v80 = v114;
  long long v81 = v115;
  long long v82 = v116;
  HIWORD(v89) = 256;
  uint64_t v90 = &v78;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 16))(v44, v45, v48);
  uint64_t v91 = v44;
  sub_24EABFB28((uint64_t)v110, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))sub_24EABFA08);
  unint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(qword_269931F78);
  uint64_t v77 = v48;
  unint64_t v74 = sub_24EABFAAC();
  uint64_t v73 = swift_getWitnessTable();
  uint64_t v75 = swift_getWitnessTable();
  sub_24EB1692C((uint64_t)&v90, 2uLL, (uint64_t)&v76);
  v47(v45, v48);
  sub_24EABFB28((uint64_t)v110, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))sub_24EABF6AC);
  v47(v44, v48);
  long long v100 = v86;
  long long v101 = v87;
  long long v102 = v88;
  long long v96 = v82;
  long long v97 = v83;
  int v103 = v89;
  long long v98 = v84;
  long long v99 = v85;
  long long v92 = v78;
  long long v93 = v79;
  long long v94 = v80;
  long long v95 = v81;
  return sub_24EABFB28((uint64_t)&v92, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))sub_24EABF6AC);
}

uint64_t sub_24EABE340(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v28 = a6;
  uint64_t v10 = sub_24EB3D280();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for AwardHeaderLayout();
  uint64_t v15 = v14 - 8;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v27 - v19;
  long long v21 = a2[1];
  long long v33 = *a2;
  long long v34 = v21;
  long long v35 = a2[2];
  uint64_t v36 = *((void *)a2 + 6);
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  uint64_t v31 = a5;
  uint64_t v32 = v28;
  type metadata accessor for AwardHeaderView();
  sub_24EAB7420();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, &v20[*(int *)(v15 + 28)], v10);
  sub_24EABF598((uint64_t)v20);
  long long v22 = a2[1];
  long long v33 = *a2;
  long long v34 = v22;
  long long v35 = a2[2];
  uint64_t v36 = *((void *)a2 + 6);
  sub_24EAB7420();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  uint64_t v23 = &v18[*(int *)(v15 + 68)];
  uint64_t v24 = *(void *)v23;
  uint64_t v25 = *((void *)v23 + 2);
  sub_24EABF598((uint64_t)v18);
  sub_24EB3D260();
  uint64_t result = sub_24EB3D270();
  if (__OFSUB__(v24, 1))
  {
    __break(1u);
  }
  else if (!__OFSUB__(v25, 1))
  {
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  __break(1u);
  return result;
}

uint64_t sub_24EABE600@<X0>(void *a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v90 = a5;
  uint64_t v72 = a7;
  uint64_t v12 = type metadata accessor for AwardHeaderLayout() - 8;
  uint64_t v89 = v12;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  long long v88 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t KeyPath = (char *)&v72 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v72 - v17;
  long long v82 = a1;
  uint64_t v19 = *a1;
  uint64_t v20 = a1[1];
  *(void *)&long long v96 = v19;
  *((void *)&v96 + 1) = v20;
  unint64_t v81 = sub_24EABF994();
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_24EB3D770();
  uint64_t v23 = v22;
  long long v24 = a2[1];
  char v26 = v25 & 1;
  long long v96 = *a2;
  long long v97 = v24;
  long long v98 = a2[2];
  uint64_t v99 = *((void *)a2 + 6);
  uint64_t v100 = a3;
  uint64_t v101 = a4;
  uint64_t v102 = v90;
  uint64_t v103 = a6;
  uint64_t v90 = type metadata accessor for AwardHeaderView();
  sub_24EAB7420();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  uint64_t v27 = *(int *)(v12 + 76);
  uint64_t v73 = v18;
  uint64_t v28 = &v18[v27];
  LOBYTE(a4) = *v28;
  LOBYTE(a3) = v28[1];
  sub_24EABF598((uint64_t)v18);
  LOBYTE(v96) = a4;
  BYTE1(v96) = a3;
  sub_24EB1A9A8();
  LOBYTE(a6) = v26;
  uint64_t v29 = sub_24EB3D750();
  uint64_t v31 = v30;
  char v33 = v32;
  swift_release();
  sub_24EAB1A80(v21, v23, a6);
  swift_bridgeObjectRelease();
  LODWORD(v96) = sub_24EB3D5C0();
  uint64_t v86 = sub_24EB3D730();
  uint64_t v85 = v34;
  uint64_t v87 = v35;
  int v84 = v36 & 1;
  sub_24EAB1A80(v29, v31, v33 & 1);
  swift_bridgeObjectRelease();
  long long v37 = a2[1];
  long long v96 = *a2;
  long long v97 = v37;
  long long v98 = a2[2];
  uint64_t v99 = *((void *)a2 + 6);
  sub_24EAB7420();
  swift_getKeyPath();
  uint64_t v38 = (uint64_t)KeyPath;
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  uint64_t v39 = v89;
  int v83 = *(unsigned __int8 *)(v38 + *(int *)(v89 + 72));
  sub_24EABF598(v38);
  uint64_t KeyPath = (char *)swift_getKeyPath();
  long long v40 = a2[1];
  long long v96 = *a2;
  long long v97 = v40;
  long long v98 = a2[2];
  uint64_t v99 = *((void *)a2 + 6);
  sub_24EAB7420();
  swift_getKeyPath();
  uint64_t v41 = (uint64_t)v73;
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  sub_24EABF598(v41);
  sub_24EB3DB00();
  sub_24EB3D380();
  uint64_t v79 = v100;
  int v75 = v101;
  uint64_t v78 = v102;
  int v74 = v103;
  uint64_t v77 = v104;
  uint64_t v76 = v105;
  uint64_t v42 = v82[3];
  *(void *)&long long v96 = v82[2];
  *((void *)&v96 + 1) = v42;
  swift_bridgeObjectRetain();
  uint64_t v43 = sub_24EB3D770();
  uint64_t v45 = v44;
  LOBYTE(v12) = v46 & 1;
  long long v47 = a2[1];
  long long v96 = *a2;
  long long v97 = v47;
  long long v98 = a2[2];
  uint64_t v99 = *((void *)a2 + 6);
  sub_24EAB7420();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  uint64_t v48 = (unsigned char *)(v41 + *(int *)(v39 + 32));
  LOBYTE(a4) = *v48;
  LOBYTE(v39) = v48[1];
  sub_24EABF598(v41);
  LOBYTE(v96) = a4;
  BYTE1(v96) = v39;
  sub_24EB1A9A8();
  uint64_t v49 = sub_24EB3D750();
  uint64_t v51 = v50;
  LOBYTE(v41) = v52;
  swift_release();
  LOBYTE(a4) = v41 & 1;
  sub_24EAB1A80(v43, v45, v12);
  swift_bridgeObjectRelease();
  LODWORD(v96) = sub_24EB3D5D0();
  uint64_t v53 = sub_24EB3D730();
  uint64_t v55 = v54;
  uint64_t v57 = v56;
  LOBYTE(v45) = v58 & 1;
  sub_24EAB1A80(v49, v51, a4);
  swift_bridgeObjectRelease();
  long long v59 = a2[1];
  long long v96 = *a2;
  long long v97 = v59;
  long long v98 = a2[2];
  uint64_t v99 = *((void *)a2 + 6);
  sub_24EAB7420();
  swift_getKeyPath();
  uint64_t v60 = (uint64_t)v88;
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  LOBYTE(v39) = *(unsigned char *)(v60 + *(int *)(v89 + 72));
  sub_24EABF598(v60);
  uint64_t v61 = swift_getKeyPath();
  char v62 = v84;
  char v91 = v84;
  LOBYTE(v96) = v84;
  char v95 = 1;
  char v63 = v75;
  char v94 = v75;
  char v64 = v74;
  char v93 = v74;
  char v92 = v45;
  uint64_t v65 = v86;
  uint64_t v66 = v72;
  uint64_t v67 = v85;
  *uint64_t v72 = v86;
  v66[1] = v67;
  *((unsigned char *)v66 + 16) = v62;
  uint64_t v68 = KeyPath;
  v66[3] = v87;
  v66[4] = (uint64_t)v68;
  *((unsigned char *)v66 + 40) = v83;
  v66[6] = 0;
  *((unsigned char *)v66 + 56) = 1;
  v66[8] = v79;
  *((unsigned char *)v66 + 72) = v63;
  v66[10] = v78;
  *((unsigned char *)v66 + 88) = v64;
  uint64_t v69 = v76;
  v66[12] = v77;
  v66[13] = v69;
  v66[14] = v53;
  v66[15] = v55;
  *((unsigned char *)v66 + 128) = v45;
  v66[17] = v57;
  v66[18] = v61;
  *((unsigned char *)v66 + 152) = v39;
  uint64_t v70 = v67;
  sub_24EAB1B08(v65, v67, v62);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_24EAB1B08(v53, v55, v45);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_24EAB1A80(v53, v55, v45);
  swift_release();
  swift_bridgeObjectRelease();
  sub_24EAB1A80(v65, v70, v91);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EABED3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 48);
}

uint64_t sub_24EABED44()
{
  sub_24EAB0A90();
  swift_release();
  return swift_release();
}

uint64_t sub_24EABED90(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_24EAB0AB0();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = a2[3];
  uint64_t v7 = a2[6];
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
  *(void *)(a1 + 48) = v7;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_24EABEE10(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_24EAB0AB0();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  sub_24EAB0A90();
  uint64_t v7 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v7;
  swift_retain();
  swift_release();
  uint64_t v8 = a2[6];
  *(void *)(a1 + 40) = a2[5];
  *(void *)(a1 + 48) = v8;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_24EABEEA4(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  sub_24EAB0A90();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t sub_24EABEF0C(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_24EABEF54(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for AwardHeaderView()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24EABEFB8()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EABF598(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AwardHeaderLayout();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24EABF5F4()
{
  return sub_24EABFBFC((uint64_t (*)(void, void, void, void, void))sub_24EABA094);
}

unint64_t sub_24EABF60C()
{
  unint64_t result = qword_269932020;
  if (!qword_269932020)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269932018);
    sub_24EAB15E8(&qword_269932028, &qword_269932030);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932020);
  }
  return result;
}

uint64_t sub_24EABF6AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,char a23,char a24)
{
  if (a24)
  {
    sub_24EAB1A80(a4, a5, a6 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    sub_24EAB1A80(a18, a19, a20 & 1);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_24EABF774(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269931F70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_24EABF7DC()
{
  unint64_t result = qword_269932038;
  if (!qword_269932038)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269931F70);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269932018);
    sub_24EABF60C();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932038);
  }
  return result;
}

unint64_t sub_24EABF88C()
{
  unint64_t result = qword_26B1D2DD0;
  if (!qword_26B1D2DD0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2DD8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2DD0);
  }
  return result;
}

uint64_t sub_24EABF900()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

double sub_24EABF910(double a1)
{
  return *(double *)(v1 + 16) * a1;
}

uint64_t sub_24EABF91C(uint64_t result)
{
  *(unsigned char *)(result + 177) = 1;
  return result;
}

uint64_t sub_24EABF928(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24EABF98C(uint64_t result)
{
  *(unsigned char *)(result + 177) = 0;
  return result;
}

unint64_t sub_24EABF994()
{
  unint64_t result = qword_26B1D3038;
  if (!qword_26B1D3038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D3038);
  }
  return result;
}

uint64_t sub_24EABF9F0()
{
  return sub_24EABFBFC((uint64_t (*)(void, void, void, void, void))sub_24EABBB80);
}

uint64_t sub_24EABFA08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,char a23,char a24)
{
  if (a24)
  {
    sub_24EAB1B08(a4, a5, a6 & 1);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_24EAB1B08(a18, a19, a20 & 1);
    swift_bridgeObjectRetain();
  }
  return swift_retain();
}

unint64_t sub_24EABFAAC()
{
  unint64_t result = qword_269932048;
  if (!qword_269932048)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_269931F78);
    sub_24EABF60C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932048);
  }
  return result;
}

uint64_t sub_24EABFB28(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _WORD))
{
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(_WORD *)(a1 + 176));
  return a1;
}

uint64_t sub_24EABFBA4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24EABFBB4()
{
  return sub_24EABFBFC((uint64_t (*)(void, void, void, void, void))sub_24EABCC2C);
}

uint64_t sub_24EABFBCC()
{
  return sub_24EABFBFC((uint64_t (*)(void, void, void, void, void))sub_24EABD37C);
}

uint64_t sub_24EABFBE4()
{
  return sub_24EABFBFC((uint64_t (*)(void, void, void, void, void))sub_24EABD984);
}

uint64_t sub_24EABFBFC(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[6], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t objectdestroy_3Tm()
{
  sub_24EAB0A90();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 104, 7);
}

uint64_t sub_24EABFC64(char a1)
{
  return sub_24EABE340(a1 & 1, (long long *)(v1 + 48), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_24EABFC7C(char a1)
{
  return *(void *)&aIdle_4[8 * a1];
}

uint64_t sub_24EABFC9C()
{
  return sub_24EABFC7C(*v0);
}

uint64_t sub_24EABFCA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EAC2274(a1, a2);
  *a3 = result;
  return result;
}

void sub_24EABFCCC(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_24EABFCD8(uint64_t a1)
{
  unint64_t v2 = sub_24EAC04DC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EABFD14(uint64_t a1)
{
  unint64_t v2 = sub_24EAC04DC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EABFD50(uint64_t a1)
{
  unint64_t v2 = sub_24EAC0594();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EABFD8C(uint64_t a1)
{
  unint64_t v2 = sub_24EAC0594();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EABFDCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EAC23AC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24EABFDF8(uint64_t a1)
{
  unint64_t v2 = sub_24EAC05E8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EABFE34(uint64_t a1)
{
  unint64_t v2 = sub_24EAC05E8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EABFE70(uint64_t a1)
{
  unint64_t v2 = sub_24EAC063C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EABFEAC(uint64_t a1)
{
  unint64_t v2 = sub_24EAC063C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AwardProgressLoadState.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932050);
  uint64_t v40 = *(void *)(v2 - 8);
  uint64_t v41 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v38 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932058);
  uint64_t v33 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v35 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24EB3D1F0();
  uint64_t v36 = *(void *)(v5 - 8);
  uint64_t v37 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v34 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932060);
  uint64_t v32 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t State = type metadata accessor for AwardProgressLoadState();
  MEMORY[0x270FA5388](State);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932068);
  uint64_t v43 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EAC04DC();
  sub_24EB3E0F0();
  sub_24EAC0530(v42, (uint64_t)v12);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v17 = *((void *)v12 + 1);
      uint64_t v42 = *(void *)v12;
      uint64_t v18 = v42;
      uint64_t v19 = *((void *)v12 + 2);
      uint64_t v20 = *((void *)v12 + 3);
      char v21 = v12[32];
      LOBYTE(v44) = 2;
      sub_24EAC0594();
      uint64_t v22 = v38;
      sub_24EB3DF70();
      uint64_t v44 = v18;
      uint64_t v45 = v17;
      uint64_t v46 = v19;
      uint64_t v47 = v20;
      char v48 = v21;
      sub_24EAB3740();
      uint64_t v23 = v41;
      sub_24EB3DFF0();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v22, v23);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v15, v13);
      return sub_24EAB1A70(v42, v17, v19, v20, v21);
    }
    else
    {
      LOBYTE(v44) = 0;
      sub_24EAC063C();
      sub_24EB3DF70();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v7);
      return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v15, v13);
    }
  }
  else
  {
    uint64_t v25 = v33;
    char v26 = v34;
    uint64_t v28 = v36;
    uint64_t v27 = v37;
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v34, v12, v37);
    LOBYTE(v44) = 1;
    sub_24EAC05E8();
    uint64_t v29 = v35;
    sub_24EB3DF70();
    sub_24EAC1530(&qword_269932088, MEMORY[0x263F07508]);
    uint64_t v30 = v39;
    sub_24EB3DFF0();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v29, v30);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v26, v27);
    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v15, v13);
  }
}

uint64_t type metadata accessor for AwardProgressLoadState()
{
  uint64_t result = qword_26B1D2B40;
  if (!qword_26B1D2B40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_24EAC04DC()
{
  unint64_t result = qword_269932070;
  if (!qword_269932070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932070);
  }
  return result;
}

uint64_t sub_24EAC0530(uint64_t a1, uint64_t a2)
{
  uint64_t State = type metadata accessor for AwardProgressLoadState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(State - 8) + 16))(a2, a1, State);
  return a2;
}

unint64_t sub_24EAC0594()
{
  unint64_t result = qword_269932078;
  if (!qword_269932078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932078);
  }
  return result;
}

unint64_t sub_24EAC05E8()
{
  unint64_t result = qword_269932080;
  if (!qword_269932080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932080);
  }
  return result;
}

unint64_t sub_24EAC063C()
{
  unint64_t result = qword_269932090;
  if (!qword_269932090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932090);
  }
  return result;
}

uint64_t AwardProgressLoadState.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v55 = a2;
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932098);
  uint64_t v54 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  long long v59 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699320A0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v52 = v4;
  uint64_t v53 = v5;
  MEMORY[0x270FA5388](v4);
  char v58 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699320A8);
  uint64_t v49 = *(void *)(v7 - 8);
  uint64_t v50 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v57 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699320B0);
  uint64_t v56 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t State = type metadata accessor for AwardProgressLoadState();
  uint64_t v13 = MEMORY[0x270FA5388](State);
  uint64_t v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v47 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v47 - v19;
  uint64_t v21 = a1[3];
  uint64_t v60 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v21);
  sub_24EAC04DC();
  uint64_t v22 = (uint64_t)v64;
  sub_24EB3E0E0();
  if (v22) {
    goto LABEL_7;
  }
  uint64_t v47 = v15;
  char v48 = v18;
  long long v24 = v57;
  uint64_t v23 = v58;
  uint64_t v25 = v59;
  char v64 = v20;
  uint64_t v26 = State;
  uint64_t v27 = sub_24EB3DF60();
  uint64_t v28 = (char *)v27;
  if (*(void *)(v27 + 16) != 1)
  {
    uint64_t v30 = sub_24EB3DE40();
    swift_allocError();
    uint64_t v31 = v11;
    uint64_t v33 = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269931DD8);
    *uint64_t v33 = v26;
    sub_24EB3DED0();
    sub_24EB3DE30();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v30 - 8) + 104))(v33, *MEMORY[0x263F8DCB0], v30);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v31, v9);
LABEL_7:
    uint64_t v40 = (uint64_t)v60;
    return __swift_destroy_boxed_opaque_existential_1(v40);
  }
  if (*(unsigned char *)(v27 + 32))
  {
    if (*(unsigned char *)(v27 + 32) == 1)
    {
      LOBYTE(v61) = 1;
      sub_24EAC05E8();
      sub_24EB3DEC0();
      uint64_t v29 = v56;
      sub_24EB3D1F0();
      long long v59 = v28;
      sub_24EAC1530(&qword_2699320B8, MEMORY[0x263F07508]);
      uint64_t v37 = (uint64_t)v48;
      uint64_t v38 = v23;
      uint64_t v39 = v52;
      sub_24EB3DF50();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v38, v39);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v9);
      uint64_t v40 = (uint64_t)v60;
      swift_storeEnumTagMultiPayload();
      uint64_t v41 = (uint64_t)v64;
      sub_24EAC0E18(v37, (uint64_t)v64);
      uint64_t v42 = v55;
    }
    else
    {
      LOBYTE(v61) = 2;
      sub_24EAC0594();
      uint64_t v35 = v25;
      sub_24EB3DEC0();
      uint64_t v36 = v11;
      uint64_t v42 = v55;
      char v58 = v36;
      sub_24EAB4C14();
      uint64_t v43 = v51;
      sub_24EB3DF50();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v35, v43);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v58, v9);
      char v44 = v63;
      long long v45 = v62;
      uint64_t v46 = (uint64_t)v47;
      *uint64_t v47 = v61;
      *(_OWORD *)(v46 + 16) = v45;
      *(unsigned char *)(v46 + 32) = v44;
      swift_storeEnumTagMultiPayload();
      uint64_t v41 = (uint64_t)v64;
      sub_24EAC0E18(v46, (uint64_t)v64);
      uint64_t v40 = (uint64_t)v60;
    }
  }
  else
  {
    LOBYTE(v61) = 0;
    sub_24EAC063C();
    sub_24EB3DEC0();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v24, v50);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v11, v9);
    uint64_t v41 = (uint64_t)v64;
    swift_storeEnumTagMultiPayload();
    uint64_t v40 = (uint64_t)v60;
    uint64_t v42 = v55;
  }
  sub_24EAC0E18(v41, v42);
  return __swift_destroy_boxed_opaque_existential_1(v40);
}

uint64_t sub_24EAC0E18(uint64_t a1, uint64_t a2)
{
  uint64_t State = type metadata accessor for AwardProgressLoadState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(State - 8) + 32))(a2, a1, State);
  return a2;
}

uint64_t sub_24EAC0E7C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AwardProgressLoadState.init(from:)(a1, a2);
}

uint64_t sub_24EAC0E94(void *a1)
{
  return AwardProgressLoadState.encode(to:)(a1);
}

uint64_t AwardProgressLoadState.hash(into:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24EB3D1F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t State = type metadata accessor for AwardProgressLoadState();
  MEMORY[0x270FA5388](State);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_24EAC0530(v1, (uint64_t)v8);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_24EAC10A4((uint64_t)v8, (uint64_t)v12);
      sub_24EB3E0A0();
      AwardProgress.hash(into:)();
      return sub_24EAC11C8((uint64_t)v12);
    }
    else
    {
      return sub_24EB3E0A0();
    }
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_24EB3E0A0();
    sub_24EAC1530(&qword_2699320C0, MEMORY[0x263F07508]);
    sub_24EB3DBD0();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_24EAC10A4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t AwardProgressLoadState.hashValue.getter()
{
  return sub_24EB3E0D0();
}

uint64_t sub_24EAC1144()
{
  return sub_24EB3E0D0();
}

uint64_t sub_24EAC1188()
{
  return sub_24EB3E0D0();
}

uint64_t sub_24EAC11C8(uint64_t a1)
{
  return a1;
}

uint64_t _s13FitnessAwards22AwardProgressLoadStateO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24EB3D1F0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t State = type metadata accessor for AwardProgressLoadState();
  uint64_t v9 = MEMORY[0x270FA5388](State);
  uint64_t v11 = &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = &v23[-v12];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2B50);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v17 = &v23[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = (uint64_t)&v17[*(int *)(v15 + 56)];
  sub_24EAC0530(a1, (uint64_t)v17);
  sub_24EAC0530(a2, v18);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_24EAC0530((uint64_t)v17, (uint64_t)v13);
    if (!swift_getEnumCaseMultiPayload())
    {
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 32))(v7, v18, v4);
      char v20 = sub_24EB3D1D0();
      uint64_t v21 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
      v21(v7, v4);
      v21(v13, v4);
      goto LABEL_12;
    }
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v13, v4);
    goto LABEL_10;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_24EAC0530((uint64_t)v17, (uint64_t)v11);
    sub_24EAC10A4((uint64_t)v11, (uint64_t)v23);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_24EAC10A4(v18, (uint64_t)v24);
      char v20 = _s13FitnessAwards13AwardProgressO2eeoiySbAC_ACtFZ_0((uint64_t)v23, (uint64_t)v24);
      sub_24EAC11C8((uint64_t)v23);
      sub_24EAC11C8((uint64_t)v24);
LABEL_12:
      sub_24EAB173C((uint64_t)v17);
      return v20 & 1;
    }
    sub_24EAC11C8((uint64_t)v23);
    goto LABEL_10;
  }
  if (swift_getEnumCaseMultiPayload() != 2)
  {
LABEL_10:
    sub_24EAC244C((uint64_t)v17);
    char v20 = 0;
    return v20 & 1;
  }
  sub_24EAB173C((uint64_t)v17);
  char v20 = 1;
  return v20 & 1;
}

uint64_t sub_24EAC14E8()
{
  return sub_24EAC1530((unint64_t *)&qword_26B1D2B38, (void (*)(uint64_t))type metadata accessor for AwardProgressLoadState);
}

uint64_t sub_24EAC1530(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for AwardProgressLoadState(uint64_t *a1, const void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = *(void *)a2;
      uint64_t v11 = *((void *)a2 + 1);
      uint64_t v12 = *((void *)a2 + 2);
      uint64_t v13 = *((void *)a2 + 3);
      char v14 = *((unsigned char *)a2 + 32);
      sub_24EAC16CC(v10, v11, v12, v13, v14);
      *a1 = v10;
      a1[1] = v11;
      a1[2] = v12;
      a1[3] = v13;
      *((unsigned char *)a1 + 32) = v14;
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = sub_24EB3D1F0();
      (*(void (**)(uint64_t *, const void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_24EAC16CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) == 0) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for AwardProgressLoadState(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v5 = *(void *)a1;
    uint64_t v6 = *(void *)(a1 + 8);
    uint64_t v7 = *(void *)(a1 + 16);
    uint64_t v8 = *(void *)(a1 + 24);
    char v9 = *(unsigned char *)(a1 + 32);
    return sub_24EAB1A70(v5, v6, v7, v8, v9);
  }
  else if (!result)
  {
    uint64_t v3 = sub_24EB3D1F0();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

uint64_t *initializeWithCopy for AwardProgressLoadState(uint64_t *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = *(void *)a2;
    uint64_t v9 = *((void *)a2 + 1);
    uint64_t v10 = *((void *)a2 + 2);
    uint64_t v11 = *((void *)a2 + 3);
    char v12 = *((unsigned char *)a2 + 32);
    sub_24EAC16CC(v8, v9, v10, v11, v12);
    *a1 = v8;
    a1[1] = v9;
    a1[2] = v10;
    a1[3] = v11;
    *((unsigned char *)a1 + 32) = v12;
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_24EB3D1F0();
    (*(void (**)(uint64_t *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t *assignWithCopy for AwardProgressLoadState(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24EAB173C((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = *a2;
      uint64_t v9 = a2[1];
      uint64_t v10 = a2[2];
      uint64_t v11 = a2[3];
      char v12 = *((unsigned char *)a2 + 32);
      sub_24EAC16CC(v8, v9, v10, v11, v12);
      *a1 = v8;
      a1[1] = v9;
      a1[2] = v10;
      a1[3] = v11;
      *((unsigned char *)a1 + 32) = v12;
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = sub_24EB3D1F0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *initializeWithTake for AwardEarnedLoadState(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_24EB3D1F0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for AwardProgressLoadState(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24EAB173C((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_24EB3D1F0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for AwardEarnedLoadState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for AwardEarnedLoadState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_24EAC1B80()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_24EAC1B90()
{
  uint64_t result = sub_24EB3D1F0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AwardProgressLoadState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AwardProgressLoadState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EAC1D7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardProgressLoadState.CodingKeys()
{
  return &type metadata for AwardProgressLoadState.CodingKeys;
}

ValueMetadata *type metadata accessor for AwardProgressLoadState.IdleCodingKeys()
{
  return &type metadata for AwardProgressLoadState.IdleCodingKeys;
}

ValueMetadata *type metadata accessor for AwardProgressLoadState.FetchingCodingKeys()
{
  return &type metadata for AwardProgressLoadState.FetchingCodingKeys;
}

unsigned char *_s13FitnessAwards22AwardProgressLoadStateO18FetchingCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24EAC1E74);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardProgressLoadState.FetchedCodingKeys()
{
  return &type metadata for AwardProgressLoadState.FetchedCodingKeys;
}

unint64_t sub_24EAC1EB0()
{
  unint64_t result = qword_2699320C8;
  if (!qword_2699320C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699320C8);
  }
  return result;
}

unint64_t sub_24EAC1F08()
{
  unint64_t result = qword_2699320D0;
  if (!qword_2699320D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699320D0);
  }
  return result;
}

unint64_t sub_24EAC1F60()
{
  unint64_t result = qword_2699320D8;
  if (!qword_2699320D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699320D8);
  }
  return result;
}

unint64_t sub_24EAC1FB8()
{
  unint64_t result = qword_2699320E0;
  if (!qword_2699320E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699320E0);
  }
  return result;
}

unint64_t sub_24EAC2010()
{
  unint64_t result = qword_2699320E8;
  if (!qword_2699320E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699320E8);
  }
  return result;
}

unint64_t sub_24EAC2068()
{
  unint64_t result = qword_2699320F0;
  if (!qword_2699320F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699320F0);
  }
  return result;
}

unint64_t sub_24EAC20C0()
{
  unint64_t result = qword_2699320F8;
  if (!qword_2699320F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699320F8);
  }
  return result;
}

unint64_t sub_24EAC2118()
{
  unint64_t result = qword_269932100;
  if (!qword_269932100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932100);
  }
  return result;
}

unint64_t sub_24EAC2170()
{
  unint64_t result = qword_269932108;
  if (!qword_269932108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932108);
  }
  return result;
}

unint64_t sub_24EAC21C8()
{
  unint64_t result = qword_269932110;
  if (!qword_269932110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932110);
  }
  return result;
}

unint64_t sub_24EAC2220()
{
  unint64_t result = qword_269932118;
  if (!qword_269932118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932118);
  }
  return result;
}

uint64_t sub_24EAC2274(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 1701602409 && a2 == 0xE400000000000000;
  if (v3 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E696863746566 && a2 == 0xE800000000000000 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64656863746566 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_24EAC23AC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x65636E6174736E69 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_24EAC2434()
{
  return 0x65636E6174736E69;
}

uint64_t sub_24EAC244C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2B50);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_24EAC24AC()
{
  qword_269932120 = 0x756F5920726F46;
  *(void *)algn_269932128 = 0xE700000000000000;
}

uint64_t static AwardConstants.associatedCanvasIdentifier.getter()
{
  return sub_24EAC2540(&qword_269931C70, &qword_269932120);
}

void sub_24EAC24F8()
{
  qword_269932130 = 0x736472617761;
  *(void *)algn_269932138 = 0xE600000000000000;
}

uint64_t static AwardConstants.associatedShelfIdentifier.getter()
{
  return sub_24EAC2540(&qword_269931C78, &qword_269932130);
}

uint64_t sub_24EAC2540(void *a1, uint64_t *a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = *a2;
  swift_bridgeObjectRetain();
  return v3;
}

unint64_t static AwardConstants.longestWeeklyStreakAwardName.getter()
{
  return 0xD000000000000023;
}

double static AwardConstants.minimumVerticalSwipeDistance.getter()
{
  return 20.0;
}

unint64_t static AwardConstants.weeklyStreakAwardName.getter()
{
  return 0xD00000000000001CLL;
}

ValueMetadata *type metadata accessor for AwardConstants()
{
  return &type metadata for AwardConstants;
}

ValueMetadata *type metadata accessor for AwardEnvironmentCacheUpdatedEvent()
{
  return &type metadata for AwardEnvironmentCacheUpdatedEvent;
}

__n128 AwardProgressFeature.init(environment:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  type metadata accessor for AwardProgressFeature();
  sub_24EB3D1E0();
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t type metadata accessor for AwardProgressFeature()
{
  uint64_t result = qword_26B1D2B08;
  if (!qword_26B1D2B08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24EAC2684()
{
  return sub_24EB3E0D0();
}

uint64_t sub_24EAC26E8()
{
  sub_24EB3E0A0();
  return sub_24EB3DCA0();
}

uint64_t sub_24EAC273C()
{
  return sub_24EB3E0D0();
}

uint64_t sub_24EAC279C(uint64_t a1, uint64_t a2)
{
  return sub_24EAC6594(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t AwardProgressFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, char *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t v126 = a3;
  uint64_t v129 = a2;
  uint64_t v117 = a1;
  uint64_t v5 = sub_24EB3D1F0();
  uint64_t v118 = *(void *)(v5 - 8);
  uint64_t v119 = v5;
  MEMORY[0x270FA5388](v5);
  long long v113 = (char *)&v112 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t State = type metadata accessor for AwardProgressLoadState();
  uint64_t v7 = MEMORY[0x270FA5388](State);
  uint64_t v114 = (uint64_t)&v112 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v112 - v10;
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v115 = (uint64_t)&v112 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v112 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v116 = (uint64_t)&v112 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v120 = (uint64_t)&v112 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  long long v122 = (char *)&v112 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v123 = (uint64_t)&v112 - v23;
  uint64_t v24 = type metadata accessor for AwardProgressFeature();
  uint64_t v121 = *(void *)(v24 - 8);
  uint64_t v25 = *(void *)(v121 + 64);
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FD8);
  uint64_t v124 = *(void *)(v26 - 8);
  uint64_t v125 = v26;
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)&v112 - v29;
  uint64_t v31 = *(void *)(a4 + 8);
  uint64_t v130 = *(void *)a4;
  uint64_t v33 = *(void *)(a4 + 16);
  uint64_t v32 = *(void *)(a4 + 24);
  unsigned int v34 = *(unsigned __int8 *)(a4 + 32);
  if (v34 >> 6)
  {
    if (v34 >> 6 == 1)
    {
      uint64_t v35 = v130;
      uint64_t v37 = *((void *)v129 + 1);
      unint64_t v36 = *((void *)v129 + 2);
      sub_24EAC5918(v130, v31, v33, v32, v34);
      uint64_t v38 = qword_26B1D27C0;
      swift_bridgeObjectRetain();
      if (v38 != -1) {
        swift_once();
      }
      uint64_t v39 = sub_24EB3D2C0();
      uint64_t v40 = __swift_project_value_buffer(v39, (uint64_t)qword_26B1D27A8);
      sub_24EAC5918(v35, v31, v33, v32, v34);
      sub_24EAC5918(v35, v31, v33, v32, v34);
      swift_bridgeObjectRetain();
      uint64_t v127 = v40;
      uint64_t v41 = sub_24EB3D2A0();
      os_log_type_t v42 = sub_24EB3DD80();
      if (os_log_type_enabled(v41, v42))
      {
        uint64_t v43 = v37;
        uint64_t v44 = swift_slowAlloc();
        uint64_t v126 = (unint64_t *)swift_slowAlloc();
        v136[0] = (uint64_t)v126;
        *(_DWORD *)uint64_t v44 = 136315394;
        swift_bridgeObjectRetain();
        uint64_t v131 = sub_24EAC5098(v43, v36, v136);
        sub_24EB3DDB0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v44 + 12) = 2080;
        uint64_t v131 = v130;
        unint64_t v132 = v31;
        uint64_t v133 = v33;
        uint64_t v134 = v32;
        char v135 = v34 & 1;
        sub_24EAC16CC(v130, v31, v33, v32, v34 & 1);
        uint64_t v45 = sub_24EB3DC80();
        uint64_t v131 = sub_24EAC5098(v45, v46, v136);
        sub_24EB3DDB0();
        uint64_t v35 = v130;
        swift_bridgeObjectRelease();
        sub_24EAC5940(v35, v31, v33, v32, v34);
        sub_24EAC5940(v35, v31, v33, v32, v34);
        _os_log_impl(&dword_24EAA5000, v41, v42, "[AwardProgressFeature] (%s) Progress fetched: %s", (uint8_t *)v44, 0x16u);
        uint64_t v47 = v126;
        swift_arrayDestroy();
        MEMORY[0x2533497D0](v47, -1, -1);
        MEMORY[0x2533497D0](v44, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        sub_24EAC5940(v35, v31, v33, v32, v34);
        sub_24EAC5940(v35, v31, v33, v32, v34);
      }

      uint64_t v66 = (uint64_t)v122;
      uint64_t v67 = (uint64_t)&v129[*(int *)(type metadata accessor for AwardProgressState() + 24)];
      uint64_t v68 = v123;
      sub_24EAC5968(v67, v123, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
      sub_24EAC5968(v68, v66, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
      if (!swift_getEnumCaseMultiPayload())
      {
        sub_24EAB173C(v68);
        (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v66, v119);
        sub_24EAB173C(v67);
        *(void *)uint64_t v67 = v35;
        *(void *)(v67 + 8) = v31;
        *(void *)(v67 + 16) = v33;
        *(void *)(v67 + 24) = v32;
        *(unsigned char *)(v67 + 32) = v34 & 1;
        return swift_storeEnumTagMultiPayload();
      }
      sub_24EAC5940(v35, v31, v33, v32, v34);
      sub_24EAB173C(v66);
      uint64_t v69 = v120;
      sub_24EAC5968(v68, v120, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
      uint64_t v70 = sub_24EB3D2A0();
      os_log_type_t v71 = sub_24EB3DD80();
      if (os_log_type_enabled(v70, v71))
      {
        uint64_t v72 = (uint8_t *)swift_slowAlloc();
        uint64_t v73 = swift_slowAlloc();
        uint64_t v131 = v73;
        *(_DWORD *)uint64_t v72 = 136315138;
        sub_24EAC5968(v69, v116, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
        uint64_t v74 = sub_24EB3DC80();
        v136[0] = sub_24EAC5098(v74, v75, &v131);
        sub_24EB3DDB0();
        swift_bridgeObjectRelease();
        sub_24EAB173C(v69);
        _os_log_impl(&dword_24EAA5000, v70, v71, "[AwardProgressFeature] Current state is %s, skipping .fetched update", v72, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2533497D0](v73, -1, -1);
        MEMORY[0x2533497D0](v72, -1, -1);
      }
      else
      {

        sub_24EAB173C(v69);
      }
      uint64_t v76 = v68;
      return sub_24EAB173C(v76);
    }
    if (!(v33 | v31 | v130 | v32) && v34 == 128)
    {
      uint64_t v131 = 2;
      unint64_t v132 = 0;
      uint64_t v133 = 0;
      uint64_t v134 = 0;
      char v135 = 0x80;
      return AwardProgressFeature.reduce(localState:sharedState:sideEffects:action:)(v117, v129, v126, &v131);
    }
    if (v34 != 128 || v130 != 1 || v33 | v31 | v32)
    {
      uint64_t v78 = v28;
      uint64_t v79 = v129;
      uint64_t v81 = *((void *)v129 + 1);
      unint64_t v80 = *((void *)v129 + 2);
      uint64_t v82 = (uint64_t)&v79[*(int *)(type metadata accessor for AwardProgressState() + 24)];
      uint64_t v83 = v115;
      sub_24EAC5968(v82, v115, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
      sub_24EAC5968(v83, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      swift_bridgeObjectRetain();
      sub_24EAB173C((uint64_t)v11);
      if (EnumCaseMultiPayload == 2)
      {
        sub_24EAB173C(v82);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v118 + 16))(v82, v127 + *(int *)(v24 + 20), v119);
        swift_storeEnumTagMultiPayload();
        uint64_t v85 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26B1D30A0);
        uint64_t v86 = v78 + v85[16];
        uint64_t v87 = v78 + v85[20];
        long long v88 = (void *)(v78 + v85[24]);
        uint64_t v131 = v81;
        unint64_t v132 = v80;
        LOBYTE(v133) = 1;
        sub_24EAC56F0();
        swift_bridgeObjectRetain();
        sub_24EB3DDE0();
        sub_24EB3DD30();
        uint64_t v89 = swift_allocObject();
        *(void *)(v89 + 16) = v81;
        *(void *)(v89 + 24) = v80;
        *long long v88 = &unk_269932150;
        v88[1] = v89;
        uint64_t v90 = *MEMORY[0x263F39588];
        uint64_t v91 = sub_24EB3DB90();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 104))(v86, v90, v91);
        uint64_t v92 = *MEMORY[0x263F39578];
        uint64_t v93 = sub_24EB3DB80();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 104))(v87, v92, v93);
        uint64_t v95 = v124;
        uint64_t v94 = v125;
        (*(void (**)(uint64_t, void, uint64_t))(v124 + 104))(v78, *MEMORY[0x263F39530], v125);
        long long v96 = v126;
        unint64_t v97 = *v126;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v97 = sub_24EAC4C90(0, *(void *)(v97 + 16) + 1, 1, v97, &qword_2699321B8, &qword_26B1D2FD8);
        }
        unint64_t v99 = *(void *)(v97 + 16);
        unint64_t v98 = *(void *)(v97 + 24);
        if (v99 >= v98 >> 1) {
          unint64_t v97 = sub_24EAC4C90(v98 > 1, v99 + 1, 1, v97, &qword_2699321B8, &qword_26B1D2FD8);
        }
        *(void *)(v97 + 16) = v99 + 1;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v95 + 32))(v97+ ((*(unsigned __int8 *)(v95 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80))+ *(void *)(v95 + 72) * v99, v78, v94);
        *long long v96 = v97;
      }
      else
      {
        if (qword_26B1D27C0 != -1) {
          swift_once();
        }
        uint64_t v100 = sub_24EB3D2C0();
        __swift_project_value_buffer(v100, (uint64_t)qword_26B1D27A8);
        uint64_t v101 = v114;
        sub_24EAC5968(v83, v114, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
        swift_bridgeObjectRetain();
        uint64_t v102 = sub_24EB3D2A0();
        os_log_type_t v103 = sub_24EB3DD80();
        if (os_log_type_enabled(v102, v103))
        {
          uint64_t v104 = swift_slowAlloc();
          uint64_t v105 = swift_slowAlloc();
          uint64_t v131 = v105;
          *(_DWORD *)uint64_t v104 = 136315394;
          swift_bridgeObjectRetain();
          v136[0] = sub_24EAC5098(v81, v80, &v131);
          sub_24EB3DDB0();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v104 + 12) = 2080;
          sub_24EAC5968(v101, v116, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
          uint64_t v106 = sub_24EB3DC80();
          v136[0] = sub_24EAC5098(v106, v107, &v131);
          sub_24EB3DDB0();
          swift_bridgeObjectRelease();
          sub_24EAB173C(v101);
          _os_log_impl(&dword_24EAA5000, v102, v103, "[AwardProgressFeature] View appeared for %s but load state was %s, returning.", (uint8_t *)v104, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x2533497D0](v105, -1, -1);
          MEMORY[0x2533497D0](v104, -1, -1);
        }
        else
        {

          sub_24EAB173C(v101);
          swift_bridgeObjectRelease_n();
        }
      }
      uint64_t v76 = v83;
      return sub_24EAB173C(v76);
    }
    uint64_t v77 = (uint64_t)&v129[*(int *)(type metadata accessor for AwardProgressState() + 24)];
    sub_24EAC5968(v77, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
    if (swift_getEnumCaseMultiPayload())
    {
      uint64_t v76 = (uint64_t)v16;
      return sub_24EAB173C(v76);
    }
    uint64_t v109 = v118;
    uint64_t v108 = v119;
    uint64_t v110 = v113;
    (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v113, v16, v119);
    char v111 = sub_24EB3D1D0();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v109 + 8))(v110, v108);
    if (v111)
    {
      sub_24EAB173C(v77);
      return swift_storeEnumTagMultiPayload();
    }
  }
  else
  {
    char v48 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26B1D30A0);
    uint64_t v49 = &v30[v48[16]];
    uint64_t State = (uint64_t)&v30[v48[20]];
    uint64_t v129 = &v30[v48[24]];
    uint64_t v50 = v130;
    uint64_t v131 = v130;
    unint64_t v132 = v31;
    LOBYTE(v133) = 0;
    sub_24EAC5918(v130, v31, v33, v32, v34);
    sub_24EAC56F0();
    swift_bridgeObjectRetain();
    sub_24EB3DDE0();
    sub_24EB3DD30();
    uint64_t v51 = *MEMORY[0x263F39590];
    uint64_t v52 = sub_24EB3DB90();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v52 - 8) + 104))(v49, v51, v52);
    uint64_t v53 = *MEMORY[0x263F39570];
    uint64_t v54 = sub_24EB3DB80();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 104))(State, v53, v54);
    sub_24EAC5968(v127, (uint64_t)&v112 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for AwardProgressFeature);
    unint64_t v55 = (*(unsigned __int8 *)(v121 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v121 + 80);
    uint64_t v56 = swift_allocObject();
    sub_24EAC5ADC((uint64_t)&v112 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), v56 + v55);
    uint64_t v57 = (uint64_t *)(v56 + ((v25 + v55 + 7) & 0xFFFFFFFFFFFFFFF8));
    *uint64_t v57 = v50;
    v57[1] = v31;
    char v58 = v129;
    *(void *)uint64_t v129 = &unk_269932160;
    *((void *)v58 + 1) = v56;
    uint64_t v60 = v124;
    uint64_t v59 = v125;
    (*(void (**)(char *, void, uint64_t))(v124 + 104))(v30, *MEMORY[0x263F39530], v125);
    long long v61 = v126;
    unint64_t v62 = *v126;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v62 = sub_24EAC4C90(0, *(void *)(v62 + 16) + 1, 1, v62, &qword_2699321B8, &qword_26B1D2FD8);
    }
    unint64_t v64 = *(void *)(v62 + 16);
    unint64_t v63 = *(void *)(v62 + 24);
    if (v64 >= v63 >> 1) {
      unint64_t v62 = sub_24EAC4C90(v63 > 1, v64 + 1, 1, v62, &qword_2699321B8, &qword_26B1D2FD8);
    }
    *(void *)(v62 + 16) = v64 + 1;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v60 + 32))(v62+ ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80))+ *(void *)(v60 + 72) * v64, v30, v59);
    *long long v61 = v62;
  }
  return result;
}

uint64_t sub_24EAC3850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[32] = a3;
  v4[33] = a4;
  v4[30] = a1;
  v4[31] = a2;
  sub_24EB3DD20();
  v4[34] = sub_24EB3DD10();
  uint64_t v6 = sub_24EB3DCF0();
  v4[35] = v6;
  v4[36] = v5;
  return MEMORY[0x270FA2498](sub_24EAC38EC, v6, v5);
}

uint64_t sub_24EAC38EC()
{
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(void **)(v0 + 248) + ***(int ***)(v0 + 248));
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 296) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_24EAC39CC;
  uint64_t v2 = *(void *)(v0 + 256);
  uint64_t v3 = *(void *)(v0 + 264);
  return v5(v0 + 16, v2, v3);
}

uint64_t sub_24EAC39CC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 304) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 280);
    uint64_t v4 = *(void *)(v2 + 288);
    uint64_t v5 = sub_24EAC419C;
  }
  else
  {
    long long v6 = *(_OWORD *)(v2 + 32);
    *(_OWORD *)(v2 + 312) = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v2 + 328) = v6;
    *(unsigned char *)(v2 + 49) = *(unsigned char *)(v2 + 48);
    uint64_t v3 = *(void *)(v2 + 280);
    uint64_t v4 = *(void *)(v2 + 288);
    uint64_t v5 = sub_24EAC3AFC;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_24EAC3AFC()
{
  uint64_t v19 = v0;
  if (qword_26B1D27C0 != -1) {
    swift_once();
  }
  unint64_t v1 = (_OWORD *)(v0 + 312);
  uint64_t v2 = sub_24EB3D2C0();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B1D27A8);
  sub_24EAC6828(v0 + 16, (void (*)(void, void, void, void, void))sub_24EAC16CC);
  swift_bridgeObjectRetain();
  sub_24EAC6828(v0 + 16, (void (*)(void, void, void, void, void))sub_24EAC16CC);
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_24EB3D2A0();
  os_log_type_t v4 = sub_24EB3DD80();
  BOOL v5 = os_log_type_enabled(v3, v4);
  unint64_t v6 = *(void *)(v0 + 264);
  if (v5)
  {
    uint64_t v17 = *(void *)(v0 + 256);
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v18 = v8;
    *(_DWORD *)uint64_t v7 = 136315394;
    sub_24EAC10A4(v0 + 16, v0 + 96);
    sub_24EAC6828(v0 + 16, (void (*)(void, void, void, void, void))sub_24EAC16CC);
    uint64_t v9 = sub_24EB3DC80();
    *(void *)(v0 + 224) = sub_24EAC5098(v9, v10, &v18);
    sub_24EB3DDB0();
    swift_bridgeObjectRelease();
    sub_24EAC6828(v0 + 16, (void (*)(void, void, void, void, void))sub_24EAB1A70);
    sub_24EAC6828(v0 + 16, (void (*)(void, void, void, void, void))sub_24EAB1A70);
    *(_WORD *)(v7 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 232) = sub_24EAC5098(v17, v6, &v18);
    sub_24EB3DDB0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24EAA5000, v3, v4, "[AwardProgressFeature] Sending .progressFetched(%s action for %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533497D0](v8, -1, -1);
    uint64_t v11 = v7;
    unint64_t v1 = (_OWORD *)(v0 + 312);
    MEMORY[0x2533497D0](v11, -1, -1);
  }
  else
  {
    sub_24EAC6828(v0 + 16, (void (*)(void, void, void, void, void))sub_24EAB1A70);
    sub_24EAC6828(v0 + 16, (void (*)(void, void, void, void, void))sub_24EAB1A70);
    swift_bridgeObjectRelease_n();
  }

  char v12 = *(unsigned char *)(v0 + 49);
  long long v13 = v1[1];
  *(_OWORD *)(v0 + 136) = *v1;
  *(_OWORD *)(v0 + 152) = v13;
  *(unsigned char *)(v0 + 168) = v12 | 0x40;
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v0 + 344) = v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699321B0);
  *uint64_t v14 = v0;
  v14[1] = sub_24EAC3E60;
  return MEMORY[0x270F252C8](v0 + 136, v15);
}

uint64_t sub_24EAC3E60()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0 + 16;
  swift_task_dealloc();
  sub_24EAC6828(v2, (void (*)(void, void, void, void, void))sub_24EAB1A70);
  uint64_t v3 = *(void *)(v1 + 288);
  uint64_t v4 = *(void *)(v1 + 280);
  return MEMORY[0x270FA2498](sub_24EAC3FA8, v4, v3);
}

uint64_t sub_24EAC3FA8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24EAC400C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 288);
  uint64_t v3 = *(void *)(v1 + 280);
  return MEMORY[0x270FA2498](sub_24EAC412C, v3, v2);
}

uint64_t sub_24EAC412C()
{
  uint64_t v1 = *(void *)(v0 + 304);
  swift_release();
  MEMORY[0x2533495D0](v1);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_24EAC419C()
{
  uint64_t v17 = v0;
  if (qword_26B1D27C0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 304);
  uint64_t v2 = sub_24EB3D2C0();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B1D27A8);
  swift_bridgeObjectRetain();
  MEMORY[0x2533495E0](v1);
  swift_bridgeObjectRetain();
  MEMORY[0x2533495E0](v1);
  uint64_t v3 = sub_24EB3D2A0();
  os_log_type_t v4 = sub_24EB3DD80();
  BOOL v5 = os_log_type_enabled(v3, v4);
  uint64_t v6 = *(void *)(v0 + 304);
  unint64_t v7 = *(void *)(v0 + 264);
  if (v5)
  {
    uint64_t v8 = *(void *)(v0 + 256);
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v16 = v10;
    *(_DWORD *)uint64_t v9 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 216) = sub_24EAC5098(v8, v7, &v16);
    sub_24EB3DDB0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v11 = sub_24EB3E040();
    *(void *)(v0 + 200) = sub_24EAC5098(v11, v12, &v16);
    sub_24EB3DDB0();
    swift_bridgeObjectRelease();
    MEMORY[0x2533495D0](v6);
    MEMORY[0x2533495D0](v6);
    _os_log_impl(&dword_24EAA5000, v3, v4, "[AwardProgressFeature] Failed to fetch progress for %s, error %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533497D0](v10, -1, -1);
    MEMORY[0x2533497D0](v9, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    MEMORY[0x2533495D0](v6);
    MEMORY[0x2533495D0](v6);
  }

  *(void *)(v0 + 56) = 1;
  *(void *)(v0 + 72) = 0;
  *(void *)(v0 + 80) = 0;
  *(void *)(v0 + 64) = 0;
  *(unsigned char *)(v0 + 88) = 0x80;
  long long v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 352) = v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699321B0);
  *long long v13 = v0;
  v13[1] = sub_24EAC400C;
  return MEMORY[0x270F252C8](v0 + 56, v14);
}

uint64_t sub_24EAC4490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[9] = a2;
  v3[10] = a3;
  v3[8] = a1;
  sub_24EB3DD20();
  v3[11] = sub_24EB3DD10();
  uint64_t v5 = sub_24EB3DCF0();
  v3[12] = v5;
  v3[13] = v4;
  return MEMORY[0x270FA2498](sub_24EAC452C, v5, v4);
}

uint64_t sub_24EAC452C()
{
  uint64_t v14 = v0;
  if (qword_26B1D27C0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24EB3D2C0();
  __swift_project_value_buffer(v1, (uint64_t)qword_26B1D27A8);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_24EB3D2A0();
  os_log_type_t v3 = sub_24EB3DD80();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = *(void *)(v0 + 80);
  if (v4)
  {
    uint64_t v6 = *(void *)(v0 + 72);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v13 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 56) = sub_24EAC5098(v6, v5, &v13);
    sub_24EB3DDB0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24EAA5000, v2, v3, "[AwardProgressFeature] Sending .fetchAwardProgress(%s) action on view appeared", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533497D0](v8, -1, -1);
    MEMORY[0x2533497D0](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v9 = *(void *)(v0 + 80);
  *(void *)(v0 + 16) = *(void *)(v0 + 72);
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = 0;
  *(void *)(v0 + 24) = v9;
  *(unsigned char *)(v0 + 48) = 0;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699321B0);
  *uint64_t v10 = v0;
  v10[1] = sub_24EAC4780;
  return MEMORY[0x270F252C8](v0 + 16, v11);
}

uint64_t sub_24EAC4780()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 104);
  uint64_t v3 = *(void *)(v1 + 96);
  return MEMORY[0x270FA2498](sub_24EAC48A0, v3, v2);
}

uint64_t sub_24EAC48A0()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t AwardProgressFeature.dispose(localState:sharedState:)(uint64_t a1)
{
  uint64_t State = type metadata accessor for AwardProgressLoadState();
  MEMORY[0x270FA5388](State);
  BOOL v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24EB3D1F0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1 + *(int *)(type metadata accessor for AwardProgressState() + 24);
  sub_24EAC5968(v9, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
  if (swift_getEnumCaseMultiPayload()) {
    return sub_24EAB173C((uint64_t)v4);
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  type metadata accessor for AwardProgressFeature();
  char v11 = sub_24EB3D1D0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (v11)
  {
    sub_24EAB173C(v9);
    return swift_storeEnumTagMultiPayload();
  }
  return result;
}

uint64_t sub_24EAC4AC0(uint64_t a1, uint64_t a2)
{
  uint64_t State = type metadata accessor for AwardProgressLoadState();
  MEMORY[0x270FA5388](State);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24EB3D1F0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a2 + *(int *)(type metadata accessor for AwardProgressState() + 24);
  sub_24EAC5968(v10, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
  if (swift_getEnumCaseMultiPayload()) {
    return sub_24EAB173C((uint64_t)v5);
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
  char v12 = sub_24EB3D1D0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (v12)
  {
    sub_24EAB173C(v10);
    return swift_storeEnumTagMultiPayload();
  }
  return result;
}

uint64_t sub_24EAC4C7C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24EAC4C90(a1, a2, a3, a4, &qword_2699321A0, &qword_2699321A8);
}

uint64_t sub_24EAC4C90(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = *(void *)(a4 + 24);
    uint64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v10 = a2;
      }
    }
  }
  else
  {
    uint64_t v10 = a2;
  }
  uint64_t v11 = *(void *)(a4 + 16);
  if (v10 <= v11) {
    uint64_t v12 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (BOOL v18 = v14 == -1) : (BOOL v18 = 0), v18))
  {
LABEL_29:
    uint64_t result = sub_24EB3DE60();
    __break(1u);
    return result;
  }
  void v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (unint64_t)v16 + v20;
  if (a1)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(void *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_24EAC66CC(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_24EAC4EFC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24EAC4C90(a1, a2, a3, a4, &qword_269932190, &qword_269932198);
}

uint64_t sub_24EAC4F10(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24EAC4C90(a1, a2, a3, a4, &qword_26B1D31F8, &qword_26B1D2FE8);
}

uint64_t sub_24EAC4F24(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24EAC4C90(a1, a2, a3, a4, &qword_26B1D31E0, &qword_26B1D2FC8);
}

void *sub_24EAC4F38(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3200);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24EAC65D8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_24EAC5048(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24EAC4C90(a1, a2, a3, a4, &qword_269932180, &qword_269932188);
}

uint64_t sub_24EAC505C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24EAC4C90(a1, a2, a3, a4, &qword_269932170, &qword_269932178);
}

uint64_t sub_24EAC5070(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24EAC4C90(a1, a2, a3, a4, &qword_26B1D31F0, &qword_26B1D2FE0);
}

uint64_t sub_24EAC5084(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24EAC4C90(a1, a2, a3, a4, &qword_26B1D31E8, &qword_26B1D2FD0);
}

uint64_t sub_24EAC5098(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_24EAC516C(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_24EAC6868((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_24EAC6868((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_24EAC516C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_24EB3DDC0();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_24EAC5328(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_24EB3DE50();
  if (!v8)
  {
    sub_24EB3DE60();
    __break(1u);
LABEL_17:
    uint64_t result = sub_24EB3DEA0();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_24EAC5328(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_24EAC53C0(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_24EAC55A0(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_24EAC55A0(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_24EAC53C0(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_24EAC5538(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_24EB3DE20();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_24EB3DE60();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_24EB3DCB0();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_24EB3DEA0();
    __break(1u);
LABEL_14:
    uint64_t result = sub_24EB3DE60();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_24EAC5538(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3208);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_24EAC55A0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3208);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_24EB3DEA0();
  __break(1u);
  return result;
}

unint64_t sub_24EAC56F0()
{
  unint64_t result = qword_269932140;
  if (!qword_269932140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269932140);
  }
  return result;
}

uint64_t sub_24EAC5744()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24EAC577C(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  unint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *unint64_t v6 = v2;
  v6[1] = sub_24EAC5824;
  return sub_24EAC4490(a1, v5, v4);
}

uint64_t sub_24EAC5824()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24EAC5918(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 >> 6 == 1) {
    return sub_24EAC16CC(result, a2, a3, a4, a5 & 1);
  }
  if (!(a5 >> 6)) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_24EAC5940(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 >> 6 == 1) {
    return sub_24EAB1A70(result, a2, a3, a4, a5 & 1);
  }
  if (!(a5 >> 6)) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24EAC5968(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24EAC59D0()
{
  uint64_t v1 = (int *)(type metadata accessor for AwardProgressFeature() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v6 = v0 + v3;
  swift_release();
  uint64_t v7 = v6 + v1[7];
  uint64_t v8 = sub_24EB3D1F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, v5, v4);
}

uint64_t sub_24EAC5ADC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AwardProgressFeature();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EAC5B40(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for AwardProgressFeature() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1 + v5;
  uint64_t v7 = (uint64_t *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_24EAC68C4;
  return sub_24EAC3850(a1, v6, v8, v9);
}

unint64_t sub_24EAC5C58()
{
  unint64_t result = qword_26B1D2AE0;
  if (!qword_26B1D2AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2AE0);
  }
  return result;
}

unint64_t sub_24EAC5CB0()
{
  unint64_t result = qword_26B1D2AD8;
  if (!qword_26B1D2AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2AD8);
  }
  return result;
}

unint64_t sub_24EAC5D08()
{
  unint64_t result = qword_26B1D2FC0;
  if (!qword_26B1D2FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2FC0);
  }
  return result;
}

unint64_t sub_24EAC5D60()
{
  unint64_t result = qword_26B1D2A18;
  if (!qword_26B1D2A18)
  {
    type metadata accessor for AwardProgressState();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2A18);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for AwardProgressFeature(void *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    a1 = (void *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = v5;
    a1[1] = v6;
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_24EB3D1F0();
    size_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_retain();
    v11(v8, v9, v10);
  }
  return a1;
}

uint64_t destroy for AwardProgressFeature(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_24EB3D1F0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for AwardProgressFeature(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_24EB3D1F0();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_retain();
  v9(v6, v7, v8);
  return a1;
}

void *assignWithCopy for AwardProgressFeature(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_24EB3D1F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

_OWORD *initializeWithTake for AwardProgressFeature(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_24EB3D1F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_OWORD *assignWithTake for AwardProgressFeature(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24EB3D1F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for AwardProgressFeature(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EAC6160);
}

uint64_t sub_24EAC6160(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_24EB3D1F0();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    size_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for AwardProgressFeature(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EAC6224);
}

void *sub_24EAC6224(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_24EB3D1F0();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_24EAC62CC()
{
  uint64_t result = sub_24EB3D1F0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24EAC636C()
{
  return swift_bridgeObjectRetain();
}

uint64_t destroy for AwardProgressFeature.TaskIdentifier()
{
  return sub_24EAC6384();
}

uint64_t sub_24EAC6384()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s13FitnessAwards20AwardProgressFeatureV14TaskIdentifierOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_24EAC636C();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for AwardProgressFeature.TaskIdentifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_24EAC636C();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_24EAC6384();
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for AwardProgressFeature.TaskIdentifier(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_24EAC6384();
  return a1;
}

uint64_t getEnumTagSinglePayload for AwardProgressFeature.TaskIdentifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AwardProgressFeature.TaskIdentifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_24EAC6518(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_24EAC6520(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for AwardProgressFeature.TaskIdentifier()
{
  return &type metadata for AwardProgressFeature.TaskIdentifier;
}

unint64_t sub_24EAC6540()
{
  unint64_t result = qword_269932168;
  if (!qword_269932168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932168);
  }
  return result;
}

uint64_t sub_24EAC6594(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a3)
  {
    if ((a6 & 1) == 0) {
      return 0;
    }
  }
  else if (a6)
  {
    return 0;
  }
  if (a1 == a4 && a2 == a5) {
    return 1;
  }
  else {
    return sub_24EB3E010();
  }
}

uint64_t sub_24EAC65D8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24EB3DEA0();
  __break(1u);
  return result;
}

uint64_t sub_24EAC66CC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a5) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_24EB3DEA0();
  __break(1u);
  return result;
}

uint64_t sub_24EAC6828(uint64_t a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

uint64_t sub_24EAC6868(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

BOOL static FontWeight.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_24EAC68E0(char a1)
{
  if (a1) {
    return 0x72616C75676572;
  }
  else {
    return 1684828002;
  }
}

uint64_t sub_24EAC6910(uint64_t a1)
{
  unint64_t v2 = sub_24EAC6E18();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAC694C(uint64_t a1)
{
  unint64_t v2 = sub_24EAC6E18();
  return MEMORY[0x270FA00B8](a1, v2);
}

BOOL sub_24EAC6988(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_24EAC69A0()
{
  return sub_24EAC68E0(*v0);
}

uint64_t sub_24EAC69A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EAC7800(a1, a2);
  *a3 = result;
  return result;
}

void sub_24EAC69D0(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_24EAC69DC(uint64_t a1)
{
  unint64_t v2 = sub_24EAC6D70();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAC6A18(uint64_t a1)
{
  unint64_t v2 = sub_24EAC6D70();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EAC6A54(uint64_t a1)
{
  unint64_t v2 = sub_24EAC6DC4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAC6A90(uint64_t a1)
{
  unint64_t v2 = sub_24EAC6DC4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FontWeight.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699321C0);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x270FA5388](v3);
  BOOL v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699321C8);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699321D0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EAC6D70();
  sub_24EB3E0F0();
  unint64_t v13 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  if (v12)
  {
    char v22 = 1;
    sub_24EAC6DC4();
    uint64_t v14 = v18;
    sub_24EB3DF70();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    char v21 = 0;
    sub_24EAC6E18();
    sub_24EB3DF70();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*v13)(v11, v8);
}

unint64_t sub_24EAC6D70()
{
  unint64_t result = qword_2699321D8;
  if (!qword_2699321D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699321D8);
  }
  return result;
}

unint64_t sub_24EAC6DC4()
{
  unint64_t result = qword_2699321E0;
  if (!qword_2699321E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699321E0);
  }
  return result;
}

unint64_t sub_24EAC6E18()
{
  unint64_t result = qword_2699321E8;
  if (!qword_2699321E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699321E8);
  }
  return result;
}

uint64_t FontWeight.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699321F0);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699321F8);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932200);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EAC6D70();
  uint64_t v11 = v32;
  sub_24EB3E0E0();
  if (v11) {
    goto LABEL_6;
  }
  uint64_t v32 = a1;
  uint64_t v13 = v30;
  char v12 = v31;
  uint64_t v14 = v10;
  uint64_t v15 = sub_24EB3DF60();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_24EB3DE40();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269931DD8);
    *char v22 = &type metadata for FontWeight;
    sub_24EB3DED0();
    sub_24EB3DE30();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x263F8DCB0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    a1 = v32;
LABEL_6:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v23);
  }
  v26[1] = v15;
  char v16 = *(unsigned char *)(v15 + 32);
  if (v16)
  {
    char v17 = *(unsigned char *)(v15 + 32);
    char v34 = 1;
    sub_24EAC6DC4();
    BOOL v18 = v14;
    sub_24EB3DEC0();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v8);
    char v16 = v17;
  }
  else
  {
    char v33 = 0;
    sub_24EAC6E18();
    sub_24EB3DEC0();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v8);
  }
  *char v12 = v16;
  uint64_t v23 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_1(v23);
}

uint64_t sub_24EAC72C4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FontWeight.init(from:)(a1, a2);
}

uint64_t sub_24EAC72DC(void *a1)
{
  return FontWeight.encode(to:)(a1);
}

uint64_t FontWeight.hash(into:)()
{
  return sub_24EB3E0A0();
}

uint64_t FontWeight.hashValue.getter()
{
  return sub_24EB3E0D0();
}

unint64_t sub_24EAC736C()
{
  unint64_t result = qword_269932208;
  if (!qword_269932208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932208);
  }
  return result;
}

ValueMetadata *type metadata accessor for FontWeight()
{
  return &type metadata for FontWeight;
}

uint64_t getEnumTagSinglePayload for AwardToastWidth.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s13FitnessAwards10FontWeightOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EAC7534);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_24EAC755C(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for FontWeight.CodingKeys()
{
  return &type metadata for FontWeight.CodingKeys;
}

ValueMetadata *type metadata accessor for FontWeight.BoldCodingKeys()
{
  return &type metadata for FontWeight.BoldCodingKeys;
}

ValueMetadata *type metadata accessor for FontWeight.RegularCodingKeys()
{
  return &type metadata for FontWeight.RegularCodingKeys;
}

unint64_t sub_24EAC759C()
{
  unint64_t result = qword_269932210;
  if (!qword_269932210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932210);
  }
  return result;
}

unint64_t sub_24EAC75F4()
{
  unint64_t result = qword_269932218;
  if (!qword_269932218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932218);
  }
  return result;
}

unint64_t sub_24EAC764C()
{
  unint64_t result = qword_269932220;
  if (!qword_269932220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932220);
  }
  return result;
}

unint64_t sub_24EAC76A4()
{
  unint64_t result = qword_269932228;
  if (!qword_269932228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932228);
  }
  return result;
}

unint64_t sub_24EAC76FC()
{
  unint64_t result = qword_269932230;
  if (!qword_269932230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932230);
  }
  return result;
}

unint64_t sub_24EAC7754()
{
  unint64_t result = qword_269932238;
  if (!qword_269932238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932238);
  }
  return result;
}

unint64_t sub_24EAC77AC()
{
  unint64_t result = qword_269932240;
  if (!qword_269932240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932240);
  }
  return result;
}

uint64_t sub_24EAC7800(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 1684828002 && a2 == 0xE400000000000000;
  if (v3 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x72616C75676572 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24EAC78E0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3020);
  sub_24EAB15E8(&qword_26B1D3018, &qword_26B1D3020);
  return sub_24EB3D350();
}

uint64_t AwardLockupView.init(store:awardImageViewBuilder:awardProgressViewBuilder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(void *)a7 = sub_24EAACDA8;
  *(void *)(a7 + 8) = result;
  *(unsigned char *)(a7 + 16) = 0;
  *(void *)(a7 + 24) = a3;
  *(void *)(a7 + 32) = a4;
  *(void *)(a7 + 40) = a5;
  *(void *)(a7 + 48) = a6;
  return result;
}

uint64_t sub_24EAC79F8()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t AwardLockupView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v54 = a2;
  uint64_t v55 = sub_24EB3D410();
  uint64_t v53 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v52 = (char *)v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v49 = a1;
  uint64_t v50 = v4;
  sub_24EB3D3E0();
  *(void *)&long long v80 = sub_24EB3D3E0();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2DD8);
  *((void *)&v80 + 1) = v5;
  *(void *)&long long v81 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2EB8);
  *((void *)&v81 + 1) = v5;
  uint64_t v6 = *(void *)(a1 + 24);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2F58);
  uint64_t v48 = v6;
  sub_24EB3D3E0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2F68);
  sub_24EB3D3E0();
  *(void *)&long long v82 = sub_24EB3D3E0();
  swift_getTupleTypeMetadata();
  sub_24EB3DB20();
  swift_getWitnessTable();
  sub_24EB3DA60();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2DD8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2EB8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2F68);
  sub_24EB3D3E0();
  swift_getTupleTypeMetadata3();
  sub_24EB3DB20();
  swift_getWitnessTable();
  sub_24EB3DA60();
  swift_getTupleTypeMetadata3();
  sub_24EB3DB20();
  swift_getWitnessTable();
  sub_24EB3DA40();
  sub_24EB3D5A0();
  sub_24EB3D9C0();
  sub_24EB3D3E0();
  sub_24EB3D3E0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2F28);
  uint64_t v7 = sub_24EB3D3E0();
  uint64_t v8 = sub_24EB3D3D0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v10 = swift_getWitnessTable();
  uint64_t v78 = WitnessTable;
  uint64_t v79 = v10;
  uint64_t v77 = swift_getWitnessTable();
  uint64_t v75 = swift_getWitnessTable();
  uint64_t v76 = MEMORY[0x263F18C10];
  uint64_t v73 = swift_getWitnessTable();
  uint64_t v74 = MEMORY[0x263F19100];
  uint64_t v11 = swift_getWitnessTable();
  uint64_t v12 = sub_24EAB15E8(&qword_26B1D2F20, &qword_26B1D2F28);
  uint64_t v71 = v11;
  uint64_t v72 = v12;
  uint64_t v13 = swift_getWitnessTable();
  uint64_t v14 = sub_24EAC82FC(&qword_26B1D2D68, MEMORY[0x263F18DF8]);
  *(void *)&long long v80 = v7;
  *((void *)&v80 + 1) = v8;
  *(void *)&long long v81 = v13;
  *((void *)&v81 + 1) = v14;
  swift_getOpaqueTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2D50);
  sub_24EB3D3E0();
  sub_24EB3D3E0();
  uint64_t v15 = sub_24EB3D3E0();
  *(void *)&long long v80 = v7;
  *((void *)&v80 + 1) = v8;
  *(void *)&long long v81 = v13;
  *((void *)&v81 + 1) = v14;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v17 = sub_24EAB15E8(&qword_26B1D2D48, &qword_26B1D2D50);
  uint64_t v69 = OpaqueTypeConformance2;
  uint64_t v70 = v17;
  uint64_t v67 = swift_getWitnessTable();
  uint64_t v68 = MEMORY[0x263F1A240];
  uint64_t v65 = swift_getWitnessTable();
  uint64_t v66 = MEMORY[0x263F19100];
  uint64_t v46 = v15;
  uint64_t v45 = swift_getWitnessTable();
  uint64_t v18 = sub_24EB3DA20();
  uint64_t v47 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)v43 - v19;
  uint64_t v21 = swift_getWitnessTable();
  uint64_t v22 = sub_24EAC82FC(&qword_26B1D2E20, MEMORY[0x263F18FD0]);
  *(void *)&long long v80 = v18;
  *((void *)&v80 + 1) = v55;
  *(void *)&long long v81 = v21;
  *((void *)&v81 + 1) = v22;
  v43[1] = MEMORY[0x263F1A938];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v44 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v26 = (char *)v43 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v28 = (char *)v43 - v27;
  long long v29 = v51[1];
  long long v80 = *v51;
  long long v81 = v29;
  long long v82 = v51[2];
  uint64_t v30 = v51;
  uint64_t v83 = *((void *)v51 + 6);
  uint64_t v31 = swift_allocObject();
  uint64_t v32 = v49;
  uint64_t v33 = v50;
  uint64_t v34 = v48;
  *(void *)(v31 + 16) = v50;
  *(void *)(v31 + 24) = v34;
  uint64_t v35 = *(void *)(v32 + 32);
  uint64_t v36 = *(void *)(v32 + 40);
  *(void *)(v31 + 32) = v35;
  *(void *)(v31 + 40) = v36;
  long long v37 = v30[1];
  *(_OWORD *)(v31 + 48) = *v30;
  *(_OWORD *)(v31 + 64) = v37;
  *(_OWORD *)(v31 + 80) = v30[2];
  *(void *)(v31 + 96) = *((void *)v30 + 6);
  uint64_t v56 = v33;
  uint64_t v57 = v34;
  uint64_t v58 = v35;
  uint64_t v59 = v36;
  uint64_t v60 = &v80;
  sub_24EAB9FFC((uint64_t)&v80);
  sub_24EB3DA10();
  uint64_t v38 = v52;
  sub_24EB3D400();
  uint64_t v39 = v55;
  sub_24EB3D7E0();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v38, v39);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v20, v18);
  uint64_t v61 = v18;
  uint64_t v62 = v39;
  uint64_t v63 = v21;
  uint64_t v64 = v22;
  uint64_t v40 = swift_getOpaqueTypeConformance2();
  sub_24EAB73E4(v26, OpaqueTypeMetadata2, v40);
  uint64_t v41 = *(void (**)(char *, uint64_t))(v44 + 8);
  v41(v26, OpaqueTypeMetadata2);
  sub_24EAB73E4(v28, OpaqueTypeMetadata2, v40);
  return ((uint64_t (*)(char *, uint64_t))v41)(v28, OpaqueTypeMetadata2);
}

uint64_t sub_24EAC82FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EAC8348()
{
  return sub_24EACAD5C();
}

uint64_t sub_24EAC8350@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v37 = a5;
  uint64_t v36 = a4;
  uint64_t v35 = a2;
  uint64_t v38 = a6;
  sub_24EB3D3E0();
  sub_24EB3D3E0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2DD8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2EB8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2F58);
  uint64_t v34 = a3;
  sub_24EB3D3E0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2F68);
  sub_24EB3D3E0();
  *(void *)&long long v51 = sub_24EB3D3E0();
  swift_getTupleTypeMetadata();
  sub_24EB3DB20();
  swift_getWitnessTable();
  sub_24EB3DA60();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2DD8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2EB8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2F68);
  sub_24EB3D3E0();
  swift_getTupleTypeMetadata3();
  sub_24EB3DB20();
  swift_getWitnessTable();
  sub_24EB3DA60();
  swift_getTupleTypeMetadata3();
  sub_24EB3DB20();
  swift_getWitnessTable();
  sub_24EB3DA40();
  sub_24EB3D5A0();
  sub_24EB3D9C0();
  sub_24EB3D3E0();
  sub_24EB3D3E0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2F28);
  uint64_t v8 = sub_24EB3D3E0();
  uint64_t v30 = sub_24EB3D3D0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v61 = swift_getWitnessTable();
  uint64_t v59 = swift_getWitnessTable();
  uint64_t v57 = swift_getWitnessTable();
  uint64_t v58 = MEMORY[0x263F18C10];
  uint64_t v55 = swift_getWitnessTable();
  uint64_t v56 = MEMORY[0x263F19100];
  uint64_t v53 = swift_getWitnessTable();
  uint64_t v54 = sub_24EAB15E8(&qword_26B1D2F20, &qword_26B1D2F28);
  uint64_t v31 = v8;
  uint64_t v29 = swift_getWitnessTable();
  uint64_t v28 = sub_24EAC82FC(&qword_26B1D2D68, MEMORY[0x263F18DF8]);
  *(void *)&long long v49 = v8;
  *((void *)&v49 + 1) = v30;
  *(void *)&long long v50 = v29;
  *((void *)&v50 + 1) = v28;
  swift_getOpaqueTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2D50);
  uint64_t v32 = sub_24EB3D3E0();
  uint64_t v9 = sub_24EB3D3E0();
  uint64_t v33 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v27 - v10;
  uint64_t v12 = sub_24EB3D3E0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  char v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v27 - v17;
  long long v19 = a1[1];
  long long v49 = *a1;
  long long v50 = v19;
  long long v51 = a1[2];
  uint64_t v52 = *((void *)a1 + 6);
  uint64_t v45 = v35;
  uint64_t v46 = v34;
  uint64_t v47 = v36;
  uint64_t v48 = v37;
  uint64_t v20 = type metadata accessor for AwardLockupView();
  sub_24EAC8B68(v20, (uint64_t)v11);
  sub_24EB3DAF0();
  *(void *)&long long v49 = v31;
  *((void *)&v49 + 1) = v30;
  *(void *)&long long v50 = v29;
  *((void *)&v50 + 1) = v28;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v22 = sub_24EAB15E8(&qword_26B1D2D48, &qword_26B1D2D50);
  uint64_t v43 = OpaqueTypeConformance2;
  uint64_t v44 = v22;
  uint64_t v41 = swift_getWitnessTable();
  uint64_t v42 = MEMORY[0x263F1A240];
  uint64_t v26 = swift_getWitnessTable();
  sub_24EB3D8B0();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v9);
  uint64_t v39 = v26;
  uint64_t v40 = MEMORY[0x263F19100];
  uint64_t v23 = swift_getWitnessTable();
  sub_24EAB73E4(v16, v12, v23);
  uint64_t v24 = *(void (**)(char *, uint64_t))(v13 + 8);
  v24(v16, v12);
  sub_24EAB73E4(v18, v12, v23);
  return ((uint64_t (*)(char *, uint64_t))v24)(v18, v12);
}

uint64_t sub_24EAC8B0C()
{
  return sub_24EACD568((uint64_t (*)(void, void, void, void, void))sub_24EAC8350);
}

uint64_t sub_24EAC8B24()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24EAC8B68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v108 = a2;
  uint64_t v109 = a1;
  uint64_t v112 = sub_24EB3D3D0();
  uint64_t v107 = *(void *)(v112 - 8);
  MEMORY[0x270FA5388](v112);
  uint64_t v106 = (char *)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24EB3DAE0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v104 = v4;
  uint64_t v105 = v5;
  MEMORY[0x270FA5388](v4);
  os_log_type_t v103 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24EB3D280();
  uint64_t v101 = *(void *)(v7 - 8);
  uint64_t v102 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v100 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = type metadata accessor for AwardLockupLayout() - 8;
  MEMORY[0x270FA5388](v110);
  uint64_t v83 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = *(void *)(a1 + 16);
  sub_24EB3D3E0();
  *(void *)&long long v136 = sub_24EB3D3E0();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2DD8);
  *((void *)&v136 + 1) = v10;
  *(void *)&long long v137 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2EB8);
  *((void *)&v137 + 1) = v10;
  uint64_t v11 = *(void *)(a1 + 24);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2F58);
  uint64_t v111 = v11;
  sub_24EB3D3E0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2F68);
  sub_24EB3D3E0();
  *(void *)&long long v138 = sub_24EB3D3E0();
  swift_getTupleTypeMetadata();
  sub_24EB3DB20();
  swift_getWitnessTable();
  sub_24EB3DA60();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2DD8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2EB8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2F68);
  sub_24EB3D3E0();
  swift_getTupleTypeMetadata3();
  sub_24EB3DB20();
  swift_getWitnessTable();
  sub_24EB3DA60();
  swift_getTupleTypeMetadata3();
  sub_24EB3DB20();
  swift_getWitnessTable();
  sub_24EB3DA40();
  sub_24EB3D5A0();
  uint64_t v12 = sub_24EB3D9C0();
  uint64_t v85 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v70 = (char *)&v68 - v13;
  uint64_t v68 = v12;
  uint64_t v14 = sub_24EB3D3E0();
  uint64_t v95 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  long long v80 = (char *)&v68 - v15;
  uint64_t v73 = v14;
  uint64_t v16 = sub_24EB3D3E0();
  uint64_t v97 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v89 = (char *)&v68 - v17;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2F28);
  uint64_t v79 = v16;
  uint64_t v18 = sub_24EB3D3E0();
  uint64_t v96 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  long long v88 = (char *)&v68 - v19;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v21 = swift_getWitnessTable();
  uint64_t v134 = WitnessTable;
  uint64_t v135 = v21;
  uint64_t v133 = swift_getWitnessTable();
  uint64_t v69 = swift_getWitnessTable();
  uint64_t v131 = v69;
  uint64_t v132 = MEMORY[0x263F18C10];
  uint64_t v22 = MEMORY[0x263F18E48];
  uint64_t v72 = swift_getWitnessTable();
  uint64_t v129 = v72;
  uint64_t v130 = MEMORY[0x263F19100];
  uint64_t v98 = v22;
  uint64_t v23 = swift_getWitnessTable();
  uint64_t v74 = v23;
  uint64_t v24 = sub_24EAB15E8(&qword_26B1D2F20, &qword_26B1D2F28);
  uint64_t v127 = v23;
  uint64_t v128 = v24;
  uint64_t v77 = v18;
  uint64_t v25 = swift_getWitnessTable();
  uint64_t v76 = v25;
  uint64_t v75 = sub_24EAC82FC(&qword_26B1D2D68, MEMORY[0x263F18DF8]);
  *(void *)&long long v136 = v18;
  *((void *)&v136 + 1) = v112;
  *(void *)&long long v137 = v25;
  *((void *)&v137 + 1) = v75;
  uint64_t v87 = MEMORY[0x263F1A988];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v90 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v71 = (char *)&v68 - v26;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2D50);
  uint64_t v91 = sub_24EB3D3E0();
  uint64_t v93 = *(void *)(v91 - 8);
  MEMORY[0x270FA5388](v91);
  long long v81 = (char *)&v68 - v27;
  uint64_t v84 = sub_24EB3D3E0();
  uint64_t v94 = *(void *)(v84 - 8);
  uint64_t v28 = MEMORY[0x270FA5388](v84);
  uint64_t v86 = (char *)&v68 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v92 = (char *)&v68 - v30;
  long long v31 = v99[1];
  long long v136 = *v99;
  long long v137 = v31;
  long long v138 = v99[2];
  uint64_t v139 = *((void *)v99 + 6);
  uint64_t v114 = v113;
  uint64_t v115 = v111;
  uint64_t v32 = *(long long **)(v109 + 40);
  uint64_t v78 = *(void *)(v109 + 32);
  unint64_t v99 = v32;
  uint64_t v116 = v78;
  uint64_t v117 = v32;
  uint64_t v118 = &v136;
  uint64_t v33 = v70;
  sub_24EB3D9B0();
  long long v123 = v136;
  long long v124 = v137;
  long long v125 = v138;
  uint64_t v126 = v139;
  sub_24EAC78E0();
  swift_getKeyPath();
  uint64_t v34 = (uint64_t)v83;
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  uint64_t v35 = v100;
  uint64_t v36 = v101;
  uint64_t v37 = v102;
  (*(void (**)(char *, uint64_t, uint64_t))(v101 + 16))(v100, v34 + *(int *)(v110 + 32), v102);
  sub_24EACA704(v34);
  sub_24EB3D230();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v35, v37);
  uint64_t v38 = v80;
  uint64_t v39 = v68;
  sub_24EB3D8E0();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v33, v39);
  long long v123 = v136;
  long long v124 = v137;
  long long v125 = v138;
  uint64_t v126 = v139;
  sub_24EAC78E0();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  sub_24EACA704(v34);
  sub_24EB3DB10();
  uint64_t v40 = v73;
  uint64_t v41 = v89;
  sub_24EB3D8B0();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v38, v40);
  uint64_t v42 = v103;
  sub_24EB3DAD0();
  sub_24EB3D630();
  uint64_t v43 = v88;
  uint64_t v44 = v79;
  uint64_t v45 = v104;
  sub_24EB3D7C0();
  (*(void (**)(char *, uint64_t))(v105 + 8))(v42, v45);
  (*(void (**)(char *, uint64_t))(v97 + 8))(v41, v44);
  uint64_t v46 = v106;
  sub_24EB3D450();
  uint64_t v47 = v71;
  uint64_t v49 = v76;
  uint64_t v48 = v77;
  uint64_t v50 = v112;
  uint64_t v51 = v75;
  sub_24EB3D800();
  (*(void (**)(char *, uint64_t))(v107 + 8))(v46, v50);
  (*(void (**)(char *, uint64_t))(v96 + 8))(v43, v48);
  long long v123 = v136;
  long long v124 = v137;
  long long v125 = v138;
  uint64_t v126 = v139;
  sub_24EAC78E0();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  sub_24EACA704(v34);
  *(void *)&long long v123 = v48;
  *((void *)&v123 + 1) = v50;
  *(void *)&long long v124 = v49;
  *((void *)&v124 + 1) = v51;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v54 = v81;
  uint64_t v53 = OpaqueTypeMetadata2;
  sub_24EB3D810();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v47, v53);
  uint64_t v55 = swift_allocObject();
  uint64_t v56 = v111;
  *(void *)(v55 + 16) = v113;
  *(void *)(v55 + 24) = v56;
  uint64_t v57 = v99;
  *(void *)(v55 + 32) = v78;
  *(void *)(v55 + 40) = v57;
  long long v58 = v137;
  *(_OWORD *)(v55 + 48) = v136;
  *(_OWORD *)(v55 + 64) = v58;
  *(_OWORD *)(v55 + 80) = v138;
  *(void *)(v55 + 96) = v139;
  sub_24EAB9FFC((uint64_t)&v136);
  uint64_t v59 = sub_24EAB15E8(&qword_26B1D2D48, &qword_26B1D2D50);
  uint64_t v121 = OpaqueTypeConformance2;
  uint64_t v122 = v59;
  uint64_t v60 = v91;
  uint64_t v61 = swift_getWitnessTable();
  uint64_t v62 = v86;
  sub_24EB3D8F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v93 + 8))(v54, v60);
  uint64_t v119 = v61;
  uint64_t v120 = MEMORY[0x263F1A240];
  uint64_t v63 = v84;
  uint64_t v64 = swift_getWitnessTable();
  uint64_t v65 = v92;
  sub_24EAB73E4(v62, v63, v64);
  uint64_t v66 = *(void (**)(char *, uint64_t))(v94 + 8);
  v66(v62, v63);
  sub_24EAB73E4(v65, v63, v64);
  return ((uint64_t (*)(char *, uint64_t))v66)(v65, v63);
}

uint64_t type metadata accessor for AwardLockupView()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24EAC9A70()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24EACA008@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v52 = a5;
  uint64_t v53 = a4;
  uint64_t v54 = a6;
  sub_24EB3D3E0();
  uint64_t v9 = sub_24EB3D3E0();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2DD8);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2EB8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2F68);
  sub_24EB3D3E0();
  swift_getTupleTypeMetadata3();
  sub_24EB3DB20();
  swift_getWitnessTable();
  sub_24EB3DA60();
  swift_getTupleTypeMetadata3();
  sub_24EB3DB20();
  swift_getWitnessTable();
  uint64_t v12 = sub_24EB3DA40();
  uint64_t v49 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v48 = (uint64_t)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v47 = (char *)&v45 - v15;
  *(void *)&long long v61 = v9;
  *((void *)&v61 + 1) = v10;
  *(void *)&long long v62 = v11;
  *((void *)&v62 + 1) = v10;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2F58);
  sub_24EB3D3E0();
  sub_24EB3D3E0();
  *(void *)&long long v63 = sub_24EB3D3E0();
  swift_getTupleTypeMetadata();
  sub_24EB3DB20();
  swift_getWitnessTable();
  uint64_t v16 = sub_24EB3DA60();
  uint64_t v46 = *(void *)(v16 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v45 = (char *)&v45 - v20;
  uint64_t v21 = type metadata accessor for AwardLockupLayout();
  uint64_t v22 = v21 - 8;
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v45 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_24EB3D5A0();
  uint64_t v50 = *(void *)(v25 - 8);
  uint64_t v51 = v25;
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (char *)&v45 - v26;
  long long v28 = a1[1];
  long long v61 = *a1;
  long long v62 = v28;
  long long v63 = a1[2];
  uint64_t v64 = *((void *)a1 + 6);
  uint64_t v57 = a2;
  uint64_t v58 = a3;
  uint64_t v59 = v53;
  uint64_t v60 = v52;
  uint64_t v29 = type metadata accessor for AwardLockupView();
  sub_24EAC78E0();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  int v30 = v24[*(int *)(v22 + 40)];
  sub_24EACA704((uint64_t)v24);
  long long v31 = a1[1];
  long long v61 = *a1;
  long long v62 = v31;
  long long v63 = a1[2];
  uint64_t v64 = *((void *)a1 + 6);
  if (v30 == 1)
  {
    sub_24EACA760(v29, (uint64_t)v19);
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v33 = v45;
    sub_24EAB73E4(v19, v16, WitnessTable);
    uint64_t v34 = *(void (**)(char *, uint64_t))(v46 + 8);
    v34(v19, v16);
    sub_24EAB73E4(v33, v16, WitnessTable);
    swift_getWitnessTable();
    sub_24EB1673C((uint64_t)v19, v16);
    v34(v19, v16);
    uint64_t v35 = v33;
    uint64_t v36 = v16;
  }
  else
  {
    uint64_t v37 = v48;
    sub_24EACAA14(v29, v48);
    uint64_t v38 = swift_getWitnessTable();
    uint64_t v39 = v47;
    sub_24EAB73E4(v37, v12, v38);
    uint64_t v34 = *(void (**)(char *, uint64_t))(v49 + 8);
    v34((char *)v37, v12);
    sub_24EAB73E4(v39, v12, v38);
    swift_getWitnessTable();
    sub_24EB16834(v37, v16, v12);
    v34((char *)v37, v12);
    uint64_t v35 = v39;
    uint64_t v36 = v12;
  }
  v34(v35, v36);
  uint64_t v40 = swift_getWitnessTable();
  uint64_t v41 = swift_getWitnessTable();
  uint64_t v55 = v40;
  uint64_t v56 = v41;
  uint64_t v42 = v51;
  uint64_t v43 = swift_getWitnessTable();
  sub_24EAB73E4(v27, v42, v43);
  return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v27, v42);
}

uint64_t sub_24EACA6EC()
{
  return sub_24EACD568((uint64_t (*)(void, void, void, void, void))sub_24EACA008);
}

uint64_t sub_24EACA704(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AwardLockupLayout();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24EACA760@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v17[1] = a2;
  uint64_t v4 = *(void *)(a1 + 16);
  sub_24EB3D3E0();
  *(void *)&long long v20 = sub_24EB3D3E0();
  *((void *)&v20 + 1) = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2DD8);
  *(void *)&long long v21 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2EB8);
  *((void *)&v21 + 1) = *((void *)&v20 + 1);
  uint64_t v5 = *(void *)(a1 + 24);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2F58);
  sub_24EB3D3E0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2F68);
  sub_24EB3D3E0();
  *(void *)&long long v22 = sub_24EB3D3E0();
  swift_getTupleTypeMetadata();
  sub_24EB3DB20();
  swift_getWitnessTable();
  uint64_t v6 = sub_24EB3DA60();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v17 - v11;
  long long v13 = v2[1];
  long long v20 = *v2;
  long long v21 = v13;
  long long v22 = v2[2];
  uint64_t v23 = *((void *)v2 + 6);
  sub_24EB3D570();
  v17[4] = v4;
  v17[5] = v5;
  long long v18 = *(_OWORD *)(a1 + 32);
  uint64_t v19 = &v20;
  sub_24EB3DA50();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24EAB73E4(v10, v6, WitnessTable);
  uint64_t v15 = *(void (**)(char *, uint64_t))(v7 + 8);
  v15(v10, v6);
  sub_24EAB73E4(v12, v6, WitnessTable);
  return ((uint64_t (*)(char *, uint64_t))v15)(v12, v6);
}

uint64_t sub_24EACAA14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v17[1] = a2;
  uint64_t v4 = *(void *)(a1 + 16);
  sub_24EB3D3E0();
  sub_24EB3D3E0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2DD8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2EB8);
  uint64_t v5 = *(void *)(a1 + 24);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2F68);
  sub_24EB3D3E0();
  swift_getTupleTypeMetadata3();
  sub_24EB3DB20();
  swift_getWitnessTable();
  sub_24EB3DA60();
  swift_getTupleTypeMetadata3();
  sub_24EB3DB20();
  swift_getWitnessTable();
  uint64_t v6 = sub_24EB3DA40();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v17 - v11;
  long long v13 = *(_OWORD *)(v2 + 16);
  v20[0] = *(_OWORD *)v2;
  v20[1] = v13;
  v20[2] = *(_OWORD *)(v2 + 32);
  uint64_t v21 = *(void *)(v2 + 48);
  sub_24EB3D4E0();
  v17[4] = v4;
  v17[5] = v5;
  long long v18 = *(_OWORD *)(a1 + 32);
  uint64_t v19 = v20;
  sub_24EB3DA30();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24EAB73E4(v10, v6, WitnessTable);
  uint64_t v15 = *(void (**)(char *, uint64_t))(v7 + 8);
  v15(v10, v6);
  sub_24EAB73E4(v12, v6, WitnessTable);
  return ((uint64_t (*)(char *, uint64_t))v15)(v12, v6);
}

uint64_t sub_24EACACDC()
{
  return swift_release();
}

uint64_t sub_24EACAD54()
{
  return sub_24EACAD5C();
}

uint64_t sub_24EACAD5C()
{
  return sub_24EACACDC();
}

uint64_t sub_24EACAD84@<X0>(void (**a1)(uint64_t)@<X0>, char *a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v73 = a3;
  uint64_t v74 = a5;
  long long v62 = a4;
  uint64_t v70 = a6;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2EB8);
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2DD8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2F68);
  sub_24EB3D3E0();
  swift_getTupleTypeMetadata3();
  uint64_t v67 = sub_24EB3DB20();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v66 = sub_24EB3DA60();
  uint64_t v68 = *(void *)(v66 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v66);
  long long v63 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v64 = (char *)&v50 - v10;
  uint64_t v61 = sub_24EB3D280();
  uint64_t v59 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  uint64_t v57 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for AwardLockupLayout();
  uint64_t v13 = v12 - 8;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *((void *)a2 - 1);
  MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_24EB3D3E0();
  uint64_t v58 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v54 = (char *)&v50 - v21;
  uint64_t v22 = sub_24EB3D3E0();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v71 = v22;
  uint64_t v72 = v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v56 = (char *)&v50 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v75 = (char *)&v50 - v27;
  a1[3](v26);
  sub_24EB3DB00();
  long long v28 = v62;
  sub_24EB3D8A0();
  uint64_t v29 = *(void (**)(char *, char *))(v17 + 8);
  uint64_t v60 = a2;
  v29(v19, a2);
  long long v30 = *((_OWORD *)a1 + 1);
  long long v85 = *(_OWORD *)a1;
  long long v86 = v30;
  long long v87 = *((_OWORD *)a1 + 2);
  long long v88 = a1[6];
  uint64_t v91 = a2;
  uint64_t v92 = v73;
  uint64_t v93 = v28;
  uint64_t v94 = v74;
  uint64_t v55 = type metadata accessor for AwardLockupView();
  sub_24EAC78E0();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  long long v31 = &v16[*(int *)(v13 + 28)];
  uint64_t v32 = v59;
  uint64_t v33 = v57;
  uint64_t v34 = v61;
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v57, v31, v61);
  sub_24EACA704((uint64_t)v16);
  sub_24EB3D230();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v34);
  v90[5] = v28;
  v90[6] = MEMORY[0x263F18860];
  uint64_t v35 = swift_getWitnessTable();
  uint64_t v36 = v56;
  uint64_t v37 = v54;
  sub_24EB3D8E0();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v37, v20);
  v90[3] = v35;
  v90[4] = MEMORY[0x263F18C10];
  uint64_t v38 = v71;
  uint64_t v58 = swift_getWitnessTable();
  sub_24EAB73E4(v36, v38, v58);
  uint64_t v59 = *(void *)(v72 + 8);
  uint64_t v61 = v72 + 8;
  uint64_t v39 = v36;
  ((void (*)(char *, uint64_t))v59)(v36, v38);
  long long v40 = *((_OWORD *)a1 + 1);
  long long v85 = *(_OWORD *)a1;
  long long v86 = v40;
  long long v87 = *((_OWORD *)a1 + 2);
  long long v88 = a1[6];
  sub_24EAC78E0();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  sub_24EACA704((uint64_t)v16);
  sub_24EB3DB00();
  sub_24EB3D380();
  uint64_t v57 = v91;
  LODWORD(v55) = v92;
  uint64_t v54 = v93;
  int v53 = v94;
  uint64_t v51 = v96;
  uint64_t v52 = v95;
  sub_24EB3D570();
  uint64_t v76 = v60;
  uint64_t v77 = v73;
  uint64_t v78 = v28;
  uint64_t v79 = v74;
  long long v80 = a1;
  uint64_t v41 = v63;
  sub_24EB3DA50();
  uint64_t v42 = v66;
  uint64_t v43 = swift_getWitnessTable();
  uint64_t v44 = v64;
  sub_24EAB73E4(v41, v42, v43);
  uint64_t v45 = v68;
  uint64_t v46 = *(void (**)(char *, uint64_t))(v68 + 8);
  v46(v41, v42);
  uint64_t v47 = v71;
  (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v39, v75, v71);
  *(void *)&long long v85 = 0;
  BYTE8(v85) = 1;
  *(void *)&long long v86 = v57;
  BYTE8(v86) = v55;
  *(void *)&long long v87 = v54;
  BYTE8(v87) = v53;
  long long v88 = v52;
  uint64_t v89 = v51;
  v90[0] = v39;
  v90[1] = &v85;
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v41, v44, v42);
  v90[2] = v41;
  v84[0] = v47;
  v84[1] = v69;
  v84[2] = v42;
  uint64_t v81 = v58;
  unint64_t v82 = sub_24EABF88C();
  uint64_t v83 = v43;
  sub_24EB1692C((uint64_t)v90, 3uLL, (uint64_t)v84);
  v46(v44, v42);
  uint64_t v48 = (uint64_t (*)(char *, uint64_t))v59;
  ((void (*)(char *, uint64_t))v59)(v75, v47);
  v46(v41, v42);
  return v48(v39, v47);
}

uint64_t sub_24EACB604@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v45 = a5;
  uint64_t v44 = a4;
  uint64_t v52 = a6;
  uint64_t v50 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2F68);
  uint64_t v12 = sub_24EB3D3E0();
  uint64_t v51 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v48 = (char *)&v39 - v16;
  uint64_t v17 = type metadata accessor for AwardLockupLayout();
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2EB8);
  uint64_t v20 = MEMORY[0x270FA5388](v49);
  uint64_t v47 = (uint64_t)&v39 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v39 - v22;
  uint64_t v46 = (uint64_t)&v39 - v22;
  long long v24 = a1[1];
  long long v57 = *a1;
  long long v58 = v24;
  long long v59 = a1[2];
  uint64_t v60 = *((void *)a1 + 6);
  uint64_t v63 = a2;
  uint64_t v64 = a3;
  uint64_t v65 = v44;
  uint64_t v66 = a5;
  uint64_t v25 = type metadata accessor for AwardLockupView();
  sub_24EACBBD0(v25, (uint64_t)v23);
  long long v26 = a1[1];
  long long v57 = *a1;
  long long v58 = v26;
  long long v59 = a1[2];
  uint64_t v60 = *((void *)a1 + 6);
  sub_24EAC78E0();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  sub_24EACA704((uint64_t)v19);
  sub_24EB3DB00();
  uint64_t v27 = sub_24EB3D380();
  uint64_t v28 = v63;
  LODWORD(v44) = v64;
  uint64_t v43 = v65;
  int v42 = v66;
  uint64_t v41 = v67;
  uint64_t v40 = v68;
  (*((void (**)(uint64_t))a1 + 5))(v27);
  long long v29 = a1[1];
  long long v57 = *a1;
  long long v58 = v29;
  long long v59 = a1[2];
  uint64_t v60 = *((void *)a1 + 6);
  sub_24EAC78E0();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  sub_24EACA704((uint64_t)v19);
  uint64_t v30 = v45;
  sub_24EB3D940();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v11, a3);
  uint64_t v31 = sub_24EAB15E8(&qword_26B1D2F60, &qword_26B1D2F68);
  v62[3] = v30;
  v62[4] = v31;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v33 = v48;
  sub_24EAB73E4(v15, v12, WitnessTable);
  uint64_t v34 = v51;
  uint64_t v35 = *(void (**)(char *, uint64_t))(v51 + 8);
  v35(v15, v12);
  uint64_t v36 = v46;
  uint64_t v37 = v47;
  sub_24EACD244(v46, v47);
  *(void *)&long long v57 = 0;
  BYTE8(v57) = 1;
  *(void *)&long long v58 = v28;
  BYTE8(v58) = v44;
  *(void *)&long long v59 = v43;
  BYTE8(v59) = v42;
  uint64_t v60 = v41;
  uint64_t v61 = v40;
  v62[0] = v37;
  v62[1] = &v57;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v15, v33, v12);
  v62[2] = v15;
  v56[0] = v49;
  v56[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2DD8);
  v56[2] = v12;
  unint64_t v53 = sub_24EACD2AC();
  unint64_t v54 = sub_24EABF88C();
  uint64_t v55 = WitnessTable;
  sub_24EB1692C((uint64_t)v62, 3uLL, (uint64_t)v56);
  v35(v33, v12);
  sub_24EACD4D0(v36);
  v35(v15, v12);
  return sub_24EACD4D0(v37);
}

uint64_t sub_24EACBBD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v78 = a2;
  uint64_t v63 = type metadata accessor for AwardLockupLayout();
  MEMORY[0x270FA5388](v63);
  long long v62 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2E30);
  MEMORY[0x270FA5388](v75);
  uint64_t v77 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24EB3D430();
  uint64_t v72 = *(void *)(v6 - 8);
  uint64_t v73 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2F88);
  uint64_t v9 = *(void *)(v76 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v76);
  uint64_t v71 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v74 = (char *)&v61 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3000);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (uint64_t *)((char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FB0);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *v2;
  int v21 = *((unsigned __int8 *)v2 + 16);
  uint64_t v22 = v2[3];
  uint64_t v23 = v2[4];
  uint64_t v24 = v2[5];
  uint64_t v25 = v2[6];
  uint64_t v69 = v2[1];
  uint64_t v70 = v20;
  *(void *)&long long v88 = v20;
  *((void *)&v88 + 1) = v69;
  int v68 = v21;
  LOBYTE(v89) = v21;
  uint64_t v66 = v23;
  uint64_t v67 = v22;
  *((void *)&v89 + 1) = v22;
  *(void *)&long long v90 = v23;
  uint64_t v64 = v25;
  uint64_t v65 = v24;
  *((void *)&v90 + 1) = v24;
  *(void *)&long long v91 = v25;
  uint64_t v61 = a1;
  sub_24EAC78E0();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  sub_24EB3DB50();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v33 = *v15;
      uint64_t v32 = v15[1];
      uint64_t v74 = (char *)v15 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1D28C0) + 48);
      *(void *)&long long v88 = v33;
      *((void *)&v88 + 1) = v32;
      sub_24EABF994();
      swift_bridgeObjectRetain();
      uint64_t v34 = sub_24EB3D770();
      uint64_t v36 = v35;
      char v38 = v37;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)&long long v88 = v70;
      *((void *)&v88 + 1) = v69;
      LOBYTE(v89) = v68;
      *((void *)&v89 + 1) = v67;
      *(void *)&long long v90 = v66;
      *((void *)&v90 + 1) = v65;
      *(void *)&long long v91 = v64;
      sub_24EAC78E0();
      swift_getKeyPath();
      uint64_t v39 = (uint64_t)v62;
      sub_24EB3DBA0();
      swift_release();
      swift_release();
      uint64_t v40 = v63;
      uint64_t v41 = (unsigned char *)(v39 + *(int *)(v63 + 48));
      LOBYTE(v32) = *v41;
      char v42 = v41[1];
      sub_24EACA704(v39);
      LOBYTE(v88) = v32;
      BYTE1(v88) = v42;
      sub_24EB1A9A8();
      uint64_t v43 = sub_24EB3D750();
      uint64_t v71 = v44;
      uint64_t v72 = v43;
      char v46 = v45;
      uint64_t v73 = v47;
      swift_release();
      v46 &= 1u;
      sub_24EAB1A80(v34, v36, v38 & 1);
      swift_bridgeObjectRelease();
      *(void *)&long long v88 = v70;
      *((void *)&v88 + 1) = v69;
      LOBYTE(v89) = v68;
      *((void *)&v89 + 1) = v67;
      *(void *)&long long v90 = v66;
      *((void *)&v90 + 1) = v65;
      *(void *)&long long v91 = v64;
      sub_24EAC78E0();
      swift_getKeyPath();
      sub_24EB3DBA0();
      swift_release();
      swift_release();
      uint64_t v48 = *(void *)(v39 + *(int *)(v40 + 36));
      sub_24EACA704(v39);
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v51 = (uint64_t)v71;
      uint64_t v50 = v72;
      uint64_t v99 = v72;
      uint64_t v100 = v71;
      char v101 = v46;
      uint64_t v102 = v73;
      uint64_t v103 = KeyPath;
      uint64_t v104 = v48;
      char v105 = 0;
      sub_24EB3DB10();
      sub_24EB3C510(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v79, 0.0, 1, 0.0, 1);
      sub_24EAB1A80(v50, v51, v46);
      swift_release();
      swift_bridgeObjectRelease();
      long long v96 = v85;
      long long v97 = v86;
      long long v92 = v81;
      long long v93 = v82;
      long long v52 = v84;
      long long v94 = v83;
      long long v95 = v84;
      long long v88 = v79[0];
      long long v89 = v79[1];
      long long v53 = v80;
      long long v90 = v79[2];
      long long v91 = v80;
      long long v54 = v86;
      uint64_t v55 = v77;
      *((_OWORD *)v77 + 8) = v85;
      *((_OWORD *)v55 + 9) = v54;
      long long v56 = v93;
      long long v57 = v94;
      *((_OWORD *)v55 + 4) = v92;
      *((_OWORD *)v55 + 5) = v56;
      uint64_t v98 = v87;
      *((void *)v55 + 20) = v87;
      *((_OWORD *)v55 + 6) = v57;
      *((_OWORD *)v55 + 7) = v52;
      long long v58 = v89;
      long long v59 = v90;
      *(_OWORD *)uint64_t v55 = v88;
      *((_OWORD *)v55 + 1) = v58;
      *((_OWORD *)v55 + 2) = v59;
      *((_OWORD *)v55 + 3) = v53;
      *((_WORD *)v55 + 84) = 256;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2E18);
      *(void *)&v79[0] = MEMORY[0x263F1A830];
      *((void *)&v79[0] + 1) = MEMORY[0x263F1A820];
      swift_getOpaqueTypeConformance2();
      sub_24EACD3B4(&qword_26B1D2E10, &qword_26B1D2E18, (void (*)(void))sub_24EACD384);
      sub_24EB3D590();
      uint64_t v60 = sub_24EB3D1C0();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v60 - 8) + 8))(v74, v60);
      break;
    case 3u:
    case 4u:
      goto LABEL_3;
    default:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_3:
      *(void *)&long long v88 = 0xD000000000000011;
      *((void *)&v88 + 1) = 0x800000024EB4A970;
      LOBYTE(v89) = 0;
      *((void *)&v89 + 1) = MEMORY[0x263F8EE78];
      sub_24EB3D420();
      uint64_t v26 = MEMORY[0x263F1A830];
      uint64_t v27 = MEMORY[0x263F1A820];
      uint64_t v28 = v71;
      sub_24EB3D910();
      (*(void (**)(char *, uint64_t))(v72 + 8))(v8, v73);
      sub_24EAB1A80(v88, *((uint64_t *)&v88 + 1), v89);
      swift_bridgeObjectRelease();
      long long v29 = v74;
      uint64_t v30 = v76;
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v74, v28, v76);
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v77, v29, v30);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2E18);
      *(void *)&long long v88 = v26;
      *((void *)&v88 + 1) = v27;
      swift_getOpaqueTypeConformance2();
      sub_24EACD3B4(&qword_26B1D2E10, &qword_26B1D2E18, (void (*)(void))sub_24EACD384);
      sub_24EB3D590();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v29, v30);
      break;
  }
  return result;
}

uint64_t sub_24EACC4E0@<X0>(void (**a1)(uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void (*a5)(void, void)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v114 = a3;
  uint64_t v115 = a5;
  uint64_t v109 = a6;
  uint64_t v98 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  long long v95 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2F58);
  uint64_t v100 = sub_24EB3D3E0();
  uint64_t v105 = *(void *)(v100 - 8);
  MEMORY[0x270FA5388](v100);
  long long v96 = (char *)&v79 - v10;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2F68);
  uint64_t v101 = sub_24EB3D3E0();
  uint64_t v106 = *(void *)(v101 - 8);
  MEMORY[0x270FA5388](v101);
  long long v97 = (char *)&v79 - v11;
  uint64_t v104 = sub_24EB3D3E0();
  uint64_t v107 = *(void *)(v104 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v104);
  uint64_t v99 = (char *)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v102 = (char *)&v79 - v14;
  uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2EB8);
  uint64_t v15 = MEMORY[0x270FA5388](v108);
  uint64_t v103 = (uint64_t)&v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v116 = (uint64_t)&v79 - v17;
  uint64_t v18 = sub_24EB3D280();
  uint64_t v93 = *(void *)(v18 - 8);
  long long v94 = (void (*)(void, void))v18;
  MEMORY[0x270FA5388](v18);
  long long v91 = (char *)&v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = type metadata accessor for AwardLockupLayout() - 8;
  uint64_t v20 = MEMORY[0x270FA5388](v111);
  uint64_t v22 = (char *)&v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v25 = (char *)&v79 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_24EB3D3E0();
  uint64_t v92 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)&v79 - v27;
  uint64_t v29 = sub_24EB3D3E0();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v112 = v29;
  uint64_t v113 = v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v117 = (char *)&v79 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v118 = (char *)&v79 - v34;
  a1[3](v33);
  sub_24EB3DB00();
  sub_24EB3D8A0();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, a2);
  long long v35 = *((_OWORD *)a1 + 1);
  long long v137 = *(_OWORD *)a1;
  long long v138 = v35;
  long long v139 = *((_OWORD *)a1 + 2);
  uint64_t v140 = a1[6];
  uint64_t v129 = a2;
  uint64_t v130 = v114;
  uint64_t v131 = a4;
  uint64_t v132 = v115;
  uint64_t v110 = type metadata accessor for AwardLockupView();
  sub_24EAC78E0();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  uint64_t v37 = v93;
  uint64_t v36 = v94;
  char v38 = v91;
  (*(void (**)(char *, char *, void (*)(void, void)))(v93 + 16))(v91, &v22[*(int *)(v111 + 28)], v94);
  sub_24EACA704((uint64_t)v22);
  sub_24EB3D230();
  (*(void (**)(char *, void))(v37 + 8))(v38, v36);
  v142[13] = a4;
  v142[14] = MEMORY[0x263F18860];
  uint64_t v85 = MEMORY[0x263F18E48];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v40 = v117;
  sub_24EB3D8E0();
  (*(void (**)(char *, uint64_t))(v92 + 8))(v28, v26);
  v142[11] = WitnessTable;
  v142[12] = MEMORY[0x263F18C10];
  uint64_t v41 = v112;
  uint64_t v92 = swift_getWitnessTable();
  sub_24EAB73E4(v40, v41, v92);
  char v42 = *(void (**)(void, void))(v113 + 8);
  uint64_t v93 = v113 + 8;
  long long v94 = v42;
  v42(v40, v41);
  long long v43 = *((_OWORD *)a1 + 1);
  long long v137 = *(_OWORD *)a1;
  long long v138 = v43;
  long long v139 = *((_OWORD *)a1 + 2);
  uint64_t v140 = a1[6];
  uint64_t v44 = v110;
  sub_24EAC78E0();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  sub_24EACA704((uint64_t)v22);
  sub_24EB3DB00();
  sub_24EB3D380();
  long long v91 = (char *)v142[15];
  int v90 = v143;
  uint64_t v89 = v144;
  int v88 = v145;
  uint64_t v86 = v147;
  uint64_t v87 = v146;
  long long v45 = *((_OWORD *)a1 + 1);
  long long v137 = *(_OWORD *)a1;
  long long v138 = v45;
  long long v139 = *((_OWORD *)a1 + 2);
  uint64_t v140 = a1[6];
  sub_24EACBBD0(v44, v116);
  long long v46 = *((_OWORD *)a1 + 1);
  long long v137 = *(_OWORD *)a1;
  long long v138 = v46;
  long long v139 = *((_OWORD *)a1 + 2);
  uint64_t v140 = a1[6];
  sub_24EAC78E0();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  uint64_t v47 = v111;
  sub_24EACA704((uint64_t)v22);
  sub_24EB3DB00();
  uint64_t v48 = sub_24EB3D380();
  uint64_t v84 = v148;
  int v83 = v149;
  uint64_t v82 = v150;
  int v81 = v151;
  uint64_t v79 = v153;
  uint64_t v80 = v152;
  uint64_t v49 = v95;
  a1[5](v48);
  long long v50 = *((_OWORD *)a1 + 1);
  long long v137 = *(_OWORD *)a1;
  long long v138 = v50;
  long long v139 = *((_OWORD *)a1 + 2);
  uint64_t v140 = a1[6];
  sub_24EAC78E0();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  uint64_t v51 = &v22[*(int *)(v47 + 52)];
  LOBYTE(v41) = *v51;
  LOBYTE(WitnessTable) = v51[1];
  sub_24EACA704((uint64_t)v22);
  LOBYTE(v137) = v41;
  BYTE1(v137) = WitnessTable;
  sub_24EB1A9A8();
  long long v52 = v96;
  uint64_t v54 = v114;
  long long v53 = v115;
  sub_24EB3D890();
  swift_release();
  (*(void (**)(char *, uint64_t))(v98 + 8))(v49, v54);
  long long v55 = *((_OWORD *)a1 + 1);
  long long v137 = *(_OWORD *)a1;
  long long v138 = v55;
  long long v139 = *((_OWORD *)a1 + 2);
  uint64_t v140 = a1[6];
  sub_24EAC78E0();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  sub_24EACA704((uint64_t)v22);
  uint64_t v56 = sub_24EAB15E8(&qword_26B1D2F50, &qword_26B1D2F58);
  v142[9] = v53;
  v142[10] = v56;
  uint64_t v57 = v100;
  uint64_t v58 = swift_getWitnessTable();
  long long v59 = v97;
  sub_24EB3D940();
  (*(void (**)(char *, uint64_t))(v105 + 8))(v52, v57);
  uint64_t v60 = sub_24EAB15E8(&qword_26B1D2F60, &qword_26B1D2F68);
  v142[7] = v58;
  v142[8] = v60;
  uint64_t v61 = v101;
  uint64_t v62 = swift_getWitnessTable();
  uint64_t v63 = v99;
  sub_24EB3D920();
  (*(void (**)(char *, uint64_t))(v106 + 8))(v59, v61);
  v142[5] = v62;
  v142[6] = MEMORY[0x263F190E0];
  uint64_t v64 = v104;
  uint64_t v114 = swift_getWitnessTable();
  uint64_t v65 = v102;
  sub_24EAB73E4(v63, v64, v114);
  uint64_t v66 = v107;
  uint64_t v115 = *(void (**)(void, void))(v107 + 8);
  v115(v63, v64);
  uint64_t v67 = v112;
  int v68 = v117;
  (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v117, v118, v112);
  *(void *)&long long v137 = 0;
  BYTE8(v137) = 1;
  *(void *)&long long v138 = v91;
  BYTE8(v138) = v90;
  *(void *)&long long v139 = v89;
  BYTE8(v139) = v88;
  uint64_t v140 = v87;
  uint64_t v141 = v86;
  v142[0] = v68;
  v142[1] = &v137;
  uint64_t v69 = v116;
  uint64_t v70 = v103;
  sub_24EACD244(v116, v103);
  uint64_t v129 = 0;
  LOBYTE(v130) = 1;
  uint64_t v131 = v84;
  LOBYTE(v132) = v83;
  uint64_t v133 = v82;
  char v134 = v81;
  uint64_t v135 = v80;
  uint64_t v136 = v79;
  v142[2] = v70;
  v142[3] = &v129;
  uint64_t v71 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
  uint64_t v72 = v65;
  v71(v63, v65, v64);
  v142[4] = v63;
  uint64_t v124 = v67;
  uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2DD8);
  uint64_t v126 = v108;
  uint64_t v127 = v125;
  uint64_t v128 = v64;
  uint64_t v119 = v92;
  unint64_t v73 = sub_24EABF88C();
  unint64_t v120 = v73;
  unint64_t v121 = sub_24EACD2AC();
  unint64_t v122 = v73;
  uint64_t v123 = v114;
  sub_24EB1692C((uint64_t)v142, 5uLL, (uint64_t)&v124);
  uint64_t v74 = (void (*)(char *, uint64_t))v115;
  v115(v72, v64);
  sub_24EACD4D0(v69);
  uint64_t v75 = v67;
  uint64_t v76 = v67;
  uint64_t v77 = (uint64_t (*)(char *, uint64_t))v94;
  v94(v118, v76);
  v74(v63, v64);
  sub_24EACD4D0(v70);
  return v77(v117, v75);
}

uint64_t sub_24EACD22C()
{
  return sub_24EACD568((uint64_t (*)(void, void, void, void, void))sub_24EACC4E0);
}

uint64_t sub_24EACD244(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2EB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_24EACD2AC()
{
  unint64_t result = qword_26B1D2EB0;
  if (!qword_26B1D2EB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2EB8);
    swift_getOpaqueTypeConformance2();
    sub_24EACD3B4(&qword_26B1D2E10, &qword_26B1D2E18, (void (*)(void))sub_24EACD384);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2EB0);
  }
  return result;
}

uint64_t sub_24EACD384()
{
  return sub_24EACD3B4(&qword_26B1D2DF0, &qword_26B1D2DF8, (void (*)(void))sub_24EACD430);
}

uint64_t sub_24EACD3B4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24EACD430()
{
  unint64_t result = qword_26B1D2D80;
  if (!qword_26B1D2D80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2D88);
    sub_24EAB15E8(&qword_26B1D2F60, &qword_26B1D2F68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2D80);
  }
  return result;
}

uint64_t sub_24EACD4D0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2EB8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24EACD538()
{
  return sub_24EACD568((uint64_t (*)(void, void, void, void, void))sub_24EACAD84);
}

uint64_t sub_24EACD550()
{
  return sub_24EACD568((uint64_t (*)(void, void, void, void, void))sub_24EACB604);
}

uint64_t sub_24EACD568(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[6], v1[2], v1[3], v1[4], v1[5]);
}

__n128 AwardRemoteParticipantStatusMonitorFeature.init(environment:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t AwardRemoteParticipantStatusMonitorFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, unint64_t *a2, unint64_t *a3, unsigned char *a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699321A8);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t State = type metadata accessor for AwardToastLoadState();
  uint64_t v13 = MEMORY[0x270FA5388](State);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v82 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v20 = (char *)&v82 - v19;
  if (*a4)
  {
    uint64_t v22 = *v4;
    uint64_t v21 = v4[1];
    uint64_t v23 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26B1D30A0);
    uint64_t v24 = &v11[v23[16]];
    uint64_t v25 = &v11[v23[20]];
    uint64_t v26 = &v11[v23[24]];
    sub_24EACF09C();
    sub_24EB3DDE0();
    sub_24EB3DD30();
    uint64_t v27 = *MEMORY[0x263F39580];
    uint64_t v28 = sub_24EB3DB90();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 104))(v24, v27, v28);
    uint64_t v29 = *MEMORY[0x263F39570];
    uint64_t v30 = sub_24EB3DB80();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 104))(v25, v29, v30);
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = v22;
    *(void *)(v31 + 24) = v21;
    *(void *)uint64_t v26 = &unk_269932258;
    *((void *)v26 + 1) = v31;
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F39530], v8);
    unint64_t v32 = *a3;
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v32 = sub_24EAC4C7C(0, *(void *)(v32 + 16) + 1, 1, v32);
    }
    unint64_t v34 = *(void *)(v32 + 16);
    unint64_t v33 = *(void *)(v32 + 24);
    if (v34 >= v33 >> 1) {
      unint64_t v32 = sub_24EAC4C7C(v33 > 1, v34 + 1, 1, v32);
    }
    *(void *)(v32 + 16) = v34 + 1;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v9 + 32))(v32+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v34, v11, v8);
    *a3 = v32;
  }
  else
  {
    uint64_t v83 = v18;
    uint64_t v85 = v17;
    uint64_t v36 = qword_26B1D27C0;
    swift_bridgeObjectRetain();
    if (v36 != -1) {
      swift_once();
    }
    uint64_t v37 = sub_24EB3D2C0();
    uint64_t v38 = __swift_project_value_buffer(v37, (uint64_t)qword_26B1D27A8);
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_24EB3D2A0();
    os_log_type_t v40 = sub_24EB3DD80();
    BOOL v41 = os_log_type_enabled(v39, v40);
    uint64_t v86 = v20;
    uint64_t v87 = (unint64_t *)v38;
    uint64_t v84 = v16;
    if (v41)
    {
      char v42 = (uint8_t *)swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      uint64_t v89 = v43;
      *(_DWORD *)char v42 = 136315138;
      type metadata accessor for AwardEarnedLoadState();
      swift_bridgeObjectRetain();
      uint64_t v44 = sub_24EB3DBC0();
      unint64_t v46 = v45;
      swift_bridgeObjectRelease();
      uint64_t v88 = sub_24EAC5098(v44, v46, &v89);
      sub_24EB3DDB0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24EAA5000, v39, v40, "[RemoteBrowsingIdentityUpdatedMonitor] Clearing previous earned load states %s", v42, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533497D0](v43, -1, -1);
      MEMORY[0x2533497D0](v42, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRetain_n();
    uint64_t v47 = sub_24EB3D2A0();
    os_log_type_t v48 = sub_24EB3DD80();
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v49 = (uint8_t *)swift_slowAlloc();
      uint64_t v50 = swift_slowAlloc();
      uint64_t v89 = v50;
      *(_DWORD *)uint64_t v49 = 136315138;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_269932260);
      uint64_t v51 = sub_24EB3DBC0();
      unint64_t v53 = v52;
      swift_bridgeObjectRelease();
      uint64_t v88 = sub_24EAC5098(v51, v53, &v89);
      sub_24EB3DDB0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24EAA5000, v47, v48, "[RemoteBrowsingIdentityUpdatedMonitor] Clearing previous image load states %s", v49, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533497D0](v50, -1, -1);
      MEMORY[0x2533497D0](v49, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRetain_n();
    uint64_t v54 = sub_24EB3D2A0();
    os_log_type_t v55 = sub_24EB3DD80();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = (uint8_t *)swift_slowAlloc();
      uint64_t v57 = swift_slowAlloc();
      uint64_t v89 = v57;
      *(_DWORD *)uint64_t v56 = 136315138;
      type metadata accessor for AwardProgressLoadState();
      swift_bridgeObjectRetain();
      uint64_t v58 = sub_24EB3DBC0();
      unint64_t v60 = v59;
      swift_bridgeObjectRelease();
      uint64_t v88 = sub_24EAC5098(v58, v60, &v89);
      sub_24EB3DDB0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24EAA5000, v54, v55, "[RemoteBrowsingIdentityUpdatedMonitor] Clearing previous progress load states %s", v56, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533497D0](v57, -1, -1);
      MEMORY[0x2533497D0](v56, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRetain_n();
    uint64_t v61 = sub_24EB3D2A0();
    os_log_type_t v62 = sub_24EB3DD80();
    if (os_log_type_enabled(v61, v62))
    {
      uint64_t v63 = (uint8_t *)swift_slowAlloc();
      uint64_t v64 = swift_slowAlloc();
      uint64_t v89 = v64;
      *(_DWORD *)uint64_t v63 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v65 = sub_24EB3DBC0();
      unint64_t v67 = v66;
      swift_bridgeObjectRelease();
      uint64_t v88 = sub_24EAC5098(v65, v67, &v89);
      sub_24EB3DDB0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24EAA5000, v61, v62, "[RemoteBrowsingIdentityUpdatedMonitor] Clearing previous suggested workout load states %s", v63, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533497D0](v64, -1, -1);
      MEMORY[0x2533497D0](v63, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v68 = (uint64_t)v86;
    uint64_t v69 = (uint64_t)v84;
    uint64_t v70 = (uint64_t)a2 + *(int *)(type metadata accessor for AwardRemoteParticipantStatusMonitorState() + 32);
    sub_24EACF1D0(v70, v68);
    sub_24EACF1D0(v68, v69);
    uint64_t v71 = sub_24EB3D2A0();
    os_log_type_t v72 = sub_24EB3DD80();
    if (os_log_type_enabled(v71, v72))
    {
      uint64_t v87 = a2;
      unint64_t v73 = (uint8_t *)swift_slowAlloc();
      uint64_t v74 = swift_slowAlloc();
      uint64_t v89 = v74;
      *(_DWORD *)unint64_t v73 = 136315138;
      sub_24EACF1D0(v69, v83);
      uint64_t v75 = sub_24EB3DC80();
      uint64_t v88 = sub_24EAC5098(v75, v76, &v89);
      uint64_t v68 = (uint64_t)v86;
      a2 = v87;
      sub_24EB3DDB0();
      swift_bridgeObjectRelease();
      sub_24EACF234(v69);
      _os_log_impl(&dword_24EAA5000, v71, v72, "[RemoteBrowsingIdentityUpdatedMonitor] Clearing previous toast load state %s", v73, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533497D0](v74, -1, -1);
      MEMORY[0x2533497D0](v73, -1, -1);
    }
    else
    {
      sub_24EACF234(v69);
    }

    uint64_t v77 = MEMORY[0x263F8EE78];
    unint64_t v78 = sub_24EACE278(MEMORY[0x263F8EE78], &qword_269932298, &qword_2699322A0, (uint64_t (*)(void))type metadata accessor for AwardEarnedLoadState, (uint64_t (*)(void))type metadata accessor for AwardEarnedLoadState);
    swift_bridgeObjectRelease();
    *a2 = v78;
    unint64_t v79 = sub_24EACE120(v77);
    swift_bridgeObjectRelease();
    a2[1] = v79;
    unint64_t v80 = sub_24EACE278(v77, &qword_269932288, &qword_26B1D30A8, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
    swift_bridgeObjectRelease();
    a2[2] = v80;
    unint64_t v81 = sub_24EACE468(v77);
    sub_24EACF234(v68);
    swift_bridgeObjectRelease();
    a2[3] = v81;
    sub_24EACF234(v70);
    return swift_storeEnumTagMultiPayload();
  }
  return result;
}

unint64_t sub_24EACE0E4(uint64_t a1)
{
  return sub_24EACE278(a1, &qword_269932298, &qword_2699322A0, (uint64_t (*)(void))type metadata accessor for AwardEarnedLoadState, (uint64_t (*)(void))type metadata accessor for AwardEarnedLoadState);
}

unint64_t sub_24EACE120(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269932290);
  uint64_t v2 = (void *)sub_24EB3DE90();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_24EAE9EE0(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24EACE23C(uint64_t a1)
{
  return sub_24EACE278(a1, &qword_269932288, &qword_26B1D30A8, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
}

unint64_t sub_24EACE278(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v31 = a4;
  unint64_t v32 = a5;
  unint64_t v33 = a2;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (uint64_t *)((char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    BOOL v12 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v11 = sub_24EB3DE90();
  BOOL v12 = (void *)v11;
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v12;
  }
  uint64_t v14 = (uint64_t)v10 + *(int *)(v7 + 48);
  uint64_t v15 = v11 + 64;
  unint64_t v16 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v30 = a1;
  uint64_t v17 = a1 + v16;
  uint64_t v18 = *(void *)(v8 + 72);
  swift_retain();
  while (1)
  {
    sub_24EAB1D9C(v17, (uint64_t)v10, v33);
    uint64_t v20 = *v10;
    uint64_t v19 = v10[1];
    unint64_t result = sub_24EAE9EE0(*v10, v19);
    if (v22) {
      break;
    }
    unint64_t v23 = result;
    *(void *)(v15 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v24 = (uint64_t *)(v12[6] + 16 * result);
    uint64_t *v24 = v20;
    v24[1] = v19;
    uint64_t v25 = v12[7];
    uint64_t v26 = v31(0);
    unint64_t result = sub_24EACF604(v14, v25 + *(void *)(*(void *)(v26 - 8) + 72) * v23, v32);
    uint64_t v27 = v12[2];
    BOOL v28 = __OFADD__(v27, 1);
    uint64_t v29 = v27 + 1;
    if (v28) {
      goto LABEL_11;
    }
    v12[2] = v29;
    v17 += v18;
    if (!--v13)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24EACE468(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D30B0);
  uint64_t v2 = (void *)sub_24EB3DE90();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    unint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    sub_24EAA8EB8(v7);
    unint64_t result = sub_24EAE9EE0(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_24EACE584(uint64_t a1, int *a2)
{
  v2[12] = a1;
  v2[13] = sub_24EB3DD20();
  v2[14] = sub_24EB3DD10();
  uint64_t v6 = (uint64_t (*)(void *))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  v2[15] = v4;
  void *v4 = v2;
  v4[1] = sub_24EACE68C;
  return v6(v2 + 7);
}

uint64_t sub_24EACE68C()
{
  uint64_t v2 = (void *)*v1;
  v2[16] = v0;
  swift_task_dealloc();
  uint64_t v4 = sub_24EB3DCF0();
  v2[17] = v4;
  v2[18] = v3;
  if (v0) {
    uint64_t v5 = sub_24EACF030;
  }
  else {
    uint64_t v5 = sub_24EACE7EC;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_24EACE7EC()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = __swift_project_boxed_opaque_existential_1(v0 + 7, v1);
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t v4 = swift_task_alloc();
  (*(void (**)(uint64_t, void *, uint64_t))(v3 + 16))(v4, v2, v1);
  v0[5] = swift_getAssociatedTypeWitness();
  v0[6] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1(v0 + 2);
  sub_24EB3DD50();
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 7));
  uint64_t v5 = sub_24EB3DD10();
  v0[19] = v5;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 2), v0[5]);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[20] = (uint64_t)v6;
  *uint64_t v6 = v0;
  v6[1] = sub_24EACE9DC;
  uint64_t v7 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1E88](v0 + 22, v5, v7);
}

uint64_t sub_24EACE9DC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 144);
  uint64_t v3 = *(void *)(v1 + 136);
  return MEMORY[0x270FA2498](sub_24EACEB20, v3, v2);
}

uint64_t sub_24EACEB20()
{
  uint64_t v17 = v0;
  int v1 = *(unsigned __int8 *)(v0 + 176);
  if (v1 == 2)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  else if (v1)
  {
    uint64_t v13 = sub_24EB3DD10();
    *(void *)(v0 + 152) = v13;
    __swift_mutable_project_boxed_opaque_existential_1(v0 + 16, *(void *)(v0 + 40));
    uint64_t v14 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_24EACE9DC;
    uint64_t v15 = MEMORY[0x263F8F500];
    return MEMORY[0x270FA1E88](v0 + 176, v13, v15);
  }
  else
  {
    if (qword_26B1D27C0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_24EB3D2C0();
    __swift_project_value_buffer(v4, (uint64_t)qword_26B1D27A8);
    uint64_t v5 = sub_24EB3D2A0();
    os_log_type_t v6 = sub_24EB3DD80();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      uint64_t v16 = v8;
      *(_DWORD *)uint64_t v7 = 136315138;
      *(unsigned char *)(v0 + 178) = 0;
      uint64_t v9 = sub_24EB3DC80();
      *(void *)(v7 + 4) = sub_24EAC5098(v9, v10, &v16);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24EAA5000, v5, v6, "[RemoteBrowsingIdentityUpdatedMonitor] Received updated remote browsing identity (%s) - clearing award states.", (uint8_t *)v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533497D0](v8, -1, -1);
      MEMORY[0x2533497D0](v7, -1, -1);
    }

    *(unsigned char *)(v0 + 177) = 0;
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v11;
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699322A8);
    *uint64_t v11 = v0;
    v11[1] = sub_24EACEE24;
    return MEMORY[0x270F252C8](v0 + 177, v12);
  }
}

uint64_t sub_24EACEE24()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 144);
  uint64_t v3 = *(void *)(v1 + 136);
  return MEMORY[0x270FA2498](sub_24EACEF44, v3, v2);
}

uint64_t sub_24EACEF44()
{
  uint64_t v1 = sub_24EB3DD10();
  v0[19] = v1;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 2), v0[5]);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[20] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = sub_24EACE9DC;
  uint64_t v3 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1E88](v0 + 22, v1, v3);
}

uint64_t sub_24EACF030()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_24EACF09C()
{
  unint64_t result = qword_269932248;
  if (!qword_269932248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269932248);
  }
  return result;
}

uint64_t sub_24EACF0F0()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24EACF128(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24EAC5824;
  return sub_24EACE584(a1, v4);
}

uint64_t sub_24EACF1D0(uint64_t a1, uint64_t a2)
{
  uint64_t State = type metadata accessor for AwardToastLoadState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(State - 8) + 16))(a2, a1, State);
  return a2;
}

uint64_t sub_24EACF234(uint64_t a1)
{
  uint64_t State = type metadata accessor for AwardToastLoadState();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(State - 8) + 8))(a1, State);
  return a1;
}

unint64_t sub_24EACF294()
{
  unint64_t result = qword_269932268;
  if (!qword_269932268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932268);
  }
  return result;
}

unint64_t sub_24EACF2EC()
{
  unint64_t result = qword_269932270;
  if (!qword_269932270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932270);
  }
  return result;
}

unint64_t sub_24EACF344()
{
  unint64_t result = qword_269932278;
  if (!qword_269932278)
  {
    type metadata accessor for AwardRemoteParticipantStatusMonitorState();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932278);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for AwardProgressEnvironment(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for AwardProgressEnvironment()
{
  return swift_release();
}

void *assignWithCopy for AwardProgressEnvironment(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for AwardProgressEnvironment(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AwardProgressEnvironment(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AwardProgressEnvironment(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardRemoteParticipantStatusMonitorFeature()
{
  return &type metadata for AwardRemoteParticipantStatusMonitorFeature;
}

unsigned char *storeEnumTagSinglePayload for AwardRemoteParticipantStatusMonitorFeature.TaskIdentifier(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24EACF574);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardRemoteParticipantStatusMonitorFeature.TaskIdentifier()
{
  return &type metadata for AwardRemoteParticipantStatusMonitorFeature.TaskIdentifier;
}

unint64_t sub_24EACF5B0()
{
  unint64_t result = qword_269932280;
  if (!qword_269932280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932280);
  }
  return result;
}

uint64_t sub_24EACF604(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

void __swiftcall AwardDescription.init(title:longDescription:shouldDisplayProgress:)(FitnessAwards::AwardDescription *__return_ptr retstr, Swift::String title, Swift::String longDescription, Swift::Bool shouldDisplayProgress)
{
  retstr->title = title;
  retstr->longDescription = longDescription;
  retstr->shouldDisplayProgress = shouldDisplayProgress;
}

uint64_t sub_24EACF734(char a1)
{
  if (!a1) {
    return 0x656C746974;
  }
  if (a1 == 1) {
    return 0x63736544676E6F6CLL;
  }
  return 0xD000000000000015;
}

uint64_t sub_24EACF798()
{
  return sub_24EACF734(*v0);
}

uint64_t sub_24EACF7A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EAD04EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EACF7C8(uint64_t a1)
{
  unint64_t v2 = sub_24EACF9EC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EACF804(uint64_t a1)
{
  unint64_t v2 = sub_24EACF9EC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AwardDescription.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699322B0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  os_log_type_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  v10[1] = *(void *)(v1 + 24);
  void v10[2] = v7;
  int v11 = *(unsigned __int8 *)(v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EACF9EC();
  sub_24EB3E0F0();
  char v14 = 0;
  uint64_t v8 = v10[3];
  sub_24EB3DFB0();
  if (!v8)
  {
    char v13 = 1;
    sub_24EB3DFB0();
    char v12 = 2;
    sub_24EB3DFC0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_24EACF9EC()
{
  unint64_t result = qword_2699322B8;
  if (!qword_2699322B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699322B8);
  }
  return result;
}

uint64_t AwardDescription.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699322C0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EACF9EC();
  sub_24EB3E0E0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v24 = 0;
  uint64_t v9 = sub_24EB3DF10();
  uint64_t v11 = v10;
  uint64_t v21 = v9;
  char v23 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_24EB3DF10();
  uint64_t v14 = v13;
  uint64_t v19 = v12;
  char v22 = 2;
  swift_bridgeObjectRetain();
  uint64_t v20 = v14;
  LOBYTE(v14) = sub_24EB3DF20();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  char v15 = v14 & 1;
  uint64_t v16 = v20;
  *(void *)a2 = v21;
  *(void *)(a2 + 8) = v11;
  *(void *)(a2 + 16) = v19;
  *(void *)(a2 + 24) = v16;
  *(unsigned char *)(a2 + 32) = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EACFCC0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AwardDescription.init(from:)(a1, a2);
}

uint64_t sub_24EACFCD8(void *a1)
{
  return AwardDescription.encode(to:)(a1);
}

uint64_t AwardDescription.hash(into:)()
{
  return sub_24EB3E0B0();
}

uint64_t AwardDescription.hashValue.getter()
{
  return sub_24EB3E0D0();
}

uint64_t sub_24EACFE1C()
{
  return sub_24EB3E0D0();
}

uint64_t sub_24EACFEBC()
{
  return sub_24EB3E0B0();
}

uint64_t sub_24EACFF44()
{
  return sub_24EB3E0D0();
}

uint64_t _s13FitnessAwards16AwardDescriptionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  int v4 = *(unsigned __int8 *)(a1 + 32);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  int v7 = *(unsigned __int8 *)(a2 + 32);
  BOOL v8 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v8 || (v9 = sub_24EB3E010(), uint64_t result = 0, (v9 & 1) != 0))
  {
    if (v2 == v5 && v3 == v6) {
      return v4 ^ v7 ^ 1u;
    }
    char v12 = sub_24EB3E010();
    uint64_t result = 0;
    if (v12) {
      return v4 ^ v7 ^ 1u;
    }
  }
  return result;
}

unint64_t sub_24EAD0090()
{
  unint64_t result = qword_26B1D28C8;
  if (!qword_26B1D28C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D28C8);
  }
  return result;
}

uint64_t destroy for AwardDescription()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AwardDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AwardDescription(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AwardDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for AwardCanvasPlaceholder(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AwardCanvasPlaceholder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardDescription()
{
  return &type metadata for AwardDescription;
}

unsigned char *storeEnumTagSinglePayload for AwardDescription.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EAD03ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardDescription.CodingKeys()
{
  return &type metadata for AwardDescription.CodingKeys;
}

unint64_t sub_24EAD03E8()
{
  unint64_t result = qword_2699322C8;
  if (!qword_2699322C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699322C8);
  }
  return result;
}

unint64_t sub_24EAD0440()
{
  unint64_t result = qword_2699322D0;
  if (!qword_2699322D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699322D0);
  }
  return result;
}

unint64_t sub_24EAD0498()
{
  unint64_t result = qword_2699322D8;
  if (!qword_2699322D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699322D8);
  }
  return result;
}

uint64_t sub_24EAD04EC(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v3 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x63736544676E6F6CLL && a2 == 0xEF6E6F6974706972 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000024EB4A990)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t AwardDetailEnvironment.init(fetchAwardEarnedState:refreshSuggestedWorkoutsCanvas:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t destroy for AwardDetailEnvironment()
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for AwardDetailEnvironment(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for AwardDetailEnvironment(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_OWORD *assignWithTake for AwardDetailEnvironment(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AwardDetailEnvironment(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AwardDetailEnvironment(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardDetailEnvironment()
{
  return &type metadata for AwardDetailEnvironment;
}

uint64_t sub_24EAD0820(char a1)
{
  if (a1) {
    return 0x6469576465786966;
  }
  else {
    return 1701736302;
  }
}

uint64_t sub_24EAD0854()
{
  return sub_24EAD0820(*v0);
}

uint64_t sub_24EAD085C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EAD1A94(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EAD0884(uint64_t a1)
{
  unint64_t v2 = sub_24EAD0D20();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAD08C0(uint64_t a1)
{
  unint64_t v2 = sub_24EAD0D20();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EAD0900@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EAD1B78(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24EAD092C(uint64_t a1)
{
  unint64_t v2 = sub_24EAD0D74();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAD0968(uint64_t a1)
{
  unint64_t v2 = sub_24EAD0D74();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EAD09A4(uint64_t a1)
{
  unint64_t v2 = sub_24EAD0DC8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAD09E0(uint64_t a1)
{
  unint64_t v2 = sub_24EAD0DC8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AwardToastWidth.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699322E0);
  uint64_t v21 = *(void *)(v3 - 8);
  uint64_t v22 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v20 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699322E8);
  uint64_t v18 = *(void *)(v5 - 8);
  uint64_t v19 = v5;
  MEMORY[0x270FA5388](v5);
  int v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699322F0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *v1;
  char v13 = *((unsigned char *)v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EAD0D20();
  sub_24EB3E0F0();
  if (v13)
  {
    char v23 = 0;
    sub_24EAD0DC8();
    sub_24EB3DF70();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v19);
  }
  else
  {
    char v25 = 1;
    sub_24EAD0D74();
    char v15 = v20;
    sub_24EB3DF70();
    uint64_t v24 = v12;
    sub_24EAB67FC();
    uint64_t v16 = v22;
    sub_24EB3DFF0();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v15, v16);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

unint64_t sub_24EAD0D20()
{
  unint64_t result = qword_2699322F8;
  if (!qword_2699322F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699322F8);
  }
  return result;
}

unint64_t sub_24EAD0D74()
{
  unint64_t result = qword_269932300;
  if (!qword_269932300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932300);
  }
  return result;
}

unint64_t sub_24EAD0DC8()
{
  unint64_t result = qword_269932308;
  if (!qword_269932308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932308);
  }
  return result;
}

uint64_t AwardToastWidth.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  BOOL v28 = a2;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932310);
  uint64_t v27 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932318);
  uint64_t v26 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932320);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  uint64_t v29 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_24EAD0D20();
  uint64_t v13 = v30;
  sub_24EB3E0E0();
  if (v13) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  }
  uint64_t v30 = v9;
  uint64_t v14 = sub_24EB3DF60();
  if (*(void *)(v14 + 16) != 1)
  {
    uint64_t v16 = sub_24EB3DE40();
    swift_allocError();
    uint64_t v18 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269931DD8);
    *uint64_t v18 = &type metadata for AwardToastWidth;
    sub_24EB3DED0();
    sub_24EB3DE30();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v16 - 8) + 104))(v18, *MEMORY[0x263F8DCB0], v16);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v8);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  }
  uint64_t v24 = v14;
  char v15 = *(unsigned char *)(v14 + 32);
  if (v15)
  {
    char v33 = 1;
    sub_24EAD0D74();
    sub_24EB3DEC0();
    sub_24EAB6B8C();
    uint64_t v20 = v25;
    sub_24EB3DF50();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v20);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v8);
    uint64_t v21 = v31;
  }
  else
  {
    char v32 = 0;
    sub_24EAD0DC8();
    sub_24EB3DEC0();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v8);
    uint64_t v21 = 0;
  }
  char v23 = v28;
  uint64_t v22 = (uint64_t)v29;
  *BOOL v28 = v21;
  *((unsigned char *)v23 + 8) = v15 ^ 1;
  return __swift_destroy_boxed_opaque_existential_1(v22);
}

uint64_t sub_24EAD12D4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return AwardToastWidth.init(from:)(a1, a2);
}

uint64_t sub_24EAD12EC(void *a1)
{
  return AwardToastWidth.encode(to:)(a1);
}

uint64_t AwardToastWidth.hash(into:)()
{
  if (*(unsigned char *)(v0 + 8)) {
    return sub_24EB3E0A0();
  }
  sub_24EB3E0A0();
  return sub_24EB3E0C0();
}

uint64_t static AwardToastWidth.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 8);
  unsigned int v4 = *(unsigned __int8 *)(a2 + 8);
  uint64_t result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0) {
    return *(double *)a1 == *(double *)a2;
  }
  return result;
}

uint64_t AwardToastWidth.hashValue.getter()
{
  char v1 = *(unsigned char *)(v0 + 8);
  sub_24EB3E090();
  sub_24EB3E0A0();
  if ((v1 & 1) == 0) {
    sub_24EB3E0C0();
  }
  return sub_24EB3E0D0();
}

uint64_t sub_24EAD13F8()
{
  if (*(unsigned char *)(v0 + 8)) {
    return sub_24EB3E0A0();
  }
  sub_24EB3E0A0();
  return sub_24EB3E0C0();
}

uint64_t sub_24EAD1448()
{
  char v1 = *(unsigned char *)(v0 + 8);
  sub_24EB3E090();
  sub_24EB3E0A0();
  if ((v1 & 1) == 0) {
    sub_24EB3E0C0();
  }
  return sub_24EB3E0D0();
}

unint64_t sub_24EAD14B8()
{
  unint64_t result = qword_269932328;
  if (!qword_269932328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932328);
  }
  return result;
}

uint64_t sub_24EAD150C(uint64_t a1, uint64_t a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 8);
  unsigned int v4 = *(unsigned __int8 *)(a2 + 8);
  uint64_t result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0) {
    return *(double *)a1 == *(double *)a2;
  }
  return result;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for AwardToastWidth(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AwardToastWidth(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_24EAD15A0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_24EAD15BC(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardToastWidth()
{
  return &type metadata for AwardToastWidth;
}

unsigned char *storeEnumTagSinglePayload for AwardToastWidth.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EAD16B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardToastWidth.CodingKeys()
{
  return &type metadata for AwardToastWidth.CodingKeys;
}

ValueMetadata *type metadata accessor for AwardToastWidth.NoneCodingKeys()
{
  return &type metadata for AwardToastWidth.NoneCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for AwardToastWidth.FixedWidthCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24EAD179CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardToastWidth.FixedWidthCodingKeys()
{
  return &type metadata for AwardToastWidth.FixedWidthCodingKeys;
}

unint64_t sub_24EAD17D8()
{
  unint64_t result = qword_269932330;
  if (!qword_269932330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932330);
  }
  return result;
}

unint64_t sub_24EAD1830()
{
  unint64_t result = qword_269932338;
  if (!qword_269932338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932338);
  }
  return result;
}

unint64_t sub_24EAD1888()
{
  unint64_t result = qword_269932340;
  if (!qword_269932340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932340);
  }
  return result;
}

unint64_t sub_24EAD18E0()
{
  unint64_t result = qword_269932348;
  if (!qword_269932348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932348);
  }
  return result;
}

unint64_t sub_24EAD1938()
{
  unint64_t result = qword_269932350;
  if (!qword_269932350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932350);
  }
  return result;
}

unint64_t sub_24EAD1990()
{
  unint64_t result = qword_269932358;
  if (!qword_269932358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932358);
  }
  return result;
}

unint64_t sub_24EAD19E8()
{
  unint64_t result = qword_269932360;
  if (!qword_269932360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932360);
  }
  return result;
}

unint64_t sub_24EAD1A40()
{
  unint64_t result = qword_269932368;
  if (!qword_269932368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932368);
  }
  return result;
}

uint64_t sub_24EAD1A94(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 1701736302 && a2 == 0xE400000000000000;
  if (v3 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6469576465786966 && a2 == 0xEA00000000006874)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24EAD1B78(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6874646977 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_24EAD1BF8()
{
  return 0x6874646977;
}

unint64_t sub_24EAD1C0C(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x73736572676F7270;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0x6570704177656976;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24EAD1CDC()
{
  return sub_24EAD1C0C(*v0);
}

uint64_t sub_24EAD1CE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EAD3AF4(a1, a2);
  *a3 = result;
  return result;
}

void sub_24EAD1D0C(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_24EAD1D18(uint64_t a1)
{
  unint64_t v2 = sub_24EAD25D0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAD1D54(uint64_t a1)
{
  unint64_t v2 = sub_24EAD25D0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EAD1D90(uint64_t a1)
{
  unint64_t v2 = sub_24EAD2774();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAD1DCC(uint64_t a1)
{
  unint64_t v2 = sub_24EAD2774();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EAD1E08(uint64_t a1)
{
  unint64_t v2 = sub_24EAD2720();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAD1E44(uint64_t a1)
{
  unint64_t v2 = sub_24EAD2720();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EAD1E80(uint64_t a1)
{
  unint64_t v2 = sub_24EAD2678();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAD1EBC(uint64_t a1)
{
  unint64_t v2 = sub_24EAD2678();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EAD1EF8(uint64_t a1)
{
  unint64_t v2 = sub_24EAD26CC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAD1F34(uint64_t a1)
{
  unint64_t v2 = sub_24EAD26CC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EAD1F70(uint64_t a1)
{
  unint64_t v2 = sub_24EAD2624();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAD1FAC(uint64_t a1)
{
  unint64_t v2 = sub_24EAD2624();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AwardProgressAction.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3140);
  uint64_t v32 = *(void *)(v3 - 8);
  uint64_t v33 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v31 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3130);
  uint64_t v29 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  BOOL v28 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3128);
  uint64_t v39 = *(void *)(v6 - 8);
  uint64_t v40 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v38 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3148);
  uint64_t v35 = *(void *)(v8 - 8);
  uint64_t v36 = v8;
  MEMORY[0x270FA5388](v8);
  unint64_t v34 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3120);
  uint64_t v37 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3138);
  uint64_t v44 = *(void *)(v13 - 8);
  uint64_t v45 = v13;
  MEMORY[0x270FA5388](v13);
  char v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *v1;
  uint64_t v42 = v1[1];
  uint64_t v43 = v16;
  uint64_t v17 = v1[3];
  uint64_t v41 = v1[2];
  unsigned int v18 = *((unsigned __int8 *)v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EAD25D0();
  sub_24EB3E0F0();
  if (!(v18 >> 6))
  {
    LOBYTE(v46) = 0;
    sub_24EAD2774();
    uint64_t v22 = v45;
    sub_24EB3DF70();
    sub_24EB3DFB0();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v12, v10);
    return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v15, v22);
  }
  if (v18 >> 6 != 1)
  {
    if (v41 | v42 | v43 | v17 || v18 != 128)
    {
      if (v18 == 128 && v43 == 1 && !(v41 | v42 | v17))
      {
        LOBYTE(v46) = 3;
        sub_24EAD2678();
        uint64_t v27 = v28;
        uint64_t v20 = v45;
        sub_24EB3DF70();
        (*(void (**)(char *, uint64_t))(v29 + 8))(v27, v30);
        return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v15, v20);
      }
      LOBYTE(v46) = 4;
      sub_24EAD2624();
      uint64_t v24 = v31;
      uint64_t v20 = v45;
      sub_24EB3DF70();
      uint64_t v26 = v32;
      uint64_t v25 = v33;
    }
    else
    {
      LOBYTE(v46) = 1;
      sub_24EAD2720();
      uint64_t v24 = v34;
      uint64_t v20 = v45;
      sub_24EB3DF70();
      uint64_t v26 = v35;
      uint64_t v25 = v36;
    }
    (*(void (**)(char *, uint64_t))(v26 + 8))(v24, v25);
    return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v15, v20);
  }
  LOBYTE(v46) = 2;
  sub_24EAD26CC();
  uint64_t v19 = v38;
  uint64_t v20 = v45;
  sub_24EB3DF70();
  uint64_t v46 = v43;
  uint64_t v47 = v42;
  uint64_t v48 = v41;
  uint64_t v49 = v17;
  char v50 = v18 & 1;
  sub_24EAB3740();
  uint64_t v21 = v40;
  sub_24EB3DFF0();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v19, v21);
  return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v15, v20);
}

unint64_t sub_24EAD25D0()
{
  unint64_t result = qword_26B1D2A98;
  if (!qword_26B1D2A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2A98);
  }
  return result;
}

unint64_t sub_24EAD2624()
{
  unint64_t result = qword_26B1D2AB0;
  if (!qword_26B1D2AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2AB0);
  }
  return result;
}

unint64_t sub_24EAD2678()
{
  unint64_t result = qword_269932370;
  if (!qword_269932370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932370);
  }
  return result;
}

unint64_t sub_24EAD26CC()
{
  unint64_t result = qword_269932378;
  if (!qword_269932378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932378);
  }
  return result;
}

unint64_t sub_24EAD2720()
{
  unint64_t result = qword_269932380;
  if (!qword_269932380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932380);
  }
  return result;
}

unint64_t sub_24EAD2774()
{
  unint64_t result = qword_269932388;
  if (!qword_269932388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932388);
  }
  return result;
}

uint64_t AwardProgressAction.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v54 = a2;
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932390);
  uint64_t v44 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  uint64_t v56 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932398);
  uint64_t v48 = *(void *)(v4 - 8);
  uint64_t v49 = v4;
  MEMORY[0x270FA5388](v4);
  unint64_t v53 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699323A0);
  uint64_t v55 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  unint64_t v52 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699323A8);
  uint64_t v45 = *(void *)(v7 - 8);
  uint64_t v46 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699323B0);
  uint64_t v51 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699323B8);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1[3];
  uint64_t v57 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_24EAD25D0();
  uint64_t v18 = v62;
  sub_24EB3E0E0();
  if (v18) {
    goto LABEL_10;
  }
  uint64_t v43 = v10;
  uint64_t v20 = v55;
  uint64_t v19 = v56;
  uint64_t v62 = v14;
  uint64_t v21 = sub_24EB3DF60();
  if (*(void *)(v21 + 16) != 1)
  {
    uint64_t v23 = v13;
    uint64_t v24 = sub_24EB3DE40();
    swift_allocError();
    uint64_t v26 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269931DD8);
    *uint64_t v26 = &type metadata for AwardProgressAction;
    sub_24EB3DED0();
    sub_24EB3DE30();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v24 - 8) + 104))(v26, *MEMORY[0x263F8DCB0], v24);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v62 + 8))(v16, v23);
LABEL_10:
    uint64_t v30 = (uint64_t)v57;
    return __swift_destroy_boxed_opaque_existential_1(v30);
  }
  switch(*(unsigned char *)(v21 + 32))
  {
    case 1:
      LOBYTE(v58) = 1;
      sub_24EAD2720();
      sub_24EB3DEC0();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v9, v46);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v62 + 8))(v16, v13);
      uint64_t v35 = 0;
      uint64_t v38 = 0;
      long long v40 = 0uLL;
      char v39 = 0x80;
      break;
    case 2:
      uint64_t v27 = v20;
      uint64_t v56 = (char *)v21;
      LOBYTE(v58) = 2;
      sub_24EAD26CC();
      BOOL v28 = v52;
      sub_24EB3DEC0();
      sub_24EAB4C14();
      uint64_t v33 = v50;
      sub_24EB3DF50();
      uint64_t v34 = v62;
      (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v33);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v16, v13);
      uint64_t v35 = v58;
      long long v40 = v59;
      uint64_t v38 = v60;
      char v39 = v61 | 0x40;
      break;
    case 3:
      LOBYTE(v58) = 3;
      sub_24EAD2678();
      uint64_t v29 = v53;
      sub_24EB3DEC0();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v29, v49);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v62 + 8))(v16, v13);
      uint64_t v38 = 0;
      long long v40 = 0uLL;
      char v39 = 0x80;
      uint64_t v35 = 1;
      break;
    case 4:
      LOBYTE(v58) = 4;
      sub_24EAD2624();
      sub_24EB3DEC0();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v19, v47);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v62 + 8))(v16, v13);
      uint64_t v38 = 0;
      long long v40 = 0uLL;
      char v39 = 0x80;
      uint64_t v35 = 2;
      break;
    default:
      LOBYTE(v58) = 0;
      sub_24EAD2774();
      uint64_t v22 = v12;
      sub_24EB3DEC0();
      uint64_t v56 = (char *)v13;
      uint64_t v32 = v43;
      uint64_t v35 = sub_24EB3DF10();
      unint64_t v37 = v36;
      (*(void (**)(char *, uint64_t))(v51 + 8))(v22, v32);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *))(v62 + 8))(v16, v56);
      uint64_t v38 = 0;
      char v39 = 0;
      long long v40 = v37;
      break;
  }
  uint64_t v30 = (uint64_t)v57;
  uint64_t v41 = v54;
  *uint64_t v54 = v35;
  *(_OWORD *)(v41 + 1) = v40;
  v41[3] = v38;
  *((unsigned char *)v41 + 32) = v39;
  return __swift_destroy_boxed_opaque_existential_1(v30);
}

uint64_t sub_24EAD3098@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return AwardProgressAction.init(from:)(a1, a2);
}

uint64_t sub_24EAD30B0(void *a1)
{
  return AwardProgressAction.encode(to:)(a1);
}

uint64_t destroy for AwardProgressAction(uint64_t a1)
{
  return sub_24EAC5940(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t initializeWithCopy for AwardProgressAction(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
  sub_24EAC5918(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for AwardProgressAction(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
  sub_24EAC5918(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  unsigned __int8 v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_24EAC5940(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for AwardProgressAction(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_24EAC5940(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for AwardProgressAction(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7E && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 126);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 32) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 32) >> 1) & 0x1F))) ^ 0x7F;
  if (v3 >= 0x7D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for AwardProgressAction(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 - 126;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2)
    {
      *(_OWORD *)unint64_t result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(unsigned char *)(result + 32) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t sub_24EAD32B0(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 32);
  int v2 = (char)v1;
  unsigned int v3 = v1 >> 6;
  if (v2 >= 0) {
    return v3;
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_24EAD32D0(uint64_t result)
{
  *(unsigned char *)(result + 32) &= 0x3Fu;
  return result;
}

uint64_t sub_24EAD32E0(uint64_t result, unsigned int a2)
{
  if (a2 < 2)
  {
    *(unsigned char *)(result + 32) = *(unsigned char *)(result + 32) & 1 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(void *)unint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardProgressAction()
{
  return &type metadata for AwardProgressAction;
}

uint64_t getEnumTagSinglePayload for AwardProgressAction.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AwardProgressAction.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EAD347CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardProgressAction.CodingKeys()
{
  return &type metadata for AwardProgressAction.CodingKeys;
}

ValueMetadata *type metadata accessor for AwardProgressAction.FetchAwardProgressCodingKeys()
{
  return &type metadata for AwardProgressAction.FetchAwardProgressCodingKeys;
}

ValueMetadata *type metadata accessor for AwardProgressAction.LoadStateClearedCodingKeys()
{
  return &type metadata for AwardProgressAction.LoadStateClearedCodingKeys;
}

unsigned char *_s13FitnessAwards19AwardProgressActionO28FetchAwardProgressCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24EAD3574);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardProgressAction.ProgressFetchedCodingKeys()
{
  return &type metadata for AwardProgressAction.ProgressFetchedCodingKeys;
}

ValueMetadata *type metadata accessor for AwardProgressAction.ProgressFetchFailedCodingKeys()
{
  return &type metadata for AwardProgressAction.ProgressFetchFailedCodingKeys;
}

ValueMetadata *type metadata accessor for AwardProgressAction.ViewAppearedCodingKeys()
{
  return &type metadata for AwardProgressAction.ViewAppearedCodingKeys;
}

unint64_t sub_24EAD35D0()
{
  unint64_t result = qword_2699323C0;
  if (!qword_2699323C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699323C0);
  }
  return result;
}

unint64_t sub_24EAD3628()
{
  unint64_t result = qword_2699323C8;
  if (!qword_2699323C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699323C8);
  }
  return result;
}

unint64_t sub_24EAD3680()
{
  unint64_t result = qword_2699323D0;
  if (!qword_2699323D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699323D0);
  }
  return result;
}

unint64_t sub_24EAD36D8()
{
  unint64_t result = qword_26B1D2A70;
  if (!qword_26B1D2A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2A70);
  }
  return result;
}

unint64_t sub_24EAD3730()
{
  unint64_t result = qword_26B1D2A68;
  if (!qword_26B1D2A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2A68);
  }
  return result;
}

unint64_t sub_24EAD3788()
{
  unint64_t result = qword_26B1D2AD0;
  if (!qword_26B1D2AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2AD0);
  }
  return result;
}

unint64_t sub_24EAD37E0()
{
  unint64_t result = qword_26B1D2AC8;
  if (!qword_26B1D2AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2AC8);
  }
  return result;
}

unint64_t sub_24EAD3838()
{
  unint64_t result = qword_26B1D2A80;
  if (!qword_26B1D2A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2A80);
  }
  return result;
}

unint64_t sub_24EAD3890()
{
  unint64_t result = qword_26B1D2A78;
  if (!qword_26B1D2A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2A78);
  }
  return result;
}

unint64_t sub_24EAD38E8()
{
  unint64_t result = qword_26B1D2A90;
  if (!qword_26B1D2A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2A90);
  }
  return result;
}

unint64_t sub_24EAD3940()
{
  unint64_t result = qword_26B1D2A88;
  if (!qword_26B1D2A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2A88);
  }
  return result;
}

unint64_t sub_24EAD3998()
{
  unint64_t result = qword_26B1D2AC0;
  if (!qword_26B1D2AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2AC0);
  }
  return result;
}

unint64_t sub_24EAD39F0()
{
  unint64_t result = qword_26B1D2AB8;
  if (!qword_26B1D2AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2AB8);
  }
  return result;
}

unint64_t sub_24EAD3A48()
{
  unint64_t result = qword_26B1D2AA8;
  if (!qword_26B1D2AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2AA8);
  }
  return result;
}

unint64_t sub_24EAD3AA0()
{
  unint64_t result = qword_26B1D2AA0;
  if (!qword_26B1D2AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2AA0);
  }
  return result;
}

uint64_t sub_24EAD3AF4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x800000024EB4A9B0 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024EB4A9D0 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73736572676F7270 && a2 == 0xEF64656863746546 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000024EB4A9F0 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6570704177656976 && a2 == 0xEC00000064657261)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v5 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    if (v5) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t AwardToastImageView.init(imageData:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

double AwardToastImageView.body.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_24EB3D9F0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  unint64_t v7 = v1[1];
  id v9 = objc_allocWithZone(MEMORY[0x263F827E8]);
  sub_24EAD3F70(v8, v7);
  uint64_t v10 = (void *)sub_24EB3D1A0();
  id v11 = objc_msgSend(v9, sel_initWithData_, v10);
  sub_24EAD3FC8(v8, v7);

  if (v11)
  {
    id v12 = v11;
    sub_24EB3D9D0();
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F1B4B8], v3);
    uint64_t v13 = sub_24EB3DA00();
    swift_release();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v18 = v13;
    uint64_t v19 = 0x3FF0000000000000;
    __int16 v20 = 0;
    char v21 = 0;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2DC8);
    sub_24EAD4020();
    sub_24EB3D590();
    swift_release();
  }
  else
  {
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    __int16 v20 = 0;
    char v21 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2DC8);
    sub_24EAD4020();
    sub_24EB3D590();
  }
  double result = *(double *)&v22;
  __int16 v15 = v23;
  char v16 = v24;
  *(_OWORD *)a1 = v22;
  *(_WORD *)(a1 + 16) = v15;
  *(unsigned char *)(a1 + 18) = v16;
  return result;
}

uint64_t sub_24EAD3F70(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_24EAD3FC8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

unint64_t sub_24EAD4020()
{
  unint64_t result = qword_26B1D2DC0;
  if (!qword_26B1D2DC0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2DC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2DC0);
  }
  return result;
}

uint64_t sub_24EAD4094()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for AwardToastImageView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_24EAD3F70(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t destroy for AwardToastImageView(uint64_t a1)
{
  return sub_24EAD3FC8(*(void *)a1, *(void *)(a1 + 8));
}

uint64_t *assignWithCopy for AwardToastImageView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_24EAD3F70(*a2, v4);
  uint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_24EAD3FC8(v5, v6);
  return a1;
}

uint64_t *assignWithTake for AwardToastImageView(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_24EAD3FC8(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for AwardToastImageView(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for AwardToastImageView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)unint64_t result = a2 - 13;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardToastImageView()
{
  return &type metadata for AwardToastImageView;
}

unint64_t sub_24EAD4238()
{
  unint64_t result = qword_2699323D8;
  if (!qword_2699323D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699323E0);
    sub_24EAD4020();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699323D8);
  }
  return result;
}

uint64_t sub_24EAD42BC(char a1)
{
  return *(void *)&aIdle_5[8 * a1];
}

uint64_t sub_24EAD42DC()
{
  return sub_24EAD42BC(*v0);
}

uint64_t sub_24EAD42E4(uint64_t a1)
{
  unint64_t v2 = sub_24EAD5798();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAD4320(uint64_t a1)
{
  unint64_t v2 = sub_24EAD5798();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EAD435C(uint64_t a1)
{
  unint64_t v2 = sub_24EAD5850();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAD4398(uint64_t a1)
{
  unint64_t v2 = sub_24EAD5850();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EAD43D4(uint64_t a1)
{
  unint64_t v2 = sub_24EAD58F8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAD4410(uint64_t a1)
{
  unint64_t v2 = sub_24EAD58F8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EAD444C(uint64_t a1)
{
  unint64_t v2 = sub_24EAD594C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAD4488(uint64_t a1)
{
  unint64_t v2 = sub_24EAD594C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AwardEarnedLoadState.encode(to:)(void *a1)
{
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699323E8);
  uint64_t v33 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v30 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699323F0);
  uint64_t v28 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v29 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24EB3D1F0();
  uint64_t v31 = *(void *)(v4 - 8);
  uint64_t v32 = v4;
  MEMORY[0x270FA5388](v4);
  unint64_t v36 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699323F8);
  uint64_t v27 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t State = type metadata accessor for AwardEarnedLoadState();
  MEMORY[0x270FA5388](State);
  id v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932400);
  uint64_t v38 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EAD5798();
  sub_24EB3E0F0();
  sub_24EAD57EC(v37, (uint64_t)v11);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      char v16 = *v11;
      char v42 = 2;
      sub_24EAD5850();
      uint64_t v17 = v30;
      sub_24EB3DF70();
      char v41 = v16;
      sub_24EAD58A4();
      uint64_t v18 = v35;
      sub_24EB3DFF0();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v17, v18);
    }
    else
    {
      char v39 = 0;
      sub_24EAD594C();
      sub_24EB3DF70();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v6);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v14, v12);
  }
  else
  {
    uint64_t v20 = v28;
    uint64_t v21 = v31;
    long long v22 = v11;
    uint64_t v23 = v32;
    (*(void (**)(char *, unsigned char *, uint64_t))(v31 + 32))(v36, v22, v32);
    char v40 = 1;
    sub_24EAD58F8();
    char v24 = v29;
    sub_24EB3DF70();
    sub_24EAD5A3C(&qword_269932088, MEMORY[0x263F07508]);
    uint64_t v25 = v34;
    sub_24EB3DFF0();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v24, v25);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v36, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v14, v12);
  }
}

uint64_t AwardEarnedLoadState.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v54 = a2;
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932430);
  uint64_t v53 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v58 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932438);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v51 = v4;
  uint64_t v52 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v57 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932440);
  uint64_t v48 = *(void *)(v7 - 8);
  uint64_t v49 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v56 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932448);
  uint64_t v55 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  id v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t State = type metadata accessor for AwardEarnedLoadState();
  uint64_t v13 = MEMORY[0x270FA5388](State);
  __int16 v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v45 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v45 - v19;
  uint64_t v21 = a1[3];
  long long v59 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v21);
  sub_24EAD5798();
  uint64_t v22 = (uint64_t)v60;
  sub_24EB3E0E0();
  if (v22) {
    goto LABEL_7;
  }
  uint64_t v46 = v15;
  uint64_t v47 = v18;
  char v24 = v56;
  uint64_t v23 = v57;
  uint64_t v25 = v58;
  uint64_t v60 = v20;
  uint64_t v26 = State;
  uint64_t v27 = sub_24EB3DF60();
  uint64_t v28 = (char *)v27;
  if (*(void *)(v27 + 16) != 1)
  {
    uint64_t v30 = sub_24EB3DE40();
    swift_allocError();
    uint64_t v31 = v11;
    uint64_t v33 = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269931DD8);
    *uint64_t v33 = v26;
    sub_24EB3DED0();
    sub_24EB3DE30();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v30 - 8) + 104))(v33, *MEMORY[0x263F8DCB0], v30);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v31, v9);
LABEL_7:
    uint64_t v40 = (uint64_t)v59;
    return __swift_destroy_boxed_opaque_existential_1(v40);
  }
  if (*(unsigned char *)(v27 + 32))
  {
    if (*(unsigned char *)(v27 + 32) == 1)
    {
      char v62 = 1;
      sub_24EAD58F8();
      sub_24EB3DEC0();
      uint64_t v29 = v55;
      sub_24EB3D1F0();
      uint64_t v58 = v28;
      sub_24EAD5A3C(&qword_2699320B8, MEMORY[0x263F07508]);
      uint64_t v37 = (uint64_t)v47;
      uint64_t v38 = v23;
      uint64_t v39 = v51;
      sub_24EB3DF50();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v38, v39);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v9);
      uint64_t v40 = (uint64_t)v59;
      swift_storeEnumTagMultiPayload();
      uint64_t v41 = (uint64_t)v60;
      sub_24EAA9110(v37, (uint64_t)v60);
      uint64_t v42 = v54;
    }
    else
    {
      char v64 = 2;
      sub_24EAD5850();
      uint64_t v35 = v25;
      sub_24EB3DEC0();
      unint64_t v36 = v11;
      uint64_t v42 = v54;
      uint64_t v57 = v36;
      sub_24EAD59A0();
      uint64_t v43 = v50;
      sub_24EB3DF50();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v35, v43);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v57, v9);
      uint64_t v44 = (uint64_t)v46;
      unsigned char *v46 = v63;
      swift_storeEnumTagMultiPayload();
      uint64_t v41 = (uint64_t)v60;
      sub_24EAA9110(v44, (uint64_t)v60);
      uint64_t v40 = (uint64_t)v59;
    }
  }
  else
  {
    char v61 = 0;
    sub_24EAD594C();
    sub_24EB3DEC0();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v24, v49);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v11, v9);
    uint64_t v41 = (uint64_t)v60;
    swift_storeEnumTagMultiPayload();
    uint64_t v40 = (uint64_t)v59;
    uint64_t v42 = v54;
  }
  sub_24EAA9110(v41, v42);
  return __swift_destroy_boxed_opaque_existential_1(v40);
}

uint64_t sub_24EAD51CC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AwardEarnedLoadState.init(from:)(a1, a2);
}

uint64_t sub_24EAD51E4(void *a1)
{
  return AwardEarnedLoadState.encode(to:)(a1);
}

uint64_t AwardEarnedLoadState.hash(into:)()
{
  uint64_t v1 = sub_24EB3D1F0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t State = type metadata accessor for AwardEarnedLoadState();
  MEMORY[0x270FA5388](State);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EAD57EC(v0, (uint64_t)v7);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1) {
      sub_24EB3E0A0();
    }
    return sub_24EB3E0A0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_24EB3E0A0();
    sub_24EAD5A3C(&qword_2699320C0, MEMORY[0x263F07508]);
    sub_24EB3DBD0();
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

uint64_t AwardEarnedLoadState.hashValue.getter()
{
  return sub_24EB3E0D0();
}

uint64_t sub_24EAD540C()
{
  return sub_24EB3E0D0();
}

uint64_t sub_24EAD5450()
{
  return sub_24EB3E0D0();
}

uint64_t _s13FitnessAwards20AwardEarnedLoadStateO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24EB3D1F0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t State = type metadata accessor for AwardEarnedLoadState();
  uint64_t v9 = MEMORY[0x270FA5388](State);
  id v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v24 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2B00);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = &v17[*(int *)(v15 + 56)];
  sub_24EAD57EC(a1, (uint64_t)v17);
  sub_24EAD57EC(a2, (uint64_t)v18);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_24EAD57EC((uint64_t)v17, (uint64_t)v13);
    if (!swift_getEnumCaseMultiPayload())
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v18, v4);
      char v21 = sub_24EB3D1D0();
      uint64_t v22 = *(void (**)(char *, uint64_t))(v5 + 8);
      v22(v7, v4);
      v22(v13, v4);
      sub_24EAD5D6C((uint64_t)v17);
      return v21 & 1;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
    goto LABEL_9;
  }
  if (EnumCaseMultiPayload != 1)
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_24EAD5D6C((uint64_t)v17);
      char v21 = 1;
      return v21 & 1;
    }
LABEL_9:
    sub_24EAD64E0((uint64_t)v17);
    char v21 = 0;
    return v21 & 1;
  }
  sub_24EAD57EC((uint64_t)v17, (uint64_t)v11);
  if (swift_getEnumCaseMultiPayload() != 1) {
    goto LABEL_9;
  }
  char v20 = *v11 ^ *v18;
  sub_24EAD5D6C((uint64_t)v17);
  char v21 = v20 ^ 1;
  return v21 & 1;
}

uint64_t type metadata accessor for AwardEarnedLoadState()
{
  uint64_t result = qword_26B1D2AF0;
  if (!qword_26B1D2AF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_24EAD5798()
{
  unint64_t result = qword_269932408;
  if (!qword_269932408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932408);
  }
  return result;
}

uint64_t sub_24EAD57EC(uint64_t a1, uint64_t a2)
{
  uint64_t State = type metadata accessor for AwardEarnedLoadState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(State - 8) + 16))(a2, a1, State);
  return a2;
}

unint64_t sub_24EAD5850()
{
  unint64_t result = qword_269932410;
  if (!qword_269932410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932410);
  }
  return result;
}

unint64_t sub_24EAD58A4()
{
  unint64_t result = qword_269932418;
  if (!qword_269932418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932418);
  }
  return result;
}

unint64_t sub_24EAD58F8()
{
  unint64_t result = qword_269932420;
  if (!qword_269932420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932420);
  }
  return result;
}

unint64_t sub_24EAD594C()
{
  unint64_t result = qword_269932428;
  if (!qword_269932428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932428);
  }
  return result;
}

unint64_t sub_24EAD59A0()
{
  unint64_t result = qword_269932450;
  if (!qword_269932450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932450);
  }
  return result;
}

uint64_t sub_24EAD59F4()
{
  return sub_24EAD5A3C((unint64_t *)&qword_269932458, (void (*)(uint64_t))type metadata accessor for AwardEarnedLoadState);
}

uint64_t sub_24EAD5A3C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for AwardEarnedLoadState(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = sub_24EB3D1F0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for AwardEarnedLoadState(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (!result)
  {
    uint64_t v3 = sub_24EB3D1F0();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *initializeWithCopy for AwardEarnedLoadState(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_24EB3D1F0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithCopy for AwardEarnedLoadState(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24EAD5D6C((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_24EB3D1F0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_24EAD5D6C(uint64_t a1)
{
  uint64_t State = type metadata accessor for AwardEarnedLoadState();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(State - 8) + 8))(a1, State);
  return a1;
}

void *assignWithTake for AwardEarnedLoadState(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24EAD5D6C((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_24EB3D1F0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_24EAD5E8C()
{
  uint64_t result = sub_24EB3D1F0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AwardEarnedLoadState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EAD5FE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardEarnedLoadState.CodingKeys()
{
  return &type metadata for AwardEarnedLoadState.CodingKeys;
}

ValueMetadata *type metadata accessor for AwardEarnedLoadState.IdleCodingKeys()
{
  return &type metadata for AwardEarnedLoadState.IdleCodingKeys;
}

ValueMetadata *type metadata accessor for AwardEarnedLoadState.FetchingCodingKeys()
{
  return &type metadata for AwardEarnedLoadState.FetchingCodingKeys;
}

unsigned char *_s13FitnessAwards20AwardEarnedLoadStateO18FetchingCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24EAD60E0);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardEarnedLoadState.FetchedCodingKeys()
{
  return &type metadata for AwardEarnedLoadState.FetchedCodingKeys;
}

unint64_t sub_24EAD611C()
{
  unint64_t result = qword_269932460;
  if (!qword_269932460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932460);
  }
  return result;
}

unint64_t sub_24EAD6174()
{
  unint64_t result = qword_269932468;
  if (!qword_269932468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932468);
  }
  return result;
}

unint64_t sub_24EAD61CC()
{
  unint64_t result = qword_269932470;
  if (!qword_269932470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932470);
  }
  return result;
}

unint64_t sub_24EAD6224()
{
  unint64_t result = qword_269932478;
  if (!qword_269932478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932478);
  }
  return result;
}

unint64_t sub_24EAD627C()
{
  unint64_t result = qword_269932480;
  if (!qword_269932480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932480);
  }
  return result;
}

unint64_t sub_24EAD62D4()
{
  unint64_t result = qword_269932488;
  if (!qword_269932488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932488);
  }
  return result;
}

unint64_t sub_24EAD632C()
{
  unint64_t result = qword_269932490;
  if (!qword_269932490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932490);
  }
  return result;
}

unint64_t sub_24EAD6384()
{
  unint64_t result = qword_269932498;
  if (!qword_269932498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932498);
  }
  return result;
}

unint64_t sub_24EAD63DC()
{
  unint64_t result = qword_2699324A0;
  if (!qword_2699324A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699324A0);
  }
  return result;
}

unint64_t sub_24EAD6434()
{
  unint64_t result = qword_2699324A8;
  if (!qword_2699324A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699324A8);
  }
  return result;
}

unint64_t sub_24EAD648C()
{
  unint64_t result = qword_2699324B0;
  if (!qword_2699324B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699324B0);
  }
  return result;
}

uint64_t sub_24EAD64E0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2B00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t TVAwardHeaderView.init(store:awardImageViewBuilder:awardProgressViewBuilder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(void *)a7 = sub_24EAACDA8;
  *(void *)(a7 + 8) = result;
  *(unsigned char *)(a7 + 16) = 0;
  *(void *)(a7 + 24) = a3;
  *(void *)(a7 + 32) = a4;
  *(void *)(a7 + 40) = a5;
  *(void *)(a7 + 48) = a6;
  return result;
}

uint64_t sub_24EAD65C8()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t TVAwardHeaderView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v55 = a2;
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v53 = a1;
  uint64_t v57 = v2;
  sub_24EB3D3E0();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2DD8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699324B8);
  *(void *)&long long v71 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2D78);
  uint64_t v5 = *(void *)(a1 + 24);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2F68);
  uint64_t v56 = v5;
  sub_24EB3D3E0();
  sub_24EB3D3E0();
  sub_24EB3D3E0();
  sub_24EB3D5A0();
  swift_getTupleTypeMetadata2();
  sub_24EB3DB20();
  *((void *)&v71 + 1) = sub_24EB3DDA0();
  *(void *)&long long v72 = v4;
  *((void *)&v72 + 1) = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_2699324C0);
  swift_getTupleTypeMetadata();
  sub_24EB3DB20();
  swift_getWitnessTable();
  sub_24EB3DA60();
  sub_24EB3D3E0();
  sub_24EB3D5A0();
  swift_getTupleTypeMetadata3();
  sub_24EB3DB20();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v6 = sub_24EB3DA40();
  uint64_t v51 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v40 = (char *)&v36 - v7;
  uint64_t v8 = sub_24EB3D3E0();
  uint64_t v50 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v45 = (char *)&v36 - v9;
  uint64_t v43 = swift_getWitnessTable();
  uint64_t v69 = v43;
  uint64_t v70 = MEMORY[0x263F18860];
  uint64_t v52 = MEMORY[0x263F18E48];
  uint64_t v10 = swift_getWitnessTable();
  *(void *)&long long v71 = v8;
  *((void *)&v71 + 1) = v10;
  uint64_t v11 = v10;
  uint64_t v38 = v10;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v46 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v14 = (char *)&v36 - v13;
  *(void *)&long long v71 = v8;
  *((void *)&v71 + 1) = v11;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v71 = OpaqueTypeMetadata2;
  *((void *)&v71 + 1) = OpaqueTypeConformance2;
  uint64_t v47 = MEMORY[0x263F1ADE0];
  uint64_t v42 = swift_getOpaqueTypeMetadata2();
  uint64_t v48 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v16 = (char *)&v36 - v15;
  uint64_t v17 = sub_24EB3D3E0();
  uint64_t v49 = *(void *)(v17 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  char v20 = (char *)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v44 = (char *)&v36 - v21;
  long long v22 = v54[1];
  long long v71 = *v54;
  long long v72 = v22;
  long long v73 = v54[2];
  uint64_t v74 = *((void *)v54 + 6);
  sub_24EB3D4E0();
  uint64_t v58 = v57;
  uint64_t v59 = v56;
  uint64_t v37 = *(void *)(v53 + 32);
  uint64_t v54 = *(long long **)(v53 + 40);
  uint64_t v60 = v37;
  char v61 = v54;
  char v62 = &v71;
  uint64_t v23 = v40;
  sub_24EB3DA30();
  long long v65 = v71;
  long long v66 = v72;
  long long v67 = v73;
  uint64_t v68 = v74;
  sub_24EAB7420();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  sub_24EB3DB00();
  uint64_t v24 = v45;
  sub_24EB3D8A0();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v23, v6);
  sub_24EB3D930();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v24, v8);
  uint64_t v25 = OpaqueTypeConformance2;
  sub_24EB3D870();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v14, OpaqueTypeMetadata2);
  uint64_t v26 = swift_allocObject();
  uint64_t v27 = v56;
  *(void *)(v26 + 16) = v57;
  *(void *)(v26 + 24) = v27;
  uint64_t v28 = v54;
  *(void *)(v26 + 32) = v37;
  *(void *)(v26 + 40) = v28;
  long long v29 = v72;
  *(_OWORD *)(v26 + 48) = v71;
  *(_OWORD *)(v26 + 64) = v29;
  *(_OWORD *)(v26 + 80) = v73;
  *(void *)(v26 + 96) = v74;
  sub_24EAB9FFC((uint64_t)&v71);
  *(void *)&long long v65 = OpaqueTypeMetadata2;
  *((void *)&v65 + 1) = v25;
  uint64_t v30 = swift_getOpaqueTypeConformance2();
  uint64_t v31 = v42;
  sub_24EB3D8F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v16, v31);
  uint64_t v63 = v30;
  uint64_t v64 = MEMORY[0x263F1A240];
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v33 = v44;
  sub_24EAB73E4(v20, v17, v32);
  uint64_t v34 = *(void (**)(char *, uint64_t))(v49 + 8);
  v34(v20, v17);
  sub_24EAB73E4(v33, v17, v32);
  return ((uint64_t (*)(char *, uint64_t))v34)(v33, v17);
}

uint64_t sub_24EAD6EDC@<X0>(void (**a1)(uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v59 = a5;
  uint64_t v66 = a6;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699324B8);
  *(void *)&long long v73 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2D78);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2DD8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2F68);
  sub_24EB3D3E0();
  sub_24EB3D3E0();
  sub_24EB3D3E0();
  sub_24EB3D5A0();
  swift_getTupleTypeMetadata2();
  sub_24EB3DB20();
  *((void *)&v73 + 1) = sub_24EB3DDA0();
  *(void *)&long long v74 = v10;
  *((void *)&v74 + 1) = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_2699324C0);
  swift_getTupleTypeMetadata();
  sub_24EB3DB20();
  swift_getWitnessTable();
  uint64_t v62 = sub_24EB3DA60();
  uint64_t v64 = sub_24EB3D3E0();
  uint64_t v63 = sub_24EB3D5A0();
  uint64_t v65 = *(void *)(v63 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v63);
  uint64_t v60 = (uint64_t)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  char v61 = (char *)&v49 - v14;
  uint64_t v15 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_24EB3D3E0();
  uint64_t v56 = *(void *)(v55 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v55);
  char v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v68 = (char *)&v49 - v22;
  a1[3](v21);
  long long v23 = *((_OWORD *)a1 + 1);
  long long v73 = *(_OWORD *)a1;
  long long v24 = *((_OWORD *)a1 + 2);
  long long v74 = v23;
  long long v75 = v24;
  unint64_t v76 = a1[6];
  uint64_t v79 = a2;
  uint64_t v80 = a3;
  uint64_t v81 = a4;
  uint64_t v82 = v59;
  uint64_t v25 = type metadata accessor for TVAwardHeaderView();
  sub_24EAB7420();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  long long v26 = *((_OWORD *)a1 + 1);
  long long v73 = *(_OWORD *)a1;
  long long v27 = *((_OWORD *)a1 + 2);
  long long v74 = v26;
  long long v75 = v27;
  unint64_t v76 = a1[6];
  sub_24EAB7420();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  sub_24EB3DB00();
  sub_24EB3D8A0();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, a2);
  v78[7] = a4;
  v78[8] = MEMORY[0x263F18860];
  uint64_t v28 = v55;
  uint64_t WitnessTable = swift_getWitnessTable();
  long long v67 = v20;
  sub_24EAB73E4(v20, v28, WitnessTable);
  uint64_t v29 = v56;
  uint64_t v58 = *(void (**)(char *, uint64_t))(v56 + 8);
  uint64_t v59 = v56 + 8;
  v58(v20, v28);
  long long v30 = *((_OWORD *)a1 + 1);
  long long v73 = *(_OWORD *)a1;
  long long v31 = *((_OWORD *)a1 + 2);
  long long v74 = v30;
  long long v75 = v31;
  unint64_t v76 = a1[6];
  sub_24EAB7420();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  sub_24EB3DB00();
  sub_24EB3D380();
  uint64_t v54 = v79;
  int v53 = v80;
  uint64_t v52 = v81;
  int v51 = v82;
  uint64_t v50 = v83;
  uint64_t v49 = v84;
  long long v32 = *((_OWORD *)a1 + 1);
  long long v73 = *(_OWORD *)a1;
  long long v33 = *((_OWORD *)a1 + 2);
  long long v74 = v32;
  long long v75 = v33;
  unint64_t v76 = a1[6];
  uint64_t v34 = v60;
  sub_24EAD77A8(v25, v60);
  uint64_t v35 = MEMORY[0x263F19100];
  uint64_t v36 = sub_24EAD9AD0(&qword_269932548, &qword_2699324B8);
  v78[5] = swift_getWitnessTable();
  v78[6] = v35;
  uint64_t v37 = swift_getWitnessTable();
  v78[3] = v36;
  v78[4] = v37;
  uint64_t v38 = v63;
  uint64_t v39 = swift_getWitnessTable();
  uint64_t v40 = v61;
  uint64_t v41 = v34;
  sub_24EAB73E4(v34, v38, v39);
  uint64_t v42 = v65;
  uint64_t v43 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
  v43(v41, v38);
  uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v29 + 16);
  uint64_t v45 = v67;
  uint64_t v46 = v68;
  v44(v67, v68, v28);
  *(void *)&long long v73 = 0;
  BYTE8(v73) = 1;
  *(void *)&long long v74 = v54;
  BYTE8(v74) = v53;
  *(void *)&long long v75 = v52;
  BYTE8(v75) = v51;
  unint64_t v76 = v50;
  uint64_t v77 = v49;
  v78[0] = v45;
  v78[1] = &v73;
  (*(void (**)(uint64_t, char *, uint64_t))(v42 + 16))(v41, v40, v38);
  v78[2] = v41;
  v72[0] = v28;
  v72[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2DD8);
  v72[2] = v38;
  uint64_t v69 = WitnessTable;
  uint64_t v70 = sub_24EAD9AD0((unint64_t *)&qword_26B1D2DD0, &qword_26B1D2DD8);
  uint64_t v71 = v39;
  sub_24EB1692C((uint64_t)v78, 3uLL, (uint64_t)v72);
  v43((uint64_t)v40, v38);
  uint64_t v47 = (uint64_t (*)(char *, uint64_t))v58;
  v58(v46, v28);
  v43(v41, v38);
  return v47(v67, v28);
}

uint64_t sub_24EAD7798@<X0>(uint64_t a1@<X8>)
{
  return sub_24EAD6EDC(*(void (***)(uint64_t))(v1 + 48), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), a1);
}

uint64_t sub_24EAD77A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v66 = a2;
  *(void *)&long long v70 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2D78);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2DD8);
  uint64_t v5 = *(void *)(a1 + 24);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2F68);
  sub_24EB3D3E0();
  sub_24EB3D3E0();
  uint64_t v59 = v5;
  sub_24EB3D3E0();
  sub_24EB3D5A0();
  swift_getTupleTypeMetadata2();
  sub_24EB3DB20();
  *((void *)&v70 + 1) = sub_24EB3DDA0();
  *(void *)&long long v71 = v4;
  *((void *)&v71 + 1) = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_2699324C0);
  swift_getTupleTypeMetadata();
  uint64_t v6 = sub_24EB3DB20();
  v54[1] = swift_getWitnessTable();
  v54[2] = v6;
  uint64_t v7 = sub_24EB3DA60();
  uint64_t v56 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v55 = (char *)v54 - v8;
  uint64_t v65 = v9;
  uint64_t v10 = sub_24EB3D3E0();
  uint64_t v58 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v57 = (char *)v54 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3000);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FB0);
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699324B8);
  uint64_t v22 = sub_24EB3D5A0();
  uint64_t v63 = *(void *)(v22 - 8);
  uint64_t v64 = v22;
  MEMORY[0x270FA5388](v22);
  uint64_t v62 = (char *)v54 - v23;
  long long v24 = v2[1];
  long long v80 = *v2;
  long long v81 = v24;
  long long v26 = *v2;
  long long v25 = v2[1];
  long long v82 = v2[2];
  uint64_t v83 = *((void *)v2 + 6);
  long long v70 = v26;
  long long v71 = v25;
  long long v72 = v2[2];
  uint64_t v73 = *((void *)v2 + 6);
  uint64_t v60 = a1;
  sub_24EAB7420();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  sub_24EB3DB50();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v28 = MEMORY[0x263F19100];
  switch(EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v30 = *(void *)v17;
      uint64_t v29 = *((void *)v17 + 1);
      uint64_t v32 = *((void *)v17 + 2);
      uint64_t v31 = *((void *)v17 + 3);
      char v33 = v17[32];
      uint64_t v34 = &v17[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1D28C0) + 48)];
      uint64_t v35 = sub_24EB3D1C0();
      (*(void (**)(char *, uint64_t))(*(void *)(v35 - 8) + 8))(v34, v35);
      goto LABEL_4;
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 3:
    case 4:
LABEL_6:
      uint64_t v42 = sub_24EB3D960();
      long long v70 = v80;
      long long v71 = v81;
      long long v72 = v82;
      uint64_t v73 = v83;
      sub_24EAB7420();
      swift_getKeyPath();
      sub_24EB3DBA0();
      swift_release();
      swift_release();
      double v43 = v69;
      uint64_t v44 = sub_24EB3DB00();
      sub_24EB3C6F8(0.0, 1, 0.0, 1, v43, 0, 0.0, 1, (uint64_t)&v70, 0.0, 1, 0.0, 1, v44, v45, v42);
      swift_release();
      sub_24EAD9AD0(&qword_269932548, &qword_2699324B8);
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v68 = v28;
      swift_getWitnessTable();
      uint64_t v41 = v62;
      sub_24EB1673C((uint64_t)&v70, v61);
      swift_release();
      break;
    default:
      uint64_t v30 = *(void *)v17;
      uint64_t v29 = *((void *)v17 + 1);
      uint64_t v32 = *((void *)v17 + 2);
      uint64_t v31 = *((void *)v17 + 3);
      char v33 = v17[32];
LABEL_4:
      *(void *)&long long v70 = v30;
      *((void *)&v70 + 1) = v29;
      *(void *)&long long v71 = v32;
      *((void *)&v71 + 1) = v31;
      LOBYTE(v72) = v33;
      uint64_t v36 = sub_24EB3D570();
      MEMORY[0x270FA5388](v36);
      uint64_t v37 = v55;
      sub_24EB3DA50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24EB3DB00();
      uint64_t v52 = v65;
      uint64_t v53 = swift_getWitnessTable();
      sub_24EB3D8B0();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v37, v52);
      uint64_t v78 = v53;
      uint64_t v28 = MEMORY[0x263F19100];
      uint64_t v79 = MEMORY[0x263F19100];
      uint64_t v38 = swift_getWitnessTable();
      uint64_t v39 = v57;
      sub_24EAB73E4(v13, v10, v38);
      uint64_t v40 = *(void (**)(char *, uint64_t))(v58 + 8);
      v40(v13, v10);
      sub_24EAB73E4(v39, v10, v38);
      sub_24EAD9AD0(&qword_269932548, &qword_2699324B8);
      uint64_t v41 = v62;
      sub_24EB16834((uint64_t)v13, v61, v10);
      v40(v13, v10);
      v40(v39, v10);
      break;
  }
  uint64_t v47 = v63;
  uint64_t v46 = v64;
  uint64_t v48 = sub_24EAD9AD0(&qword_269932548, &qword_2699324B8);
  uint64_t v76 = swift_getWitnessTable();
  uint64_t v77 = v28;
  uint64_t v49 = swift_getWitnessTable();
  uint64_t v74 = v48;
  uint64_t v75 = v49;
  uint64_t v50 = swift_getWitnessTable();
  sub_24EAB73E4(v41, v46, v50);
  return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v41, v46);
}

uint64_t sub_24EAD816C()
{
  return swift_release();
}

uint64_t sub_24EAD81D4()
{
  sub_24EAB0A90();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 104, 7);
}

uint64_t sub_24EAD8220()
{
  return sub_24EAD816C();
}

uint64_t sub_24EAD8230()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24EAD8274@<X0>(void *a1@<X0>, long long *a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v109 = a6;
  uint64_t v102 = a3;
  uint64_t v103 = a5;
  uint64_t v101 = a2;
  uint64_t v107 = a7;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2F68);
  uint64_t v99 = a4;
  uint64_t v92 = sub_24EB3D3E0();
  uint64_t v9 = sub_24EB3D3E0();
  uint64_t v10 = sub_24EB3D3E0();
  uint64_t v93 = v9;
  uint64_t v94 = v10;
  uint64_t v11 = sub_24EB3D5A0();
  uint64_t v95 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v98 = (char *)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  long long v96 = (char *)&v90 - v14;
  uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3000);
  MEMORY[0x270FA5388](v100);
  uint64_t v16 = (char *)&v90 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FB0);
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v90 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2DD8);
  uint64_t v97 = v11;
  swift_getTupleTypeMetadata2();
  uint64_t v112 = sub_24EB3DB20();
  uint64_t v21 = sub_24EB3DDA0();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v117 = v21;
  uint64_t v118 = v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v116 = (char *)&v90 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v115 = (uint64_t)&v90 - v25;
  uint64_t v106 = a1;
  uint64_t v26 = *a1;
  uint64_t v27 = a1[1];
  *(void *)&long long v133 = v26;
  *((void *)&v133 + 1) = v27;
  unint64_t v28 = sub_24EABF994();
  swift_bridgeObjectRetain();
  unint64_t v105 = v28;
  uint64_t v29 = sub_24EB3D770();
  uint64_t v31 = v30;
  char v33 = v32 & 1;
  sub_24EB3D6B0();
  uint64_t v34 = sub_24EB3D750();
  uint64_t v110 = v35;
  uint64_t v111 = v34;
  LODWORD(v104) = v36;
  uint64_t v114 = v37;
  swift_release();
  char v38 = v33;
  uint64_t v39 = v101;
  sub_24EAB1A80(v29, v31, v38);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  long long v41 = v39[1];
  long long v133 = *v39;
  long long v134 = v41;
  long long v135 = v39[2];
  uint64_t v136 = *((void *)v39 + 6);
  long long v139 = v102;
  uint64_t v140 = v99;
  uint64_t v141 = v103;
  uint64_t v142 = v109;
  uint64_t v42 = type metadata accessor for TVAwardHeaderView();
  sub_24EAB7420();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  sub_24EB3DB50();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v113 = KeyPath;
  if (EnumCaseMultiPayload != 1)
  {
    sub_24EAD9B58((uint64_t)v16);
    goto LABEL_5;
  }
  uint64_t v44 = v109;
  uint64_t v45 = (uint64_t)v98;
  int v46 = v16[32];
  uint64_t v47 = &v16[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1D28C0) + 48)];
  uint64_t v48 = sub_24EB3D1C0();
  (*(void (**)(char *, uint64_t))(*(void *)(v48 - 8) + 8))(v47, v48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v46 != 1)
  {
LABEL_5:
    uint64_t v60 = (uint64_t)v116;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v112 - 8) + 56))(v116, 1, 1, v112);
    goto LABEL_6;
  }
  uint64_t v49 = MEMORY[0x263F18860];
  long long v50 = v39[1];
  long long v133 = *v39;
  long long v134 = v50;
  long long v135 = v39[2];
  uint64_t v136 = *((void *)v39 + 6);
  sub_24EAB7420();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  sub_24EB3DB00();
  sub_24EB3D380();
  uint64_t v103 = v153[7];
  LODWORD(v102) = v154;
  uint64_t v100 = v155;
  LODWORD(v99) = v156;
  uint64_t v90 = v158;
  uint64_t v91 = v157;
  long long v51 = v39[1];
  long long v133 = *v39;
  long long v134 = v51;
  long long v135 = v39[2];
  uint64_t v136 = *((void *)v39 + 6);
  sub_24EAD8EF8(v42, v45);
  uint64_t v52 = sub_24EAB15E8(&qword_26B1D2F60, &qword_26B1D2F68);
  uint64_t v125 = v44;
  uint64_t v126 = v52;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v124 = MEMORY[0x263F190E0];
  uint64_t v53 = swift_getWitnessTable();
  uint64_t v121 = v44;
  uint64_t v122 = v49;
  uint64_t v54 = swift_getWitnessTable();
  uint64_t v119 = v53;
  uint64_t v120 = v54;
  uint64_t v55 = v97;
  uint64_t v56 = swift_getWitnessTable();
  uint64_t v57 = v96;
  sub_24EAB73E4(v45, v55, v56);
  uint64_t v58 = v95;
  uint64_t v59 = *(void (**)(uint64_t, uint64_t))(v95 + 8);
  v59(v45, v55);
  *(void *)&long long v133 = 0;
  BYTE8(v133) = 1;
  *(void *)&long long v134 = v103;
  BYTE8(v134) = (_BYTE)v102;
  *(void *)&long long v135 = v100;
  BYTE8(v135) = v99;
  uint64_t v136 = v91;
  uint64_t v137 = v90;
  long long v139 = &v133;
  (*(void (**)(uint64_t, char *, uint64_t))(v58 + 16))(v45, v57, v55);
  uint64_t v140 = v45;
  uint64_t v159 = v108;
  uint64_t v160 = v55;
  uint64_t v147 = sub_24EAD9AD0((unint64_t *)&qword_26B1D2DD0, &qword_26B1D2DD8);
  uint64_t v148 = v56;
  uint64_t v60 = (uint64_t)v116;
  sub_24EB1692C((uint64_t)&v139, 2uLL, (uint64_t)&v159);
  v59((uint64_t)v57, v55);
  v59(v45, v55);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v112 - 8) + 56))(v60, 0, 1, v112);
LABEL_6:
  swift_getWitnessTable();
  sub_24EB05920(v60, v115);
  uint64_t v61 = *(void (**)(uint64_t, uint64_t))(v118 + 8);
  uint64_t v103 = (v118 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v61(v60, v117);
  LODWORD(v109) = v104 & 1;
  long long v62 = v39[1];
  long long v133 = *v39;
  long long v134 = v62;
  long long v135 = v39[2];
  uint64_t v136 = *((void *)v39 + 6);
  sub_24EAB7420();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  sub_24EB3DB00();
  sub_24EB3D380();
  uint64_t v104 = v159;
  LODWORD(v102) = v160;
  uint64_t v101 = v161;
  LODWORD(v100) = v162;
  uint64_t v98 = v164;
  uint64_t v99 = v163;
  uint64_t v63 = v106[3];
  *(void *)&long long v133 = v106[2];
  *((void *)&v133 + 1) = v63;
  swift_bridgeObjectRetain();
  uint64_t v64 = sub_24EB3D770();
  uint64_t v66 = v65;
  char v68 = v67 & 1;
  sub_24EB3D6E0();
  uint64_t v69 = sub_24EB3D750();
  uint64_t v71 = v70;
  char v73 = v72;
  swift_release();
  sub_24EAB1A80(v64, v66, v68);
  swift_bridgeObjectRelease();
  LODWORD(v133) = sub_24EB3D5D0();
  uint64_t v74 = sub_24EB3D730();
  uint64_t v76 = v75;
  uint64_t v106 = v77;
  LODWORD(v105) = v78 & 1;
  sub_24EAB1A80(v69, v71, v73 & 1);
  swift_bridgeObjectRelease();
  uint64_t v79 = swift_getKeyPath();
  uint64_t v80 = swift_getKeyPath();
  uint64_t v82 = v110;
  uint64_t v81 = v111;
  uint64_t v147 = v111;
  uint64_t v148 = v110;
  char v83 = v109;
  char v149 = v109;
  uint64_t v150 = v114;
  uint64_t v151 = v113;
  char v152 = 0;
  v153[0] = &v147;
  uint64_t v84 = *(void (**)(char *, uint64_t, uint64_t))(v118 + 16);
  v118 += 16;
  uint64_t v85 = v116;
  v84(v116, v115, v117);
  long long v139 = 0;
  LOBYTE(v140) = 1;
  uint64_t v141 = v104;
  LOBYTE(v142) = (_BYTE)v102;
  unsigned __int8 v143 = v101;
  char v144 = v100;
  uint64_t v145 = v99;
  uint64_t v146 = v98;
  v153[1] = v85;
  v153[2] = &v139;
  *(void *)&long long v133 = v74;
  *((void *)&v133 + 1) = v76;
  LOBYTE(v69) = v105;
  LOBYTE(v134) = v105;
  *((void *)&v134 + 1) = v106;
  *(void *)&long long v135 = v79;
  *((void *)&v135 + 1) = 3;
  LOBYTE(v136) = 0;
  uint64_t v137 = v80;
  char v138 = 0;
  v153[3] = &v133;
  sub_24EAB1B08(v81, v82, v83);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_24EAB1B08(v74, v76, v69);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2D78);
  uint64_t v87 = v117;
  v132[0] = v86;
  v132[1] = v117;
  v132[2] = v108;
  v132[3] = __swift_instantiateConcreteTypeFromMangledName(qword_2699324C0);
  uint64_t v128 = sub_24EAD9C80((unint64_t *)&qword_26B1D2D70, &qword_26B1D2D78, &qword_26B1D2F40, &qword_26B1D2F48);
  uint64_t v127 = swift_getWitnessTable();
  uint64_t v129 = swift_getWitnessTable();
  uint64_t v130 = sub_24EAD9AD0((unint64_t *)&qword_26B1D2DD0, &qword_26B1D2DD8);
  unint64_t v131 = sub_24EAD9BC0();
  sub_24EB1692C((uint64_t)v153, 4uLL, (uint64_t)v132);
  sub_24EAB1A80(v74, v76, v69);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v88 = *(void (**)(uint64_t, uint64_t))(v118 - 8);
  v88(v115, v87);
  sub_24EAB1A80(v111, v110, v109);
  swift_release();
  swift_bridgeObjectRelease();
  sub_24EAB1A80(v133, *((uint64_t *)&v133 + 1), v134);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v88((uint64_t)v116, v87);
  sub_24EAB1A80(v147, v148, v149);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EAD8EF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v66 = a2;
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = sub_24EB3D3E0();
  uint64_t v55 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v54 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v56 = (char *)&v53 - v9;
  uint64_t v60 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2F68);
  uint64_t v12 = sub_24EB3D3E0();
  uint64_t v57 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v53 - v13;
  uint64_t v64 = v15;
  uint64_t v16 = sub_24EB3D3E0();
  uint64_t v58 = *(void *)(v16 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v53 - v20;
  uint64_t v59 = v22;
  uint64_t v65 = v5;
  uint64_t v63 = sub_24EB3D5A0();
  uint64_t v62 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  uint64_t v61 = (char *)&v53 - v23;
  LOBYTE(v23) = *((unsigned char *)v2 + 16);
  uint64_t v24 = (void (*)(void))*((void *)v2 + 5);
  uint64_t v25 = *((void *)v2 + 6);
  long long v87 = *v2;
  char v88 = v23;
  long long v89 = *(long long *)((char *)v2 + 24);
  uint64_t v90 = v24;
  uint64_t v91 = v25;
  uint64_t v26 = a1;
  sub_24EAB7420();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  if (v87 == __PAIR128__(0x800000024EB4A110, 0xD00000000000001CLL))
  {
    uint64_t v27 = swift_bridgeObjectRelease();
  }
  else
  {
    char v28 = sub_24EB3E010();
    uint64_t v27 = swift_bridgeObjectRelease();
    if ((v28 & 1) == 0)
    {
      v24(v27);
      sub_24EB3DB00();
      uint64_t v29 = *(void *)(v26 + 40);
      uint64_t v40 = (uint64_t)v54;
      sub_24EB3D8A0();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v11, v4);
      uint64_t v85 = v29;
      uint64_t v38 = MEMORY[0x263F190E0];
      uint64_t v39 = MEMORY[0x263F18860];
      uint64_t v86 = MEMORY[0x263F18860];
      uint64_t v41 = v65;
      uint64_t WitnessTable = swift_getWitnessTable();
      double v43 = v56;
      sub_24EAB73E4(v40, v41, WitnessTable);
      uint64_t v60 = *(void *)(v55 + 8);
      ((void (*)(uint64_t, uint64_t))v60)(v40, v41);
      sub_24EAB73E4(v43, v41, WitnessTable);
      uint64_t v44 = sub_24EAB15E8(&qword_26B1D2F60, &qword_26B1D2F68);
      uint64_t v83 = v29;
      uint64_t v84 = v44;
      uint64_t v81 = swift_getWitnessTable();
      uint64_t v82 = v38;
      uint64_t v45 = v59;
      swift_getWitnessTable();
      int v36 = v61;
      sub_24EB16834(v40, v45, v41);
      int v46 = (void (*)(char *, uint64_t))v60;
      ((void (*)(uint64_t, uint64_t))v60)(v40, v41);
      v46(v56, v41);
      goto LABEL_6;
    }
  }
  v24(v27);
  uint64_t v29 = *(void *)(v26 + 40);
  sub_24EB3D940();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v11, v4);
  uint64_t v30 = sub_24EAB15E8(&qword_26B1D2F60, &qword_26B1D2F68);
  uint64_t v71 = v29;
  uint64_t v72 = v30;
  uint64_t v31 = v64;
  uint64_t v32 = swift_getWitnessTable();
  sub_24EB3D920();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v14, v31);
  uint64_t v69 = v32;
  uint64_t v70 = MEMORY[0x263F190E0];
  uint64_t v33 = v59;
  uint64_t v34 = swift_getWitnessTable();
  sub_24EAB73E4(v19, v33, v34);
  uint64_t v35 = *(void (**)(char *, uint64_t))(v58 + 8);
  v35(v19, v33);
  sub_24EAB73E4(v21, v33, v34);
  uint64_t v67 = v29;
  uint64_t v68 = MEMORY[0x263F18860];
  swift_getWitnessTable();
  int v36 = v61;
  sub_24EB1673C((uint64_t)v19, v33);
  v35(v19, v33);
  uint64_t v37 = v21;
  uint64_t v38 = MEMORY[0x263F190E0];
  v35(v37, v33);
  uint64_t v39 = MEMORY[0x263F18860];
LABEL_6:
  uint64_t v47 = sub_24EAB15E8(&qword_26B1D2F60, &qword_26B1D2F68);
  uint64_t v79 = v29;
  uint64_t v80 = v47;
  uint64_t v77 = swift_getWitnessTable();
  uint64_t v78 = v38;
  uint64_t v48 = swift_getWitnessTable();
  uint64_t v75 = v29;
  uint64_t v76 = v39;
  uint64_t v49 = swift_getWitnessTable();
  uint64_t v73 = v48;
  uint64_t v74 = v49;
  uint64_t v50 = v63;
  uint64_t v51 = swift_getWitnessTable();
  sub_24EAB73E4(v36, v50, v51);
  return (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v36, v50);
}

uint64_t type metadata accessor for TVAwardHeaderView()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24EAD97D0()
{
  return swift_getWitnessTable();
}

uint64_t sub_24EAD9AD0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EAD9B40@<X0>(uint64_t a1@<X8>)
{
  return sub_24EAD8274(*(void **)(v1 + 48), *(long long **)(v1 + 56), *(long long **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), a1);
}

uint64_t sub_24EAD9B58(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3000);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_24EAD9BC0()
{
  unint64_t result = qword_269932550;
  if (!qword_269932550)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_2699324C0);
    sub_24EAD9C80((unint64_t *)&qword_26B1D2D80, &qword_26B1D2D88, &qword_26B1D2F60, &qword_26B1D2F68);
    sub_24EAB15E8(&qword_26B1D2F40, &qword_26B1D2F48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932550);
  }
  return result;
}

uint64_t sub_24EAD9C80(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    sub_24EAB15E8(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL static DescriptionTextAlignment.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_24EAD9D30(char a1)
{
  return *(void *)&aLeading_0[8 * a1];
}

uint64_t sub_24EAD9D50(uint64_t a1)
{
  unint64_t v2 = sub_24EADA36C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAD9D8C(uint64_t a1)
{
  unint64_t v2 = sub_24EADA36C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EAD9DC8()
{
  return sub_24EAD9D30(*v0);
}

uint64_t sub_24EAD9DD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EADAF2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EAD9DF8(uint64_t a1)
{
  unint64_t v2 = sub_24EADA2C4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAD9E34(uint64_t a1)
{
  unint64_t v2 = sub_24EADA2C4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EAD9E70(uint64_t a1)
{
  unint64_t v2 = sub_24EADA3C0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAD9EAC(uint64_t a1)
{
  unint64_t v2 = sub_24EADA3C0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EAD9EE8(uint64_t a1)
{
  unint64_t v2 = sub_24EADA318();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAD9F24(uint64_t a1)
{
  unint64_t v2 = sub_24EADA318();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DescriptionTextAlignment.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932558);
  uint64_t v24 = *(void *)(v4 - 8);
  uint64_t v25 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v23 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932560);
  uint64_t v21 = *(void *)(v6 - 8);
  uint64_t v22 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932568);
  uint64_t v19 = *(void *)(v9 - 8);
  uint64_t v20 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932570);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v16 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EADA2C4();
  sub_24EB3E0F0();
  if (v16)
  {
    if (v16 == 1)
    {
      char v27 = 1;
      sub_24EADA36C();
      sub_24EB3DF70();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v22);
    }
    else
    {
      char v28 = 2;
      sub_24EADA318();
      uint64_t v17 = v23;
      sub_24EB3DF70();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v25);
    }
  }
  else
  {
    char v26 = 0;
    sub_24EADA3C0();
    sub_24EB3DF70();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v20);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

unint64_t sub_24EADA2C4()
{
  unint64_t result = qword_269932578;
  if (!qword_269932578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932578);
  }
  return result;
}

unint64_t sub_24EADA318()
{
  unint64_t result = qword_269932580;
  if (!qword_269932580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932580);
  }
  return result;
}

unint64_t sub_24EADA36C()
{
  unint64_t result = qword_269932588;
  if (!qword_269932588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932588);
  }
  return result;
}

unint64_t sub_24EADA3C0()
{
  unint64_t result = qword_269932590;
  if (!qword_269932590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932590);
  }
  return result;
}

uint64_t DescriptionTextAlignment.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932598);
  uint64_t v33 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v37 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699325A0);
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699325A8);
  uint64_t v31 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699325B0);
  uint64_t v36 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EADA2C4();
  uint64_t v12 = (uint64_t)v39;
  sub_24EB3E0E0();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v29 = v6;
  uint64_t v30 = 0;
  uint64_t v14 = v37;
  uint64_t v13 = v38;
  uint64_t v39 = a1;
  uint64_t v15 = v11;
  uint64_t v16 = sub_24EB3DF60();
  if (*(void *)(v16 + 16) != 1)
  {
    uint64_t v21 = sub_24EB3DE40();
    swift_allocError();
    uint64_t v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269931DD8);
    *uint64_t v23 = &type metadata for DescriptionTextAlignment;
    sub_24EB3DED0();
    sub_24EB3DE30();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, *MEMORY[0x263F8DCB0], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v9);
    a1 = v39;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  int v17 = *(unsigned __int8 *)(v16 + 32);
  if (*(unsigned char *)(v16 + 32))
  {
    if (v17 == 1)
    {
      char v41 = 1;
      sub_24EADA36C();
      uint64_t v18 = v30;
      sub_24EB3DEC0();
      uint64_t v20 = v35;
      uint64_t v19 = v36;
      uint64_t v30 = v18;
      if (v18)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
LABEL_12:
        a1 = v39;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      }
      (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v34);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
    }
    else
    {
      char v42 = 2;
      sub_24EADA318();
      uint64_t v25 = v30;
      sub_24EB3DEC0();
      uint64_t v20 = v35;
      uint64_t v26 = v36;
      uint64_t v30 = v25;
      if (v25)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v13);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
    }
  }
  else
  {
    char v40 = 0;
    sub_24EADA3C0();
    uint64_t v24 = v30;
    sub_24EB3DEC0();
    uint64_t v30 = v24;
    if (v24)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
    uint64_t v20 = v35;
  }
  *uint64_t v20 = v17;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
}

uint64_t sub_24EADA9CC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return DescriptionTextAlignment.init(from:)(a1, a2);
}

uint64_t sub_24EADA9E4(void *a1)
{
  return DescriptionTextAlignment.encode(to:)(a1);
}

uint64_t DescriptionTextAlignment.hash(into:)()
{
  return sub_24EB3E0A0();
}

uint64_t DescriptionTextAlignment.hashValue.getter()
{
  return sub_24EB3E0D0();
}

unint64_t sub_24EADAA74()
{
  unint64_t result = qword_2699325B8;
  if (!qword_2699325B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699325B8);
  }
  return result;
}

ValueMetadata *type metadata accessor for DescriptionTextAlignment()
{
  return &type metadata for DescriptionTextAlignment;
}

unsigned char *_s13FitnessAwards24DescriptionTextAlignmentOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EADABACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DescriptionTextAlignment.CodingKeys()
{
  return &type metadata for DescriptionTextAlignment.CodingKeys;
}

ValueMetadata *type metadata accessor for DescriptionTextAlignment.LeadingCodingKeys()
{
  return &type metadata for DescriptionTextAlignment.LeadingCodingKeys;
}

ValueMetadata *type metadata accessor for DescriptionTextAlignment.CenterCodingKeys()
{
  return &type metadata for DescriptionTextAlignment.CenterCodingKeys;
}

ValueMetadata *type metadata accessor for DescriptionTextAlignment.TrailingCodingKeys()
{
  return &type metadata for DescriptionTextAlignment.TrailingCodingKeys;
}

unint64_t sub_24EADAC18()
{
  unint64_t result = qword_2699325C0;
  if (!qword_2699325C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699325C0);
  }
  return result;
}

unint64_t sub_24EADAC70()
{
  unint64_t result = qword_2699325C8;
  if (!qword_2699325C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699325C8);
  }
  return result;
}

unint64_t sub_24EADACC8()
{
  unint64_t result = qword_2699325D0;
  if (!qword_2699325D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699325D0);
  }
  return result;
}

unint64_t sub_24EADAD20()
{
  unint64_t result = qword_2699325D8;
  if (!qword_2699325D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699325D8);
  }
  return result;
}

unint64_t sub_24EADAD78()
{
  unint64_t result = qword_2699325E0;
  if (!qword_2699325E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699325E0);
  }
  return result;
}

unint64_t sub_24EADADD0()
{
  unint64_t result = qword_2699325E8;
  if (!qword_2699325E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699325E8);
  }
  return result;
}

unint64_t sub_24EADAE28()
{
  unint64_t result = qword_2699325F0;
  if (!qword_2699325F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699325F0);
  }
  return result;
}

unint64_t sub_24EADAE80()
{
  unint64_t result = qword_2699325F8;
  if (!qword_2699325F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699325F8);
  }
  return result;
}

unint64_t sub_24EADAED8()
{
  unint64_t result = qword_269932600;
  if (!qword_269932600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932600);
  }
  return result;
}

uint64_t sub_24EADAF2C(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x676E696461656CLL && a2 == 0xE700000000000000;
  if (v3 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265746E6563 && a2 == 0xE600000000000000 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x676E696C69617274 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_24EADB06C(char a1)
{
  return *(void *)&aStartstrmainta[8 * a1];
}

uint64_t sub_24EADB08C(uint64_t a1)
{
  unint64_t v2 = sub_24EADB960();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EADB0C8(uint64_t a1)
{
  unint64_t v2 = sub_24EADB960();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EADB104()
{
  return sub_24EADB06C(*v0);
}

uint64_t sub_24EADB10C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EADD02C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EADB134(uint64_t a1)
{
  unint64_t v2 = sub_24EADB8B8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EADB170(uint64_t a1)
{
  unint64_t v2 = sub_24EADB8B8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EADB1B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EADD208(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24EADB1DC(uint64_t a1)
{
  unint64_t v2 = sub_24EADB9B4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EADB218(uint64_t a1)
{
  unint64_t v2 = sub_24EADB9B4();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_24EADB254()
{
  return 0xD000000000000012;
}

uint64_t sub_24EADB270@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EADD2C0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24EADB29C(uint64_t a1)
{
  unint64_t v2 = sub_24EADB90C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EADB2D8(uint64_t a1)
{
  unint64_t v2 = sub_24EADB90C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EADB314(uint64_t a1)
{
  unint64_t v2 = sub_24EADBA08();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EADB350(uint64_t a1)
{
  unint64_t v2 = sub_24EADBA08();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AwardToastKind.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932608);
  uint64_t v31 = *(void *)(v3 - 8);
  uint64_t v32 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v30 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932610);
  uint64_t v26 = *(void *)(v5 - 8);
  uint64_t v27 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v25 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932618);
  uint64_t v23 = *(void *)(v7 - 8);
  uint64_t v24 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932620);
  uint64_t v29 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932628);
  uint64_t v34 = *(void *)(v13 - 8);
  uint64_t v35 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = *v1;
  uint64_t v28 = v1[1];
  uint64_t v16 = *((unsigned __int8 *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EADB8B8();
  sub_24EB3E0F0();
  switch(v16)
  {
    case 1:
      char v39 = 2;
      sub_24EADB960();
      uint64_t v9 = v25;
      uint64_t v17 = v35;
      sub_24EB3DF70();
      uint64_t v36 = v33;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269932648);
      sub_24EADC284(&qword_269932650);
      uint64_t v18 = v27;
      sub_24EB3DFF0();
      uint64_t v19 = v26;
      goto LABEL_6;
    case 2:
      char v40 = 3;
      sub_24EADB90C();
      uint64_t v9 = v30;
      uint64_t v17 = v35;
      sub_24EB3DF70();
      uint64_t v18 = v32;
      sub_24EB3DFB0();
      uint64_t v19 = v31;
      goto LABEL_6;
    case 3:
      char v37 = 0;
      sub_24EADBA08();
      uint64_t v20 = v35;
      sub_24EB3DF70();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v10);
      return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v15, v20);
    default:
      char v38 = 1;
      sub_24EADB9B4();
      uint64_t v17 = v35;
      sub_24EB3DF70();
      uint64_t v18 = v24;
      sub_24EB3DFE0();
      uint64_t v19 = v23;
LABEL_6:
      (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v18);
      return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v15, v17);
  }
}

unint64_t sub_24EADB8B8()
{
  unint64_t result = qword_269932630;
  if (!qword_269932630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932630);
  }
  return result;
}

unint64_t sub_24EADB90C()
{
  unint64_t result = qword_269932638;
  if (!qword_269932638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932638);
  }
  return result;
}

unint64_t sub_24EADB960()
{
  unint64_t result = qword_269932640;
  if (!qword_269932640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932640);
  }
  return result;
}

unint64_t sub_24EADB9B4()
{
  unint64_t result = qword_269932658;
  if (!qword_269932658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932658);
  }
  return result;
}

unint64_t sub_24EADBA08()
{
  unint64_t result = qword_269932660;
  if (!qword_269932660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932660);
  }
  return result;
}

uint64_t AwardToastKind.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v58 = a2;
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932668);
  uint64_t v53 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  uint64_t v54 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932670);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v51 = v4;
  uint64_t v52 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v56 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932678);
  uint64_t v50 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932680);
  uint64_t v49 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932688);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1[3];
  uint64_t v59 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_24EADB8B8();
  uint64_t v17 = v60;
  sub_24EB3E0E0();
  if (v17) {
    goto LABEL_7;
  }
  uint64_t v46 = v9;
  uint64_t v47 = v11;
  uint64_t v19 = v55;
  uint64_t v18 = v56;
  uint64_t v48 = 0;
  uint64_t v21 = v57;
  uint64_t v20 = v58;
  uint64_t v60 = v13;
  uint64_t v22 = sub_24EB3DF60();
  uint64_t v23 = v22;
  if (*(void *)(v22 + 16) != 1)
  {
    uint64_t v29 = sub_24EB3DE40();
    swift_allocError();
    uint64_t v31 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269931DD8);
    *uint64_t v31 = &type metadata for AwardToastKind;
    sub_24EB3DED0();
    sub_24EB3DE30();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v29 - 8) + 104))(v31, *MEMORY[0x263F8DCB0], v29);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v15, v12);
LABEL_7:
    uint64_t v32 = (uint64_t)v59;
    return __swift_destroy_boxed_opaque_existential_1(v32);
  }
  switch(*(unsigned char *)(v22 + 32))
  {
    case 1:
      char v63 = 1;
      sub_24EADB9B4();
      uint64_t v34 = v48;
      sub_24EB3DEC0();
      if (v34) {
        goto LABEL_14;
      }
      uint64_t v35 = v8;
      uint64_t v26 = sub_24EB3DF40();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v35, v19);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v15, v12);
      uint64_t v32 = (uint64_t)v59;
      uint64_t v27 = 0;
      char v28 = 0;
      goto LABEL_18;
    case 2:
      char v64 = 2;
      sub_24EADB960();
      uint64_t v36 = v48;
      sub_24EB3DEC0();
      if (v36) {
        goto LABEL_14;
      }
      uint64_t v57 = v23;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269932648);
      sub_24EADC284(&qword_269932690);
      uint64_t v39 = v51;
      sub_24EB3DF50();
      uint64_t v40 = v60;
      (*(void (**)(char *, uint64_t))(v52 + 8))(v18, v39);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v15, v12);
      uint64_t v27 = 0;
      uint64_t v26 = v61;
      char v28 = 1;
      goto LABEL_17;
    case 3:
      char v65 = 3;
      sub_24EADB90C();
      char v37 = v54;
      uint64_t v38 = v48;
      sub_24EB3DEC0();
      if (v38) {
        goto LABEL_14;
      }
      char v41 = v37;
      uint64_t v42 = v21;
      uint64_t v43 = sub_24EB3DF10();
      uint64_t v44 = v60;
      uint64_t v48 = 0;
      uint64_t v26 = v43;
      uint64_t v27 = v45;
      (*(void (**)(char *, uint64_t))(v53 + 8))(v41, v42);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v15, v12);
      char v28 = 2;
      uint64_t v32 = (uint64_t)v59;
      goto LABEL_18;
    default:
      char v62 = 0;
      sub_24EADBA08();
      uint64_t v25 = v47;
      uint64_t v24 = v48;
      sub_24EB3DEC0();
      if (v24)
      {
LABEL_14:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v60 + 8))(v15, v12);
        uint64_t v32 = (uint64_t)v59;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v49 + 8))(v25, v46);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v60 + 8))(v15, v12);
        uint64_t v26 = 0;
        uint64_t v27 = 0;
        char v28 = 3;
LABEL_17:
        uint64_t v32 = (uint64_t)v59;
LABEL_18:
        *(void *)uint64_t v20 = v26;
        *(void *)(v20 + 8) = v27;
        *(unsigned char *)(v20 + 16) = v28;
      }
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v32);
}

uint64_t sub_24EADC284(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269932648);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EADC2E8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AwardToastKind.init(from:)(a1, a2);
}

uint64_t sub_24EADC300(void *a1)
{
  return AwardToastKind.encode(to:)(a1);
}

uint64_t AwardToastKind.hash(into:)()
{
  uint64_t v1 = *v0;
  switch(*((unsigned char *)v0 + 16))
  {
    case 1:
      sub_24EB3E0A0();
      uint64_t result = sub_24EB3E0A0();
      uint64_t v3 = *(void *)(v1 + 16);
      if (v3)
      {
        uint64_t v4 = v1 + 40;
        do
        {
          swift_bridgeObjectRetain();
          sub_24EB3DCA0();
          uint64_t result = swift_bridgeObjectRelease();
          v4 += 16;
          --v3;
        }
        while (v3);
      }
      break;
    case 2:
      sub_24EB3E0A0();
      uint64_t result = sub_24EB3DCA0();
      break;
    case 3:
      goto LABEL_10;
    default:
      sub_24EB3E0A0();
LABEL_10:
      uint64_t result = sub_24EB3E0A0();
      break;
  }
  return result;
}

uint64_t AwardToastKind.hashValue.getter()
{
  return sub_24EB3E0D0();
}

uint64_t sub_24EADC48C()
{
  return sub_24EB3E0D0();
}

uint64_t sub_24EADC4E4()
{
  return sub_24EB3E0D0();
}

uint64_t _s13FitnessAwards14AwardToastKindO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t *a2)
{
  unint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  char v4 = *(unsigned char *)(a1 + 16);
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  int v7 = *((unsigned __int8 *)a2 + 16);
  switch(v4)
  {
    case 1:
      if (v7 != 1) {
        goto LABEL_18;
      }
      char v8 = sub_24EAE6364(v2, (void *)*a2);
      sub_24EAB4DA4(v5, v6, 1);
      sub_24EAB4DA4((uint64_t)v2, v3, 1);
      sub_24EAA8E28((uint64_t)v2, v3, 1);
      sub_24EAA8E28(v5, v6, 1);
      break;
    case 2:
      if (v7 != 2)
      {
LABEL_18:
        swift_bridgeObjectRetain();
        goto LABEL_19;
      }
      if (v2 == (void *)v5 && v3 == v6) {
        char v8 = 1;
      }
      else {
        char v8 = sub_24EB3E010();
      }
      sub_24EAB4DA4(v5, v6, 2);
      sub_24EAB4DA4((uint64_t)v2, v3, 2);
      sub_24EAA8E28((uint64_t)v2, v3, 2);
      sub_24EAA8E28(v5, v6, 2);
      break;
    case 3:
      if (v7 != 3 || (v6 | v5) != 0) {
        goto LABEL_19;
      }
      sub_24EAA8E28(*(void *)a1, v3, 3);
      sub_24EAA8E28(0, 0, 3);
      char v8 = 1;
      break;
    default:
      if (*((unsigned char *)a2 + 16))
      {
LABEL_19:
        sub_24EAB4DA4(v5, v6, v7);
        sub_24EAA8E28((uint64_t)v2, v3, v4);
        sub_24EAA8E28(v5, v6, v7);
        char v8 = 0;
      }
      else
      {
        sub_24EAA8E28(*(void *)a1, v3, 0);
        sub_24EAA8E28(v5, v6, 0);
        char v8 = v2 == (void *)v5;
      }
      break;
  }
  return v8 & 1;
}

unint64_t sub_24EADC730()
{
  unint64_t result = qword_269932698;
  if (!qword_269932698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932698);
  }
  return result;
}

uint64_t destroy for AwardToastKind(uint64_t a1)
{
  return sub_24EAA8E28(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s13FitnessAwards14AwardToastKindOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_24EAB4DA4(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for AwardToastKind(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_24EAB4DA4(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_24EAA8E28(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for AwardToastKind(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_24EAA8E28(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for AwardToastKind(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AwardToastKind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_24EADC910(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_24EADC928(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)unint64_t result = a2 - 3;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AwardToastKind()
{
  return &type metadata for AwardToastKind;
}

unsigned char *storeEnumTagSinglePayload for AwardToastKind.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EADCA1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardToastKind.CodingKeys()
{
  return &type metadata for AwardToastKind.CodingKeys;
}

ValueMetadata *type metadata accessor for AwardToastKind.StartStreakCodingKeys()
{
  return &type metadata for AwardToastKind.StartStreakCodingKeys;
}

ValueMetadata *type metadata accessor for AwardToastKind.MaintainStreakCodingKeys()
{
  return &type metadata for AwardToastKind.MaintainStreakCodingKeys;
}

ValueMetadata *type metadata accessor for AwardToastKind.CoalesedCodingKeys()
{
  return &type metadata for AwardToastKind.CoalesedCodingKeys;
}

unsigned char *_s13FitnessAwards14AwardToastKindO24MaintainStreakCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24EADCB24);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardToastKind.NextEarnableCodingKeys()
{
  return &type metadata for AwardToastKind.NextEarnableCodingKeys;
}

unint64_t sub_24EADCB60()
{
  unint64_t result = qword_2699326A0;
  if (!qword_2699326A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699326A0);
  }
  return result;
}

unint64_t sub_24EADCBB8()
{
  unint64_t result = qword_2699326A8;
  if (!qword_2699326A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699326A8);
  }
  return result;
}

unint64_t sub_24EADCC10()
{
  unint64_t result = qword_2699326B0;
  if (!qword_2699326B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699326B0);
  }
  return result;
}

unint64_t sub_24EADCC68()
{
  unint64_t result = qword_2699326B8;
  if (!qword_2699326B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699326B8);
  }
  return result;
}

unint64_t sub_24EADCCC0()
{
  unint64_t result = qword_2699326C0;
  if (!qword_2699326C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699326C0);
  }
  return result;
}

unint64_t sub_24EADCD18()
{
  unint64_t result = qword_2699326C8;
  if (!qword_2699326C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699326C8);
  }
  return result;
}

unint64_t sub_24EADCD70()
{
  unint64_t result = qword_2699326D0;
  if (!qword_2699326D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699326D0);
  }
  return result;
}

unint64_t sub_24EADCDC8()
{
  unint64_t result = qword_2699326D8;
  if (!qword_2699326D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699326D8);
  }
  return result;
}

unint64_t sub_24EADCE20()
{
  unint64_t result = qword_2699326E0;
  if (!qword_2699326E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699326E0);
  }
  return result;
}

unint64_t sub_24EADCE78()
{
  unint64_t result = qword_2699326E8;
  if (!qword_2699326E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699326E8);
  }
  return result;
}

unint64_t sub_24EADCED0()
{
  unint64_t result = qword_2699326F0;
  if (!qword_2699326F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699326F0);
  }
  return result;
}

unint64_t sub_24EADCF28()
{
  unint64_t result = qword_2699326F8;
  if (!qword_2699326F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699326F8);
  }
  return result;
}

unint64_t sub_24EADCF80()
{
  unint64_t result = qword_269932700;
  if (!qword_269932700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932700);
  }
  return result;
}

unint64_t sub_24EADCFD8()
{
  unint64_t result = qword_269932708;
  if (!qword_269932708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932708);
  }
  return result;
}

uint64_t sub_24EADD02C(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x7274537472617473 && a2 == 0xEB000000006B6165;
  if (v3 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6961746E69616DLL && a2 == 0xEE006B6165727453 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x646573656C616F63 && a2 == 0xE800000000000000 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E7261457478656ELL && a2 == 0xEC000000656C6261)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_24EADD208(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x654C6B6165727473 && a2 == 0xEC0000006874676ELL)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_24EADD2A0()
{
  return 0x654C6B6165727473;
}

uint64_t sub_24EADD2C0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x800000024EB4A250)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_24EADD34C(char a1)
{
  if (a1) {
    return 0x6B6165727473;
  }
  else {
    return 1818324839;
  }
}

uint64_t sub_24EADD378(char a1)
{
  if (!a1) {
    return 0xD000000000000012;
  }
  if (a1 == 1) {
    return 0x73736572676F7270;
  }
  return 1818324839;
}

uint64_t sub_24EADD3CC(char a1)
{
  return *(void *)&aStreakleextend[8 * a1];
}

uint64_t sub_24EADD3EC()
{
  return sub_24EADD34C(*v0);
}

uint64_t sub_24EADD3F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EADDEC0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EADD41C(uint64_t a1)
{
  unint64_t v2 = sub_24EADDDC4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EADD458(uint64_t a1)
{
  unint64_t v2 = sub_24EADDDC4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EADD494()
{
  return sub_24EADD378(*v0);
}

uint64_t sub_24EADD49C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EADDF94(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EADD4C4(uint64_t a1)
{
  unint64_t v2 = sub_24EADDE6C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EADD500(uint64_t a1)
{
  unint64_t v2 = sub_24EADDE6C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EADD53C()
{
  return sub_24EADD3CC(*v0);
}

uint64_t sub_24EADD544@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EADE0D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EADD56C(uint64_t a1)
{
  unint64_t v2 = sub_24EADDE18();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EADD5A8(uint64_t a1)
{
  unint64_t v2 = sub_24EADDE18();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AwardProgress.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D30D0);
  uint64_t v18 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D30C8);
  uint64_t v19 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  char v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D30C0);
  uint64_t v21 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EADDDC4();
  sub_24EB3E0F0();
  sub_24EAC10A4(v2, (uint64_t)v23);
  if (v24)
  {
    uint64_t v12 = v23[2];
    char v25 = 1;
    sub_24EADDE18();
    sub_24EB3DF70();
    char v25 = 0;
    uint64_t v13 = v20;
    uint64_t v14 = v22;
    sub_24EB3DFE0();
    if (!v14)
    {
      uint64_t v22 = v12;
      char v25 = 1;
      sub_24EB3DFC0();
      char v25 = 2;
      sub_24EB3DFE0();
    }
    (*(void (**)(char *, uint64_t))(v18 + 8))(v5, v13);
  }
  else
  {
    uint64_t v15 = v19;
    char v25 = 0;
    sub_24EADDE6C();
    sub_24EB3DF70();
    char v25 = 0;
    uint64_t v16 = v22;
    sub_24EB3DFB0();
    if (!v16)
    {
      char v25 = 1;
      sub_24EB3DFD0();
      char v25 = 2;
      sub_24EB3DFD0();
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v6);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v11, v9);
}

uint64_t AwardProgress.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_24EADE248(a1, v5);
  if (!v2) {
    return sub_24EAC10A4((uint64_t)v5, a2);
  }
  return result;
}

uint64_t sub_24EADD9F8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_24EADE248(a1, v5);
  if (!v2) {
    return sub_24EAC10A4((uint64_t)v5, a2);
  }
  return result;
}

uint64_t sub_24EADDA40(void *a1)
{
  sub_24EAC10A4(v1, (uint64_t)v4);
  return AwardProgress.encode(to:)(a1);
}

uint64_t AwardProgress.hash(into:)()
{
  sub_24EAC10A4(v0, (uint64_t)&v2);
  if (v3)
  {
    sub_24EB3E0A0();
    sub_24EB3E0A0();
    sub_24EB3E0B0();
    return sub_24EB3E0A0();
  }
  else
  {
    sub_24EB3E0A0();
    sub_24EB3DCA0();
    sub_24EB3E0C0();
    return sub_24EB3E0C0();
  }
}

uint64_t AwardProgress.hashValue.getter()
{
  return sub_24EB3E0D0();
}

uint64_t sub_24EADDB88()
{
  sub_24EAC10A4(v0, (uint64_t)v2);
  sub_24EB3E090();
  AwardProgress.hash(into:)();
  return sub_24EB3E0D0();
}

uint64_t sub_24EADDBD8()
{
  sub_24EAC10A4(v0, (uint64_t)v2);
  return AwardProgress.hash(into:)();
}

uint64_t sub_24EADDC18()
{
  sub_24EAC10A4(v0, (uint64_t)v2);
  sub_24EB3E090();
  AwardProgress.hash(into:)();
  return sub_24EB3E0D0();
}

BOOL sub_24EADDC6C(uint64_t a1, uint64_t a2)
{
  sub_24EAC10A4(a1, (uint64_t)v4);
  sub_24EAC10A4(a2, (uint64_t)v5);
  return _s13FitnessAwards13AwardProgressO2eeoiySbAC_ACtFZ_0((uint64_t)v4, (uint64_t)v5);
}

BOOL _s13FitnessAwards13AwardProgressO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  sub_24EAC10A4(a1, (uint64_t)&v20);
  uint64_t v3 = v20;
  if ((v24 & 1) == 0)
  {
    uint64_t v8 = v21;
    double v10 = v22;
    double v9 = v23;
    sub_24EAC10A4(a2, (uint64_t)&v15);
    if ((v19 & 1) == 0)
    {
      double v12 = v17;
      double v11 = v18;
      if (v3 == v15 && v8 == v16)
      {
        if (v10 != v17) {
          return 0;
        }
      }
      else
      {
        char v14 = sub_24EB3E010();
        BOOL result = 0;
        if ((v14 & 1) == 0 || v10 != v12) {
          return result;
        }
      }
      return v9 == v11;
    }
    return 0;
  }
  int v4 = v21;
  double v5 = v22;
  sub_24EAC10A4(a2, (uint64_t)&v15);
  if (v19 != 1) {
    return 0;
  }
  BOOL result = 0;
  if (v3 == v15 && ((v4 ^ v16) & 1) == 0) {
    return *(void *)&v5 == *(void *)&v17;
  }
  return result;
}

unint64_t sub_24EADDDC4()
{
  unint64_t result = qword_26B1D27C8;
  if (!qword_26B1D27C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D27C8);
  }
  return result;
}

unint64_t sub_24EADDE18()
{
  unint64_t result = qword_26B1D27F8;
  if (!qword_26B1D27F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D27F8);
  }
  return result;
}

unint64_t sub_24EADDE6C()
{
  unint64_t result = qword_26B1D27E0;
  if (!qword_26B1D27E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D27E0);
  }
  return result;
}

uint64_t sub_24EADDEC0(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 1818324839 && a2 == 0xE400000000000000;
  if (v3 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6B6165727473 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24EADDF94(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x800000024EB4A250 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73736572676F7270 && a2 == 0xE800000000000000 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1818324839 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_24EADE0D0(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x654C6B6165727473 && a2 == 0xEC0000006874676ELL;
  if (v3 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6261646E65747865 && a2 == 0xEA0000000000656CLL || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x53747365676E6F6CLL && a2 == 0xED00006B61657274)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_24EADE248@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932728);
  uint64_t v41 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  int v4 = &v37[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932730);
  uint64_t v42 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = &v37[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932738);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  double v11 = &v37[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = a1[3];
  uint64_t v44 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_24EADDDC4();
  uint64_t v13 = v45;
  sub_24EB3E0E0();
  if (v13) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  }
  uint64_t v14 = v43;
  uint64_t v45 = v9;
  uint64_t v15 = sub_24EB3DF60();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v17 = sub_24EB3DE40();
    swift_allocError();
    char v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269931DD8);
    *char v19 = &type metadata for AwardProgress;
    sub_24EB3DED0();
    sub_24EB3DE30();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v17 - 8) + 104))(v19, *MEMORY[0x263F8DCB0], v17);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v45 + 8))(v11, v8);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  }
  uint64_t v39 = v8;
  int v16 = *(unsigned __int8 *)(v15 + 32);
  if (v16)
  {
    char v53 = 1;
    sub_24EADDE18();
    sub_24EB3DEC0();
    int v38 = v16;
    char v52 = 0;
    uint64_t v22 = sub_24EB3DF40();
    char v51 = 1;
    char v26 = sub_24EB3DF20();
    char v50 = 2;
    uint64_t v27 = sub_24EB3DF40();
    (*(void (**)(unsigned char *, uint64_t))(v41 + 8))(v4, v14);
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v45 + 8))(v11, v39);
    uint64_t v28 = (uint64_t)v44;
    uint64_t v29 = v26 & 1;
    uint64_t v30 = 0;
  }
  else
  {
    char v49 = 0;
    sub_24EADDE6C();
    uint64_t v21 = v7;
    sub_24EB3DEC0();
    int v38 = v16;
    char v48 = 0;
    uint64_t v23 = v5;
    uint64_t v24 = sub_24EB3DF10();
    uint64_t v29 = v25;
    char v47 = 1;
    sub_24EB3DF30();
    uint64_t v32 = v31;
    uint64_t v43 = v24;
    char v46 = 2;
    sub_24EB3DF30();
    uint64_t v33 = v45;
    uint64_t v34 = v39;
    uint64_t v30 = v35;
    (*(void (**)(unsigned char *, uint64_t))(v42 + 8))(v21, v23);
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v33 + 8))(v11, v34);
    uint64_t v27 = v32;
    uint64_t v22 = v43;
    uint64_t v28 = (uint64_t)v44;
  }
  uint64_t result = __swift_destroy_boxed_opaque_existential_1(v28);
  uint64_t v36 = v40;
  *uint64_t v40 = v22;
  v36[1] = v29;
  void v36[2] = v27;
  v36[3] = v30;
  *((unsigned char *)v36 + 32) = v38;
  return result;
}

unint64_t sub_24EADE8E0()
{
  unint64_t result = qword_26B1D2820;
  if (!qword_26B1D2820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2820);
  }
  return result;
}

uint64_t destroy for AwardProgress(uint64_t a1)
{
  return sub_24EAB1A70(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t initializeWithCopy for AwardProgress(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_24EAC16CC(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for AwardProgress(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_24EAC16CC(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  char v12 = *(unsigned char *)(a1 + 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  sub_24EAB1A70(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for AwardProgress(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  char v8 = *(unsigned char *)(a1 + 32);
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  *(unsigned char *)(a1 + 32) = v3;
  sub_24EAB1A70(v4, v6, v5, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for AwardProgress(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AwardProgress(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_24EADEAFC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_24EADEB04(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for AwardProgress()
{
  return &type metadata for AwardProgress;
}

unsigned char *storeEnumTagSinglePayload for AwardProgress.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EADEBECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardProgress.CodingKeys()
{
  return &type metadata for AwardProgress.CodingKeys;
}

ValueMetadata *type metadata accessor for AwardProgress.GoalCodingKeys()
{
  return &type metadata for AwardProgress.GoalCodingKeys;
}

unsigned char *_s13FitnessAwards13AwardProgressO14GoalCodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EADED04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardProgress.StreakCodingKeys()
{
  return &type metadata for AwardProgress.StreakCodingKeys;
}

unint64_t sub_24EADED40()
{
  unint64_t result = qword_269932710;
  if (!qword_269932710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932710);
  }
  return result;
}

unint64_t sub_24EADED98()
{
  unint64_t result = qword_269932718;
  if (!qword_269932718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932718);
  }
  return result;
}

unint64_t sub_24EADEDF0()
{
  unint64_t result = qword_269932720;
  if (!qword_269932720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932720);
  }
  return result;
}

unint64_t sub_24EADEE48()
{
  unint64_t result = qword_26B1D27F0;
  if (!qword_26B1D27F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D27F0);
  }
  return result;
}

unint64_t sub_24EADEEA0()
{
  unint64_t result = qword_26B1D27E8;
  if (!qword_26B1D27E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D27E8);
  }
  return result;
}

unint64_t sub_24EADEEF8()
{
  unint64_t result = qword_26B1D2808;
  if (!qword_26B1D2808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2808);
  }
  return result;
}

unint64_t sub_24EADEF50()
{
  unint64_t result = qword_26B1D2800;
  if (!qword_26B1D2800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2800);
  }
  return result;
}

unint64_t sub_24EADEFA8()
{
  unint64_t result = qword_26B1D27D8;
  if (!qword_26B1D27D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D27D8);
  }
  return result;
}

unint64_t sub_24EADF000()
{
  unint64_t result = qword_26B1D27D0;
  if (!qword_26B1D27D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D27D0);
  }
  return result;
}

BOOL static AwardEarnedState.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_24EADF064(char a1)
{
  if (a1) {
    return 0x64656E7261656E75;
  }
  else {
    return 0x64656E726165;
  }
}

uint64_t sub_24EADF098()
{
  return sub_24EADF064(*v0);
}

uint64_t sub_24EADF0A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EADF6B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EADF0C8(uint64_t a1)
{
  unint64_t v2 = sub_24EADF4E0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EADF104(uint64_t a1)
{
  unint64_t v2 = sub_24EADF4E0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EADF140(uint64_t a1)
{
  unint64_t v2 = sub_24EADF588();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EADF17C(uint64_t a1)
{
  unint64_t v2 = sub_24EADF588();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EADF1B8(uint64_t a1)
{
  unint64_t v2 = sub_24EADF534();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EADF1F4(uint64_t a1)
{
  unint64_t v2 = sub_24EADF534();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AwardEarnedState.encode(to:)(void *a1, int a2)
{
  int v18 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932740);
  uint64_t v16 = *(void *)(v3 - 8);
  uint64_t v17 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932748);
  uint64_t v6 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  char v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932750);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  char v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EADF4E0();
  sub_24EB3E0F0();
  uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v10 + 8);
  if (v18)
  {
    char v20 = 1;
    sub_24EADF534();
    sub_24EB3DF70();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    char v19 = 0;
    sub_24EADF588();
    sub_24EB3DF70();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v15);
  }
  return (*v13)(v12, v9);
}

unint64_t sub_24EADF4E0()
{
  unint64_t result = qword_269932758;
  if (!qword_269932758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932758);
  }
  return result;
}

unint64_t sub_24EADF534()
{
  unint64_t result = qword_269932760;
  if (!qword_269932760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932760);
  }
  return result;
}

unint64_t sub_24EADF588()
{
  unint64_t result = qword_269932768;
  if (!qword_269932768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932768);
  }
  return result;
}

uint64_t AwardEarnedState.init(from:)(uint64_t a1)
{
  return sub_24EADF798(a1) & 1;
}

uint64_t sub_24EADF5F8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_24EADF798(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_24EADF628(void *a1)
{
  return AwardEarnedState.encode(to:)(a1, *v1);
}

uint64_t AwardEarnedState.hash(into:)()
{
  return sub_24EB3E0A0();
}

uint64_t AwardEarnedState.hashValue.getter()
{
  return sub_24EB3E0D0();
}

uint64_t sub_24EADF6B4(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x64656E726165 && a2 == 0xE600000000000000;
  if (v3 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64656E7261656E75 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24EADF798(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699327B0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v22 = v2;
  uint64_t v23 = v3;
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699327B8);
  uint64_t v25 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  char v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699327C0);
  uint64_t v24 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)a1, *(void *)(a1 + 24));
  sub_24EADF4E0();
  uint64_t v12 = v26;
  sub_24EB3E0E0();
  if (v12) {
    goto LABEL_7;
  }
  uint64_t v13 = v25;
  uint64_t v21 = v6;
  uint64_t v26 = a1;
  uint64_t v14 = sub_24EB3DF60();
  if (*(void *)(v14 + 16) != 1)
  {
    uint64_t v16 = sub_24EB3DE40();
    swift_allocError();
    int v18 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269931DD8);
    *int v18 = &type metadata for AwardEarnedState;
    sub_24EB3DED0();
    sub_24EB3DE30();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v16 - 8) + 104))(v18, *MEMORY[0x263F8DCB0], v16);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v9);
    a1 = v26;
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1(a1);
    return a1;
  }
  a1 = *(unsigned __int8 *)(v14 + 32);
  if (a1)
  {
    LODWORD(v25) = *(unsigned __int8 *)(v14 + 32);
    char v28 = 1;
    sub_24EADF534();
    sub_24EB3DEC0();
    uint64_t v15 = v24;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v22);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v11, v9);
    a1 = v25;
  }
  else
  {
    char v27 = 0;
    sub_24EADF588();
    sub_24EB3DEC0();
    uint64_t v19 = v24;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v21);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
  }
  __swift_destroy_boxed_opaque_existential_1(v26);
  return a1;
}

unint64_t sub_24EADFBEC()
{
  unint64_t result = qword_269932770;
  if (!qword_269932770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932770);
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardEarnedState()
{
  return &type metadata for AwardEarnedState;
}

unsigned char *_s13FitnessAwards16AwardEarnedStateOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EADFD20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardEarnedState.CodingKeys()
{
  return &type metadata for AwardEarnedState.CodingKeys;
}

ValueMetadata *type metadata accessor for AwardEarnedState.EarnedCodingKeys()
{
  return &type metadata for AwardEarnedState.EarnedCodingKeys;
}

ValueMetadata *type metadata accessor for AwardEarnedState.UnearnedCodingKeys()
{
  return &type metadata for AwardEarnedState.UnearnedCodingKeys;
}

unint64_t sub_24EADFD7C()
{
  unint64_t result = qword_269932778;
  if (!qword_269932778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932778);
  }
  return result;
}

unint64_t sub_24EADFDD4()
{
  unint64_t result = qword_269932780;
  if (!qword_269932780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932780);
  }
  return result;
}

unint64_t sub_24EADFE2C()
{
  unint64_t result = qword_269932788;
  if (!qword_269932788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932788);
  }
  return result;
}

unint64_t sub_24EADFE84()
{
  unint64_t result = qword_269932790;
  if (!qword_269932790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932790);
  }
  return result;
}

unint64_t sub_24EADFEDC()
{
  unint64_t result = qword_269932798;
  if (!qword_269932798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932798);
  }
  return result;
}

unint64_t sub_24EADFF34()
{
  unint64_t result = qword_2699327A0;
  if (!qword_2699327A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699327A0);
  }
  return result;
}

unint64_t sub_24EADFF8C()
{
  unint64_t result = qword_2699327A8;
  if (!qword_2699327A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699327A8);
  }
  return result;
}

uint64_t sub_24EADFFE4(uint64_t a1, uint64_t a2)
{
  return sub_24EAE4180(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

__n128 AwardDetailFeature.init(environment:)@<Q0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  type metadata accessor for AwardDetailFeature();
  sub_24EB3D1E0();
  __n128 result = *(__n128 *)a1;
  long long v5 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v5;
  return result;
}

uint64_t type metadata accessor for AwardDetailFeature()
{
  uint64_t result = qword_269932828;
  if (!qword_269932828) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t AwardDetailFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, uint64_t *a2, unint64_t *a3, char a4)
{
  uint64_t v180 = a3;
  uint64_t v183 = a2;
  uint64_t v5 = sub_24EB3D1F0();
  uint64_t v175 = *(void *)(v5 - 8);
  uint64_t v176 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v170 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v174 = type metadata accessor for AwardDetailFeature();
  uint64_t v177 = *(void *)(v174 - 8);
  uint64_t v8 = *(void *)(v177 + 64);
  uint64_t v9 = MEMORY[0x270FA5388](v174);
  uint64_t v10 = (char *)&v170 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v173 = (uint64_t)&v170 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932198);
  uint64_t v178 = *(void *)(v12 - 8);
  uint64_t v179 = v12;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v172 = (char *)&v170 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v170 - v16;
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  int v171 = (char *)&v170 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v170 - v20;
  uint64_t State = type metadata accessor for AwardEarnedLoadState();
  uint64_t v22 = MEMORY[0x270FA5388](State);
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v170 - v24;
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  uint64_t v28 = MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)&v170 - v29;
  uint64_t v31 = MEMORY[0x270FA5388](v28);
  uint64_t v32 = MEMORY[0x270FA5388](v31);
  uint64_t v34 = (char *)&v170 - v33;
  uint64_t v35 = MEMORY[0x270FA5388](v32);
  MEMORY[0x270FA5388](v35);
  uint64_t v37 = MEMORY[0x270FA5388]((char *)&v170 - v36);
  uint64_t v39 = (char *)&v170 - v38;
  uint64_t v40 = (unint64_t *)MEMORY[0x270FA5388](v37);
  switch(a4)
  {
    case 2:
      uint64_t v47 = v42;
      uint64_t v177 = v44;
      char v48 = v183;
      uint64_t v50 = *v183;
      unint64_t v49 = v183[1];
      uint64_t v51 = v46;
      uint64_t v52 = (uint64_t)v48 + *(int *)(type metadata accessor for AwardDetailState() + 28);
      sub_24EAE3324(v52, v51, (uint64_t (*)(void))type metadata accessor for AwardEarnedLoadState);
      uint64_t v53 = v51;
      sub_24EAE3324(v51, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for AwardEarnedLoadState);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      swift_bridgeObjectRetain();
      sub_24EAD5D6C((uint64_t)v30);
      if (EnumCaseMultiPayload == 2)
      {
        sub_24EAD5D6C(v52);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v175 + 16))(v52, v181 + *(int *)(v174 + 20), v176);
        swift_storeEnumTagMultiPayload();
        uint64_t v55 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26B1D30A0);
        uint64_t v56 = v171;
        uint64_t v57 = &v171[v55[16]];
        uint64_t v58 = &v171[v55[20]];
        uint64_t v59 = &v171[v55[24]];
        uint64_t v184 = v50;
        unint64_t v185 = v49;
        char v186 = 0;
        sub_24EAE31F0();
        swift_bridgeObjectRetain();
        sub_24EB3DDE0();
        sub_24EB3DD30();
        uint64_t v60 = swift_allocObject();
        *(void *)(v60 + 16) = v50;
        *(void *)(v60 + 24) = v49;
        *(void *)uint64_t v59 = &unk_2699327F8;
        *((void *)v59 + 1) = v60;
        uint64_t v61 = *MEMORY[0x263F39588];
        uint64_t v62 = sub_24EB3DB90();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v62 - 8) + 104))(v57, v61, v62);
        uint64_t v63 = *MEMORY[0x263F39578];
        uint64_t v64 = sub_24EB3DB80();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v64 - 8) + 104))(v58, v63, v64);
        uint64_t v66 = v178;
        uint64_t v65 = v179;
        (*(void (**)(char *, void, uint64_t))(v178 + 104))(v56, *MEMORY[0x263F39530], v179);
        uint64_t v67 = v180;
        unint64_t v68 = *v180;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v68 = sub_24EAC4EFC(0, *(void *)(v68 + 16) + 1, 1, v68);
        }
        unint64_t v70 = *(void *)(v68 + 16);
        unint64_t v69 = *(void *)(v68 + 24);
        if (v70 >= v69 >> 1) {
          unint64_t v68 = sub_24EAC4EFC(v69 > 1, v70 + 1, 1, v68);
        }
        *(void *)(v68 + 16) = v70 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v66 + 32))(v68+ ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80))+ *(void *)(v66 + 72) * v70, v56, v65);
        *uint64_t v67 = v68;
        uint64_t v71 = v53;
      }
      else
      {
        if (qword_26B1D27C0 != -1) {
          swift_once();
        }
        uint64_t v145 = sub_24EB3D2C0();
        __swift_project_value_buffer(v145, (uint64_t)qword_26B1D27A8);
        sub_24EAE3324(v51, v47, (uint64_t (*)(void))type metadata accessor for AwardEarnedLoadState);
        swift_bridgeObjectRetain();
        uint64_t v146 = sub_24EB3D2A0();
        os_log_type_t v147 = sub_24EB3DD80();
        if (os_log_type_enabled(v146, v147))
        {
          uint64_t v148 = swift_slowAlloc();
          uint64_t v149 = swift_slowAlloc();
          uint64_t v184 = v149;
          *(_DWORD *)uint64_t v148 = 136315394;
          swift_bridgeObjectRetain();
          uint64_t v187 = sub_24EAC5098(v50, v49, &v184);
          sub_24EB3DDB0();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v148 + 12) = 2080;
          sub_24EAE3324(v47, v177, (uint64_t (*)(void))type metadata accessor for AwardEarnedLoadState);
          uint64_t v150 = sub_24EB3DC80();
          uint64_t v187 = sub_24EAC5098(v150, v151, &v184);
          sub_24EB3DDB0();
          swift_bridgeObjectRelease();
          sub_24EAD5D6C(v47);
          _os_log_impl(&dword_24EAA5000, v146, v147, "[AwardDetailFeature] Notified of earned load state being cleared for %s but load state was %s, returning", (uint8_t *)v148, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x2533497D0](v149, -1, -1);
          MEMORY[0x2533497D0](v148, -1, -1);
        }
        else
        {

          sub_24EAD5D6C(v47);
          swift_bridgeObjectRelease_n();
        }
        uint64_t v71 = v53;
      }
      return sub_24EAD5D6C(v71);
    case 3:
      uint64_t v83 = (uint64_t)v183 + *(int *)(type metadata accessor for AwardDetailState() + 28);
      sub_24EAE3324(v83, (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for AwardEarnedLoadState);
      if (swift_getEnumCaseMultiPayload())
      {
        uint64_t v71 = (uint64_t)v34;
        return sub_24EAD5D6C(v71);
      }
      uint64_t v168 = v175;
      uint64_t v167 = v176;
      (*(void (**)(char *, char *, uint64_t))(v175 + 32))(v7, v34, v176);
      char v169 = sub_24EB3D1D0();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v168 + 8))(v7, v167);
      if (v169)
      {
        sub_24EAD5D6C(v83);
        return swift_storeEnumTagMultiPayload();
      }
      return result;
    case 4:
      uint64_t v85 = *v183;
      uint64_t v84 = v183[1];
      uint64_t v86 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26B1D30A0);
      long long v87 = &v21[v86[16]];
      char v88 = &v21[v86[20]];
      long long v89 = &v21[v86[24]];
      uint64_t v184 = v85;
      unint64_t v185 = v84;
      char v186 = 1;
      sub_24EAE31F0();
      swift_bridgeObjectRetain_n();
      sub_24EB3DDE0();
      sub_24EB3DD30();
      uint64_t v90 = *MEMORY[0x263F39590];
      uint64_t v91 = sub_24EB3DB90();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v91 - 8) + 104))(v87, v90, v91);
      uint64_t v92 = *MEMORY[0x263F39570];
      uint64_t v93 = sub_24EB3DB80();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v93 - 8) + 104))(v88, v92, v93);
      uint64_t v94 = v173;
      sub_24EAE3324(v181, v173, (uint64_t (*)(void))type metadata accessor for AwardDetailFeature);
      unint64_t v95 = (*(unsigned __int8 *)(v177 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v177 + 80);
      uint64_t v96 = swift_allocObject();
      sub_24EAE3490(v94, v96 + v95);
      uint64_t v97 = (uint64_t *)(v96 + ((v8 + v95 + 7) & 0xFFFFFFFFFFFFFFF8));
      *uint64_t v97 = v85;
      v97[1] = v84;
      *(void *)long long v89 = &unk_269932808;
      *((void *)v89 + 1) = v96;
      uint64_t v99 = v178;
      uint64_t v98 = v179;
      (*(void (**)(char *, void, uint64_t))(v178 + 104))(v21, *MEMORY[0x263F39530], v179);
      uint64_t v100 = v180;
      unint64_t v101 = *v180;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v101 = sub_24EAC4EFC(0, *(void *)(v101 + 16) + 1, 1, v101);
      }
      unint64_t v103 = *(void *)(v101 + 16);
      unint64_t v102 = *(void *)(v101 + 24);
      if (v103 >= v102 >> 1) {
        unint64_t v101 = sub_24EAC4EFC(v102 > 1, v103 + 1, 1, v101);
      }
      *(void *)(v101 + 16) = v103 + 1;
      uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v99 + 32))(v101+ ((*(unsigned __int8 *)(v99 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80))+ *(void *)(v99 + 72) * v103, v21, v98);
      goto LABEL_24;
    case 5:
      uint64_t v106 = *v183;
      uint64_t v105 = v183[1];
      uint64_t v107 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26B1D30A0);
      uint64_t v108 = &v17[v107[16]];
      uint64_t v109 = &v17[v107[20]];
      uint64_t v110 = &v17[v107[24]];
      uint64_t v184 = v106;
      unint64_t v185 = v105;
      char v186 = 2;
      sub_24EAE31F0();
      swift_bridgeObjectRetain_n();
      sub_24EB3DDE0();
      sub_24EB3DD30();
      uint64_t v111 = *MEMORY[0x263F39590];
      uint64_t v112 = sub_24EB3DB90();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v112 - 8) + 104))(v108, v111, v112);
      sub_24EAE3324(v181, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for AwardDetailFeature);
      unint64_t v113 = (*(unsigned __int8 *)(v177 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v177 + 80);
      uint64_t v114 = swift_allocObject();
      *(void *)(v114 + 16) = v106;
      *(void *)(v114 + 24) = v105;
      sub_24EAE3490((uint64_t)v10, v114 + v113);
      *(void *)uint64_t v110 = &unk_2699327E8;
      *((void *)v110 + 1) = v114;
      uint64_t v115 = *MEMORY[0x263F39578];
      uint64_t v116 = sub_24EB3DB80();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v116 - 8) + 104))(v109, v115, v116);
      uint64_t v118 = v178;
      uint64_t v117 = v179;
      (*(void (**)(char *, void, uint64_t))(v178 + 104))(v17, *MEMORY[0x263F39530], v179);
      uint64_t v100 = v180;
      unint64_t v101 = *v180;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v101 = sub_24EAC4EFC(0, *(void *)(v101 + 16) + 1, 1, v101);
      }
      unint64_t v120 = *(void *)(v101 + 16);
      unint64_t v119 = *(void *)(v101 + 24);
      if (v120 >= v119 >> 1) {
        unint64_t v101 = sub_24EAC4EFC(v119 > 1, v120 + 1, 1, v101);
      }
      *(void *)(v101 + 16) = v120 + 1;
      uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v118 + 32))(v101+ ((*(unsigned __int8 *)(v118 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v118 + 80))+ *(void *)(v118 + 72) * v120, v17, v117);
LABEL_24:
      unint64_t *v100 = v101;
      return result;
    case 6:
      uint64_t v121 = v41;
      uint64_t v177 = v44;
      uint64_t v122 = v183;
      uint64_t v124 = *v183;
      unint64_t v123 = v183[1];
      uint64_t v125 = v45;
      uint64_t v126 = (uint64_t)v122 + *(int *)(type metadata accessor for AwardDetailState() + 28);
      sub_24EAE3324(v126, v125, (uint64_t (*)(void))type metadata accessor for AwardEarnedLoadState);
      uint64_t v127 = v125;
      sub_24EAE3324(v125, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for AwardEarnedLoadState);
      int v128 = swift_getEnumCaseMultiPayload();
      swift_bridgeObjectRetain();
      sub_24EAD5D6C((uint64_t)v25);
      if (v128 == 2)
      {
        sub_24EAD5D6C(v126);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v175 + 16))(v126, v181 + *(int *)(v174 + 20), v176);
        swift_storeEnumTagMultiPayload();
        uint64_t v129 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26B1D30A0);
        uint64_t v130 = v172;
        unint64_t v131 = &v172[v129[16]];
        uint64_t v132 = &v172[v129[20]];
        long long v133 = &v172[v129[24]];
        uint64_t v184 = v124;
        unint64_t v185 = v123;
        char v186 = 3;
        sub_24EAE31F0();
        swift_bridgeObjectRetain();
        sub_24EB3DDE0();
        sub_24EB3DD30();
        uint64_t v134 = swift_allocObject();
        *(void *)(v134 + 16) = v124;
        *(void *)(v134 + 24) = v123;
        *(void *)long long v133 = &unk_2699327D8;
        *((void *)v133 + 1) = v134;
        uint64_t v135 = *MEMORY[0x263F39588];
        uint64_t v136 = sub_24EB3DB90();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v136 - 8) + 104))(v131, v135, v136);
        uint64_t v137 = *MEMORY[0x263F39578];
        uint64_t v138 = sub_24EB3DB80();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v138 - 8) + 104))(v132, v137, v138);
        uint64_t v140 = v178;
        uint64_t v139 = v179;
        (*(void (**)(char *, void, uint64_t))(v178 + 104))(v130, *MEMORY[0x263F39530], v179);
        uint64_t v141 = v180;
        unint64_t v142 = *v180;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v142 = sub_24EAC4EFC(0, *(void *)(v142 + 16) + 1, 1, v142);
        }
        unint64_t v144 = *(void *)(v142 + 16);
        unint64_t v143 = *(void *)(v142 + 24);
        if (v144 >= v143 >> 1) {
          unint64_t v142 = sub_24EAC4EFC(v143 > 1, v144 + 1, 1, v142);
        }
        *(void *)(v142 + 16) = v144 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v140 + 32))(v142+ ((*(unsigned __int8 *)(v140 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v140 + 80))+ *(void *)(v140 + 72) * v144, v130, v139);
        *uint64_t v141 = v142;
        uint64_t v71 = v127;
        return sub_24EAD5D6C(v71);
      }
      if (qword_26B1D27C0 != -1) {
        swift_once();
      }
      uint64_t v160 = sub_24EB3D2C0();
      __swift_project_value_buffer(v160, (uint64_t)qword_26B1D27A8);
      uint64_t v72 = (char *)v125;
      sub_24EAE3324(v125, v121, (uint64_t (*)(void))type metadata accessor for AwardEarnedLoadState);
      swift_bridgeObjectRetain();
      long long v161 = sub_24EB3D2A0();
      os_log_type_t v162 = sub_24EB3DD80();
      if (os_log_type_enabled(v161, v162))
      {
        uint64_t v163 = swift_slowAlloc();
        uint64_t v164 = swift_slowAlloc();
        uint64_t v184 = v164;
        *(_DWORD *)uint64_t v163 = 136315394;
        swift_bridgeObjectRetain();
        uint64_t v187 = sub_24EAC5098(v124, v123, &v184);
        sub_24EB3DDB0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v163 + 12) = 2080;
        sub_24EAE3324(v121, v177, (uint64_t (*)(void))type metadata accessor for AwardEarnedLoadState);
        uint64_t v165 = sub_24EB3DC80();
        uint64_t v187 = sub_24EAC5098(v165, v166, &v184);
        sub_24EB3DDB0();
        swift_bridgeObjectRelease();
        sub_24EAD5D6C(v121);
        _os_log_impl(&dword_24EAA5000, v161, v162, "[AwardDetailFeature] View appeared for %s but load state was %s, returning.", (uint8_t *)v163, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2533497D0](v164, -1, -1);
        MEMORY[0x2533497D0](v163, -1, -1);
      }
      else
      {

        sub_24EAD5D6C(v121);
        swift_bridgeObjectRelease_n();
      }
      goto LABEL_50;
    default:
      uint64_t v180 = v40;
      uint64_t v72 = (char *)&v170 - v43;
      uint64_t v177 = v44;
      LODWORD(v181) = a4 & 1;
      uint64_t v74 = *v183;
      unint64_t v73 = v183[1];
      uint64_t v75 = qword_26B1D27C0;
      swift_bridgeObjectRetain();
      if (v75 != -1) {
        swift_once();
      }
      uint64_t v76 = sub_24EB3D2C0();
      __swift_project_value_buffer(v76, (uint64_t)qword_26B1D27A8);
      swift_bridgeObjectRetain();
      uint64_t v77 = sub_24EB3D2A0();
      os_log_type_t v78 = sub_24EB3DD80();
      if (os_log_type_enabled(v77, v78))
      {
        uint64_t v79 = swift_slowAlloc();
        uint64_t v80 = swift_slowAlloc();
        uint64_t v184 = v80;
        *(_DWORD *)uint64_t v79 = 136315394;
        swift_bridgeObjectRetain();
        uint64_t v187 = sub_24EAC5098(v74, v73, &v184);
        sub_24EB3DDB0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v79 + 12) = 2080;
        LOBYTE(v187) = v181;
        uint64_t v81 = sub_24EB3DC80();
        uint64_t v187 = sub_24EAC5098(v81, v82, &v184);
        sub_24EB3DDB0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24EAA5000, v77, v78, "[AwardDetailFeature] (%s) Earned state fetched: %s", (uint8_t *)v79, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2533497D0](v80, -1, -1);
        MEMORY[0x2533497D0](v79, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      char v152 = (char *)v183 + *(int *)(type metadata accessor for AwardDetailState() + 28);
      sub_24EAE3324((uint64_t)v152, (uint64_t)v72, (uint64_t (*)(void))type metadata accessor for AwardEarnedLoadState);
      sub_24EAE3324((uint64_t)v72, (uint64_t)v39, (uint64_t (*)(void))type metadata accessor for AwardEarnedLoadState);
      if (swift_getEnumCaseMultiPayload())
      {
        sub_24EAD5D6C((uint64_t)v39);
        uint64_t v153 = v180;
        sub_24EAE3324((uint64_t)v72, (uint64_t)v180, (uint64_t (*)(void))type metadata accessor for AwardEarnedLoadState);
        unsigned __int8 v154 = sub_24EB3D2A0();
        os_log_type_t v155 = sub_24EB3DD80();
        if (os_log_type_enabled(v154, v155))
        {
          unsigned __int8 v156 = (uint8_t *)swift_slowAlloc();
          uint64_t v157 = swift_slowAlloc();
          uint64_t v184 = v157;
          *(_DWORD *)unsigned __int8 v156 = 136315138;
          sub_24EAE3324((uint64_t)v153, v177, (uint64_t (*)(void))type metadata accessor for AwardEarnedLoadState);
          uint64_t v158 = sub_24EB3DC80();
          uint64_t v187 = sub_24EAC5098(v158, v159, &v184);
          sub_24EB3DDB0();
          swift_bridgeObjectRelease();
          sub_24EAD5D6C((uint64_t)v153);
          _os_log_impl(&dword_24EAA5000, v154, v155, "[AwardDetailFeature] Current state is %s, skipping .fetched update", v156, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2533497D0](v157, -1, -1);
          MEMORY[0x2533497D0](v156, -1, -1);
        }
        else
        {

          sub_24EAD5D6C((uint64_t)v153);
        }
LABEL_50:
        uint64_t v71 = (uint64_t)v72;
        return sub_24EAD5D6C(v71);
      }
      else
      {
        sub_24EAD5D6C((uint64_t)v72);
        (*(void (**)(char *, uint64_t))(v175 + 8))(v39, v176);
        sub_24EAD5D6C((uint64_t)v152);
        *char v152 = v181;
        return swift_storeEnumTagMultiPayload();
      }
  }
}

uint64_t sub_24EAE1738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[12] = a3;
  v4[13] = a4;
  v4[10] = a1;
  v4[11] = a2;
  sub_24EB3DD20();
  v4[14] = sub_24EB3DD10();
  uint64_t v6 = sub_24EB3DCF0();
  v4[15] = v6;
  v4[16] = v5;
  return MEMORY[0x270FA2498](sub_24EAE17D4, v6, v5);
}

uint64_t sub_24EAE17D4()
{
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))(**(void **)(v0 + 88) + ***(int ***)(v0 + 88));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_24EAE18A8;
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 104);
  return v5(v3, v2);
}

uint64_t sub_24EAE18A8(char a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(unsigned char *)(v4 + 171) = a1;
  *(void *)(v4 + 144) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 128);
  uint64_t v6 = *(void *)(v3 + 120);
  if (v1) {
    uint64_t v7 = sub_24EAE1FA4;
  }
  else {
    uint64_t v7 = sub_24EAE19F0;
  }
  return MEMORY[0x270FA2498](v7, v6, v5);
}

uint64_t sub_24EAE19F0()
{
  uint64_t v15 = v0;
  if (qword_26B1D27C0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24EB3D2C0();
  __swift_project_value_buffer(v1, (uint64_t)qword_26B1D27A8);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_24EB3D2A0();
  os_log_type_t v3 = sub_24EB3DD80();
  if (os_log_type_enabled(v2, v3))
  {
    unint64_t v4 = *(void *)(v0 + 104);
    uint64_t v13 = *(void *)(v0 + 96);
    char v5 = *(unsigned char *)(v0 + 171) & 1;
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v14 = v7;
    *(_DWORD *)uint64_t v6 = 136315394;
    *(unsigned char *)(v0 + 168) = v5;
    uint64_t v8 = sub_24EB3DC80();
    *(void *)(v0 + 72) = sub_24EAC5098(v8, v9, &v14);
    sub_24EB3DDB0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 64) = sub_24EAC5098(v13, v4, &v14);
    sub_24EB3DDB0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24EAA5000, v2, v3, "[AwardDetailFeature] Sending .earnedStateFetched(%s) action for %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533497D0](v7, -1, -1);
    MEMORY[0x2533497D0](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  *(unsigned char *)(v0 + 169) = *(unsigned char *)(v0 + 171) & 1;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932840);
  *uint64_t v10 = v0;
  v10[1] = sub_24EAE1C90;
  return MEMORY[0x270F252C8](v0 + 169, v11);
}

uint64_t sub_24EAE1C90()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 128);
  uint64_t v3 = *(void *)(v1 + 120);
  return MEMORY[0x270FA2498](sub_24EAE1DB0, v3, v2);
}

uint64_t sub_24EAE1DB0()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24EAE1E14()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 128);
  uint64_t v3 = *(void *)(v1 + 120);
  return MEMORY[0x270FA2498](sub_24EAE1F34, v3, v2);
}

uint64_t sub_24EAE1F34()
{
  uint64_t v1 = *(void *)(v0 + 144);
  swift_release();
  MEMORY[0x2533495D0](v1);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_24EAE1FA4()
{
  uint64_t v17 = v0;
  if (qword_26B1D27C0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = sub_24EB3D2C0();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B1D27A8);
  swift_bridgeObjectRetain();
  MEMORY[0x2533495E0](v1);
  swift_bridgeObjectRetain();
  MEMORY[0x2533495E0](v1);
  uint64_t v3 = sub_24EB3D2A0();
  os_log_type_t v4 = sub_24EB3DD80();
  BOOL v5 = os_log_type_enabled(v3, v4);
  uint64_t v6 = *(void *)(v0 + 144);
  unint64_t v7 = *(void *)(v0 + 104);
  if (v5)
  {
    uint64_t v8 = *(void *)(v0 + 96);
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v16 = v10;
    *(_DWORD *)uint64_t v9 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 40) = sub_24EAC5098(v8, v7, &v16);
    sub_24EB3DDB0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v11 = sub_24EB3E040();
    *(void *)(v0 + 56) = sub_24EAC5098(v11, v12, &v16);
    sub_24EB3DDB0();
    swift_bridgeObjectRelease();
    MEMORY[0x2533495D0](v6);
    MEMORY[0x2533495D0](v6);
    _os_log_impl(&dword_24EAA5000, v3, v4, "[AwardDetailFeature] Failed to fetch earned state for %s with error %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533497D0](v10, -1, -1);
    MEMORY[0x2533497D0](v9, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    MEMORY[0x2533495D0](v6);
    MEMORY[0x2533495D0](v6);
  }

  *(unsigned char *)(v0 + 170) = 3;
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932840);
  *uint64_t v13 = v0;
  v13[1] = sub_24EAE1E14;
  return MEMORY[0x270F252C8](v0 + 170, v14);
}

uint64_t sub_24EAE2288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  sub_24EB3DD20();
  v3[6] = sub_24EB3DD10();
  uint64_t v5 = sub_24EB3DCF0();
  v3[7] = v5;
  v3[8] = v4;
  return MEMORY[0x270FA2498](sub_24EAE2324, v5, v4);
}

uint64_t sub_24EAE2324()
{
  uint64_t v13 = v0;
  if (qword_26B1D27C0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24EB3D2C0();
  __swift_project_value_buffer(v1, (uint64_t)qword_26B1D27A8);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_24EB3D2A0();
  os_log_type_t v3 = sub_24EB3DD80();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = *(void *)(v0 + 40);
  if (v4)
  {
    uint64_t v6 = *(void *)(v0 + 32);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v12 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 16) = sub_24EAC5098(v6, v5, &v12);
    sub_24EB3DDB0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24EAA5000, v2, v3, "[AwardDetailFeature] Sending .fetchEarnedState(%s) action for earnedLoadStateCleared", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533497D0](v8, -1, -1);
    MEMORY[0x2533497D0](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  *(unsigned char *)(v0 + 80) = 4;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932840);
  *uint64_t v9 = v0;
  v9[1] = sub_24EAE256C;
  return MEMORY[0x270F252C8](v0 + 80, v10);
}

uint64_t sub_24EAE256C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = *(void *)(v1 + 56);
  return MEMORY[0x270FA2498](sub_24EAE4218, v3, v2);
}

uint64_t sub_24EAE268C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[3] = a2;
  sub_24EB3DD20();
  v4[6] = sub_24EB3DD10();
  uint64_t v6 = sub_24EB3DCF0();
  v4[7] = v6;
  v4[8] = v5;
  return MEMORY[0x270FA2498](sub_24EAE2728, v6, v5);
}

uint64_t sub_24EAE2728()
{
  uint64_t v13 = v0;
  if (qword_26B1D27C0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24EB3D2C0();
  __swift_project_value_buffer(v1, (uint64_t)qword_26B1D27A8);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_24EB3D2A0();
  os_log_type_t v3 = sub_24EB3DD80();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[4];
  if (v4)
  {
    uint64_t v6 = v0[3];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v12 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    v0[2] = sub_24EAC5098(v6, v5, &v12);
    sub_24EB3DDB0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24EAA5000, v2, v3, "[AwardDetailFeature] Refreshing suggested workouts canvas for %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533497D0](v8, -1, -1);
    MEMORY[0x2533497D0](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v11 = (uint64_t (*)(void))(*(void *)(v0[5] + 16) + **(int **)(v0[5] + 16));
  uint64_t v9 = (void *)swift_task_alloc();
  v0[9] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_24EAE298C;
  return v11();
}

uint64_t sub_24EAE298C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = *(void *)(v2 + 56);
  if (v0) {
    unint64_t v5 = sub_24EAE2B2C;
  }
  else {
    unint64_t v5 = sub_24EAE2AC8;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_24EAE2AC8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24EAE2B2C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24EAE2B90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  sub_24EB3DD20();
  v3[6] = sub_24EB3DD10();
  uint64_t v5 = sub_24EB3DCF0();
  v3[7] = v5;
  v3[8] = v4;
  return MEMORY[0x270FA2498](sub_24EAE2C2C, v5, v4);
}

uint64_t sub_24EAE2C2C()
{
  uint64_t v13 = v0;
  if (qword_26B1D27C0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24EB3D2C0();
  __swift_project_value_buffer(v1, (uint64_t)qword_26B1D27A8);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_24EB3D2A0();
  os_log_type_t v3 = sub_24EB3DD80();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = *(void *)(v0 + 40);
  if (v4)
  {
    uint64_t v6 = *(void *)(v0 + 32);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v12 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 16) = sub_24EAC5098(v6, v5, &v12);
    sub_24EB3DDB0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24EAA5000, v2, v3, "[AwardDetailFeature] Sending .fetchEarnedState(%s) action on view appeared", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533497D0](v8, -1, -1);
    MEMORY[0x2533497D0](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  *(unsigned char *)(v0 + 80) = 4;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932840);
  *uint64_t v9 = v0;
  v9[1] = sub_24EAE256C;
  return MEMORY[0x270F252C8](v0 + 80, v10);
}

uint64_t AwardDetailFeature.dispose(localState:sharedState:)(uint64_t a1)
{
  uint64_t State = type metadata accessor for AwardEarnedLoadState();
  MEMORY[0x270FA5388](State);
  BOOL v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24EB3D1F0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1 + *(int *)(type metadata accessor for AwardDetailState() + 28);
  sub_24EAE3324(v9, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for AwardEarnedLoadState);
  if (swift_getEnumCaseMultiPayload()) {
    return sub_24EAD5D6C((uint64_t)v4);
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  type metadata accessor for AwardDetailFeature();
  char v11 = sub_24EB3D1D0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (v11)
  {
    sub_24EAD5D6C(v9);
    return swift_storeEnumTagMultiPayload();
  }
  return result;
}

uint64_t sub_24EAE3030(uint64_t a1, uint64_t a2)
{
  uint64_t State = type metadata accessor for AwardEarnedLoadState();
  MEMORY[0x270FA5388](State);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24EB3D1F0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a2 + *(int *)(type metadata accessor for AwardDetailState() + 28);
  sub_24EAE3324(v10, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for AwardEarnedLoadState);
  if (swift_getEnumCaseMultiPayload()) {
    return sub_24EAD5D6C((uint64_t)v5);
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
  char v12 = sub_24EB3D1D0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (v12)
  {
    sub_24EAD5D6C(v10);
    return swift_storeEnumTagMultiPayload();
  }
  return result;
}

uint64_t sub_24EAE31E8(uint64_t a1, uint64_t *a2, unint64_t *a3, char *a4)
{
  return AwardDetailFeature.reduce(localState:sharedState:sideEffects:action:)(a1, a2, a3, *a4);
}

unint64_t sub_24EAE31F0()
{
  unint64_t result = qword_2699327C8;
  if (!qword_2699327C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_2699327C8);
  }
  return result;
}

uint64_t sub_24EAE3244()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24EAE327C(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_24EAC68C4;
  return sub_24EAE2B90(a1, v5, v4);
}

uint64_t sub_24EAE3324(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24EAE338C()
{
  uint64_t v1 = (int *)(type metadata accessor for AwardDetailFeature() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v6 = v0 + v3 + v1[7];
  uint64_t v7 = sub_24EB3D1F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_24EAE3490(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AwardDetailFeature();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EAE34F4(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for AwardDetailFeature() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_24EAC5824;
  return sub_24EAE268C(a1, v5, v6, v7);
}

uint64_t sub_24EAE35DC(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_24EAC68C4;
  return sub_24EAE2288(a1, v5, v4);
}

uint64_t sub_24EAE3684()
{
  uint64_t v1 = (int *)(type metadata accessor for AwardDetailFeature() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v6 = v0 + v3;
  swift_release();
  swift_release();
  uint64_t v7 = v6 + v1[7];
  uint64_t v8 = sub_24EB3D1F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, v5, v4);
}

uint64_t sub_24EAE3798(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for AwardDetailFeature() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1 + v5;
  uint64_t v7 = (uint64_t *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_24EAC68C4;
  return sub_24EAE1738(a1, v6, v8, v9);
}

unint64_t sub_24EAE38B0()
{
  unint64_t result = qword_269932810;
  if (!qword_269932810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932810);
  }
  return result;
}

unint64_t sub_24EAE3908()
{
  unint64_t result = qword_269932818;
  if (!qword_269932818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932818);
  }
  return result;
}

unint64_t sub_24EAE3960()
{
  unint64_t result = qword_269932820;
  if (!qword_269932820)
  {
    type metadata accessor for AwardDetailState();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932820);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for AwardDetailFeature(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[3];
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(void *)(a1 + 24) = v6;
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = sub_24EB3D1F0();
    char v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_retain();
    swift_retain();
    v11(v8, v9, v10);
  }
  return a1;
}

uint64_t destroy for AwardDetailFeature(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_24EB3D1F0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for AwardDetailFeature(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_24EB3D1F0();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_retain();
  swift_retain();
  v9(v6, v7, v8);
  return a1;
}

void *assignWithCopy for AwardDetailFeature(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_retain();
  swift_release();
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_24EB3D1F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

_OWORD *initializeWithTake for AwardDetailFeature(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_24EB3D1F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

_OWORD *assignWithTake for AwardDetailFeature(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24EB3D1F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for AwardDetailFeature(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EAE3DDC);
}

uint64_t sub_24EAE3DDC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_24EB3D1F0();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for AwardDetailFeature(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EAE3EA0);
}

void *sub_24EAE3EA0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_24EB3D1F0();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_24EAE3F48()
{
  uint64_t result = sub_24EB3D1F0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24EAE3FE4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 3u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for AwardDetailFeature.TaskIdentifier(uint64_t a1)
{
  return sub_24EAE400C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_24EAE400C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 3u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s13FitnessAwards18AwardDetailFeatureV14TaskIdentifierOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_24EAE3FE4(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for AwardDetailFeature.TaskIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_24EAE3FE4(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_24EAE400C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for AwardDetailFeature.TaskIdentifier(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_24EAE400C(v4, v5, v6);
  return a1;
}

uint64_t sub_24EAE4110(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AwardDetailFeature.TaskIdentifier()
{
  return &type metadata for AwardDetailFeature.TaskIdentifier;
}

unint64_t sub_24EAE412C()
{
  unint64_t result = qword_269932838;
  if (!qword_269932838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932838);
  }
  return result;
}

uint64_t sub_24EAE4180(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  switch(a3)
  {
    case 1:
      if (a6 != 1) {
        return 0;
      }
      goto LABEL_5;
    case 2:
      if (a6 == 2) {
        goto LABEL_5;
      }
      return 0;
    case 3:
      if (a6 == 3) {
        goto LABEL_5;
      }
      return 0;
    default:
      if (a6) {
        return 0;
      }
LABEL_5:
      if (a1 == a4 && a2 == a5) {
        return 1;
      }
      else {
        return sub_24EB3E010();
      }
  }
}

uint64_t sub_24EAE4220()
{
  return sub_24EB3E0D0();
}

uint64_t sub_24EAE4280()
{
  sub_24EB3E0A0();
  return sub_24EB3DCA0();
}

uint64_t sub_24EAE42D4()
{
  return sub_24EB3E0D0();
}

uint64_t sub_24EAE4330(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_24EB3E010();
  }
}

__n128 AchievementEnvironmentCacheMonitorFeature.init(environment:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t AchievementEnvironmentCacheMonitorFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, unint64_t *a2, unint64_t *a3, unsigned char *a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FE8);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t State = type metadata accessor for AwardToastLoadState();
  uint64_t v13 = MEMORY[0x270FA5388](State);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v82 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v20 = (char *)&v82 - v19;
  if (*a4)
  {
    uint64_t v22 = *v4;
    uint64_t v21 = v4[1];
    uint64_t v23 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26B1D30A0);
    uint64_t v24 = &v11[v23[16]];
    uint64_t v25 = &v11[v23[20]];
    uint64_t v26 = &v11[v23[24]];
    v88[0] = 0x726F74696E6F6DLL;
    v88[1] = 0xE700000000000000;
    sub_24EAE585C();
    sub_24EB3DDE0();
    sub_24EB3DD30();
    uint64_t v27 = *MEMORY[0x263F39580];
    uint64_t v28 = sub_24EB3DB90();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 104))(v24, v27, v28);
    uint64_t v29 = *MEMORY[0x263F39570];
    uint64_t v30 = sub_24EB3DB80();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 104))(v25, v29, v30);
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = v22;
    *(void *)(v31 + 24) = v21;
    *(void *)uint64_t v26 = &unk_269932850;
    *((void *)v26 + 1) = v31;
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F39530], v8);
    unint64_t v32 = *a3;
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v32 = sub_24EAC4F10(0, *(void *)(v32 + 16) + 1, 1, v32);
    }
    unint64_t v34 = *(void *)(v32 + 16);
    unint64_t v33 = *(void *)(v32 + 24);
    if (v34 >= v33 >> 1) {
      unint64_t v32 = sub_24EAC4F10(v33 > 1, v34 + 1, 1, v32);
    }
    *(void *)(v32 + 16) = v34 + 1;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v9 + 32))(v32+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v34, v11, v8);
    *a3 = v32;
  }
  else
  {
    uint64_t v82 = v18;
    uint64_t v84 = v17;
    uint64_t v36 = qword_26B1D27C0;
    swift_bridgeObjectRetain();
    if (v36 != -1) {
      swift_once();
    }
    uint64_t v37 = sub_24EB3D2C0();
    uint64_t v38 = __swift_project_value_buffer(v37, (uint64_t)qword_26B1D27A8);
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_24EB3D2A0();
    os_log_type_t v40 = sub_24EB3DD80();
    BOOL v41 = os_log_type_enabled(v39, v40);
    uint64_t v85 = v20;
    uint64_t v86 = (unint64_t *)v38;
    uint64_t v83 = v16;
    if (v41)
    {
      uint64_t v42 = (uint8_t *)swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      v88[0] = v43;
      *(_DWORD *)uint64_t v42 = 136315138;
      type metadata accessor for AwardEarnedLoadState();
      swift_bridgeObjectRetain();
      uint64_t v44 = sub_24EB3DBC0();
      unint64_t v46 = v45;
      swift_bridgeObjectRelease();
      uint64_t v87 = sub_24EAC5098(v44, v46, v88);
      sub_24EB3DDB0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24EAA5000, v39, v40, "[AchievementEnvironmentCacheMonitor] Clearing previous earned load states %s", v42, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533497D0](v43, -1, -1);
      MEMORY[0x2533497D0](v42, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRetain_n();
    uint64_t v47 = sub_24EB3D2A0();
    os_log_type_t v48 = sub_24EB3DD80();
    if (os_log_type_enabled(v47, v48))
    {
      unint64_t v49 = (uint8_t *)swift_slowAlloc();
      uint64_t v50 = swift_slowAlloc();
      v88[0] = v50;
      *(_DWORD *)unint64_t v49 = 136315138;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_269932260);
      uint64_t v51 = sub_24EB3DBC0();
      unint64_t v53 = v52;
      swift_bridgeObjectRelease();
      uint64_t v87 = sub_24EAC5098(v51, v53, v88);
      sub_24EB3DDB0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24EAA5000, v47, v48, "[AchievementEnvironmentCacheMonitor] Clearing previous image load states %s", v49, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533497D0](v50, -1, -1);
      MEMORY[0x2533497D0](v49, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRetain_n();
    uint64_t v54 = sub_24EB3D2A0();
    os_log_type_t v55 = sub_24EB3DD80();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = (uint8_t *)swift_slowAlloc();
      uint64_t v57 = swift_slowAlloc();
      v88[0] = v57;
      *(_DWORD *)uint64_t v56 = 136315138;
      type metadata accessor for AwardProgressLoadState();
      swift_bridgeObjectRetain();
      uint64_t v58 = sub_24EB3DBC0();
      unint64_t v60 = v59;
      swift_bridgeObjectRelease();
      uint64_t v87 = sub_24EAC5098(v58, v60, v88);
      sub_24EB3DDB0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24EAA5000, v54, v55, "[AchievementEnvironmentCacheMonitor] Clearing previous progress load states %s", v56, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533497D0](v57, -1, -1);
      MEMORY[0x2533497D0](v56, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRetain_n();
    uint64_t v61 = sub_24EB3D2A0();
    os_log_type_t v62 = sub_24EB3DD80();
    if (os_log_type_enabled(v61, v62))
    {
      uint64_t v63 = (uint8_t *)swift_slowAlloc();
      uint64_t v64 = swift_slowAlloc();
      v88[0] = v64;
      *(_DWORD *)uint64_t v63 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v65 = sub_24EB3DBC0();
      unint64_t v67 = v66;
      swift_bridgeObjectRelease();
      uint64_t v87 = sub_24EAC5098(v65, v67, v88);
      sub_24EB3DDB0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24EAA5000, v61, v62, "[AchievementEnvironmentCacheMonitor] Clearing previous suggested workout load states %s", v63, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533497D0](v64, -1, -1);
      MEMORY[0x2533497D0](v63, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v68 = (uint64_t)v85;
    uint64_t v69 = (uint64_t)v83;
    uint64_t v70 = (uint64_t)a2 + *(int *)(type metadata accessor for AchievementEnvironmentCacheMonitorState() + 32);
    sub_24EACF1D0(v70, v68);
    sub_24EACF1D0(v68, v69);
    uint64_t v71 = sub_24EB3D2A0();
    os_log_type_t v72 = sub_24EB3DD80();
    if (os_log_type_enabled(v71, v72))
    {
      uint64_t v86 = a2;
      unint64_t v73 = (uint8_t *)swift_slowAlloc();
      uint64_t v74 = swift_slowAlloc();
      v88[0] = v74;
      *(_DWORD *)unint64_t v73 = 136315138;
      sub_24EACF1D0(v69, v82);
      uint64_t v75 = sub_24EB3DC80();
      uint64_t v87 = sub_24EAC5098(v75, v76, v88);
      uint64_t v68 = (uint64_t)v85;
      a2 = v86;
      sub_24EB3DDB0();
      swift_bridgeObjectRelease();
      sub_24EACF234(v69);
      _os_log_impl(&dword_24EAA5000, v71, v72, "[AchievementEnvironmentCacheMonitor] Clearing previous toast load state %s", v73, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533497D0](v74, -1, -1);
      MEMORY[0x2533497D0](v73, -1, -1);
    }
    else
    {
      sub_24EACF234(v69);
    }

    uint64_t v77 = MEMORY[0x263F8EE78];
    unint64_t v78 = sub_24EACE0E4(MEMORY[0x263F8EE78]);
    swift_bridgeObjectRelease();
    *a2 = v78;
    unint64_t v79 = sub_24EACE120(v77);
    swift_bridgeObjectRelease();
    a2[1] = v79;
    unint64_t v80 = sub_24EACE23C(v77);
    swift_bridgeObjectRelease();
    a2[2] = v80;
    unint64_t v81 = sub_24EACE468(v77);
    sub_24EACF234(v68);
    swift_bridgeObjectRelease();
    a2[3] = v81;
    sub_24EACF234(v70);
    return swift_storeEnumTagMultiPayload();
  }
  return result;
}

uint64_t sub_24EAE4E70(uint64_t a1, int *a2)
{
  v2[12] = a1;
  v2[13] = sub_24EB3DD20();
  v2[14] = sub_24EB3DD10();
  unsigned __int8 v6 = (uint64_t (*)(void *))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  v2[15] = v4;
  void *v4 = v2;
  v4[1] = sub_24EAE4F78;
  return v6(v2 + 7);
}

uint64_t sub_24EAE4F78()
{
  uint64_t v2 = (void *)*v1;
  v2[16] = v0;
  swift_task_dealloc();
  uint64_t v4 = sub_24EB3DCF0();
  v2[17] = v4;
  v2[18] = v3;
  if (v0) {
    uint64_t v5 = sub_24EACF030;
  }
  else {
    uint64_t v5 = sub_24EAE50D8;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_24EAE50D8()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = __swift_project_boxed_opaque_existential_1(v0 + 7, v1);
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t v4 = swift_task_alloc();
  (*(void (**)(uint64_t, void *, uint64_t))(v3 + 16))(v4, v2, v1);
  v0[5] = swift_getAssociatedTypeWitness();
  v0[6] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1(v0 + 2);
  sub_24EB3DD50();
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 7));
  uint64_t v5 = sub_24EB3DD10();
  v0[19] = v5;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 2), v0[5]);
  unsigned __int8 v6 = (void *)swift_task_alloc();
  v0[20] = (uint64_t)v6;
  *unsigned __int8 v6 = v0;
  v6[1] = sub_24EAE52C8;
  uint64_t v7 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1E88](v0 + 22, v5, v7);
}

uint64_t sub_24EAE52C8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 144);
  uint64_t v3 = *(void *)(v1 + 136);
  return MEMORY[0x270FA2498](sub_24EAE540C, v3, v2);
}

uint64_t sub_24EAE540C()
{
  uint64_t v13 = v0;
  if (*(unsigned char *)(v0 + 176) == 1)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    if (qword_26B1D27C0 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_24EB3D2C0();
    __swift_project_value_buffer(v3, (uint64_t)qword_26B1D27A8);
    uint64_t v4 = sub_24EB3D2A0();
    os_log_type_t v5 = sub_24EB3DD80();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = swift_slowAlloc();
      uint64_t v7 = swift_slowAlloc();
      uint64_t v12 = v7;
      *(_DWORD *)uint64_t v6 = 136315138;
      uint64_t v8 = sub_24EB3DC80();
      *(void *)(v6 + 4) = sub_24EAC5098(v8, v9, &v12);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24EAA5000, v4, v5, "[AchievementEnvironmentCacheMonitor] Received updated achievement environment cache (%s) - clearing cached awards data.", (uint8_t *)v6, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533497D0](v7, -1, -1);
      MEMORY[0x2533497D0](v6, -1, -1);
    }

    *(unsigned char *)(v0 + 177) = 0;
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v10;
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932858);
    *uint64_t v10 = v0;
    v10[1] = sub_24EAE5648;
    return MEMORY[0x270F252C8](v0 + 177, v11);
  }
}

uint64_t sub_24EAE5648()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 144);
  uint64_t v3 = *(void *)(v1 + 136);
  return MEMORY[0x270FA2498](sub_24EAE5768, v3, v2);
}

uint64_t sub_24EAE5768()
{
  uint64_t v1 = sub_24EB3DD10();
  v0[19] = v1;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 2), v0[5]);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[20] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = sub_24EAE52C8;
  uint64_t v3 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1E88](v0 + 22, v1, v3);
}

unint64_t sub_24EAE585C()
{
  unint64_t result = qword_26B1D2D38;
  if (!qword_26B1D2D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2D38);
  }
  return result;
}

uint64_t sub_24EAE58B0()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24EAE58E8(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24EAC5824;
  return sub_24EAE4E70(a1, v4);
}

unint64_t sub_24EAE5994()
{
  unint64_t result = qword_26B1D2D30;
  if (!qword_26B1D2D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2D30);
  }
  return result;
}

unint64_t sub_24EAE59EC()
{
  unint64_t result = qword_26B1D2D28;
  if (!qword_26B1D2D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2D28);
  }
  return result;
}

unint64_t sub_24EAE5A44()
{
  unint64_t result = qword_26B1D2CD0;
  if (!qword_26B1D2CD0)
  {
    type metadata accessor for AchievementEnvironmentCacheMonitorState();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2CD0);
  }
  return result;
}

ValueMetadata *type metadata accessor for AchievementEnvironmentCacheMonitorFeature()
{
  return &type metadata for AchievementEnvironmentCacheMonitorFeature;
}

void *initializeBufferWithCopyOfBuffer for AchievementEnvironmentCacheMonitorFeature.TaskIdentifier(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for AwardCanvasPlaceholder()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for AchievementEnvironmentCacheMonitorFeature.TaskIdentifier(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for AchievementEnvironmentCacheMonitorFeature.TaskIdentifier(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AchievementEnvironmentCacheMonitorFeature.TaskIdentifier(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AchievementEnvironmentCacheMonitorFeature.TaskIdentifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AchievementEnvironmentCacheMonitorFeature.TaskIdentifier()
{
  return &type metadata for AchievementEnvironmentCacheMonitorFeature.TaskIdentifier;
}

unint64_t sub_24EAE5BF4()
{
  unint64_t result = qword_26B1D2D40;
  if (!qword_26B1D2D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2D40);
  }
  return result;
}

BOOL static AwardsError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t AwardsError.hash(into:)()
{
  return sub_24EB3E0A0();
}

uint64_t AwardsError.hashValue.getter()
{
  return sub_24EB3E0D0();
}

unint64_t sub_24EAE5CD8()
{
  unint64_t result = qword_269932860;
  if (!qword_269932860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932860);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AwardsError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EAE5E08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardsError()
{
  return &type metadata for AwardsError;
}

uint64_t static AwardSuggestedWorkoutsLoadState.== infix(_:_:)(uint64_t a1, unint64_t a2)
{
  if (!a1) {
    return !a2;
  }
  if (a1 == 1) {
    return a2 == 1;
  }
  if (a2 < 2) {
    return 0;
  }
  return sub_24EAE5E7C(a1, a2);
}

uint64_t sub_24EAE5E7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2) {
      return 1;
    }
    int v3 = (uint64_t *)(a2 + 64);
    for (i = (uint64_t *)(a1 + 64); ; i += 5)
    {
      uint64_t v6 = *(i - 2);
      uint64_t v5 = *(i - 1);
      uint64_t v7 = *i;
      uint64_t v9 = *(v3 - 2);
      uint64_t v8 = *(v3 - 1);
      uint64_t v14 = *v3;
      BOOL v10 = *(i - 4) == *(v3 - 4) && *(i - 3) == *(v3 - 3);
      if (!v10 && (sub_24EB3E010() & 1) == 0) {
        break;
      }
      BOOL v11 = v6 == v9 && v5 == v8;
      if (!v11 && (sub_24EB3E010() & 1) == 0) {
        break;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v12 = sub_24EAE5FDC(v7, v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0) {
        break;
      }
      v3 += 5;
      if (!--v2) {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_24EAE5FDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v5 = 0;
    while (1)
    {
      uint64_t v7 = *(unsigned __int8 *)(a1 + v5 + 48);
      double v8 = *(double *)(a1 + v5 + 56);
      char v9 = *(unsigned char *)(a1 + v5 + 64);
      uint64_t v10 = *(unsigned __int8 *)(a2 + v5 + 48);
      double v11 = *(double *)(a2 + v5 + 56);
      int v12 = *(unsigned __int8 *)(a2 + v5 + 64);
      BOOL v13 = *(void *)(a1 + v5 + 32) == *(void *)(a2 + v5 + 32)
         && *(void *)(a1 + v5 + 40) == *(void *)(a2 + v5 + 40);
      if (!v13 && (sub_24EB3E010() & 1) == 0) {
        return 0;
      }
      unint64_t v14 = 0x800000024EB4A150;
      unint64_t v15 = 0xD000000000000013;
      switch(v7)
      {
        case 1:
          unint64_t v15 = 0x6169726F74696465;
          unint64_t v14 = 0xED0000647261436CLL;
          break;
        case 2:
          break;
        case 3:
          unint64_t v14 = 0xE800000000000000;
          unint64_t v15 = 0x7974696C61646F6DLL;
          break;
        case 4:
          unint64_t v14 = 0xE800000000000000;
          unint64_t v15 = 0x7473696C79616C70;
          break;
        case 5:
          unint64_t v14 = 0xE700000000000000;
          unint64_t v15 = 0x6D6172676F7270;
          break;
        case 6:
          unint64_t v14 = 0xE300000000000000;
          unint64_t v15 = 7367028;
          break;
        case 7:
          unint64_t v14 = 0xE700000000000000;
          unint64_t v15 = 0x72656E69617274;
          break;
        case 8:
          unint64_t v14 = 0xE700000000000000;
          unint64_t v15 = 0x74756F6B726F77;
          break;
        default:
          unint64_t v14 = 0xE500000000000000;
          unint64_t v15 = 0x6472617761;
          break;
      }
      unint64_t v16 = 0x800000024EB4A150;
      unint64_t v17 = 0xD000000000000013;
      switch(v10)
      {
        case 1:
          unint64_t v16 = 0xED0000647261436CLL;
          if (v15 == 0x6169726F74696465) {
            goto LABEL_39;
          }
          goto LABEL_42;
        case 2:
          goto LABEL_38;
        case 3:
          unint64_t v16 = 0xE800000000000000;
          if (v15 != 0x7974696C61646F6DLL) {
            goto LABEL_42;
          }
          goto LABEL_39;
        case 4:
          unint64_t v16 = 0xE800000000000000;
          if (v15 != 0x7473696C79616C70) {
            goto LABEL_42;
          }
          goto LABEL_39;
        case 5:
          unint64_t v16 = 0xE700000000000000;
          if (v15 != 0x6D6172676F7270) {
            goto LABEL_42;
          }
          goto LABEL_39;
        case 6:
          unint64_t v16 = 0xE300000000000000;
          if (v15 != 7367028) {
            goto LABEL_42;
          }
          goto LABEL_39;
        case 7:
          unint64_t v16 = 0xE700000000000000;
          unint64_t v17 = 0x72656E69617274;
LABEL_38:
          if (v15 == v17) {
            goto LABEL_39;
          }
          goto LABEL_42;
        case 8:
          unint64_t v16 = 0xE700000000000000;
          if (v15 != 0x74756F6B726F77) {
            goto LABEL_42;
          }
          goto LABEL_39;
        default:
          unint64_t v16 = 0xE500000000000000;
          if (v15 != 0x6472617761) {
            goto LABEL_42;
          }
LABEL_39:
          if (v14 == v16)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
LABEL_42:
            char v18 = sub_24EB3E010();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v18 & 1) == 0) {
              return 0;
            }
          }
          if (v9)
          {
            if (!v12) {
              return 0;
            }
          }
          else
          {
            if (v8 == v11) {
              char v6 = v12;
            }
            else {
              char v6 = 1;
            }
            if (v6) {
              return 0;
            }
          }
          v5 += 40;
          if (!--v2) {
            return 1;
          }
          break;
      }
    }
  }
  return 1;
}

uint64_t sub_24EAE6364(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_24EB3E010(), uint64_t result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    char v9 = a2 + 7;
    for (i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_24EB3E010() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_24EAE642C(char a1)
{
  return *(void *)&aIdle_6[8 * a1];
}

uint64_t sub_24EAE644C()
{
  return sub_24EAE642C(*v0);
}

uint64_t sub_24EAE6454(uint64_t a1)
{
  unint64_t v2 = sub_24EAE6A64();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAE6490(uint64_t a1)
{
  unint64_t v2 = sub_24EAE6A64();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EAE64D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EAE7430(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24EAE64FC(uint64_t a1)
{
  unint64_t v2 = sub_24EAE6AB8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAE6538(uint64_t a1)
{
  unint64_t v2 = sub_24EAE6AB8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EAE6574(uint64_t a1)
{
  unint64_t v2 = sub_24EAE6B0C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAE65B0(uint64_t a1)
{
  unint64_t v2 = sub_24EAE6B0C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EAE65EC(uint64_t a1)
{
  unint64_t v2 = sub_24EAE6B60();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAE6628(uint64_t a1)
{
  unint64_t v2 = sub_24EAE6B60();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AwardSuggestedWorkoutsLoadState.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v26 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932868);
  uint64_t v24 = *(void *)(v3 - 8);
  uint64_t v25 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v23 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932870);
  uint64_t v21 = *(void *)(v5 - 8);
  uint64_t v22 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932878);
  uint64_t v20 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932880);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  unint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EAE6A64();
  uint64_t v15 = v26;
  sub_24EB3E0F0();
  if (!v15)
  {
    char v28 = 0;
    sub_24EAE6B60();
    sub_24EB3DF70();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  if (v15 == 1)
  {
    char v29 = 1;
    sub_24EAE6B0C();
    sub_24EB3DF70();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v22);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  char v30 = 2;
  sub_24EAE6AB8();
  unint64_t v17 = v23;
  sub_24EB3DF70();
  uint64_t v27 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269932898);
  sub_24EAE8294(&qword_2699328A0, (void (*)(void))sub_24EAB3698);
  uint64_t v18 = v25;
  sub_24EB3DFF0();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v18);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

unint64_t sub_24EAE6A64()
{
  unint64_t result = qword_269932888;
  if (!qword_269932888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932888);
  }
  return result;
}

unint64_t sub_24EAE6AB8()
{
  unint64_t result = qword_269932890;
  if (!qword_269932890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932890);
  }
  return result;
}

unint64_t sub_24EAE6B0C()
{
  unint64_t result = qword_2699328A8;
  if (!qword_2699328A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699328A8);
  }
  return result;
}

unint64_t sub_24EAE6B60()
{
  unint64_t result = qword_2699328B0;
  if (!qword_2699328B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699328B0);
  }
  return result;
}

uint64_t AwardSuggestedWorkoutsLoadState.init(from:)(void *a1)
{
  return sub_24EAE74E8(a1);
}

uint64_t sub_24EAE6BCC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_24EAE74E8(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_24EAE6BF8(void *a1)
{
  return AwardSuggestedWorkoutsLoadState.encode(to:)(a1, *v1);
}

uint64_t AwardSuggestedWorkoutsLoadState.hash(into:)(uint64_t a1, uint64_t a2)
{
  if (!a2 || a2 == 1) {
    return sub_24EB3E0A0();
  }
  sub_24EB3E0A0();
  return sub_24EAE715C(a1, a2);
}

uint64_t AwardSuggestedWorkoutsLoadState.hashValue.getter(unint64_t a1)
{
  sub_24EB3E090();
  sub_24EB3E0A0();
  if (a1 > 1) {
    sub_24EAE715C((uint64_t)v3, a1);
  }
  return sub_24EB3E0D0();
}

uint64_t sub_24EAE6CF4()
{
  unint64_t v1 = *v0;
  sub_24EB3E090();
  sub_24EB3E0A0();
  if (v1 > 1) {
    sub_24EAE715C((uint64_t)v3, v1);
  }
  return sub_24EB3E0D0();
}

uint64_t sub_24EAE6D68(uint64_t a1)
{
  uint64_t v3 = *v1;
  if (!*v1 || v3 == 1) {
    return sub_24EB3E0A0();
  }
  sub_24EB3E0A0();
  return sub_24EAE715C(a1, v3);
}

uint64_t sub_24EAE6DE8()
{
  unint64_t v1 = *v0;
  sub_24EB3E090();
  sub_24EB3E0A0();
  if (v1 > 1) {
    sub_24EAE715C((uint64_t)v3, v1);
  }
  return sub_24EB3E0D0();
}

uint64_t sub_24EAE6E58(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = *a2;
  if (!v2) {
    return !v3;
  }
  if (v2 == 1) {
    return v3 == 1;
  }
  if (v3 < 2) {
    return 0;
  }
  return sub_24EAE5E7C(v2, v3);
}

uint64_t sub_24EAE6E98(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000013;
  unint64_t v3 = 0x800000024EB4A150;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000013;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xED0000647261436CLL;
      unint64_t v5 = 0x6169726F74696465;
      break;
    case 2:
      break;
    case 3:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x7974696C61646F6DLL;
      break;
    case 4:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x7473696C79616C70;
      break;
    case 5:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x6D6172676F7270;
      break;
    case 6:
      unint64_t v3 = 0xE300000000000000;
      unint64_t v5 = 7367028;
      break;
    case 7:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x72656E69617274;
      break;
    case 8:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x74756F6B726F77;
      break;
    default:
      unint64_t v3 = 0xE500000000000000;
      unint64_t v5 = 0x6472617761;
      break;
  }
  unint64_t v6 = 0x800000024EB4A150;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xED0000647261436CLL;
      if (v5 == 0x6169726F74696465) {
        goto LABEL_25;
      }
      goto LABEL_28;
    case 2:
      goto LABEL_24;
    case 3:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x7974696C61646F6DLL) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 4:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x7473696C79616C70) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 5:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x6D6172676F7270) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 6:
      unint64_t v6 = 0xE300000000000000;
      if (v5 != 7367028) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 7:
      unint64_t v6 = 0xE700000000000000;
      unint64_t v2 = 0x72656E69617274;
LABEL_24:
      if (v5 == v2) {
        goto LABEL_25;
      }
      goto LABEL_28;
    case 8:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x74756F6B726F77) {
        goto LABEL_28;
      }
      goto LABEL_25;
    default:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x6472617761) {
        goto LABEL_28;
      }
LABEL_25:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_28:
      }
        char v7 = sub_24EB3E010();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_24EAE715C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t result = sub_24EB3E0A0();
  if (v4)
  {
    unint64_t v6 = (uint64_t *)(a2 + 64);
    do
    {
      uint64_t v7 = *v6;
      v6 += 5;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_24EB3DCA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24EB3DCA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24EAE7244(a1, v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease_n();
      --v4;
    }
    while (v4);
  }
  return result;
}

uint64_t sub_24EAE7244(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_24EB3E0A0();
  if (v3)
  {
    unint64_t v5 = (unsigned __int8 *)(a2 + 64);
    do
    {
      int v6 = *v5;
      swift_bridgeObjectRetain();
      sub_24EB3DCA0();
      sub_24EB3DCA0();
      swift_bridgeObjectRelease();
      sub_24EB3E0B0();
      if (!v6) {
        sub_24EB3E0C0();
      }
      uint64_t result = swift_bridgeObjectRelease();
      v5 += 40;
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_24EAE7430(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x7470697263736564 && a2 == 0xEB0000000073726FLL)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_24EAE74C8()
{
  return 0x7470697263736564;
}

uint64_t sub_24EAE74E8(void *a1)
{
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932910);
  uint64_t v28 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  char v29 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932918);
  uint64_t v27 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  char v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932920);
  uint64_t v24 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932928);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  char v30 = a1;
  uint64_t v13 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, v12);
  sub_24EAE6A64();
  uint64_t v14 = v31;
  sub_24EB3E0E0();
  if (!v14)
  {
    uint64_t v31 = v5;
    uint64_t v15 = v29;
    uint64_t v16 = sub_24EB3DF60();
    if (*(void *)(v16 + 16) == 1)
    {
      if (*(unsigned char *)(v16 + 32))
      {
        if (*(unsigned char *)(v16 + 32) == 1)
        {
          char v34 = 1;
          sub_24EAE6B0C();
          sub_24EB3DEC0();
          (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v25);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
          uint64_t v13 = 1;
        }
        else
        {
          char v35 = 2;
          sub_24EAE6AB8();
          sub_24EB3DEC0();
          __swift_instantiateConcreteTypeFromMangledName(&qword_269932898);
          sub_24EAE8294(&qword_269932930, (void (*)(void))sub_24EAB4B50);
          uint64_t v21 = v15;
          uint64_t v22 = v26;
          sub_24EB3DF50();
          (*(void (**)(char *, uint64_t))(v28 + 8))(v21, v22);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
          uint64_t v13 = v32;
        }
      }
      else
      {
        char v33 = 0;
        sub_24EAE6B60();
        sub_24EB3DEC0();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v31);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        uint64_t v13 = 0;
      }
    }
    else
    {
      uint64_t v17 = sub_24EB3DE40();
      swift_allocError();
      uint64_t v19 = v18;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269931DD8);
      *uint64_t v19 = &type metadata for AwardSuggestedWorkoutsLoadState;
      uint64_t v13 = (uint64_t)v11;
      sub_24EB3DED0();
      sub_24EB3DE30();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v17 - 8) + 104))(v19, *MEMORY[0x263F8DCB0], v17);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  return v13;
}

unint64_t sub_24EAE7A94()
{
  unint64_t result = qword_2699328B8;
  if (!qword_2699328B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699328B8);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for AwardSuggestedWorkoutsLoadState(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    uint64_t v3 = swift_bridgeObjectRetain();
  }
  *a1 = v3;
  return a1;
}

unint64_t destroy for AwardSuggestedWorkoutsLoadState(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t *assignWithCopy for AwardSuggestedWorkoutsLoadState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    *a1 = v4;
    if (v4 >= 0xFFFFFFFF) {
      swift_bridgeObjectRetain();
    }
  }
  else if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    *a1 = *a2;
  }
  else
  {
    *a1 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

unint64_t *assignWithTake for AwardSuggestedWorkoutsLoadState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if (*a1 < 0xFFFFFFFF) {
    goto LABEL_5;
  }
  if (v3 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AwardSuggestedWorkoutsLoadState(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AwardSuggestedWorkoutsLoadState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_24EAE7CE4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_24EAE7CFC(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for AwardSuggestedWorkoutsLoadState()
{
  return &type metadata for AwardSuggestedWorkoutsLoadState;
}

unsigned char *storeEnumTagSinglePayload for AwardSuggestedWorkoutsLoadState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EAE7DF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardSuggestedWorkoutsLoadState.CodingKeys()
{
  return &type metadata for AwardSuggestedWorkoutsLoadState.CodingKeys;
}

ValueMetadata *type metadata accessor for AwardSuggestedWorkoutsLoadState.IdleCodingKeys()
{
  return &type metadata for AwardSuggestedWorkoutsLoadState.IdleCodingKeys;
}

ValueMetadata *type metadata accessor for AwardSuggestedWorkoutsLoadState.FetchingCodingKeys()
{
  return &type metadata for AwardSuggestedWorkoutsLoadState.FetchingCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for AwardSuggestedWorkoutsLoadState.FetchedCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24EAE7EECLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardSuggestedWorkoutsLoadState.FetchedCodingKeys()
{
  return &type metadata for AwardSuggestedWorkoutsLoadState.FetchedCodingKeys;
}

unint64_t sub_24EAE7F28()
{
  unint64_t result = qword_2699328C0;
  if (!qword_2699328C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699328C0);
  }
  return result;
}

unint64_t sub_24EAE7F80()
{
  unint64_t result = qword_2699328C8;
  if (!qword_2699328C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699328C8);
  }
  return result;
}

unint64_t sub_24EAE7FD8()
{
  unint64_t result = qword_2699328D0;
  if (!qword_2699328D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699328D0);
  }
  return result;
}

unint64_t sub_24EAE8030()
{
  unint64_t result = qword_2699328D8;
  if (!qword_2699328D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699328D8);
  }
  return result;
}

unint64_t sub_24EAE8088()
{
  unint64_t result = qword_2699328E0;
  if (!qword_2699328E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699328E0);
  }
  return result;
}

unint64_t sub_24EAE80E0()
{
  unint64_t result = qword_2699328E8;
  if (!qword_2699328E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699328E8);
  }
  return result;
}

unint64_t sub_24EAE8138()
{
  unint64_t result = qword_2699328F0;
  if (!qword_2699328F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699328F0);
  }
  return result;
}

unint64_t sub_24EAE8190()
{
  unint64_t result = qword_2699328F8;
  if (!qword_2699328F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699328F8);
  }
  return result;
}

unint64_t sub_24EAE81E8()
{
  unint64_t result = qword_269932900;
  if (!qword_269932900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932900);
  }
  return result;
}

unint64_t sub_24EAE8240()
{
  unint64_t result = qword_269932908;
  if (!qword_269932908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932908);
  }
  return result;
}

uint64_t sub_24EAE8294(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269932898);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t AwardImageView.init(store:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(void *)a3 = sub_24EAACDA8;
  *(void *)(a3 + 8) = result;
  *(unsigned char *)(a3 + 16) = 0;
  return result;
}

uint64_t sub_24EAE8368()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t AwardImageView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v36 = a1;
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2A48);
  MEMORY[0x270FA5388](v37);
  int v3 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FA8);
  MEMORY[0x270FA5388](v4 - 8);
  unsigned int v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2DB8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2F80);
  uint64_t v35 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  char v33 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *v1;
  uint64_t v13 = v1[1];
  char v14 = *((unsigned char *)v1 + 16);
  sub_24EAE88F4((uint64_t)v6);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v12;
  *(void *)(v15 + 24) = v13;
  *(unsigned char *)(v15 + 32) = v14;
  sub_24EAB1D9C((uint64_t)v6, (uint64_t)v9, &qword_26B1D2FA8);
  uint64_t v34 = v7;
  uint64_t v16 = (uint64_t (**)())&v9[*(int *)(v7 + 36)];
  *uint64_t v16 = sub_24EAE9698;
  v16[1] = (uint64_t (*)())v15;
  void v16[2] = 0;
  v16[3] = 0;
  sub_24EAB0AB0();
  sub_24EAB1E00((uint64_t)v6, &qword_26B1D2FA8);
  sub_24EAB0AB0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3010);
  sub_24EAE96A4();
  sub_24EB3D350();
  sub_24EAB0A90();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  uint64_t v17 = v40;
  sub_24EAB0AB0();
  sub_24EB3D350();
  sub_24EAB0A90();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  if (*(void *)(v17 + 16))
  {
    uint64_t v18 = (uint64_t)v3;
    unint64_t v19 = sub_24EAE9F58(v38, v39);
    if (v20)
    {
      unint64_t v21 = v19;
      uint64_t v32 = v10;
      uint64_t v22 = *(void *)(v17 + 56);
      uint64_t State = type metadata accessor for AwardImageLoadState();
      uint64_t v24 = *(void *)(State - 8);
      uint64_t v25 = v22 + *(void *)(v24 + 72) * v21;
      uint64_t v10 = v32;
      sub_24EAEA318(v25, v18);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v24 + 56))(v18, 0, 1, State);
    }
    else
    {
      uint64_t v27 = type metadata accessor for AwardImageLoadState();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v3, 1, 1, v27);
    }
  }
  else
  {
    uint64_t v26 = type metadata accessor for AwardImageLoadState();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v3, 1, 1, v26);
    uint64_t v18 = (uint64_t)v3;
  }
  swift_bridgeObjectRelease();
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = v12;
  *(void *)(v28 + 24) = v13;
  *(unsigned char *)(v28 + 32) = v14;
  sub_24EAB0AB0();
  sub_24EAEA018();
  sub_24EAEA254(&qword_26B1D2A58, &qword_26B1D2A48, (void (*)(void))sub_24EAEA2C0);
  char v29 = v33;
  sub_24EB3D900();
  swift_release();
  sub_24EAB1E00(v18, &qword_26B1D2A48);
  sub_24EAB1E00((uint64_t)v9, &qword_26B1D2DB8);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v35 + 32))(v36, v29, v10);
}

uint64_t sub_24EAE88F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v69 = a1;
  uint64_t v54 = sub_24EB3D9F0();
  uint64_t v53 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  unint64_t v52 = (char *)&v52 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_24EB3D190();
  uint64_t v60 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  unint64_t v59 = (char *)&v52 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2E50);
  MEMORY[0x270FA5388](v66);
  uint64_t v68 = (uint64_t *)((char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2E38);
  MEMORY[0x270FA5388](v62);
  uint64_t v64 = (char **)((char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2EC8);
  MEMORY[0x270FA5388](v67);
  uint64_t v65 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_24EB3D430();
  uint64_t v55 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56);
  uint64_t v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2F88);
  uint64_t v58 = *(void *)(v63 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v63);
  uint64_t v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v57 = (char *)&v52 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2A48);
  MEMORY[0x270FA5388](v12 - 8);
  char v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EAB0AB0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3010);
  sub_24EAE96A4();
  sub_24EB3D350();
  sub_24EAB0A90();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  uint64_t v15 = v82;
  sub_24EAB0AB0();
  sub_24EB3D350();
  sub_24EAB0A90();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  if (*(void *)(v15 + 16) && (unint64_t v16 = sub_24EAE9F58(v80, v81), (v17 & 1) != 0))
  {
    unint64_t v18 = v16;
    uint64_t v19 = *(void *)(v15 + 56);
    uint64_t State = type metadata accessor for AwardImageLoadState();
    uint64_t v21 = *(void *)(State - 8);
    sub_24EAEA318(v19 + *(void *)(v21 + 72) * v18, (uint64_t)v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v14, 0, 1, State);
  }
  else
  {
    uint64_t State = type metadata accessor for AwardImageLoadState();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(State - 8) + 56))(v14, 1, 1, State);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for AwardImageLoadState();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(State - 8) + 48))(v14, 1, State) == 1)
  {
    uint64_t *v68 = sub_24EB3D960();
    swift_storeEnumTagMultiPayload();
    sub_24EAEA0FC();
    return sub_24EB3D590();
  }
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    uint64_t v34 = sub_24EB3D1F0();
    (*(void (**)(char *, uint64_t))(*(void *)(v34 - 8) + 8))(v14, v34);
    goto LABEL_12;
  }
  if (EnumCaseMultiPayload != 1)
  {
LABEL_12:
    uint64_t v75 = 0xD00000000000001BLL;
    uint64_t v76 = 0x800000024EB4AA30;
    LOBYTE(v77) = 0;
    uint64_t v78 = MEMORY[0x263F8EE78];
    sub_24EB3D420();
    uint64_t v35 = MEMORY[0x263F1A830];
    uint64_t v36 = MEMORY[0x263F1A820];
    sub_24EB3D910();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v7, v56);
    sub_24EAB1A80(v75, v76, v77);
    swift_bridgeObjectRelease();
    uint64_t v37 = v58;
    double v38 = v57;
    double v39 = v10;
    uint64_t v40 = v63;
    (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v57, v39, v63);
    (*(void (**)(void *, char *, uint64_t))(v37 + 16))(v64, v38, v40);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2E78);
    uint64_t v75 = v35;
    uint64_t v76 = v36;
    swift_getOpaqueTypeConformance2();
    sub_24EAEA1D8(&qword_26B1D2E70, &qword_26B1D2E78, (void (*)(void))sub_24EAD4020);
    uint64_t v41 = (uint64_t)v65;
    sub_24EB3D590();
    sub_24EAB1D9C(v41, (uint64_t)v68, &qword_26B1D2EC8);
    swift_storeEnumTagMultiPayload();
    sub_24EAEA0FC();
    sub_24EB3D590();
    sub_24EAB1E00(v41, &qword_26B1D2EC8);
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v38, v40);
  }
  (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v59, v14, v61);
  sub_24EB3D180();
  id v24 = objc_allocWithZone(MEMORY[0x263F827E8]);
  uint64_t v25 = (void *)sub_24EB3DC70();
  swift_bridgeObjectRelease();
  id v26 = objc_msgSend(v24, sel_initWithContentsOfFile_, v25);

  uint64_t v27 = MEMORY[0x263F1A830];
  uint64_t v28 = MEMORY[0x263F1A820];
  if (v26)
  {
    id v29 = v26;
    sub_24EB3D9D0();
    uint64_t v30 = v53;
    uint64_t v31 = v52;
    uint64_t v32 = v54;
    (*(void (**)(char *, void, uint64_t))(v53 + 104))(v52, *MEMORY[0x263F1B4B8], v54);
    uint64_t v33 = sub_24EB3DA00();
    swift_release();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v32);
    uint64_t v70 = v33;
    uint64_t v71 = 0x3FF0000000000000;
    uint64_t v72 = 0;
    uint64_t v73 = 0;
    char v74 = 0;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2DC8);
    sub_24EAD4020();
    sub_24EB3D590();
    swift_release();
  }
  else
  {
    sub_24EB3D530();
    uint64_t v70 = sub_24EB3D760();
    uint64_t v71 = v42;
    uint64_t v72 = v43 & 1;
    uint64_t v73 = v44;
    char v74 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2DC8);
    sub_24EAD4020();
    sub_24EB3D590();
  }
  uint64_t v45 = v75;
  uint64_t v46 = v76;
  uint64_t v47 = v77;
  uint64_t v48 = v78;
  char v49 = v79;
  uint64_t v50 = v64;
  *uint64_t v64 = v75;
  v50[1] = v46;
  v50[2] = v47;
  long long v50[3] = v48;
  *((unsigned char *)v50 + 32) = v49;
  swift_storeEnumTagMultiPayload();
  sub_24EAEA76C(v45, v46, v47, v48, v49);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2E78);
  uint64_t v75 = v27;
  uint64_t v76 = v28;
  swift_getOpaqueTypeConformance2();
  sub_24EAEA1D8(&qword_26B1D2E70, &qword_26B1D2E78, (void (*)(void))sub_24EAD4020);
  uint64_t v51 = (uint64_t)v65;
  sub_24EB3D590();
  sub_24EAB1D9C(v51, (uint64_t)v68, &qword_26B1D2EC8);
  swift_storeEnumTagMultiPayload();
  sub_24EAEA0FC();
  sub_24EB3D590();
  sub_24EAEA7BC(v45, v46, v47, v48, v49);
  sub_24EAB1E00(v51, &qword_26B1D2EC8);
  return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v59, v61);
}

uint64_t sub_24EAE94F8()
{
  uint64_t v0 = type metadata accessor for AwardImageAction();
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (long long *)((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24EAB0AB0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3010);
  sub_24EAE96A4();
  sub_24EB3D350();
  sub_24EAB0A90();
  sub_24EAB0AB0();
  sub_24EB3D350();
  sub_24EAB0A90();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  *uint64_t v2 = v4;
  swift_storeEnumTagMultiPayload();
  sub_24EB3DBB0();
  swift_release();
  return sub_24EAEA634((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for AwardImageAction);
}

uint64_t sub_24EAE9698()
{
  return sub_24EAE94F8();
}

unint64_t sub_24EAE96A4()
{
  unint64_t result = qword_26B1D3008;
  if (!qword_26B1D3008)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D3010);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D3008);
  }
  return result;
}

uint64_t sub_24EAE9700(uint64_t a1, uint64_t a2)
{
  uint64_t v41 = type metadata accessor for AwardImageAction();
  MEMORY[0x270FA5388](v41);
  uint64_t v42 = (double *)((char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t State = type metadata accessor for AwardImageLoadState();
  uint64_t v5 = *(void **)(State - 8);
  MEMORY[0x270FA5388](State);
  uint64_t v39 = (uint64_t)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2A50);
  MEMORY[0x270FA5388](v45);
  uint64_t v46 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2A48);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v43 = (uint64_t)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v48 = (uint64_t)&v38 - v12;
  MEMORY[0x270FA5388](v11);
  char v14 = (char *)&v38 - v13;
  sub_24EAB0AB0();
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3010);
  unint64_t v16 = sub_24EAE96A4();
  sub_24EB3D350();
  sub_24EAB0A90();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  double v17 = v50;
  double v18 = v51;
  sub_24EAB0AB0();
  uint64_t v40 = v15;
  unint64_t v44 = v16;
  sub_24EB3D350();
  uint64_t v47 = a2;
  sub_24EAB0A90();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  uint64_t v19 = *(void *)&v50;
  if (*(void *)(*(void *)&v50 + 16) && (unint64_t v20 = sub_24EAE9F58(v17, v18), (v21 & 1) != 0))
  {
    sub_24EAEA318(*(void *)(v19 + 56) + v5[9] * v20, (uint64_t)v14);
    uint64_t v22 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v5[7];
    v22(v14, 0, 1, State);
  }
  else
  {
    uint64_t v22 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v5[7];
    v22(v14, 1, 1, State);
  }
  uint64_t v23 = (uint64_t)v46;
  swift_bridgeObjectRelease();
  uint64_t v24 = v48;
  swift_storeEnumTagMultiPayload();
  v22((char *)v24, 0, 1, State);
  uint64_t v25 = v23 + *(int *)(v45 + 48);
  sub_24EAB1D9C((uint64_t)v14, v23, &qword_26B1D2A48);
  sub_24EAB1D9C(v24, v25, &qword_26B1D2A48);
  id v26 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v5[6];
  uint64_t v27 = (uint64_t)v14;
  if (v26(v23, 1, State) != 1)
  {
    uint64_t v28 = v43;
    sub_24EAB1D9C(v23, v43, &qword_26B1D2A48);
    if (v26(v25, 1, State) != 1)
    {
      uint64_t v29 = v39;
      sub_24EAEA694(v25, v39);
      char StateO2eeoiySbAC_ACtFZ_0 = _s13FitnessAwards19AwardImageLoadStateO2eeoiySbAC_ACtFZ_0(v28, v29);
      sub_24EAEA634(v29, (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
      sub_24EAB1E00(v48, &qword_26B1D2A48);
      sub_24EAEA634(v28, (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
      sub_24EAB1E00(v23, &qword_26B1D2A48);
      if ((StateO2eeoiySbAC_ACtFZ_0 & 1) == 0) {
        return sub_24EAB1E00(v27, &qword_26B1D2A48);
      }
      goto LABEL_12;
    }
    sub_24EAB1E00(v48, &qword_26B1D2A48);
    sub_24EAEA634(v28, (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
LABEL_10:
    sub_24EAB1E00(v23, &qword_26B1D2A50);
    return sub_24EAB1E00(v27, &qword_26B1D2A48);
  }
  sub_24EAB1E00(v24, &qword_26B1D2A48);
  if (v26(v25, 1, State) != 1) {
    goto LABEL_10;
  }
  sub_24EAB1E00(v23, &qword_26B1D2A48);
LABEL_12:
  if (qword_26B1D27C0 != -1) {
    swift_once();
  }
  uint64_t v31 = sub_24EB3D2C0();
  __swift_project_value_buffer(v31, (uint64_t)qword_26B1D27A8);
  sub_24EAB0AB0();
  sub_24EAB0AB0();
  uint64_t v32 = sub_24EB3D2A0();
  os_log_type_t v33 = sub_24EB3DD80();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = (uint8_t *)swift_slowAlloc();
    uint64_t v48 = swift_slowAlloc();
    uint64_t v49 = v48;
    *(_DWORD *)uint64_t v34 = 136315138;
    uint64_t v46 = (char *)(v34 + 4);
    sub_24EAB0AB0();
    sub_24EB3D350();
    sub_24EAB0A90();
    swift_getKeyPath();
    sub_24EB3DBA0();
    swift_release();
    swift_release();
    double v50 = COERCE_DOUBLE(sub_24EAC5098(*(uint64_t *)&v50, *(unint64_t *)&v51, &v49));
    sub_24EB3DDB0();
    swift_bridgeObjectRelease();
    sub_24EAB0A90();
    sub_24EAB0A90();
    _os_log_impl(&dword_24EAA5000, v32, v33, "[AwardImageView] Load state was reset to idle for  %s", v34, 0xCu);
    uint64_t v35 = v48;
    swift_arrayDestroy();
    MEMORY[0x2533497D0](v35, -1, -1);
    MEMORY[0x2533497D0](v34, -1, -1);
  }
  else
  {
    sub_24EAB0A90();
    sub_24EAB0A90();
  }

  sub_24EAB0AB0();
  sub_24EB3D350();
  sub_24EAB0A90();
  uint64_t v36 = (uint64_t)v42;
  *uint64_t v42 = v17;
  *(double *)(v36 + 8) = v18;
  swift_storeEnumTagMultiPayload();
  sub_24EB3DBB0();
  swift_release();
  sub_24EAEA634(v36, (uint64_t (*)(void))type metadata accessor for AwardImageAction);
  return sub_24EAB1E00(v27, &qword_26B1D2A48);
}

unint64_t sub_24EAE9EE0(uint64_t a1, uint64_t a2)
{
  sub_24EB3E090();
  sub_24EB3DCA0();
  uint64_t v4 = sub_24EB3E0D0();
  return sub_24EAEA550(a1, a2, v4);
}

unint64_t sub_24EAE9F58(double a1, double a2)
{
  sub_24EB3E090();
  sub_24EAAC994();
  uint64_t v4 = sub_24EB3E0D0();
  return sub_24EAEA6F8(v4, a1, a2);
}

uint64_t objectdestroy_2Tm_0()
{
  sub_24EAB0A90();
  return MEMORY[0x270FA0238](v0, 33, 7);
}

uint64_t sub_24EAEA00C()
{
  return sub_24EAE9700(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t sub_24EAEA018()
{
  unint64_t result = qword_26B1D2DB0;
  if (!qword_26B1D2DB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2DB8);
    sub_24EAEA254(&qword_26B1D2FA0, &qword_26B1D2FA8, (void (*)(void))sub_24EAEA0CC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2DB0);
  }
  return result;
}

uint64_t sub_24EAEA0CC()
{
  return sub_24EAEA1D8(&qword_26B1D2F00, &qword_26B1D2F08, (void (*)(void))sub_24EAEA0FC);
}

unint64_t sub_24EAEA0FC()
{
  unint64_t result = qword_26B1D2EC0;
  if (!qword_26B1D2EC0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2EC8);
    swift_getOpaqueTypeConformance2();
    sub_24EAEA1D8(&qword_26B1D2E70, &qword_26B1D2E78, (void (*)(void))sub_24EAD4020);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2EC0);
  }
  return result;
}

uint64_t sub_24EAEA1D8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EAEA254(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24EAEA2C0()
{
  unint64_t result = qword_26B1D2A30;
  if (!qword_26B1D2A30)
  {
    type metadata accessor for AwardImageLoadState();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2A30);
  }
  return result;
}

uint64_t sub_24EAEA318(uint64_t a1, uint64_t a2)
{
  uint64_t State = type metadata accessor for AwardImageLoadState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(State - 8) + 16))(a2, a1, State);
  return a2;
}

uint64_t sub_24EAEA37C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24EAEA39C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_24EAB0AB0();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for AwardImageView(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_24EAB0AB0();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_24EAB0A90();
  return a1;
}

uint64_t assignWithTake for AwardImageView(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_24EAB0A90();
  return a1;
}

ValueMetadata *type metadata accessor for AwardImageView()
{
  return &type metadata for AwardImageView;
}

uint64_t sub_24EAEA498()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_24EAEA550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_24EB3E010() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_24EB3E010() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_24EAEA634(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24EAEA694(uint64_t a1, uint64_t a2)
{
  uint64_t State = type metadata accessor for AwardImageLoadState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(State - 8) + 32))(a2, a1, State);
  return a2;
}

unint64_t sub_24EAEA6F8(uint64_t a1, double a2, double a3)
{
  uint64_t v4 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t result = a1 & ~v4;
  if ((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v6 = ~v4;
    do
    {
      uint64_t v7 = (double *)(*(void *)(v3 + 48) + 16 * result);
      double v8 = v7[1];
      BOOL v9 = *v7 == a2;
      if (v8 == a3 && v9) {
        break;
      }
      unint64_t result = (result + 1) & v6;
    }
    while (((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

uint64_t sub_24EAEA76C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  if (a5)
  {
    sub_24EAB1B08(a1, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  else
  {
    return swift_retain();
  }
}

uint64_t sub_24EAEA7BC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  if (a5)
  {
    sub_24EAB1A80(a1, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    return swift_release();
  }
}

__n128 AwardImageFeature.init(environment:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  type metadata accessor for AwardImageFeature();
  sub_24EB3D1E0();
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t type metadata accessor for AwardImageFeature()
{
  uint64_t result = qword_26B1D2988;
  if (!qword_26B1D2988) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24EAEA898()
{
  return sub_24EB3E0D0();
}

uint64_t sub_24EAEA918()
{
  sub_24EB3E0A0();
  sub_24EB3DCA0();
  return sub_24EAAC994();
}

uint64_t sub_24EAEA988()
{
  return sub_24EB3E0D0();
}

BOOL sub_24EAEAA04(long long *a1, long long *a2)
{
  sub_24EAEECF4(a1, (uint64_t)v4);
  sub_24EAEECF4(a2, (uint64_t)v5);
  return sub_24EAEE3CC(v4, v5);
}

uint64_t AwardImageFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, uint64_t *a2, unint64_t *a3, uint64_t a4)
{
  long long v188 = a3;
  uint64_t v191 = a4;
  long long v192 = a2;
  uint64_t v178 = a1;
  uint64_t State = type metadata accessor for AwardImageLoadState();
  uint64_t v187 = *(void *)(State - 8);
  uint64_t v5 = MEMORY[0x270FA5388](State);
  uint64_t v168 = (uint64_t)&v166 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v172 = (uint64_t)&v166 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  BOOL v11 = (char *)&v166 - v10;
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v169 = (uint64_t)&v166 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  unint64_t v182 = (_OWORD *)((char *)&v166 - v15);
  MEMORY[0x270FA5388](v14);
  double v17 = (char *)&v166 - v16;
  uint64_t v175 = sub_24EB3D1F0();
  uint64_t v174 = *(void *)(v175 - 8);
  MEMORY[0x270FA5388](v175);
  uint64_t v167 = (char *)&v166 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2A48);
  uint64_t v19 = MEMORY[0x270FA5388](v170);
  uint64_t v176 = (uint64_t)&v166 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v173 = (char *)&v166 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v180 = (char *)&v166 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v181 = (char *)&v166 - v25;
  uint64_t v190 = sub_24EB3D190();
  uint64_t v186 = *(void *)(v190 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v190);
  uint64_t v179 = (char *)&v166 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  unint64_t v185 = (char *)&v166 - v28;
  uint64_t v29 = type metadata accessor for AwardImageFeature();
  uint64_t v177 = *(void *)(v29 - 8);
  uint64_t v30 = *(void *)(v177 + 64);
  MEMORY[0x270FA5388](v29);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FC8);
  uint64_t v183 = *(void *)(v31 - 8);
  uint64_t v184 = (void (*)(void, void, void))v31;
  uint64_t v32 = MEMORY[0x270FA5388](v31);
  int v171 = (char *)&v166 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v32);
  uint64_t v35 = (char *)&v166 - v34;
  uint64_t v36 = type metadata accessor for AwardImageAction();
  uint64_t v37 = MEMORY[0x270FA5388](v36);
  uint64_t v39 = (_OWORD *)((char *)&v166 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v37);
  uint64_t v41 = (double *)((char *)&v166 - v40);
  sub_24EAEDC98(v191, (uint64_t)&v166 - v40, (uint64_t (*)(void))type metadata accessor for AwardImageAction);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      uint64_t v67 = State;
      uint64_t v68 = v192[4];
      if (*(void *)(v68 + 16))
      {
        double v69 = *v41;
        double v70 = v41[1];
        uint64_t result = sub_24EAE9F58(*v41, v70);
        if (v71)
        {
          uint64_t v72 = *(void *)(v68 + 56);
          uint64_t v73 = v187;
          sub_24EAEDC98(v72 + *(void *)(v187 + 72) * result, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
          if (swift_getEnumCaseMultiPayload())
          {
            char v74 = type metadata accessor for AwardImageLoadState;
            uint64_t v75 = (uint64_t)v17;
            return sub_24EAEDB70(v75, (uint64_t (*)(void))v74);
          }
          uint64_t v161 = v174;
          os_log_type_t v162 = v167;
          uint64_t v163 = v17;
          uint64_t v164 = v175;
          (*(void (**)(char *, char *, uint64_t))(v174 + 32))(v167, v163, v175);
          if (sub_24EB3D1D0())
          {
            uint64_t v165 = (uint64_t)v173;
            swift_storeEnumTagMultiPayload();
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v73 + 56))(v165, 0, 1, v67);
            sub_24EAECCB0(v165, v69, v70);
          }
          return (*(uint64_t (**)(char *, uint64_t))(v161 + 8))(v162, v164);
        }
      }
      return result;
    case 2:
      double v76 = *v41;
      double v77 = v41[1];
      uint64_t v79 = *v192;
      uint64_t v78 = v192[1];
      double v80 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26B1D30A0);
      double v81 = &v35[v80[16]];
      uint64_t v82 = &v35[v80[20]];
      uint64_t v83 = &v35[v80[24]];
      double v193 = *(double *)&v79;
      double v194 = *(double *)&v78;
      double v195 = v76;
      double v196 = v77;
      char v197 = 0;
      sub_24EAEDA28();
      swift_bridgeObjectRetain_n();
      sub_24EB3DDE0();
      sub_24EB3DD30();
      uint64_t v84 = *MEMORY[0x263F39590];
      uint64_t v85 = sub_24EB3DB90();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v85 - 8) + 104))(v81, v84, v85);
      uint64_t v86 = *MEMORY[0x263F39570];
      uint64_t v87 = sub_24EB3DB80();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v87 - 8) + 104))(v82, v86, v87);
      sub_24EAEDC98(v189, (uint64_t)&v166 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for AwardImageFeature);
      unint64_t v88 = (*(unsigned __int8 *)(v177 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v177 + 80);
      unint64_t v89 = (v30 + v88 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v90 = swift_allocObject();
      sub_24EAEDE14((uint64_t)&v166 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0), v90 + v88, (uint64_t (*)(void))type metadata accessor for AwardImageFeature);
      uint64_t v91 = (uint64_t *)(v90 + v89);
      *uint64_t v91 = v79;
      v91[1] = v78;
      uint64_t v92 = (double *)(v90 + ((v89 + 23) & 0xFFFFFFFFFFFFFFF8));
      *uint64_t v92 = v76;
      v92[1] = v77;
      *(void *)uint64_t v83 = &unk_269932950;
      *((void *)v83 + 1) = v90;
      uint64_t v94 = v183;
      uint64_t v93 = v184;
      (*(void (**)(char *, void, void))(v183 + 104))(v35, *MEMORY[0x263F39530], v184);
      unint64_t v95 = v188;
      unint64_t v96 = *v188;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v96 = sub_24EAC4F24(0, *(void *)(v96 + 16) + 1, 1, v96);
      }
      unint64_t v98 = *(void *)(v96 + 16);
      unint64_t v97 = *(void *)(v96 + 24);
      if (v98 >= v97 >> 1) {
        unint64_t v96 = sub_24EAC4F24(v97 > 1, v98 + 1, 1, v96);
      }
      *(void *)(v96 + 16) = v98 + 1;
      uint64_t result = (*(uint64_t (**)(unint64_t, char *, void))(v94 + 32))(v96+ ((*(unsigned __int8 *)(v94 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80))+ *(void *)(v94 + 72) * v98, v35, v93);
      *unint64_t v95 = v96;
      return result;
    case 3:
      *uint64_t v39 = *(_OWORD *)v41;
      swift_storeEnumTagMultiPayload();
      AwardImageFeature.reduce(localState:sharedState:sideEffects:action:)(v178, v192, v188, v39);
      uint64_t v99 = type metadata accessor for AwardImageAction;
      goto LABEL_26;
    case 4:
      uint64_t v100 = State;
      double v102 = *v41;
      double v101 = v41[1];
      unint64_t v103 = v192;
      uint64_t v104 = v192[4];
      if (*(void *)(v104 + 16) && (unint64_t v105 = sub_24EAE9F58(v102, v101), (v106 & 1) != 0))
      {
        uint64_t v107 = *(void *)(v104 + 56) + *(void *)(v187 + 72) * v105;
        uint64_t v108 = v169;
        sub_24EAEDC98(v107, v169, (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
        uint64_t v39 = v182;
        sub_24EAEDE14(v108, (uint64_t)v182, (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
        uint64_t v109 = v100;
      }
      else
      {
        uint64_t v39 = v182;
        uint64_t v109 = v100;
        swift_storeEnumTagMultiPayload();
      }
      sub_24EAEDC98((uint64_t)v39, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      sub_24EAEDB70((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v111 = (uint64_t)v173;
        (*(void (**)(char *, uint64_t, uint64_t))(v174 + 16))(v173, v189 + *(int *)(v29 + 20), v175);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v187 + 56))(v111, 0, 1, v109);
        sub_24EAECCB0(v111, v102, v101);
        uint64_t v113 = *v103;
        double v112 = *((double *)v103 + 1);
        uint64_t v114 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26B1D30A0);
        uint64_t v115 = v171;
        uint64_t v116 = &v171[v114[16]];
        uint64_t v117 = &v171[v114[20]];
        uint64_t v118 = &v171[v114[24]];
        double v193 = *(double *)&v113;
        double v194 = v112;
        double v195 = v102;
        double v196 = v101;
        char v197 = 1;
        sub_24EAEDA28();
        swift_bridgeObjectRetain_n();
        sub_24EB3DDE0();
        sub_24EB3DD30();
        uint64_t v119 = *MEMORY[0x263F39590];
        uint64_t v120 = sub_24EB3DB90();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v120 - 8) + 104))(v116, v119, v120);
        uint64_t v121 = *MEMORY[0x263F39570];
        uint64_t v122 = sub_24EB3DB80();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v122 - 8) + 104))(v117, v121, v122);
        unint64_t v123 = (double *)swift_allocObject();
        v123[2] = *(double *)&v113;
        v123[3] = v112;
        v123[4] = v102;
        v123[5] = v101;
        *(void *)uint64_t v118 = &unk_269932940;
        *((void *)v118 + 1) = v123;
        uint64_t v125 = v183;
        uint64_t v124 = v184;
        (*(void (**)(char *, void, void))(v183 + 104))(v115, *MEMORY[0x263F39530], v184);
        uint64_t v126 = v188;
        unint64_t v127 = *v188;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v127 = sub_24EAC4F24(0, *(void *)(v127 + 16) + 1, 1, v127);
        }
        unint64_t v129 = *(void *)(v127 + 16);
        unint64_t v128 = *(void *)(v127 + 24);
        if (v129 >= v128 >> 1) {
          unint64_t v127 = sub_24EAC4F24(v128 > 1, v129 + 1, 1, v127);
        }
        *(void *)(v127 + 16) = v129 + 1;
        (*(void (**)(unint64_t, char *, void))(v125 + 32))(v127+ ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80))+ *(void *)(v125 + 72) * v129, v115, v124);
        *uint64_t v126 = v127;
        uint64_t v99 = type metadata accessor for AwardImageLoadState;
LABEL_26:
        char v74 = v99;
        uint64_t v75 = (uint64_t)v39;
      }
      else
      {
        if (qword_26B1D27C0 != -1) {
          swift_once();
        }
        uint64_t v140 = sub_24EB3D2C0();
        __swift_project_value_buffer(v140, (uint64_t)qword_26B1D27A8);
        uint64_t v141 = v172;
        sub_24EAEDC98((uint64_t)v39, v172, (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
        unint64_t v142 = sub_24EB3D2A0();
        os_log_type_t v143 = sub_24EB3DD80();
        if (os_log_type_enabled(v142, v143))
        {
          uint64_t v144 = swift_slowAlloc();
          uint64_t v145 = swift_slowAlloc();
          uint64_t v198 = v145;
          *(_DWORD *)uint64_t v144 = 136315394;
          double v193 = v102;
          double v194 = v101;
          type metadata accessor for CGSize();
          uint64_t v146 = sub_24EB3DC80();
          double v193 = COERCE_DOUBLE(sub_24EAC5098(v146, v147, &v198));
          sub_24EB3DDB0();
          swift_bridgeObjectRelease();
          *(_WORD *)(v144 + 12) = 2080;
          sub_24EAEDC98(v141, v168, (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
          uint64_t v148 = sub_24EB3DC80();
          double v193 = COERCE_DOUBLE(sub_24EAC5098(v148, v149, &v198));
          sub_24EB3DDB0();
          swift_bridgeObjectRelease();
          sub_24EAEDB70(v141, (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
          _os_log_impl(&dword_24EAA5000, v142, v143, "[AwardImageFeature] View appeared but loadState for image size %s was %s, returning", (uint8_t *)v144, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x2533497D0](v145, -1, -1);
          MEMORY[0x2533497D0](v144, -1, -1);
        }
        else
        {

          sub_24EAEDB70(v141, (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
        }
        uint64_t v75 = (uint64_t)v39;
        char v74 = type metadata accessor for AwardImageLoadState;
      }
      return sub_24EAEDB70(v75, (uint64_t (*)(void))v74);
    default:
      uint64_t v191 = State;
      uint64_t v43 = (double *)((char *)v41 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2790) + 48));
      double v44 = *v43;
      double v45 = v43[1];
      uint64_t v46 = v185;
      uint64_t v47 = v186;
      uint64_t v48 = v190;
      (*(void (**)(char *, double *, uint64_t))(v186 + 32))(v185, v41, v190);
      uint64_t v49 = v192;
      uint64_t v51 = *v192;
      unint64_t v50 = v192[1];
      uint64_t v52 = qword_26B1D27C0;
      swift_bridgeObjectRetain();
      if (v52 != -1) {
        swift_once();
      }
      uint64_t v53 = sub_24EB3D2C0();
      uint64_t v54 = __swift_project_value_buffer(v53, (uint64_t)qword_26B1D27A8);
      uint64_t v55 = *(void (**)(void, void, void))(v47 + 16);
      uint64_t v56 = v179;
      long long v188 = (unint64_t *)(v47 + 16);
      uint64_t v184 = v55;
      v55(v179, v46, v48);
      swift_bridgeObjectRetain();
      uint64_t v189 = v54;
      uint64_t v57 = sub_24EB3D2A0();
      os_log_type_t v58 = sub_24EB3DD80();
      if (os_log_type_enabled(v57, v58))
      {
        uint64_t v59 = swift_slowAlloc();
        uint64_t v60 = swift_slowAlloc();
        uint64_t v198 = v60;
        *(_DWORD *)uint64_t v59 = 136315650;
        swift_bridgeObjectRetain();
        double v193 = COERCE_DOUBLE(sub_24EAC5098(v51, v50, &v198));
        sub_24EB3DDB0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v59 + 12) = 2080;
        double v193 = v44;
        double v194 = v45;
        type metadata accessor for CGSize();
        uint64_t v61 = sub_24EB3DC80();
        double v193 = COERCE_DOUBLE(sub_24EAC5098(v61, v62, &v198));
        sub_24EB3DDB0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v59 + 22) = 2080;
        uint64_t v49 = v192;
        sub_24EAEE934(&qword_26B1D27A0, MEMORY[0x263F06EA8]);
        uint64_t v63 = sub_24EB3E000();
        double v193 = COERCE_DOUBLE(sub_24EAC5098(v63, v64, &v198));
        sub_24EB3DDB0();
        swift_bridgeObjectRelease();
        uint64_t v65 = *(void (**)(char *, uint64_t))(v47 + 8);
        v65(v56, v190);
        _os_log_impl(&dword_24EAA5000, v57, v58, "[AwardImageFeature] (%s) Image fetched for size %s: %s", (uint8_t *)v59, 0x20u);
        swift_arrayDestroy();
        uint64_t v66 = v60;
        uint64_t v48 = v190;
        MEMORY[0x2533497D0](v66, -1, -1);
        MEMORY[0x2533497D0](v59, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        uint64_t v65 = *(void (**)(char *, uint64_t))(v47 + 8);
        v65(v56, v48);
      }

      uint64_t v131 = (uint64_t)v180;
      uint64_t v130 = (uint64_t)v181;
      uint64_t v132 = v49[4];
      uint64_t v133 = v187;
      if (*(void *)(v132 + 16) && (unint64_t v134 = sub_24EAE9F58(v44, v45), (v135 & 1) != 0))
      {
        sub_24EAEDC98(*(void *)(v132 + 56) + *(void *)(v133 + 72) * v134, v130, (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
        uint64_t v136 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v133 + 56);
        uint64_t v137 = v130;
        uint64_t v138 = 0;
      }
      else
      {
        uint64_t v136 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v133 + 56);
        uint64_t v137 = v130;
        uint64_t v138 = 1;
      }
      uint64_t v139 = v191;
      v136(v137, v138, 1, v191);
      sub_24EAEDBD0(v130, v131);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v133 + 48))(v131, 1, v139) == 1)
      {
        sub_24EAEDC38(v131);
      }
      else
      {
        if (!swift_getEnumCaseMultiPayload())
        {
          (*(void (**)(uint64_t, uint64_t))(v174 + 8))(v131, v175);
          uint64_t v159 = (uint64_t)v173;
          uint64_t v160 = v185;
          v184(v173, v185, v48);
          swift_storeEnumTagMultiPayload();
          v136(v159, 0, 1, v139);
          sub_24EAECCB0(v159, v44, v45);
          sub_24EAEDC38(v130);
          uint64_t v158 = v160;
          return ((uint64_t (*)(char *, uint64_t))v65)(v158, v48);
        }
        sub_24EAEDB70(v131, (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
      }
      uint64_t v150 = v176;
      sub_24EAEDBD0(v130, v176);
      unint64_t v151 = sub_24EB3D2A0();
      os_log_type_t v152 = sub_24EB3DD80();
      if (os_log_type_enabled(v151, v152))
      {
        uint64_t v153 = (uint8_t *)swift_slowAlloc();
        uint64_t v154 = v130;
        *(double *)&uint64_t v155 = COERCE_DOUBLE(swift_slowAlloc());
        double v193 = *(double *)&v155;
        *(_DWORD *)uint64_t v153 = 136315138;
        uint64_t v156 = sub_24EB3DD90();
        uint64_t v198 = sub_24EAC5098(v156, v157, (uint64_t *)&v193);
        sub_24EB3DDB0();
        swift_bridgeObjectRelease();
        sub_24EAEDC38(v150);
        _os_log_impl(&dword_24EAA5000, v151, v152, "[AwardImageFeature] Current state is %s, skipping .fetched update", v153, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2533497D0](v155, -1, -1);
        MEMORY[0x2533497D0](v153, -1, -1);

        sub_24EAEDC38(v154);
        return ((uint64_t (*)(char *, uint64_t))v65)(v185, v190);
      }

      sub_24EAEDC38(v150);
      sub_24EAEDC38(v130);
      uint64_t v158 = v185;
      return ((uint64_t (*)(char *, uint64_t))v65)(v158, v48);
  }
}

uint64_t sub_24EAEBF84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  *(double *)(v6 + 104) = a5;
  *(double *)(v6 + 112) = a6;
  *(void *)(v6 + 88) = a3;
  *(void *)(v6 + 96) = a4;
  *(void *)(v6 + 72) = a1;
  *(void *)(v6 + 80) = a2;
  *(void *)(v6 + 120) = type metadata accessor for AwardImageAction();
  *(void *)(v6 + 128) = swift_task_alloc();
  uint64_t v7 = sub_24EB3D190();
  *(void *)(v6 + 136) = v7;
  *(void *)(v6 + 144) = *(void *)(v7 - 8);
  *(void *)(v6 + 152) = swift_task_alloc();
  *(void *)(v6 + 160) = swift_task_alloc();
  sub_24EB3DD20();
  *(void *)(v6 + 168) = sub_24EB3DD10();
  uint64_t v9 = sub_24EB3DCF0();
  *(void *)(v6 + 176) = v9;
  *(void *)(v6 + 184) = v8;
  return MEMORY[0x270FA2498](sub_24EAEC0C0, v9, v8);
}

uint64_t sub_24EAEC0C0()
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128, __n128))(**(void **)(v0 + 80) + ***(int ***)(v0 + 80));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 192) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_24EAEC19C;
  uint64_t v2 = *(void *)(v0 + 160);
  v3.n128_u64[0] = *(void *)(v0 + 104);
  v4.n128_u64[0] = *(void *)(v0 + 112);
  uint64_t v5 = *(void *)(v0 + 88);
  uint64_t v6 = *(void *)(v0 + 96);
  return v8(v2, v5, v6, v3, v4);
}

uint64_t sub_24EAEC19C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 200) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 184);
  uint64_t v4 = *(void *)(v2 + 176);
  if (v0) {
    uint64_t v5 = sub_24EAEC9C4;
  }
  else {
    uint64_t v5 = sub_24EAEC2D8;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_24EAEC2D8()
{
  uint64_t v32 = v0;
  if (qword_26B1D27C0 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[18];
  uint64_t v5 = sub_24EB3D2C0();
  __swift_project_value_buffer(v5, (uint64_t)qword_26B1D27A8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v6(v1, v2, v3);
  uint64_t v7 = sub_24EB3D2A0();
  os_log_type_t v8 = sub_24EB3DD80();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v11 = v0[18];
  uint64_t v10 = v0[19];
  uint64_t v12 = v0[17];
  if (v9)
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    uint64_t v31 = v30;
    *(_DWORD *)uint64_t v13 = 136315138;
    sub_24EAEE934(&qword_26B1D27A0, MEMORY[0x263F06EA8]);
    uint64_t v14 = sub_24EB3E000();
    v0[8] = sub_24EAC5098(v14, v15, &v31);
    sub_24EB3DDB0();
    swift_bridgeObjectRelease();
    uint64_t v18 = *(void (**)(void, void))(v11 + 8);
    uint64_t v16 = v11 + 8;
    double v17 = v18;
    v18(v10, v12);
    _os_log_impl(&dword_24EAA5000, v7, v8, "[AwardImageFeature] Image url fetched %s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533497D0](v30, -1, -1);
    MEMORY[0x2533497D0](v13, -1, -1);
  }
  else
  {
    uint64_t v19 = *(void (**)(void, void))(v11 + 8);
    uint64_t v16 = v11 + 8;
    double v17 = v19;
    v19(v0[19], v0[17]);
  }

  v0[26] = v16;
  v0[27] = v17;
  uint64_t v20 = v0[20];
  uint64_t v22 = v0[16];
  uint64_t v21 = v0[17];
  uint64_t v24 = v0[13];
  uint64_t v23 = v0[14];
  uint64_t v25 = (void *)(v22 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2790) + 48));
  v6(v22, v20, v21);
  *uint64_t v25 = v24;
  v25[1] = v23;
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = (void *)swift_task_alloc();
  v0[28] = v26;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FF0);
  *uint64_t v26 = v0;
  v26[1] = sub_24EAEC5E4;
  uint64_t v28 = v0[16];
  return MEMORY[0x270F252C8](v28, v27);
}

uint64_t sub_24EAEC5E4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 128);
  swift_task_dealloc();
  sub_24EAEDB70(v2, (uint64_t (*)(void))type metadata accessor for AwardImageAction);
  uint64_t v3 = *(void *)(v1 + 184);
  uint64_t v4 = *(void *)(v1 + 176);
  return MEMORY[0x270FA2498](sub_24EAEC73C, v4, v3);
}

uint64_t sub_24EAEC73C()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[27];
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[17];
  swift_release();
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_24EAEC7E0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 128);
  swift_task_dealloc();
  sub_24EAEDB70(v2, (uint64_t (*)(void))type metadata accessor for AwardImageAction);
  uint64_t v3 = *(void *)(v1 + 184);
  uint64_t v4 = *(void *)(v1 + 176);
  return MEMORY[0x270FA2498](sub_24EAEC938, v4, v3);
}

uint64_t sub_24EAEC938()
{
  uint64_t v1 = *(void *)(v0 + 200);
  swift_release();
  MEMORY[0x2533495D0](v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_24EAEC9C4()
{
  uint64_t v18 = v0;
  if (qword_26B1D27C0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v2 = sub_24EB3D2C0();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B1D27A8);
  swift_bridgeObjectRetain();
  MEMORY[0x2533495E0](v1);
  swift_bridgeObjectRetain();
  MEMORY[0x2533495E0](v1);
  uint64_t v3 = sub_24EB3D2A0();
  os_log_type_t v4 = sub_24EB3DD80();
  BOOL v5 = os_log_type_enabled(v3, v4);
  uint64_t v6 = *(void *)(v0 + 200);
  unint64_t v7 = *(void *)(v0 + 96);
  if (v5)
  {
    uint64_t v8 = *(void *)(v0 + 88);
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v17 = v10;
    *(_DWORD *)uint64_t v9 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 40) = sub_24EAC5098(v8, v7, &v17);
    sub_24EB3DDB0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v11 = sub_24EB3E040();
    *(void *)(v0 + 56) = sub_24EAC5098(v11, v12, &v17);
    sub_24EB3DDB0();
    swift_bridgeObjectRelease();
    MEMORY[0x2533495D0](v6);
    MEMORY[0x2533495D0](v6);
    _os_log_impl(&dword_24EAA5000, v3, v4, "[AwardImageFeature] Failed to fetch image url for %s, error %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533497D0](v10, -1, -1);
    MEMORY[0x2533497D0](v9, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    MEMORY[0x2533495D0](v6);
    MEMORY[0x2533495D0](v6);
  }

  *(_OWORD *)*(void *)(v0 + 128) = *(_OWORD *)(v0 + 104);
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 232) = v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FF0);
  *uint64_t v13 = v0;
  v13[1] = sub_24EAEC7E0;
  uint64_t v15 = *(void *)(v0 + 128);
  return MEMORY[0x270F252C8](v15, v14);
}

uint64_t sub_24EAECCB0(uint64_t a1, double a2, double a3)
{
  os_log_type_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2A48);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t State = type metadata accessor for AwardImageLoadState();
  uint64_t v12 = *(void *)(State - 8);
  MEMORY[0x270FA5388](State);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1, 1, State) == 1)
  {
    sub_24EAEDC38(a1);
    unint64_t v15 = sub_24EAE9F58(a2, a3);
    if (v16)
    {
      unint64_t v17 = v15;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v19 = *v4;
      uint64_t v23 = *v4;
      uint64_t *v4 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_24EB2D41C();
        uint64_t v19 = v23;
      }
      sub_24EAEDE14(*(void *)(v19 + 56) + *(void *)(v12 + 72) * v17, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
      sub_24EAEDFC0(v17, v19);
      uint64_t *v4 = v19;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, State);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, State);
    }
    return sub_24EAEDC38((uint64_t)v10);
  }
  else
  {
    sub_24EAEDE14(a1, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
    char v20 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v4;
    uint64_t *v4 = 0x8000000000000000;
    sub_24EAEE1CC((uint64_t)v14, v20, a2, a3);
    uint64_t *v4 = v23;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24EAECF14(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  *(double *)(v5 + 72) = a4;
  *(double *)(v5 + 80) = a5;
  *(void *)(v5 + 56) = a2;
  *(void *)(v5 + 64) = a3;
  *(void *)(v5 + 48) = a1;
  *(void *)(v5 + 88) = type metadata accessor for AwardImageAction();
  *(void *)(v5 + 96) = swift_task_alloc();
  sub_24EB3DD20();
  *(void *)(v5 + 104) = sub_24EB3DD10();
  uint64_t v7 = sub_24EB3DCF0();
  *(void *)(v5 + 112) = v7;
  *(void *)(v5 + 120) = v6;
  return MEMORY[0x270FA2498](sub_24EAECFE4, v7, v6);
}

uint64_t sub_24EAECFE4()
{
  unint64_t v17 = v0;
  if (qword_26B1D27C0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24EB3D2C0();
  __swift_project_value_buffer(v1, (uint64_t)qword_26B1D27A8);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_24EB3D2A0();
  os_log_type_t v3 = sub_24EB3DD80();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v5 = v0[9];
    uint64_t v4 = v0[10];
    uint64_t v7 = v0[7];
    unint64_t v6 = v0[8];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v16 = v9;
    *(_DWORD *)uint64_t v8 = 136315394;
    swift_bridgeObjectRetain();
    v0[4] = sub_24EAC5098(v7, v6, &v16);
    sub_24EB3DDB0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2080;
    v0[2] = v5;
    v0[3] = v4;
    type metadata accessor for CGSize();
    uint64_t v10 = sub_24EB3DC80();
    v0[5] = sub_24EAC5098(v10, v11, &v16);
    sub_24EB3DDB0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24EAA5000, v2, v3, "[AwardImageFeature] Requesting image data for %s with size %s on view appeared", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533497D0](v9, -1, -1);
    MEMORY[0x2533497D0](v8, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  *(_OWORD *)v0[12] = *(_OWORD *)(v0 + 9);
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = (void *)swift_task_alloc();
  v0[16] = v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FF0);
  *uint64_t v12 = v0;
  v12[1] = sub_24EAED290;
  uint64_t v14 = v0[12];
  return MEMORY[0x270F252C8](v14, v13);
}

uint64_t sub_24EAED290()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 96);
  swift_task_dealloc();
  sub_24EAEDB70(v2, (uint64_t (*)(void))type metadata accessor for AwardImageAction);
  uint64_t v3 = *(void *)(v1 + 120);
  uint64_t v4 = *(void *)(v1 + 112);
  return MEMORY[0x270FA2498](sub_24EAED3E8, v4, v3);
}

uint64_t sub_24EAED3E8()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t AwardImageFeature.dispose(localState:sharedState:)(uint64_t a1)
{
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_24EAEE72C(v2, (uint64_t (*)(char *, double, double))sub_24EAEDFB8, (uint64_t)&v5);
  swift_bridgeObjectRelease();
  sub_24EAED5DC(v3, a1);
  return swift_release();
}

uint64_t sub_24EAED4D4(uint64_t a1, uint64_t a2)
{
  uint64_t State = type metadata accessor for AwardImageLoadState();
  MEMORY[0x270FA5388](State);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a2 + *(int *)(type metadata accessor for AwardImageFeature() + 20);
  uint64_t v8 = sub_24EB3D1F0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  swift_storeEnumTagMultiPayload();
  LOBYTE(v7) = _s13FitnessAwards19AwardImageLoadStateO2eeoiySbAC_ACtFZ_0(a1, (uint64_t)v6);
  sub_24EAEDB70((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
  return v7 & 1;
}

uint64_t sub_24EAED5DC(uint64_t a1, uint64_t a2)
{
  uint64_t State = type metadata accessor for AwardImageLoadState();
  uint64_t v42 = *(void *)(State - 8);
  uint64_t v43 = State;
  uint64_t v5 = MEMORY[0x270FA5388](State);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v39 - v8;
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v40 = a1 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  int64_t v41 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v44 = a1;
  swift_bridgeObjectRetain();
  int64_t v14 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v14 << 6);
    }
    else
    {
      int64_t v17 = v14 + 1;
      if (__OFADD__(v14, 1)) {
        goto LABEL_38;
      }
      if (v17 >= v41) {
        return swift_release();
      }
      unint64_t v18 = *(void *)(v40 + 8 * v17);
      ++v14;
      if (!v18)
      {
        int64_t v14 = v17 + 1;
        if (v17 + 1 >= v41) {
          return swift_release();
        }
        unint64_t v18 = *(void *)(v40 + 8 * v14);
        if (!v18)
        {
          int64_t v14 = v17 + 2;
          if (v17 + 2 >= v41) {
            return swift_release();
          }
          unint64_t v18 = *(void *)(v40 + 8 * v14);
          if (!v18)
          {
            int64_t v14 = v17 + 3;
            if (v17 + 3 >= v41) {
              return swift_release();
            }
            unint64_t v18 = *(void *)(v40 + 8 * v14);
            if (!v18)
            {
              int64_t v19 = v17 + 4;
              if (v19 >= v41) {
                return swift_release();
              }
              unint64_t v18 = *(void *)(v40 + 8 * v19);
              if (!v18)
              {
                while (1)
                {
                  int64_t v14 = v19 + 1;
                  if (__OFADD__(v19, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v41) {
                    return swift_release();
                  }
                  unint64_t v18 = *(void *)(v40 + 8 * v14);
                  ++v19;
                  if (v18) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v19;
            }
          }
        }
      }
LABEL_23:
      unint64_t v13 = (v18 - 1) & v18;
      unint64_t v16 = __clz(__rbit64(v18)) + (v14 << 6);
    }
    char v20 = (double *)(*(void *)(v44 + 48) + 16 * v16);
    double v21 = *v20;
    double v22 = v20[1];
    swift_storeEnumTagMultiPayload();
    sub_24EAEDE14((uint64_t)v9, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    double v45 = *(void **)(a2 + 32);
    uint64_t v24 = v45;
    *(void *)(a2 + 32) = 0x8000000000000000;
    unint64_t v26 = sub_24EAE9F58(v21, v22);
    uint64_t v27 = v24[2];
    BOOL v28 = (v25 & 1) == 0;
    uint64_t v29 = v27 + v28;
    if (__OFADD__(v27, v28)) {
      break;
    }
    char v30 = v25;
    if (v24[3] >= v29)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v33 = v45;
        if (v25) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_24EB2D41C();
        uint64_t v33 = v45;
        if (v30) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_24EB2CC80(v29, isUniquelyReferenced_nonNull_native);
      unint64_t v31 = sub_24EAE9F58(v21, v22);
      if ((v30 & 1) != (v32 & 1)) {
        goto LABEL_40;
      }
      unint64_t v26 = v31;
      uint64_t v33 = v45;
      if (v30)
      {
LABEL_4:
        sub_24EAEED0C((uint64_t)v7, v33[7] + *(void *)(v42 + 72) * v26);
        goto LABEL_5;
      }
    }
    v33[(v26 >> 6) + 8] |= 1 << v26;
    uint64_t v34 = (double *)(v33[6] + 16 * v26);
    *uint64_t v34 = v21;
    v34[1] = v22;
    sub_24EAEDE14((uint64_t)v7, v33[7] + *(void *)(v42 + 72) * v26, (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
    uint64_t v35 = v33[2];
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36) {
      goto LABEL_37;
    }
    _OWORD v33[2] = v37;
LABEL_5:
    *(void *)(a2 + 32) = v33;
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  type metadata accessor for CGSize();
  uint64_t result = sub_24EB3E030();
  __break(1u);
  return result;
}

uint64_t sub_24EAED9A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_24EAEE72C(v3, (uint64_t (*)(char *, double, double))sub_24EAEED70, (uint64_t)&v6);
  swift_bridgeObjectRelease();
  sub_24EAED5DC(v4, a2);
  return swift_release();
}

unint64_t sub_24EAEDA28()
{
  unint64_t result = qword_26B1D2828;
  if (!qword_26B1D2828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2828);
  }
  return result;
}

uint64_t sub_24EAEDA7C()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_24EAEDAB4(uint64_t a1)
{
  uint64_t v4 = *((void *)v1 + 2);
  uint64_t v5 = *((void *)v1 + 3);
  double v6 = v1[4];
  double v7 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_24EAC5824;
  return sub_24EAECF14(a1, v4, v5, v6, v7);
}

uint64_t sub_24EAEDB70(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24EAEDBD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2A48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EAEDC38(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2A48);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24EAEDC98(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24EAEDD00()
{
  uint64_t v1 = (int *)(type metadata accessor for AwardImageFeature() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v6 = v0 + v3;
  swift_release();
  uint64_t v7 = v6 + v1[7];
  uint64_t v8 = sub_24EB3D1F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, v5, v4);
}

uint64_t sub_24EAEDE14(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24EAEDE7C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for AwardImageFeature() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + v6);
  uint64_t v10 = *(void *)(v1 + v6 + 8);
  double v11 = *(double *)(v1 + v7);
  double v12 = *(double *)(v1 + v7 + 8);
  unint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *unint64_t v13 = v2;
  v13[1] = sub_24EAC68C4;
  return sub_24EAEBF84(a1, v8, v9, v10, v11, v12);
}

uint64_t sub_24EAEDFB8(uint64_t a1)
{
  return sub_24EAED4D4(a1, *(void *)(v1 + 16));
}

unint64_t sub_24EAEDFC0(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_24EB3DDD0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_24EB3E090();
        sub_24EB3E0C0();
        sub_24EB3E0C0();
        unint64_t result = sub_24EB3E0D0();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v9 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v10 = *(void *)(a2 + 48);
        double v11 = (_OWORD *)(v10 + 16 * v3);
        double v12 = (_OWORD *)(v10 + 16 * v6);
        if (v3 != v6 || v11 >= v12 + 1) {
          *double v11 = *v12;
        }
        uint64_t v13 = *(void *)(a2 + 56);
        uint64_t v14 = *(void *)(*(void *)(type metadata accessor for AwardImageLoadState() - 8) + 72);
        int64_t v15 = v14 * v3;
        unint64_t result = v13 + v14 * v3;
        int64_t v16 = v14 * v6;
        unint64_t v17 = v13 + v14 * v6 + v14;
        if (v15 < v16 || result >= v17)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v15 == v16) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v9 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v9) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    int64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  *int64_t v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_24EAEE1CC(uint64_t a1, char a2, double a3, double a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_24EAE9F58(a3, a4);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a2 & 1) == 0)
  {
    if (v17 >= v15 && (a2 & 1) == 0)
    {
      sub_24EB2D41C();
      goto LABEL_7;
    }
    sub_24EB2CC80(v15, a2 & 1);
    unint64_t v22 = sub_24EAE9F58(a3, a4);
    if ((v16 & 1) == (v23 & 1))
    {
      unint64_t v12 = v22;
      unint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    type metadata accessor for CGSize();
    uint64_t result = sub_24EB3E030();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7];
    uint64_t v20 = v19 + *(void *)(*(void *)(type metadata accessor for AwardImageLoadState() - 8) + 72) * v12;
    return sub_24EAEED0C(a1, v20);
  }
LABEL_13:
  return sub_24EAEE320(v12, a1, v18, a3, a4);
}

uint64_t sub_24EAEE320(unint64_t a1, uint64_t a2, void *a3, double a4, double a5)
{
  a3[(a1 >> 6) + 8] |= 1 << a1;
  unint64_t v8 = (double *)(a3[6] + 16 * a1);
  double *v8 = a4;
  v8[1] = a5;
  uint64_t v9 = a3[7];
  uint64_t State = type metadata accessor for AwardImageLoadState();
  uint64_t result = sub_24EAEDE14(a2, v9 + *(void *)(*(void *)(State - 8) + 72) * a1, (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
  uint64_t v12 = a3[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a3[2] = v14;
  }
  return result;
}

BOOL sub_24EAEE3CC(long long *a1, long long *a2)
{
  sub_24EAEECF4(a1, (uint64_t)v14);
  uint64_t v3 = v14[0];
  uint64_t v4 = v14[1];
  double v6 = *(double *)&v14[2];
  double v5 = *(double *)&v14[3];
  if ((v15 & 1) == 0)
  {
    sub_24EAEECF4(a2, (uint64_t)v12);
    if ((v13 & 1) == 0) {
      goto LABEL_3;
    }
    return 0;
  }
  sub_24EAEECF4(a2, (uint64_t)v12);
  if (v13 != 1) {
    return 0;
  }
LABEL_3:
  double v8 = *(double *)&v12[2];
  double v7 = *(double *)&v12[3];
  if (v3 == v12[0] && v4 == v12[1]) {
    return v5 == v7 && v6 == v8;
  }
  char v10 = sub_24EB3E010();
  BOOL result = 0;
  if (v10) {
    return v5 == v7 && v6 == v8;
  }
  return result;
}

uint64_t sub_24EAEE490(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *, double, double))
{
  uint64_t v27 = a2;
  BOOL v28 = a1;
  uint64_t State = type metadata accessor for AwardImageLoadState();
  uint64_t v7 = *(void *)(State - 8);
  uint64_t result = MEMORY[0x270FA5388](State - 8);
  char v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v11 = 0;
  uint64_t v12 = *(void *)(a3 + 64);
  uint64_t v29 = 0;
  uint64_t v30 = a3 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  int64_t v31 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v16 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_5;
    }
    int64_t v22 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v22 >= v31) {
      return sub_24EB2D930(v28, v27, v29, (void *)a3);
    }
    unint64_t v23 = *(void *)(v30 + 8 * v22);
    ++v11;
    if (!v23)
    {
      int64_t v11 = v22 + 1;
      if (v22 + 1 >= v31) {
        return sub_24EB2D930(v28, v27, v29, (void *)a3);
      }
      unint64_t v23 = *(void *)(v30 + 8 * v11);
      if (!v23)
      {
        int64_t v11 = v22 + 2;
        if (v22 + 2 >= v31) {
          return sub_24EB2D930(v28, v27, v29, (void *)a3);
        }
        unint64_t v23 = *(void *)(v30 + 8 * v11);
        if (!v23) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v15 = (v23 - 1) & v23;
    unint64_t v17 = __clz(__rbit64(v23)) + (v11 << 6);
LABEL_5:
    unint64_t v18 = (double *)(*(void *)(a3 + 48) + 16 * v17);
    double v19 = *v18;
    double v20 = v18[1];
    sub_24EAEDC98(*(void *)(a3 + 56) + *(void *)(v7 + 72) * v17, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
    char v21 = a4(v10, v19, v20);
    uint64_t result = sub_24EAEDB70((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
    if (v21)
    {
      *(unint64_t *)((char *)v28 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      if (__OFADD__(v29++, 1))
      {
        __break(1u);
        return sub_24EB2D930(v28, v27, v29, (void *)a3);
      }
    }
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v31) {
    return sub_24EB2D930(v28, v27, v29, (void *)a3);
  }
  unint64_t v23 = *(void *)(v30 + 8 * v24);
  if (v23)
  {
    int64_t v11 = v24;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v11 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v11 >= v31) {
      return sub_24EB2D930(v28, v27, v29, (void *)a3);
    }
    unint64_t v23 = *(void *)(v30 + 8 * v11);
    ++v24;
    if (v23) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_24EAEE72C(uint64_t isStackAllocationSafe, uint64_t (*a2)(char *, double, double), uint64_t a3)
{
  uint64_t v6 = isStackAllocationSafe;
  v13[1] = *MEMORY[0x263EF8340];
  char v7 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v8 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    uint64_t v10 = sub_24EAEE490((void *)((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0)), v8, v6, a2);
    if (v3) {
      swift_willThrow();
    }
    else {
      return v10;
    }
  }
  else
  {
    int64_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    a3 = sub_24EAEE490((unint64_t *)v11, v8, v6, a2);
    MEMORY[0x2533497D0](v11, -1, -1);
  }
  return a3;
}

uint64_t sub_24EAEE8A4()
{
  return sub_24EAEE934(&qword_26B1D2958, (void (*)(uint64_t))type metadata accessor for AwardImageAction);
}

uint64_t sub_24EAEE8EC()
{
  return sub_24EAEE934(&qword_26B1D2950, (void (*)(uint64_t))type metadata accessor for AwardImageAction);
}

uint64_t sub_24EAEE934(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24EAEE980()
{
  unint64_t result = qword_26B1D2838[0];
  if (!qword_26B1D2838[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26B1D2838);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AwardImageFeature(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EAEE9E8);
}

uint64_t sub_24EAEE9E8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_24EB3D1F0();
    size_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    int64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for AwardImageFeature(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EAEEAAC);
}

void *sub_24EAEEAAC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  double v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_24EB3D1F0();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t destroy for TaskIdentifier()
{
  return sub_24EAC6384();
}

uint64_t initializeWithCopy for TaskIdentifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  char v7 = *((unsigned char *)a2 + 32);
  sub_24EAC636C();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for TaskIdentifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  char v7 = *((unsigned char *)a2 + 32);
  sub_24EAC636C();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  sub_24EAC6384();
  return a1;
}

uint64_t assignWithTake for TaskIdentifier(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v3;
  sub_24EAC6384();
  return a1;
}

ValueMetadata *type metadata accessor for TaskIdentifier()
{
  return &type metadata for TaskIdentifier;
}

unint64_t sub_24EAEECA0()
{
  unint64_t result = qword_26B1D2830;
  if (!qword_26B1D2830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2830);
  }
  return result;
}

uint64_t sub_24EAEECF4(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(unsigned char *)(a2 + 32) = *((unsigned char *)a1 + 32);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_24EAEED0C(uint64_t a1, uint64_t a2)
{
  uint64_t State = type metadata accessor for AwardImageLoadState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(State - 8) + 40))(a2, a1, State);
  return a2;
}

uint64_t AwardCanvasPlaceholder.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AwardCanvasPlaceholder.referenceType.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t AwardCanvasPlaceholder.score.getter()
{
  return *(void *)(v0 + 24);
}

void __swiftcall AwardCanvasPlaceholder.init(identifier:referenceType:score:)(FitnessAwards::AwardCanvasPlaceholder *__return_ptr retstr, Swift::String identifier, FitnessAwards::PlaceholderReferenceType referenceType, Swift::Double_optional score)
{
  retstr->identifier = identifier;
  retstr->referenceType = referenceType;
  retstr->score.value = *(Swift::Double *)&score.is_nil;
  retstr->score.is_nil = v4 & 1;
}

uint64_t sub_24EAEEDD0(char a1)
{
  return *(void *)&aIdentifirefere[8 * a1];
}

uint64_t sub_24EAEEDF0()
{
  return sub_24EAEEDD0(*v0);
}

uint64_t sub_24EAEEDF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EAEFEE4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EAEEE20(uint64_t a1)
{
  unint64_t v2 = sub_24EAEF06C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAEEE5C(uint64_t a1)
{
  unint64_t v2 = sub_24EAEF06C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AwardCanvasPlaceholder.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3150);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v12 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v10 = *(void *)(v1 + 24);
  v9[3] = *(unsigned __int8 *)(v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EAEF06C();
  sub_24EB3E0F0();
  char v16 = 0;
  uint64_t v7 = v11;
  sub_24EB3DFB0();
  if (!v7)
  {
    char v15 = v12;
    char v14 = 1;
    sub_24EAEF0C0();
    sub_24EB3DFF0();
    char v13 = 2;
    sub_24EB3DF90();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_24EAEF06C()
{
  unint64_t result = qword_26B1D2B18;
  if (!qword_26B1D2B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2B18);
  }
  return result;
}

unint64_t sub_24EAEF0C0()
{
  unint64_t result = qword_26B1D2B58;
  if (!qword_26B1D2B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2B58);
  }
  return result;
}

uint64_t AwardCanvasPlaceholder.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932958);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EAEF06C();
  sub_24EB3E0E0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v22 = 0;
  uint64_t v9 = sub_24EB3DF10();
  uint64_t v11 = v10;
  char v20 = 1;
  sub_24EAEF350();
  swift_bridgeObjectRetain();
  sub_24EB3DF50();
  int v18 = v21;
  char v19 = 2;
  uint64_t v13 = sub_24EB3DEF0();
  char v14 = v8;
  char v16 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  *(unsigned char *)(a2 + 16) = v18;
  *(void *)(a2 + 24) = v13;
  *(unsigned char *)(a2 + 32) = v16 & 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

unint64_t sub_24EAEF350()
{
  unint64_t result = qword_269932960;
  if (!qword_269932960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932960);
  }
  return result;
}

uint64_t sub_24EAEF3A4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AwardCanvasPlaceholder.init(from:)(a1, a2);
}

uint64_t sub_24EAEF3BC(void *a1)
{
  return AwardCanvasPlaceholder.encode(to:)(a1);
}

uint64_t AwardCanvasPlaceholder.hash(into:)()
{
  int v1 = *(unsigned __int8 *)(v0 + 32);
  swift_bridgeObjectRetain();
  sub_24EB3DCA0();
  swift_bridgeObjectRelease();
  sub_24EB3DCA0();
  swift_bridgeObjectRelease();
  if (v1) {
    return sub_24EB3E0B0();
  }
  sub_24EB3E0B0();
  return sub_24EB3E0C0();
}

uint64_t AwardCanvasPlaceholder.hashValue.getter()
{
  int v1 = *(unsigned __int8 *)(v0 + 32);
  sub_24EB3E090();
  sub_24EB3DCA0();
  sub_24EB3DCA0();
  swift_bridgeObjectRelease();
  sub_24EB3E0B0();
  if (!v1) {
    sub_24EB3E0C0();
  }
  return sub_24EB3E0D0();
}

uint64_t sub_24EAEF760()
{
  char v1 = *(unsigned char *)(v0 + 32);
  sub_24EB3DCA0();
  sub_24EB3DCA0();
  swift_bridgeObjectRelease();
  if (v1) {
    return sub_24EB3E0B0();
  }
  sub_24EB3E0B0();
  return sub_24EB3E0C0();
}

uint64_t sub_24EAEF900()
{
  int v1 = *(unsigned __int8 *)(v0 + 32);
  sub_24EB3E090();
  sub_24EB3DCA0();
  sub_24EB3DCA0();
  swift_bridgeObjectRelease();
  sub_24EB3E0B0();
  if (!v1) {
    sub_24EB3E0C0();
  }
  return sub_24EB3E0D0();
}

uint64_t _s13FitnessAwards22AwardCanvasPlaceholderV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v2 = *(unsigned char *)(a1 + 16);
  double v3 = *(double *)(a1 + 24);
  char v4 = *(unsigned char *)(a1 + 32);
  char v5 = *(unsigned char *)(a2 + 16);
  double v6 = *(double *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  BOOL v8 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v8 || (v9 = sub_24EB3E010(), uint64_t result = 0, (v9 & 1) != 0))
  {
    if ((sub_24EAE6E98(v2, v5) & 1) == 0) {
      return 0;
    }
    if (v4)
    {
      if ((v7 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      if (v3 == v6) {
        char v11 = v7;
      }
      else {
        char v11 = 1;
      }
      if (v11) {
        return 0;
      }
    }
    return 1;
  }
  return result;
}

unint64_t sub_24EAEFB74()
{
  unint64_t result = qword_269932968;
  if (!qword_269932968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932968);
  }
  return result;
}

uint64_t initializeWithCopy for AwardCanvasPlaceholder(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AwardCanvasPlaceholder(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  return a1;
}

uint64_t assignWithTake for AwardCanvasPlaceholder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for AwardCanvasPlaceholder()
{
  return &type metadata for AwardCanvasPlaceholder;
}

unsigned char *storeEnumTagSinglePayload for AwardCanvasPlaceholder.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EAEFDA4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardCanvasPlaceholder.CodingKeys()
{
  return &type metadata for AwardCanvasPlaceholder.CodingKeys;
}

unint64_t sub_24EAEFDE0()
{
  unint64_t result = qword_269932970;
  if (!qword_269932970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932970);
  }
  return result;
}

unint64_t sub_24EAEFE38()
{
  unint64_t result = qword_26B1D2B28;
  if (!qword_26B1D2B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2B28);
  }
  return result;
}

unint64_t sub_24EAEFE90()
{
  unint64_t result = qword_26B1D2B20;
  if (!qword_26B1D2B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2B20);
  }
  return result;
}

uint64_t sub_24EAEFEE4(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v3 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x636E657265666572 && a2 == 0xED00006570795465 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65726F6373 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t AwardLockupEnvironment.init(navigateToDetail:resolveAwardDescription:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

ValueMetadata *type metadata accessor for AwardLockupEnvironment()
{
  return &type metadata for AwardLockupEnvironment;
}

BOOL static RemoteBrowsingIdentity.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_24EAF0070(char a1)
{
  if (a1) {
    return 0x7069636974726170;
  }
  else {
    return 0x756F6D796E6F6E61;
  }
}

uint64_t sub_24EAF00B4(uint64_t a1)
{
  unint64_t v2 = sub_24EAF05A4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAF00F0(uint64_t a1)
{
  unint64_t v2 = sub_24EAF05A4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EAF012C()
{
  return sub_24EAF0070(*v0);
}

uint64_t sub_24EAF0134@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EAF06D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EAF015C(uint64_t a1)
{
  unint64_t v2 = sub_24EAF04FC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAF0198(uint64_t a1)
{
  unint64_t v2 = sub_24EAF04FC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EAF01D4(uint64_t a1)
{
  unint64_t v2 = sub_24EAF0550();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAF0210(uint64_t a1)
{
  unint64_t v2 = sub_24EAF0550();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t RemoteBrowsingIdentity.encode(to:)(void *a1, int a2)
{
  int v18 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932978);
  uint64_t v16 = *(void *)(v3 - 8);
  uint64_t v17 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932980);
  uint64_t v6 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  BOOL v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932988);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  int v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EAF04FC();
  sub_24EB3E0F0();
  uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v10 + 8);
  if (v18)
  {
    char v20 = 1;
    sub_24EAF0550();
    sub_24EB3DF70();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    char v19 = 0;
    sub_24EAF05A4();
    sub_24EB3DF70();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v15);
  }
  return (*v13)(v12, v9);
}

unint64_t sub_24EAF04FC()
{
  unint64_t result = qword_269932990;
  if (!qword_269932990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932990);
  }
  return result;
}

unint64_t sub_24EAF0550()
{
  unint64_t result = qword_269932998;
  if (!qword_269932998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932998);
  }
  return result;
}

unint64_t sub_24EAF05A4()
{
  unint64_t result = qword_2699329A0;
  if (!qword_2699329A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699329A0);
  }
  return result;
}

uint64_t RemoteBrowsingIdentity.init(from:)(uint64_t a1)
{
  return sub_24EAF07D4(a1) & 1;
}

uint64_t sub_24EAF0614@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_24EAF07D4(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_24EAF0644(void *a1)
{
  return RemoteBrowsingIdentity.encode(to:)(a1, *v1);
}

uint64_t RemoteBrowsingIdentity.hash(into:)()
{
  return sub_24EB3E0A0();
}

uint64_t RemoteBrowsingIdentity.hashValue.getter()
{
  return sub_24EB3E0D0();
}

uint64_t sub_24EAF06D0(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x756F6D796E6F6E61 && a2 == 0xE900000000000073;
  if (v3 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7069636974726170 && a2 == 0xEB00000000746E61)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24EAF07D4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699329E8);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v22 = v2;
  uint64_t v23 = v3;
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699329F0);
  uint64_t v25 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  BOOL v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699329F8);
  uint64_t v24 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)a1, *(void *)(a1 + 24));
  sub_24EAF04FC();
  uint64_t v12 = v26;
  sub_24EB3E0E0();
  if (v12) {
    goto LABEL_7;
  }
  uint64_t v13 = v25;
  uint64_t v21 = v6;
  uint64_t v26 = a1;
  uint64_t v14 = sub_24EB3DF60();
  if (*(void *)(v14 + 16) != 1)
  {
    uint64_t v16 = sub_24EB3DE40();
    swift_allocError();
    int v18 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269931DD8);
    *int v18 = &type metadata for RemoteBrowsingIdentity;
    sub_24EB3DED0();
    sub_24EB3DE30();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v16 - 8) + 104))(v18, *MEMORY[0x263F8DCB0], v16);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v9);
    a1 = v26;
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1(a1);
    return a1;
  }
  a1 = *(unsigned __int8 *)(v14 + 32);
  if (a1)
  {
    LODWORD(v25) = *(unsigned __int8 *)(v14 + 32);
    char v28 = 1;
    sub_24EAF0550();
    sub_24EB3DEC0();
    uint64_t v15 = v24;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v22);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v11, v9);
    a1 = v25;
  }
  else
  {
    char v27 = 0;
    sub_24EAF05A4();
    sub_24EB3DEC0();
    uint64_t v19 = v24;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v21);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
  }
  __swift_destroy_boxed_opaque_existential_1(v26);
  return a1;
}

unint64_t sub_24EAF0C28()
{
  unint64_t result = qword_2699329A8;
  if (!qword_2699329A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699329A8);
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteBrowsingIdentity()
{
  return &type metadata for RemoteBrowsingIdentity;
}

unsigned char *_s13FitnessAwards22RemoteBrowsingIdentityOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EAF0D5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteBrowsingIdentity.CodingKeys()
{
  return &type metadata for RemoteBrowsingIdentity.CodingKeys;
}

ValueMetadata *type metadata accessor for RemoteBrowsingIdentity.AnonymousCodingKeys()
{
  return &type metadata for RemoteBrowsingIdentity.AnonymousCodingKeys;
}

ValueMetadata *type metadata accessor for RemoteBrowsingIdentity.ParticipantCodingKeys()
{
  return &type metadata for RemoteBrowsingIdentity.ParticipantCodingKeys;
}

unint64_t sub_24EAF0DB8()
{
  unint64_t result = qword_2699329B0;
  if (!qword_2699329B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699329B0);
  }
  return result;
}

unint64_t sub_24EAF0E10()
{
  unint64_t result = qword_2699329B8;
  if (!qword_2699329B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699329B8);
  }
  return result;
}

unint64_t sub_24EAF0E68()
{
  unint64_t result = qword_2699329C0;
  if (!qword_2699329C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699329C0);
  }
  return result;
}

unint64_t sub_24EAF0EC0()
{
  unint64_t result = qword_2699329C8;
  if (!qword_2699329C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699329C8);
  }
  return result;
}

unint64_t sub_24EAF0F18()
{
  unint64_t result = qword_2699329D0;
  if (!qword_2699329D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699329D0);
  }
  return result;
}

unint64_t sub_24EAF0F70()
{
  unint64_t result = qword_2699329D8;
  if (!qword_2699329D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699329D8);
  }
  return result;
}

unint64_t sub_24EAF0FC8()
{
  unint64_t result = qword_2699329E0;
  if (!qword_2699329E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699329E0);
  }
  return result;
}

BOOL static AchievementEnvironmentCacheMonitorAction.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t AchievementEnvironmentCacheMonitorAction.hash(into:)()
{
  return sub_24EB3E0A0();
}

uint64_t sub_24EAF1060(char a1)
{
  if (a1) {
    return 0x6570704177656976;
  }
  else {
    return 0xD000000000000010;
  }
}

uint64_t sub_24EAF10A4(uint64_t a1)
{
  unint64_t v2 = sub_24EAF1588();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAF10E0(uint64_t a1)
{
  unint64_t v2 = sub_24EAF1588();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EAF111C()
{
  return sub_24EAF1060(*v0);
}

uint64_t sub_24EAF1124@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EAF1EA4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EAF114C(uint64_t a1)
{
  unint64_t v2 = sub_24EAF14E0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAF1188(uint64_t a1)
{
  unint64_t v2 = sub_24EAF14E0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EAF11C4(uint64_t a1)
{
  unint64_t v2 = sub_24EAF1534();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAF1200(uint64_t a1)
{
  unint64_t v2 = sub_24EAF1534();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AchievementEnvironmentCacheMonitorAction.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D31C8);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x270FA5388](v3);
  int v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D31D0);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D31C0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EAF14E0();
  sub_24EB3E0F0();
  uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  if (v12)
  {
    char v22 = 1;
    sub_24EAF1534();
    uint64_t v14 = v18;
    sub_24EB3DF70();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    char v21 = 0;
    sub_24EAF1588();
    sub_24EB3DF70();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*v13)(v11, v8);
}

unint64_t sub_24EAF14E0()
{
  unint64_t result = qword_26B1D2CE8;
  if (!qword_26B1D2CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2CE8);
  }
  return result;
}

unint64_t sub_24EAF1534()
{
  unint64_t result = qword_26B1D2D00;
  if (!qword_26B1D2D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2D00);
  }
  return result;
}

unint64_t sub_24EAF1588()
{
  unint64_t result = qword_269932A00;
  if (!qword_269932A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932A00);
  }
  return result;
}

uint64_t AchievementEnvironmentCacheMonitorAction.hashValue.getter()
{
  return sub_24EB3E0D0();
}

uint64_t AchievementEnvironmentCacheMonitorAction.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  int64_t v31 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932A08);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932A10);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932A18);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EAF14E0();
  uint64_t v11 = v32;
  sub_24EB3E0E0();
  if (v11) {
    goto LABEL_6;
  }
  char v32 = a1;
  uint64_t v13 = v30;
  char v12 = v31;
  uint64_t v14 = v10;
  uint64_t v15 = sub_24EB3DF60();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_24EB3DE40();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269931DD8);
    *char v22 = &type metadata for AchievementEnvironmentCacheMonitorAction;
    sub_24EB3DED0();
    sub_24EB3DE30();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x263F8DCB0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    a1 = v32;
LABEL_6:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v23);
  }
  v26[1] = v15;
  char v16 = *(unsigned char *)(v15 + 32);
  if (v16)
  {
    char v17 = *(unsigned char *)(v15 + 32);
    char v34 = 1;
    sub_24EAF1534();
    int v18 = v14;
    sub_24EB3DEC0();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v8);
    char v16 = v17;
  }
  else
  {
    char v33 = 0;
    sub_24EAF1588();
    sub_24EB3DEC0();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v8);
  }
  *char v12 = v16;
  uint64_t v23 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_1(v23);
}

uint64_t sub_24EAF1A7C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return AchievementEnvironmentCacheMonitorAction.init(from:)(a1, a2);
}

uint64_t sub_24EAF1A94(void *a1)
{
  return AchievementEnvironmentCacheMonitorAction.encode(to:)(a1);
}

unint64_t sub_24EAF1AB0()
{
  unint64_t result = qword_269932A20;
  if (!qword_269932A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932A20);
  }
  return result;
}

ValueMetadata *type metadata accessor for AchievementEnvironmentCacheMonitorAction()
{
  return &type metadata for AchievementEnvironmentCacheMonitorAction;
}

unsigned char *_s13FitnessAwards40AchievementEnvironmentCacheMonitorActionOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EAF1BE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AchievementEnvironmentCacheMonitorAction.CodingKeys()
{
  return &type metadata for AchievementEnvironmentCacheMonitorAction.CodingKeys;
}

ValueMetadata *type metadata accessor for AchievementEnvironmentCacheMonitorAction.ClearAwardStatesCodingKeys()
{
  return &type metadata for AchievementEnvironmentCacheMonitorAction.ClearAwardStatesCodingKeys;
}

ValueMetadata *type metadata accessor for AchievementEnvironmentCacheMonitorAction.ViewAppearedCodingKeys()
{
  return &type metadata for AchievementEnvironmentCacheMonitorAction.ViewAppearedCodingKeys;
}

unint64_t sub_24EAF1C40()
{
  unint64_t result = qword_269932A28;
  if (!qword_269932A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932A28);
  }
  return result;
}

unint64_t sub_24EAF1C98()
{
  unint64_t result = qword_26B1D2D20;
  if (!qword_26B1D2D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2D20);
  }
  return result;
}

unint64_t sub_24EAF1CF0()
{
  unint64_t result = qword_26B1D2D18;
  if (!qword_26B1D2D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2D18);
  }
  return result;
}

unint64_t sub_24EAF1D48()
{
  unint64_t result = qword_26B1D2D10;
  if (!qword_26B1D2D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2D10);
  }
  return result;
}

unint64_t sub_24EAF1DA0()
{
  unint64_t result = qword_26B1D2D08;
  if (!qword_26B1D2D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2D08);
  }
  return result;
}

unint64_t sub_24EAF1DF8()
{
  unint64_t result = qword_26B1D2CF8;
  if (!qword_26B1D2CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2CF8);
  }
  return result;
}

unint64_t sub_24EAF1E50()
{
  unint64_t result = qword_26B1D2CF0;
  if (!qword_26B1D2CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2CF0);
  }
  return result;
}

uint64_t sub_24EAF1EA4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x800000024EB4AA50 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6570704177656976 && a2 == 0xEC00000064657261)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t AwardToastDetail.init(templateUniqueNames:title:subtitle:imageData:type:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  *(void *)a8 = result;
  *(void *)(a8 + 8) = a2;
  *(void *)(a8 + 16) = a3;
  *(void *)(a8 + 24) = a4;
  *(void *)(a8 + 32) = a5;
  *(void *)(a8 + 40) = a6;
  *(unsigned char *)(a8 + 48) = a7;
  return result;
}

uint64_t AwardToastDetail.templateUniqueNames.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AwardToastDetail.title.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AwardToastDetail.subtitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AwardToastDetail.imageData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AwardToastDetail.type.getter()
{
  return *(unsigned __int8 *)(v0 + 48);
}

unint64_t sub_24EAF2030(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656C746974;
      break;
    case 2:
      unint64_t result = 0x656C746974627573;
      break;
    case 3:
      unint64_t result = 0x7461446567616D69;
      break;
    case 4:
      unint64_t result = 1701869940;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24EAF20DC()
{
  return sub_24EAF2030(*v0);
}

uint64_t sub_24EAF20E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EAF4F64(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EAF210C(uint64_t a1)
{
  unint64_t v2 = sub_24EAF2448();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAF2148(uint64_t a1)
{
  unint64_t v2 = sub_24EAF2448();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AwardToastDetail.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932A30);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v19 = v1[2];
  uint64_t v20 = v8;
  uint64_t v10 = v1[3];
  uint64_t v17 = v1[4];
  uint64_t v18 = v10;
  uint64_t v16 = v1[5];
  int v15 = *((unsigned __int8 *)v1 + 48);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EAF2448();
  sub_24EB3E0F0();
  uint64_t v22 = v9;
  char v21 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269932648);
  sub_24EADC284(&qword_269932650);
  sub_24EB3DFF0();
  if (!v2)
  {
    uint64_t v11 = v16;
    char v12 = v15;
    LOBYTE(v22) = 1;
    sub_24EB3DFB0();
    LOBYTE(v22) = 2;
    sub_24EB3DF80();
    uint64_t v22 = v11;
    char v21 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269932A40);
    sub_24EAF29D0(&qword_269932A48, (void (*)(void))sub_24EAF249C);
    sub_24EB3DFF0();
    LOBYTE(v22) = v12;
    char v21 = 4;
    sub_24EAF24F0();
    sub_24EB3DFF0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_24EAF2448()
{
  unint64_t result = qword_269932A38;
  if (!qword_269932A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932A38);
  }
  return result;
}

unint64_t sub_24EAF249C()
{
  unint64_t result = qword_269932A50;
  if (!qword_269932A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932A50);
  }
  return result;
}

unint64_t sub_24EAF24F0()
{
  unint64_t result = qword_269932A58;
  if (!qword_269932A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932A58);
  }
  return result;
}

uint64_t AwardToastDetail.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932A60);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EAF2448();
  sub_24EB3E0E0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269932648);
  char v29 = 0;
  sub_24EADC284(&qword_269932690);
  sub_24EB3DF50();
  uint64_t v9 = v30;
  LOBYTE(v30) = 1;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_24EB3DF10();
  uint64_t v28 = v11;
  uint64_t v25 = v10;
  uint64_t v27 = v9;
  LOBYTE(v30) = 2;
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_24EB3DEE0();
  uint64_t v13 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269932A40);
  char v29 = 3;
  sub_24EAF29D0(&qword_269932A68, (void (*)(void))sub_24EAF2A4C);
  swift_bridgeObjectRetain();
  sub_24EB3DF50();
  uint64_t v26 = v13;
  uint64_t v14 = v30;
  char v29 = 4;
  sub_24EAF2AA0();
  uint64_t v23 = v14;
  swift_bridgeObjectRetain();
  sub_24EB3DF50();
  uint64_t v15 = v27;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  char v17 = v30;
  uint64_t v18 = v25;
  uint64_t v19 = v26;
  *(void *)a2 = v15;
  *(void *)(a2 + 8) = v18;
  uint64_t v21 = v23;
  uint64_t v20 = v24;
  *(void *)(a2 + 16) = v28;
  *(void *)(a2 + 24) = v20;
  *(void *)(a2 + 32) = v19;
  *(void *)(a2 + 40) = v21;
  *(unsigned char *)(a2 + 48) = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EAF29D0(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269932A40);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24EAF2A4C()
{
  unint64_t result = qword_269932A70;
  if (!qword_269932A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932A70);
  }
  return result;
}

unint64_t sub_24EAF2AA0()
{
  unint64_t result = qword_269932A78;
  if (!qword_269932A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932A78);
  }
  return result;
}

uint64_t sub_24EAF2AF4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AwardToastDetail.init(from:)(a1, a2);
}

uint64_t sub_24EAF2B0C(void *a1)
{
  return AwardToastDetail.encode(to:)(a1);
}

uint64_t AwardToastDetail.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v5 = v1[4];
  uint64_t v4 = v1[5];
  sub_24EB3E0A0();
  uint64_t v6 = *(void *)(v3 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = v3 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_24EB3DCA0();
      swift_bridgeObjectRelease();
      v7 += 16;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_24EB3DCA0();
  swift_bridgeObjectRelease();
  sub_24EB3E0B0();
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_24EB3DCA0();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_24EAF479C(a1, v4);
  swift_bridgeObjectRelease();
  return sub_24EB3E0A0();
}

uint64_t AwardToastDetail.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 40);
  char v3 = *(unsigned char *)(v0 + 48);
  *(_OWORD *)&v5[72] = *(_OWORD *)v0;
  uint64_t v6 = v1;
  long long v7 = *(_OWORD *)(v0 + 24);
  uint64_t v8 = v2;
  char v9 = v3;
  sub_24EB3E090();
  AwardToastDetail.hash(into:)((uint64_t)v5);
  return sub_24EB3E0D0();
}

uint64_t sub_24EAF2CD8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 40);
  char v3 = *(unsigned char *)(v0 + 48);
  *(_OWORD *)&v5[72] = *(_OWORD *)v0;
  uint64_t v6 = v1;
  long long v7 = *(_OWORD *)(v0 + 24);
  uint64_t v8 = v2;
  char v9 = v3;
  sub_24EB3E090();
  AwardToastDetail.hash(into:)((uint64_t)v5);
  return sub_24EB3E0D0();
}

uint64_t sub_24EAF2D48()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 40);
  char v3 = *(unsigned char *)(v0 + 48);
  *(_OWORD *)&v5[72] = *(_OWORD *)v0;
  uint64_t v6 = v1;
  long long v7 = *(_OWORD *)(v0 + 24);
  uint64_t v8 = v2;
  char v9 = v3;
  sub_24EB3E090();
  AwardToastDetail.hash(into:)((uint64_t)v5);
  return sub_24EB3E0D0();
}

uint64_t sub_24EAF2DB0(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a2 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v24 = v3 & *(void *)(a2 + 64);
  int64_t v21 = (unint64_t)(v2 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v4 = 0;
  int64_t v5 = 0;
  while (1)
  {
    if (v24)
    {
      unint64_t v7 = __clz(__rbit64(v24));
      v24 &= v24 - 1;
      int64_t v23 = v5;
      unint64_t v8 = v7 | (v5 << 6);
      goto LABEL_20;
    }
    int64_t v9 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v9 >= v21) {
      goto LABEL_34;
    }
    unint64_t v10 = *(void *)(v20 + 8 * v9);
    int64_t v11 = v5 + 1;
    if (!v10)
    {
      int64_t v11 = v5 + 2;
      if (v5 + 2 >= v21) {
        goto LABEL_34;
      }
      unint64_t v10 = *(void *)(v20 + 8 * v11);
      if (!v10) {
        break;
      }
    }
LABEL_19:
    unint64_t v24 = (v10 - 1) & v10;
    int64_t v23 = v11;
    unint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_20:
    unint64_t v13 = *(void *)(*(void *)(a2 + 56) + 8 * v8);
    swift_bridgeObjectRetain();
    sub_24EAA8EB8(v13);
    sub_24EB3DCA0();
    swift_bridgeObjectRelease();
    if (v13 < 2)
    {
      sub_24EB3E0A0();
    }
    else
    {
      sub_24EB3E0A0();
      sub_24EB3E0A0();
      uint64_t v27 = *(void *)(v13 + 16);
      if (v27)
      {
        uint64_t v14 = 0;
        unint64_t v25 = v13;
        unint64_t v26 = v13 + 32;
        do
        {
          uint64_t v15 = *(void *)(v26 + 40 * v14 + 32);
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_24EB3DCA0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          sub_24EB3DCA0();
          swift_bridgeObjectRelease();
          sub_24EB3E0A0();
          uint64_t v16 = *(void *)(v15 + 16);
          if (v16)
          {
            swift_bridgeObjectRetain();
            char v17 = (unsigned __int8 *)(v15 + 64);
            do
            {
              int v18 = *v17;
              swift_bridgeObjectRetain();
              sub_24EB3DCA0();
              sub_24EB3DCA0();
              swift_bridgeObjectRelease();
              sub_24EB3E0B0();
              if (!v18) {
                sub_24EB3E0C0();
              }
              swift_bridgeObjectRelease();
              v17 += 40;
              --v16;
            }
            while (v16);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            unint64_t v13 = v25;
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          ++v14;
        }
        while (v14 != v27);
      }
      sub_24EAA8EF4(v13);
    }
    uint64_t v6 = sub_24EB3E0D0();
    int64_t v5 = v23;
    v4 ^= v6;
  }
  uint64_t v12 = v5 + 3;
  if (v5 + 3 < v21)
  {
    unint64_t v10 = *(void *)(v20 + 8 * v12);
    if (!v10)
    {
      while (1)
      {
        int64_t v11 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          break;
        }
        if (v11 >= v21) {
          goto LABEL_34;
        }
        unint64_t v10 = *(void *)(v20 + 8 * v11);
        ++v12;
        if (v10) {
          goto LABEL_19;
        }
      }
LABEL_36:
      __break(1u);
      JUMPOUT(0x24EAF3250);
    }
    int64_t v11 = v5 + 3;
    goto LABEL_19;
  }
LABEL_34:
  swift_release();
  return sub_24EB3E0A0();
}

uint64_t sub_24EAF3274(long long *a1, uint64_t a2)
{
  uint64_t v54 = sub_24EB3D1F0();
  uint64_t v4 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  uint64_t v53 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t State = type metadata accessor for AwardProgressLoadState();
  uint64_t v56 = *(void *)(State - 8);
  uint64_t v7 = MEMORY[0x270FA5388](State);
  uint64_t v58 = (uint64_t)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v59 = (uint64_t)&v47 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3058);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  unint64_t v13 = (int64_t *)((char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v47 - v14;
  uint64_t v16 = *(void *)(a2 + 64);
  uint64_t v48 = a2 + 64;
  uint64_t v17 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  uint64_t v51 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v52 = (void (**)(char *, uint64_t, uint64_t))(v4 + 32);
  int64_t v55 = (unint64_t)(v17 + 63) >> 6;
  int64_t v47 = v55 - 1;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v21 = 0;
  int64_t v57 = 0;
  uint64_t v49 = State;
  uint64_t v50 = a2;
  while (1)
  {
    uint64_t v60 = v21;
    if (v19)
    {
      unint64_t v24 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v25 = v24 | (v57 << 6);
      goto LABEL_8;
    }
    int64_t v31 = v57 + 1;
    if (__OFADD__(v57, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v31 < v55)
    {
      unint64_t v32 = *(void *)(v48 + 8 * v31);
      if (v32) {
        goto LABEL_12;
      }
      int64_t v33 = v57 + 2;
      ++v57;
      if (v31 + 1 < v55)
      {
        unint64_t v32 = *(void *)(v48 + 8 * v33);
        if (v32)
        {
          ++v31;
          goto LABEL_12;
        }
        int64_t v34 = v31 + 2;
        int64_t v57 = v31 + 1;
        if (v31 + 2 < v55) {
          break;
        }
      }
    }
LABEL_24:
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D1F30);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v13, 1, 1, v35);
    unint64_t v19 = 0;
LABEL_25:
    sub_24EABF928((uint64_t)v13, (uint64_t)v15, &qword_26B1D3058);
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D1F30);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 48))(v15, 1, v36) == 1)
    {
      swift_release();
      return sub_24EB3E0A0();
    }
    uint64_t v37 = v59;
    sub_24EAF5208((uint64_t)&v15[*(int *)(v36 + 48)], v59, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
    uint64_t v38 = *((void *)a1 + 8);
    long long v39 = a1[1];
    long long v61 = *a1;
    long long v62 = v39;
    long long v40 = a1[3];
    long long v63 = a1[2];
    long long v64 = v40;
    uint64_t v65 = v38;
    sub_24EB3DCA0();
    swift_bridgeObjectRelease();
    sub_24EAF51A0(v37, v58, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v42 = *(void *)v58;
        uint64_t v43 = *(void *)(v58 + 8);
        uint64_t v45 = *(void *)(v58 + 16);
        uint64_t v44 = *(void *)(v58 + 24);
        char v46 = *(unsigned char *)(v58 + 32);
        sub_24EB3E0A0();
        sub_24EB3E0A0();
        if (v46)
        {
          sub_24EB3E0A0();
          sub_24EB3E0B0();
          sub_24EB3E0A0();
        }
        else
        {
          sub_24EB3DCA0();
          sub_24EB3E0C0();
          sub_24EB3E0C0();
          sub_24EAB1A70(v42, v43, v45, v44, 0);
        }
        a2 = v50;
      }
      else
      {
        sub_24EB3E0A0();
      }
    }
    else
    {
      uint64_t v22 = v53;
      uint64_t v23 = v54;
      (*v52)(v53, v58, v54);
      sub_24EB3E0A0();
      sub_24EAF5158(&qword_2699320C0, MEMORY[0x263F07508]);
      sub_24EB3DBD0();
      (*v51)(v22, v23);
    }
    sub_24EAF5270(v59, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
    uint64_t result = sub_24EB3E0D0();
    uint64_t v21 = result ^ v60;
  }
  unint64_t v32 = *(void *)(v48 + 8 * v34);
  if (v32)
  {
    v31 += 2;
LABEL_12:
    unint64_t v19 = (v32 - 1) & v32;
    unint64_t v25 = __clz(__rbit64(v32)) + (v31 << 6);
    int64_t v57 = v31;
LABEL_8:
    unint64_t v26 = (uint64_t *)(*(void *)(a2 + 48) + 16 * v25);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    uint64_t v29 = *(void *)(a2 + 56) + *(void *)(v56 + 72) * v25;
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D1F30);
    sub_24EAF51A0(v29, (uint64_t)v13 + *(int *)(v30 + 48), (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
    *unint64_t v13 = v28;
    v13[1] = v27;
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v13, 0, 1, v30);
    swift_bridgeObjectRetain();
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v31 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      break;
    }
    if (v31 >= v55)
    {
      int64_t v57 = v47;
      goto LABEL_24;
    }
    unint64_t v32 = *(void *)(v48 + 8 * v31);
    ++v34;
    if (v32) {
      goto LABEL_12;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_24EAF38F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a2 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v10 = 0;
  int64_t v11 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v11 << 6);
      goto LABEL_5;
    }
    int64_t v18 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v18 >= v8) {
      goto LABEL_19;
    }
    unint64_t v19 = *(void *)(v4 + 8 * v18);
    ++v11;
    if (!v19)
    {
      int64_t v11 = v18 + 1;
      if (v18 + 1 >= v8) {
        goto LABEL_19;
      }
      unint64_t v19 = *(void *)(v4 + 8 * v11);
      if (!v19) {
        break;
      }
    }
LABEL_18:
    unint64_t v7 = (v19 - 1) & v19;
    unint64_t v13 = __clz(__rbit64(v19)) + (v11 << 6);
LABEL_5:
    uint64_t v14 = *(void *)(*(void *)(a2 + 56) + 8 * v13);
    uint64_t v15 = *(void *)(a1 + 64);
    long long v16 = *(_OWORD *)(a1 + 16);
    v21[0] = *(_OWORD *)a1;
    v21[1] = v16;
    long long v17 = *(_OWORD *)(a1 + 48);
    v21[2] = *(_OWORD *)(a1 + 32);
    v21[3] = v17;
    uint64_t v22 = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24EB3DCA0();
    swift_bridgeObjectRelease();
    sub_24EAF3AAC(v21, v14);
    swift_bridgeObjectRelease();
    uint64_t result = sub_24EB3E0D0();
    v10 ^= result;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v8)
  {
LABEL_19:
    swift_release();
    return sub_24EB3E0A0();
  }
  unint64_t v19 = *(void *)(v4 + 8 * v20);
  if (v19)
  {
    int64_t v11 = v20;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v11 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v11 >= v8) {
      goto LABEL_19;
    }
    unint64_t v19 = *(void *)(v4 + 8 * v11);
    ++v20;
    if (v19) {
      goto LABEL_18;
    }
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_24EAF3AAC(long long *a1, uint64_t a2)
{
  uint64_t v55 = sub_24EB3D190();
  uint64_t v4 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v54 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_24EB3D1F0();
  uint64_t v6 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  uint64_t v52 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t State = type metadata accessor for AwardImageLoadState();
  uint64_t v57 = *(void *)(State - 8);
  uint64_t v8 = MEMORY[0x270FA5388](State);
  uint64_t v61 = (uint64_t)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  int64_t v11 = (char *)&v46 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3088);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (int64_t *)((char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v13);
  long long v17 = (char *)&v46 - v16;
  uint64_t v18 = *(void *)(a2 + 64);
  uint64_t v47 = a2 + 64;
  uint64_t v19 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & v18;
  uint64_t v51 = (void (**)(char *, uint64_t, uint64_t))(v4 + 32);
  uint64_t v50 = v4 + 8;
  uint64_t v49 = (void (**)(char *, uint64_t, uint64_t))(v6 + 32);
  uint64_t v48 = v6 + 8;
  int64_t v56 = (unint64_t)(v19 + 63) >> 6;
  int64_t v46 = v56 - 1;
  uint64_t v58 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v23 = 0;
  int64_t v60 = 0;
  unint64_t v24 = (uint64_t *)&unk_26B1D3080;
  while (1)
  {
    if (v21)
    {
      unint64_t v28 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      unint64_t v29 = v28 | (v60 << 6);
      goto LABEL_9;
    }
    int64_t v35 = v60 + 1;
    if (__OFADD__(v60, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v35 < v56)
    {
      unint64_t v36 = *(void *)(v47 + 8 * v35);
      if (v36) {
        goto LABEL_13;
      }
      int64_t v37 = v60 + 2;
      ++v60;
      if (v35 + 1 < v56)
      {
        unint64_t v36 = *(void *)(v47 + 8 * v37);
        if (v36)
        {
          ++v35;
          goto LABEL_13;
        }
        int64_t v38 = v35 + 2;
        int64_t v60 = v35 + 1;
        if (v35 + 2 < v56) {
          break;
        }
      }
    }
LABEL_25:
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(v24);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v15, 1, 1, v39);
    unint64_t v21 = 0;
LABEL_26:
    sub_24EABF928((uint64_t)v15, (uint64_t)v17, &qword_26B1D3088);
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(v24);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 48))(v17, 1, v40) == 1)
    {
      swift_release();
      return sub_24EB3E0A0();
    }
    int64_t v41 = v24;
    sub_24EAF5208((uint64_t)&v17[*(int *)(v40 + 48)], (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
    uint64_t v42 = *((void *)a1 + 8);
    long long v43 = a1[1];
    long long v62 = *a1;
    long long v63 = v43;
    long long v44 = a1[3];
    long long v64 = a1[2];
    long long v65 = v44;
    uint64_t v66 = v42;
    sub_24EB3E0C0();
    sub_24EB3E0C0();
    sub_24EAF51A0((uint64_t)v11, v61, (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (!EnumCaseMultiPayload)
    {
      unint64_t v26 = v52;
      uint64_t v25 = v53;
      (*v49)(v52, v61, v53);
      sub_24EB3E0A0();
      sub_24EAF5158(&qword_2699320C0, MEMORY[0x263F07508]);
      sub_24EB3DBD0();
      uint64_t v27 = &v67;
      goto LABEL_5;
    }
    if (EnumCaseMultiPayload == 1)
    {
      unint64_t v26 = v54;
      uint64_t v25 = v55;
      (*v51)(v54, v61, v55);
      sub_24EB3E0A0();
      sub_24EAF5158(&qword_269932AA0, MEMORY[0x263F06EA8]);
      sub_24EB3DBD0();
      uint64_t v27 = &v68;
LABEL_5:
      (*(void (**)(char *, uint64_t))*(v27 - 32))(v26, v25);
      goto LABEL_6;
    }
    sub_24EB3E0A0();
LABEL_6:
    unint64_t v24 = v41;
    sub_24EAF5270((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
    uint64_t result = sub_24EB3E0D0();
    v23 ^= result;
  }
  unint64_t v36 = *(void *)(v47 + 8 * v38);
  if (v36)
  {
    v35 += 2;
LABEL_13:
    unint64_t v21 = (v36 - 1) & v36;
    unint64_t v29 = __clz(__rbit64(v36)) + (v35 << 6);
    int64_t v60 = v35;
LABEL_9:
    uint64_t v30 = (uint64_t *)(*(void *)(v58 + 48) + 16 * v29);
    uint64_t v31 = *v30;
    uint64_t v32 = v30[1];
    uint64_t v33 = *(void *)(v58 + 56) + *(void *)(v57 + 72) * v29;
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(v24);
    sub_24EAF51A0(v33, (uint64_t)v15 + *(int *)(v34 + 48), (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
    *uint64_t v15 = v31;
    v15[1] = v32;
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v15, 0, 1, v34);
    goto LABEL_26;
  }
  while (1)
  {
    int64_t v35 = v38 + 1;
    if (__OFADD__(v38, 1)) {
      break;
    }
    if (v35 >= v56)
    {
      int64_t v60 = v46;
      goto LABEL_25;
    }
    unint64_t v36 = *(void *)(v47 + 8 * v35);
    ++v38;
    if (v36) {
      goto LABEL_13;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_24EAF41B8(long long *a1, uint64_t a2)
{
  uint64_t v46 = sub_24EB3D1F0();
  uint64_t v4 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v45 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t State = type metadata accessor for AwardEarnedLoadState();
  uint64_t v48 = *(void *)(State - 8);
  uint64_t v6 = MEMORY[0x270FA5388](State);
  uint64_t v52 = (uint64_t)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v41 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3050);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (int64_t *)((char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v41 - v14;
  uint64_t v16 = *(void *)(a2 + 64);
  uint64_t v42 = a2 + 64;
  uint64_t v17 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  long long v43 = (void (**)(char *, uint64_t))(v4 + 8);
  long long v44 = (void (**)(char *, uint64_t, uint64_t))(v4 + 32);
  int64_t v47 = (unint64_t)(v17 + 63) >> 6;
  int64_t v41 = v47 - 1;
  uint64_t v49 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v21 = 0;
  int64_t v51 = 0;
  while (1)
  {
    if (v19)
    {
      unint64_t v22 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v23 = v22 | (v51 << 6);
      goto LABEL_9;
    }
    int64_t v29 = v51 + 1;
    if (__OFADD__(v51, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v29 < v47)
    {
      unint64_t v30 = *(void *)(v42 + 8 * v29);
      if (v30) {
        goto LABEL_13;
      }
      int64_t v31 = v51 + 2;
      ++v51;
      if (v29 + 1 < v47)
      {
        unint64_t v30 = *(void *)(v42 + 8 * v31);
        if (v30)
        {
          ++v29;
          goto LABEL_13;
        }
        int64_t v32 = v29 + 2;
        int64_t v51 = v29 + 1;
        if (v29 + 2 < v47) {
          break;
        }
      }
    }
LABEL_25:
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932AA8);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v13, 1, 1, v33);
    unint64_t v19 = 0;
LABEL_26:
    sub_24EABF928((uint64_t)v13, (uint64_t)v15, &qword_26B1D3050);
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932AA8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v15, 1, v34) == 1)
    {
      swift_release();
      return sub_24EB3E0A0();
    }
    sub_24EAF5208((uint64_t)&v15[*(int *)(v34 + 48)], (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for AwardEarnedLoadState);
    uint64_t v35 = *((void *)a1 + 8);
    long long v36 = a1[1];
    long long v53 = *a1;
    long long v54 = v36;
    long long v37 = a1[3];
    long long v55 = a1[2];
    long long v56 = v37;
    uint64_t v57 = v35;
    sub_24EB3DCA0();
    swift_bridgeObjectRelease();
    sub_24EAF51A0((uint64_t)v9, v52, (uint64_t (*)(void))type metadata accessor for AwardEarnedLoadState);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1) {
        sub_24EB3E0A0();
      }
      sub_24EB3E0A0();
    }
    else
    {
      uint64_t v39 = v45;
      uint64_t v40 = v46;
      (*v44)(v45, v52, v46);
      sub_24EB3E0A0();
      sub_24EAF5158(&qword_2699320C0, MEMORY[0x263F07508]);
      sub_24EB3DBD0();
      (*v43)(v39, v40);
    }
    sub_24EAF5270((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for AwardEarnedLoadState);
    uint64_t result = sub_24EB3E0D0();
    v21 ^= result;
  }
  unint64_t v30 = *(void *)(v42 + 8 * v32);
  if (v30)
  {
    v29 += 2;
LABEL_13:
    unint64_t v19 = (v30 - 1) & v30;
    unint64_t v23 = __clz(__rbit64(v30)) + (v29 << 6);
    int64_t v51 = v29;
LABEL_9:
    unint64_t v24 = (uint64_t *)(*(void *)(v49 + 48) + 16 * v23);
    uint64_t v26 = *v24;
    uint64_t v25 = v24[1];
    uint64_t v27 = *(void *)(v49 + 56) + *(void *)(v48 + 72) * v23;
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932AA8);
    sub_24EAF51A0(v27, (uint64_t)v13 + *(int *)(v28 + 48), (uint64_t (*)(void))type metadata accessor for AwardEarnedLoadState);
    *uint64_t v13 = v26;
    v13[1] = v25;
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v13, 0, 1, v28);
    swift_bridgeObjectRetain();
    goto LABEL_26;
  }
  while (1)
  {
    int64_t v29 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v29 >= v47)
    {
      int64_t v51 = v41;
      goto LABEL_25;
    }
    unint64_t v30 = *(void *)(v42 + 8 * v29);
    ++v32;
    if (v30) {
      goto LABEL_13;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_24EAF479C(uint64_t a1, uint64_t a2)
{
  uint64_t v18 = a2 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a2 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  int64_t v9 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v10 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    int64_t v15 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v15 >= v6) {
      goto LABEL_19;
    }
    unint64_t v16 = *(void *)(v18 + 8 * v15);
    ++v9;
    if (!v16)
    {
      int64_t v9 = v15 + 1;
      if (v15 + 1 >= v6) {
        goto LABEL_19;
      }
      unint64_t v16 = *(void *)(v18 + 8 * v9);
      if (!v16) {
        break;
      }
    }
LABEL_18:
    unint64_t v5 = (v16 - 1) & v16;
    unint64_t v11 = __clz(__rbit64(v16)) + (v9 << 6);
LABEL_5:
    uint64_t v12 = (uint64_t *)(*(void *)(a2 + 56) + 16 * v11);
    uint64_t v13 = *v12;
    unint64_t v14 = v12[1];
    swift_bridgeObjectRetain();
    sub_24EAD3F70(v13, v14);
    sub_24EB3DCA0();
    swift_bridgeObjectRelease();
    sub_24EB3D1B0();
    sub_24EAD3FC8(v13, v14);
    uint64_t result = sub_24EB3E0D0();
    v8 ^= result;
  }
  int64_t v17 = v15 + 2;
  if (v17 >= v6)
  {
LABEL_19:
    swift_release();
    return sub_24EB3E0A0();
  }
  unint64_t v16 = *(void *)(v18 + 8 * v17);
  if (v16)
  {
    int64_t v9 = v17;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v9 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v9 >= v6) {
      goto LABEL_19;
    }
    unint64_t v16 = *(void *)(v18 + 8 * v9);
    ++v17;
    if (v16) {
      goto LABEL_18;
    }
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t _s13FitnessAwards16AwardToastDetailV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 40);
  int v5 = *(unsigned __int8 *)(a1 + 48);
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  int v11 = *(unsigned __int8 *)(a2 + 48);
  if ((sub_24EAE6364(*(void **)a1, *(void **)a2) & 1) == 0) {
    return 0;
  }
  if (v2 != v6 || v16 != v8)
  {
    char v12 = sub_24EB3E010();
    uint64_t result = 0;
    if ((v12 & 1) == 0) {
      return result;
    }
  }
  if (!v3)
  {
    if (!v10) {
      return sub_24EB395A8(v4, v9) & (v5 == v11);
    }
    return 0;
  }
  if (!v10) {
    return 0;
  }
  if (v15 == v7 && v3 == v10) {
    return sub_24EB395A8(v4, v9) & (v5 == v11);
  }
  char v14 = sub_24EB3E010();
  uint64_t result = 0;
  if (v14) {
    return sub_24EB395A8(v4, v9) & (v5 == v11);
  }
  return result;
}

unint64_t sub_24EAF4A90()
{
  unint64_t result = qword_269932A80;
  if (!qword_269932A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932A80);
  }
  return result;
}

uint64_t destroy for AwardToastDetail()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AwardToastDetail(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AwardToastDetail(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for AwardToastDetail(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for AwardToastDetail(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AwardToastDetail(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardToastDetail()
{
  return &type metadata for AwardToastDetail;
}

unsigned char *storeEnumTagSinglePayload for AwardToastDetail.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EAF4E24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardToastDetail.CodingKeys()
{
  return &type metadata for AwardToastDetail.CodingKeys;
}

unint64_t sub_24EAF4E60()
{
  unint64_t result = qword_269932A88;
  if (!qword_269932A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932A88);
  }
  return result;
}

unint64_t sub_24EAF4EB8()
{
  unint64_t result = qword_269932A90;
  if (!qword_269932A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932A90);
  }
  return result;
}

unint64_t sub_24EAF4F10()
{
  unint64_t result = qword_269932A98;
  if (!qword_269932A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932A98);
  }
  return result;
}

uint64_t sub_24EAF4F64(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x800000024EB4AA70 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7461446567616D69 && a2 == 0xE900000000000061 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v5 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    if (v5) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_24EAF5158(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EAF51A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24EAF5208(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24EAF5270(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24EAF52D0(_OWORD *a1, uint64_t a2)
{
  *(void *)(v2 + 320) = a2;
  long long v3 = a1[7];
  *(_OWORD *)(v2 + 112) = a1[6];
  *(_OWORD *)(v2 + 128) = v3;
  *(_OWORD *)(v2 + 144) = a1[8];
  long long v4 = a1[3];
  *(_OWORD *)(v2 + 48) = a1[2];
  *(_OWORD *)(v2 + 64) = v4;
  long long v5 = a1[5];
  *(_OWORD *)(v2 + 80) = a1[4];
  *(_OWORD *)(v2 + 96) = v5;
  long long v6 = a1[1];
  *(_OWORD *)(v2 + 16) = *a1;
  *(_OWORD *)(v2 + 32) = v6;
  return MEMORY[0x270FA2498](sub_24EAF5318, 0, 0);
}

uint64_t sub_24EAF5318()
{
  uint64_t v18 = v0;
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_24EAF6994(v1);
  *(void *)(v0 + 328) = v2;
  if (qword_26B1D27C0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_24EB3D2C0();
  *(void *)(v0 + 336) = __swift_project_value_buffer(v3, (uint64_t)qword_26B1D27A8);
  swift_retain_n();
  long long v4 = sub_24EB3D2A0();
  os_log_type_t v5 = sub_24EB3DD80();
  if (os_log_type_enabled(v4, v5))
  {
    long long v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v17 = v7;
    *(_DWORD *)long long v6 = 136315138;
    sub_24EAF6AF8();
    swift_retain();
    uint64_t v8 = sub_24EB3DD60();
    unint64_t v10 = v9;
    swift_release();
    *(void *)(v0 + 312) = sub_24EAC5098(v8, v10, &v17);
    sub_24EB3DDB0();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_24EAA5000, v4, v5, "Earnable awards %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533497D0](v7, -1, -1);
    MEMORY[0x2533497D0](v6, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  long long v11 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 256) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 272) = v11;
  *(_OWORD *)(v0 + 288) = *(_OWORD *)(v0 + 144);
  long long v12 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 192) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 208) = v12;
  long long v13 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 224) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 240) = v13;
  long long v14 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 160) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 176) = v14;
  uint64_t v15 = swift_task_alloc();
  *(void *)(v0 + 344) = v15;
  *(void *)uint64_t v15 = v0;
  *(void *)(v15 + 8) = sub_24EAF55C4;
  *(void *)(v15 + 176) = v2;
  *(_OWORD *)(v15 + 184) = *(_OWORD *)(v0 + 288);
  return MEMORY[0x270FA2498](sub_24EAF58DC, 0, 0);
}

uint64_t sub_24EAF55C4(uint64_t a1)
{
  *(void *)(*(void *)v1 + 352) = a1;
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x270FA2498](sub_24EAF56E4, 0, 0);
}

uint64_t sub_24EAF56E4()
{
  long long v12 = v0;
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_24EB3D2A0();
  os_log_type_t v2 = sub_24EB3DD80();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    uint64_t v11 = v4;
    *(_DWORD *)uint64_t v3 = 136315138;
    sub_24EAF6AF8();
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_24EB3DD60();
    unint64_t v7 = v6;
    swift_bridgeObjectRelease();
    v0[38] = sub_24EAC5098(v5, v7, &v11);
    sub_24EB3DDB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24EAA5000, v1, v2, "Awards eligible to present %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533497D0](v4, -1, -1);
    MEMORY[0x2533497D0](v3, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v8 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v9 = v0[44];
  return v8(v9);
}

uint64_t sub_24EAF58B4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 176) = a2;
  *(_OWORD *)(v2 + 184) = *(_OWORD *)(a1 + 128);
  return MEMORY[0x270FA2498](sub_24EAF58DC, 0, 0);
}

uint64_t sub_24EAF58DC()
{
  *(void *)(v0 + 160) = MEMORY[0x263F8EE88];
  uint64_t v1 = *(void *)(v0 + 176);
  char v2 = *(unsigned char *)(v1 + 32);
  *(unsigned char *)(v0 + 49) = v2;
  uint64_t v3 = 1 << v2;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 56);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (v5)
  {
    unint64_t v8 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v9 = v8 | (v7 << 6);
    uint64_t result = *(void *)(v0 + 176);
LABEL_6:
    *(void *)(v0 + 200) = v7;
    *(void *)(v0 + 208) = v5;
    uint64_t v10 = *(void *)(result + 48) + 40 * v9;
    sub_24EAC10A4(v10, v0 + 56);
    *(void *)(v0 + 216) = *(void *)(v10 + 8);
    uint64_t result = sub_24EAC10A4(v0 + 56, v0 + 16);
    if ((*(unsigned char *)(v0 + 48) & 1) == 0)
    {
      uint64_t v16 = *(int **)(v0 + 184);
      uint64_t v17 = *(void *)(v0 + 16);
      uint64_t v18 = *(void *)(v0 + 24);
      *(void *)(v0 + 224) = v17;
      *(void *)(v0 + 232) = v18;
      sub_24EAC6828(v0 + 56, (void (*)(void, void, void, void, void))sub_24EAC16CC);
      unint64_t v22 = (uint64_t (*)(uint64_t, uint64_t))((char *)v16 + *v16);
      swift_bridgeObjectRetain();
      uint64_t v19 = (void *)swift_task_alloc();
      *(void *)(v0 + 240) = v19;
      *uint64_t v19 = v0;
      v19[1] = sub_24EAF5B98;
      return v22(v17, v18);
    }
  }
  int64_t v11 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
LABEL_29:
    __break(1u);
    return result;
  }
  int64_t v12 = (unint64_t)((1 << *(unsigned char *)(v0 + 49)) + 63) >> 6;
  uint64_t result = *(void *)(v0 + 176);
  if (v11 >= v12) {
    goto LABEL_25;
  }
  uint64_t v13 = result + 56;
  unint64_t v14 = *(void *)(result + 56 + 8 * v11);
  ++v7;
  if (v14) {
    goto LABEL_21;
  }
  int64_t v7 = v11 + 1;
  if (v11 + 1 >= v12) {
    goto LABEL_25;
  }
  unint64_t v14 = *(void *)(v13 + 8 * v7);
  if (v14) {
    goto LABEL_21;
  }
  int64_t v7 = v11 + 2;
  if (v11 + 2 >= v12) {
    goto LABEL_25;
  }
  unint64_t v14 = *(void *)(v13 + 8 * v7);
  if (v14)
  {
LABEL_21:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v9 = __clz(__rbit64(v14)) + (v7 << 6);
    goto LABEL_6;
  }
  int64_t v15 = v11 + 3;
  if (v15 < v12)
  {
    unint64_t v14 = *(void *)(v13 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v7 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_29;
        }
        if (v7 >= v12) {
          goto LABEL_25;
        }
        unint64_t v14 = *(void *)(v13 + 8 * v7);
        ++v15;
        if (v14) {
          goto LABEL_21;
        }
      }
    }
    int64_t v7 = v15;
    goto LABEL_21;
  }
LABEL_25:
  swift_release();
  uint64_t v20 = *(void *)(v0 + 160);
  uint64_t v21 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v21(v20);
}

uint64_t sub_24EAF5B98(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 248) = v1;
  swift_task_dealloc();
  if (v1)
  {
    unint64_t v5 = sub_24EAF6144;
  }
  else
  {
    *(unsigned char *)(v4 + 50) = a1 & 1;
    unint64_t v5 = sub_24EAF5CC4;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_24EAF5CC4()
{
  uint64_t v28 = v0;
  if (*(unsigned char *)(v0 + 50))
  {
    sub_24EAC6828(v0 + 56, (void (*)(void, void, void, void, void))sub_24EAB1A70);
    sub_24EAF7078(v0 + 96, v0 + 56);
    sub_24EAB1A70(*(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(unsigned char *)(v0 + 128));
  }
  else
  {
    if (qword_26B1D27C0 != -1) {
LABEL_34:
    }
      swift_once();
    uint64_t v1 = sub_24EB3D2C0();
    __swift_project_value_buffer(v1, (uint64_t)qword_26B1D27A8);
    swift_bridgeObjectRetain();
    char v2 = sub_24EB3D2A0();
    os_log_type_t v3 = sub_24EB3DD80();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v5 = *(void *)(v0 + 224);
      unint64_t v4 = *(void *)(v0 + 232);
      uint64_t v6 = swift_slowAlloc();
      uint64_t v7 = swift_slowAlloc();
      uint64_t v27 = v7;
      *(_DWORD *)uint64_t v6 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v6 + 4) = sub_24EAC5098(v5, v4, &v27);
      sub_24EAC6828(v0 + 56, (void (*)(void, void, void, void, void))sub_24EAB1A70);
      sub_24EAC6828(v0 + 56, (void (*)(void, void, void, void, void))sub_24EAB1A70);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24EAA5000, v2, v3, "%s has already been toasted, not notifying", (uint8_t *)v6, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533497D0](v7, -1, -1);
      MEMORY[0x2533497D0](v6, -1, -1);
    }
    else
    {
      sub_24EAC6828(v0 + 56, (void (*)(void, void, void, void, void))sub_24EAB1A70);
      sub_24EAC6828(v0 + 56, (void (*)(void, void, void, void, void))sub_24EAB1A70);
    }

    sub_24EAC6828(v0 + 56, (void (*)(void, void, void, void, void))sub_24EAB1A70);
  }
  int64_t v8 = *(void *)(v0 + 200);
  unint64_t v9 = *(void *)(v0 + 208);
  while (v9)
  {
    unint64_t v10 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v11 = v10 | (v8 << 6);
    uint64_t v12 = *(void *)(v0 + 176);
LABEL_10:
    *(void *)(v0 + 200) = v8;
    *(void *)(v0 + 208) = v9;
    uint64_t v13 = *(void *)(v12 + 48) + 40 * v11;
    sub_24EAC10A4(v13, v0 + 56);
    *(void *)(v0 + 216) = *(void *)(v13 + 8);
    sub_24EAC10A4(v0 + 56, v0 + 16);
    if ((*(unsigned char *)(v0 + 48) & 1) == 0)
    {
      uint64_t v19 = *(int **)(v0 + 184);
      uint64_t v20 = *(void *)(v0 + 16);
      uint64_t v21 = *(void *)(v0 + 24);
      *(void *)(v0 + 224) = v20;
      *(void *)(v0 + 232) = v21;
      sub_24EAC6828(v0 + 56, (void (*)(void, void, void, void, void))sub_24EAC16CC);
      uint64_t v26 = (uint64_t (*)(uint64_t, uint64_t))((char *)v19 + *v19);
      swift_bridgeObjectRetain();
      unint64_t v22 = (void *)swift_task_alloc();
      *(void *)(v0 + 240) = v22;
      *unint64_t v22 = v0;
      v22[1] = sub_24EAF5B98;
      return v26(v20, v21);
    }
  }
  int64_t v14 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  int64_t v15 = (unint64_t)((1 << *(unsigned char *)(v0 + 49)) + 63) >> 6;
  uint64_t v12 = *(void *)(v0 + 176);
  if (v14 >= v15) {
    goto LABEL_29;
  }
  uint64_t v16 = v12 + 56;
  unint64_t v17 = *(void *)(v12 + 56 + 8 * v14);
  ++v8;
  if (v17) {
    goto LABEL_25;
  }
  int64_t v8 = v14 + 1;
  if (v14 + 1 >= v15) {
    goto LABEL_29;
  }
  unint64_t v17 = *(void *)(v16 + 8 * v8);
  if (v17) {
    goto LABEL_25;
  }
  int64_t v8 = v14 + 2;
  if (v14 + 2 >= v15) {
    goto LABEL_29;
  }
  unint64_t v17 = *(void *)(v16 + 8 * v8);
  if (v17)
  {
LABEL_25:
    unint64_t v9 = (v17 - 1) & v17;
    unint64_t v11 = __clz(__rbit64(v17)) + (v8 << 6);
    goto LABEL_10;
  }
  int64_t v18 = v14 + 3;
  if (v18 < v15)
  {
    unint64_t v17 = *(void *)(v16 + 8 * v18);
    if (!v17)
    {
      while (1)
      {
        int64_t v8 = v18 + 1;
        if (__OFADD__(v18, 1)) {
          goto LABEL_33;
        }
        if (v8 >= v15) {
          goto LABEL_29;
        }
        unint64_t v17 = *(void *)(v16 + 8 * v8);
        ++v18;
        if (v17) {
          goto LABEL_25;
        }
      }
    }
    int64_t v8 = v18;
    goto LABEL_25;
  }
LABEL_29:
  swift_release();
  uint64_t v24 = *(void *)(v0 + 160);
  uint64_t v25 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v25(v24);
}

uint64_t sub_24EAF6144()
{
  uint64_t v33 = v0;
  if (qword_26B1D27C0 != -1) {
LABEL_31:
  }
    swift_once();
  uint64_t v1 = *(void *)(v0 + 248);
  uint64_t v2 = sub_24EB3D2C0();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B1D27A8);
  MEMORY[0x2533495E0](v1);
  sub_24EAC6828(v0 + 56, (void (*)(void, void, void, void, void))sub_24EAC16CC);
  MEMORY[0x2533495E0](v1);
  os_log_type_t v3 = sub_24EB3D2A0();
  os_log_type_t v4 = sub_24EB3DD80();
  BOOL v5 = os_log_type_enabled(v3, v4);
  uint64_t v6 = *(void *)(v0 + 248);
  if (v5)
  {
    uint64_t v7 = *(void *)(v0 + 224);
    unint64_t v8 = *(void *)(v0 + 232);
    uint64_t v9 = swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    uint64_t v32 = v30;
    *(_DWORD *)uint64_t v9 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)(v9 + 4) = sub_24EAC5098(v7, v8, &v32);
    sub_24EAC6828(v0 + 56, (void (*)(void, void, void, void, void))sub_24EAB1A70);
    sub_24EAC6828(v0 + 56, (void (*)(void, void, void, void, void))sub_24EAB1A70);
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v10 = sub_24EB3E040();
    *(void *)(v9 + 14) = sub_24EAC5098(v10, v11, &v32);
    swift_bridgeObjectRelease();
    MEMORY[0x2533495D0](v6);
    MEMORY[0x2533495D0](v6);
    _os_log_impl(&dword_24EAA5000, v3, v4, "Toast eligibility query for %s failed with error %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533497D0](v30, -1, -1);
    MEMORY[0x2533497D0](v9, -1, -1);

    sub_24EAC6828(v0 + 56, (void (*)(void, void, void, void, void))sub_24EAB1A70);
    MEMORY[0x2533495D0](v6);
  }
  else
  {
    MEMORY[0x2533495D0](*(void *)(v0 + 248));
    sub_24EAC6828(v0 + 56, (void (*)(void, void, void, void, void))sub_24EAB1A70);
    sub_24EAC6828(v0 + 56, (void (*)(void, void, void, void, void))sub_24EAB1A70);
    MEMORY[0x2533495D0](v6);
    MEMORY[0x2533495D0](v6);

    sub_24EAC6828(v0 + 56, (void (*)(void, void, void, void, void))sub_24EAB1A70);
  }
  int64_t v12 = *(void *)(v0 + 200);
  unint64_t v13 = *(void *)(v0 + 208);
  while (v13)
  {
    unint64_t v14 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    unint64_t v15 = v14 | (v12 << 6);
    uint64_t v16 = *(void *)(v0 + 176);
LABEL_7:
    *(void *)(v0 + 200) = v12;
    *(void *)(v0 + 208) = v13;
    uint64_t v17 = *(void *)(v16 + 48) + 40 * v15;
    sub_24EAC10A4(v17, v0 + 56);
    *(void *)(v0 + 216) = *(void *)(v17 + 8);
    sub_24EAC10A4(v0 + 56, v0 + 16);
    if ((*(unsigned char *)(v0 + 48) & 1) == 0)
    {
      uint64_t v23 = *(int **)(v0 + 184);
      uint64_t v24 = *(void *)(v0 + 16);
      uint64_t v25 = *(void *)(v0 + 24);
      *(void *)(v0 + 224) = v24;
      *(void *)(v0 + 232) = v25;
      sub_24EAC6828(v0 + 56, (void (*)(void, void, void, void, void))sub_24EAC16CC);
      int64_t v31 = (uint64_t (*)(uint64_t, uint64_t))((char *)v23 + *v23);
      swift_bridgeObjectRetain();
      uint64_t v26 = (void *)swift_task_alloc();
      *(void *)(v0 + 240) = v26;
      *uint64_t v26 = v0;
      v26[1] = sub_24EAF5B98;
      return v31(v24, v25);
    }
  }
  int64_t v18 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  int64_t v19 = (unint64_t)((1 << *(unsigned char *)(v0 + 49)) + 63) >> 6;
  uint64_t v16 = *(void *)(v0 + 176);
  if (v18 >= v19) {
    goto LABEL_26;
  }
  uint64_t v20 = v16 + 56;
  unint64_t v21 = *(void *)(v16 + 56 + 8 * v18);
  ++v12;
  if (v21) {
    goto LABEL_22;
  }
  int64_t v12 = v18 + 1;
  if (v18 + 1 >= v19) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v20 + 8 * v12);
  if (v21) {
    goto LABEL_22;
  }
  int64_t v12 = v18 + 2;
  if (v18 + 2 >= v19) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v20 + 8 * v12);
  if (v21)
  {
LABEL_22:
    unint64_t v13 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v12 << 6);
    goto LABEL_7;
  }
  int64_t v22 = v18 + 3;
  if (v22 < v19)
  {
    unint64_t v21 = *(void *)(v20 + 8 * v22);
    if (!v21)
    {
      while (1)
      {
        int64_t v12 = v22 + 1;
        if (__OFADD__(v22, 1)) {
          goto LABEL_30;
        }
        if (v12 >= v19) {
          goto LABEL_26;
        }
        unint64_t v21 = *(void *)(v20 + 8 * v12);
        ++v22;
        if (v21) {
          goto LABEL_22;
        }
      }
    }
    int64_t v12 = v22;
    goto LABEL_22;
  }
LABEL_26:
  swift_release();
  uint64_t v28 = *(void *)(v0 + 160);
  uint64_t v29 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v29(v28);
}

uint64_t sub_24EAF6618()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269932AC0);
  uint64_t v3 = sub_24EB3DE00();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v33 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v32 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    for (i = v2; ; uint64_t v2 = i)
    {
      if (v7)
      {
        unint64_t v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v14 = v13 | (v10 << 6);
      }
      else
      {
        int64_t v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v15 >= v32) {
          goto LABEL_36;
        }
        unint64_t v16 = v33[v15];
        ++v10;
        if (!v16)
        {
          int64_t v10 = v15 + 1;
          if (v15 + 1 >= v32) {
            goto LABEL_36;
          }
          unint64_t v16 = v33[v10];
          if (!v16)
          {
            int64_t v10 = v15 + 2;
            if (v15 + 2 >= v32) {
              goto LABEL_36;
            }
            unint64_t v16 = v33[v10];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v32)
              {
LABEL_36:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v31 = 1 << *(unsigned char *)(v2 + 32);
                if (v31 > 63) {
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v33 = -1 << v31;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v33[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v10 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_42;
                  }
                  if (v10 >= v32) {
                    goto LABEL_36;
                  }
                  unint64_t v16 = v33[v10];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      uint64_t v18 = *(void *)(v2 + 48) + 40 * v14;
      uint64_t v19 = *(void *)v18;
      uint64_t v20 = *(void *)(v18 + 8);
      uint64_t v22 = *(void *)(v18 + 16);
      uint64_t v21 = *(void *)(v18 + 24);
      char v23 = *(unsigned char *)(v18 + 32);
      sub_24EB3E090();
      sub_24EB3E0A0();
      if (v23)
      {
        sub_24EB3E0A0();
        sub_24EB3E0B0();
        sub_24EB3E0A0();
      }
      else
      {
        sub_24EB3DCA0();
        sub_24EB3E0C0();
        sub_24EB3E0C0();
      }
      uint64_t result = sub_24EB3E0D0();
      uint64_t v24 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v25 = result & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v8 + 8 * (v25 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v25) & ~*(void *)(v8 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v29 = v26 == v28;
          if (v26 == v28) {
            unint64_t v26 = 0;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v8 + 8 * v26);
        }
        while (v30 == -1);
        unint64_t v11 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      uint64_t v12 = *(void *)(v4 + 48) + 40 * v11;
      *(void *)uint64_t v12 = v19;
      *(void *)(v12 + 8) = v20;
      *(void *)(v12 + 16) = v22;
      *(void *)(v12 + 24) = v21;
      *(unsigned char *)(v12 + 32) = v23;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_24EAF6994(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  v9[1] = *MEMORY[0x263EF8340];
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    uint64_t v6 = sub_24EAF6B4C((uint64_t)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v4, v2);
    swift_release();
    if (v1) {
      swift_willThrow();
    }
  }
  else
  {
    unint64_t v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    uint64_t v6 = sub_24EAF6B4C((uint64_t)v7, v4, v2);
    swift_release();
    MEMORY[0x2533497D0](v7, -1, -1);
  }
  return v6;
}

unint64_t sub_24EAF6AF8()
{
  unint64_t result = qword_26B1D2818;
  if (!qword_26B1D2818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2818);
  }
  return result;
}

uint64_t sub_24EAF6B4C(uint64_t result, uint64_t a2, uint64_t a3)
{
  size_t v5 = (unint64_t *)result;
  uint64_t v6 = 0;
  int64_t v7 = 0;
  uint64_t v8 = a3 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(a3 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    do
    {
      if (v11)
      {
        unint64_t v13 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v14 = v13 | (v7 << 6);
      }
      else
      {
        BOOL v15 = __OFADD__(v7++, 1);
        if (v15) {
          goto LABEL_42;
        }
        if (v7 >= v12)
        {
LABEL_35:
          swift_retain();
          *(double *)&unint64_t result = COERCE_DOUBLE(sub_24EAF6D58(v5, a2, v6, a3));
          return result;
        }
        unint64_t v16 = *(void *)(v8 + 8 * v7);
        if (!v16)
        {
          int64_t v17 = v7 + 1;
          if (v7 + 1 >= v12) {
            goto LABEL_35;
          }
          unint64_t v16 = *(void *)(v8 + 8 * v17);
          if (!v16)
          {
            int64_t v17 = v7 + 2;
            if (v7 + 2 >= v12) {
              goto LABEL_35;
            }
            unint64_t v16 = *(void *)(v8 + 8 * v17);
            if (!v16)
            {
              int64_t v17 = v7 + 3;
              if (v7 + 3 >= v12) {
                goto LABEL_35;
              }
              unint64_t v16 = *(void *)(v8 + 8 * v17);
              if (!v16)
              {
                while (1)
                {
                  int64_t v7 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_43;
                  }
                  if (v7 >= v12) {
                    goto LABEL_35;
                  }
                  unint64_t v16 = *(void *)(v8 + 8 * v7);
                  ++v17;
                  if (v16) {
                    goto LABEL_16;
                  }
                }
              }
            }
          }
          int64_t v7 = v17;
        }
LABEL_16:
        unint64_t v18 = __clz(__rbit64(v16));
        unint64_t v11 = (v16 - 1) & v16;
        unint64_t v14 = v18 + (v7 << 6);
      }
      unint64_t result = *(void *)(a3 + 48) + 40 * v14;
    }
    while ((*(unsigned char *)(result + 32) & 1) != 0);
    double v19 = *(double *)(result + 24);
    double v20 = v19;
    if (v19 <= -9.22337204e18) {
      break;
    }
    if (v19 >= 9.22337204e18) {
      goto LABEL_37;
    }
    unint64_t result = *(uint64_t *)(result + 16);
    uint64_t v21 = *(void *)&v19 & 0x7FF0000000000000;
    if ((~result & 0x7FF0000000000000) == 0 || v21 == 0x7FF0000000000000) {
      goto LABEL_38;
    }
    double v23 = *(double *)&result;
    if (*(double *)&result <= -9.22337204e18) {
      goto LABEL_39;
    }
    if (*(double *)&result >= 9.22337204e18) {
      goto LABEL_40;
    }
    unint64_t result = (uint64_t)v20 - (uint64_t)*(double *)&result;
    if (__OFSUB__((uint64_t)v20, (uint64_t)v23)) {
      goto LABEL_41;
    }
    if (result == 1)
    {
      unint64_t result = (v14 >> 3) & 0x1FFFFFFFFFFFFFF8;
      *(unint64_t *)((char *)v5 + result) |= 1 << v14;
      BOOL v15 = __OFADD__(v6++, 1);
      if (v15) {
        goto LABEL_44;
      }
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_24EAF6D58(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = MEMORY[0x263F8EE88];
LABEL_39:
    swift_release();
    return v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269932AC0);
  uint64_t result = sub_24EB3DE10();
  uint64_t v8 = result;
  uint64_t v34 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  uint64_t v36 = v4;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      uint64_t v37 = v10;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_42;
    }
    if (v14 >= v34) {
      goto LABEL_39;
    }
    unint64_t v15 = a1[v14];
    uint64_t v16 = v10 + 1;
    if (!v15)
    {
      uint64_t v16 = v10 + 2;
      if (v10 + 2 >= v34) {
        goto LABEL_39;
      }
      unint64_t v15 = a1[v16];
      if (!v15)
      {
        uint64_t v16 = v10 + 3;
        if (v10 + 3 >= v34) {
          goto LABEL_39;
        }
        unint64_t v15 = a1[v16];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    uint64_t v37 = v16;
    unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(v4 + 48) + 40 * v13;
    uint64_t v19 = *(void *)v18;
    uint64_t v20 = *(void *)(v18 + 8);
    uint64_t v22 = *(void *)(v18 + 16);
    uint64_t v21 = *(void *)(v18 + 24);
    char v23 = *(unsigned char *)(v18 + 32);
    sub_24EB3E090();
    sub_24EB3E0A0();
    if (v23)
    {
      sub_24EB3E0A0();
      sub_24EB3E0B0();
      sub_24EB3E0A0();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_24EB3DCA0();
      sub_24EB3E0C0();
      sub_24EB3E0C0();
    }
    uint64_t result = sub_24EB3E0D0();
    uint64_t v24 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v25 = result & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v11 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v27 = __clz(__rbit64((-1 << v25) & ~*(void *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v30 = v26 == v29;
        if (v26 == v29) {
          unint64_t v26 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v11 + 8 * v26);
      }
      while (v31 == -1);
      unint64_t v27 = __clz(__rbit64(~v31)) + (v26 << 6);
    }
    *(void *)(v11 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
    uint64_t v32 = *(void *)(v8 + 48) + 40 * v27;
    *(void *)uint64_t v32 = v19;
    *(void *)(v32 + 8) = v20;
    *(void *)(v32 + 16) = v22;
    *(void *)(v32 + 24) = v21;
    *(unsigned char *)(v32 + 32) = v23;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    uint64_t v4 = v36;
    uint64_t v10 = v37;
    if (!v5) {
      goto LABEL_39;
    }
  }
  uint64_t v17 = v10 + 4;
  if (v10 + 4 >= v34) {
    goto LABEL_39;
  }
  unint64_t v15 = a1[v17];
  if (v15)
  {
    uint64_t v16 = v10 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v16 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v16 >= v34) {
      goto LABEL_39;
    }
    unint64_t v15 = a1[v16];
    ++v17;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_24EAF7078(uint64_t a1, uint64_t a2)
{
  char v3 = v2;
  uint64_t v6 = *v2;
  sub_24EB3E090();
  swift_bridgeObjectRetain();
  AwardProgress.hash(into:)();
  uint64_t v7 = sub_24EB3E0D0();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_23:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v31 = *v3;
    *char v3 = 0x8000000000000000;
    sub_24EAC6828(a2, (void (*)(void, void, void, void, void))sub_24EAC16CC);
    sub_24EAF72F8(a2, v9, isUniquelyReferenced_nonNull_native);
    *char v3 = v31;
    swift_bridgeObjectRelease();
    sub_24EAC10A4(a2, a1);
    return 1;
  }
  unint64_t v29 = v2;
  uint64_t v30 = a1;
  uint64_t v10 = ~v8;
  uint64_t v11 = *(void *)(v6 + 48);
  while (1)
  {
    unint64_t v13 = (double *)(v11 + 40 * v9);
    double v14 = *v13;
    uint64_t v15 = *((void *)v13 + 1);
    double v16 = v13[2];
    if (((_BYTE)v13[4] & 1) == 0) {
      break;
    }
    sub_24EAC10A4(a2, (uint64_t)&v32);
    if ((v35 & 1) != 0 && *(void *)&v14 == v32 && ((((v15 & 1) == 0) ^ v33) & 1) != 0 && *(void *)&v16 == v34)
    {
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
LABEL_7:
    unint64_t v9 = (v9 + 1) & v10;
    if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      char v3 = v29;
      a1 = v30;
      goto LABEL_23;
    }
  }
  double v17 = v13[3];
  sub_24EAC10A4(a2, (uint64_t)v36);
  if (v37) {
    goto LABEL_7;
  }
  double v19 = *(double *)&v36[2];
  double v18 = *(double *)&v36[3];
  BOOL v20 = *(void *)&v14 == v36[0] && v15 == v36[1];
  if (!v20 && (sub_24EB3E010() & 1) == 0) {
    goto LABEL_7;
  }
  if (v19 != v16 || v17 != v18) {
    goto LABEL_7;
  }
  swift_bridgeObjectRelease();
  sub_24EAC6828(a2, (void (*)(void, void, void, void, void))sub_24EAB1A70);
LABEL_25:
  uint64_t v23 = *(void *)(*v29 + 48) + 40 * v9;
  uint64_t v24 = *(void *)v23;
  uint64_t v25 = *(void *)(v23 + 8);
  uint64_t v26 = *(void *)(v23 + 16);
  uint64_t v27 = *(void *)(v23 + 24);
  char v28 = *(unsigned char *)(v23 + 32);
  *(void *)uint64_t v30 = *(void *)v23;
  *(void *)(v30 + 8) = v25;
  *(void *)(v30 + 16) = v26;
  *(void *)(v30 + 24) = v27;
  *(unsigned char *)(v30 + 32) = v28;
  sub_24EAC16CC(v24, v25, v26, v27, v28);
  return 0;
}

uint64_t sub_24EAF72F8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 <= v7 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_24EAF6618();
    }
    else
    {
      if (v8 > v7)
      {
        sub_24EAF7510();
        goto LABEL_28;
      }
      sub_24EAF76D8();
    }
    uint64_t v9 = *v3;
    sub_24EB3E090();
    AwardProgress.hash(into:)();
    uint64_t v10 = sub_24EB3E0D0();
    uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
    a2 = v10 & ~v11;
    uint64_t v12 = v9 + 56;
    if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v13 = ~v11;
      uint64_t v14 = *(void *)(v9 + 48);
      do
      {
        double v16 = (double *)(v14 + 40 * a2);
        double v17 = *v16;
        uint64_t v18 = *((void *)v16 + 1);
        double v19 = v16[2];
        if ((_BYTE)v16[4])
        {
          sub_24EAC10A4(a1, (uint64_t)&v29);
          if ((v32 & 1) != 0 && *(void *)&v17 == v29 && ((((v18 & 1) == 0) ^ v30) & 1) != 0 && *(void *)&v19 == v31) {
            goto LABEL_31;
          }
        }
        else
        {
          double v20 = v16[3];
          sub_24EAC10A4(a1, (uint64_t)v33);
          if ((v34 & 1) == 0)
          {
            double v22 = *(double *)&v33[2];
            double v21 = *(double *)&v33[3];
            BOOL v23 = *(void *)&v17 == v33[0] && v18 == v33[1];
            if (v23 || (sub_24EB3E010()) && v22 == v19 && v20 == v21) {
              goto LABEL_31;
            }
          }
        }
        a2 = (a2 + 1) & v13;
      }
      while (((*(void *)(v12 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_28:
  uint64_t v24 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_24EAC10A4(a1, *(void *)(v24 + 48) + 40 * a2);
  uint64_t v26 = *(void *)(v24 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (v27)
  {
    __break(1u);
LABEL_31:
    uint64_t result = sub_24EB3E020();
    __break(1u);
  }
  else
  {
    *(void *)(v24 + 16) = v28;
  }
  return result;
}

void *sub_24EAF7510()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269932AC0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24EB3DDF0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v13) {
      goto LABEL_28;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25)
      {
        int64_t v9 = v24 + 2;
        if (v24 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v25 = *(void *)(v6 + 8 * v9);
        if (!v25) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    uint64_t v20 = *(void *)(v17 + 16);
    uint64_t v21 = *(void *)(v17 + 24);
    char v22 = *(unsigned char *)(v17 + 32);
    uint64_t v23 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v23 = *(void *)v17;
    *(void *)(v23 + 8) = v19;
    *(void *)(v23 + 16) = v20;
    *(void *)(v23 + 24) = v21;
    *(unsigned char *)(v23 + 32) = v22;
    uint64_t result = (void *)sub_24EAC16CC(v18, v19, v20, v21, v22);
  }
  int64_t v26 = v24 + 3;
  if (v26 >= v13) {
    goto LABEL_28;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_24EAF76D8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269932AC0);
  uint64_t v3 = sub_24EB3DE00();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_38:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v31 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v32 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  for (i = v2; ; uint64_t v2 = i)
  {
    if (v7)
    {
      unint64_t v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v15 >= v32) {
      goto LABEL_36;
    }
    unint64_t v16 = *(void *)(v31 + 8 * v15);
    ++v10;
    if (!v16)
    {
      int64_t v10 = v15 + 1;
      if (v15 + 1 >= v32) {
        goto LABEL_36;
      }
      unint64_t v16 = *(void *)(v31 + 8 * v10);
      if (!v16)
      {
        int64_t v10 = v15 + 2;
        if (v15 + 2 >= v32) {
          goto LABEL_36;
        }
        unint64_t v16 = *(void *)(v31 + 8 * v10);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(v2 + 48) + 40 * v14;
    uint64_t v19 = *(void *)v18;
    uint64_t v20 = *(void *)(v18 + 8);
    uint64_t v22 = *(void *)(v18 + 16);
    uint64_t v21 = *(void *)(v18 + 24);
    char v23 = *(unsigned char *)(v18 + 32);
    sub_24EB3E090();
    sub_24EB3E0A0();
    if (v23)
    {
      sub_24EB3E0A0();
      sub_24EB3E0B0();
      sub_24EB3E0A0();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_24EB3DCA0();
      sub_24EB3E0C0();
      sub_24EB3E0C0();
    }
    uint64_t result = sub_24EB3E0D0();
    uint64_t v24 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v25 = result & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v8 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v25) & ~*(void *)(v8 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v29 = v26 == v28;
        if (v26 == v28) {
          unint64_t v26 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v8 + 8 * v26);
      }
      while (v30 == -1);
      unint64_t v11 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = *(void *)(v4 + 48) + 40 * v11;
    *(void *)uint64_t v12 = v19;
    *(void *)(v12 + 8) = v20;
    *(void *)(v12 + 16) = v22;
    *(void *)(v12 + 24) = v21;
    *(unsigned char *)(v12 + 32) = v23;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v32)
  {
LABEL_36:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_38;
  }
  unint64_t v16 = *(void *)(v31 + 8 * v17);
  if (v16)
  {
    int64_t v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v10 >= v32) {
      goto LABEL_36;
    }
    unint64_t v16 = *(void *)(v31 + 8 * v10);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_24EAF7A28(char a1)
{
  return *(void *)&aIdle_7[8 * a1];
}

uint64_t sub_24EAF7A48()
{
  return sub_24EAF7A28(*v0);
}

uint64_t sub_24EAF7A50(uint64_t a1)
{
  unint64_t v2 = sub_24EAF9150();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAF7A8C(uint64_t a1)
{
  unint64_t v2 = sub_24EAF9150();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EAF7ACC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EAFA040(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24EAF7AF8(uint64_t a1)
{
  unint64_t v2 = sub_24EAF91A4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAF7B34(uint64_t a1)
{
  unint64_t v2 = sub_24EAF91A4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EAF7B70(uint64_t a1)
{
  unint64_t v2 = sub_24EAF91F8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAF7BAC(uint64_t a1)
{
  unint64_t v2 = sub_24EAF91F8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EAF7BE8(uint64_t a1)
{
  unint64_t v2 = sub_24EAF924C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAF7C24(uint64_t a1)
{
  unint64_t v2 = sub_24EAF924C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AwardImageLoadState.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932AC8);
  uint64_t v42 = *(void *)(v2 - 8);
  uint64_t v43 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v39 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24EB3D190();
  uint64_t v40 = *(void *)(v4 - 8);
  uint64_t v41 = v4;
  MEMORY[0x270FA5388](v4);
  int64_t v38 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932AD0);
  uint64_t v34 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  long long v44 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24EB3D1F0();
  uint64_t v35 = *(void *)(v7 - 8);
  uint64_t v36 = v7;
  MEMORY[0x270FA5388](v7);
  int64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932AD8);
  uint64_t v33 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t State = type metadata accessor for AwardImageLoadState();
  MEMORY[0x270FA5388](State);
  int64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932AE0);
  uint64_t v46 = *(void *)(v16 - 8);
  uint64_t v47 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EAF9150();
  sub_24EB3E0F0();
  sub_24EAEA318(v45, (uint64_t)v15);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    uint64_t v26 = v34;
    uint64_t v27 = v35;
    unint64_t v28 = v15;
    uint64_t v29 = v36;
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v9, v28, v36);
    char v49 = 1;
    sub_24EAF91F8();
    uint64_t v24 = v47;
    sub_24EB3DF70();
    sub_24EAF92E8(&qword_269932088, MEMORY[0x263F07508]);
    uint64_t v30 = v37;
    sub_24EB3DFF0();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v44, v30);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v29);
    return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v18, v24);
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v21 = v40;
    uint64_t v20 = v41;
    uint64_t v22 = v38;
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v38, v15, v41);
    char v50 = 2;
    sub_24EAF91A4();
    char v23 = v39;
    uint64_t v24 = v47;
    sub_24EB3DF70();
    sub_24EAF92E8(&qword_26B1D2798, MEMORY[0x263F06EA8]);
    uint64_t v25 = v43;
    sub_24EB3DFF0();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v23, v25);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v20);
    return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v18, v24);
  }
  char v48 = 0;
  sub_24EAF924C();
  uint64_t v32 = v47;
  sub_24EB3DF70();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v18, v32);
}

uint64_t AwardImageLoadState.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932B08);
  uint64_t v44 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  char v49 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932B10);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v42 = v4;
  uint64_t v43 = v5;
  MEMORY[0x270FA5388](v4);
  char v48 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932B18);
  uint64_t v39 = *(void *)(v7 - 8);
  uint64_t v40 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v47 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932B20);
  uint64_t v46 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t State = type metadata accessor for AwardImageLoadState();
  uint64_t v13 = MEMORY[0x270FA5388](State);
  int64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v36 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v36 - v19;
  uint64_t v21 = a1[3];
  char v50 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v21);
  sub_24EAF9150();
  uint64_t v22 = v51;
  sub_24EB3E0E0();
  if (v22) {
    goto LABEL_7;
  }
  uint64_t v36 = v15;
  uint64_t v37 = v18;
  uint64_t v24 = v47;
  char v23 = v48;
  int64_t v38 = v20;
  uint64_t v51 = State;
  uint64_t v25 = sub_24EB3DF60();
  uint64_t v26 = v9;
  if (*(void *)(v25 + 16) != 1)
  {
    uint64_t v31 = sub_24EB3DE40();
    swift_allocError();
    uint64_t v33 = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269931DD8);
    *uint64_t v33 = v51;
    sub_24EB3DED0();
    sub_24EB3DE30();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v31 - 8) + 104))(v33, *MEMORY[0x263F8DCB0], v31);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v11, v9);
LABEL_7:
    uint64_t v30 = (uint64_t)v50;
    return __swift_destroy_boxed_opaque_existential_1(v30);
  }
  if (*(unsigned char *)(v25 + 32))
  {
    char v53 = 1;
    sub_24EAF91F8();
    sub_24EB3DEC0();
    sub_24EB3D1F0();
    uint64_t v27 = v23;
    sub_24EAF92E8(&qword_2699320B8, MEMORY[0x263F07508]);
    uint64_t v28 = (uint64_t)v37;
    uint64_t v29 = v42;
    sub_24EB3DF50();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v27, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v11, v26);
    uint64_t v30 = (uint64_t)v50;
    swift_storeEnumTagMultiPayload();
    uint64_t v35 = (uint64_t)v38;
    sub_24EAEA694(v28, (uint64_t)v38);
  }
  else
  {
    char v52 = 0;
    sub_24EAF924C();
    sub_24EB3DEC0();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v24, v40);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v11, v9);
    uint64_t v35 = (uint64_t)v38;
    swift_storeEnumTagMultiPayload();
    uint64_t v30 = (uint64_t)v50;
  }
  sub_24EAEA694(v35, v45);
  return __swift_destroy_boxed_opaque_existential_1(v30);
}

uint64_t sub_24EAF89B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AwardImageLoadState.init(from:)(a1, a2);
}

uint64_t sub_24EAF89C8(void *a1)
{
  return AwardImageLoadState.encode(to:)(a1);
}

uint64_t AwardImageLoadState.hash(into:)()
{
  uint64_t v1 = sub_24EB3D190();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24EB3D1F0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t State = type metadata accessor for AwardImageLoadState();
  MEMORY[0x270FA5388](State);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EAEA318(v0, (uint64_t)v11);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v11, v1);
      sub_24EB3E0A0();
      sub_24EAF92E8(&qword_269932AA0, MEMORY[0x263F06EA8]);
      sub_24EB3DBD0();
      return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
    else
    {
      return sub_24EB3E0A0();
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
    sub_24EB3E0A0();
    sub_24EAF92E8(&qword_2699320C0, MEMORY[0x263F07508]);
    sub_24EB3DBD0();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t AwardImageLoadState.hashValue.getter()
{
  return sub_24EB3E0D0();
}

uint64_t sub_24EAF8CE8()
{
  return sub_24EB3E0D0();
}

uint64_t sub_24EAF8D2C()
{
  return sub_24EB3E0D0();
}

uint64_t _s13FitnessAwards19AwardImageLoadStateO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24EB3D190();
  uint64_t v30 = *(void *)(v4 - 8);
  uint64_t v31 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24EB3D1F0();
  uint64_t v32 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t State = type metadata accessor for AwardImageLoadState();
  uint64_t v11 = MEMORY[0x270FA5388](State);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  int64_t v15 = (char *)&v29 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2A60);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (uint64_t)&v19[*(int *)(v17 + 56)];
  sub_24EAEA318(a1, (uint64_t)v19);
  sub_24EAEA318(a2, v20);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    uint64_t v26 = v32;
    sub_24EAEA318((uint64_t)v19, (uint64_t)v15);
    if (!swift_getEnumCaseMultiPayload())
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v26 + 32))(v9, v20, v7);
      char v24 = sub_24EB3D1D0();
      uint64_t v27 = *(void (**)(char *, uint64_t))(v26 + 8);
      v27(v9, v7);
      v27(v15, v7);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v26 + 8))(v15, v7);
    goto LABEL_10;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_24EAEA318((uint64_t)v19, (uint64_t)v13);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = v30;
      uint64_t v22 = v31;
      (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(v6, v20, v31);
      char v24 = MEMORY[0x2533483E0](v13, v6);
      uint64_t v25 = *(void (**)(char *, uint64_t))(v23 + 8);
      v25(v6, v22);
      v25(v13, v22);
LABEL_12:
      sub_24EAF9734((uint64_t)v19);
      return v24 & 1;
    }
    (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v31);
    goto LABEL_10;
  }
  if (swift_getEnumCaseMultiPayload() != 2)
  {
LABEL_10:
    sub_24EAFA0E0((uint64_t)v19);
    char v24 = 0;
    return v24 & 1;
  }
  sub_24EAF9734((uint64_t)v19);
  char v24 = 1;
  return v24 & 1;
}

uint64_t type metadata accessor for AwardImageLoadState()
{
  uint64_t result = qword_26B1D2A38;
  if (!qword_26B1D2A38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_24EAF9150()
{
  unint64_t result = qword_269932AE8;
  if (!qword_269932AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932AE8);
  }
  return result;
}

unint64_t sub_24EAF91A4()
{
  unint64_t result = qword_269932AF0;
  if (!qword_269932AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932AF0);
  }
  return result;
}

unint64_t sub_24EAF91F8()
{
  unint64_t result = qword_269932AF8;
  if (!qword_269932AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932AF8);
  }
  return result;
}

unint64_t sub_24EAF924C()
{
  unint64_t result = qword_269932B00;
  if (!qword_269932B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932B00);
  }
  return result;
}

uint64_t sub_24EAF92A0()
{
  return sub_24EAF92E8((unint64_t *)&qword_26B1D2A30, (void (*)(uint64_t))type metadata accessor for AwardImageLoadState);
}

uint64_t sub_24EAF92E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for AwardImageLoadState(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = sub_24EB3D190();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = sub_24EB3D1F0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for AwardImageLoadState(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v3 = sub_24EB3D190();
  }
  else
  {
    if (result) {
      return result;
    }
    uint64_t v3 = sub_24EB3D1F0();
  }
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(a1, v3);
}

void *initializeWithCopy for AwardImageLoadState(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = sub_24EB3D190();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_24EB3D1F0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithCopy for AwardImageLoadState(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24EAF9734((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = sub_24EB3D190();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = sub_24EB3D1F0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_24EAF9734(uint64_t a1)
{
  uint64_t State = type metadata accessor for AwardImageLoadState();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(State - 8) + 8))(a1, State);
  return a1;
}

void *initializeWithTake for AwardImageLoadState(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = sub_24EB3D190();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_24EB3D1F0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for AwardImageLoadState(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24EAF9734((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = sub_24EB3D190();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = sub_24EB3D1F0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_24EAF99B8()
{
  uint64_t result = sub_24EB3D1F0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_24EB3D190();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AwardImageLoadState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EAF9B48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardImageLoadState.CodingKeys()
{
  return &type metadata for AwardImageLoadState.CodingKeys;
}

ValueMetadata *type metadata accessor for AwardImageLoadState.IdleCodingKeys()
{
  return &type metadata for AwardImageLoadState.IdleCodingKeys;
}

ValueMetadata *type metadata accessor for AwardImageLoadState.FetchingCodingKeys()
{
  return &type metadata for AwardImageLoadState.FetchingCodingKeys;
}

unsigned char *_s13FitnessAwards19AwardImageLoadStateO18FetchingCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24EAF9C40);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardImageLoadState.FetchedCodingKeys()
{
  return &type metadata for AwardImageLoadState.FetchedCodingKeys;
}

unint64_t sub_24EAF9C7C()
{
  unint64_t result = qword_269932B30;
  if (!qword_269932B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932B30);
  }
  return result;
}

unint64_t sub_24EAF9CD4()
{
  unint64_t result = qword_269932B38;
  if (!qword_269932B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932B38);
  }
  return result;
}

unint64_t sub_24EAF9D2C()
{
  unint64_t result = qword_269932B40;
  if (!qword_269932B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932B40);
  }
  return result;
}

unint64_t sub_24EAF9D84()
{
  unint64_t result = qword_269932B48;
  if (!qword_269932B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932B48);
  }
  return result;
}

unint64_t sub_24EAF9DDC()
{
  unint64_t result = qword_269932B50;
  if (!qword_269932B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932B50);
  }
  return result;
}

unint64_t sub_24EAF9E34()
{
  unint64_t result = qword_269932B58;
  if (!qword_269932B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932B58);
  }
  return result;
}

unint64_t sub_24EAF9E8C()
{
  unint64_t result = qword_269932B60;
  if (!qword_269932B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932B60);
  }
  return result;
}

unint64_t sub_24EAF9EE4()
{
  unint64_t result = qword_269932B68;
  if (!qword_269932B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932B68);
  }
  return result;
}

unint64_t sub_24EAF9F3C()
{
  unint64_t result = qword_269932B70;
  if (!qword_269932B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932B70);
  }
  return result;
}

unint64_t sub_24EAF9F94()
{
  unint64_t result = qword_269932B78;
  if (!qword_269932B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932B78);
  }
  return result;
}

unint64_t sub_24EAF9FEC()
{
  unint64_t result = qword_269932B80;
  if (!qword_269932B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932B80);
  }
  return result;
}

uint64_t sub_24EAFA040(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x4C52556567616D69 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_24EAFA0C8()
{
  return 0x4C52556567616D69;
}

uint64_t sub_24EAFA0E0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2A60);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

FitnessAwards::FontDescriptor __swiftcall FontDescriptor.init(style:weight:)(FitnessAwards::FontStyle style, FitnessAwards::FontWeight weight)
{
  char v3 = *(unsigned char *)weight;
  *uint64_t v2 = *(unsigned char *)style;
  v2[1] = v3;
  result.style = style;
  return result;
}

void FontDescriptor.style.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

void FontDescriptor.weight.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

uint64_t sub_24EAFA16C(char a1)
{
  if (a1) {
    return 0x746867696577;
  }
  else {
    return 0x656C797473;
  }
}

uint64_t sub_24EAFA19C()
{
  return sub_24EAFA16C(*v0);
}

uint64_t sub_24EAFA1A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EAFAD74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EAFA1CC(uint64_t a1)
{
  unint64_t v2 = sub_24EAFA3DC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAFA208(uint64_t a1)
{
  unint64_t v2 = sub_24EAFA3DC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FontDescriptor.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932B88);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  int v11 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EAFA3DC();
  sub_24EB3E0F0();
  char v15 = v8;
  char v14 = 0;
  sub_24EAFA430();
  sub_24EB3DFF0();
  if (!v2)
  {
    char v13 = v11;
    char v12 = 1;
    sub_24EAFA484();
    sub_24EB3DFF0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_24EAFA3DC()
{
  unint64_t result = qword_269932B90;
  if (!qword_269932B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932B90);
  }
  return result;
}

unint64_t sub_24EAFA430()
{
  unint64_t result = qword_269932B98;
  if (!qword_269932B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932B98);
  }
  return result;
}

unint64_t sub_24EAFA484()
{
  unint64_t result = qword_269932BA0;
  if (!qword_269932BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932BA0);
  }
  return result;
}

uint64_t FontDescriptor.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932BA8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EAFA3DC();
  sub_24EB3E0E0();
  if (!v2)
  {
    char v15 = 0;
    sub_24EAFA6A8();
    sub_24EB3DF50();
    char v9 = v16;
    char v13 = 1;
    sub_24EAFA6FC();
    sub_24EB3DF50();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v10 = v14;
    *a2 = v9;
    a2[1] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_24EAFA6A8()
{
  unint64_t result = qword_269932BB0;
  if (!qword_269932BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932BB0);
  }
  return result;
}

unint64_t sub_24EAFA6FC()
{
  unint64_t result = qword_269932BB8;
  if (!qword_269932BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932BB8);
  }
  return result;
}

uint64_t sub_24EAFA750@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FontDescriptor.init(from:)(a1, a2);
}

uint64_t sub_24EAFA768(void *a1)
{
  return FontDescriptor.encode(to:)(a1);
}

uint64_t FontDescriptor.hash(into:)()
{
  return sub_24EB3E0A0();
}

uint64_t static FontDescriptor.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return (*a1 == *a2) & (a2[1] ^ a1[1] ^ 1u);
}

uint64_t FontDescriptor.hashValue.getter()
{
  return sub_24EB3E0D0();
}

uint64_t sub_24EAFA848()
{
  return sub_24EB3E0D0();
}

uint64_t sub_24EAFA8A8()
{
  return sub_24EB3E0A0();
}

uint64_t sub_24EAFA8E8()
{
  return sub_24EB3E0D0();
}

uint64_t sub_24EAFA944(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return (*a1 == *a2) & (a2[1] ^ a1[1] ^ 1u);
}

unint64_t sub_24EAFA970()
{
  unint64_t result = qword_269932BC0;
  if (!qword_269932BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932BC0);
  }
  return result;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for FontDescriptor(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 65281 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65281 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65281;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
LABEL_17:
  unsigned int v6 = *((unsigned __int8 *)a1 + 1);
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FontDescriptor(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EAFAB30);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)(result + 1) = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FontDescriptor()
{
  return &type metadata for FontDescriptor;
}

unsigned char *storeEnumTagSinglePayload for FontDescriptor.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EAFAC34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FontDescriptor.CodingKeys()
{
  return &type metadata for FontDescriptor.CodingKeys;
}

unint64_t sub_24EAFAC70()
{
  unint64_t result = qword_269932BC8;
  if (!qword_269932BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932BC8);
  }
  return result;
}

unint64_t sub_24EAFACC8()
{
  unint64_t result = qword_269932BD0;
  if (!qword_269932BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932BD0);
  }
  return result;
}

unint64_t sub_24EAFAD20()
{
  unint64_t result = qword_269932BD8;
  if (!qword_269932BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932BD8);
  }
  return result;
}

uint64_t sub_24EAFAD74(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x656C797473 && a2 == 0xE500000000000000;
  if (v3 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746867696577 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t SectionDensityFactor.init(count:spacing:span:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  *(void *)a3 = result;
  *(double *)(a3 + 8) = a4;
  *(void *)(a3 + 16) = a2;
  return result;
}

void static SectionDensityFactor.zero.getter(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

uint64_t sub_24EAFAE6C(char a1)
{
  return *(void *)&aCount_0[8 * a1];
}

uint64_t sub_24EAFAE8C()
{
  return sub_24EAFAE6C(*v0);
}

uint64_t sub_24EAFAE94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EAFB820(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EAFAEBC(uint64_t a1)
{
  unint64_t v2 = sub_24EAFB0F0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAFAEF8(uint64_t a1)
{
  unint64_t v2 = sub_24EAFB0F0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SectionDensityFactor.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932BE0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  BOOL v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 8);
  uint64_t v10 = *(void *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EAFB0F0();
  sub_24EB3E0F0();
  char v14 = 0;
  sub_24EB3DFE0();
  if (!v2)
  {
    uint64_t v13 = v8;
    char v12 = 1;
    sub_24EAB67FC();
    sub_24EB3DFF0();
    char v11 = 2;
    sub_24EB3DFE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_24EAFB0F0()
{
  unint64_t result = qword_269932BE8;
  if (!qword_269932BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932BE8);
  }
  return result;
}

uint64_t SectionDensityFactor.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932BF0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EAFB0F0();
  sub_24EB3E0E0();
  if (!v2)
  {
    char v15 = 0;
    uint64_t v9 = sub_24EB3DF40();
    v13[15] = 1;
    sub_24EAB6B8C();
    sub_24EB3DF50();
    uint64_t v11 = v14;
    v13[14] = 2;
    uint64_t v12 = sub_24EB3DF40();
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
    a2[2] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_24EAFB334@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return SectionDensityFactor.init(from:)(a1, a2);
}

uint64_t sub_24EAFB34C(void *a1)
{
  return SectionDensityFactor.encode(to:)(a1);
}

uint64_t SectionDensityFactor.hash(into:)()
{
  return sub_24EB3E0A0();
}

BOOL static SectionDensityFactor.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 == *(void *)a2
      && *(double *)(a1 + 8) == *(double *)(a2 + 8)
      && *(void *)(a1 + 16) == *(void *)(a2 + 16);
}

uint64_t SectionDensityFactor.hashValue.getter()
{
  return sub_24EB3E0D0();
}

uint64_t sub_24EAFB45C()
{
  return sub_24EB3E0A0();
}

uint64_t sub_24EAFB4A8()
{
  return sub_24EB3E0D0();
}

unint64_t sub_24EAFB518()
{
  unint64_t result = qword_269932BF8;
  if (!qword_269932BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932BF8);
  }
  return result;
}

BOOL sub_24EAFB56C(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 == *(void *)a2
      && *(double *)(a1 + 8) == *(double *)(a2 + 8)
      && *(void *)(a1 + 16) == *(void *)(a2 + 16);
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for SectionDensityFactor(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SectionDensityFactor(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for SectionDensityFactor()
{
  return &type metadata for SectionDensityFactor;
}

unsigned char *storeEnumTagSinglePayload for SectionDensityFactor.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EAFB6E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SectionDensityFactor.CodingKeys()
{
  return &type metadata for SectionDensityFactor.CodingKeys;
}

unint64_t sub_24EAFB71C()
{
  unint64_t result = qword_269932C00;
  if (!qword_269932C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932C00);
  }
  return result;
}

unint64_t sub_24EAFB774()
{
  unint64_t result = qword_269932C08;
  if (!qword_269932C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932C08);
  }
  return result;
}

unint64_t sub_24EAFB7CC()
{
  unint64_t result = qword_269932C10;
  if (!qword_269932C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932C10);
  }
  return result;
}

uint64_t sub_24EAFB820(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x746E756F63 && a2 == 0xE500000000000000;
  if (v3 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E6963617073 && a2 == 0xE700000000000000 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1851879539 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t AwardLockupState.init(templateUniqueName:layout:description:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = a1;
  a5[1] = a2;
  uint64_t v8 = type metadata accessor for AwardLockupState();
  sub_24EAFBA40(a3, (uint64_t)a5 + *(int *)(v8 + 20));
  uint64_t v9 = (char *)a5 + *(int *)(v8 + 24);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FB0);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  return v11(v9, a4, v10);
}

uint64_t type metadata accessor for AwardLockupState()
{
  uint64_t result = qword_26B1D2978;
  if (!qword_26B1D2978) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24EAFBA40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AwardLockupLayout();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t AwardLockupState.templateUniqueName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AwardLockupState.layout.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for AwardLockupState();
  return sub_24EAFC634(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(void))type metadata accessor for AwardLockupLayout);
}

uint64_t AwardLockupState.layout.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AwardLockupState() + 20);
  return sub_24EAFBB64(a1, v3);
}

uint64_t sub_24EAFBB64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AwardLockupLayout();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*AwardLockupState.layout.modify())()
{
  return nullsub_1;
}

uint64_t AwardLockupState.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AwardLockupState() + 24);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FB0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t AwardLockupState.description.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AwardLockupState() + 24);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FB0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*AwardLockupState.description.modify())()
{
  return nullsub_1;
}

uint64_t sub_24EAFBD50(char a1)
{
  if (!a1) {
    return 0xD000000000000012;
  }
  if (a1 == 1) {
    return 0x74756F79616CLL;
  }
  return 0x7470697263736564;
}

uint64_t sub_24EAFBDB0()
{
  return sub_24EAFBD50(*v0);
}

uint64_t sub_24EAFBDB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EAFD81C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EAFBDE0(uint64_t a1)
{
  unint64_t v2 = sub_24EAFC068();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAFBE1C(uint64_t a1)
{
  unint64_t v2 = sub_24EAFC068();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AwardLockupState.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932C18);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EAFC068();
  sub_24EB3E0F0();
  v8[15] = 0;
  sub_24EB3DFB0();
  if (!v1)
  {
    type metadata accessor for AwardLockupState();
    v8[14] = 1;
    type metadata accessor for AwardLockupLayout();
    sub_24EAFC580(&qword_269932C28);
    sub_24EB3DFF0();
    v8[13] = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FB0);
    sub_24EAFC5C4(&qword_269932C30);
    sub_24EB3DFF0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_24EAFC068()
{
  unint64_t result = qword_269932C20;
  if (!qword_269932C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932C20);
  }
  return result;
}

unint64_t sub_24EAFC0BC()
{
  unint64_t result = qword_269932C38;
  if (!qword_269932C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932C38);
  }
  return result;
}

unint64_t sub_24EAFC110()
{
  unint64_t result = qword_269932C40;
  if (!qword_269932C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932C40);
  }
  return result;
}

uint64_t AwardLockupState.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FB0);
  uint64_t v21 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  char v24 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for AwardLockupLayout();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932C48);
  uint64_t v25 = *(void *)(v8 - 8);
  uint64_t v26 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for AwardLockupState();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (uint64_t *)((char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = a1[3];
  uint64_t v27 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_24EAFC068();
  sub_24EB3E0E0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  }
  char v30 = 0;
  uint64_t v15 = v25;
  *uint64_t v13 = sub_24EB3DF10();
  v13[1] = v16;
  uint64_t v20 = v13;
  char v29 = 1;
  sub_24EAFC580(&qword_269932C50);
  sub_24EB3DF50();
  uint64_t v17 = (uint64_t)v20;
  sub_24EAFBA40((uint64_t)v7, (uint64_t)v20 + *(int *)(v11 + 20));
  char v28 = 2;
  sub_24EAFC5C4(&qword_269932C58);
  uint64_t v18 = v23;
  sub_24EB3DF50();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v26);
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v17 + *(int *)(v11 + 24), v24, v18);
  sub_24EAFC634(v17, v22, (uint64_t (*)(void))type metadata accessor for AwardLockupState);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return sub_24EAFC69C(v17, (uint64_t (*)(void))type metadata accessor for AwardLockupState);
}

uint64_t sub_24EAFC580(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for AwardLockupLayout();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EAFC5C4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2FB0);
    sub_24EAFC0BC();
    sub_24EAFC110();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EAFC634(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24EAFC69C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24EAFC6FC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AwardLockupState.init(from:)(a1, a2);
}

uint64_t sub_24EAFC714(void *a1)
{
  return AwardLockupState.encode(to:)(a1);
}

uint64_t static AwardLockupState.== infix(_:_:)(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_24EB3E010() & 1) == 0) {
    return 0;
  }
  uint64_t v5 = type metadata accessor for AwardLockupState();
  if (!_s13FitnessAwards17AwardLockupLayoutV2eeoiySbAC_ACtFZ_0((double *)((char *)a1 + *(int *)(v5 + 20)), (double *)((char *)a2 + *(int *)(v5 + 20))))return 0; {
  uint64_t v6 = *(int *)(v5 + 24);
  }
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  unint64_t v9 = sub_24EAD0090();
  return MEMORY[0x270F25288](v7, v8, &type metadata for AwardDescription, v9);
}

uint64_t sub_24EAFC7E4(void *a1, void *a2, uint64_t a3)
{
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (!v6 && (sub_24EB3E010() & 1) == 0
    || !_s13FitnessAwards17AwardLockupLayoutV2eeoiySbAC_ACtFZ_0((double *)((char *)a1 + *(int *)(a3 + 20)), (double *)((char *)a2 + *(int *)(a3 + 20))))
  {
    return 0;
  }
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  unint64_t v9 = (char *)a2 + v7;
  unint64_t v10 = sub_24EAD0090();
  return MEMORY[0x270F25288](v8, v9, &type metadata for AwardDescription, v10);
}

uint64_t *initializeBufferWithCopyOfBuffer for AwardLockupState(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  BOOL v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    uint64_t *v4 = *a2;
    BOOL v4 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    unint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    uint64_t v11 = (int *)type metadata accessor for AwardLockupLayout();
    uint64_t v12 = v11[5];
    char v24 = &v10[v12];
    uint64_t v25 = &v9[v12];
    uint64_t v13 = sub_24EB3D280();
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    v14(v25, v24, v13);
    v14(&v9[v11[6]], &v10[v11[6]], v13);
    *(void *)&v9[v11[7]] = *(void *)&v10[v11[7]];
    v9[v11[8]] = v10[v11[8]];
    *(void *)&v9[v11[9]] = *(void *)&v10[v11[9]];
    uint64_t v15 = v11[10];
    uint64_t v16 = &v9[v15];
    uint64_t v17 = &v10[v15];
    v16[8] = v17[8];
    *(void *)uint64_t v16 = *(void *)v17;
    *(_WORD *)&v9[v11[11]] = *(_WORD *)&v10[v11[11]];
    *(_WORD *)&v9[v11[12]] = *(_WORD *)&v10[v11[12]];
    *(void *)&v9[v11[13]] = *(void *)&v10[v11[13]];
    uint64_t v18 = *(int *)(a3 + 24);
    uint64_t v19 = (char *)v4 + v18;
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FB0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  }
  return v4;
}

uint64_t destroy for AwardLockupState(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for AwardLockupLayout();
  uint64_t v6 = v4 + *(int *)(v5 + 20);
  uint64_t v7 = sub_24EB3D280();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(v4 + *(int *)(v5 + 24), v7);
  uint64_t v9 = a1 + *(int *)(a2 + 24);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FB0);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  return v11(v9, v10);
}

void *initializeWithCopy for AwardLockupState(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *(void *)((char *)a1 + v6) = *(void *)((char *)a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for AwardLockupLayout();
  uint64_t v10 = v9[5];
  uint64_t v22 = &v7[v10];
  uint64_t v11 = &v8[v10];
  uint64_t v12 = sub_24EB3D280();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  v13(v22, v11, v12);
  v13(&v7[v9[6]], &v8[v9[6]], v12);
  *(void *)&v7[v9[7]] = *(void *)&v8[v9[7]];
  v7[v9[8]] = v8[v9[8]];
  *(void *)&v7[v9[9]] = *(void *)&v8[v9[9]];
  uint64_t v14 = v9[10];
  uint64_t v15 = &v7[v14];
  uint64_t v16 = &v8[v14];
  v15[8] = v16[8];
  *(void *)uint64_t v15 = *(void *)v16;
  *(_WORD *)&v7[v9[11]] = *(_WORD *)&v8[v9[11]];
  *(_WORD *)&v7[v9[12]] = *(_WORD *)&v8[v9[12]];
  *(void *)&v7[v9[13]] = *(void *)&v8[v9[13]];
  uint64_t v17 = *(int *)(a3 + 24);
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FB0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  return a1;
}

void *assignWithCopy for AwardLockupState(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *(void *)((char *)a1 + v6) = *(void *)((char *)a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for AwardLockupLayout();
  uint64_t v10 = v9[5];
  uint64_t v11 = &v7[v10];
  uint64_t v12 = &v8[v10];
  uint64_t v13 = sub_24EB3D280();
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24);
  v14(v11, v12, v13);
  v14(&v7[v9[6]], &v8[v9[6]], v13);
  *(void *)&v7[v9[7]] = *(void *)&v8[v9[7]];
  v7[v9[8]] = v8[v9[8]];
  *(void *)&v7[v9[9]] = *(void *)&v8[v9[9]];
  uint64_t v15 = v9[10];
  uint64_t v16 = &v7[v15];
  uint64_t v17 = &v8[v15];
  char v18 = v17[8];
  *(void *)uint64_t v16 = *(void *)v17;
  v16[8] = v18;
  uint64_t v19 = v9[11];
  uint64_t v20 = &v7[v19];
  uint64_t v21 = &v8[v19];
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  uint64_t v22 = v9[12];
  uint64_t v23 = &v7[v22];
  char v24 = &v8[v22];
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  *(void *)&v7[v9[13]] = *(void *)&v8[v9[13]];
  uint64_t v25 = *(int *)(a3 + 24);
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FB0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 24))(v26, v27, v28);
  return a1;
}

_OWORD *initializeWithTake for AwardLockupState(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  *(void *)((char *)a1 + v5) = *(void *)((char *)a2 + v5);
  uint64_t v8 = (int *)type metadata accessor for AwardLockupLayout();
  uint64_t v9 = v8[5];
  uint64_t v10 = &v6[v9];
  uint64_t v11 = &v7[v9];
  uint64_t v12 = sub_24EB3D280();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32);
  v13(v10, v11, v12);
  v13(&v6[v8[6]], &v7[v8[6]], v12);
  *(void *)&v6[v8[7]] = *(void *)&v7[v8[7]];
  v6[v8[8]] = v7[v8[8]];
  *(void *)&v6[v8[9]] = *(void *)&v7[v8[9]];
  uint64_t v14 = v8[10];
  uint64_t v15 = &v6[v14];
  uint64_t v16 = &v7[v14];
  v15[8] = v16[8];
  *(void *)uint64_t v15 = *(void *)v16;
  *(_WORD *)&v6[v8[11]] = *(_WORD *)&v7[v8[11]];
  *(_WORD *)&v6[v8[12]] = *(_WORD *)&v7[v8[12]];
  *(void *)&v6[v8[13]] = *(void *)&v7[v8[13]];
  uint64_t v17 = *(int *)(a3 + 24);
  char v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FB0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  return a1;
}

void *assignWithTake for AwardLockupState(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  *(void *)((char *)a1 + v7) = *(void *)((char *)a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for AwardLockupLayout();
  uint64_t v11 = v10[5];
  uint64_t v12 = &v8[v11];
  uint64_t v13 = &v9[v11];
  uint64_t v14 = sub_24EB3D280();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40);
  v15(v12, v13, v14);
  v15(&v8[v10[6]], &v9[v10[6]], v14);
  *(void *)&v8[v10[7]] = *(void *)&v9[v10[7]];
  v8[v10[8]] = v9[v10[8]];
  *(void *)&v8[v10[9]] = *(void *)&v9[v10[9]];
  uint64_t v16 = v10[10];
  uint64_t v17 = &v8[v16];
  char v18 = &v9[v16];
  v17[8] = v18[8];
  *(void *)uint64_t v17 = *(void *)v18;
  uint64_t v19 = v10[11];
  uint64_t v20 = &v8[v19];
  uint64_t v21 = &v9[v19];
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  uint64_t v22 = v10[12];
  uint64_t v23 = &v8[v22];
  char v24 = &v9[v22];
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  *(void *)&v8[v10[13]] = *(void *)&v9[v10[13]];
  uint64_t v25 = *(int *)(a3 + 24);
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FB0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 40))(v26, v27, v28);
  return a1;
}

uint64_t getEnumTagSinglePayload for AwardLockupState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EAFD26C);
}

uint64_t sub_24EAFD26C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for AwardLockupLayout();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FB0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for AwardLockupState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EAFD3B0);
}

uint64_t sub_24EAFD3B0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for AwardLockupLayout();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FB0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 24);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_24EAFD4E0()
{
  type metadata accessor for AwardLockupLayout();
  if (v0 <= 0x3F)
  {
    sub_24EAFD5B4();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_24EAFD5B4()
{
  if (!qword_26B1D2FB8)
  {
    sub_24EAD0090();
    unint64_t v0 = sub_24EB3DB60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B1D2FB8);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for AwardLockupState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EAFD6DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardLockupState.CodingKeys()
{
  return &type metadata for AwardLockupState.CodingKeys;
}

unint64_t sub_24EAFD718()
{
  unint64_t result = qword_269932C60;
  if (!qword_269932C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932C60);
  }
  return result;
}

unint64_t sub_24EAFD770()
{
  unint64_t result = qword_269932C68;
  if (!qword_269932C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932C68);
  }
  return result;
}

unint64_t sub_24EAFD7C8()
{
  unint64_t result = qword_269932C70;
  if (!qword_269932C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932C70);
  }
  return result;
}

uint64_t sub_24EAFD81C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x800000024EB4A250 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74756F79616CLL && a2 == 0xE600000000000000 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t AwardProgressState.init(fontDescriptor:templateUniqueName:loadState:storefrontLocale:)@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char v9 = a1[1];
  *(unsigned char *)a6 = *a1;
  *(unsigned char *)(a6 + 1) = v9;
  *(void *)(a6 + 8) = a2;
  *(void *)(a6 + 16) = a3;
  uint64_t v10 = type metadata accessor for AwardProgressState();
  sub_24EAC0E18(a4, a6 + *(int *)(v10 + 24));
  uint64_t v11 = a6 + *(int *)(v10 + 28);
  uint64_t v12 = sub_24EB3D220();
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32);
  return v13(v11, a5, v12);
}

uint64_t type metadata accessor for AwardProgressState()
{
  uint64_t result = qword_26B1D2A20;
  if (!qword_26B1D2A20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void AwardProgressState.fontDescriptor.getter(unsigned char *a1@<X8>)
{
  char v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
}

uint64_t AwardProgressState.templateUniqueName.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AwardProgressState.loadState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for AwardProgressState();
  return sub_24EAFE6AC(v1 + *(int *)(v3 + 24), a1, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
}

uint64_t AwardProgressState.loadState.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AwardProgressState() + 24);
  return sub_24EAFDB40(a1, v3);
}

uint64_t sub_24EAFDB40(uint64_t a1, uint64_t a2)
{
  uint64_t State = type metadata accessor for AwardProgressLoadState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(State - 8) + 40))(a2, a1, State);
  return a2;
}

uint64_t (*AwardProgressState.loadState.modify())()
{
  return nullsub_1;
}

uint64_t AwardProgressState.storefrontLocale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AwardProgressState() + 28);
  uint64_t v4 = sub_24EB3D220();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t AwardProgressState.storefrontLocale.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AwardProgressState() + 28);
  uint64_t v4 = sub_24EB3D220();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*AwardProgressState.storefrontLocale.modify())()
{
  return nullsub_1;
}

unint64_t sub_24EAFDD24(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      return result;
    case 2:
      unint64_t result = 0x7461745364616F6CLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      unint64_t result = 0x63736544746E6F66;
      break;
  }
  return result;
}

unint64_t sub_24EAFDDD4()
{
  return sub_24EAFDD24(*v0);
}

uint64_t sub_24EAFDDDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EAFFA94(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EAFDE04(uint64_t a1)
{
  unint64_t v2 = sub_24EAFE0F8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EAFDE40(uint64_t a1)
{
  unint64_t v2 = sub_24EAFE0F8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AwardProgressState.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932C78);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EAFE0F8();
  sub_24EB3E0F0();
  char v9 = v3[1];
  v11[14] = *v3;
  v11[15] = v9;
  v11[13] = 0;
  sub_24EAFE14C();
  sub_24EB3DFF0();
  if (!v2)
  {
    v11[12] = 1;
    sub_24EB3DFB0();
    type metadata accessor for AwardProgressState();
    v11[11] = 2;
    type metadata accessor for AwardProgressLoadState();
    sub_24EAFEC28(&qword_269932C90, (void (*)(uint64_t))type metadata accessor for AwardProgressLoadState);
    sub_24EB3DFF0();
    v11[10] = 3;
    sub_24EB3D220();
    sub_24EAFEC28(&qword_269932C98, MEMORY[0x263F07690]);
    sub_24EB3DFF0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_24EAFE0F8()
{
  unint64_t result = qword_269932C80;
  if (!qword_269932C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932C80);
  }
  return result;
}

unint64_t sub_24EAFE14C()
{
  unint64_t result = qword_269932C88;
  if (!qword_269932C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932C88);
  }
  return result;
}

uint64_t AwardProgressState.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v30 = sub_24EB3D220();
  uint64_t v26 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  char v29 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t State = type metadata accessor for AwardProgressLoadState();
  MEMORY[0x270FA5388](State);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932CA0);
  uint64_t v28 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AwardProgressState();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  uint64_t v32 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_24EAFE0F8();
  uint64_t v13 = v33;
  sub_24EB3E0E0();
  if (v13) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  }
  uint64_t v33 = v6;
  uint64_t v25 = v9;
  uint64_t v14 = v11;
  uint64_t v15 = v28;
  uint64_t v16 = v29;
  uint64_t v17 = v30;
  char v37 = 0;
  sub_24EAFE658();
  uint64_t v18 = v31;
  sub_24EB3DF50();
  char v19 = v39;
  uint64_t v20 = (uint64_t)v14;
  *uint64_t v14 = v38;
  v14[1] = v19;
  char v36 = 1;
  *((void *)v14 + 1) = sub_24EB3DF10();
  *((void *)v14 + 2) = v21;
  char v35 = 2;
  sub_24EAFEC28(&qword_269932CB0, (void (*)(uint64_t))type metadata accessor for AwardProgressLoadState);
  uint64_t v22 = (uint64_t)v33;
  sub_24EB3DF50();
  sub_24EAC0E18(v22, v20 + *(int *)(v25 + 24));
  char v34 = 3;
  sub_24EAFEC28(&qword_269932CB8, MEMORY[0x263F07690]);
  sub_24EB3DF50();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v18);
  (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v20 + *(int *)(v25 + 28), v16, v17);
  sub_24EAFE6AC(v20, v27, (uint64_t (*)(void))type metadata accessor for AwardProgressState);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  return sub_24EAFE714(v20, (uint64_t (*)(void))type metadata accessor for AwardProgressState);
}

unint64_t sub_24EAFE658()
{
  unint64_t result = qword_269932CA8;
  if (!qword_269932CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932CA8);
  }
  return result;
}

uint64_t sub_24EAFE6AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24EAFE714(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24EAFE774@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AwardProgressState.init(from:)(a1, a2);
}

uint64_t sub_24EAFE78C(void *a1)
{
  return AwardProgressState.encode(to:)(a1);
}

uint64_t AwardProgressState.hash(into:)()
{
  uint64_t v1 = sub_24EB3D1F0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t State = type metadata accessor for AwardProgressLoadState();
  MEMORY[0x270FA5388](State);
  uint64_t v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_24EB3E0A0();
  sub_24EB3E0A0();
  swift_bridgeObjectRetain();
  sub_24EB3DCA0();
  swift_bridgeObjectRelease();
  uint64_t v8 = type metadata accessor for AwardProgressState();
  sub_24EAFE6AC(v0 + *(int *)(v8 + 24), (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_24EAC10A4((uint64_t)v7, (uint64_t)v12);
      sub_24EB3E0A0();
      AwardProgress.hash(into:)();
      sub_24EAC11C8((uint64_t)v12);
    }
    else
    {
      sub_24EB3E0A0();
    }
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_24EB3E0A0();
    sub_24EAFEC28(&qword_2699320C0, MEMORY[0x263F07508]);
    sub_24EB3DBD0();
    (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
  }
  sub_24EB3D220();
  sub_24EAFEC28(&qword_269932CC0, MEMORY[0x263F07690]);
  return sub_24EB3DBD0();
}

uint64_t AwardProgressState.hashValue.getter()
{
  return sub_24EB3E0D0();
}

uint64_t sub_24EAFEAA0()
{
  return sub_24EB3E0D0();
}

uint64_t sub_24EAFEAE4()
{
  return sub_24EB3E0D0();
}

uint64_t _s13FitnessAwards18AwardProgressStateV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 == *a2 && ((a1[1] ^ a2[1]) & 1) == 0)
  {
    BOOL v4 = *((void *)a1 + 1) == *((void *)a2 + 1) && *((void *)a1 + 2) == *((void *)a2 + 2);
    if (v4 || (sub_24EB3E010() & 1) != 0)
    {
      uint64_t v5 = type metadata accessor for AwardProgressState();
      if (_s13FitnessAwards22AwardProgressLoadStateO2eeoiySbAC_ACtFZ_0((uint64_t)&a1[*(int *)(v5 + 24)], (uint64_t)&a2[*(int *)(v5 + 24)]))
      {
        JUMPOUT(0x253348470);
      }
    }
  }
  return 0;
}

uint64_t sub_24EAFEBE0()
{
  return sub_24EAFEC28((unint64_t *)&qword_26B1D2A18, (void (*)(uint64_t))type metadata accessor for AwardProgressState);
}

uint64_t sub_24EAFEC28(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for AwardProgressState(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  BOOL v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    uint64_t *v4 = *a2;
    BOOL v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    uint64_t v7 = a2[2];
    a1[1] = a2[1];
    a1[2] = v7;
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (char *)a2 + v8;
    uint64_t State = type metadata accessor for AwardProgressLoadState();
    swift_bridgeObjectRetain();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v15 = *(void *)v10;
      uint64_t v16 = *((void *)v10 + 1);
      uint64_t v17 = *((void *)v10 + 2);
      uint64_t v18 = *((void *)v10 + 3);
      char v19 = v10[32];
      sub_24EAC16CC(v15, v16, v17, v18, v19);
      *uint64_t v9 = v15;
      v9[1] = v16;
      void v9[2] = v17;
      v9[3] = v18;
      *((unsigned char *)v9 + 32) = v19;
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v9, v10, *(void *)(*(void *)(State - 8) + 64));
    }
    else
    {
      uint64_t v13 = sub_24EB3D1F0();
      (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v9, v10, v13);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v20 = *(int *)(a3 + 28);
    uint64_t v21 = (char *)v4 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = sub_24EB3D220();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return v4;
}

uint64_t destroy for AwardProgressState(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  type metadata accessor for AwardProgressLoadState();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    sub_24EAB1A70(*(void *)v4, *(void *)(v4 + 8), *(void *)(v4 + 16), *(void *)(v4 + 24), *(unsigned char *)(v4 + 32));
  }
  else if (!EnumCaseMultiPayload)
  {
    uint64_t v6 = sub_24EB3D1F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 28);
  uint64_t v8 = sub_24EB3D220();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  return v9(v7, v8);
}

uint64_t initializeWithCopy for AwardProgressState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (uint64_t *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t State = type metadata accessor for AwardProgressLoadState();
  swift_bridgeObjectRetain();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v13 = *(void *)v9;
    uint64_t v14 = *((void *)v9 + 1);
    uint64_t v15 = *((void *)v9 + 2);
    uint64_t v16 = *((void *)v9 + 3);
    char v17 = *((unsigned char *)v9 + 32);
    sub_24EAC16CC(v13, v14, v15, v16, v17);
    uint64_t *v8 = v13;
    v8[1] = v14;
    v8[2] = v15;
    v8[3] = v16;
    *((unsigned char *)v8 + 32) = v17;
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v8, v9, *(void *)(*(void *)(State - 8) + 64));
  }
  else
  {
    uint64_t v12 = sub_24EB3D1F0();
    (*(void (**)(uint64_t *, const void *, uint64_t))(*(void *)(v12 - 8) + 16))(v8, v9, v12);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v18 = *(int *)(a3 + 28);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = sub_24EB3D220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  return a1;
}

uint64_t assignWithCopy for AwardProgressState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (uint64_t *)(a1 + v6);
    uint64_t v8 = (const void *)(a2 + v6);
    sub_24EAFE714(a1 + v6, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
    uint64_t State = type metadata accessor for AwardProgressLoadState();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v12 = *(void *)v8;
      uint64_t v13 = *((void *)v8 + 1);
      uint64_t v14 = *((void *)v8 + 2);
      uint64_t v15 = *((void *)v8 + 3);
      char v16 = *((unsigned char *)v8 + 32);
      sub_24EAC16CC(v12, v13, v14, v15, v16);
      *uint64_t v7 = v12;
      v7[1] = v13;
      v7[2] = v14;
      v7[3] = v15;
      *((unsigned char *)v7 + 32) = v16;
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v7, v8, *(void *)(*(void *)(State - 8) + 64));
    }
    else
    {
      uint64_t v11 = sub_24EB3D1F0();
      (*(void (**)(uint64_t *, const void *, uint64_t))(*(void *)(v11 - 8) + 16))(v7, v8, v11);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v17 = *(int *)(a3 + 28);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_24EB3D220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 24))(v18, v19, v20);
  return a1;
}

uint64_t initializeWithTake for AwardProgressState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t State = type metadata accessor for AwardProgressLoadState();
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v7, v8, *(void *)(*(void *)(State - 8) + 64));
  }
  else
  {
    uint64_t v10 = sub_24EB3D1F0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_24EB3D220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for AwardProgressState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (const void *)(a2 + v7);
    sub_24EAFE714(a1 + v7, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
    uint64_t State = type metadata accessor for AwardProgressLoadState();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v8, v9, *(void *)(*(void *)(State - 8) + 64));
    }
    else
    {
      uint64_t v11 = sub_24EB3D1F0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_24EB3D220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for AwardProgressState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EAFF540);
}

uint64_t sub_24EAFF540(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t State = type metadata accessor for AwardProgressLoadState();
    uint64_t v9 = *(void *)(State - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = State;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_24EB3D220();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for AwardProgressState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EAFF680);
}

uint64_t sub_24EAFF680(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t State = type metadata accessor for AwardProgressLoadState();
    uint64_t v9 = *(void *)(State - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = State;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_24EB3D220();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_24EAFF7AC()
{
  uint64_t result = type metadata accessor for AwardProgressLoadState();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_24EB3D220();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AwardProgressState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EAFF954);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardProgressState.CodingKeys()
{
  return &type metadata for AwardProgressState.CodingKeys;
}

unint64_t sub_24EAFF990()
{
  unint64_t result = qword_269932CC8;
  if (!qword_269932CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932CC8);
  }
  return result;
}

unint64_t sub_24EAFF9E8()
{
  unint64_t result = qword_269932CD0;
  if (!qword_269932CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932CD0);
  }
  return result;
}

unint64_t sub_24EAFFA40()
{
  unint64_t result = qword_269932CD8;
  if (!qword_269932CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932CD8);
  }
  return result;
}

uint64_t sub_24EAFFA94(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x63736544746E6F66 && a2 == 0xEE00726F74706972;
  if (v3 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000024EB4A250 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7461745364616F6CLL && a2 == 0xE900000000000065 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024EB4AA90)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t PlaceholderReferenceType.rawValue.getter(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6169726F74696465;
      break;
    case 2:
      return result;
    case 3:
      unint64_t result = 0x7974696C61646F6DLL;
      break;
    case 4:
      unint64_t result = 0x7473696C79616C70;
      break;
    case 5:
      unint64_t result = 0x6D6172676F7270;
      break;
    case 6:
      unint64_t result = 7367028;
      break;
    case 7:
      unint64_t result = 0x72656E69617274;
      break;
    case 8:
      unint64_t result = 0x74756F6B726F77;
      break;
    default:
      unint64_t result = 0x6472617761;
      break;
  }
  return result;
}

uint64_t sub_24EAFFD7C(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = PlaceholderReferenceType.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == PlaceholderReferenceType.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_24EB3E010();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_24EAFFE08@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s13FitnessAwards24PlaceholderReferenceTypeO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

unint64_t sub_24EAFFE38@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = PlaceholderReferenceType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_24EAFFE64()
{
  return sub_24EB3DCD0();
}

uint64_t sub_24EAFFEC4()
{
  return sub_24EB3DCC0();
}

uint64_t sub_24EAFFF14()
{
  char v1 = *v0;
  sub_24EB3E090();
  PlaceholderReferenceType.rawValue.getter(v1);
  sub_24EB3DCA0();
  swift_bridgeObjectRelease();
  return sub_24EB3E0D0();
}

uint64_t sub_24EAFFF78()
{
  PlaceholderReferenceType.rawValue.getter(*v0);
  sub_24EB3DCA0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EAFFFCC()
{
  char v1 = *v0;
  sub_24EB3E090();
  PlaceholderReferenceType.rawValue.getter(v1);
  sub_24EB3DCA0();
  swift_bridgeObjectRelease();
  return sub_24EB3E0D0();
}

uint64_t _s13FitnessAwards24PlaceholderReferenceTypeO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_24EB3DEB0();
  swift_bridgeObjectRelease();
  if (v0 >= 9) {
    return 9;
  }
  else {
    return v0;
  }
}

unint64_t sub_24EB0007C()
{
  unint64_t result = qword_269932CE0;
  if (!qword_269932CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932CE0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PlaceholderReferenceType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PlaceholderReferenceType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EB0022CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaceholderReferenceType()
{
  return &type metadata for PlaceholderReferenceType;
}

unint64_t sub_24EB00264()
{
  unint64_t result = qword_26B1D2B60;
  if (!qword_26B1D2B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2B60);
  }
  return result;
}

id static NSBundle.awardsLocalization.getter()
{
  type metadata accessor for AwardsLocalizationBundle();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  return v1;
}

uint64_t type metadata accessor for AwardsLocalizationBundle()
{
  return self;
}

uint64_t sub_24EB00334()
{
  return MEMORY[0x270FA0228](v0, 16, 7);
}

uint64_t AwardHeaderState.init(templateUniqueName:layout:tvLayout:description:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, long long *a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  long long v17 = a4[1];
  long long v18 = *a4;
  long long v16 = a4[2];
  uint64_t v9 = *((void *)a4 + 6);
  *a6 = a1;
  a6[1] = a2;
  uint64_t v10 = (int *)type metadata accessor for AwardHeaderState();
  sub_24EB0047C(a3, (uint64_t)a6 + v10[5]);
  uint64_t v11 = (char *)a6 + v10[6];
  *(_OWORD *)uint64_t v11 = v18;
  *((_OWORD *)v11 + 1) = v17;
  *((_OWORD *)v11 + 2) = v16;
  *((void *)v11 + 6) = v9;
  uint64_t v12 = (char *)a6 + v10[7];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FB0);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32);
  return v14(v12, a5, v13);
}

uint64_t type metadata accessor for AwardHeaderState()
{
  uint64_t result = qword_269932D20;
  if (!qword_269932D20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24EB0047C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AwardHeaderLayout();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t AwardHeaderState.templateUniqueName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AwardHeaderState.layout.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for AwardHeaderState();
  return sub_24EB0103C(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(void))type metadata accessor for AwardHeaderLayout);
}

double AwardHeaderState.tvLayout.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AwardHeaderState() + 24);
  double result = *(double *)(v3 + 48);
  long long v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v3 + 32);
  *(double *)(a1 + 48) = result;
  return result;
}

uint64_t AwardHeaderState.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AwardHeaderState() + 28);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FB0);
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t AwardHeaderState.description.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AwardHeaderState() + 28);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FB0);
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*AwardHeaderState.description.modify())()
{
  return nullsub_1;
}

unint64_t sub_24EB006E4(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x74756F79616CLL;
      break;
    case 2:
      unint64_t result = 0x74756F79614C7674;
      break;
    case 3:
      unint64_t result = 0x7470697263736564;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24EB00780()
{
  return sub_24EB006E4(*v0);
}

uint64_t sub_24EB00788@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EB023D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EB007B0(uint64_t a1)
{
  unint64_t v2 = sub_24EB00A90();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB007EC(uint64_t a1)
{
  unint64_t v2 = sub_24EB00A90();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AwardHeaderState.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932CE8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB00A90();
  sub_24EB3E0F0();
  LOBYTE(v15) = 0;
  sub_24EB3DFB0();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for AwardHeaderState();
    LOBYTE(v15) = 1;
    type metadata accessor for AwardHeaderLayout();
    sub_24EB00FA4(&qword_269932CF8);
    sub_24EB3DFF0();
    uint64_t v10 = (long long *)(v3 + *(int *)(v9 + 24));
    uint64_t v11 = *((void *)v10 + 6);
    long long v12 = v10[1];
    long long v15 = *v10;
    long long v16 = v12;
    long long v17 = v10[2];
    uint64_t v18 = v11;
    v14[15] = 2;
    sub_24EB00AE4();
    sub_24EB3DFF0();
    LOBYTE(v15) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FB0);
    sub_24EAFC5C4(&qword_269932C30);
    sub_24EB3DFF0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_24EB00A90()
{
  unint64_t result = qword_269932CF0;
  if (!qword_269932CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932CF0);
  }
  return result;
}

unint64_t sub_24EB00AE4()
{
  unint64_t result = qword_269932D00;
  if (!qword_269932D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932D00);
  }
  return result;
}

uint64_t AwardHeaderState.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FB0);
  uint64_t v24 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for AwardHeaderLayout();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932D08);
  uint64_t v27 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)type metadata accessor for AwardHeaderState();
  MEMORY[0x270FA5388](v10);
  long long v12 = (uint64_t *)((char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = a1[3];
  uint64_t v30 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_24EB00A90();
  uint64_t v28 = v9;
  uint64_t v14 = v31;
  sub_24EB3E0E0();
  if (v14) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  }
  uint64_t v15 = v27;
  uint64_t v31 = v4;
  LOBYTE(v32) = 0;
  *long long v12 = sub_24EB3DF10();
  v12[1] = v16;
  LOBYTE(v32) = 1;
  sub_24EB00FA4(&qword_269932D10);
  sub_24EB3DF50();
  sub_24EB0047C((uint64_t)v7, (uint64_t)v12 + v10[5]);
  char v36 = 2;
  sub_24EB00FE8();
  long long v17 = v28;
  sub_24EB3DF50();
  uint64_t v18 = v35;
  uint64_t v19 = (char *)v12 + v10[6];
  long long v20 = v33;
  *(_OWORD *)uint64_t v19 = v32;
  *((_OWORD *)v19 + 1) = v20;
  *((_OWORD *)v19 + 2) = v34;
  *((void *)v19 + 6) = v18;
  LOBYTE(v32) = 3;
  sub_24EAFC5C4(&qword_269932C58);
  uint64_t v21 = v31;
  uint64_t v22 = v26;
  sub_24EB3DF50();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v29);
  (*(void (**)(void, char *, uint64_t))(v24 + 32))(v10[7], v21, v22);
  sub_24EB0103C(0, v25, (uint64_t (*)(void))type metadata accessor for AwardHeaderState);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  return sub_24EB010A4(0, (uint64_t (*)(void))type metadata accessor for AwardHeaderState);
}

uint64_t sub_24EB00FA4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for AwardHeaderLayout();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24EB00FE8()
{
  unint64_t result = qword_269932D18;
  if (!qword_269932D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932D18);
  }
  return result;
}

uint64_t sub_24EB0103C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24EB010A4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24EB01104@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AwardHeaderState.init(from:)(a1, a2);
}

uint64_t sub_24EB0111C(void *a1)
{
  return AwardHeaderState.encode(to:)(a1);
}

uint64_t _s13FitnessAwards16AwardHeaderStateV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_24EB3E010() & 1) == 0) {
    return 0;
  }
  uint64_t v5 = (int *)type metadata accessor for AwardHeaderState();
  if (!_s13FitnessAwards17AwardHeaderLayoutV2eeoiySbAC_ACtFZ_0((double *)((char *)a1 + v5[5]), (double *)((char *)a2 + v5[5])))return 0; {
  uint64_t v6 = (char *)a1 + v5[6];
  }
  uint64_t v7 = *((void *)v6 + 6);
  float64x2_t v8 = *((float64x2_t *)v6 + 1);
  v19[0] = *(float64x2_t *)v6;
  v19[1] = v8;
  v19[2] = *((float64x2_t *)v6 + 2);
  uint64_t v20 = v7;
  uint64_t v9 = (char *)a2 + v5[6];
  uint64_t v10 = *((void *)v9 + 6);
  float64x2_t v11 = *((float64x2_t *)v9 + 1);
  v17[0] = *(float64x2_t *)v9;
  v17[1] = v11;
  void v17[2] = *((float64x2_t *)v9 + 2);
  uint64_t v18 = v10;
  if (!_s13FitnessAwards19TVAwardHeaderLayoutV2eeoiySbAC_ACtFZ_0(v19, v17)) {
    return 0;
  }
  uint64_t v12 = v5[7];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  unint64_t v15 = sub_24EAD0090();
  return MEMORY[0x270F25288](v13, v14, &type metadata for AwardDescription, v15);
}

uint64_t *initializeBufferWithCopyOfBuffer for AwardHeaderState(uint64_t *a1, uint64_t *a2, int *a3)
{
  BOOL v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v29 = *a2;
    uint64_t *v4 = *a2;
    BOOL v4 = (uint64_t *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    *(_OWORD *)((char *)a1 + v8) = *(_OWORD *)((char *)a2 + v8);
    float64x2_t v11 = (int *)type metadata accessor for AwardHeaderLayout();
    uint64_t v12 = v11[5];
    uint64_t v31 = &v10[v12];
    long long v32 = &v9[v12];
    uint64_t v13 = sub_24EB3D280();
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    v14(v32, v31, v13);
    *(_WORD *)&v9[v11[6]] = *(_WORD *)&v10[v11[6]];
    *(void *)&v9[v11[7]] = *(void *)&v10[v11[7]];
    v14(&v9[v11[8]], &v10[v11[8]], v13);
    *(void *)&v9[v11[9]] = *(void *)&v10[v11[9]];
    v9[v11[10]] = v10[v11[10]];
    v9[v11[11]] = v10[v11[11]];
    v9[v11[12]] = v10[v11[12]];
    *(void *)&v9[v11[13]] = *(void *)&v10[v11[13]];
    uint64_t v15 = v11[14];
    uint64_t v16 = &v9[v15];
    long long v17 = &v10[v15];
    v16[8] = v17[8];
    *(void *)uint64_t v16 = *(void *)v17;
    uint64_t v18 = v11[15];
    uint64_t v19 = &v9[v18];
    uint64_t v20 = &v10[v18];
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
    *((void *)v19 + 2) = *((void *)v20 + 2);
    v9[v11[16]] = v10[v11[16]];
    *(_WORD *)&v9[v11[17]] = *(_WORD *)&v10[v11[17]];
    *(void *)&v9[v11[18]] = *(void *)&v10[v11[18]];
    uint64_t v21 = a3[6];
    uint64_t v22 = a3[7];
    uint64_t v23 = (char *)v4 + v21;
    uint64_t v24 = (char *)a2 + v21;
    long long v25 = *((_OWORD *)v24 + 1);
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    *((_OWORD *)v23 + 1) = v25;
    *((_OWORD *)v23 + 2) = *((_OWORD *)v24 + 2);
    *((void *)v23 + 6) = *((void *)v24 + 6);
    uint64_t v26 = (char *)v4 + v22;
    uint64_t v27 = (char *)a2 + v22;
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FB0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
  }
  return v4;
}

uint64_t destroy for AwardHeaderState(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for AwardHeaderLayout();
  uint64_t v6 = v4 + *(int *)(v5 + 20);
  uint64_t v7 = sub_24EB3D280();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(v4 + *(int *)(v5 + 32), v7);
  uint64_t v9 = a1 + *(int *)(a2 + 28);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FB0);
  float64x2_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  return v11(v9, v10);
}

void *initializeWithCopy for AwardHeaderState(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a3[5];
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  *(_OWORD *)((char *)a1 + v5) = *(_OWORD *)((char *)a2 + v5);
  uint64_t v8 = (int *)type metadata accessor for AwardHeaderLayout();
  uint64_t v9 = v8[5];
  uint64_t v10 = &v6[v9];
  float64x2_t v11 = &v7[v9];
  uint64_t v12 = sub_24EB3D280();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  *(_WORD *)&v6[v8[6]] = *(_WORD *)&v7[v8[6]];
  *(void *)&v6[v8[7]] = *(void *)&v7[v8[7]];
  v13(&v6[v8[8]], &v7[v8[8]], v12);
  *(void *)&v6[v8[9]] = *(void *)&v7[v8[9]];
  v6[v8[10]] = v7[v8[10]];
  v6[v8[11]] = v7[v8[11]];
  v6[v8[12]] = v7[v8[12]];
  *(void *)&v6[v8[13]] = *(void *)&v7[v8[13]];
  uint64_t v14 = v8[14];
  uint64_t v15 = &v6[v14];
  uint64_t v16 = &v7[v14];
  v15[8] = v16[8];
  *(void *)uint64_t v15 = *(void *)v16;
  uint64_t v17 = v8[15];
  uint64_t v18 = &v6[v17];
  uint64_t v19 = &v7[v17];
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *((void *)v18 + 2) = *((void *)v19 + 2);
  v6[v8[16]] = v7[v8[16]];
  *(_WORD *)&v6[v8[17]] = *(_WORD *)&v7[v8[17]];
  *(void *)&v6[v8[18]] = *(void *)&v7[v8[18]];
  uint64_t v20 = a3[6];
  uint64_t v21 = a3[7];
  uint64_t v22 = (char *)a1 + v20;
  uint64_t v23 = (char *)a2 + v20;
  long long v24 = *((_OWORD *)v23 + 1);
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *((_OWORD *)v22 + 1) = v24;
  *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
  *((void *)v22 + 6) = *((void *)v23 + 6);
  long long v25 = (char *)a1 + v21;
  uint64_t v26 = (char *)a2 + v21;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FB0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  return a1;
}

void *assignWithCopy for AwardHeaderState(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *(void *)uint64_t v7 = *(void *)((char *)a2 + v6);
  *((void *)v7 + 1) = *(void *)((char *)a2 + v6 + 8);
  uint64_t v9 = (int *)type metadata accessor for AwardHeaderLayout();
  uint64_t v10 = v9[5];
  float64x2_t v11 = &v7[v10];
  uint64_t v12 = &v8[v10];
  uint64_t v13 = sub_24EB3D280();
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24);
  v14(v11, v12, v13);
  uint64_t v15 = v9[6];
  uint64_t v16 = &v7[v15];
  uint64_t v17 = &v8[v15];
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  *(void *)&v7[v9[7]] = *(void *)&v8[v9[7]];
  v14(&v7[v9[8]], &v8[v9[8]], v13);
  *(void *)&v7[v9[9]] = *(void *)&v8[v9[9]];
  v7[v9[10]] = v8[v9[10]];
  v7[v9[11]] = v8[v9[11]];
  v7[v9[12]] = v8[v9[12]];
  *(void *)&v7[v9[13]] = *(void *)&v8[v9[13]];
  uint64_t v18 = v9[14];
  uint64_t v19 = &v7[v18];
  uint64_t v20 = &v8[v18];
  char v21 = v20[8];
  *(void *)uint64_t v19 = *(void *)v20;
  v19[8] = v21;
  uint64_t v22 = v9[15];
  uint64_t v23 = &v7[v22];
  long long v24 = &v8[v22];
  *(void *)uint64_t v23 = *(void *)v24;
  *((void *)v23 + 1) = *((void *)v24 + 1);
  *((void *)v23 + 2) = *((void *)v24 + 2);
  v7[v9[16]] = v8[v9[16]];
  uint64_t v25 = v9[17];
  uint64_t v26 = &v7[v25];
  uint64_t v27 = &v8[v25];
  *uint64_t v26 = *v27;
  v26[1] = v27[1];
  *(void *)&v7[v9[18]] = *(void *)&v8[v9[18]];
  uint64_t v28 = a3[6];
  uint64_t v29 = (void *)((char *)a1 + v28);
  uint64_t v30 = (void *)((char *)a2 + v28);
  *uint64_t v29 = *v30;
  v29[1] = v30[1];
  v29[2] = v30[2];
  v29[3] = v30[3];
  v29[4] = v30[4];
  v29[5] = v30[5];
  v29[6] = v30[6];
  uint64_t v31 = a3[7];
  long long v32 = (char *)a1 + v31;
  long long v33 = (char *)a2 + v31;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FB0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  return a1;
}

_OWORD *initializeWithTake for AwardHeaderState(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v5 = a3[5];
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  *(_OWORD *)((char *)a1 + v5) = *(_OWORD *)((char *)a2 + v5);
  uint64_t v8 = (int *)type metadata accessor for AwardHeaderLayout();
  uint64_t v9 = v8[5];
  uint64_t v10 = &v6[v9];
  float64x2_t v11 = &v7[v9];
  uint64_t v12 = sub_24EB3D280();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32);
  v13(v10, v11, v12);
  *(_WORD *)&v6[v8[6]] = *(_WORD *)&v7[v8[6]];
  *(void *)&v6[v8[7]] = *(void *)&v7[v8[7]];
  v13(&v6[v8[8]], &v7[v8[8]], v12);
  *(void *)&v6[v8[9]] = *(void *)&v7[v8[9]];
  v6[v8[10]] = v7[v8[10]];
  v6[v8[11]] = v7[v8[11]];
  v6[v8[12]] = v7[v8[12]];
  *(void *)&v6[v8[13]] = *(void *)&v7[v8[13]];
  uint64_t v14 = v8[14];
  uint64_t v15 = &v6[v14];
  uint64_t v16 = &v7[v14];
  v15[8] = v16[8];
  *(void *)uint64_t v15 = *(void *)v16;
  uint64_t v17 = v8[15];
  uint64_t v18 = &v6[v17];
  uint64_t v19 = &v7[v17];
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *((void *)v18 + 2) = *((void *)v19 + 2);
  v6[v8[16]] = v7[v8[16]];
  *(_WORD *)&v6[v8[17]] = *(_WORD *)&v7[v8[17]];
  *(void *)&v6[v8[18]] = *(void *)&v7[v8[18]];
  uint64_t v20 = a3[6];
  uint64_t v21 = a3[7];
  uint64_t v22 = (char *)a1 + v20;
  uint64_t v23 = (char *)a2 + v20;
  long long v24 = *((_OWORD *)v23 + 1);
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *((_OWORD *)v22 + 1) = v24;
  *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
  *((void *)v22 + 6) = *((void *)v23 + 6);
  uint64_t v25 = (char *)a1 + v21;
  uint64_t v26 = (char *)a2 + v21;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FB0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
  return a1;
}

void *assignWithTake for AwardHeaderState(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  *(_OWORD *)((char *)a1 + v7) = *(_OWORD *)((char *)a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for AwardHeaderLayout();
  uint64_t v11 = v10[5];
  uint64_t v12 = &v8[v11];
  uint64_t v13 = &v9[v11];
  uint64_t v14 = sub_24EB3D280();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40);
  v15(v12, v13, v14);
  uint64_t v16 = v10[6];
  uint64_t v17 = &v8[v16];
  uint64_t v18 = &v9[v16];
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  *(void *)&v8[v10[7]] = *(void *)&v9[v10[7]];
  v15(&v8[v10[8]], &v9[v10[8]], v14);
  *(void *)&v8[v10[9]] = *(void *)&v9[v10[9]];
  v8[v10[10]] = v9[v10[10]];
  v8[v10[11]] = v9[v10[11]];
  v8[v10[12]] = v9[v10[12]];
  *(void *)&v8[v10[13]] = *(void *)&v9[v10[13]];
  uint64_t v19 = v10[14];
  uint64_t v20 = &v8[v19];
  uint64_t v21 = &v9[v19];
  *(void *)uint64_t v20 = *(void *)v21;
  v20[8] = v21[8];
  uint64_t v22 = v10[15];
  uint64_t v23 = &v8[v22];
  long long v24 = &v9[v22];
  *(void *)uint64_t v23 = *(void *)v24;
  *((void *)v23 + 1) = *((void *)v24 + 1);
  *((void *)v23 + 2) = *((void *)v24 + 2);
  v8[v10[16]] = v9[v10[16]];
  uint64_t v25 = v10[17];
  uint64_t v26 = &v8[v25];
  uint64_t v27 = &v9[v25];
  *uint64_t v26 = *v27;
  v26[1] = v27[1];
  *(void *)&v8[v10[18]] = *(void *)&v9[v10[18]];
  uint64_t v28 = a3[6];
  uint64_t v29 = a3[7];
  uint64_t v30 = (char *)a1 + v28;
  uint64_t v31 = (char *)a2 + v28;
  long long v32 = *((_OWORD *)v31 + 1);
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  *((_OWORD *)v30 + 1) = v32;
  *((_OWORD *)v30 + 2) = *((_OWORD *)v31 + 2);
  *((void *)v30 + 6) = *((void *)v31 + 6);
  long long v33 = (char *)a1 + v29;
  uint64_t v34 = (char *)a2 + v29;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FB0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 40))(v33, v34, v35);
  return a1;
}

uint64_t getEnumTagSinglePayload for AwardHeaderState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EB01E78);
}

uint64_t sub_24EB01E78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for AwardHeaderLayout();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FB0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for AwardHeaderState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EB01FBC);
}

uint64_t sub_24EB01FBC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for AwardHeaderLayout();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FB0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_24EB020EC()
{
  type metadata accessor for AwardHeaderLayout();
  if (v0 <= 0x3F)
  {
    sub_24EAFD5B4();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unsigned char *storeEnumTagSinglePayload for AwardHeaderState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EB02294);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardHeaderState.CodingKeys()
{
  return &type metadata for AwardHeaderState.CodingKeys;
}

unint64_t sub_24EB022D0()
{
  unint64_t result = qword_269932D30;
  if (!qword_269932D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932D30);
  }
  return result;
}

unint64_t sub_24EB02328()
{
  unint64_t result = qword_269932D38;
  if (!qword_269932D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932D38);
  }
  return result;
}

unint64_t sub_24EB02380()
{
  unint64_t result = qword_269932D40;
  if (!qword_269932D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932D40);
  }
  return result;
}

uint64_t sub_24EB023D4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x800000024EB4A250 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74756F79616CLL && a2 == 0xE600000000000000 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74756F79614C7674 && a2 == 0xE800000000000000 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t AwardRemoteParticipantStatusMonitorState.earnedLoadStates.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AwardRemoteParticipantStatusMonitorState.earnedLoadStates.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v1 = a1;
  return result;
}

uint64_t (*AwardRemoteParticipantStatusMonitorState.earnedLoadStates.modify())()
{
  return nullsub_1;
}

uint64_t AwardRemoteParticipantStatusMonitorState.imageLoadStates.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AwardRemoteParticipantStatusMonitorState.imageLoadStates.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*AwardRemoteParticipantStatusMonitorState.imageLoadStates.modify())()
{
  return nullsub_1;
}

uint64_t AwardRemoteParticipantStatusMonitorState.progressLoadStates.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AwardRemoteParticipantStatusMonitorState.progressLoadStates.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*AwardRemoteParticipantStatusMonitorState.progressLoadStates.modify())()
{
  return nullsub_1;
}

uint64_t AwardRemoteParticipantStatusMonitorState.suggestedWorkoutsStates.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AwardRemoteParticipantStatusMonitorState.suggestedWorkoutsStates.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t (*AwardRemoteParticipantStatusMonitorState.suggestedWorkoutsStates.modify())()
{
  return nullsub_1;
}

uint64_t AwardRemoteParticipantStatusMonitorState.toastLoadState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for AwardRemoteParticipantStatusMonitorState();
  return sub_24EB03CB4(v1 + *(int *)(v3 + 32), a1, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
}

uint64_t type metadata accessor for AwardRemoteParticipantStatusMonitorState()
{
  uint64_t result = qword_269932DF0;
  if (!qword_269932DF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t AwardRemoteParticipantStatusMonitorState.toastLoadState.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AwardRemoteParticipantStatusMonitorState() + 32);
  return sub_24EB027B0(a1, v3);
}

uint64_t sub_24EB027B0(uint64_t a1, uint64_t a2)
{
  uint64_t State = type metadata accessor for AwardToastLoadState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(State - 8) + 40))(a2, a1, State);
  return a2;
}

uint64_t (*AwardRemoteParticipantStatusMonitorState.toastLoadState.modify())()
{
  return nullsub_1;
}

uint64_t AwardRemoteParticipantStatusMonitorState.init(earnedLoadStates:imageLoadStates:progressLoadStates:suggestedWorkoutsStates:toastLoadState:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = a1;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  uint64_t v7 = (uint64_t)a6 + *(int *)(type metadata accessor for AwardRemoteParticipantStatusMonitorState() + 32);
  return sub_24EB028AC(a5, v7);
}

uint64_t sub_24EB028AC(uint64_t a1, uint64_t a2)
{
  uint64_t State = type metadata accessor for AwardToastLoadState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(State - 8) + 32))(a2, a1, State);
  return a2;
}

uint64_t AwardRemoteParticipantStatusMonitorState.hash(into:)(long long *a1)
{
  uint64_t v3 = sub_24EB3D1F0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t State = type metadata accessor for AwardToastLoadState();
  MEMORY[0x270FA5388](State);
  uint64_t v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v1;
  swift_bridgeObjectRetain();
  sub_24EAF41B8(a1, v10);
  swift_bridgeObjectRelease();
  uint64_t v11 = v1[1];
  swift_bridgeObjectRetain();
  sub_24EAF38F8((uint64_t)a1, v11);
  swift_bridgeObjectRelease();
  uint64_t v12 = v1[2];
  swift_bridgeObjectRetain();
  sub_24EAF3274(a1, v12);
  swift_bridgeObjectRelease();
  uint64_t v13 = v1[3];
  swift_bridgeObjectRetain();
  sub_24EAF2DB0((uint64_t)a1, v13);
  swift_bridgeObjectRelease();
  uint64_t v14 = type metadata accessor for AwardRemoteParticipantStatusMonitorState();
  sub_24EB03CB4((uint64_t)v1 + *(int *)(v14 + 32), (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v16 = *(void *)v9;
      uint64_t v17 = *((void *)v9 + 1);
      uint64_t v18 = *((void *)v9 + 2);
      uint64_t v19 = *((void *)v9 + 3);
      uint64_t v20 = *((void *)v9 + 4);
      uint64_t v21 = *((void *)v9 + 5);
      char v22 = v9[48];
      sub_24EB3E0A0();
      v24[1] = v16;
      v24[2] = v17;
      v24[3] = v18;
      v24[4] = v19;
      v24[5] = v20;
      v24[6] = v21;
      char v25 = v22;
      AwardToastDetail.hash(into:)((uint64_t)a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      return sub_24EB3E0A0();
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v9, v3);
    sub_24EB3E0A0();
    sub_24EB03D64(&qword_2699320C0, MEMORY[0x263F07508]);
    sub_24EB3DBD0();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

unint64_t sub_24EB02BDC(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x616F4C6567616D69;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0xD000000000000017;
      break;
    case 4:
      unint64_t result = 0x616F4C7473616F74;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24EB02CA0()
{
  return sub_24EB02BDC(*v0);
}

uint64_t sub_24EB02CA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EB04A04(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EB02CD0(uint64_t a1)
{
  unint64_t v2 = sub_24EB036F8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB02D0C(uint64_t a1)
{
  unint64_t v2 = sub_24EB036F8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AwardRemoteParticipantStatusMonitorState.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932D48);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB036F8();
  sub_24EB3E0F0();
  uint64_t v11 = *v3;
  HIBYTE(v10) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269932D58);
  sub_24EB0374C();
  sub_24EB3DFF0();
  if (!v2)
  {
    uint64_t v11 = v3[1];
    HIBYTE(v10) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269932D68);
    sub_24EB03980(&qword_269932D70, &qword_269932D68, (void (*)(void))sub_24EB037F8);
    sub_24EB3DFF0();
    uint64_t v11 = v3[2];
    HIBYTE(v10) = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269932D88);
    sub_24EB038D4();
    sub_24EB3DFF0();
    uint64_t v11 = v3[3];
    HIBYTE(v10) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269932D98);
    sub_24EB03980(&qword_269932DA0, &qword_269932D98, (void (*)(void))sub_24EAA96B8);
    sub_24EB3DFF0();
    type metadata accessor for AwardRemoteParticipantStatusMonitorState();
    LOBYTE(v11) = 4;
    type metadata accessor for AwardToastLoadState();
    sub_24EB03D64(&qword_269932DA8, (void (*)(uint64_t))type metadata accessor for AwardToastLoadState);
    sub_24EB3DFF0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t AwardRemoteParticipantStatusMonitorState.hashValue.getter()
{
  sub_24EB3E090();
  AwardRemoteParticipantStatusMonitorState.hash(into:)(v1);
  return sub_24EB3E0D0();
}

uint64_t AwardRemoteParticipantStatusMonitorState.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t State = type metadata accessor for AwardToastLoadState();
  MEMORY[0x270FA5388](State);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932DB0);
  uint64_t v19 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AwardRemoteParticipantStatusMonitorState();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (uint64_t *)((char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB036F8();
  uint64_t v20 = v7;
  uint64_t v11 = (uint64_t)v22;
  sub_24EB3E0E0();
  if (v11) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v16 = v8;
  uint64_t v17 = v5;
  char v22 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269932D58);
  char v23 = 0;
  sub_24EB03A00();
  uint64_t v12 = v21;
  uint64_t v13 = v20;
  sub_24EB3DF50();
  *uint64_t v10 = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269932D68);
  char v23 = 1;
  sub_24EB03AAC(&qword_269932DC0, &qword_269932D68, (void (*)(void))sub_24EB03B2C);
  sub_24EB3DF50();
  v10[1] = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269932D88);
  char v23 = 2;
  sub_24EB03C08();
  sub_24EB3DF50();
  void v10[2] = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269932D98);
  char v23 = 3;
  sub_24EB03AAC(&qword_269932DE0, &qword_269932D98, (void (*)(void))sub_24EAA9B4C);
  sub_24EB3DF50();
  v10[3] = v24;
  LOBYTE(v24) = 4;
  sub_24EB03D64(&qword_269932DE8, (void (*)(uint64_t))type metadata accessor for AwardToastLoadState);
  uint64_t v14 = (uint64_t)v17;
  sub_24EB3DF50();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v13, v12);
  sub_24EB028AC(v14, (uint64_t)v10 + *(int *)(v16 + 32));
  sub_24EB03CB4((uint64_t)v10, v18, (uint64_t (*)(void))type metadata accessor for AwardRemoteParticipantStatusMonitorState);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return sub_24EB0437C((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for AwardRemoteParticipantStatusMonitorState);
}

uint64_t sub_24EB035AC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AwardRemoteParticipantStatusMonitorState.init(from:)(a1, a2);
}

uint64_t sub_24EB035C4(void *a1)
{
  return AwardRemoteParticipantStatusMonitorState.encode(to:)(a1);
}

uint64_t sub_24EB035DC()
{
  sub_24EB3E090();
  AwardRemoteParticipantStatusMonitorState.hash(into:)(v1);
  return sub_24EB3E0D0();
}

uint64_t sub_24EB03620()
{
  sub_24EB3E090();
  AwardRemoteParticipantStatusMonitorState.hash(into:)(v1);
  return sub_24EB3E0D0();
}

uint64_t _s13FitnessAwards40AwardRemoteParticipantStatusMonitorStateV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t *a2)
{
  if ((sub_24EB375A4(*(void *)a1, *a2) & 1) == 0
    || (sub_24EB37D80(*(void *)(a1 + 8), a2[1]) & 1) == 0
    || (sub_24EB37F4C(*(void *)(a1 + 16), a2[2]) & 1) == 0
    || (sub_24EB38918(*(void *)(a1 + 24), a2[3]) & 1) == 0)
  {
    return 0;
  }
  uint64_t v4 = *(int *)(type metadata accessor for AwardRemoteParticipantStatusMonitorState() + 32);
  return _s13FitnessAwards19AwardToastLoadStateO2eeoiySbAC_ACtFZ_0(a1 + v4, (uint64_t)a2 + v4);
}

unint64_t sub_24EB036F8()
{
  unint64_t result = qword_269932D50;
  if (!qword_269932D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932D50);
  }
  return result;
}

unint64_t sub_24EB0374C()
{
  unint64_t result = qword_269932D60;
  if (!qword_269932D60)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269932D58);
    sub_24EB03D64(&qword_269931CA8, (void (*)(uint64_t))type metadata accessor for AwardEarnedLoadState);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932D60);
  }
  return result;
}

unint64_t sub_24EB037F8()
{
  unint64_t result = qword_269932D78;
  if (!qword_269932D78)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269932260);
    sub_24EB03D64(&qword_26B1D3090, (void (*)(uint64_t))type metadata accessor for CGSize);
    sub_24EB03D64(&qword_269932D80, (void (*)(uint64_t))type metadata accessor for AwardImageLoadState);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932D78);
  }
  return result;
}

unint64_t sub_24EB038D4()
{
  unint64_t result = qword_269932D90;
  if (!qword_269932D90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269932D88);
    sub_24EB03D64(&qword_269932C90, (void (*)(uint64_t))type metadata accessor for AwardProgressLoadState);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932D90);
  }
  return result;
}

uint64_t sub_24EB03980(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24EB03A00()
{
  unint64_t result = qword_269932DB8;
  if (!qword_269932DB8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269932D58);
    sub_24EB03D64(&qword_269931CC8, (void (*)(uint64_t))type metadata accessor for AwardEarnedLoadState);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932DB8);
  }
  return result;
}

uint64_t sub_24EB03AAC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24EB03B2C()
{
  unint64_t result = qword_269932DC8;
  if (!qword_269932DC8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269932260);
    sub_24EB03D64(&qword_269931DF8, (void (*)(uint64_t))type metadata accessor for CGSize);
    sub_24EB03D64(&qword_269932DD0, (void (*)(uint64_t))type metadata accessor for AwardImageLoadState);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932DC8);
  }
  return result;
}

unint64_t sub_24EB03C08()
{
  unint64_t result = qword_269932DD8;
  if (!qword_269932DD8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269932D88);
    sub_24EB03D64(&qword_269932CB0, (void (*)(uint64_t))type metadata accessor for AwardProgressLoadState);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932DD8);
  }
  return result;
}

uint64_t sub_24EB03CB4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24EB03D1C()
{
  return sub_24EB03D64((unint64_t *)&qword_269932278, (void (*)(uint64_t))type metadata accessor for AwardRemoteParticipantStatusMonitorState);
}

uint64_t sub_24EB03D64(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for AwardRemoteParticipantStatusMonitorState(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    a1[3] = a2[3];
    uint64_t v7 = *(int *)(a3 + 32);
    uint64_t v8 = (uint64_t *)((char *)a1 + v7);
    uint64_t v9 = (uint64_t *)((char *)a2 + v7);
    uint64_t State = type metadata accessor for AwardToastLoadState();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v13 = v9[1];
      void *v8 = *v9;
      v8[1] = v13;
      uint64_t v14 = v9[3];
      v8[2] = v9[2];
      v8[3] = v14;
      uint64_t v15 = v9[5];
      v8[4] = v9[4];
      v8[5] = v15;
      *((unsigned char *)v8 + 48) = *((unsigned char *)v9 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v8, v9, *(void *)(*(void *)(State - 8) + 64));
    }
    else
    {
      uint64_t v12 = sub_24EB3D1F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v8, v9, v12);
      swift_storeEnumTagMultiPayload();
    }
  }
  return v5;
}

uint64_t destroy for AwardRemoteParticipantStatusMonitorState(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  type metadata accessor for AwardToastLoadState();
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else if (!result)
  {
    uint64_t v6 = sub_24EB3D1F0();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    return v7(v4, v6);
  }
  return result;
}

void *initializeWithCopy for AwardRemoteParticipantStatusMonitorState(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t State = type metadata accessor for AwardToastLoadState();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v12 = v8[1];
    *uint64_t v7 = *v8;
    v7[1] = v12;
    uint64_t v13 = v8[3];
    v7[2] = v8[2];
    v7[3] = v13;
    uint64_t v14 = v8[5];
    v7[4] = v8[4];
    v7[5] = v14;
    *((unsigned char *)v7 + 48) = *((unsigned char *)v8 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v7, v8, *(void *)(*(void *)(State - 8) + 64));
  }
  else
  {
    uint64_t v11 = sub_24EB3D1F0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v7, v8, v11);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithCopy for AwardRemoteParticipantStatusMonitorState(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 32);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_24EB0437C((uint64_t)a1 + v6, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
    uint64_t State = type metadata accessor for AwardToastLoadState();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *uint64_t v7 = *v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      v7[3] = v8[3];
      v7[4] = v8[4];
      v7[5] = v8[5];
      *((unsigned char *)v7 + 48) = *((unsigned char *)v8 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v7, v8, *(void *)(*(void *)(State - 8) + 64));
    }
    else
    {
      uint64_t v11 = sub_24EB3D1F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v7, v8, v11);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_24EB0437C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *initializeWithTake for AwardRemoteParticipantStatusMonitorState(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 32);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t State = type metadata accessor for AwardToastLoadState();
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v6, v7, *(void *)(*(void *)(State - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_24EB3D1F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v6, v7, v9);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for AwardRemoteParticipantStatusMonitorState(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 32);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_24EB0437C((uint64_t)a1 + v6, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
    uint64_t State = type metadata accessor for AwardToastLoadState();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v7, v8, *(void *)(*(void *)(State - 8) + 64));
    }
    else
    {
      uint64_t v10 = sub_24EB3D1F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for AwardRemoteParticipantStatusMonitorState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EB045EC);
}

uint64_t sub_24EB045EC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t State = type metadata accessor for AwardToastLoadState();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(State - 8) + 48);
    uint64_t v10 = State;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for AwardRemoteParticipantStatusMonitorState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EB046B0);
}

void *sub_24EB046B0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t State = type metadata accessor for AwardToastLoadState();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(State - 8) + 56);
    uint64_t v9 = State;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 32);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_24EB04758()
{
  uint64_t result = type metadata accessor for AwardToastLoadState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AwardRemoteParticipantStatusMonitorState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EB048C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardRemoteParticipantStatusMonitorState.CodingKeys()
{
  return &type metadata for AwardRemoteParticipantStatusMonitorState.CodingKeys;
}

unint64_t sub_24EB04900()
{
  unint64_t result = qword_269932E00;
  if (!qword_269932E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932E00);
  }
  return result;
}

unint64_t sub_24EB04958()
{
  unint64_t result = qword_269932E08;
  if (!qword_269932E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932E08);
  }
  return result;
}

unint64_t sub_24EB049B0()
{
  unint64_t result = qword_269932E10;
  if (!qword_269932E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932E10);
  }
  return result;
}

uint64_t sub_24EB04A04(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x800000024EB4AAE0 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x616F4C6567616D69 && a2 == 0xEF73657461745364 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000024EB4AB00 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000024EB4AB20 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x616F4C7473616F74 && a2 == 0xEE00657461745364)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v5 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    if (v5) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

__n128 AwardHeaderFeature.init(environment:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  type metadata accessor for AwardHeaderFeature();
  sub_24EB3D1E0();
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t type metadata accessor for AwardHeaderFeature()
{
  uint64_t result = qword_269932E48;
  if (!qword_269932E48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t AwardHeaderFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  long long v32 = a3;
  uint64_t v4 = type metadata accessor for AwardHeaderFeature();
  uint64_t v30 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v30 + 64);
  MEMORY[0x270FA5388](v4 - 8);
  unsigned int v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932188);
  uint64_t v7 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a2;
  uint64_t v11 = a2[1];
  uint64_t v12 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26B1D30A0);
  uint64_t v28 = &v9[v12[12]];
  uint64_t v13 = &v9[v12[16]];
  uint64_t v14 = &v9[v12[20]];
  uint64_t v15 = &v9[v12[24]];
  uint64_t v33 = v10;
  uint64_t v34 = v11;
  char v35 = 0;
  sub_24EB0501C();
  swift_bridgeObjectRetain_n();
  sub_24EB3DDE0();
  uint64_t v16 = *MEMORY[0x263F39590];
  uint64_t v17 = sub_24EB3DB90();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v13, v16, v17);
  uint64_t v18 = *MEMORY[0x263F39570];
  uint64_t v19 = sub_24EB3DB80();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v14, v18, v19);
  sub_24EB05378(v31, (uint64_t)v6);
  unint64_t v20 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v21 = v29;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v10;
  *(void *)(v22 + 24) = v11;
  char v23 = v32;
  sub_24EB054D8((uint64_t)v6, v22 + v20);
  *(void *)uint64_t v15 = &unk_269932E28;
  *((void *)v15 + 1) = v22;
  sub_24EB3DD30();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F39530], v21);
  unint64_t v24 = *v23;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v24 = sub_24EAC5048(0, *(void *)(v24 + 16) + 1, 1, v24);
  }
  unint64_t v26 = *(void *)(v24 + 16);
  unint64_t v25 = *(void *)(v24 + 24);
  if (v26 >= v25 >> 1) {
    unint64_t v24 = sub_24EAC5048(v25 > 1, v26 + 1, 1, v24);
  }
  *(void *)(v24 + 16) = v26 + 1;
  uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v7 + 32))(v24+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v26, v9, v21);
  *char v23 = v24;
  return result;
}

unint64_t sub_24EB0501C()
{
  unint64_t result = qword_269932E18;
  if (!qword_269932E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269932E18);
  }
  return result;
}

uint64_t sub_24EB05070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[3] = a2;
  sub_24EB3DD20();
  v4[6] = sub_24EB3DD10();
  uint64_t v6 = sub_24EB3DCF0();
  v4[7] = v6;
  v4[8] = v5;
  return MEMORY[0x270FA2498](sub_24EB0510C, v6, v5);
}

uint64_t sub_24EB0510C()
{
  uint64_t v15 = v0;
  if (qword_26B1D27C0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24EB3D2C0();
  __swift_project_value_buffer(v1, (uint64_t)qword_26B1D27A8);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_24EB3D2A0();
  os_log_type_t v3 = sub_24EB3DD80();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = *(void *)(v0 + 32);
  if (v4)
  {
    uint64_t v6 = *(void *)(v0 + 24);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v14 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 16) = sub_24EAC5098(v6, v5, &v14);
    sub_24EB3DDB0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24EAA5000, v2, v3, "[AwardHeaderFeature] Resolving award description state on viewAppeared for %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533497D0](v8, -1, -1);
    MEMORY[0x2533497D0](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))(**(void **)(v0 + 40) + ***(int ***)(v0 + 40));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_24EAE298C;
  uint64_t v11 = *(void *)(v0 + 24);
  uint64_t v10 = *(void *)(v0 + 32);
  return v13(v11, v10);
}

uint64_t sub_24EB05378(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AwardHeaderFeature();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EB053DC()
{
  uint64_t v1 = (int *)(type metadata accessor for AwardHeaderFeature() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v6 = v0 + v3 + v1[7];
  uint64_t v7 = sub_24EB3D1F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_24EB054D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AwardHeaderFeature();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EB0553C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for AwardHeaderFeature() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_24EAC5824;
  return sub_24EB05070(a1, v5, v6, v7);
}

unint64_t sub_24EB05630()
{
  unint64_t result = qword_269932E30;
  if (!qword_269932E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932E30);
  }
  return result;
}

unint64_t sub_24EB05688()
{
  unint64_t result = qword_269932E38;
  if (!qword_269932E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932E38);
  }
  return result;
}

unint64_t sub_24EB056E0()
{
  unint64_t result = qword_269932E40;
  if (!qword_269932E40)
  {
    type metadata accessor for AwardHeaderState();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932E40);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AwardHeaderFeature(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EB0574C);
}

uint64_t sub_24EB0574C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_24EB3D1F0();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for AwardHeaderFeature(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EB05810);
}

void *sub_24EB05810(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_24EB3D1F0();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

ValueMetadata *_s13FitnessAwards14TaskIdentifierOMa_0()
{
  return &_s13FitnessAwards14TaskIdentifierON_0;
}

unint64_t sub_24EB058CC()
{
  unint64_t result = qword_269932E58;
  if (!qword_269932E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932E58);
  }
  return result;
}

uint64_t sub_24EB05920@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24EB3DDA0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a2, a1, v4);
}

uint64_t sub_24EB0598C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269932F50);
  sub_24EAB15E8(&qword_269932F58, &qword_269932F50);
  return sub_24EB3D350();
}

uint64_t AwardToastView.init(store:imageViewBuilder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(void *)a5 = sub_24EAACDA8;
  *(void *)(a5 + 8) = result;
  *(unsigned char *)(a5 + 16) = 0;
  *(void *)(a5 + 24) = a3;
  *(void *)(a5 + 32) = a4;
  return result;
}

uint64_t sub_24EB05A90()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t AwardToastView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v150 = a2;
  uint64_t v144 = sub_24EB3D5B0();
  MEMORY[0x270FA5388](v144);
  os_log_type_t v143 = (char *)&v99 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24EB3D330();
  uint64_t v148 = *(void *)(v4 - 8);
  uint64_t v149 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v146 = (char *)&v99 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932E60);
  uint64_t v147 = *(void *)(v160 - 8);
  MEMORY[0x270FA5388](v160);
  uint64_t v145 = (char *)&v99 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24EB3D2F0();
  uint64_t v141 = *(void *)(v7 - 8);
  uint64_t v142 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v140 = (char *)&v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24EB3DAE0();
  uint64_t v137 = *(void *)(v9 - 8);
  uint64_t v138 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v136 = (char *)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932E68);
  uint64_t v157 = v11;
  MEMORY[0x270FA5388](v11);
  os_log_type_t v152 = (char *)&v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2DD8);
  *(void *)&long long v183 = v13;
  uint64_t v159 = *(void *)(a1 + 16);
  sub_24EB3D3E0();
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269932E70);
  sub_24EB3D3E0();
  uint64_t v15 = sub_24EB3DDA0();
  unint64_t v16 = sub_24EB08BE0();
  *(void *)&long long v180 = v14;
  *((void *)&v180 + 1) = MEMORY[0x263F8D6C8];
  *(void *)&long long v181 = v15;
  *((void *)&v181 + 1) = v16;
  uint64_t v182 = MEMORY[0x263F8D6D8];
  sub_24EB3DAB0();
  uint64_t v139 = a1;
  uint64_t v158 = *(void *)(a1 + 24);
  uint64_t v178 = v158;
  uint64_t v179 = MEMORY[0x263F18860];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v177 = MEMORY[0x263F189A8];
  uint64_t v175 = swift_getWitnessTable();
  uint64_t v174 = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_24EB3DA80();
  *((void *)&v183 + 1) = sub_24EB3D5A0();
  *(void *)&long long v184 = v13;
  *((void *)&v184 + 1) = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269932E98);
  uint64_t v185 = v13;
  swift_getTupleTypeMetadata();
  uint64_t v155 = sub_24EB3DB20();
  uint64_t v154 = swift_getWitnessTable();
  uint64_t v17 = sub_24EB3DA40();
  uint64_t v116 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v153 = (char *)&v99 - v18;
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v151 = sub_24EAB15E8(&qword_269932EA0, &qword_269932E68);
  *(void *)&long long v183 = v17;
  *((void *)&v183 + 1) = v11;
  *(void *)&long long v184 = v19;
  *((void *)&v184 + 1) = v151;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v113 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v110 = (char *)&v99 - v21;
  uint64_t v115 = v22;
  uint64_t v23 = sub_24EB3D3E0();
  uint64_t v123 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v120 = (char *)&v99 - v24;
  uint64_t v25 = sub_24EB3D3E0();
  uint64_t v126 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v122 = (char *)&v99 - v26;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2F28);
  uint64_t v27 = sub_24EB3D3E0();
  uint64_t v133 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  unint64_t v129 = (char *)&v99 - v28;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269932EA8);
  uint64_t v29 = sub_24EB3D3E0();
  uint64_t v127 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v124 = (char *)&v99 - v30;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2D50);
  uint64_t v31 = sub_24EB3D3E0();
  uint64_t v135 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v132 = (char *)&v99 - v32;
  uint64_t v106 = v17;
  uint64_t v107 = v19;
  *(void *)&long long v183 = v17;
  *((void *)&v183 + 1) = v157;
  *(void *)&long long v184 = v19;
  uint64_t v33 = (uint64_t)v152;
  *((void *)&v184 + 1) = v151;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v172 = OpaqueTypeConformance2;
  uint64_t v173 = MEMORY[0x263F19100];
  uint64_t v125 = v23;
  uint64_t v101 = swift_getWitnessTable();
  uint64_t v170 = v101;
  uint64_t v171 = MEMORY[0x263F18860];
  uint64_t v130 = v25;
  uint64_t v34 = swift_getWitnessTable();
  uint64_t v35 = sub_24EAB15E8(&qword_26B1D2F20, &qword_26B1D2F28);
  uint64_t v102 = v34;
  uint64_t v168 = v34;
  uint64_t v169 = v35;
  uint64_t v134 = v27;
  uint64_t v36 = swift_getWitnessTable();
  uint64_t v37 = sub_24EAB15E8(&qword_269932EB0, &qword_269932EA8);
  uint64_t v103 = v36;
  uint64_t v166 = v36;
  uint64_t v167 = v37;
  uint64_t v131 = v29;
  uint64_t v38 = swift_getWitnessTable();
  uint64_t v39 = sub_24EAB15E8(&qword_26B1D2D48, &qword_26B1D2D50);
  uint64_t v104 = v38;
  uint64_t v164 = v38;
  uint64_t v165 = v39;
  uint64_t v40 = swift_getWitnessTable();
  *(void *)&long long v183 = v31;
  *((void *)&v183 + 1) = v40;
  uint64_t v41 = swift_getOpaqueTypeMetadata2();
  uint64_t v111 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v108 = (char *)&v99 - v42;
  uint64_t v128 = v31;
  *(void *)&long long v183 = v31;
  *((void *)&v183 + 1) = v40;
  uint64_t v105 = v40;
  uint64_t v43 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v183 = v41;
  *((void *)&v183 + 1) = v43;
  uint64_t v44 = swift_getOpaqueTypeMetadata2();
  uint64_t v114 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  uint64_t v46 = (char *)&v99 - v45;
  uint64_t v112 = v41;
  *(void *)&long long v183 = v41;
  *((void *)&v183 + 1) = v43;
  uint64_t v47 = swift_getOpaqueTypeConformance2();
  uint64_t v48 = sub_24EAB15E8(&qword_269932EB8, &qword_269932E60);
  *(void *)&long long v183 = v44;
  *((void *)&v183 + 1) = v160;
  uint64_t v121 = v47;
  *(void *)&long long v184 = v47;
  *((void *)&v184 + 1) = v48;
  uint64_t v119 = v48;
  uint64_t v49 = swift_getOpaqueTypeMetadata2();
  uint64_t v109 = *(void *)(v49 - 8);
  uint64_t v50 = MEMORY[0x270FA5388](v49);
  uint64_t v117 = (char *)&v99 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v50);
  uint64_t v118 = (char *)&v99 - v52;
  long long v53 = *(_OWORD *)(v156 + 16);
  long long v183 = *(_OWORD *)v156;
  long long v184 = v53;
  uint64_t v185 = *(void *)(v156 + 32);
  uint64_t v161 = v159;
  uint64_t v162 = v158;
  uint64_t v163 = &v183;
  sub_24EB3D4E0();
  long long v54 = v153;
  sub_24EB3DA30();
  uint64_t v55 = *MEMORY[0x263F18D70];
  uint64_t v56 = sub_24EB3D3C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 104))(v33, v55, v56);
  sub_24EB0903C(&qword_269932EC0, MEMORY[0x263F18D80]);
  uint64_t result = sub_24EB3DBE0();
  if (result)
  {
    uint64_t v156 = v43;
    uint64_t v58 = v110;
    uint64_t v59 = v106;
    sub_24EB3D840();
    sub_24EB08D30(v33);
    (*(void (**)(char *, uint64_t))(v116 + 8))(v54, v59);
    sub_24EB3DB00();
    uint64_t v60 = v115;
    uint64_t v61 = v120;
    sub_24EB3D8B0();
    (*(void (**)(char *, uint64_t))(v113 + 8))(v58, v60);
    long long v180 = v183;
    long long v181 = v184;
    uint64_t v182 = v185;
    sub_24EB0598C();
    swift_getKeyPath();
    sub_24EB3DBA0();
    swift_release();
    swift_release();
    sub_24EB3DB00();
    long long v62 = v122;
    uint64_t v63 = v125;
    sub_24EB3D8A0();
    (*(void (**)(char *, uint64_t))(v123 + 8))(v61, v63);
    uint64_t v157 = v49;
    uint64_t v155 = v44;
    long long v64 = v136;
    sub_24EB3DAD0();
    sub_24EB3D630();
    uint64_t v66 = v129;
    uint64_t v65 = v130;
    uint64_t v67 = v138;
    sub_24EB3D7C0();
    (*(void (**)(char *, uint64_t))(v137 + 8))(v64, v67);
    (*(void (**)(char *, uint64_t))(v126 + 8))(v62, v65);
    swift_getKeyPath();
    uint64_t v69 = v141;
    uint64_t v68 = v142;
    double v70 = v46;
    char v71 = v140;
    (*(void (**)(char *, void, uint64_t))(v141 + 104))(v140, *MEMORY[0x263F184F8], v142);
    uint64_t v72 = v124;
    uint64_t v73 = v134;
    sub_24EB3D7F0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v71, v68);
    (*(void (**)(char *, uint64_t))(v133 + 8))(v66, v73);
    uint64_t v74 = v131;
    uint64_t v75 = v132;
    sub_24EB3D810();
    (*(void (**)(char *, uint64_t))(v127 + 8))(v72, v74);
    uint64_t v76 = swift_allocObject();
    uint64_t v78 = v158;
    uint64_t v77 = v159;
    *(void *)(v76 + 16) = v159;
    *(void *)(v76 + 24) = v78;
    long long v79 = v184;
    *(_OWORD *)(v76 + 32) = v183;
    *(_OWORD *)(v76 + 48) = v79;
    *(void *)(v76 + 64) = v185;
    sub_24EB08EA4((uint64_t)&v183);
    double v80 = v108;
    uint64_t v81 = v128;
    sub_24EB3D820();
    swift_release();
    (*(void (**)(char *, uint64_t))(v135 + 8))(v75, v81);
    uint64_t v82 = swift_allocObject();
    *(void *)(v82 + 16) = v77;
    *(void *)(v82 + 24) = v78;
    long long v83 = v184;
    *(_OWORD *)(v82 + 32) = v183;
    *(_OWORD *)(v82 + 48) = v83;
    *(void *)(v82 + 64) = v185;
    sub_24EB08EA4((uint64_t)&v183);
    uint64_t v84 = v112;
    sub_24EB3D860();
    swift_release();
    (*(void (**)(char *, uint64_t))(v111 + 8))(v80, v84);
    sub_24EB3D5E0();
    uint64_t v85 = v146;
    sub_24EB3D300();
    uint64_t v86 = swift_allocObject();
    *(void *)(v86 + 16) = v77;
    *(void *)(v86 + 24) = v78;
    long long v87 = v184;
    *(_OWORD *)(v86 + 32) = v183;
    *(_OWORD *)(v86 + 48) = v87;
    *(void *)(v86 + 64) = v185;
    sub_24EB08EA4((uint64_t)&v183);
    sub_24EB0903C(qword_269932EC8, MEMORY[0x263F185B8]);
    unint64_t v88 = v145;
    uint64_t v89 = v149;
    sub_24EB3DAC0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v148 + 8))(v85, v89);
    sub_24EB3D340();
    uint64_t v90 = v117;
    uint64_t v91 = v155;
    uint64_t v92 = v160;
    uint64_t v93 = v121;
    uint64_t v94 = v119;
    sub_24EB3D8D0();
    (*(void (**)(char *, uint64_t))(v147 + 8))(v88, v92);
    (*(void (**)(char *, uint64_t))(v114 + 8))(v70, v91);
    *(void *)&long long v180 = v91;
    *((void *)&v180 + 1) = v92;
    *(void *)&long long v181 = v93;
    *((void *)&v181 + 1) = v94;
    uint64_t v95 = swift_getOpaqueTypeConformance2();
    unint64_t v96 = v118;
    uint64_t v97 = v157;
    sub_24EAB73E4(v90, v157, v95);
    unint64_t v98 = *(void (**)(char *, uint64_t))(v109 + 8);
    v98(v90, v97);
    sub_24EAB73E4(v96, v97, v95);
    return ((uint64_t (*)(char *, uint64_t))v98)(v96, v97);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24EB06E28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v97 = a3;
  uint64_t v91 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269932E70);
  uint64_t v8 = sub_24EB3D3E0();
  sub_24EB3D3E0();
  uint64_t v9 = sub_24EB3DDA0();
  unint64_t v10 = sub_24EB08BE0();
  *(void *)&v138[0] = v7;
  *((void *)&v138[0] + 1) = MEMORY[0x263F8D6C8];
  *(void *)&v138[1] = v9;
  *((void *)&v138[1] + 1) = v10;
  *(void *)&v138[2] = MEMORY[0x263F8D6D8];
  uint64_t v11 = sub_24EB3DAB0();
  uint64_t v143 = a3;
  uint64_t v144 = MEMORY[0x263F18860];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v141 = WitnessTable;
  uint64_t v142 = MEMORY[0x263F189A8];
  uint64_t v140 = swift_getWitnessTable();
  uint64_t v139 = swift_getWitnessTable();
  uint64_t v94 = swift_getWitnessTable();
  unint64_t v82 = v11;
  uint64_t v12 = sub_24EB3DA80();
  uint64_t v81 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  double v80 = (char *)&v70 - v17;
  uint64_t v74 = *(void *)(a2 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v73 = (char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = *(void *)(v8 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v75 = (char *)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v77 = (char *)&v70 - v22;
  uint64_t v92 = v8;
  uint64_t v23 = sub_24EB3D5A0();
  uint64_t v89 = *(void *)(v23 - 8);
  uint64_t v90 = v23;
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  unint64_t v98 = (char *)&v70 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v99 = (char *)&v70 - v26;
  sub_24EB3DB00();
  sub_24EB3D380();
  uint64_t v88 = v145;
  int v87 = v146;
  uint64_t v86 = v147;
  int v85 = v148;
  uint64_t v83 = v150;
  uint64_t v84 = v149;
  long long v27 = *(_OWORD *)(a1 + 16);
  v138[0] = *(_OWORD *)a1;
  v138[1] = v27;
  uint64_t v96 = a1;
  *(void *)&v138[2] = *(void *)(a1 + 32);
  uint64_t v28 = a2;
  uint64_t v29 = v97;
  uint64_t v78 = type metadata accessor for AwardToastView();
  sub_24EB0598C();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  uint64_t v30 = *(void **)&v138[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v31 = v30[2];
  uint64_t v95 = v12;
  uint64_t v93 = v31 - 1;
  if (v31 == 1)
  {
    uint64_t v71 = 1;
    uint64_t v72 = v15;
    uint64_t v32 = WitnessTable;
    uint64_t v33 = v30[5];
    uint64_t v70 = v30[4];
    long long v34 = *(_OWORD *)(v96 + 16);
    v138[0] = *(_OWORD *)v96;
    v138[1] = v34;
    *(void *)&v138[2] = *(void *)(v96 + 32);
    swift_bridgeObjectRetain();
    sub_24EB0598C();
    swift_getKeyPath();
    sub_24EB3DBA0();
    swift_release();
    swift_release();
    uint64_t v35 = *((void *)&v138[2] + 1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v35 + 16))
    {
      unint64_t v36 = sub_24EAE9EE0(v70, v33);
      if (v37)
      {
        uint64_t v38 = (uint64_t *)(*(void *)(v35 + 56) + 16 * v36);
        unint64_t v40 = v38[1];
        uint64_t v94 = *v38;
        uint64_t v39 = v94;
        unint64_t v82 = v40;
        sub_24EAD3F70(v94, v40);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v41 = v96;
        uint64_t v42 = v73;
        (*(void (**)(uint64_t, unint64_t))(v96 + 24))(v39, v40);
        long long v43 = *(_OWORD *)(v41 + 16);
        v138[0] = *(_OWORD *)v41;
        v138[1] = v43;
        *(void *)&v138[2] = *(void *)(v41 + 32);
        sub_24EB0598C();
        swift_getKeyPath();
        sub_24EB3DBA0();
        swift_release();
        swift_release();
        long long v44 = *(_OWORD *)(v41 + 16);
        v138[0] = *(_OWORD *)v41;
        v138[1] = v44;
        *(void *)&v138[2] = *(void *)(v41 + 32);
        sub_24EB0598C();
        swift_getKeyPath();
        sub_24EB3DBA0();
        swift_release();
        swift_release();
        sub_24EB3DB00();
        uint64_t v45 = (uint64_t)v75;
        sub_24EB3D8A0();
        (*(void (**)(char *, uint64_t))(v74 + 8))(v42, v28);
        uint64_t v46 = v77;
        uint64_t v47 = v92;
        sub_24EAB73E4(v45, v92, v32);
        uint64_t v81 = *(void *)(v76 + 8);
        ((void (*)(uint64_t, uint64_t))v81)(v45, v47);
        sub_24EAB73E4(v46, v47, v32);
        swift_getWitnessTable();
        uint64_t v48 = v99;
        sub_24EB1673C(v45, v47);
        sub_24EAD3FC8(v94, v82);
        uint64_t v49 = (uint64_t (*)(char *, uint64_t))v81;
        ((void (*)(uint64_t, uint64_t))v81)(v45, v47);
        uint64_t result = v49(v77, v47);
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v12 = v95;
    uint64_t v29 = v97;
    uint64_t v31 = v71;
    uint64_t v15 = v72;
  }
  uint64_t v51 = sub_24EB3DB00();
  MEMORY[0x270FA5388](v51);
  uint64_t v79 = a2;
  *(&v70 - 6) = a2;
  *(&v70 - 5) = v29;
  *(&v70 - 4) = v31;
  *(&v70 - 3) = (uint64_t)v30;
  uint64_t v52 = v96;
  *(&v70 - 2) = v96;
  sub_24EB3DA70();
  swift_bridgeObjectRelease();
  uint64_t v53 = swift_getWitnessTable();
  long long v54 = v80;
  sub_24EAB73E4(v15, v12, v53);
  uint64_t v55 = *(void (**)(char *, uint64_t))(v81 + 8);
  v55(v15, v12);
  sub_24EAB73E4(v54, v12, v53);
  uint64_t v48 = v99;
  sub_24EB16834((uint64_t)v15, v92, v12);
  v55(v15, v12);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v55)(v54, v12);
  uint64_t v41 = v52;
LABEL_7:
  if ((unsigned __int128)(v93 * (__int128)7) >> 64 == (7 * v93) >> 63)
  {
    sub_24EB3DB00();
    sub_24EB3D380();
    uint64_t v96 = v151;
    LODWORD(v94) = v152;
    uint64_t v93 = v153;
    LODWORD(v92) = v154;
    uint64_t v81 = v156;
    unint64_t v82 = v155;
    double v80 = (char *)sub_24EB3D570();
    sub_24EB08578((long long *)v41, (uint64_t)v135);
    v136[384] = 1;
    memcpy(&v136[7], v135, 0x178uLL);
    LODWORD(v97) = 1;
    memcpy(v137, v136, sizeof(v137));
    sub_24EB3DB00();
    sub_24EB3D380();
    uint64_t v56 = v157;
    char v57 = v158;
    uint64_t v58 = v48;
    uint64_t v59 = v159;
    char v60 = v160;
    uint64_t v61 = v161;
    uint64_t v62 = v162;
    uint64_t v126 = 0;
    char v127 = 1;
    uint64_t v63 = v89;
    uint64_t v128 = v88;
    char v129 = v87;
    uint64_t v130 = v86;
    char v131 = v85;
    uint64_t v132 = v84;
    uint64_t v133 = v83;
    v134[0] = &v126;
    long long v64 = v98;
    uint64_t v65 = v90;
    (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v98, v58, v90);
    uint64_t v118 = 0;
    char v119 = 1;
    uint64_t v120 = v96;
    char v121 = v94;
    uint64_t v122 = v93;
    char v123 = v92;
    unint64_t v124 = v82;
    uint64_t v125 = v81;
    v134[1] = v64;
    v134[2] = &v118;
    v117[0] = v80;
    v117[1] = 0;
    LOBYTE(v117[2]) = v97;
    memcpy((char *)&v117[2] + 1, v137, 0x17FuLL);
    uint64_t v109 = 0;
    char v110 = 1;
    uint64_t v111 = v56;
    char v112 = v57;
    uint64_t v113 = v59;
    char v114 = v60;
    uint64_t v115 = v61;
    uint64_t v116 = v62;
    v134[3] = v117;
    v134[4] = &v109;
    sub_24EB09844((uint64_t)v135);
    uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2DD8);
    v108[0] = v66;
    v108[1] = v65;
    v108[2] = v66;
    v108[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_269932E98);
    v108[4] = v66;
    unint64_t v67 = sub_24EABF88C();
    unint64_t v103 = v67;
    uint64_t v68 = swift_getWitnessTable();
    uint64_t v101 = WitnessTable;
    uint64_t v102 = v68;
    uint64_t v104 = swift_getWitnessTable();
    unint64_t v105 = v67;
    uint64_t v106 = sub_24EAB15E8(&qword_269932F60, &qword_269932E98);
    unint64_t v107 = v67;
    sub_24EB1692C((uint64_t)v134, 5uLL, (uint64_t)v108);
    sub_24EB099B4((uint64_t)v135);
    uint64_t v69 = *(void (**)(char *, uint64_t))(v63 + 8);
    v69(v99, v65);
    memcpy(v138, v117, sizeof(v138));
    sub_24EB09B24((uint64_t)v138);
    return ((uint64_t (*)(char *, uint64_t))v69)(v98, v65);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24EB07A20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v27 = a5;
  uint64_t v30 = a6;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269932E70);
  sub_24EB3D3E0();
  void v26[2] = sub_24EB3D3E0();
  uint64_t v11 = sub_24EB3DDA0();
  unint64_t v28 = sub_24EB08BE0();
  uint64_t v29 = v10;
  uint64_t v37 = v10;
  uint64_t v38 = MEMORY[0x263F8D6C8];
  uint64_t v39 = v11;
  unint64_t v40 = v28;
  uint64_t v41 = MEMORY[0x263F8D6D8];
  uint64_t v12 = sub_24EB3DAB0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)v26 - v18;
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v37 = 0;
    uint64_t v38 = a1;
    v26[1] = swift_getKeyPath();
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = a4;
    uint64_t v21 = v27;
    *(void *)(v20 + 24) = v27;
    *(void *)(v20 + 32) = a2;
    long long v22 = *(_OWORD *)(a3 + 16);
    *(_OWORD *)(v20 + 40) = *(_OWORD *)a3;
    *(_OWORD *)(v20 + 56) = v22;
    *(void *)(v20 + 72) = *(void *)(a3 + 32);
    swift_bridgeObjectRetain();
    sub_24EB08EA4(a3);
    uint64_t v35 = v21;
    uint64_t v36 = MEMORY[0x263F18860];
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v34 = MEMORY[0x263F189A8];
    uint64_t v32 = swift_getWitnessTable();
    uint64_t v25 = swift_getWitnessTable();
    sub_24EB3DAA0();
    uint64_t v31 = v25;
    uint64_t v23 = swift_getWitnessTable();
    sub_24EAB73E4(v16, v12, v23);
    uint64_t v24 = *(void (**)(char *, uint64_t))(v13 + 8);
    v24(v16, v12);
    sub_24EAB73E4(v19, v12, v23);
    return ((uint64_t (*)(char *, uint64_t))v24)(v19, v12);
  }
  return result;
}

uint64_t sub_24EB07D20@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v68 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = v13;
  uint64_t v14 = sub_24EB3D3E0();
  uint64_t v67 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v69 = (char *)&v62 - v15;
  uint64_t v16 = sub_24EB3D3E0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v65 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v66 = (char *)&v62 - v20;
  uint64_t v77 = sub_24EB3DDA0();
  uint64_t v21 = MEMORY[0x270FA5388](v77);
  uint64_t result = MEMORY[0x270FA5388](v21);
  unint64_t v26 = *a1;
  if ((*a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v26 >= *(void *)(a2 + 16))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v70 = v17;
  uint64_t v71 = v25;
  uint64_t v72 = v24;
  uint64_t v73 = (char *)&v62 - v23;
  uint64_t v74 = v14;
  uint64_t v75 = a6;
  uint64_t v27 = a2 + 16 * v26;
  uint64_t v28 = a5;
  uint64_t v29 = *(void *)(v27 + 32);
  uint64_t v30 = *(void *)(v27 + 40);
  long long v31 = a3[1];
  long long v92 = *a3;
  long long v93 = v31;
  uint64_t v94 = *((void *)a3 + 4);
  uint64_t v76 = v28;
  type metadata accessor for AwardToastView();
  swift_bridgeObjectRetain();
  sub_24EB0598C();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  uint64_t v32 = v95;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(void *)(v32 + 16) || (unint64_t v33 = sub_24EAE9EE0(v29, v30), (v34 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v59 = v71;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v70 + 56))(v71, 1, 1, v16);
    uint64_t v43 = v76;
    uint64_t v90 = v76;
    uint64_t v44 = MEMORY[0x263F18860];
    uint64_t v91 = MEMORY[0x263F18860];
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v89 = MEMORY[0x263F189A8];
    swift_getWitnessTable();
    uint64_t v60 = v72;
    long long v54 = v73;
    uint64_t v58 = v77;
    (*(void (**)(char *, uint64_t, uint64_t))(v72 + 16))(v73, v59, v77);
    uint64_t v56 = *(void (**)(uint64_t, uint64_t))(v60 + 8);
    v56(v59, v58);
    goto LABEL_8;
  }
  uint64_t v35 = (uint64_t *)(*(void *)(v32 + 56) + 16 * v33);
  uint64_t v36 = *v35;
  unint64_t v37 = v35[1];
  sub_24EAD3F70(*v35, v37);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v38 = (void (*)(uint64_t, unint64_t))*((void *)a3 + 3);
  uint64_t v64 = v36;
  unint64_t v63 = v37;
  v38(v36, v37);
  long long v39 = a3[1];
  long long v92 = *a3;
  long long v93 = v39;
  uint64_t v94 = *((void *)a3 + 4);
  sub_24EB0598C();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  long long v40 = a3[1];
  long long v92 = *a3;
  long long v93 = v40;
  uint64_t v94 = *((void *)a3 + 4);
  sub_24EB0598C();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  sub_24EB3DB00();
  uint64_t v41 = v69;
  uint64_t v42 = v78;
  uint64_t v43 = v76;
  sub_24EB3D8A0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v12, v42);
  if ((unsigned __int128)((uint64_t)v26 * (__int128)7) >> 64 == (uint64_t)(7 * v26) >> 63)
  {
    uint64_t v81 = v43;
    uint64_t v44 = MEMORY[0x263F18860];
    uint64_t v82 = MEMORY[0x263F18860];
    uint64_t v45 = v74;
    uint64_t v46 = swift_getWitnessTable();
    uint64_t v47 = v65;
    sub_24EB3D8C0();
    sub_24EAD3FC8(v64, v63);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v41, v45);
    uint64_t v79 = v46;
    uint64_t v80 = MEMORY[0x263F189A8];
    uint64_t v48 = swift_getWitnessTable();
    uint64_t v49 = v66;
    sub_24EAB73E4(v47, v16, v48);
    uint64_t v50 = v70;
    uint64_t v51 = *(void (**)(char *, uint64_t))(v70 + 8);
    v51(v47, v16);
    uint64_t v52 = v71;
    sub_24EAB73E4(v49, v16, v48);
    v51(v49, v16);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v50 + 56))(v52, 0, 1, v16);
    uint64_t v53 = v72;
    long long v54 = v73;
    uint64_t v55 = v77;
    (*(void (**)(char *, uint64_t, uint64_t))(v72 + 16))(v73, v52, v77);
    uint64_t v56 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
    uint64_t v57 = v52;
    uint64_t v58 = v55;
    v56(v57, v55);
LABEL_8:
    uint64_t v86 = v43;
    uint64_t v87 = v44;
    uint64_t v84 = swift_getWitnessTable();
    uint64_t v85 = MEMORY[0x263F189A8];
    uint64_t v83 = swift_getWitnessTable();
    uint64_t v61 = swift_getWitnessTable();
    sub_24EAB73E4(v54, v58, v61);
    return ((uint64_t (*)(char *, uint64_t))v56)(v54, v58);
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_24EB08578@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24EB3D6D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EB3DB00();
  sub_24EB3D380();
  uint64_t v60 = v86;
  int v59 = v87;
  uint64_t v58 = v88;
  int v57 = v89;
  uint64_t v55 = v91;
  uint64_t v56 = v90;
  long long v8 = a1[1];
  long long v83 = *a1;
  long long v84 = v8;
  *(void *)&long long v85 = *((void *)a1 + 4);
  uint64_t v66 = type metadata accessor for AwardToastView();
  sub_24EB0598C();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  uint64_t v9 = *((void *)&v83 + 1);
  uint64_t v10 = v84;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v92 = v9;
  uint64_t v93 = v10;
  unint64_t v62 = sub_24EABF994();
  uint64_t v11 = sub_24EB3D770();
  uint64_t v63 = v12;
  uint64_t v64 = v11;
  int v54 = v13;
  uint64_t v70 = v14;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v69 = swift_getKeyPath();
  sub_24EB3D700();
  sub_24EB3D680();
  sub_24EB3D6C0();
  swift_release();
  uint64_t v15 = *MEMORY[0x263F1A680];
  uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v43(v7, v15, v4);
  uint64_t v68 = sub_24EB3D6F0();
  swift_release();
  uint64_t v41 = *(void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v42 = v4;
  v41(v7, v4);
  uint64_t v67 = swift_getKeyPath();
  sub_24EB3DB00();
  sub_24EB3D380();
  uint64_t v53 = v92;
  int v52 = v93;
  uint64_t v51 = v94;
  int v50 = v95;
  uint64_t v48 = v97;
  uint64_t v49 = v96;
  long long v16 = a1[1];
  long long v83 = *a1;
  long long v84 = v16;
  *(void *)&long long v85 = *((void *)a1 + 4);
  sub_24EB0598C();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  uint64_t v17 = *((void *)&v84 + 1);
  uint64_t v18 = v85;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v18)
  {
    *(void *)&long long v83 = v17;
    *((void *)&v83 + 1) = v18;
    uint64_t v19 = sub_24EB3D770();
    uint64_t v46 = v21;
    uint64_t v47 = v20;
    uint64_t v61 = v22 & 1;
    unint64_t v62 = v19;
    uint64_t v45 = swift_getKeyPath();
    uint64_t v44 = swift_getKeyPath();
    sub_24EB3D660();
    uint64_t v23 = v15;
    uint64_t v24 = v42;
    v43(v7, v23, v42);
    uint64_t v43 = (void (*)(char *, uint64_t, uint64_t))sub_24EB3D6F0();
    swift_release();
    v41(v7, v24);
    uint64_t v66 = swift_getKeyPath();
    LODWORD(v42) = sub_24EB3D5D0();
    uint64_t v25 = 2;
  }
  else
  {
    uint64_t v61 = 0;
    unint64_t v62 = 0;
    uint64_t v46 = 0;
    uint64_t v47 = 0;
    uint64_t v44 = 0;
    uint64_t v45 = 0;
    uint64_t v25 = 0;
    uint64_t v66 = 0;
    uint64_t v43 = 0;
    LODWORD(v42) = 0;
  }
  uint64_t v41 = (void (*)(char *, uint64_t))v25;
  char v26 = v54 & 1;
  sub_24EB3DB00();
  sub_24EB3D380();
  *(void *)(a2 + 16) = v60;
  char v81 = v59;
  *(unsigned char *)(a2 + 24) = v59;
  *(void *)(a2 + 32) = v58;
  char v80 = v57;
  *(unsigned char *)(a2 + 40) = v57;
  uint64_t v27 = v55;
  *(void *)(a2 + 48) = v56;
  *(void *)(a2 + 56) = v27;
  *(void *)(a2 + 120) = 2;
  *(void *)(a2 + 168) = v53;
  char v76 = v52;
  *(unsigned char *)(a2 + 176) = v52;
  *(void *)(a2 + 184) = v51;
  char v75 = v50;
  *(unsigned char *)(a2 + 192) = v50;
  uint64_t v28 = v48;
  *(void *)(a2 + 200) = v49;
  *(void *)(a2 + 208) = v28;
  char v82 = 1;
  char v77 = 1;
  char v74 = 1;
  *(unsigned char *)(a2 + 8) = 1;
  *(unsigned char *)(a2 + 160) = 1;
  *(unsigned char *)(a2 + 320) = 1;
  *(void *)(a2 + 328) = v83;
  char v73 = BYTE8(v83);
  *(unsigned char *)(a2 + 336) = BYTE8(v83);
  *(void *)(a2 + 344) = v84;
  char v72 = BYTE8(v84);
  *(unsigned char *)(a2 + 352) = BYTE8(v84);
  *(void *)(a2 + 112) = v69;
  *(void *)a2 = 0;
  uint64_t v29 = v64;
  uint64_t v30 = KeyPath;
  *(void *)(a2 + 64) = v64;
  uint64_t v31 = v29;
  uint64_t v32 = v63;
  *(void *)(a2 + 72) = v63;
  uint64_t v33 = v32;
  *(unsigned char *)(a2 + 80) = v26;
  *(void *)(a2 + 88) = v70;
  *(void *)(a2 + 96) = v30;
  *(unsigned char *)(a2 + 104) = 0;
  *(unsigned char *)(a2 + 128) = 0;
  uint64_t v34 = v66;
  uint64_t v35 = v68;
  *(void *)(a2 + 136) = v67;
  *(void *)(a2 + 144) = v35;
  *(void *)(a2 + 152) = 0;
  uint64_t v36 = v46;
  uint64_t v37 = v47;
  *(void *)(a2 + 216) = v62;
  *(void *)(a2 + 224) = v37;
  *(void *)(a2 + 232) = v61;
  *(void *)(a2 + 240) = v36;
  uint64_t v38 = v44;
  *(void *)(a2 + 248) = v45;
  *(void *)(a2 + 256) = 0;
  *(void *)(a2 + 264) = v38;
  *(void *)(a2 + 272) = v25;
  *(void *)(a2 + 280) = 0;
  *(void *)(a2 + 288) = v34;
  uint64_t v66 = v34;
  *(void *)(a2 + 296) = v43;
  *(_DWORD *)(a2 + 304) = v42;
  *(void *)(a2 + 312) = 0;
  *(_OWORD *)(a2 + 360) = v85;
  char v71 = v26;
  char v79 = v26;
  char v78 = 0;
  sub_24EAB1B08(v31, v33, v26);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  LOBYTE(v30) = v61;
  uint64_t v39 = v62;
  sub_24EB09934(v62, v37, v61, v36);
  sub_24EB09AA4(v39, v37, v30, v36);
  sub_24EAB1A80(v64, v63, v71);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

unint64_t sub_24EB08BE0()
{
  unint64_t result = qword_269932E78;
  if (!qword_269932E78)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269932E70);
    sub_24EB08C54();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932E78);
  }
  return result;
}

unint64_t sub_24EB08C54()
{
  unint64_t result = qword_269932E80;
  if (!qword_269932E80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269932E88);
    sub_24EB08CD0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932E80);
  }
  return result;
}

unint64_t sub_24EB08CD0()
{
  unint64_t result = qword_269932E90;
  if (!qword_269932E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932E90);
  }
  return result;
}

uint64_t sub_24EB08D24@<X0>(uint64_t a1@<X8>)
{
  return sub_24EB06E28(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_24EB08D30(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932E68);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24EB08D90()
{
  return sub_24EB3D460();
}

uint64_t sub_24EB08DB4(uint64_t a1)
{
  uint64_t v2 = sub_24EB3D2F0();
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_24EB3D470();
}

uint64_t sub_24EB08E84()
{
  return sub_24EB08EE4();
}

uint64_t sub_24EB08EA4(uint64_t a1)
{
  return a1;
}

uint64_t sub_24EB08EE4()
{
  return swift_release();
}

uint64_t sub_24EB08F44()
{
  sub_24EB3D320();
  double v1 = v0;
  uint64_t result = sub_24EB3D310();
  if (v1 - v3 > 20.0)
  {
    type metadata accessor for AwardToastView();
    sub_24EB0598C();
    sub_24EB3DBB0();
    return swift_release();
  }
  return result;
}

uint64_t objectdestroy_4Tm()
{
  sub_24EAB0A90();
  swift_release();
  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_24EB09030()
{
  return sub_24EB08F44();
}

uint64_t sub_24EB0903C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EB09084()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24EB090CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t sub_24EB090D4()
{
  sub_24EAB0A90();
  return swift_release();
}

uint64_t sub_24EB09118(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_24EAB0AB0();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  uint64_t v7 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v7;
  swift_retain();
  return a1;
}

uint64_t sub_24EB0917C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_24EAB0AB0();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  sub_24EAB0A90();
  uint64_t v7 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v7;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_24EB0920C(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  sub_24EAB0A90();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t sub_24EB09264(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_24EB092AC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for AwardToastView()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24EB0930C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24EB09834@<X0>(uint64_t a1@<X8>)
{
  return sub_24EB07A20(v1[4], v1[5], v1[6], v1[2], v1[3], a1);
}

uint64_t sub_24EB09844(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 232);
  uint64_t v5 = *(void *)(a1 + 224);
  uint64_t v6 = *(void *)(a1 + 216);
  uint64_t v3 = *(void *)(a1 + 240);
  sub_24EAB1B08(*(void *)(a1 + 64), *(void *)(a1 + 72), *(unsigned char *)(a1 + 80));
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_24EB09934(v6, v5, v2, v3);
  return a1;
}

uint64_t sub_24EB09934(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_24EAB1B08(result, a2, a3 & 1);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_24EB099B4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 232);
  uint64_t v5 = *(void *)(a1 + 224);
  uint64_t v6 = *(void *)(a1 + 216);
  uint64_t v3 = *(void *)(a1 + 240);
  sub_24EAB1A80(*(void *)(a1 + 64), *(void *)(a1 + 72), *(unsigned char *)(a1 + 80));
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_24EB09AA4(v6, v5, v2, v3);
  return a1;
}

uint64_t sub_24EB09AA4(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_24EAB1A80(result, a2, a3 & 1);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_24EB09B24(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 256);
  uint64_t v5 = *(void *)(a1 + 248);
  uint64_t v6 = *(void *)(a1 + 240);
  uint64_t v3 = *(void *)(a1 + 264);
  sub_24EAB1A80(*(void *)(a1 + 88), *(void *)(a1 + 96), *(unsigned char *)(a1 + 104));
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_24EB09AA4(v6, v5, v2, v3);
  return a1;
}

uint64_t sub_24EB09C10@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24EB3D480();
  *a1 = result;
  return result;
}

uint64_t sub_24EB09C3C()
{
  return sub_24EB3D490();
}

uint64_t sub_24EB09C64@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24EB3D4A0();
  *a1 = result;
  return result;
}

uint64_t sub_24EB09C90()
{
  return sub_24EB3D4B0();
}

uint64_t sub_24EB09CBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_24EB3D4C0();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_24EB09CF0()
{
  return sub_24EB3D4D0();
}

uint64_t sub_24EB09D20@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24EB3D480();
  *a1 = result;
  return result;
}

uint64_t sub_24EB09D4C()
{
  return sub_24EB3D490();
}

uint64_t sub_24EB09D74@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_24EB3D4C0();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_24EB09DA8()
{
  return sub_24EB3D4D0();
}

uint64_t sub_24EB09DD8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24EB3D4A0();
  *a1 = result;
  return result;
}

uint64_t sub_24EB09E04()
{
  return sub_24EB3D4B0();
}

uint64_t sub_24EB09E30()
{
  swift_bridgeObjectRelease();
  sub_24EAB0A90();
  swift_release();
  return MEMORY[0x270FA0238](v0, 80, 7);
}

uint64_t sub_24EB09E7C@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24EB07D20(a1, *(void *)(v2 + 32), (long long *)(v2 + 40), *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

__n128 AwardToastFeature.init(environment:)@<Q0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_24EB09ECC()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_24EB3E090();
  sub_24EB3E0A0();
  if (v1) {
    sub_24EB3DCA0();
  }
  return sub_24EB3E0D0();
}

uint64_t sub_24EB09F3C()
{
  if (!*(void *)(v0 + 8)) {
    return sub_24EB3E0A0();
  }
  sub_24EB3E0A0();
  return sub_24EB3DCA0();
}

uint64_t sub_24EB09FB4()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_24EB3E090();
  sub_24EB3E0A0();
  if (v1) {
    sub_24EB3DCA0();
  }
  return sub_24EB3E0D0();
}

uint64_t sub_24EB0A020(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a2[1];
  if (!v3) {
    return v4 == 0;
  }
  if (!v4) {
    return 0;
  }
  if (*a1 == *a2 && v3 == v4) {
    return 1;
  }
  else {
    return sub_24EB3E010();
  }
}

uint64_t AwardToastFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, uint64_t *a2, unint64_t *a3, char a4)
{
  uint64_t v102 = a3;
  uint64_t v99 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932178);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v100 = v6;
  uint64_t v101 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  int v13 = (char *)v86 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v86 - v14;
  uint64_t v17 = *v4;
  uint64_t v16 = v4[1];
  uint64_t v18 = v4[2];
  uint64_t v103 = v4[3];
  uint64_t v19 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26B1D30A0);
  uint64_t v20 = v19[16];
  uint64_t v21 = v19[20];
  uint64_t v22 = v19[24];
  if (a4)
  {
    uint64_t v65 = &v10[v20];
    uint64_t v66 = &v10[v21];
    uint64_t v67 = &v10[v22];
    sub_24EB0A854();
    uint64_t v104 = 0;
    uint64_t v105 = 0;
    sub_24EB3DDE0();
    sub_24EB3DD30();
    uint64_t v68 = *MEMORY[0x263F39580];
    uint64_t v69 = sub_24EB3DB90();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v69 - 8) + 104))(v65, v68, v69);
    uint64_t v70 = (void *)swift_allocObject();
    v70[2] = v17;
    v70[3] = v16;
    uint64_t v71 = v103;
    v70[4] = v18;
    v70[5] = v71;
    *(void *)uint64_t v67 = &unk_269932F78;
    *((void *)v67 + 1) = v70;
    uint64_t v72 = *MEMORY[0x263F39578];
    uint64_t v73 = sub_24EB3DB80();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v73 - 8) + 104))(v66, v72, v73);
    uint64_t v75 = v100;
    uint64_t v74 = v101;
    (*(void (**)(char *, void, uint64_t))(v101 + 104))(v10, *MEMORY[0x263F39530], v100);
    char v76 = v102;
    unint64_t v77 = *v102;
    swift_retain();
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v77 = sub_24EAC505C(0, *(void *)(v77 + 16) + 1, 1, v77);
    }
    unint64_t v79 = *(void *)(v77 + 16);
    unint64_t v78 = *(void *)(v77 + 24);
    if (v79 >= v78 >> 1) {
      unint64_t v77 = sub_24EAC505C(v78 > 1, v79 + 1, 1, v77);
    }
    *(void *)(v77 + 16) = v79 + 1;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v74 + 32))(v77+ ((*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80))+ *(void *)(v74 + 72) * v79, v10, v75);
    *char v76 = v77;
  }
  else
  {
    uint64_t v23 = v19;
    uint64_t v24 = &v15[v20];
    uint64_t v25 = &v15[v21];
    char v26 = &v15[v22];
    unint64_t v27 = sub_24EB0A854();
    uint64_t v104 = 0;
    uint64_t v105 = 0;
    unint64_t v95 = v27;
    sub_24EB3DDE0();
    sub_24EB3DD30();
    uint64_t v28 = *MEMORY[0x263F39580];
    uint64_t v29 = sub_24EB3DB90();
    uint64_t v30 = *(void *)(v29 - 8);
    uint64_t v31 = *(void (**)(void, void))(v30 + 104);
    unsigned int v94 = v28;
    uint64_t v92 = (void (*)(char *, void, uint64_t))v31;
    uint64_t v93 = v29;
    uint64_t v91 = v30 + 104;
    v31(v24, v28);
    uint64_t v32 = (void *)swift_allocObject();
    uint64_t v96 = v17;
    uint64_t v97 = v18;
    v32[2] = v17;
    v32[3] = v16;
    uint64_t v33 = v103;
    v32[4] = v18;
    void v32[5] = v33;
    *(void *)char v26 = &unk_269932F88;
    *((void *)v26 + 1) = v32;
    uint64_t v34 = *MEMORY[0x263F39578];
    uint64_t v35 = sub_24EB3DB80();
    uint64_t v36 = *(void *)(v35 - 8);
    unsigned __int8 v87 = *(void (**)(char *, uint64_t))(v36 + 104);
    uint64_t v88 = v35;
    v86[1] = v36 + 104;
    v87(v25, v34);
    uint64_t v37 = v101;
    uint64_t v38 = *(void (**)(void))(v101 + 104);
    unsigned int v90 = *MEMORY[0x263F39530];
    uint64_t v39 = v100;
    unsigned __int8 v89 = (void (*)(char *, void, uint64_t))v38;
    v38(v15);
    long long v40 = v102;
    unint64_t v41 = *v102;
    swift_retain();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v98 = v16;
    uint64_t v43 = v40;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      unint64_t v41 = sub_24EAC505C(0, *(void *)(v41 + 16) + 1, 1, v41);
    }
    unint64_t v45 = *(void *)(v41 + 16);
    unint64_t v44 = *(void *)(v41 + 24);
    if (v45 >= v44 >> 1) {
      unint64_t v41 = sub_24EAC505C(v44 > 1, v45 + 1, 1, v41);
    }
    *(void *)(v41 + 16) = v45 + 1;
    uint64_t v48 = *(uint64_t **)(v37 + 32);
    uint64_t v47 = v37 + 32;
    uint64_t v46 = v48;
    uint64_t v102 = (unint64_t *)((*(unsigned __int8 *)(v47 + 48) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 48));
    uint64_t v101 = *(void *)(v47 + 40);
    uint64_t v49 = v15;
    uint64_t v50 = v39;
    ((void (*)(char *, char *, uint64_t))v48)((char *)v102 + v41 + v101 * v45, v49, v39);
    unint64_t *v43 = v41;
    uint64_t v51 = v99;
    *((unsigned char *)v99 + 112) = 0;
    uint64_t v52 = *v51;
    if (*(void *)(*v51 + 16) == 1)
    {
      uint64_t v99 = v46;
      uint64_t v53 = *(void *)(v52 + 32);
      uint64_t v54 = *(void *)(v52 + 40);
      uint64_t v55 = &v13[v23[16]];
      v86[0] = &v13[v23[20]];
      uint64_t v56 = &v13[v23[24]];
      uint64_t v104 = v53;
      uint64_t v105 = v54;
      swift_bridgeObjectRetain_n();
      sub_24EB3DDE0();
      int v57 = v43;
      sub_24EB3DD30();
      v92(v55, v94, v93);
      ((void (*)(void, void, uint64_t))v87)(v86[0], *MEMORY[0x263F39570], v88);
      uint64_t v58 = (void *)swift_allocObject();
      v58[2] = v53;
      v58[3] = v54;
      uint64_t v59 = v98;
      v58[4] = v96;
      v58[5] = v59;
      uint64_t v60 = v103;
      v58[6] = v97;
      v58[7] = v60;
      *(void *)uint64_t v56 = &unk_269932F98;
      *((void *)v56 + 1) = v58;
      v89(v13, v90, v50);
      unint64_t v61 = *v57;
      swift_retain();
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v61 = sub_24EAC505C(0, *(void *)(v61 + 16) + 1, 1, v61);
      }
      unint64_t v63 = *(void *)(v61 + 16);
      unint64_t v62 = *(void *)(v61 + 24);
      if (v63 >= v62 >> 1) {
        unint64_t v61 = sub_24EAC505C(v62 > 1, v63 + 1, 1, v61);
      }
      *(void *)(v61 + 16) = v63 + 1;
      uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v99)((char *)v102 + v61 + v63 * v101, v13, v50);
      *int v57 = v61;
    }
    else
    {
      if (qword_26B1D27C0 != -1) {
        swift_once();
      }
      uint64_t v80 = sub_24EB3D2C0();
      __swift_project_value_buffer(v80, (uint64_t)qword_26B1D27A8);
      char v81 = sub_24EB3D2A0();
      os_log_type_t v82 = sub_24EB3DD80();
      if (os_log_type_enabled(v81, v82))
      {
        long long v83 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)long long v83 = 0;
        _os_log_impl(&dword_24EAA5000, v81, v82, "[AwardToastFeature] Coalesced toast, setting scroll position identifier", v83, 2u);
        MEMORY[0x2533497D0](v83, -1, -1);
      }

      *((unsigned char *)v51 + 112) = 1;
      if (qword_269931C78 != -1) {
        swift_once();
      }
      uint64_t v85 = qword_269932130;
      uint64_t v84 = *(void *)algn_269932138;
      swift_bridgeObjectRetain();
      uint64_t result = swift_bridgeObjectRelease();
      v51[12] = v85;
      v51[13] = v84;
    }
  }
  return result;
}

unint64_t sub_24EB0A854()
{
  unint64_t result = qword_269932F68;
  if (!qword_269932F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269932F68);
  }
  return result;
}

uint64_t sub_24EB0A8A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[2] = a2;
  v3[3] = a3;
  sub_24EB3DD20();
  v3[4] = sub_24EB3DD10();
  uint64_t v5 = sub_24EB3DCF0();
  v3[5] = v5;
  v3[6] = v4;
  return MEMORY[0x270FA2498](sub_24EB0A940, v5, v4);
}

uint64_t sub_24EB0A940()
{
  if (qword_26B1D27C0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24EB3D2C0();
  __swift_project_value_buffer(v1, (uint64_t)qword_26B1D27A8);
  uint64_t v2 = sub_24EB3D2A0();
  os_log_type_t v3 = sub_24EB3DD80();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_24EAA5000, v2, v3, "[AwardToastFeature] toast tapped, requesting dismissal", v4, 2u);
    MEMORY[0x2533497D0](v4, -1, -1);
  }
  uint64_t v5 = *(int **)(v0 + 16);

  uint64_t v8 = (uint64_t (*)(void))((char *)v5 + *v5);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_24EB0AAD0;
  return v8(0);
}

uint64_t sub_24EB0AAD0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 40);
  return MEMORY[0x270FA2498](sub_24EB0B9E8, v3, v2);
}

uint64_t sub_24EB0ABF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a2;
  v7[4] = a3;
  sub_24EB3DD20();
  v7[7] = sub_24EB3DD10();
  uint64_t v9 = sub_24EB3DCF0();
  v7[8] = v9;
  v7[9] = v8;
  return MEMORY[0x270FA2498](sub_24EB0AC8C, v9, v8);
}

uint64_t sub_24EB0AC8C()
{
  uint64_t v15 = v0;
  if (qword_26B1D27C0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24EB3D2C0();
  __swift_project_value_buffer(v1, (uint64_t)qword_26B1D27A8);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_24EB3D2A0();
  os_log_type_t v3 = sub_24EB3DD80();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[4];
  if (v4)
  {
    uint64_t v6 = v0[3];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v14 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    v0[2] = sub_24EAC5098(v6, v5, &v14);
    sub_24EB3DDB0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24EAA5000, v2, v3, "[AwardToastFeature] Presenting detail page for %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533497D0](v8, -1, -1);
    MEMORY[0x2533497D0](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  int v13 = (uint64_t (*)(uint64_t, uint64_t))(v0[5] + *(int *)v0[5]);
  uint64_t v9 = (void *)swift_task_alloc();
  v0[10] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_24EB0AEF8;
  uint64_t v11 = v0[3];
  uint64_t v10 = v0[4];
  return v13(v11, v10);
}

uint64_t sub_24EB0AEF8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 72);
  uint64_t v4 = *(void *)(v2 + 64);
  if (v0) {
    unint64_t v5 = sub_24EB0B098;
  }
  else {
    unint64_t v5 = sub_24EB0B034;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_24EB0B034()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24EB0B098()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24EB0B0FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[2] = a2;
  v3[3] = a3;
  sub_24EB3DD20();
  v3[4] = sub_24EB3DD10();
  uint64_t v5 = sub_24EB3DCF0();
  v3[5] = v5;
  v3[6] = v4;
  return MEMORY[0x270FA2498](sub_24EB0B194, v5, v4);
}

uint64_t sub_24EB0B194()
{
  if (qword_26B1D27C0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24EB3D2C0();
  __swift_project_value_buffer(v1, (uint64_t)qword_26B1D27A8);
  uint64_t v2 = sub_24EB3D2A0();
  os_log_type_t v3 = sub_24EB3DD80();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_24EAA5000, v2, v3, "[AwardToastFeature] toast swiped, requesting dismissal", v4, 2u);
    MEMORY[0x2533497D0](v4, -1, -1);
  }
  uint64_t v5 = *(int **)(v0 + 16);

  uint64_t v8 = (uint64_t (*)(uint64_t))((char *)v5 + *v5);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_24EB0B324;
  return v8(1);
}

uint64_t sub_24EB0B324()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 40);
  return MEMORY[0x270FA2498](sub_24EB0B444, v3, v2);
}

uint64_t sub_24EB0B444()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24EB0B4AC(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_24EAC68C4;
  return sub_24EB0B0FC(a1, v4, v5);
}

uint64_t sub_24EB0B56C(uint64_t a1, uint64_t *a2, unint64_t *a3, char *a4)
{
  return AwardToastFeature.reduce(localState:sharedState:sideEffects:action:)(a1, a2, a3, *a4);
}

uint64_t objectdestroyTm()
{
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_24EB0B5B8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_24EAC68C4;
  return sub_24EB0A8A8(a1, v4, v5);
}

uint64_t sub_24EB0B674()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_24EB0B6BC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_24EAC5824;
  return sub_24EB0ABF0(a1, v4, v5, v6, v7, v9, v8);
}

unint64_t sub_24EB0B790()
{
  unint64_t result = qword_269932FA0;
  if (!qword_269932FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932FA0);
  }
  return result;
}

unint64_t sub_24EB0B7E8()
{
  unint64_t result = qword_269932FA8;
  if (!qword_269932FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932FA8);
  }
  return result;
}

unint64_t sub_24EB0B840()
{
  unint64_t result = qword_269932FB0;
  if (!qword_269932FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932FB0);
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardToastFeature()
{
  return &type metadata for AwardToastFeature;
}

uint64_t getEnumTagSinglePayload for AwardToastFeature.TaskIdentifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AwardToastFeature.TaskIdentifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t sub_24EB0B948(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_24EB0B960(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardToastFeature.TaskIdentifier()
{
  return &type metadata for AwardToastFeature.TaskIdentifier;
}

unint64_t sub_24EB0B994()
{
  unint64_t result = qword_269932FB8;
  if (!qword_269932FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932FB8);
  }
  return result;
}

BOOL static AwardToastAction.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t AwardToastAction.hash(into:)()
{
  return sub_24EB3E0A0();
}

uint64_t sub_24EB0BA24(char a1)
{
  if (a1) {
    return 0x6977537473616F74;
  }
  else {
    return 0x7061547473616F74;
  }
}

uint64_t sub_24EB0BA5C()
{
  return sub_24EB0BA24(*v0);
}

uint64_t sub_24EB0BA64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EB0C050(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EB0BA8C(uint64_t a1)
{
  unint64_t v2 = sub_24EB0BEEC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB0BAC8(uint64_t a1)
{
  unint64_t v2 = sub_24EB0BEEC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB0BB04(uint64_t a1)
{
  unint64_t v2 = sub_24EB0BF40();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB0BB40(uint64_t a1)
{
  unint64_t v2 = sub_24EB0BF40();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB0BB7C(uint64_t a1)
{
  unint64_t v2 = sub_24EB0BF94();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB0BBB8(uint64_t a1)
{
  unint64_t v2 = sub_24EB0BF94();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AwardToastAction.hashValue.getter()
{
  return sub_24EB3E0D0();
}

uint64_t AwardToastAction.encode(to:)(void *a1, int a2)
{
  int v18 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932FC0);
  uint64_t v16 = *(void *)(v3 - 8);
  uint64_t v17 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932FC8);
  uint64_t v6 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932FD0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB0BEEC();
  sub_24EB3E0F0();
  int v13 = (uint64_t (**)(char *, uint64_t))(v10 + 8);
  if (v18)
  {
    char v20 = 1;
    sub_24EB0BF40();
    sub_24EB3DF70();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    char v19 = 0;
    sub_24EB0BF94();
    sub_24EB3DF70();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v15);
  }
  return (*v13)(v12, v9);
}

unint64_t sub_24EB0BEEC()
{
  unint64_t result = qword_269932FD8;
  if (!qword_269932FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932FD8);
  }
  return result;
}

unint64_t sub_24EB0BF40()
{
  unint64_t result = qword_269932FE0;
  if (!qword_269932FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932FE0);
  }
  return result;
}

unint64_t sub_24EB0BF94()
{
  unint64_t result = qword_269932FE8;
  if (!qword_269932FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932FE8);
  }
  return result;
}

uint64_t AwardToastAction.init(from:)(uint64_t a1)
{
  return sub_24EB0C158(a1) & 1;
}

uint64_t sub_24EB0C004@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_24EB0C158(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_24EB0C034(void *a1)
{
  return AwardToastAction.encode(to:)(a1, *v1);
}

uint64_t sub_24EB0C050(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x7061547473616F74 && a2 == 0xEB00000000646570;
  if (v3 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6977537473616F74 && a2 == 0xEB00000000646570)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24EB0C158(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933030);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v22 = v2;
  uint64_t v23 = v3;
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933038);
  uint64_t v25 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933040);
  uint64_t v24 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)a1, *(void *)(a1 + 24));
  sub_24EB0BEEC();
  uint64_t v12 = v26;
  sub_24EB3E0E0();
  if (v12) {
    goto LABEL_7;
  }
  uint64_t v13 = v25;
  uint64_t v21 = v6;
  uint64_t v26 = a1;
  uint64_t v14 = sub_24EB3DF60();
  if (*(void *)(v14 + 16) != 1)
  {
    uint64_t v16 = sub_24EB3DE40();
    swift_allocError();
    int v18 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269931DD8);
    *int v18 = &type metadata for AwardToastAction;
    sub_24EB3DED0();
    sub_24EB3DE30();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v16 - 8) + 104))(v18, *MEMORY[0x263F8DCB0], v16);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v9);
    a1 = v26;
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1(a1);
    return a1;
  }
  a1 = *(unsigned __int8 *)(v14 + 32);
  if (a1)
  {
    LODWORD(v25) = *(unsigned __int8 *)(v14 + 32);
    char v28 = 1;
    sub_24EB0BF40();
    sub_24EB3DEC0();
    uint64_t v15 = v24;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v22);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v11, v9);
    a1 = v25;
  }
  else
  {
    char v27 = 0;
    sub_24EB0BF94();
    sub_24EB3DEC0();
    uint64_t v19 = v24;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v21);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
  }
  __swift_destroy_boxed_opaque_existential_1(v26);
  return a1;
}

unint64_t sub_24EB0C5AC()
{
  unint64_t result = qword_269932FF0;
  if (!qword_269932FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932FF0);
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardToastAction()
{
  return &type metadata for AwardToastAction;
}

unsigned char *_s13FitnessAwards16AwardToastActionOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EB0C6E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardToastAction.CodingKeys()
{
  return &type metadata for AwardToastAction.CodingKeys;
}

ValueMetadata *type metadata accessor for AwardToastAction.ToastTappedCodingKeys()
{
  return &type metadata for AwardToastAction.ToastTappedCodingKeys;
}

ValueMetadata *type metadata accessor for AwardToastAction.ToastSwipedCodingKeys()
{
  return &type metadata for AwardToastAction.ToastSwipedCodingKeys;
}

unint64_t sub_24EB0C73C()
{
  unint64_t result = qword_269932FF8;
  if (!qword_269932FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932FF8);
  }
  return result;
}

unint64_t sub_24EB0C794()
{
  unint64_t result = qword_269933000;
  if (!qword_269933000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933000);
  }
  return result;
}

unint64_t sub_24EB0C7EC()
{
  unint64_t result = qword_269933008;
  if (!qword_269933008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933008);
  }
  return result;
}

unint64_t sub_24EB0C844()
{
  unint64_t result = qword_269933010;
  if (!qword_269933010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933010);
  }
  return result;
}

unint64_t sub_24EB0C89C()
{
  unint64_t result = qword_269933018;
  if (!qword_269933018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933018);
  }
  return result;
}

unint64_t sub_24EB0C8F4()
{
  unint64_t result = qword_269933020;
  if (!qword_269933020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933020);
  }
  return result;
}

unint64_t sub_24EB0C94C()
{
  unint64_t result = qword_269933028;
  if (!qword_269933028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933028);
  }
  return result;
}

uint64_t AwardToastLayout.transformed()()
{
  if (v0[8]) {
    return 0;
  }
  else {
    return *(void *)v0;
  }
}

uint64_t AwardToastPresentationState.shouldObserveAppActivation.getter()
{
  return *v0;
}

uint64_t AwardToastPresentationState.suggestedWorkoutsLoadStates.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AwardToastPresentationState.suggestedWorkoutsLoadStates.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*AwardToastPresentationState.suggestedWorkoutsLoadStates.modify())()
{
  return nullsub_1;
}

uint64_t AwardToastPresentationState.loadState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for AwardToastPresentationState();
  return sub_24EB0D568(v1 + *(int *)(v3 + 24), a1, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
}

uint64_t type metadata accessor for AwardToastPresentationState()
{
  uint64_t result = qword_26B1D2B70;
  if (!qword_26B1D2B70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t AwardToastPresentationState.loadState.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AwardToastPresentationState() + 24);
  return sub_24EB027B0(a1, v3);
}

uint64_t (*AwardToastPresentationState.loadState.modify())()
{
  return nullsub_1;
}

uint64_t AwardToastPresentationState.progressLoadStates.getter()
{
  type metadata accessor for AwardToastPresentationState();
  return swift_bridgeObjectRetain();
}

uint64_t AwardToastPresentationState.progressLoadStates.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for AwardToastPresentationState() + 28);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*AwardToastPresentationState.progressLoadStates.modify())()
{
  return nullsub_1;
}

uint64_t AwardToastPresentationState.init(shouldObserveAppActivation:suggestedWorkoutsLoadStates:loadState:progressLoadStates:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(unsigned char *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  uint64_t v8 = type metadata accessor for AwardToastPresentationState();
  uint64_t result = sub_24EB028AC(a3, a5 + *(int *)(v8 + 24));
  *(void *)(a5 + *(int *)(v8 + 28)) = a4;
  return result;
}

unint64_t sub_24EB0CC4C(char a1)
{
  unint64_t result = 0xD00000000000001ALL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 2:
      unint64_t result = 0x7461745364616F6CLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24EB0CCF0()
{
  return sub_24EB0CC4C(*v0);
}

uint64_t sub_24EB0CCF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EB0E2E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EB0CD20(uint64_t a1)
{
  unint64_t v2 = sub_24EB0D028();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB0CD5C(uint64_t a1)
{
  unint64_t v2 = sub_24EB0D028();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AwardToastPresentationState.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933048);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB0D028();
  sub_24EB3E0F0();
  LOBYTE(v12) = 0;
  sub_24EB3DFC0();
  if (!v2)
  {
    uint64_t v12 = *(void *)(v3 + 8);
    HIBYTE(v11) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269932D98);
    sub_24EB0D4A4(&qword_269932DA0, (void (*)(void))sub_24EAA96B8);
    sub_24EB3DFF0();
    uint64_t v9 = type metadata accessor for AwardToastPresentationState();
    LOBYTE(v12) = 2;
    type metadata accessor for AwardToastLoadState();
    sub_24EB0D520(&qword_269932DA8, (void (*)(uint64_t))type metadata accessor for AwardToastLoadState);
    sub_24EB3DFF0();
    uint64_t v12 = *(void *)(v3 + *(int *)(v9 + 28));
    HIBYTE(v11) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269932D88);
    sub_24EB038D4();
    sub_24EB3DFF0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_24EB0D028()
{
  unint64_t result = qword_269933050;
  if (!qword_269933050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933050);
  }
  return result;
}

uint64_t AwardToastPresentationState.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t State = type metadata accessor for AwardToastLoadState();
  MEMORY[0x270FA5388](State);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933058);
  uint64_t v23 = *(void *)(v7 - 8);
  uint64_t v24 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for AwardToastPresentationState();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v25 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_24EB0D028();
  sub_24EB3E0E0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  }
  uint64_t v14 = v6;
  uint64_t v21 = v10;
  uint64_t v15 = v23;
  uint64_t v16 = v24;
  LOBYTE(v27) = 0;
  uint64_t v17 = (uint64_t)v12;
  *uint64_t v12 = sub_24EB3DF20() & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269932D98);
  char v26 = 1;
  sub_24EB0D4A4(&qword_269932DE0, (void (*)(void))sub_24EAA9B4C);
  sub_24EB3DF50();
  *((void *)v12 + 1) = v27;
  LOBYTE(v27) = 2;
  sub_24EB0D520(&qword_269932DE8, (void (*)(uint64_t))type metadata accessor for AwardToastLoadState);
  uint64_t v18 = (uint64_t)v14;
  sub_24EB3DF50();
  uint64_t v19 = v21;
  sub_24EB028AC(v18, v17 + *(int *)(v21 + 24));
  __swift_instantiateConcreteTypeFromMangledName(&qword_269932D88);
  char v26 = 3;
  sub_24EB03C08();
  sub_24EB3DF50();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v16);
  *(void *)(v17 + *(int *)(v19 + 28)) = v27;
  sub_24EB0D568(v17, v22, (uint64_t (*)(void))type metadata accessor for AwardToastPresentationState);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return sub_24EB0D5D0(v17, (uint64_t (*)(void))type metadata accessor for AwardToastPresentationState);
}

uint64_t sub_24EB0D4A4(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269932D98);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EB0D520(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EB0D568(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24EB0D5D0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24EB0D630@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AwardToastPresentationState.init(from:)(a1, a2);
}

uint64_t sub_24EB0D648(void *a1)
{
  return AwardToastPresentationState.encode(to:)(a1);
}

uint64_t _s13FitnessAwards27AwardToastPresentationStateV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  if ((sub_24EB38918(*((void *)a1 + 1), *((void *)a2 + 1)) & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for AwardToastPresentationState();
  if ((_s13FitnessAwards19AwardToastLoadStateO2eeoiySbAC_ACtFZ_0((uint64_t)&a1[*(int *)(v4 + 24)], (uint64_t)&a2[*(int *)(v4 + 24)]) & 1) == 0)return 0; {
  uint64_t v5 = *(int *)(v4 + 28);
  }
  uint64_t v6 = *(void *)&a1[v5];
  uint64_t v7 = *(void *)&a2[v5];
  return sub_24EB37F4C(v6, v7);
}

uint64_t *initializeBufferWithCopyOfBuffer for AwardToastPresentationState(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    a1[1] = a2[1];
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (uint64_t *)((char *)a1 + v7);
    uint64_t v9 = (uint64_t *)((char *)a2 + v7);
    uint64_t State = type metadata accessor for AwardToastLoadState();
    swift_bridgeObjectRetain();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v14 = v9[1];
      void *v8 = *v9;
      v8[1] = v14;
      uint64_t v15 = v9[3];
      v8[2] = v9[2];
      v8[3] = v15;
      uint64_t v16 = v9[5];
      v8[4] = v9[4];
      v8[5] = v16;
      *((unsigned char *)v8 + 48) = *((unsigned char *)v9 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v8, v9, *(void *)(*(void *)(State - 8) + 64));
    }
    else
    {
      uint64_t v12 = sub_24EB3D1F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v8, v9, v12);
      swift_storeEnumTagMultiPayload();
    }
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for AwardToastPresentationState(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  type metadata accessor for AwardToastLoadState();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else if (!EnumCaseMultiPayload)
  {
    uint64_t v6 = sub_24EB3D1F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AwardToastPresentationState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t State = type metadata accessor for AwardToastLoadState();
  swift_bridgeObjectRetain();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v12 = v8[1];
    *uint64_t v7 = *v8;
    v7[1] = v12;
    uint64_t v13 = v8[3];
    v7[2] = v8[2];
    v7[3] = v13;
    uint64_t v14 = v8[5];
    v7[4] = v8[4];
    v7[5] = v14;
    *((unsigned char *)v7 + 48) = *((unsigned char *)v8 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v7, v8, *(void *)(*(void *)(State - 8) + 64));
  }
  else
  {
    uint64_t v11 = sub_24EB3D1F0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v7, v8, v11);
    swift_storeEnumTagMultiPayload();
  }
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AwardToastPresentationState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (void *)(a2 + v6);
    sub_24EB0D5D0(a1 + v6, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
    uint64_t State = type metadata accessor for AwardToastLoadState();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *uint64_t v7 = *v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      v7[3] = v8[3];
      v7[4] = v8[4];
      v7[5] = v8[5];
      *((unsigned char *)v7 + 48) = *((unsigned char *)v8 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v7, v8, *(void *)(*(void *)(State - 8) + 64));
    }
    else
    {
      uint64_t v11 = sub_24EB3D1F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v7, v8, v11);
      swift_storeEnumTagMultiPayload();
    }
  }
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for AwardToastPresentationState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t State = type metadata accessor for AwardToastLoadState();
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v7, v8, *(void *)(*(void *)(State - 8) + 64));
  }
  else
  {
    uint64_t v10 = sub_24EB3D1F0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t assignWithTake for AwardToastPresentationState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (const void *)(a2 + v6);
    sub_24EB0D5D0(a1 + v6, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
    uint64_t State = type metadata accessor for AwardToastLoadState();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v7, v8, *(void *)(*(void *)(State - 8) + 64));
    }
    else
    {
      uint64_t v10 = sub_24EB3D1F0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
  }
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AwardToastPresentationState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EB0DEC8);
}

uint64_t sub_24EB0DEC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t State = type metadata accessor for AwardToastLoadState();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(State - 8) + 48);
    uint64_t v10 = State;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for AwardToastPresentationState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EB0DF8C);
}

uint64_t sub_24EB0DF8C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t State = type metadata accessor for AwardToastLoadState();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(State - 8) + 56);
    uint64_t v9 = State;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_24EB0E034()
{
  uint64_t result = type metadata accessor for AwardToastLoadState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AwardToastPresentationState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EB0E1A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardToastPresentationState.CodingKeys()
{
  return &type metadata for AwardToastPresentationState.CodingKeys;
}

unint64_t sub_24EB0E1E0()
{
  unint64_t result = qword_269933060;
  if (!qword_269933060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933060);
  }
  return result;
}

unint64_t sub_24EB0E238()
{
  unint64_t result = qword_269933068;
  if (!qword_269933068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933068);
  }
  return result;
}

unint64_t sub_24EB0E290()
{
  unint64_t result = qword_269933070;
  if (!qword_269933070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933070);
  }
  return result;
}

uint64_t sub_24EB0E2E4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001ALL && a2 == 0x800000024EB4AB40 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000024EB4AB60 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7461745364616F6CLL && a2 == 0xE900000000000065 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000024EB4AB00)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t sub_24EB0E48C(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x616F4C6567616D69;
      break;
    case 2:
      unint64_t result = 0x616D496863746566;
      break;
    case 3:
      return result;
    case 4:
      unint64_t result = 0x6570704177656976;
      break;
    default:
      unint64_t result = 0x7465466567616D69;
      break;
  }
  return result;
}

uint64_t sub_24EB0E56C(char a1)
{
  if (a1) {
    return 1702521203;
  }
  else {
    return 0x4C5255656C6966;
  }
}

unint64_t sub_24EB0E59C()
{
  return sub_24EB0E48C(*v0);
}

uint64_t sub_24EB0E5A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EB11170(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EB0E5CC(uint64_t a1)
{
  unint64_t v2 = sub_24EB0F230();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB0E608(uint64_t a1)
{
  unint64_t v2 = sub_24EB0F230();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB0E644(uint64_t a1)
{
  unint64_t v2 = sub_24EB0F390();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB0E680(uint64_t a1)
{
  unint64_t v2 = sub_24EB0F390();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB0E6BC()
{
  return sub_24EB0E56C(*v0);
}

uint64_t sub_24EB0E6C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EB113B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EB0E6EC(uint64_t a1)
{
  unint64_t v2 = sub_24EB0F438();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB0E728(uint64_t a1)
{
  unint64_t v2 = sub_24EB0F438();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB0E764(uint64_t a1)
{
  unint64_t v2 = sub_24EB0F3E4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB0E7A0(uint64_t a1)
{
  unint64_t v2 = sub_24EB0F3E4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB0E7DC(uint64_t a1)
{
  unint64_t v2 = sub_24EB0F33C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB0E818(uint64_t a1)
{
  unint64_t v2 = sub_24EB0F33C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB0E854(uint64_t a1)
{
  unint64_t v2 = sub_24EB0F2E8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB0E890(uint64_t a1)
{
  unint64_t v2 = sub_24EB0F2E8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AwardImageAction.encode(to:)(void *a1)
{
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D30F8);
  void v43[2] = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58);
  int v57 = (char *)v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3100);
  v43[1] = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56);
  uint64_t v55 = (char *)v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D30D8);
  uint64_t v49 = *(void *)(v4 - 8);
  uint64_t v50 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v46 = (char *)v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D30E8);
  uint64_t v44 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  uint64_t v7 = (char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D30E0);
  uint64_t v53 = *(void *)(v8 - 8);
  uint64_t v54 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v48 = (char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24EB3D190();
  uint64_t v51 = *(void *)(v10 - 8);
  uint64_t v52 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v47 = (char *)v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for AwardImageAction();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (void *)((char *)v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D30F0);
  uint64_t v59 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB0F230();
  uint64_t v18 = v17;
  sub_24EB3E0F0();
  sub_24EB0F284(v61, (uint64_t)v14);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v30 = *v14;
      uint64_t v31 = v14[1];
      LOBYTE(v62) = 1;
      sub_24EB0F3E4();
      sub_24EB3DF70();
      uint64_t v62 = v30;
      uint64_t v63 = v31;
      type metadata accessor for CGSize();
      sub_24EB101D4(&qword_26B1D3090, (void (*)(uint64_t))type metadata accessor for CGSize);
      uint64_t v32 = v45;
      sub_24EB3DFF0();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v7, v32);
      goto LABEL_11;
    case 2u:
      uint64_t v33 = *v14;
      uint64_t v34 = v14[1];
      LOBYTE(v62) = 2;
      sub_24EB0F390();
      uint64_t v35 = v46;
      sub_24EB3DF70();
      uint64_t v62 = v33;
      uint64_t v63 = v34;
      type metadata accessor for CGSize();
      sub_24EB101D4(&qword_26B1D3090, (void (*)(uint64_t))type metadata accessor for CGSize);
      uint64_t v36 = v50;
      sub_24EB3DFF0();
      uint64_t v37 = v49;
      goto LABEL_10;
    case 3u:
      uint64_t v38 = *v14;
      uint64_t v39 = v14[1];
      LOBYTE(v62) = 3;
      sub_24EB0F33C();
      uint64_t v35 = v55;
      sub_24EB3DF70();
      uint64_t v62 = v38;
      uint64_t v63 = v39;
      type metadata accessor for CGSize();
      sub_24EB101D4(&qword_26B1D3090, (void (*)(uint64_t))type metadata accessor for CGSize);
      uint64_t v36 = v56;
      sub_24EB3DFF0();
      long long v40 = &v65;
      goto LABEL_9;
    case 4u:
      uint64_t v41 = *v14;
      uint64_t v42 = v14[1];
      LOBYTE(v62) = 4;
      sub_24EB0F2E8();
      uint64_t v35 = v57;
      sub_24EB3DF70();
      uint64_t v62 = v41;
      uint64_t v63 = v42;
      type metadata accessor for CGSize();
      sub_24EB101D4(&qword_26B1D3090, (void (*)(uint64_t))type metadata accessor for CGSize);
      uint64_t v36 = v58;
      sub_24EB3DFF0();
      long long v40 = &v66;
LABEL_9:
      uint64_t v37 = *(v40 - 32);
LABEL_10:
      (*(void (**)(char *, uint64_t))(v37 + 8))(v35, v36);
LABEL_11:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v18, v15);
      break;
    default:
      uint64_t v19 = (uint64_t *)((char *)v14 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2790) + 48));
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      uint64_t v23 = v51;
      uint64_t v22 = v52;
      uint64_t v24 = v47;
      (*(void (**)(char *, uint64_t *, uint64_t))(v51 + 32))(v47, v14, v52);
      LOBYTE(v62) = 0;
      sub_24EB0F438();
      uint64_t v25 = v15;
      char v26 = v48;
      sub_24EB3DF70();
      LOBYTE(v62) = 0;
      sub_24EB101D4(&qword_26B1D2798, MEMORY[0x263F06EA8]);
      uint64_t v27 = v54;
      uint64_t v28 = v60;
      sub_24EB3DFF0();
      if (!v28)
      {
        uint64_t v62 = v20;
        uint64_t v63 = v21;
        char v64 = 1;
        type metadata accessor for CGSize();
        sub_24EB101D4(&qword_26B1D3090, (void (*)(uint64_t))type metadata accessor for CGSize);
        sub_24EB3DFF0();
      }
      (*(void (**)(char *, uint64_t))(v53 + 8))(v26, v27);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v24, v22);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v18, v25);
      break;
  }
  return result;
}

uint64_t type metadata accessor for AwardImageAction()
{
  uint64_t result = qword_26B1D2960;
  if (!qword_26B1D2960) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_24EB0F230()
{
  unint64_t result = qword_26B1D2910;
  if (!qword_26B1D2910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2910);
  }
  return result;
}

uint64_t sub_24EB0F284(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AwardImageAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_24EB0F2E8()
{
  unint64_t result = qword_26B1D2928;
  if (!qword_26B1D2928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2928);
  }
  return result;
}

unint64_t sub_24EB0F33C()
{
  unint64_t result = qword_269933078;
  if (!qword_269933078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933078);
  }
  return result;
}

unint64_t sub_24EB0F390()
{
  unint64_t result = qword_26B1D28D0;
  if (!qword_26B1D28D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D28D0);
  }
  return result;
}

unint64_t sub_24EB0F3E4()
{
  unint64_t result = qword_269933080;
  if (!qword_269933080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933080);
  }
  return result;
}

unint64_t sub_24EB0F438()
{
  unint64_t result = qword_26B1D28E8;
  if (!qword_26B1D28E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D28E8);
  }
  return result;
}

uint64_t AwardImageAction.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v75 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933088);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v72 = v3;
  uint64_t v73 = v4;
  MEMORY[0x270FA5388](v3);
  os_log_type_t v82 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933090);
  uint64_t v70 = *(void *)(v6 - 8);
  uint64_t v71 = v6;
  MEMORY[0x270FA5388](v6);
  char v81 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933098);
  uint64_t v67 = *(void *)(v8 - 8);
  uint64_t v68 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v80 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699330A0);
  uint64_t v65 = *(void *)(v66 - 8);
  MEMORY[0x270FA5388](v66);
  char v76 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699330A8);
  uint64_t v74 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  unint64_t v77 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699330B0);
  uint64_t v78 = *(void *)(v12 - 8);
  uint64_t v79 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = type metadata accessor for AwardImageAction();
  uint64_t v15 = MEMORY[0x270FA5388](v83);
  char v64 = (_OWORD *)((char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v59 - v18;
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v22 = (char *)&v59 - v21;
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  uint64_t v25 = (char *)&v59 - v24;
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  uint64_t v28 = (char *)&v59 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v30 = (char *)&v59 - v29;
  uint64_t v31 = a1[3];
  uint64_t v84 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v31);
  sub_24EB0F230();
  uint64_t v32 = (uint64_t)v86;
  sub_24EB3E0E0();
  if (v32) {
    goto LABEL_10;
  }
  uint64_t v60 = v25;
  uint64_t v61 = v22;
  uint64_t v62 = v19;
  uint64_t v63 = v28;
  uint64_t v33 = v80;
  uint64_t v34 = v81;
  uint64_t v35 = v82;
  uint64_t v36 = v83;
  uint64_t v86 = v30;
  uint64_t v37 = v79;
  uint64_t v38 = sub_24EB3DF60();
  uint64_t v39 = (char *)v38;
  if (*(void *)(v38 + 16) != 1)
  {
    uint64_t v43 = sub_24EB3DE40();
    swift_allocError();
    uint64_t v45 = v44;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269931DD8);
    *uint64_t v45 = v36;
    sub_24EB3DED0();
    sub_24EB3DE30();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v43 - 8) + 104))(v45, *MEMORY[0x263F8DCB0], v43);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v78 + 8))(v14, v37);
LABEL_10:
    uint64_t v52 = (uint64_t)v84;
    return __swift_destroy_boxed_opaque_existential_1(v52);
  }
  switch(*(unsigned char *)(v38 + 32))
  {
    case 1:
      LOBYTE(v85) = 1;
      sub_24EB0F3E4();
      uint64_t v46 = v76;
      sub_24EB3DEC0();
      type metadata accessor for CGSize();
      sub_24EB101D4(&qword_269931DF8, (void (*)(uint64_t))type metadata accessor for CGSize);
      uint64_t v47 = v66;
      sub_24EB3DF50();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v46, v47);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v78 + 8))(v14, v37);
      uint64_t v48 = v60;
      *uint64_t v60 = v85;
      goto LABEL_12;
    case 2:
      LOBYTE(v85) = 2;
      sub_24EB0F390();
      sub_24EB3DEC0();
      type metadata accessor for CGSize();
      sub_24EB101D4(&qword_269931DF8, (void (*)(uint64_t))type metadata accessor for CGSize);
      uint64_t v49 = v68;
      sub_24EB3DF50();
      (*(void (**)(char *, uint64_t))(v67 + 8))(v33, v49);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v78 + 8))(v14, v37);
      uint64_t v48 = v61;
      *uint64_t v61 = v85;
      goto LABEL_12;
    case 3:
      LOBYTE(v85) = 3;
      sub_24EB0F33C();
      sub_24EB3DEC0();
      type metadata accessor for CGSize();
      sub_24EB101D4(&qword_269931DF8, (void (*)(uint64_t))type metadata accessor for CGSize);
      uint64_t v50 = v71;
      sub_24EB3DF50();
      (*(void (**)(char *, uint64_t))(v70 + 8))(v34, v50);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v78 + 8))(v14, v37);
      uint64_t v48 = v62;
      *uint64_t v62 = v85;
      goto LABEL_12;
    case 4:
      LOBYTE(v85) = 4;
      sub_24EB0F2E8();
      sub_24EB3DEC0();
      type metadata accessor for CGSize();
      sub_24EB101D4(&qword_269931DF8, (void (*)(uint64_t))type metadata accessor for CGSize);
      uint64_t v51 = v72;
      sub_24EB3DF50();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v35, v51);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v78 + 8))(v14, v37);
      uint64_t v48 = v64;
      *char v64 = v85;
LABEL_12:
      swift_storeEnumTagMultiPayload();
      uint64_t v58 = (uint64_t)v48;
      break;
    default:
      LOBYTE(v85) = 0;
      sub_24EB0F438();
      long long v40 = v77;
      sub_24EB3DEC0();
      sub_24EB3D190();
      LOBYTE(v85) = 0;
      sub_24EB101D4(&qword_269932B28, MEMORY[0x263F06EA8]);
      uint64_t v41 = (uint64_t)v63;
      uint64_t v42 = v69;
      sub_24EB3DF50();
      os_log_type_t v82 = v39;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2790);
      type metadata accessor for CGSize();
      LOBYTE(v85) = 1;
      sub_24EB101D4(&qword_269931DF8, (void (*)(uint64_t))type metadata accessor for CGSize);
      sub_24EB3DF50();
      uint64_t v54 = v42;
      uint64_t v55 = v78;
      (*(void (**)(char *, uint64_t))(v74 + 8))(v40, v54);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v14, v37);
      swift_storeEnumTagMultiPayload();
      uint64_t v58 = v41;
      break;
  }
  uint64_t v56 = (uint64_t)v86;
  sub_24EB10170(v58, (uint64_t)v86);
  uint64_t v57 = (uint64_t)v84;
  sub_24EB10170(v56, v75);
  uint64_t v52 = v57;
  return __swift_destroy_boxed_opaque_existential_1(v52);
}

uint64_t sub_24EB10170(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AwardImageAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EB101D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EB1021C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AwardImageAction.init(from:)(a1, a2);
}

uint64_t sub_24EB10234(void *a1)
{
  return AwardImageAction.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for AwardImageAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = sub_24EB3D190();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2790);
      *(_OWORD *)((char *)a1 + *(int *)(v9 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v9 + 48));
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for AwardImageAction(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (!result)
  {
    uint64_t v3 = sub_24EB3D190();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

char *initializeWithCopy for AwardImageAction(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_24EB3D190();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2790);
    *(_OWORD *)&a1[*(int *)(v7 + 48)] = *(_OWORD *)&a2[*(int *)(v7 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *assignWithCopy for AwardImageAction(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24EB1057C((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_24EB3D190();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2790);
      *(_OWORD *)&a1[*(int *)(v7 + 48)] = *(_OWORD *)&a2[*(int *)(v7 + 48)];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_24EB1057C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AwardImageAction();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *initializeWithTake for AwardImageAction(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_24EB3D190();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2790);
    *(_OWORD *)&a1[*(int *)(v7 + 48)] = *(_OWORD *)&a2[*(int *)(v7 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *assignWithTake for AwardImageAction(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24EB1057C((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_24EB3D190();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2790);
      *(_OWORD *)&a1[*(int *)(v7 + 48)] = *(_OWORD *)&a2[*(int *)(v7 + 48)];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_24EB10780()
{
  uint64_t result = sub_24EB3D190();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v3 = &v2;
    uint64_t v4 = &unk_24EB46298;
    int v5 = &unk_24EB46298;
    uint64_t v6 = &unk_24EB46298;
    uint64_t v7 = &unk_24EB46298;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AwardImageAction.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EB108FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardImageAction.CodingKeys()
{
  return &type metadata for AwardImageAction.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for AwardImageAction.ImageFetchedCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EB10A00);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardImageAction.ImageFetchedCodingKeys()
{
  return &type metadata for AwardImageAction.ImageFetchedCodingKeys;
}

ValueMetadata *type metadata accessor for AwardImageAction.ImageLoadFailedCodingKeys()
{
  return &type metadata for AwardImageAction.ImageLoadFailedCodingKeys;
}

ValueMetadata *type metadata accessor for AwardImageAction.FetchImageDataCodingKeys()
{
  return &type metadata for AwardImageAction.FetchImageDataCodingKeys;
}

ValueMetadata *type metadata accessor for AwardImageAction.LoadStateClearedCodingKeys()
{
  return &type metadata for AwardImageAction.LoadStateClearedCodingKeys;
}

unsigned char *_s13FitnessAwards16AwardImageActionO25ImageLoadFailedCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24EB10B08);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardImageAction.ViewAppearedCodingKeys()
{
  return &type metadata for AwardImageAction.ViewAppearedCodingKeys;
}

unint64_t sub_24EB10B44()
{
  unint64_t result = qword_2699330B8;
  if (!qword_2699330B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699330B8);
  }
  return result;
}

unint64_t sub_24EB10B9C()
{
  unint64_t result = qword_2699330C0;
  if (!qword_2699330C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699330C0);
  }
  return result;
}

unint64_t sub_24EB10BF4()
{
  unint64_t result = qword_2699330C8;
  if (!qword_2699330C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699330C8);
  }
  return result;
}

unint64_t sub_24EB10C4C()
{
  unint64_t result = qword_2699330D0;
  if (!qword_2699330D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699330D0);
  }
  return result;
}

unint64_t sub_24EB10CA4()
{
  unint64_t result = qword_2699330D8;
  if (!qword_2699330D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699330D8);
  }
  return result;
}

unint64_t sub_24EB10CFC()
{
  unint64_t result = qword_2699330E0;
  if (!qword_2699330E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699330E0);
  }
  return result;
}

unint64_t sub_24EB10D54()
{
  unint64_t result = qword_26B1D28F8;
  if (!qword_26B1D28F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D28F8);
  }
  return result;
}

unint64_t sub_24EB10DAC()
{
  unint64_t result = qword_26B1D28F0;
  if (!qword_26B1D28F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D28F0);
  }
  return result;
}

unint64_t sub_24EB10E04()
{
  unint64_t result = qword_26B1D2908;
  if (!qword_26B1D2908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2908);
  }
  return result;
}

unint64_t sub_24EB10E5C()
{
  unint64_t result = qword_26B1D2900;
  if (!qword_26B1D2900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2900);
  }
  return result;
}

unint64_t sub_24EB10EB4()
{
  unint64_t result = qword_26B1D28E0;
  if (!qword_26B1D28E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D28E0);
  }
  return result;
}

unint64_t sub_24EB10F0C()
{
  unint64_t result = qword_26B1D28D8;
  if (!qword_26B1D28D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D28D8);
  }
  return result;
}

unint64_t sub_24EB10F64()
{
  unint64_t result = qword_26B1D2948;
  if (!qword_26B1D2948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2948);
  }
  return result;
}

unint64_t sub_24EB10FBC()
{
  unint64_t result = qword_26B1D2940;
  if (!qword_26B1D2940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2940);
  }
  return result;
}

unint64_t sub_24EB11014()
{
  unint64_t result = qword_26B1D2938;
  if (!qword_26B1D2938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2938);
  }
  return result;
}

unint64_t sub_24EB1106C()
{
  unint64_t result = qword_26B1D2930;
  if (!qword_26B1D2930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2930);
  }
  return result;
}

unint64_t sub_24EB110C4()
{
  unint64_t result = qword_26B1D2920;
  if (!qword_26B1D2920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2920);
  }
  return result;
}

unint64_t sub_24EB1111C()
{
  unint64_t result = qword_26B1D2918;
  if (!qword_26B1D2918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2918);
  }
  return result;
}

uint64_t sub_24EB11170(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x7465466567616D69 && a2 == 0xEC00000064656863;
  if (v3 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x616F4C6567616D69 && a2 == 0xEF64656C69614664 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x616D496863746566 && a2 == 0xEE00617461446567 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024EB4A9D0 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6570704177656976 && a2 == 0xEC00000064657261)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_24EB113B4(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x4C5255656C6966 && a2 == 0xE700000000000000;
  if (v3 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t AwardCanvasSectionDescriptor.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AwardCanvasSectionDescriptor.templateUniqueName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AwardCanvasSectionDescriptor.items.getter()
{
  return swift_bridgeObjectRetain();
}

void __swiftcall AwardCanvasSectionDescriptor.init(identifier:templateUniqueName:items:)(FitnessAwards::AwardCanvasSectionDescriptor *__return_ptr retstr, Swift::String identifier, Swift::String templateUniqueName, Swift::OpaquePointer items)
{
  retstr->identifier = identifier;
  retstr->templateUniqueName = templateUniqueName;
  retstr->items = items;
}

uint64_t sub_24EB1150C(char a1)
{
  if (!a1) {
    return 0x696669746E656469;
  }
  if (a1 == 1) {
    return 0xD000000000000012;
  }
  return 0x736D657469;
}

uint64_t sub_24EB11568()
{
  return sub_24EB1150C(*v0);
}

uint64_t sub_24EB11570@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EB125F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EB11598(uint64_t a1)
{
  unint64_t v2 = sub_24EB11810();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB115D4(uint64_t a1)
{
  unint64_t v2 = sub_24EB11810();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AwardCanvasSectionDescriptor.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3158);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  uint64_t v13 = v1[3];
  uint64_t v14 = v7;
  uint64_t v12 = v1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB11810();
  sub_24EB3E0F0();
  char v19 = 0;
  uint64_t v8 = v15;
  sub_24EB3DFB0();
  if (!v8)
  {
    uint64_t v9 = v12;
    char v18 = 1;
    sub_24EB3DFB0();
    uint64_t v16 = v9;
    char v17 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3060);
    sub_24EB11BB0(&qword_26B1D3068, (void (*)(void))sub_24EB11864);
    sub_24EB3DFF0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_24EB11810()
{
  unint64_t result = qword_26B1D2B80;
  if (!qword_26B1D2B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2B80);
  }
  return result;
}

unint64_t sub_24EB11864()
{
  unint64_t result = qword_26B1D2B30;
  if (!qword_26B1D2B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2B30);
  }
  return result;
}

uint64_t AwardCanvasSectionDescriptor.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699330E8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB11810();
  sub_24EB3E0E0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v24 = 0;
  uint64_t v9 = sub_24EB3DF10();
  uint64_t v11 = v10;
  uint64_t v20 = v9;
  char v23 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_24EB3DF10();
  uint64_t v14 = v13;
  uint64_t v18 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3060);
  char v22 = 2;
  sub_24EB11BB0(&qword_2699330F0, (void (*)(void))sub_24EB11C20);
  uint64_t v19 = v14;
  swift_bridgeObjectRetain();
  sub_24EB3DF50();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v15 = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = v19;
  *a2 = v20;
  a2[1] = v11;
  a2[2] = v18;
  a2[3] = v16;
  a2[4] = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EB11BB0(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D3060);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24EB11C20()
{
  unint64_t result = qword_2699330F8;
  if (!qword_2699330F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699330F8);
  }
  return result;
}

uint64_t sub_24EB11C74@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return AwardCanvasSectionDescriptor.init(from:)(a1, a2);
}

uint64_t sub_24EB11C8C(void *a1)
{
  return AwardCanvasSectionDescriptor.encode(to:)(a1);
}

uint64_t AwardCanvasSectionDescriptor.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 32);
  swift_bridgeObjectRetain();
  sub_24EB3DCA0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EB3DCA0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EAE7244(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t static AwardCanvasSectionDescriptor.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  BOOL v8 = *a1 == *a2 && a1[1] == a2[1];
  if (!v8 && (sub_24EB3E010() & 1) == 0) {
    return 0;
  }
  BOOL v9 = v2 == v5 && v4 == v6;
  if (!v9 && (sub_24EB3E010() & 1) == 0) {
    return 0;
  }
  return sub_24EAE5FDC(v3, v7);
}

uint64_t AwardCanvasSectionDescriptor.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_24EB3E090();
  swift_bridgeObjectRetain();
  sub_24EB3DCA0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EB3DCA0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EAE7244((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_24EB3E0D0();
}

uint64_t sub_24EB11EB4()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_24EB3E090();
  swift_bridgeObjectRetain();
  sub_24EB3DCA0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EB3DCA0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EAE7244((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_24EB3E0D0();
}

uint64_t sub_24EB11F64(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 32);
  swift_bridgeObjectRetain();
  sub_24EB3DCA0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EB3DCA0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EAE7244(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EB12008()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_24EB3E090();
  swift_bridgeObjectRetain();
  sub_24EB3DCA0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EB3DCA0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24EAE7244((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_24EB3E0D0();
}

uint64_t sub_24EB120B4(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  BOOL v8 = *a1 == *a2 && a1[1] == a2[1];
  if (!v8 && (sub_24EB3E010() & 1) == 0) {
    return 0;
  }
  BOOL v9 = v2 == v5 && v4 == v6;
  if (!v9 && (sub_24EB3E010() & 1) == 0) {
    return 0;
  }
  return sub_24EAE5FDC(v3, v7);
}

unint64_t sub_24EB12174()
{
  unint64_t result = qword_269933100;
  if (!qword_269933100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933100);
  }
  return result;
}

uint64_t destroy for AwardCanvasSectionDescriptor()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for AwardCanvasSectionDescriptor(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for AwardCanvasSectionDescriptor(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AwardCanvasSectionDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AwardCanvasSectionDescriptor(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AwardCanvasSectionDescriptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardCanvasSectionDescriptor()
{
  return &type metadata for AwardCanvasSectionDescriptor;
}

unsigned char *storeEnumTagSinglePayload for AwardCanvasSectionDescriptor.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EB124B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardCanvasSectionDescriptor.CodingKeys()
{
  return &type metadata for AwardCanvasSectionDescriptor.CodingKeys;
}

unint64_t sub_24EB124EC()
{
  unint64_t result = qword_269933108;
  if (!qword_269933108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933108);
  }
  return result;
}

unint64_t sub_24EB12544()
{
  unint64_t result = qword_26B1D2B90;
  if (!qword_26B1D2B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2B90);
  }
  return result;
}

unint64_t sub_24EB1259C()
{
  unint64_t result = qword_26B1D2B88;
  if (!qword_26B1D2B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2B88);
  }
  return result;
}

uint64_t sub_24EB125F0(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v3 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000024EB4A250 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736D657469 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_24EB1273C(char a1)
{
  return *(void *)&aIdle_8[8 * a1];
}

uint64_t sub_24EB1275C()
{
  return sub_24EB1273C(*v0);
}

uint64_t sub_24EB12764(uint64_t a1)
{
  unint64_t v2 = sub_24EB13D60();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB127A0(uint64_t a1)
{
  unint64_t v2 = sub_24EB13D60();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB127E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EB14AB8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24EB1280C(uint64_t a1)
{
  unint64_t v2 = sub_24EB13DB4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB12848(uint64_t a1)
{
  unint64_t v2 = sub_24EB13DB4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB12884(uint64_t a1)
{
  unint64_t v2 = sub_24EB13E08();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB128C0(uint64_t a1)
{
  unint64_t v2 = sub_24EB13E08();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB128FC(uint64_t a1)
{
  unint64_t v2 = sub_24EB13E5C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB12938(uint64_t a1)
{
  unint64_t v2 = sub_24EB13E5C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AwardToastLoadState.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933110);
  uint64_t v39 = *(void *)(v2 - 8);
  uint64_t v40 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v37 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933118);
  uint64_t v33 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v34 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24EB3D1F0();
  uint64_t v35 = *(void *)(v5 - 8);
  uint64_t v36 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v41 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933120);
  uint64_t v32 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  BOOL v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t State = type metadata accessor for AwardToastLoadState();
  MEMORY[0x270FA5388](State);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933128);
  uint64_t v43 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB13D60();
  sub_24EB3E0F0();
  sub_24EACF1D0(v42, (uint64_t)v12);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v17 = *(void *)v12;
      uint64_t v41 = (char *)*((void *)v12 + 1);
      uint64_t v42 = v17;
      uint64_t v18 = *((void *)v12 + 2);
      uint64_t v38 = *((void *)v12 + 3);
      uint64_t v20 = *((void *)v12 + 4);
      uint64_t v19 = *((void *)v12 + 5);
      char v21 = v12[48];
      LOBYTE(v44) = 2;
      sub_24EB13DB4();
      char v22 = v37;
      sub_24EB3DF70();
      uint64_t v44 = v17;
      uint64_t v45 = v41;
      uint64_t v46 = v18;
      uint64_t v47 = v38;
      uint64_t v48 = v20;
      uint64_t v49 = v19;
      char v50 = v21;
      sub_24EAB35F0();
      uint64_t v23 = v40;
      sub_24EB3DFF0();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v22, v23);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v15, v13);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      LOBYTE(v44) = 0;
      sub_24EB13E5C();
      sub_24EB3DF70();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v7);
      return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v15, v13);
    }
  }
  else
  {
    uint64_t v25 = v33;
    uint64_t v26 = v35;
    uint64_t v27 = v12;
    uint64_t v28 = v36;
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v41, v27, v36);
    LOBYTE(v44) = 1;
    sub_24EB13E08();
    uint64_t v29 = v34;
    sub_24EB3DF70();
    sub_24EB13EF8(&qword_269932088, MEMORY[0x263F07508]);
    uint64_t v30 = v38;
    sub_24EB3DFF0();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v29, v30);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v41, v28);
    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v15, v13);
  }
}

uint64_t AwardToastLoadState.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v58 = a2;
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933150);
  uint64_t v53 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v57 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933158);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v51 = v4;
  uint64_t v52 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v56 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933160);
  uint64_t v48 = *(void *)(v7 - 8);
  uint64_t v49 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v55 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933168);
  uint64_t v54 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t State = type metadata accessor for AwardToastLoadState();
  uint64_t v13 = MEMORY[0x270FA5388](State);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v44 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v44 - v19;
  uint64_t v21 = a1[3];
  uint64_t v59 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v21);
  sub_24EB13D60();
  uint64_t v22 = v65;
  sub_24EB3E0E0();
  if (v22) {
    goto LABEL_9;
  }
  uint64_t v23 = v55;
  uint64_t v46 = v18;
  uint64_t v45 = v15;
  uint64_t v25 = v56;
  char v24 = v57;
  uint64_t v47 = v20;
  uint64_t v65 = State;
  uint64_t v26 = v58;
  uint64_t v27 = sub_24EB3DF60();
  if (*(void *)(v27 + 16) != 1)
  {
    uint64_t v32 = sub_24EB3DE40();
    swift_allocError();
    uint64_t v34 = v33;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269931DD8);
    *uint64_t v34 = v65;
    sub_24EB3DED0();
    sub_24EB3DE30();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v32 - 8) + 104))(v34, *MEMORY[0x263F8DCB0], v32);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v11, v9);
LABEL_9:
    uint64_t v30 = (uint64_t)v59;
    return __swift_destroy_boxed_opaque_existential_1(v30);
  }
  if (*(unsigned char *)(v27 + 32))
  {
    if (*(unsigned char *)(v27 + 32) == 1)
    {
      LOBYTE(v60) = 1;
      sub_24EB13E08();
      sub_24EB3DEC0();
      sub_24EB3D1F0();
      uint64_t v28 = v25;
      sub_24EB13EF8(&qword_2699320B8, MEMORY[0x263F07508]);
      uint64_t v29 = v51;
      sub_24EB3DF50();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v28, v29);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v11, v9);
      uint64_t v30 = (uint64_t)v59;
      uint64_t v31 = v46;
    }
    else
    {
      LOBYTE(v60) = 2;
      sub_24EB13DB4();
      sub_24EB3DEC0();
      sub_24EAB4A80();
      uint64_t v37 = v50;
      sub_24EB3DF50();
      uint64_t v38 = v24;
      uint64_t v30 = (uint64_t)v59;
      uint64_t v39 = v54;
      (*(void (**)(char *, uint64_t))(v53 + 8))(v38, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v11, v9);
      uint64_t v40 = v61;
      uint64_t v41 = v63;
      char v42 = v64;
      uint64_t v31 = v45;
      *uint64_t v45 = v60;
      *((void *)v31 + 2) = v40;
      *(_OWORD *)((char *)v31 + 24) = v62;
      *((void *)v31 + 5) = v41;
      *((unsigned char *)v31 + 48) = v42;
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v43 = (uint64_t)v31;
    uint64_t v35 = (uint64_t)v47;
    sub_24EB028AC(v43, (uint64_t)v47);
  }
  else
  {
    LOBYTE(v60) = 0;
    sub_24EB13E5C();
    sub_24EB3DEC0();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v23, v49);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v11, v9);
    uint64_t v35 = (uint64_t)v47;
    swift_storeEnumTagMultiPayload();
    uint64_t v30 = (uint64_t)v59;
  }
  sub_24EB028AC(v35, v26);
  return __swift_destroy_boxed_opaque_existential_1(v30);
}

uint64_t sub_24EB13690@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AwardToastLoadState.init(from:)(a1, a2);
}

uint64_t sub_24EB136A8(void *a1)
{
  return AwardToastLoadState.encode(to:)(a1);
}

uint64_t AwardToastLoadState.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24EB3D1F0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t State = type metadata accessor for AwardToastLoadState();
  MEMORY[0x270FA5388](State);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24EACF1D0(v2, (uint64_t)v10);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v12 = *(void *)v10;
      uint64_t v13 = *((void *)v10 + 1);
      uint64_t v14 = *((void *)v10 + 2);
      uint64_t v15 = *((void *)v10 + 3);
      uint64_t v16 = *((void *)v10 + 4);
      uint64_t v17 = *((void *)v10 + 5);
      char v18 = v10[48];
      sub_24EB3E0A0();
      v20[1] = v12;
      v20[2] = v13;
      _OWORD v20[3] = v14;
      v20[4] = v15;
      v20[5] = v16;
      v20[6] = v17;
      char v21 = v18;
      AwardToastDetail.hash(into:)(a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      return sub_24EB3E0A0();
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_24EB3E0A0();
    sub_24EB13EF8(&qword_2699320C0, MEMORY[0x263F07508]);
    sub_24EB3DBD0();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t AwardToastLoadState.hashValue.getter()
{
  sub_24EB3E090();
  AwardToastLoadState.hash(into:)((uint64_t)v1);
  return sub_24EB3E0D0();
}

uint64_t sub_24EB1392C()
{
  sub_24EB3E090();
  AwardToastLoadState.hash(into:)((uint64_t)v1);
  return sub_24EB3E0D0();
}

uint64_t sub_24EB13970()
{
  sub_24EB3E090();
  AwardToastLoadState.hash(into:)((uint64_t)v1);
  return sub_24EB3E0D0();
}

uint64_t _s13FitnessAwards19AwardToastLoadStateO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24EB3D1F0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t State = type metadata accessor for AwardToastLoadState();
  uint64_t v9 = MEMORY[0x270FA5388](State);
  uint64_t v11 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v37 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2AE8);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v17 = (char *)v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (uint64_t)&v17[*(int *)(v15 + 56)];
  sub_24EACF1D0(a1, (uint64_t)v17);
  sub_24EACF1D0(a2, v18);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_24EACF1D0((uint64_t)v17, (uint64_t)v13);
    if (!swift_getEnumCaseMultiPayload())
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v18, v4);
      char v34 = sub_24EB3D1D0();
      uint64_t v35 = *(void (**)(char *, uint64_t))(v5 + 8);
      v35(v7, v4);
      v35(v13, v4);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
    goto LABEL_10;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_24EACF1D0((uint64_t)v17, (uint64_t)v11);
    uint64_t v20 = *(void *)v11;
    uint64_t v21 = *((void *)v11 + 2);
    uint64_t v22 = *((void *)v11 + 4);
    uint64_t v23 = *((void *)v11 + 5);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      char v24 = v11[48];
      uint64_t v25 = *((void *)v11 + 3);
      uint64_t v26 = *((void *)v11 + 1);
      uint64_t v28 = *(void *)v18;
      uint64_t v27 = *(void *)(v18 + 8);
      uint64_t v30 = *(void *)(v18 + 16);
      uint64_t v29 = *(void *)(v18 + 24);
      uint64_t v32 = *(void *)(v18 + 32);
      uint64_t v31 = *(void *)(v18 + 40);
      char v33 = *(unsigned char *)(v18 + 48);
      v39[0] = v20;
      v39[1] = v26;
      v39[2] = v21;
      v39[3] = v25;
      v39[4] = v22;
      v39[5] = v23;
      char v40 = v24;
      v37[0] = v28;
      v37[1] = v27;
      v37[2] = v30;
      v37[3] = v29;
      unsigned char v37[4] = v32;
      v37[5] = v31;
      char v38 = v33;
      char v34 = _s13FitnessAwards16AwardToastDetailV2eeoiySbAC_ACtFZ_0((uint64_t)v39, (uint64_t)v37);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_12:
      sub_24EACF234((uint64_t)v17);
      return v34 & 1;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  if (swift_getEnumCaseMultiPayload() != 2)
  {
LABEL_10:
    sub_24EB14B70((uint64_t)v17);
    char v34 = 0;
    return v34 & 1;
  }
  sub_24EACF234((uint64_t)v17);
  char v34 = 1;
  return v34 & 1;
}

uint64_t type metadata accessor for AwardToastLoadState()
{
  uint64_t result = qword_26B1D1F20;
  if (!qword_26B1D1F20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_24EB13D60()
{
  unint64_t result = qword_269933130;
  if (!qword_269933130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933130);
  }
  return result;
}

unint64_t sub_24EB13DB4()
{
  unint64_t result = qword_269933138;
  if (!qword_269933138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933138);
  }
  return result;
}

unint64_t sub_24EB13E08()
{
  unint64_t result = qword_269933140;
  if (!qword_269933140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933140);
  }
  return result;
}

unint64_t sub_24EB13E5C()
{
  unint64_t result = qword_269933148;
  if (!qword_269933148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933148);
  }
  return result;
}

uint64_t sub_24EB13EB0()
{
  return sub_24EB13EF8(&qword_269933170, (void (*)(uint64_t))type metadata accessor for AwardToastLoadState);
}

uint64_t sub_24EB13EF8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for AwardToastLoadState(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      uint64_t v11 = a2[3];
      a1[2] = a2[2];
      a1[3] = v11;
      uint64_t v12 = a2[5];
      a1[4] = a2[4];
      a1[5] = v12;
      *((unsigned char *)a1 + 48) = *((unsigned char *)a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = sub_24EB3D1F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for AwardToastLoadState(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else if (!result)
  {
    uint64_t v3 = sub_24EB3D1F0();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *initializeWithCopy for AwardToastLoadState(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    uint64_t v9 = a2[3];
    a1[2] = a2[2];
    a1[3] = v9;
    uint64_t v10 = a2[5];
    a1[4] = a2[4];
    a1[5] = v10;
    *((unsigned char *)a1 + 48) = *((unsigned char *)a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_24EB3D1F0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithCopy for AwardToastLoadState(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24EACF234((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      a1[5] = a2[5];
      *((unsigned char *)a1 + 48) = *((unsigned char *)a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = sub_24EB3D1F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *assignWithTake for AwardToastLoadState(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24EACF234((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_24EB3D1F0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_24EB14464()
{
  uint64_t result = sub_24EB3D1F0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AwardToastLoadState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EB145C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardToastLoadState.CodingKeys()
{
  return &type metadata for AwardToastLoadState.CodingKeys;
}

ValueMetadata *type metadata accessor for AwardToastLoadState.IdleCodingKeys()
{
  return &type metadata for AwardToastLoadState.IdleCodingKeys;
}

ValueMetadata *type metadata accessor for AwardToastLoadState.FetchingCodingKeys()
{
  return &type metadata for AwardToastLoadState.FetchingCodingKeys;
}

unsigned char *_s13FitnessAwards19AwardToastLoadStateO18FetchingCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24EB146B8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardToastLoadState.FetchedCodingKeys()
{
  return &type metadata for AwardToastLoadState.FetchedCodingKeys;
}

unint64_t sub_24EB146F4()
{
  unint64_t result = qword_269933178;
  if (!qword_269933178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933178);
  }
  return result;
}

unint64_t sub_24EB1474C()
{
  unint64_t result = qword_269933180;
  if (!qword_269933180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933180);
  }
  return result;
}

unint64_t sub_24EB147A4()
{
  unint64_t result = qword_269933188;
  if (!qword_269933188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933188);
  }
  return result;
}

unint64_t sub_24EB147FC()
{
  unint64_t result = qword_269933190;
  if (!qword_269933190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933190);
  }
  return result;
}

unint64_t sub_24EB14854()
{
  unint64_t result = qword_269933198;
  if (!qword_269933198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933198);
  }
  return result;
}

unint64_t sub_24EB148AC()
{
  unint64_t result = qword_2699331A0;
  if (!qword_2699331A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699331A0);
  }
  return result;
}

unint64_t sub_24EB14904()
{
  unint64_t result = qword_2699331A8;
  if (!qword_2699331A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699331A8);
  }
  return result;
}

unint64_t sub_24EB1495C()
{
  unint64_t result = qword_2699331B0;
  if (!qword_2699331B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699331B0);
  }
  return result;
}

unint64_t sub_24EB149B4()
{
  unint64_t result = qword_2699331B8;
  if (!qword_2699331B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699331B8);
  }
  return result;
}

unint64_t sub_24EB14A0C()
{
  unint64_t result = qword_2699331C0;
  if (!qword_2699331C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699331C0);
  }
  return result;
}

unint64_t sub_24EB14A64()
{
  unint64_t result = qword_2699331C8;
  if (!qword_2699331C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699331C8);
  }
  return result;
}

uint64_t sub_24EB14AB8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x7465447473616F74 && a2 == 0xEB000000006C6961)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_24EB14B50()
{
  return 0x7465447473616F74;
}

uint64_t sub_24EB14B70(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2AE8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t AwardProgressEnvironment.init(fetchAwardProgress:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

ValueMetadata *type metadata accessor for AwardProgressEnvironment()
{
  return &type metadata for AwardProgressEnvironment;
}

__n128 AwardToastLayout.init(fixedWidth:imageLayout:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, __n128 *a3@<X8>)
{
  unsigned __int8 v3 = *(unsigned char *)(a1 + 8);
  a3->n128_u64[0] = *(void *)a1;
  a3->n128_u8[8] = v3;
  __n128 result = *a2;
  a3[1] = *a2;
  return result;
}

uint64_t sub_24EB14C04(char a1)
{
  if (a1) {
    return 0x79614C6567616D69;
  }
  else {
    return 0x6469576465786966;
  }
}

uint64_t sub_24EB14C48()
{
  return sub_24EB14C04(*v0);
}

uint64_t sub_24EB14C50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EB156A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EB14C78(uint64_t a1)
{
  unint64_t v2 = sub_24EB14E94();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB14CB4(uint64_t a1)
{
  unint64_t v2 = sub_24EB14E94();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AwardToastLayout.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699331D0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  char v8 = *((unsigned char *)v1 + 8);
  uint64_t v9 = v1[2];
  uint64_t v10 = v1[3];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB14E94();
  sub_24EB3E0F0();
  uint64_t v14 = v7;
  LOBYTE(v15) = v8;
  char v16 = 0;
  sub_24EB14EE8();
  uint64_t v11 = v13[1];
  sub_24EB3DFF0();
  if (!v11)
  {
    uint64_t v14 = v9;
    uint64_t v15 = v10;
    char v16 = 1;
    sub_24EAB67A8();
    sub_24EB3DFF0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_24EB14E94()
{
  unint64_t result = qword_2699331D8;
  if (!qword_2699331D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699331D8);
  }
  return result;
}

unint64_t sub_24EB14EE8()
{
  unint64_t result = qword_2699331E0;
  if (!qword_2699331E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699331E0);
  }
  return result;
}

uint64_t AwardToastLayout.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699331E8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB14E94();
  sub_24EB3E0E0();
  if (!v2)
  {
    char v14 = 0;
    sub_24EB15118();
    sub_24EB3DF50();
    uint64_t v9 = v13;
    char v10 = BYTE8(v13);
    char v14 = 1;
    sub_24EAB6B38();
    sub_24EB3DF50();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    long long v11 = v13;
    *(void *)a2 = v9;
    *(unsigned char *)(a2 + 8) = v10;
    *(_OWORD *)(a2 + 16) = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_24EB15118()
{
  unint64_t result = qword_2699331F0;
  if (!qword_2699331F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699331F0);
  }
  return result;
}

uint64_t sub_24EB1516C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AwardToastLayout.init(from:)(a1, a2);
}

uint64_t sub_24EB15184(void *a1)
{
  return AwardToastLayout.encode(to:)(a1);
}

uint64_t AwardToastLayout.hash(into:)()
{
  if (*(unsigned char *)(v0 + 8))
  {
    sub_24EB3E0A0();
  }
  else
  {
    sub_24EB3E0A0();
    sub_24EB3E0C0();
  }
  return sub_24EAAC994();
}

BOOL static AwardToastLayout.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8))
  {
    if (!*(unsigned char *)(a2 + 8)) {
      return 0;
    }
  }
  else
  {
    if (*(double *)a1 != *(double *)a2) {
      char v2 = 1;
    }
    if (v2) {
      return 0;
    }
  }
  return *(double *)(a1 + 24) == *(double *)(a2 + 24) && *(double *)(a1 + 16) == *(double *)(a2 + 16);
}

uint64_t AwardToastLayout.hashValue.getter()
{
  char v1 = *(unsigned char *)(v0 + 8);
  sub_24EB3E090();
  sub_24EB3E0A0();
  if ((v1 & 1) == 0) {
    sub_24EB3E0C0();
  }
  sub_24EAAC994();
  return sub_24EB3E0D0();
}

uint64_t sub_24EB15308()
{
  char v1 = *(unsigned char *)(v0 + 8);
  sub_24EB3E090();
  sub_24EB3E0A0();
  if ((v1 & 1) == 0) {
    sub_24EB3E0C0();
  }
  sub_24EAAC994();
  return sub_24EB3E0D0();
}

BOOL sub_24EB15394(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8))
  {
    if (!*(unsigned char *)(a2 + 8)) {
      return 0;
    }
  }
  else
  {
    if (*(double *)a1 != *(double *)a2) {
      char v2 = 1;
    }
    if (v2) {
      return 0;
    }
  }
  return *(double *)(a1 + 24) == *(double *)(a2 + 24) && *(double *)(a1 + 16) == *(double *)(a2 + 16);
}

unint64_t sub_24EB153E8()
{
  unint64_t result = qword_2699331F8;
  if (!qword_2699331F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699331F8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AwardToastLayout(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AwardToastLayout(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

ValueMetadata *type metadata accessor for AwardToastLayout()
{
  return &type metadata for AwardToastLayout;
}

unsigned char *storeEnumTagSinglePayload for AwardToastLayout.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EB15564);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardToastLayout.CodingKeys()
{
  return &type metadata for AwardToastLayout.CodingKeys;
}

unint64_t sub_24EB155A0()
{
  unint64_t result = qword_269933200;
  if (!qword_269933200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933200);
  }
  return result;
}

unint64_t sub_24EB155F8()
{
  unint64_t result = qword_269933208;
  if (!qword_269933208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933208);
  }
  return result;
}

unint64_t sub_24EB15650()
{
  unint64_t result = qword_269933210;
  if (!qword_269933210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933210);
  }
  return result;
}

uint64_t sub_24EB156A4(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6469576465786966 && a2 == 0xEA00000000006874;
  if (v3 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x79614C6567616D69 && a2 == 0xEB0000000074756FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24EB157A8()
{
  uint64_t v0 = sub_24EB3D2C0();
  __swift_allocate_value_buffer(v0, qword_26B1D27A8);
  __swift_project_value_buffer(v0, (uint64_t)qword_26B1D27A8);
  return sub_24EB3D2B0();
}

uint64_t awardsLogger.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_26B1D27C0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24EB3D2C0();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_26B1D27A8);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

BOOL static AwardRemoteParticipantStatusMonitorAction.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t AwardRemoteParticipantStatusMonitorAction.hash(into:)()
{
  return sub_24EB3E0A0();
}

uint64_t sub_24EB1596C(uint64_t a1)
{
  unint64_t v2 = sub_24EB15E20();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB159A8(uint64_t a1)
{
  unint64_t v2 = sub_24EB15E20();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB159E4(uint64_t a1)
{
  unint64_t v2 = sub_24EB15D78();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB15A20(uint64_t a1)
{
  unint64_t v2 = sub_24EB15D78();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB15A5C(uint64_t a1)
{
  unint64_t v2 = sub_24EB15DCC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB15A98(uint64_t a1)
{
  unint64_t v2 = sub_24EB15DCC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AwardRemoteParticipantStatusMonitorAction.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933218);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933220);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933228);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  long long v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB15D78();
  sub_24EB3E0F0();
  long long v13 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  if (v12)
  {
    char v22 = 1;
    sub_24EB15DCC();
    char v14 = v18;
    sub_24EB3DF70();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    char v21 = 0;
    sub_24EB15E20();
    sub_24EB3DF70();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*v13)(v11, v8);
}

unint64_t sub_24EB15D78()
{
  unint64_t result = qword_269933230;
  if (!qword_269933230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933230);
  }
  return result;
}

unint64_t sub_24EB15DCC()
{
  unint64_t result = qword_269933238;
  if (!qword_269933238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933238);
  }
  return result;
}

unint64_t sub_24EB15E20()
{
  unint64_t result = qword_269933240;
  if (!qword_269933240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933240);
  }
  return result;
}

uint64_t AwardRemoteParticipantStatusMonitorAction.hashValue.getter()
{
  return sub_24EB3E0D0();
}

uint64_t AwardRemoteParticipantStatusMonitorAction.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933248);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933250);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933258);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB15D78();
  long long v11 = v32;
  sub_24EB3E0E0();
  if (v11) {
    goto LABEL_6;
  }
  uint64_t v32 = a1;
  uint64_t v13 = v30;
  char v12 = v31;
  char v14 = v10;
  uint64_t v15 = sub_24EB3DF60();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_24EB3DE40();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269931DD8);
    *char v22 = &type metadata for AwardRemoteParticipantStatusMonitorAction;
    sub_24EB3DED0();
    sub_24EB3DE30();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x263F8DCB0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    a1 = v32;
LABEL_6:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v23);
  }
  v26[1] = v15;
  char v16 = *(unsigned char *)(v15 + 32);
  if (v16)
  {
    char v17 = *(unsigned char *)(v15 + 32);
    char v34 = 1;
    sub_24EB15DCC();
    uint64_t v18 = v14;
    sub_24EB3DEC0();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v8);
    char v16 = v17;
  }
  else
  {
    char v33 = 0;
    sub_24EB15E20();
    sub_24EB3DEC0();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v8);
  }
  *char v12 = v16;
  uint64_t v23 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_1(v23);
}

uint64_t sub_24EB16314@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return AwardRemoteParticipantStatusMonitorAction.init(from:)(a1, a2);
}

uint64_t sub_24EB1632C(void *a1)
{
  return AwardRemoteParticipantStatusMonitorAction.encode(to:)(a1);
}

unint64_t sub_24EB16348()
{
  unint64_t result = qword_269933260;
  if (!qword_269933260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933260);
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardRemoteParticipantStatusMonitorAction()
{
  return &type metadata for AwardRemoteParticipantStatusMonitorAction;
}

unsigned char *_s13FitnessAwards41AwardRemoteParticipantStatusMonitorActionOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EB1647CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardRemoteParticipantStatusMonitorAction.CodingKeys()
{
  return &type metadata for AwardRemoteParticipantStatusMonitorAction.CodingKeys;
}

ValueMetadata *type metadata accessor for AwardRemoteParticipantStatusMonitorAction.ClearAwardStatesCodingKeys()
{
  return &type metadata for AwardRemoteParticipantStatusMonitorAction.ClearAwardStatesCodingKeys;
}

ValueMetadata *type metadata accessor for AwardRemoteParticipantStatusMonitorAction.ViewAppearedCodingKeys()
{
  return &type metadata for AwardRemoteParticipantStatusMonitorAction.ViewAppearedCodingKeys;
}

unint64_t sub_24EB164D8()
{
  unint64_t result = qword_269933268;
  if (!qword_269933268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933268);
  }
  return result;
}

unint64_t sub_24EB16530()
{
  unint64_t result = qword_269933270;
  if (!qword_269933270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933270);
  }
  return result;
}

unint64_t sub_24EB16588()
{
  unint64_t result = qword_269933278;
  if (!qword_269933278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933278);
  }
  return result;
}

unint64_t sub_24EB165E0()
{
  unint64_t result = qword_269933280;
  if (!qword_269933280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933280);
  }
  return result;
}

unint64_t sub_24EB16638()
{
  unint64_t result = qword_269933288;
  if (!qword_269933288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933288);
  }
  return result;
}

unint64_t sub_24EB16690()
{
  unint64_t result = qword_269933290;
  if (!qword_269933290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933290);
  }
  return result;
}

unint64_t sub_24EB166E8()
{
  unint64_t result = qword_269933298;
  if (!qword_269933298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933298);
  }
  return result;
}

uint64_t sub_24EB1673C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24EB3D580();
  MEMORY[0x270FA5388](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))((char *)&v7 - v5, a1, a2);
  swift_storeEnumTagMultiPayload();
  return sub_24EB3D590();
}

uint64_t sub_24EB16834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_24EB3D580();
  MEMORY[0x270FA5388](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))((char *)&v8 - v6, a1, a3);
  swift_storeEnumTagMultiPayload();
  return sub_24EB3D590();
}

uint64_t sub_24EB1692C(uint64_t TupleTypeMetadata, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = (uint64_t *)TupleTypeMetadata;
  uint64_t v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    uint64_t v6 = *v5;
  }
  else
  {
    MEMORY[0x270FA5388](TupleTypeMetadata);
    uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (a2)
    {
      unint64_t v9 = 0;
      if (a2 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)(v8 - (char *)v5) < 0x20) {
        goto LABEL_9;
      }
      unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      uint64_t v10 = (long long *)(v5 + 2);
      long long v11 = v8 + 16;
      unint64_t v12 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v13 = *v10;
        *(v11 - 1) = *(v10 - 1);
        *long long v11 = v13;
        v10 += 2;
        v11 += 2;
        v12 -= 4;
      }
      while (v12);
      if (v9 != a2)
      {
LABEL_9:
        unint64_t v14 = a2 - v9;
        uint64_t v15 = v9;
        char v16 = &v8[8 * v9];
        char v17 = &v5[v15];
        do
        {
          uint64_t v18 = *v17++;
          *(void *)char v16 = v18;
          v16 += 8;
          --v14;
        }
        while (v14);
      }
    }
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    uint64_t v6 = TupleTypeMetadata;
  }
  MEMORY[0x270FA5388](TupleTypeMetadata);
  uint64_t v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    char v21 = (int *)(v6 + 32);
    unint64_t v22 = a2;
    do
    {
      if (a2 == 1) {
        int v23 = 0;
      }
      else {
        int v23 = *v21;
      }
      uint64_t v25 = *v5++;
      uint64_t v24 = v25;
      uint64_t v26 = *v4++;
      (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 16))(&v20[v23], v26);
      v21 += 4;
      --v22;
    }
    while (v22);
  }
  return sub_24EB3DB30();
}

uint64_t sub_24EB16AF0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269933328);
  sub_24EAB15E8(&qword_269933330, &qword_269933328);
  return sub_24EB3D350();
}

uint64_t AwardDetailView.init(store:awardHeaderViewBuilder:suggestedWorkoutsViewBuilder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(void *)a7 = sub_24EAACDA8;
  *(void *)(a7 + 8) = result;
  *(unsigned char *)(a7 + 16) = 0;
  *(void *)(a7 + 24) = a3;
  *(void *)(a7 + 32) = a4;
  *(void *)(a7 + 40) = a5;
  *(void *)(a7 + 48) = a6;
  return result;
}

uint64_t sub_24EB16C08()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t AwardDetailView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v51 = a1;
  uint64_t v61 = a2;
  uint64_t State = type metadata accessor for AwardEarnedLoadState();
  MEMORY[0x270FA5388](State);
  long long v60 = (char *)v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void *)(a1 + 24);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_2699332A0);
  uint64_t v50 = *(void *)(a1 + 16);
  sub_24EB3D5A0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2DD8);
  uint64_t v46 = v4;
  swift_getTupleTypeMetadata3();
  sub_24EB3DB20();
  swift_getWitnessTable();
  sub_24EB3DA60();
  swift_getWitnessTable();
  sub_24EB3D2D0();
  swift_getWitnessTable();
  sub_24EB3D3B0();
  sub_24EB3D3E0();
  swift_getTupleTypeMetadata3();
  sub_24EB3DB20();
  swift_getWitnessTable();
  sub_24EB3DA60();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24EB3D2D0();
  sub_24EB3D5A0();
  uint64_t v89 = swift_getWitnessTable();
  uint64_t v90 = WitnessTable;
  swift_getWitnessTable();
  sub_24EB3D3B0();
  sub_24EB3D5A0();
  v42[0] = sub_24EB3D9C0();
  uint64_t v6 = sub_24EB3D3E0();
  uint64_t v87 = swift_getWitnessTable();
  uint64_t v88 = MEMORY[0x263F1A450];
  uint64_t v7 = swift_getWitnessTable();
  uint64_t v8 = swift_getWitnessTable();
  uint64_t v85 = v7;
  uint64_t v86 = v8;
  uint64_t v84 = swift_getWitnessTable();
  uint64_t v44 = swift_getWitnessTable();
  uint64_t v82 = v44;
  uint64_t v83 = MEMORY[0x263F1A240];
  uint64_t v9 = swift_getWitnessTable();
  unint64_t v10 = sub_24EAE7A94();
  *(void *)&long long v78 = v6;
  *((void *)&v78 + 1) = &type metadata for AwardSuggestedWorkoutsLoadState;
  v42[1] = v6;
  *(void *)&long long v79 = v9;
  *((void *)&v79 + 1) = v10;
  unint64_t v47 = v10;
  uint64_t v48 = v9;
  unint64_t v11 = v10;
  uint64_t v57 = MEMORY[0x263F1B270];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v54 = OpaqueTypeMetadata2;
  uint64_t v59 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v49 = (char *)v42 - v13;
  *(void *)&long long v78 = v6;
  *((void *)&v78 + 1) = &type metadata for AwardSuggestedWorkoutsLoadState;
  *(void *)&long long v79 = v9;
  *((void *)&v79 + 1) = v11;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v53 = OpaqueTypeConformance2;
  unint64_t v52 = sub_24EB17570();
  *(void *)&long long v78 = OpaqueTypeMetadata2;
  *((void *)&v78 + 1) = State;
  *(void *)&long long v79 = OpaqueTypeConformance2;
  *((void *)&v79 + 1) = v52;
  uint64_t v56 = swift_getOpaqueTypeMetadata2();
  uint64_t v58 = *(void *)(v56 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v56);
  uint64_t v45 = (char *)v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v55 = (char *)v42 - v17;
  long long v18 = v43[1];
  long long v91 = *v43;
  long long v92 = v18;
  long long v93 = v43[2];
  uint64_t v94 = *((void *)v43 + 6);
  uint64_t v19 = v50;
  uint64_t v20 = v46;
  uint64_t v63 = v50;
  uint64_t v64 = v46;
  uint64_t v22 = *(void *)(v51 + 40);
  uint64_t v65 = *(void *)(v51 + 32);
  uint64_t v21 = v65;
  uint64_t v66 = v22;
  uint64_t v67 = &v91;
  swift_checkMetadataState();
  sub_24EB3D9B0();
  long long v69 = v73;
  *(void *)&long long v70 = v74;
  WORD4(v70) = v75;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v19;
  *(void *)(v23 + 24) = v20;
  *(void *)(v23 + 32) = v21;
  *(void *)(v23 + 40) = v22;
  long long v24 = v92;
  *(_OWORD *)(v23 + 48) = v91;
  *(_OWORD *)(v23 + 64) = v24;
  *(_OWORD *)(v23 + 80) = v93;
  *(void *)(v23 + 96) = v94;
  sub_24EAB9FFC((uint64_t)&v91);
  swift_checkMetadataState();
  sub_24EB3D8F0();
  swift_release();
  sub_24EAB0A90();
  long long v73 = v78;
  uint64_t v74 = v79;
  __int16 v75 = WORD4(v79);
  long long v76 = v80;
  long long v77 = v81;
  long long v69 = v91;
  long long v70 = v92;
  long long v71 = v93;
  uint64_t v72 = v94;
  sub_24EB16AF0();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  unint64_t v68 = v69;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v19;
  *(void *)(v25 + 24) = v20;
  *(void *)(v25 + 32) = v21;
  *(void *)(v25 + 40) = v22;
  long long v26 = v92;
  *(_OWORD *)(v25 + 48) = v91;
  *(_OWORD *)(v25 + 64) = v26;
  *(_OWORD *)(v25 + 80) = v93;
  *(void *)(v25 + 96) = v94;
  sub_24EAB9FFC((uint64_t)&v91);
  swift_checkMetadataState();
  uint64_t v27 = v49;
  sub_24EB3D900();
  swift_release();
  sub_24EAA8EF4(v68);
  sub_24EAB0A90();
  sub_24EB18D5C(v76);
  sub_24EB18D5C(v77);
  long long v78 = v91;
  long long v79 = v92;
  long long v80 = v93;
  *(void *)&long long v81 = v94;
  sub_24EB16AF0();
  swift_getKeyPath();
  uint64_t v28 = v60;
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = v19;
  *(void *)(v29 + 24) = v20;
  *(void *)(v29 + 32) = v21;
  *(void *)(v29 + 40) = v22;
  long long v30 = v92;
  *(_OWORD *)(v29 + 48) = v91;
  *(_OWORD *)(v29 + 64) = v30;
  *(_OWORD *)(v29 + 80) = v93;
  *(void *)(v29 + 96) = v94;
  sub_24EAB9FFC((uint64_t)&v91);
  uint64_t v31 = v45;
  uint64_t v32 = (uint64_t)v28;
  uint64_t v34 = v53;
  uint64_t v33 = v54;
  uint64_t v35 = State;
  unint64_t v36 = v52;
  sub_24EB3D900();
  swift_release();
  sub_24EAD5D6C(v32);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v27, v33);
  *(void *)&long long v78 = v33;
  *((void *)&v78 + 1) = v35;
  *(void *)&long long v79 = v34;
  *((void *)&v79 + 1) = v36;
  uint64_t v37 = swift_getOpaqueTypeConformance2();
  uint64_t v39 = v55;
  uint64_t v38 = v56;
  sub_24EAB73E4(v31, v56, v37);
  char v40 = *(void (**)(char *, uint64_t))(v58 + 8);
  v40(v31, v38);
  sub_24EAB73E4(v39, v38, v37);
  return ((uint64_t (*)(char *, uint64_t))v40)(v39, v38);
}

unint64_t sub_24EB17570()
{
  unint64_t result = qword_269932458;
  if (!qword_269932458)
  {
    type metadata accessor for AwardEarnedLoadState();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269932458);
  }
  return result;
}

uint64_t sub_24EB175C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v42 = a6;
  uint64_t State = type metadata accessor for AwardEarnedLoadState();
  MEMORY[0x270FA5388](State);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v14 = *(_OWORD *)(a1 + 16);
  long long v66 = *(_OWORD *)a1;
  long long v67 = v14;
  long long v68 = *(_OWORD *)(a1 + 32);
  uint64_t v69 = *(void *)(a1 + 48);
  *(void *)&long long v63 = a2;
  *((void *)&v63 + 1) = a3;
  uint64_t v64 = a4;
  uint64_t v65 = a5;
  uint64_t v39 = a5;
  uint64_t v15 = type metadata accessor for AwardDetailView();
  sub_24EB16AF0();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v17 = MEMORY[0x263F1A450];
  uint64_t v40 = a2;
  uint64_t v41 = a3;
  if (EnumCaseMultiPayload != 1)
  {
    sub_24EAD5D6C((uint64_t)v13);
    goto LABEL_5;
  }
  if (*v13 != 1)
  {
LABEL_5:
    long long v22 = *(_OWORD *)(a1 + 16);
    long long v66 = *(_OWORD *)a1;
    long long v67 = v22;
    long long v68 = *(_OWORD *)(a1 + 32);
    uint64_t v69 = *(void *)(a1 + 48);
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = a2;
    *(void *)(v23 + 24) = a3;
    uint64_t v24 = v39;
    *(void *)(v23 + 32) = a4;
    *(void *)(v23 + 40) = v24;
    long long v25 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v23 + 48) = *(_OWORD *)a1;
    *(_OWORD *)(v23 + 64) = v25;
    *(_OWORD *)(v23 + 80) = *(_OWORD *)(a1 + 32);
    *(void *)(v23 + 96) = *(void *)(a1 + 48);
    sub_24EAB9FFC(a1);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2DD8);
    swift_getTupleTypeMetadata3();
    sub_24EB3DB20();
    uint64_t v39 = MEMORY[0x263F1BAD0];
    swift_getWitnessTable();
    uint64_t v26 = sub_24EB3DA60();
    uint64_t v38 = MEMORY[0x263F1B6E0];
    uint64_t WitnessTable = swift_getWitnessTable();
    sub_24EB18824((uint64_t)sub_24EB1A6D8, v23, v15, v26, WitnessTable);
    swift_release();
    long long v66 = v50;
    sub_24EB3D2D0();
    sub_24EB3D5A0();
    uint64_t v61 = swift_getWitnessTable();
    uint64_t v62 = WitnessTable;
    swift_getWitnessTable();
    uint64_t v28 = sub_24EB3D3B0();
    uint64_t v29 = swift_getWitnessTable();
    sub_24EAB73E4(&v66, v28, v29);
    swift_release();
    long long v66 = v63;
    sub_24EAB73E4(&v66, v28, v29);
    long long v45 = v50;
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_2699332A0);
    sub_24EB3D5A0();
    swift_getTupleTypeMetadata3();
    sub_24EB3DB20();
    swift_getWitnessTable();
    sub_24EB3DA60();
    swift_getWitnessTable();
    sub_24EB3D2D0();
    swift_getWitnessTable();
    sub_24EB3D3B0();
    uint64_t v30 = sub_24EB3D3E0();
    uint64_t v59 = swift_getWitnessTable();
    uint64_t v60 = MEMORY[0x263F1A450];
    swift_getWitnessTable();
    sub_24EB16834((uint64_t)&v45, v30, v28);
    goto LABEL_6;
  }
  long long v18 = *(_OWORD *)(a1 + 16);
  long long v66 = *(_OWORD *)a1;
  long long v67 = v18;
  long long v68 = *(_OWORD *)(a1 + 32);
  uint64_t v69 = *(void *)(a1 + 48);
  sub_24EB18010(v15);
  long long v66 = v50;
  *(void *)&long long v67 = v51;
  BYTE8(v67) = v52;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_2699332A0);
  sub_24EB3D5A0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2DD8);
  swift_getTupleTypeMetadata3();
  sub_24EB3DB20();
  swift_getWitnessTable();
  sub_24EB3DA60();
  swift_getWitnessTable();
  sub_24EB3D2D0();
  uint64_t v38 = MEMORY[0x263F18478];
  swift_getWitnessTable();
  sub_24EB3D3B0();
  uint64_t v19 = sub_24EB3D3E0();
  uint64_t v39 = MEMORY[0x263F18A90];
  uint64_t v48 = swift_getWitnessTable();
  uint64_t v49 = v17;
  uint64_t v20 = swift_getWitnessTable();
  sub_24EAB73E4(&v66, v19, v20);
  swift_release();
  long long v66 = v63;
  *(void *)&long long v67 = v64;
  BYTE8(v67) = v65;
  sub_24EAB73E4(&v66, v19, v20);
  long long v45 = v50;
  uint64_t v46 = v51;
  char v47 = v52;
  swift_getTupleTypeMetadata3();
  sub_24EB3DB20();
  swift_getWitnessTable();
  sub_24EB3DA60();
  uint64_t v21 = swift_getWitnessTable();
  sub_24EB3D2D0();
  sub_24EB3D5A0();
  uint64_t v43 = swift_getWitnessTable();
  uint64_t v44 = v21;
  swift_getWitnessTable();
  sub_24EB3D3B0();
  swift_getWitnessTable();
  sub_24EB1673C((uint64_t)&v45, v19);
LABEL_6:
  swift_release();
  swift_release();
  uint64_t v37 = *((void *)&v66 + 1);
  uint64_t v38 = v67;
  uint64_t v39 = v66;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_2699332A0);
  sub_24EB3D5A0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2DD8);
  swift_getTupleTypeMetadata3();
  sub_24EB3DB20();
  swift_getWitnessTable();
  sub_24EB3DA60();
  swift_getWitnessTable();
  sub_24EB3D2D0();
  swift_getWitnessTable();
  sub_24EB3D3B0();
  sub_24EB3D3E0();
  swift_getTupleTypeMetadata3();
  sub_24EB3DB20();
  swift_getWitnessTable();
  sub_24EB3DA60();
  uint64_t v31 = swift_getWitnessTable();
  sub_24EB3D2D0();
  sub_24EB3D5A0();
  uint64_t v57 = swift_getWitnessTable();
  uint64_t v58 = v31;
  swift_getWitnessTable();
  sub_24EB3D3B0();
  uint64_t v32 = sub_24EB3D5A0();
  uint64_t v55 = swift_getWitnessTable();
  uint64_t v56 = MEMORY[0x263F1A450];
  uint64_t v33 = swift_getWitnessTable();
  uint64_t v34 = swift_getWitnessTable();
  uint64_t v53 = v33;
  uint64_t v54 = v34;
  uint64_t v35 = swift_getWitnessTable();
  sub_24EAB73E4(&v66, v32, v35);
  return sub_24EAB0A90();
}

uint64_t sub_24EB18000@<X0>(uint64_t a1@<X8>)
{
  return sub_24EB175C8(v1[6], v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t sub_24EB18010(uint64_t a1)
{
  long long v3 = v1[1];
  long long v20 = *v1;
  long long v21 = v3;
  long long v22 = v1[2];
  uint64_t v23 = *((void *)v1 + 6);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = *(void *)(a1 + 16);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(a1 + 24);
  *(void *)(v4 + 40) = *(void *)(a1 + 40);
  long long v5 = v1[1];
  *(_OWORD *)(v4 + 48) = *v1;
  *(_OWORD *)(v4 + 64) = v5;
  *(_OWORD *)(v4 + 80) = v1[2];
  *(void *)(v4 + 96) = *((void *)v1 + 6);
  sub_24EAB9FFC((uint64_t)&v20);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_2699332A0);
  sub_24EB3D5A0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2DD8);
  swift_getTupleTypeMetadata3();
  sub_24EB3DB20();
  swift_getWitnessTable();
  sub_24EB3DA60();
  swift_getWitnessTable();
  sub_24EB3D2D0();
  swift_getWitnessTable();
  *(void *)&long long v10 = sub_24EB3D3A0();
  *((void *)&v10 + 1) = v6;
  long long v13 = v20;
  long long v14 = v21;
  long long v15 = v22;
  uint64_t v16 = v23;
  sub_24EB16AF0();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  if (v13 == 1) {
    sub_24EB3D640();
  }
  else {
    sub_24EB3D650();
  }
  sub_24EB3D3F0();
  sub_24EB3D3B0();
  swift_getWitnessTable();
  sub_24EB3D850();
  swift_release();
  long long v10 = v17;
  uint64_t v11 = v18;
  char v12 = v19;
  uint64_t v7 = sub_24EB3D3E0();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24EAB73E4(&v10, v7, WitnessTable);
  swift_release();
  long long v17 = v13;
  uint64_t v18 = v14;
  char v19 = BYTE8(v14);
  sub_24EAB73E4(&v17, v7, WitnessTable);
  return swift_release();
}

uint64_t sub_24EB18344@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v22 = a5;
  uint64_t v23 = a6;
  uint64_t v24 = a7;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2DD8);
  swift_getTupleTypeMetadata3();
  sub_24EB3DB20();
  swift_getWitnessTable();
  uint64_t v11 = sub_24EB3DA60();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  long long v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  long long v17 = (char *)&v21 - v16;
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  uint64_t v27 = v22;
  uint64_t v28 = v23;
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  sub_24EB3D560();
  sub_24EB3DA50();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24EAB73E4(v15, v11, WitnessTable);
  char v19 = *(void (**)(char *, uint64_t))(v12 + 8);
  v19(v15, v11);
  sub_24EAB73E4(v17, v11, WitnessTable);
  return ((uint64_t (*)(char *, uint64_t))v19)(v17, v11);
}

uint64_t sub_24EB18554@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v31 = a4;
  uint64_t v33 = a5;
  uint64_t v23 = *(void *)(a3 - 8);
  uint64_t v8 = v23;
  uint64_t v9 = MEMORY[0x270FA5388](a1);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v24 = (char *)&v22 - v12;
  sub_24EB3D390();
  sub_24EB3DB00();
  uint64_t v13 = sub_24EB3D380();
  uint64_t v30 = v54[3];
  int v29 = v55;
  uint64_t v28 = v56;
  int v27 = v57;
  uint64_t v25 = v59;
  uint64_t v26 = v58;
  (*(void (**)(uint64_t))(a2 + 24))(v13);
  sub_24EAB73E4(v11, a3, a4);
  uint64_t v32 = *(void (**)(char *, uint64_t))(v8 + 8);
  v32(v11, a3);
  sub_24EB3D390();
  sub_24EB3DB00();
  sub_24EB3D380();
  uint64_t v22 = v60;
  char v14 = v61;
  uint64_t v15 = v62;
  LOBYTE(v8) = v63;
  uint64_t v16 = v64;
  uint64_t v17 = v65;
  uint64_t v46 = 0;
  char v47 = 1;
  uint64_t v48 = v30;
  char v49 = v29;
  uint64_t v50 = v28;
  char v51 = v27;
  uint64_t v18 = v24;
  uint64_t v52 = v26;
  uint64_t v53 = v25;
  v54[0] = &v46;
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v11, v24, a3);
  uint64_t v38 = 0;
  char v39 = 1;
  uint64_t v40 = v22;
  char v41 = v14;
  uint64_t v42 = v15;
  char v43 = v8;
  uint64_t v44 = v16;
  uint64_t v45 = v17;
  v54[1] = v11;
  v54[2] = &v38;
  v37[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2DD8);
  v37[1] = a3;
  v37[2] = v37[0];
  unint64_t v34 = sub_24EABF88C();
  uint64_t v35 = v31;
  unint64_t v36 = v34;
  sub_24EB1692C((uint64_t)v54, 3uLL, (uint64_t)v37);
  char v19 = v18;
  long long v20 = (uint64_t (*)(char *, uint64_t))v32;
  v32(v19, a3);
  return v20(v11, a3);
}

uint64_t sub_24EB18824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  long long v11 = *(_OWORD *)(v5 + 16);
  v25[0] = *(_OWORD *)v5;
  v25[1] = v11;
  v25[2] = *(_OWORD *)(v5 + 32);
  uint64_t v26 = *(void *)(v5 + 48);
  uint64_t v12 = swift_allocObject();
  long long v13 = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v12 + 16) = *(_OWORD *)(a3 + 16);
  *(void *)(v12 + 32) = a4;
  *(_OWORD *)(v12 + 40) = v13;
  *(void *)(v12 + 56) = a5;
  long long v14 = *(_OWORD *)(v5 + 16);
  *(_OWORD *)(v12 + 64) = *(_OWORD *)v5;
  *(_OWORD *)(v12 + 80) = v14;
  *(_OWORD *)(v12 + 96) = *(_OWORD *)(v5 + 32);
  *(void *)(v12 + 112) = *(void *)(v5 + 48);
  *(void *)(v12 + 120) = a1;
  *(void *)(v12 + 128) = a2;
  sub_24EAB9FFC((uint64_t)v25);
  sub_24EB3D2D0();
  sub_24EB3D5A0();
  swift_retain();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v22 = a5;
  swift_getWitnessTable();
  uint64_t v19 = sub_24EB3D3A0();
  uint64_t v20 = v15;
  uint64_t v16 = sub_24EB3D3B0();
  uint64_t v17 = swift_getWitnessTable();
  sub_24EAB73E4(&v19, v16, v17);
  swift_release();
  uint64_t v19 = v23;
  uint64_t v20 = v24;
  sub_24EAB73E4(&v19, v16, v17);
  return swift_release();
}

uint64_t sub_24EB189F4()
{
  return swift_release();
}

uint64_t sub_24EB18A6C()
{
  return sub_24EB190AC((uint64_t (*)(void *, void, void, void, void))sub_24EB189F4);
}

unint64_t sub_24EB18A84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  long long v6 = *(_OWORD *)(a1 + 16);
  long long v16 = *(_OWORD *)a1;
  long long v17 = v6;
  long long v18 = *(_OWORD *)(a1 + 32);
  uint64_t v19 = *(void *)(a1 + 48);
  v15[0] = a2;
  v15[1] = a3;
  v15[2] = a4;
  v15[3] = a5;
  type metadata accessor for AwardDetailView();
  sub_24EB16AF0();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  unint64_t result = sub_24EAA8EF4(v16);
  if ((unint64_t)v16 >= 2)
  {
    if (qword_26B1D27C0 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_24EB3D2C0();
    __swift_project_value_buffer(v8, (uint64_t)qword_26B1D27A8);
    sub_24EAB9FFC(a1);
    sub_24EAB9FFC(a1);
    uint64_t v9 = sub_24EB3D2A0();
    os_log_type_t v10 = sub_24EB3DD80();
    if (os_log_type_enabled(v9, v10))
    {
      long long v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      v15[0] = v12;
      *(_DWORD *)long long v11 = 136315138;
      long long v13 = *(_OWORD *)(a1 + 16);
      long long v16 = *(_OWORD *)a1;
      long long v17 = v13;
      long long v18 = *(_OWORD *)(a1 + 32);
      uint64_t v19 = *(void *)(a1 + 48);
      sub_24EB16AF0();
      swift_getKeyPath();
      sub_24EB3DBA0();
      swift_release();
      swift_release();
      *(void *)&long long v16 = sub_24EAC5098(v16, *((unint64_t *)&v16 + 1), v15);
      sub_24EB3DDB0();
      swift_bridgeObjectRelease();
      sub_24EB1A680(a1);
      sub_24EB1A680(a1);
      _os_log_impl(&dword_24EAA5000, v9, v10, "[AwardDetailView] Suggested workouts updated for %s, requesting refresh", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533497D0](v12, -1, -1);
      MEMORY[0x2533497D0](v11, -1, -1);
    }
    else
    {
      sub_24EB1A680(a1);
      sub_24EB1A680(a1);
    }

    long long v14 = *(_OWORD *)(a1 + 16);
    long long v16 = *(_OWORD *)a1;
    long long v17 = v14;
    long long v18 = *(_OWORD *)(a1 + 32);
    uint64_t v19 = *(void *)(a1 + 48);
    sub_24EB16AF0();
    LOBYTE(v16) = 5;
    sub_24EB3DBB0();
    return swift_release();
  }
  return result;
}

uint64_t sub_24EB18D44()
{
  return sub_24EB190AC((uint64_t (*)(void *, void, void, void, void))sub_24EB18A84);
}

uint64_t sub_24EB18D5C(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_24EB18D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t State = type metadata accessor for AwardEarnedLoadState();
  MEMORY[0x270FA5388](State);
  uint64_t v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v13 = *(_OWORD *)(a1 + 16);
  long long v23 = *(_OWORD *)a1;
  long long v24 = v13;
  long long v25 = *(_OWORD *)(a1 + 32);
  uint64_t v26 = *(void *)(a1 + 48);
  v22[0] = a2;
  v22[1] = a3;
  v22[2] = a4;
  v22[3] = a5;
  type metadata accessor for AwardDetailView();
  sub_24EB16AF0();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  LODWORD(a5) = swift_getEnumCaseMultiPayload();
  uint64_t result = sub_24EAD5D6C((uint64_t)v12);
  if (a5 == 2)
  {
    if (qword_26B1D27C0 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_24EB3D2C0();
    __swift_project_value_buffer(v15, (uint64_t)qword_26B1D27A8);
    sub_24EAB9FFC(a1);
    sub_24EAB9FFC(a1);
    long long v16 = sub_24EB3D2A0();
    os_log_type_t v17 = sub_24EB3DD80();
    if (os_log_type_enabled(v16, v17))
    {
      long long v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      v22[0] = v19;
      *(_DWORD *)long long v18 = 136315138;
      long long v20 = *(_OWORD *)(a1 + 16);
      long long v23 = *(_OWORD *)a1;
      long long v24 = v20;
      long long v25 = *(_OWORD *)(a1 + 32);
      uint64_t v26 = *(void *)(a1 + 48);
      sub_24EB16AF0();
      swift_getKeyPath();
      sub_24EB3DBA0();
      swift_release();
      swift_release();
      *(void *)&long long v23 = sub_24EAC5098(v23, *((unint64_t *)&v23 + 1), v22);
      sub_24EB3DDB0();
      swift_bridgeObjectRelease();
      sub_24EB1A680(a1);
      sub_24EB1A680(a1);
      _os_log_impl(&dword_24EAA5000, v16, v17, "[AwardDetailView] Load state was reset to idle for  %s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533497D0](v19, -1, -1);
      MEMORY[0x2533497D0](v18, -1, -1);
    }
    else
    {
      sub_24EB1A680(a1);
      sub_24EB1A680(a1);
    }

    long long v21 = *(_OWORD *)(a1 + 16);
    long long v23 = *(_OWORD *)a1;
    long long v24 = v21;
    long long v25 = *(_OWORD *)(a1 + 32);
    uint64_t v26 = *(void *)(a1 + 48);
    sub_24EB16AF0();
    LOBYTE(v23) = 2;
    sub_24EB3DBB0();
    return swift_release();
  }
  return result;
}

uint64_t sub_24EB19094()
{
  return sub_24EB190AC((uint64_t (*)(void *, void, void, void, void))sub_24EB18D6C);
}

uint64_t sub_24EB190AC(uint64_t (*a1)(void *, void, void, void, void))
{
  return a1(v1 + 6, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_24EB190C4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24EB19108@<X0>(char *a1@<X0>, long long *a2@<X1>, char *a3@<X2>, char *a4@<X3>, char *a5@<X4>, char *a6@<X5>, uint64_t a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, char *a10, char *a11)
{
  char v51 = a3;
  uint64_t v52 = a4;
  uint64_t v50 = a1;
  uint64_t v55 = a9;
  uint64_t v48 = *(void *)(a7 - 8);
  char v49 = a10;
  uint64_t v16 = MEMORY[0x270FA5388](a1);
  long long v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v42 = (char *)&v42 - v19;
  uint64_t v20 = sub_24EB3D2D0();
  uint64_t v47 = *(void *)(v20 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  long long v23 = (char *)&v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v44 = (char *)&v42 - v24;
  uint64_t v25 = sub_24EB3D5A0();
  uint64_t v53 = *(void *)(v25 - 8);
  uint64_t v54 = v25;
  MEMORY[0x270FA5388](v25);
  int v27 = (char *)&v42 - v26;
  long long v28 = a2[1];
  long long v62 = *a2;
  long long v63 = v28;
  long long v64 = a2[2];
  uint64_t v65 = *((void *)a2 + 6);
  char v43 = a5;
  uint64_t v58 = a5;
  uint64_t v59 = a6;
  uint64_t v45 = a6;
  int v29 = v49;
  uint64_t v46 = a8;
  uint64_t v60 = a8;
  char v61 = v49;
  type metadata accessor for AwardDetailView();
  sub_24EB16AF0();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  if (BYTE1(v62) == 1)
  {
    uint64_t v30 = sub_24EB3D620();
    MEMORY[0x270FA5388](v30);
    uint64_t v31 = v45;
    *(&v42 - 10) = v43;
    *(&v42 - 9) = v31;
    uint64_t v32 = v46;
    *(&v42 - 8) = (char *)a7;
    *(&v42 - 7) = v32;
    *(&v42 - 6) = v29;
    *(&v42 - 5) = a11;
    uint64_t v33 = v52;
    *(&v42 - 4) = v51;
    *(&v42 - 3) = v33;
    *(&v42 - 2) = v50;
    sub_24EB3D2E0();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v35 = v44;
    sub_24EAB73E4(v23, v20, WitnessTable);
    unint64_t v36 = *(void (**)(char *, uint64_t))(v47 + 8);
    v36(v23, v20);
    sub_24EAB73E4(v35, v20, WitnessTable);
    sub_24EB1673C((uint64_t)v23, v20);
    v36(v23, v20);
    v36(v35, v20);
  }
  else
  {
    ((void (*)(char *))v51)(v50);
    uint64_t v37 = v42;
    sub_24EAB73E4(v18, a7, a11);
    uint64_t v38 = *(void (**)(char *, uint64_t))(v48 + 8);
    v38(v18, a7);
    sub_24EAB73E4(v37, a7, a11);
    swift_getWitnessTable();
    sub_24EB16834((uint64_t)v18, v20, a7);
    v38(v18, a7);
    v38(v37, a7);
  }
  uint64_t v56 = swift_getWitnessTable();
  unsigned __int8 v57 = a11;
  uint64_t v39 = v54;
  uint64_t v40 = swift_getWitnessTable();
  sub_24EAB73E4(v27, v39, v40);
  return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v27, v39);
}

uint64_t sub_24EB1962C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10 = *(void *)(a6 - 8);
  uint64_t v11 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  long long v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v20 - v14;
  v17(v16);
  sub_24EAB73E4(v13, a6, a9);
  long long v18 = *(void (**)(char *, uint64_t))(v10 + 8);
  v18(v13, a6);
  sub_24EAB73E4(v15, a6, a9);
  return ((uint64_t (*)(char *, uint64_t))v18)(v15, a6);
}

uint64_t sub_24EB19768@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v22 = a5;
  uint64_t v23 = a6;
  uint64_t v24 = a7;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_2699332A0);
  sub_24EB3D5A0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2DD8);
  swift_getTupleTypeMetadata3();
  sub_24EB3DB20();
  swift_getWitnessTable();
  sub_24EB3DA60();
  swift_getWitnessTable();
  uint64_t v11 = sub_24EB3D2D0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v21 - v16;
  sub_24EB3D620();
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  uint64_t v27 = v22;
  uint64_t v28 = v23;
  uint64_t v29 = a2;
  uint64_t v30 = a1;
  sub_24EB3D2E0();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24EAB73E4(v15, v11, WitnessTable);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v12 + 8);
  v19(v15, v11);
  sub_24EAB73E4(v17, v11, WitnessTable);
  return ((uint64_t (*)(char *, uint64_t))v19)(v17, v11);
}

uint64_t sub_24EB199C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v22 = a5;
  uint64_t v23 = a6;
  uint64_t v24 = a7;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_2699332A0);
  sub_24EB3D5A0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1D2DD8);
  swift_getTupleTypeMetadata3();
  sub_24EB3DB20();
  swift_getWitnessTable();
  uint64_t v11 = sub_24EB3DA60();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v21 - v16;
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  uint64_t v27 = v22;
  uint64_t v28 = v23;
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  sub_24EB3D560();
  sub_24EB3DA50();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24EAB73E4(v15, v11, WitnessTable);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v12 + 8);
  v19(v15, v11);
  sub_24EAB73E4(v17, v11, WitnessTable);
  return ((uint64_t (*)(char *, uint64_t))v19)(v17, v11);
}

uint64_t sub_24EB19BF4@<X0>(void (**a1)(uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v80 = a5;
  uint64_t v64 = a2;
  uint64_t v78 = a7;
  uint64_t v68 = *(void *)(a3 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](a1);
  uint64_t v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  long long v67 = (char *)&v60 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2D60);
  uint64_t v65 = *(void *)(v15 - 8);
  uint64_t v66 = v15;
  MEMORY[0x270FA5388](v15);
  long long v63 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(qword_2699332A0);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  char v61 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v62 = (uint64_t)&v60 - v20;
  uint64_t v71 = v21;
  uint64_t v76 = sub_24EB3D5A0();
  uint64_t v74 = *(void *)(v76 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v76);
  __int16 v75 = (char *)&v60 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  long long v81 = (char *)&v60 - v25;
  uint64_t v26 = *(void *)(a4 - 8);
  uint64_t v27 = MEMORY[0x270FA5388](v24);
  uint64_t v29 = (char *)&v60 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x270FA5388](v27);
  uint64_t v32 = (char *)&v60 - v31;
  a1[3](v30);
  long long v79 = v32;
  sub_24EAB73E4(v29, a4, a6);
  uint64_t v70 = v26;
  uint64_t v33 = v29;
  uint64_t v72 = *(void (**)(char *, uint64_t))(v26 + 8);
  uint64_t v73 = v26 + 8;
  v72(v29, a4);
  long long v34 = *((_OWORD *)a1 + 1);
  long long v88 = *(_OWORD *)a1;
  long long v89 = v34;
  long long v90 = *((_OWORD *)a1 + 2);
  long long v91 = a1[6];
  uint64_t v97 = a3;
  uint64_t v98 = a4;
  uint64_t v35 = a4;
  uint64_t v36 = v80;
  uint64_t v99 = v80;
  uint64_t v100 = a6;
  uint64_t v77 = a6;
  type metadata accessor for AwardDetailView();
  sub_24EB16AF0();
  swift_getKeyPath();
  sub_24EB3DBA0();
  swift_release();
  swift_release();
  if ((unint64_t)v88 >= 2)
  {
    unint64_t v45 = sub_24EAA8EF4(v88);
    a1[5](v45);
    uint64_t v46 = v67;
    sub_24EAB73E4(v13, a3, v36);
    uint64_t v47 = *(void (**)(char *, uint64_t))(v68 + 8);
    v47(v13, a3);
    sub_24EAB73E4(v46, a3, v36);
    sub_24EB1A76C();
    sub_24EB16834((uint64_t)v13, v71, a3);
    v47(v13, a3);
    v47(v46, a3);
  }
  else
  {
    uint64_t v37 = v63;
    sub_24EB3D370();
    sub_24EB3D390();
    sub_24EB3DB00();
    sub_24EB3D380();
    uint64_t v39 = v65;
    uint64_t v38 = v66;
    uint64_t v40 = (uint64_t)v61;
    (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v61, v37, v66);
    uint64_t v41 = v71;
    uint64_t v42 = (_OWORD *)(v40 + *(int *)(v71 + 36));
    long long v43 = v95;
    *uint64_t v42 = v94;
    v42[1] = v43;
    void v42[2] = v96;
    (*(void (**)(char *, uint64_t))(v39 + 8))(v37, v38);
    uint64_t v44 = v62;
    sub_24EB1A80C(v40, v62);
    sub_24EB1A76C();
    sub_24EB1673C(v44, v41);
    sub_24EB1A874(v44);
  }
  sub_24EB3DB00();
  sub_24EB3D380();
  uint64_t v71 = v97;
  char v48 = v98;
  uint64_t v49 = v99;
  char v50 = v100;
  char v51 = v101;
  uint64_t v52 = v102;
  uint64_t v53 = *(void (**)(char *, char *, uint64_t))(v70 + 16);
  uint64_t v69 = v33;
  v53(v33, v79, v35);
  v93[0] = v33;
  uint64_t v54 = v74;
  uint64_t v55 = v75;
  uint64_t v56 = v76;
  (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v75, v81, v76);
  *(void *)&long long v88 = 0;
  BYTE8(v88) = 1;
  *(void *)&long long v89 = v71;
  BYTE8(v89) = v48;
  *(void *)&long long v90 = v49;
  BYTE8(v90) = v50;
  long long v91 = v51;
  uint64_t v92 = v52;
  v93[1] = v55;
  v93[2] = &v88;
  v87[0] = v35;
  v87[1] = v56;
  v87[2] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2DD8);
  uint64_t v84 = v77;
  unint64_t v82 = sub_24EB1A76C();
  uint64_t v83 = v80;
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v86 = sub_24EABF88C();
  sub_24EB1692C((uint64_t)v93, 3uLL, (uint64_t)v87);
  unsigned __int8 v57 = *(void (**)(char *, uint64_t))(v54 + 8);
  v57(v81, v56);
  uint64_t v58 = (uint64_t (*)(char *, uint64_t))v72;
  v72(v79, v35);
  v57(v55, v56);
  return v58(v69, v35);
}

uint64_t type metadata accessor for AwardDetailView()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24EB1A2E8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24EB1A680(uint64_t a1)
{
  return a1;
}

uint64_t sub_24EB1A6D8(uint64_t a1)
{
  return sub_24EB1A70C(a1, (uint64_t (*)(uint64_t, void *, void, void, void, void))sub_24EB18344);
}

uint64_t sub_24EB1A6F4(uint64_t a1)
{
  return sub_24EB1A70C(a1, (uint64_t (*)(uint64_t, void *, void, void, void, void))sub_24EB19768);
}

uint64_t sub_24EB1A70C(uint64_t a1, uint64_t (*a2)(uint64_t, void *, void, void, void, void))
{
  return a2(a1, v2 + 6, v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_24EB1A724()
{
  return sub_24EB1A754((uint64_t (*)(void, void, void, void, void, void))sub_24EB199C4);
}

uint64_t sub_24EB1A73C()
{
  return sub_24EB1A754((uint64_t (*)(void, void, void, void, void, void))sub_24EB19BF4);
}

uint64_t sub_24EB1A754(uint64_t (*a1)(void, void, void, void, void, void))
{
  return a1(v1[6], v1[7], v1[2], v1[3], v1[4], v1[5]);
}

unint64_t sub_24EB1A76C()
{
  unint64_t result = qword_269933338;
  if (!qword_269933338)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_2699332A0);
    sub_24EAB15E8(&qword_26B1D2D58, &qword_26B1D2D60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933338);
  }
  return result;
}

uint64_t sub_24EB1A80C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_2699332A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EB1A874(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_2699332A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24EB1A8D4()
{
  sub_24EAB0A90();
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 136, 7);
}

uint64_t sub_24EB1A928@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24EB19108(a1, (long long *)(v2 + 64), *(char **)(v2 + 120), *(char **)(v2 + 128), *(char **)(v2 + 16), *(char **)(v2 + 24), *(void *)(v2 + 32), *(char **)(v2 + 40), a2, *(char **)(v2 + 48), *(char **)(v2 + 56));
}

uint64_t sub_24EB1A960()
{
  return sub_24EB1962C(v0[8], v0[9], v0[10], v0[2], v0[3], v0[4], v0[5], v0[6], v0[7]);
}

uint64_t sub_24EB1A998@<X0>(uint64_t a1@<X8>)
{
  return sub_24EB18554(v1[6], v1[7], v1[3], v1[5], a1);
}

uint64_t sub_24EB1A9A8()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2F70);
  MEMORY[0x270FA5388](v1 - 8);
  long long v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24EB3D710();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v0;
  char v9 = v0[1];
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, **((unsigned int **)&unk_265321868 + v8), v4);
  uint64_t v10 = sub_24EB3D670();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v3, 1, 1, v10);
  if (v9) {
    sub_24EB3D690();
  }
  else {
    sub_24EB3D680();
  }
  uint64_t v11 = sub_24EB3D6A0();
  sub_24EB1AB58((uint64_t)v3);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v11;
}

uint64_t sub_24EB1AB58(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2F70);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t AwardToastPresentationEnvironment.fetchImageData.getter()
{
  uint64_t v1 = *v0;
  swift_retain();
  return v1;
}

uint64_t AwardToastPresentationEnvironment.fetchAwardDescription.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_retain();
  return v1;
}

uint64_t AwardToastPresentationEnvironment.fetchSuggestedWorkoutsSectionDescriptors.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_retain();
  return v1;
}

uint64_t AwardToastPresentationEnvironment.fetchPersonalizedAwardProgressUpdates.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_retain();
  return v1;
}

uint64_t AwardToastPresentationEnvironment.fetchWeeklyStreakNotification.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_retain();
  return v1;
}

uint64_t AwardToastPresentationEnvironment.fetchUserFirstName.getter()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_retain();
  return v1;
}

uint64_t AwardToastPresentationEnvironment.makeAppDidBecomeActiveStream.getter()
{
  uint64_t v1 = *(void *)(v0 + 96);
  swift_retain();
  return v1;
}

uint64_t AwardToastPresentationEnvironment.requestToastPresentation.getter()
{
  uint64_t v1 = *(void *)(v0 + 112);
  swift_retain();
  return v1;
}

uint64_t AwardToastPresentationEnvironment.queryEligibleToPresentAwardToast.getter()
{
  uint64_t v1 = *(void *)(v0 + 128);
  swift_retain();
  return v1;
}

__n128 AwardToastPresentationEnvironment.init(fetchImageData:fetchAwardDescription:fetchSuggestedWorkoutsSectionDescriptors:fetchPersonalizedAwardProgressUpdates:fetchWeeklyStreakNotification:fetchUserFirstName:makeAppDidBecomeActiveStream:requestToastPresentation:queryEligibleToPresentAwardToast:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, long long a11, long long a12, __n128 a13, uint64_t a14, uint64_t a15)
{
  __n128 result = a13;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(_OWORD *)(a9 + 64) = a10;
  *(_OWORD *)(a9 + 80) = a11;
  *(_OWORD *)(a9 + 96) = a12;
  *(__n128 *)(a9 + 112) = a13;
  *(void *)(a9 + 128) = a14;
  *(void *)(a9 + 136) = a15;
  return result;
}

uint64_t destroy for AwardToastPresentationEnvironment()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for AwardToastPresentationEnvironment(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  uint64_t v3 = *(void *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(void *)(a1 + 136) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for AwardToastPresentationEnvironment(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_retain();
  swift_release();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_retain();
  swift_release();
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_retain();
  swift_release();
  uint64_t v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_retain();
  swift_release();
  uint64_t v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  swift_retain();
  swift_release();
  uint64_t v12 = a2[17];
  a1[16] = a2[16];
  a1[17] = v12;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy144_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

_OWORD *assignWithTake for AwardToastPresentationEnvironment(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  a1[4] = a2[4];
  swift_release();
  a1[5] = a2[5];
  swift_release();
  a1[6] = a2[6];
  swift_release();
  a1[7] = a2[7];
  swift_release();
  a1[8] = a2[8];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AwardToastPresentationEnvironment(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 144)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AwardToastPresentationEnvironment(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 144) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 144) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardToastPresentationEnvironment()
{
  return &type metadata for AwardToastPresentationEnvironment;
}

uint64_t AchievementEnvironmentCacheMonitorState.earnedLoadStates.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AchievementEnvironmentCacheMonitorState.earnedLoadStates.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*AchievementEnvironmentCacheMonitorState.earnedLoadStates.modify())()
{
  return nullsub_1;
}

uint64_t AchievementEnvironmentCacheMonitorState.imageLoadStates.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AchievementEnvironmentCacheMonitorState.imageLoadStates.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*AchievementEnvironmentCacheMonitorState.imageLoadStates.modify())()
{
  return nullsub_1;
}

uint64_t AchievementEnvironmentCacheMonitorState.progressLoadStates.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AchievementEnvironmentCacheMonitorState.progressLoadStates.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*AchievementEnvironmentCacheMonitorState.progressLoadStates.modify())()
{
  return nullsub_1;
}

uint64_t AchievementEnvironmentCacheMonitorState.suggestedWorkoutsStates.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AchievementEnvironmentCacheMonitorState.suggestedWorkoutsStates.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t (*AchievementEnvironmentCacheMonitorState.suggestedWorkoutsStates.modify())()
{
  return nullsub_1;
}

uint64_t AchievementEnvironmentCacheMonitorState.toastLoadState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for AchievementEnvironmentCacheMonitorState();
  return sub_24EB1C284(v1 + *(int *)(v3 + 32), a1, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
}

uint64_t type metadata accessor for AchievementEnvironmentCacheMonitorState()
{
  uint64_t result = qword_26B1D2CD8;
  if (!qword_26B1D2CD8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t AchievementEnvironmentCacheMonitorState.toastLoadState.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AchievementEnvironmentCacheMonitorState() + 32);
  return sub_24EB027B0(a1, v3);
}

uint64_t (*AchievementEnvironmentCacheMonitorState.toastLoadState.modify())()
{
  return nullsub_1;
}

uint64_t AchievementEnvironmentCacheMonitorState.init(earnedLoadStates:imageLoadStates:progressLoadStates:suggestedWorkoutsStates:toastLoadState:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = a1;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  uint64_t v7 = (uint64_t)a6 + *(int *)(type metadata accessor for AchievementEnvironmentCacheMonitorState() + 32);
  return sub_24EB028AC(a5, v7);
}

uint64_t AchievementEnvironmentCacheMonitorState.hash(into:)(long long *a1)
{
  uint64_t v3 = sub_24EB3D1F0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  long long v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t State = type metadata accessor for AwardToastLoadState();
  MEMORY[0x270FA5388](State);
  uint64_t v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v1;
  swift_bridgeObjectRetain();
  sub_24EAF41B8(a1, v10);
  swift_bridgeObjectRelease();
  uint64_t v11 = v1[1];
  swift_bridgeObjectRetain();
  sub_24EAF38F8((uint64_t)a1, v11);
  swift_bridgeObjectRelease();
  uint64_t v12 = v1[2];
  swift_bridgeObjectRetain();
  sub_24EAF3274(a1, v12);
  swift_bridgeObjectRelease();
  uint64_t v13 = v1[3];
  swift_bridgeObjectRetain();
  sub_24EAF2DB0((uint64_t)a1, v13);
  swift_bridgeObjectRelease();
  uint64_t v14 = type metadata accessor for AchievementEnvironmentCacheMonitorState();
  sub_24EB1C284((uint64_t)v1 + *(int *)(v14 + 32), (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v16 = *(void *)v9;
      uint64_t v17 = *((void *)v9 + 1);
      uint64_t v18 = *((void *)v9 + 2);
      uint64_t v19 = *((void *)v9 + 3);
      uint64_t v20 = *((void *)v9 + 4);
      uint64_t v21 = *((void *)v9 + 5);
      char v22 = v9[48];
      sub_24EB3E0A0();
      v24[1] = v16;
      v24[2] = v17;
      v24[3] = v18;
      v24[4] = v19;
      v24[5] = v20;
      v24[6] = v21;
      char v25 = v22;
      AwardToastDetail.hash(into:)((uint64_t)a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      return sub_24EB3E0A0();
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v9, v3);
    sub_24EB3E0A0();
    sub_24EB1C334(&qword_2699320C0, MEMORY[0x263F07508]);
    sub_24EB3DBD0();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

unint64_t sub_24EB1B73C(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x616F4C6567616D69;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0xD000000000000017;
      break;
    case 4:
      unint64_t result = 0x616F4C7473616F74;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24EB1B800()
{
  return sub_24EB1B73C(*v0);
}

uint64_t sub_24EB1B808(uint64_t a1)
{
  unint64_t v2 = sub_24EB1C230();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB1B844(uint64_t a1)
{
  unint64_t v2 = sub_24EB1C230();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AchievementEnvironmentCacheMonitorState.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933340);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB1C230();
  sub_24EB3E0F0();
  uint64_t v11 = *v3;
  HIBYTE(v10) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269932D58);
  sub_24EB0374C();
  sub_24EB3DFF0();
  if (!v2)
  {
    uint64_t v11 = v3[1];
    HIBYTE(v10) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269932D68);
    sub_24EB03980(&qword_269932D70, &qword_269932D68, (void (*)(void))sub_24EB037F8);
    sub_24EB3DFF0();
    uint64_t v11 = v3[2];
    HIBYTE(v10) = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269932D88);
    sub_24EB038D4();
    sub_24EB3DFF0();
    uint64_t v11 = v3[3];
    HIBYTE(v10) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269932D98);
    sub_24EB03980(&qword_269932DA0, &qword_269932D98, (void (*)(void))sub_24EAA96B8);
    sub_24EB3DFF0();
    type metadata accessor for AchievementEnvironmentCacheMonitorState();
    LOBYTE(v11) = 4;
    type metadata accessor for AwardToastLoadState();
    sub_24EB1C334(&qword_269932DA8, (void (*)(uint64_t))type metadata accessor for AwardToastLoadState);
    sub_24EB3DFF0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t AchievementEnvironmentCacheMonitorState.hashValue.getter()
{
  sub_24EB3E090();
  AchievementEnvironmentCacheMonitorState.hash(into:)(v1);
  return sub_24EB3E0D0();
}

uint64_t AchievementEnvironmentCacheMonitorState.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t State = type metadata accessor for AwardToastLoadState();
  MEMORY[0x270FA5388](State);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933350);
  uint64_t v19 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AchievementEnvironmentCacheMonitorState();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (uint64_t *)((char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB1C230();
  uint64_t v20 = v7;
  uint64_t v11 = (uint64_t)v22;
  sub_24EB3E0E0();
  if (v11) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v16 = v8;
  uint64_t v17 = v5;
  char v22 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269932D58);
  char v23 = 0;
  sub_24EB03A00();
  uint64_t v12 = v21;
  uint64_t v13 = v20;
  sub_24EB3DF50();
  *uint64_t v10 = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269932D68);
  char v23 = 1;
  sub_24EB03AAC(&qword_269932DC0, &qword_269932D68, (void (*)(void))sub_24EB03B2C);
  sub_24EB3DF50();
  v10[1] = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269932D88);
  char v23 = 2;
  sub_24EB03C08();
  sub_24EB3DF50();
  void v10[2] = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269932D98);
  char v23 = 3;
  sub_24EB03AAC(&qword_269932DE0, &qword_269932D98, (void (*)(void))sub_24EAA9B4C);
  sub_24EB3DF50();
  v10[3] = v24;
  LOBYTE(v24) = 4;
  sub_24EB1C334(&qword_269932DE8, (void (*)(uint64_t))type metadata accessor for AwardToastLoadState);
  uint64_t v14 = (uint64_t)v17;
  sub_24EB3DF50();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v13, v12);
  sub_24EB028AC(v14, (uint64_t)v10 + *(int *)(v16 + 32));
  sub_24EB1C284((uint64_t)v10, v18, (uint64_t (*)(void))type metadata accessor for AchievementEnvironmentCacheMonitorState);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return sub_24EB1C54C((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for AchievementEnvironmentCacheMonitorState);
}

uint64_t sub_24EB1C0E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AchievementEnvironmentCacheMonitorState.init(from:)(a1, a2);
}

uint64_t sub_24EB1C0FC(void *a1)
{
  return AchievementEnvironmentCacheMonitorState.encode(to:)(a1);
}

uint64_t sub_24EB1C114()
{
  sub_24EB3E090();
  AchievementEnvironmentCacheMonitorState.hash(into:)(v1);
  return sub_24EB3E0D0();
}

uint64_t sub_24EB1C158()
{
  sub_24EB3E090();
  AchievementEnvironmentCacheMonitorState.hash(into:)(v1);
  return sub_24EB3E0D0();
}

uint64_t _s13FitnessAwards39AchievementEnvironmentCacheMonitorStateV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t *a2)
{
  if ((sub_24EB375A4(*(void *)a1, *a2) & 1) == 0
    || (sub_24EB37D80(*(void *)(a1 + 8), a2[1]) & 1) == 0
    || (sub_24EB37F4C(*(void *)(a1 + 16), a2[2]) & 1) == 0
    || (sub_24EB38918(*(void *)(a1 + 24), a2[3]) & 1) == 0)
  {
    return 0;
  }
  uint64_t v4 = *(int *)(type metadata accessor for AchievementEnvironmentCacheMonitorState() + 32);
  return _s13FitnessAwards19AwardToastLoadStateO2eeoiySbAC_ACtFZ_0(a1 + v4, (uint64_t)a2 + v4);
}

unint64_t sub_24EB1C230()
{
  unint64_t result = qword_269933348;
  if (!qword_269933348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933348);
  }
  return result;
}

uint64_t sub_24EB1C284(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24EB1C2EC()
{
  return sub_24EB1C334((unint64_t *)&qword_26B1D2CD0, (void (*)(uint64_t))type metadata accessor for AchievementEnvironmentCacheMonitorState);
}

uint64_t sub_24EB1C334(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *assignWithCopy for AchievementEnvironmentCacheMonitorState(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 32);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_24EB1C54C((uint64_t)a1 + v6, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
    uint64_t State = type metadata accessor for AwardToastLoadState();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *uint64_t v7 = *v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      v7[3] = v8[3];
      v7[4] = v8[4];
      v7[5] = v8[5];
      *((unsigned char *)v7 + 48) = *((unsigned char *)v8 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v7, v8, *(void *)(*(void *)(State - 8) + 64));
    }
    else
    {
      uint64_t v11 = sub_24EB3D1F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v7, v8, v11);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_24EB1C54C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *assignWithTake for AchievementEnvironmentCacheMonitorState(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 32);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_24EB1C54C((uint64_t)a1 + v6, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
    uint64_t State = type metadata accessor for AwardToastLoadState();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v7, v8, *(void *)(*(void *)(State - 8) + 64));
    }
    else
    {
      uint64_t v10 = sub_24EB3D1F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for AchievementEnvironmentCacheMonitorState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EB1C6F0);
}

uint64_t sub_24EB1C6F0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t State = type metadata accessor for AwardToastLoadState();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(State - 8) + 48);
    uint64_t v10 = State;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for AchievementEnvironmentCacheMonitorState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EB1C7B4);
}

void *sub_24EB1C7B4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t State = type metadata accessor for AwardToastLoadState();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(State - 8) + 56);
    uint64_t v9 = State;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 32);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AchievementEnvironmentCacheMonitorState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EB1C928);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AchievementEnvironmentCacheMonitorState.CodingKeys()
{
  return &type metadata for AchievementEnvironmentCacheMonitorState.CodingKeys;
}

unint64_t sub_24EB1C964()
{
  unint64_t result = qword_269933358;
  if (!qword_269933358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933358);
  }
  return result;
}

unint64_t sub_24EB1C9BC()
{
  unint64_t result = qword_269933360;
  if (!qword_269933360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933360);
  }
  return result;
}

unint64_t sub_24EB1CA14()
{
  unint64_t result = qword_269933368;
  if (!qword_269933368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933368);
  }
  return result;
}

uint64_t AchievementEnvironmentCacheMonitorEnvironment.init(makeAchievementEnvironmentCacheUpdatedStream:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

ValueMetadata *type metadata accessor for AchievementEnvironmentCacheMonitorEnvironment()
{
  return &type metadata for AchievementEnvironmentCacheMonitorEnvironment;
}

uint64_t AwardToastEnvironment.init(requestToastDismissal:navigateToDetail:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t AwardToastEnvironment.requestToastDismissal.getter()
{
  uint64_t v1 = *v0;
  swift_retain();
  return v1;
}

uint64_t AwardToastEnvironment.navigateToDetail.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_retain();
  return v1;
}

ValueMetadata *type metadata accessor for AwardToastEnvironment()
{
  return &type metadata for AwardToastEnvironment;
}

uint64_t static AwardHeaderAction.== infix(_:_:)()
{
  return 1;
}

uint64_t AwardHeaderAction.hash(into:)()
{
  return sub_24EB3E0A0();
}

uint64_t sub_24EB1CB30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EB1D6E0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24EB1CB5C(uint64_t a1)
{
  unint64_t v2 = sub_24EB1CE60();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB1CB98(uint64_t a1)
{
  unint64_t v2 = sub_24EB1CE60();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB1CBD4(uint64_t a1)
{
  unint64_t v2 = sub_24EB1CEB4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB1CC10(uint64_t a1)
{
  unint64_t v2 = sub_24EB1CEB4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AwardHeaderAction.hashValue.getter()
{
  return sub_24EB3E0D0();
}

uint64_t AwardHeaderAction.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933370);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933378);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB1CE60();
  sub_24EB3E0F0();
  sub_24EB1CEB4();
  sub_24EB3DF70();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_24EB1CE60()
{
  unint64_t result = qword_269933380;
  if (!qword_269933380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933380);
  }
  return result;
}

unint64_t sub_24EB1CEB4()
{
  unint64_t result = qword_269933388;
  if (!qword_269933388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933388);
  }
  return result;
}

uint64_t AwardHeaderAction.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933390);
  uint64_t v16 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933398);
  uint64_t v6 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB1CE60();
  sub_24EB3E0E0();
  if (!v1)
  {
    uint64_t v9 = v16;
    uint64_t v15 = v6;
    if (*(void *)(sub_24EB3DF60() + 16) == 1)
    {
      sub_24EB1CEB4();
      sub_24EB3DEC0();
      uint64_t v10 = v15;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v5, v3);
    }
    else
    {
      uint64_t v11 = sub_24EB3DE40();
      swift_allocError();
      uint64_t v13 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269931DD8);
      *uint64_t v13 = &type metadata for AwardHeaderAction;
      sub_24EB3DED0();
      sub_24EB3DE30();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v11 - 8) + 104))(v13, *MEMORY[0x263F8DCB0], v11);
      swift_willThrow();
      uint64_t v10 = v15;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_24EB1D1F4()
{
  unint64_t result = qword_2699333A0;
  if (!qword_2699333A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699333A0);
  }
  return result;
}

uint64_t sub_24EB1D248(void *a1)
{
  return AwardHeaderAction.init(from:)(a1);
}

uint64_t sub_24EB1D260(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933370);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933378);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB1CE60();
  sub_24EB3E0F0();
  sub_24EB1CEB4();
  sub_24EB3DF70();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

ValueMetadata *type metadata accessor for AwardHeaderAction()
{
  return &type metadata for AwardHeaderAction;
}

unsigned char *_s13FitnessAwards17AwardHeaderActionOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24EB1D4E0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardHeaderAction.CodingKeys()
{
  return &type metadata for AwardHeaderAction.CodingKeys;
}

ValueMetadata *type metadata accessor for AwardHeaderAction.ViewAppearedCodingKeys()
{
  return &type metadata for AwardHeaderAction.ViewAppearedCodingKeys;
}

unint64_t sub_24EB1D52C()
{
  unint64_t result = qword_2699333A8;
  if (!qword_2699333A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699333A8);
  }
  return result;
}

unint64_t sub_24EB1D584()
{
  unint64_t result = qword_2699333B0;
  if (!qword_2699333B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699333B0);
  }
  return result;
}

unint64_t sub_24EB1D5DC()
{
  unint64_t result = qword_2699333B8;
  if (!qword_2699333B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699333B8);
  }
  return result;
}

unint64_t sub_24EB1D634()
{
  unint64_t result = qword_2699333C0;
  if (!qword_2699333C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699333C0);
  }
  return result;
}

unint64_t sub_24EB1D68C()
{
  unint64_t result = qword_2699333C8;
  if (!qword_2699333C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699333C8);
  }
  return result;
}

uint64_t sub_24EB1D6E0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6570704177656976 && a2 == 0xEC00000064657261)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_24EB1D778()
{
  return 0x6570704177656976;
}

BOOL static AwardProgressDescriptionStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t AwardProgressDescriptionStyle.hash(into:)()
{
  return sub_24EB3E0A0();
}

unint64_t sub_24EB1D7D8(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      return result;
    case 2:
      unint64_t result = 0x73736572676F7270;
      break;
    case 3:
      unint64_t result = 0x6C6E4F65756C6176;
      break;
    default:
      unint64_t result = 0x63736544676E6F6CLL;
      break;
  }
  return result;
}

unint64_t sub_24EB1D888()
{
  return sub_24EB1D7D8(*v0);
}

uint64_t sub_24EB1D890@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EB1ED18(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EB1D8B8(uint64_t a1)
{
  unint64_t v2 = sub_24EB1DF98();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB1D8F4(uint64_t a1)
{
  unint64_t v2 = sub_24EB1DF98();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB1D930(uint64_t a1)
{
  unint64_t v2 = sub_24EB1E0E8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB1D96C(uint64_t a1)
{
  unint64_t v2 = sub_24EB1E0E8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB1D9A8(uint64_t a1)
{
  unint64_t v2 = sub_24EB1E040();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB1D9E4(uint64_t a1)
{
  unint64_t v2 = sub_24EB1E040();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB1DA20(uint64_t a1)
{
  unint64_t v2 = sub_24EB1E094();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB1DA5C(uint64_t a1)
{
  unint64_t v2 = sub_24EB1E094();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB1DA98(uint64_t a1)
{
  unint64_t v2 = sub_24EB1DFEC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB1DAD4(uint64_t a1)
{
  unint64_t v2 = sub_24EB1DFEC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AwardProgressDescriptionStyle.hashValue.getter()
{
  return sub_24EB3E0D0();
}

uint64_t AwardProgressDescriptionStyle.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699333D0);
  uint64_t v30 = *(void *)(v3 - 8);
  uint64_t v31 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v29 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699333D8);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v26 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699333E0);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  MEMORY[0x270FA5388](v7);
  char v23 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699333E8);
  uint64_t v21 = *(void *)(v9 - 8);
  uint64_t v22 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699333F0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB1DF98();
  sub_24EB3E0F0();
  switch(v16)
  {
    case 1:
      char v33 = 1;
      sub_24EB1E094();
      uint64_t v17 = v23;
      sub_24EB3DF70();
      uint64_t v19 = v24;
      uint64_t v18 = v25;
      goto LABEL_6;
    case 2:
      char v34 = 2;
      sub_24EB1E040();
      uint64_t v17 = v26;
      sub_24EB3DF70();
      uint64_t v19 = v27;
      uint64_t v18 = v28;
      goto LABEL_6;
    case 3:
      char v35 = 3;
      sub_24EB1DFEC();
      uint64_t v17 = v29;
      sub_24EB3DF70();
      uint64_t v19 = v30;
      uint64_t v18 = v31;
LABEL_6:
      (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
      break;
    default:
      char v32 = 0;
      sub_24EB1E0E8();
      sub_24EB3DF70();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v22);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

unint64_t sub_24EB1DF98()
{
  unint64_t result = qword_2699333F8;
  if (!qword_2699333F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699333F8);
  }
  return result;
}

unint64_t sub_24EB1DFEC()
{
  unint64_t result = qword_269933400;
  if (!qword_269933400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933400);
  }
  return result;
}

unint64_t sub_24EB1E040()
{
  unint64_t result = qword_269933408;
  if (!qword_269933408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933408);
  }
  return result;
}

unint64_t sub_24EB1E094()
{
  unint64_t result = qword_269933410;
  if (!qword_269933410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933410);
  }
  return result;
}

unint64_t sub_24EB1E0E8()
{
  unint64_t result = qword_269933418;
  if (!qword_269933418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933418);
  }
  return result;
}

uint64_t AwardProgressDescriptionStyle.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933420);
  uint64_t v49 = *(void *)(v3 - 8);
  uint64_t v50 = v3;
  MEMORY[0x270FA5388](v3);
  char v48 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933428);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  uint64_t v45 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v46 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933430);
  uint64_t v42 = *(void *)(v8 - 8);
  uint64_t v43 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933438);
  uint64_t v41 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933440);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1[3];
  char v51 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_24EB1DF98();
  uint64_t v19 = v52;
  sub_24EB3E0E0();
  if (v19) {
    goto LABEL_7;
  }
  uint64_t v39 = v11;
  uint64_t v40 = v10;
  uint64_t v52 = 0;
  uint64_t v21 = v48;
  uint64_t v20 = v49;
  uint64_t v22 = v50;
  char v23 = v17;
  uint64_t v24 = sub_24EB3DF60();
  if (*(void *)(v24 + 16) != 1)
  {
    uint64_t v27 = sub_24EB3DE40();
    swift_allocError();
    uint64_t v29 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269931DD8);
    *uint64_t v29 = &type metadata for AwardProgressDescriptionStyle;
    sub_24EB3DED0();
    sub_24EB3DE30();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v27 - 8) + 104))(v29, *MEMORY[0x263F8DCB0], v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
LABEL_7:
    uint64_t v30 = (uint64_t)v51;
    return __swift_destroy_boxed_opaque_existential_1(v30);
  }
  char v25 = *(unsigned char *)(v24 + 32);
  switch(v25)
  {
    case 1:
      char v54 = 1;
      sub_24EB1E094();
      char v32 = v40;
      uint64_t v33 = v52;
      sub_24EB3DEC0();
      if (v33) {
        goto LABEL_12;
      }
      uint64_t v35 = v42;
      uint64_t v34 = v43;
      goto LABEL_16;
    case 2:
      char v55 = 2;
      sub_24EB1E040();
      char v32 = v46;
      uint64_t v36 = v52;
      sub_24EB3DEC0();
      if (v36) {
        goto LABEL_12;
      }
      uint64_t v34 = v44;
      uint64_t v35 = v45;
LABEL_16:
      (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v34);
      goto LABEL_17;
    case 3:
      char v56 = 3;
      sub_24EB1DFEC();
      uint64_t v37 = v52;
      sub_24EB3DEC0();
      if (v37)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        uint64_t v30 = (uint64_t)v51;
        return __swift_destroy_boxed_opaque_existential_1(v30);
      }
      (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v22);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      uint64_t v30 = (uint64_t)v51;
      uint64_t v38 = v47;
      goto LABEL_19;
    default:
      char v53 = 0;
      sub_24EB1E0E8();
      uint64_t v26 = v52;
      sub_24EB3DEC0();
      if (v26)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v41 + 8))(v13, v39);
LABEL_17:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      uint64_t v30 = (uint64_t)v51;
      uint64_t v38 = v47;
LABEL_19:
      *uint64_t v38 = v25;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v30);
}

unint64_t sub_24EB1E774()
{
  unint64_t result = qword_269933448;
  if (!qword_269933448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933448);
  }
  return result;
}

uint64_t sub_24EB1E7C8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return AwardProgressDescriptionStyle.init(from:)(a1, a2);
}

uint64_t sub_24EB1E7E0(void *a1)
{
  return AwardProgressDescriptionStyle.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for AwardProgressDescriptionStyle()
{
  return &type metadata for AwardProgressDescriptionStyle;
}

unsigned char *_s13FitnessAwards29AwardProgressDescriptionStyleOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EB1E8D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardProgressDescriptionStyle.CodingKeys()
{
  return &type metadata for AwardProgressDescriptionStyle.CodingKeys;
}

ValueMetadata *type metadata accessor for AwardProgressDescriptionStyle.LongDescriptionCodingKeys()
{
  return &type metadata for AwardProgressDescriptionStyle.LongDescriptionCodingKeys;
}

ValueMetadata *type metadata accessor for AwardProgressDescriptionStyle.ShortDescriptionCodingKeys()
{
  return &type metadata for AwardProgressDescriptionStyle.ShortDescriptionCodingKeys;
}

ValueMetadata *type metadata accessor for AwardProgressDescriptionStyle.ProgressBarCodingKeys()
{
  return &type metadata for AwardProgressDescriptionStyle.ProgressBarCodingKeys;
}

ValueMetadata *type metadata accessor for AwardProgressDescriptionStyle.ValueOnlyCodingKeys()
{
  return &type metadata for AwardProgressDescriptionStyle.ValueOnlyCodingKeys;
}

unint64_t sub_24EB1E954()
{
  unint64_t result = qword_269933450;
  if (!qword_269933450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933450);
  }
  return result;
}

unint64_t sub_24EB1E9AC()
{
  unint64_t result = qword_269933458;
  if (!qword_269933458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933458);
  }
  return result;
}

unint64_t sub_24EB1EA04()
{
  unint64_t result = qword_269933460;
  if (!qword_269933460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933460);
  }
  return result;
}

unint64_t sub_24EB1EA5C()
{
  unint64_t result = qword_269933468;
  if (!qword_269933468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933468);
  }
  return result;
}

unint64_t sub_24EB1EAB4()
{
  unint64_t result = qword_269933470;
  if (!qword_269933470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933470);
  }
  return result;
}

unint64_t sub_24EB1EB0C()
{
  unint64_t result = qword_269933478;
  if (!qword_269933478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933478);
  }
  return result;
}

unint64_t sub_24EB1EB64()
{
  unint64_t result = qword_269933480;
  if (!qword_269933480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933480);
  }
  return result;
}

unint64_t sub_24EB1EBBC()
{
  unint64_t result = qword_269933488;
  if (!qword_269933488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933488);
  }
  return result;
}

unint64_t sub_24EB1EC14()
{
  unint64_t result = qword_269933490;
  if (!qword_269933490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933490);
  }
  return result;
}

unint64_t sub_24EB1EC6C()
{
  unint64_t result = qword_269933498;
  if (!qword_269933498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933498);
  }
  return result;
}

unint64_t sub_24EB1ECC4()
{
  unint64_t result = qword_2699334A0;
  if (!qword_2699334A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699334A0);
  }
  return result;
}

uint64_t sub_24EB1ED18(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x63736544676E6F6CLL && a2 == 0xEF6E6F6974706972;
  if (v3 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024EB4ABA0 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73736572676F7270 && a2 == 0xEB00000000726142 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C6E4F65756C6176 && a2 == 0xE900000000000079)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t AwardLockupLayout.init(artworkContentSpacing:artworkMargins:contentMargins:cornerRadius:isAccessibilityLayout:lineLimit:minimumHeight:subtitleFontDescriptor:titleFontDescriptor:titleToSubtitleSpacing:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, char *a7@<X6>, char *a8@<X7>, double *a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>)
{
  char v18 = a7[1];
  char v29 = *a8;
  char v27 = *a7;
  char v28 = a8[1];
  *a9 = a10;
  uint64_t v19 = (int *)type metadata accessor for AwardLockupLayout();
  uint64_t v20 = (char *)a9 + v19[5];
  uint64_t v21 = sub_24EB3D280();
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32);
  v22(v20, a1, v21);
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v22)((char *)a9 + v19[6], a2, v21);
  *(double *)((char *)a9 + v19[7]) = a11;
  *((unsigned char *)a9 + v19[8]) = a3;
  *(void *)((char *)a9 + v19[9]) = a4;
  uint64_t v24 = (char *)a9 + v19[10];
  *(void *)uint64_t v24 = a5;
  v24[8] = a6 & 1;
  char v25 = (char *)a9 + v19[11];
  *char v25 = v27;
  v25[1] = v18;
  uint64_t v26 = (char *)a9 + v19[12];
  *uint64_t v26 = v29;
  v26[1] = v28;
  *(double *)((char *)a9 + v19[13]) = a12;
  return result;
}

uint64_t type metadata accessor for AwardLockupLayout()
{
  uint64_t result = qword_26B1D29E8;
  if (!qword_26B1D29E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

double AwardLockupLayout.artworkContentSpacing.getter()
{
  return *(double *)v0;
}

uint64_t AwardLockupLayout.artworkMargins.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AwardLockupLayout() + 20);
  uint64_t v4 = sub_24EB3D280();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t AwardLockupLayout.contentMargins.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AwardLockupLayout() + 24);
  uint64_t v4 = sub_24EB3D280();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

double AwardLockupLayout.cornerRadius.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for AwardLockupLayout() + 28));
}

uint64_t AwardLockupLayout.isAccessibilityLayout.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for AwardLockupLayout() + 32));
}

uint64_t AwardLockupLayout.lineLimit.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for AwardLockupLayout() + 36));
}

uint64_t AwardLockupLayout.minimumHeight.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for AwardLockupLayout() + 40));
}

uint64_t AwardLockupLayout.subtitleFontDescriptor.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for AwardLockupLayout();
  uint64_t v4 = (char *)(v1 + *(int *)(result + 44));
  char v5 = *v4;
  LOBYTE(v4) = v4[1];
  *a1 = v5;
  a1[1] = (_BYTE)v4;
  return result;
}

uint64_t AwardLockupLayout.titleFontDescriptor.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for AwardLockupLayout();
  uint64_t v4 = (char *)(v1 + *(int *)(result + 48));
  char v5 = *v4;
  LOBYTE(v4) = v4[1];
  *a1 = v5;
  a1[1] = (_BYTE)v4;
  return result;
}

double AwardLockupLayout.titleToSubtitleSpacing.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for AwardLockupLayout() + 52));
}

unint64_t sub_24EB1F2D4(char a1)
{
  unint64_t result = 0xD000000000000015;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x4D6B726F77747261;
      break;
    case 2:
      unint64_t result = 0x4D746E65746E6F63;
      break;
    case 3:
      unint64_t result = 0x615272656E726F63;
      break;
    case 5:
      unint64_t result = 0x696D694C656E696CLL;
      break;
    case 6:
      unint64_t result = 0x486D756D696E696DLL;
      break;
    case 7:
      unint64_t result = 0xD000000000000016;
      break;
    case 8:
      unint64_t result = 0xD000000000000013;
      break;
    case 9:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24EB1F418()
{
  return sub_24EB1F2D4(*v0);
}

uint64_t sub_24EB1F420@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EB20FF4(a1, a2);
  *a3 = result;
  return result;
}

void sub_24EB1F448(unsigned char *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_24EB1F454(uint64_t a1)
{
  unint64_t v2 = sub_24EB20310();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB1F490(uint64_t a1)
{
  unint64_t v2 = sub_24EB20310();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AwardLockupLayout.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699334A8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB20310();
  sub_24EB3E0F0();
  uint64_t v18 = *v3;
  char v20 = 0;
  sub_24EAB67FC();
  sub_24EB3DFF0();
  if (!v2)
  {
    uint64_t v17 = (int *)type metadata accessor for AwardLockupLayout();
    LOBYTE(v18) = 1;
    sub_24EB3D280();
    sub_24EB20410(&qword_2699334B8, MEMORY[0x263F3DF60]);
    sub_24EB3DFF0();
    LOBYTE(v18) = 2;
    sub_24EB3DFF0();
    uint64_t v18 = *(uint64_t *)((char *)v3 + v17[7]);
    char v20 = 3;
    sub_24EB3DFF0();
    LOBYTE(v18) = 4;
    sub_24EB3DFC0();
    LOBYTE(v18) = 5;
    sub_24EB3DFE0();
    uint64_t v9 = (char *)v3 + v17[10];
    uint64_t v10 = *(void *)v9;
    LOBYTE(v9) = v9[8];
    uint64_t v18 = v10;
    char v19 = (char)v9;
    char v20 = 6;
    sub_24EB3DFA0();
    uint64_t v11 = (char *)v3 + v17[11];
    char v12 = *v11;
    LOBYTE(v11) = v11[1];
    LOBYTE(v18) = v12;
    BYTE1(v18) = (_BYTE)v11;
    char v20 = 7;
    sub_24EAFE14C();
    sub_24EB3DFF0();
    uint64_t v13 = (char *)v3 + v17[12];
    char v14 = *v13;
    LOBYTE(v13) = v13[1];
    LOBYTE(v18) = v14;
    BYTE1(v18) = (_BYTE)v13;
    char v20 = 8;
    sub_24EB3DFF0();
    uint64_t v18 = *(uint64_t *)((char *)v3 + v17[13]);
    char v20 = 9;
    sub_24EB3DFF0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t AwardLockupLayout.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v3 = sub_24EB3D280();
  uint64_t v37 = *(void *)(v3 - 8);
  uint64_t v38 = v3;
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v32 - v7;
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699334C0);
  uint64_t v39 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for AwardLockupLayout();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB20310();
  uint64_t v40 = v10;
  uint64_t v14 = (uint64_t)v42;
  sub_24EB3E0E0();
  if (v14) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v33 = v6;
  uint64_t v34 = (int *)v11;
  uint64_t v35 = v13;
  uint64_t v42 = a1;
  char v45 = 0;
  unint64_t v15 = sub_24EAB6B8C();
  sub_24EB3DF50();
  uint64_t v16 = v35;
  *uint64_t v35 = v43;
  LOBYTE(v43) = 1;
  sub_24EB20410(&qword_2699334C8, MEMORY[0x263F3DF60]);
  uint64_t v17 = v8;
  uint64_t v18 = v38;
  sub_24EB3DF50();
  v32[1] = v15;
  char v19 = v34;
  char v20 = (char *)v16 + v34[5];
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
  v21(v20, v17, v18);
  LOBYTE(v43) = 2;
  uint64_t v22 = v33;
  sub_24EB3DF50();
  v21((char *)v35 + v19[6], v22, v18);
  char v45 = 3;
  sub_24EB3DF50();
  char v23 = v35;
  *(void *)((char *)v35 + v19[7]) = v43;
  LOBYTE(v43) = 4;
  *((unsigned char *)v23 + v19[8]) = sub_24EB3DF20() & 1;
  LOBYTE(v43) = 5;
  *(void *)((char *)v23 + v19[9]) = sub_24EB3DF40();
  char v45 = 6;
  sub_24EB3DF00();
  uint64_t v33 = 0;
  char v24 = v44;
  char v25 = (char *)v23 + v19[10];
  *(void *)char v25 = v43;
  v25[8] = v24;
  char v45 = 7;
  sub_24EAFE658();
  sub_24EB3DF50();
  char v26 = BYTE1(v43);
  char v27 = (char *)v23 + v19[11];
  *char v27 = v43;
  v27[1] = v26;
  char v45 = 8;
  sub_24EB3DF50();
  char v28 = BYTE1(v43);
  char v29 = (char *)v23 + v19[12];
  *char v29 = v43;
  v29[1] = v28;
  char v45 = 9;
  sub_24EB3DF50();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v41);
  uint64_t v30 = (uint64_t)v35;
  *(void *)((char *)v35 + v34[13]) = v43;
  sub_24EB20364(v30, v36);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  return sub_24EACA704(v30);
}

uint64_t sub_24EB1FF3C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AwardLockupLayout.init(from:)(a1, a2);
}

uint64_t sub_24EB1FF54(void *a1)
{
  return AwardLockupLayout.encode(to:)(a1);
}

uint64_t AwardLockupLayout.hash(into:)()
{
  sub_24EB3E0C0();
  uint64_t v1 = type metadata accessor for AwardLockupLayout();
  sub_24EB3D280();
  sub_24EB20410(&qword_2699334D0, MEMORY[0x263F3DF60]);
  sub_24EB3DBD0();
  sub_24EB3DBD0();
  sub_24EB3E0C0();
  sub_24EB3E0B0();
  sub_24EB3E0A0();
  if (*(unsigned char *)(v0 + *(int *)(v1 + 40) + 8) == 1)
  {
    sub_24EB3E0B0();
  }
  else
  {
    sub_24EB3E0B0();
    sub_24EB3E0C0();
  }
  sub_24EB3E0A0();
  sub_24EB3E0A0();
  sub_24EB3E0A0();
  sub_24EB3E0A0();
  return sub_24EB3E0C0();
}

uint64_t AwardLockupLayout.hashValue.getter()
{
  return sub_24EB3E0D0();
}

uint64_t sub_24EB20134()
{
  return sub_24EB3E0D0();
}

uint64_t sub_24EB20178()
{
  return sub_24EB3E0D0();
}

BOOL _s13FitnessAwards17AwardLockupLayoutV2eeoiySbAC_ACtFZ_0(double *a1, double *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  uint64_t v4 = (int *)type metadata accessor for AwardLockupLayout();
  if ((MEMORY[0x2533484B0]((char *)a1 + v4[5], (char *)a2 + v4[5]) & 1) == 0
    || (MEMORY[0x2533484B0]((char *)a1 + v4[6], (char *)a2 + v4[6]) & 1) == 0
    || *(double *)((char *)a1 + v4[7]) != *(double *)((char *)a2 + v4[7])
    || *((unsigned __int8 *)a1 + v4[8]) != *((unsigned __int8 *)a2 + v4[8])
    || *(void *)((char *)a1 + v4[9]) != *(void *)((char *)a2 + v4[9]))
  {
    return 0;
  }
  uint64_t v5 = v4[10];
  uint64_t v6 = (double *)((char *)a1 + v5);
  char v7 = *((unsigned char *)a1 + v5 + 8);
  uint64_t v8 = (double *)((char *)a2 + v5);
  int v9 = *((unsigned __int8 *)a2 + v5 + 8);
  if (v7)
  {
    if (!v9) {
      return 0;
    }
  }
  else
  {
    if (*v6 != *v8) {
      LOBYTE(v9) = 1;
    }
    if (v9) {
      return 0;
    }
  }
  BOOL result = 0;
  uint64_t v11 = v4[11];
  uint64_t v12 = (char *)a1 + v11;
  int v13 = *((unsigned __int8 *)a1 + v11);
  uint64_t v14 = (unsigned __int8 *)a2 + v11;
  if (v13 == *v14 && ((v12[1] ^ v14[1]) & 1) == 0)
  {
    BOOL result = 0;
    uint64_t v15 = v4[12];
    uint64_t v16 = (char *)a1 + v15;
    int v17 = *((unsigned __int8 *)a1 + v15);
    uint64_t v18 = (unsigned __int8 *)a2 + v15;
    if (v17 == *v18 && ((v16[1] ^ v18[1]) & 1) == 0) {
      return *(double *)((char *)a1 + v4[13]) == *(double *)((char *)a2 + v4[13]);
    }
  }
  return result;
}

unint64_t sub_24EB20310()
{
  unint64_t result = qword_2699334B0;
  if (!qword_2699334B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699334B0);
  }
  return result;
}

uint64_t sub_24EB20364(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AwardLockupLayout();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EB203C8()
{
  return sub_24EB20410(&qword_2699334D8, (void (*)(uint64_t))type metadata accessor for AwardLockupLayout);
}

uint64_t sub_24EB20410(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for AwardLockupLayout(char *a1, char *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *(void *)a2;
    *(void *)uint64_t v4 = *(void *)a2;
    uint64_t v4 = (char *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = &a1[v7];
    int v9 = &a2[v7];
    uint64_t v10 = sub_24EB3D280();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v11(&v4[a3[6]], &a2[a3[6]], v10);
    uint64_t v12 = a3[8];
    *(void *)&v4[a3[7]] = *(void *)&a2[a3[7]];
    v4[v12] = a2[v12];
    uint64_t v13 = a3[10];
    *(void *)&v4[a3[9]] = *(void *)&a2[a3[9]];
    uint64_t v14 = &v4[v13];
    uint64_t v15 = &a2[v13];
    *(void *)uint64_t v14 = *(void *)v15;
    v14[8] = v15[8];
    uint64_t v16 = a3[12];
    *(_WORD *)&v4[a3[11]] = *(_WORD *)&a2[a3[11]];
    *(_WORD *)&v4[v16] = *(_WORD *)&a2[v16];
    *(void *)&v4[a3[13]] = *(void *)&a2[a3[13]];
  }
  return v4;
}

uint64_t destroy for AwardLockupLayout(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_24EB3D280();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v5 - 8), v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  return v8(v6, v5);
}

char *initializeWithCopy for AwardLockupLayout(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_24EB3D280();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  uint64_t v11 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  a1[v11] = a2[v11];
  uint64_t v12 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  v13[8] = v14[8];
  uint64_t v15 = a3[12];
  *(_WORD *)&a1[a3[11]] = *(_WORD *)&a2[a3[11]];
  *(_WORD *)&a1[v15] = *(_WORD *)&a2[v15];
  *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
  return a1;
}

char *assignWithCopy for AwardLockupLayout(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_24EB3D280();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  a1[a3[8]] = a2[a3[8]];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  uint64_t v11 = a3[10];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  char v14 = v13[8];
  *(void *)uint64_t v12 = *(void *)v13;
  v12[8] = v14;
  uint64_t v15 = a3[11];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  uint64_t v18 = a3[12];
  char v19 = &a1[v18];
  char v20 = &a2[v18];
  *char v19 = *v20;
  v19[1] = v20[1];
  *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
  return a1;
}

char *initializeWithTake for AwardLockupLayout(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_24EB3D280();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  uint64_t v11 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  a1[v11] = a2[v11];
  uint64_t v12 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  uint64_t v13 = &a1[v12];
  char v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  v13[8] = v14[8];
  uint64_t v15 = a3[12];
  *(_WORD *)&a1[a3[11]] = *(_WORD *)&a2[a3[11]];
  *(_WORD *)&a1[v15] = *(_WORD *)&a2[v15];
  *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
  return a1;
}

char *assignWithTake for AwardLockupLayout(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_24EB3D280();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  uint64_t v11 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  a1[v11] = a2[v11];
  uint64_t v12 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  uint64_t v13 = &a1[v12];
  char v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  v13[8] = v14[8];
  uint64_t v15 = a3[11];
  uint64_t v16 = a3[12];
  uint64_t v17 = &a1[v15];
  uint64_t v18 = &a2[v15];
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  char v19 = &a1[v16];
  char v20 = &a2[v16];
  *char v19 = *v20;
  v19[1] = v20[1];
  *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
  return a1;
}

uint64_t getEnumTagSinglePayload for AwardLockupLayout(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EB20AEC);
}

uint64_t sub_24EB20AEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24EB3D280();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unsigned int v12 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 32));
    if (v12 >= 2) {
      return ((v12 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for AwardLockupLayout(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EB20BD4);
}

uint64_t sub_24EB20BD4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_24EB3D280();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unsigned int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 32)) = a2 + 1;
  }
  return result;
}

uint64_t sub_24EB20C94()
{
  uint64_t result = sub_24EB3D280();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AwardLockupLayout.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AwardLockupLayout.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EB20EB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardLockupLayout.CodingKeys()
{
  return &type metadata for AwardLockupLayout.CodingKeys;
}

unint64_t sub_24EB20EF0()
{
  unint64_t result = qword_2699334E0;
  if (!qword_2699334E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699334E0);
  }
  return result;
}

unint64_t sub_24EB20F48()
{
  unint64_t result = qword_2699334E8;
  if (!qword_2699334E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699334E8);
  }
  return result;
}

unint64_t sub_24EB20FA0()
{
  unint64_t result = qword_2699334F0;
  if (!qword_2699334F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699334F0);
  }
  return result;
}

uint64_t sub_24EB20FF4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x800000024EB4ABC0 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4D6B726F77747261 && a2 == 0xEE00736E69677261 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4D746E65746E6F63 && a2 == 0xEE00736E69677261 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x615272656E726F63 && a2 == 0xEC00000073756964 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000024EB4ABE0 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x696D694C656E696CLL && a2 == 0xE900000000000074 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x486D756D696E696DLL && a2 == 0xED00007468676965 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000024EB4AC00 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000024EB4AC20 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000024EB4AC40)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v5 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    if (v5) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

uint64_t AwardHeaderEnvironment.init(resolveAwardDescription:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

ValueMetadata *type metadata accessor for AwardHeaderEnvironment()
{
  return &type metadata for AwardHeaderEnvironment;
}

uint64_t AwardHeaderLayout.init(awardImageLayout:contentPadding:descriptionFont:descriptionToProgressSpacing:imagePadding:imageToDescriptionSpacing:isAccessibilityLayout:isCompact:isPortraitMode:progressToBottomSpacing:progressViewWidthScaleFactor:sectionDensityFactor:textAlignment:titleFont:titleToDescriptionSpacing:)@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, char a7@<W6>, uint64_t a8@<X7>, _OWORD *a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, char a14, uint64_t *a15, char *a16, char *a17)
{
  char v24 = *a3;
  char v25 = a3[1];
  uint64_t v26 = a15[1];
  uint64_t v36 = a15[2];
  uint64_t v37 = *a15;
  char v38 = *a16;
  char v39 = a17[1];
  char v40 = *a17;
  *a9 = *a1;
  char v27 = (int *)type metadata accessor for AwardHeaderLayout();
  char v28 = (char *)a9 + v27[5];
  uint64_t v29 = sub_24EB3D280();
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 32);
  v30(v28, a2, v29);
  uint64_t v31 = (char *)a9 + v27[6];
  *uint64_t v31 = v24;
  v31[1] = v25;
  *(double *)((char *)a9 + v27[7]) = a10;
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v30)((char *)a9 + v27[8], a4, v29);
  *(double *)((char *)a9 + v27[9]) = a11;
  *((unsigned char *)a9 + v27[10]) = a5;
  *((unsigned char *)a9 + v27[11]) = a6;
  *((unsigned char *)a9 + v27[12]) = a7;
  *(double *)((char *)a9 + v27[13]) = a12;
  uint64_t v33 = (char *)a9 + v27[14];
  *(void *)uint64_t v33 = a8;
  v33[8] = a14 & 1;
  uint64_t v34 = (void *)((char *)a9 + v27[15]);
  *uint64_t v34 = v37;
  v34[1] = v26;
  v34[2] = v36;
  *((unsigned char *)a9 + v27[16]) = v38;
  uint64_t v35 = (char *)a9 + v27[17];
  *uint64_t v35 = v40;
  v35[1] = v39;
  *(double *)((char *)a9 + v27[18]) = a13;
  return result;
}

uint64_t type metadata accessor for AwardHeaderLayout()
{
  uint64_t result = qword_269933538;
  if (!qword_269933538) {
    return swift_getSingletonMetadata();
  }
  return result;
}

__n128 AwardHeaderLayout.awardImageLayout.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *v1;
  *a1 = *v1;
  return result;
}

uint64_t AwardHeaderLayout.contentPadding.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AwardHeaderLayout() + 20);
  uint64_t v4 = sub_24EB3D280();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t AwardHeaderLayout.descriptionFont.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for AwardHeaderLayout();
  uint64_t v4 = (char *)(v1 + *(int *)(result + 24));
  char v5 = *v4;
  LOBYTE(v4) = v4[1];
  *a1 = v5;
  a1[1] = (_BYTE)v4;
  return result;
}

double AwardHeaderLayout.descriptionToProgressSpacing.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for AwardHeaderLayout() + 28));
}

uint64_t AwardHeaderLayout.imagePadding.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AwardHeaderLayout() + 32);
  uint64_t v4 = sub_24EB3D280();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

double AwardHeaderLayout.imageToDescriptionSpacing.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for AwardHeaderLayout() + 36));
}

uint64_t AwardHeaderLayout.isAccessibilityLayout.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for AwardHeaderLayout() + 40));
}

uint64_t AwardHeaderLayout.isCompact.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for AwardHeaderLayout() + 44));
}

uint64_t AwardHeaderLayout.isPortraitMode.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for AwardHeaderLayout() + 48));
}

double AwardHeaderLayout.progressToBottomSpacing.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for AwardHeaderLayout() + 52));
}

uint64_t AwardHeaderLayout.progressViewWidthScaleFactor.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for AwardHeaderLayout() + 56));
}

double AwardHeaderLayout.sectionDensityFactor.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (double *)(v1 + *(int *)(type metadata accessor for AwardHeaderLayout() + 60));
  uint64_t v4 = *(void *)v3;
  double result = v3[1];
  uint64_t v6 = *((void *)v3 + 2);
  *(void *)a1 = v4;
  *(double *)(a1 + 8) = result;
  *(void *)(a1 + 16) = v6;
  return result;
}

uint64_t AwardHeaderLayout.textAlignment.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for AwardHeaderLayout();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 64));
  return result;
}

uint64_t AwardHeaderLayout.titleFont.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for AwardHeaderLayout();
  uint64_t v4 = (char *)(v1 + *(int *)(result + 68));
  char v5 = *v4;
  LOBYTE(v4) = v4[1];
  *a1 = v5;
  a1[1] = (_BYTE)v4;
  return result;
}

double AwardHeaderLayout.titleToDescriptionSpacing.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for AwardHeaderLayout() + 72));
}

unint64_t sub_24EB21980(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x50746E65746E6F63;
      break;
    case 2:
      unint64_t result = 0x7470697263736564;
      break;
    case 3:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 4:
      unint64_t result = 0x6461506567616D69;
      break;
    case 5:
    case 14:
      unint64_t result = 0xD000000000000019;
      break;
    case 6:
      unint64_t result = 0xD000000000000015;
      break;
    case 7:
      unint64_t result = 0x6361706D6F437369;
      break;
    case 8:
      unint64_t result = 0x617274726F507369;
      break;
    case 9:
      unint64_t result = 0xD000000000000017;
      break;
    case 10:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 11:
      unint64_t result = 0xD000000000000014;
      break;
    case 12:
      unint64_t result = 0x67696C4174786574;
      break;
    case 13:
      unint64_t result = 0x6E6F46656C746974;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24EB21B60()
{
  return sub_24EB21980(*v0);
}

uint64_t sub_24EB21B68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EB23E7C(a1, a2);
  *a3 = result;
  return result;
}

void sub_24EB21B90(unsigned char *a1@<X8>)
{
  *a1 = 15;
}

uint64_t sub_24EB21B9C(uint64_t a1)
{
  unint64_t v2 = sub_24EB22ED0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB21BD8(uint64_t a1)
{
  unint64_t v2 = sub_24EB22ED0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t static AwardHeaderLayout.zero.getter@<X0>(void *a1@<X8>)
{
  unint64_t v2 = (int *)type metadata accessor for AwardHeaderLayout();
  sub_24EB3D250();
  uint64_t result = sub_24EB3D250();
  *a1 = 0;
  a1[1] = 0;
  *(_WORD *)((char *)a1 + v2[6]) = 261;
  *(void *)((char *)a1 + v2[7]) = 0;
  *(void *)((char *)a1 + v2[9]) = 0;
  *((unsigned char *)a1 + v2[10]) = 0;
  *((unsigned char *)a1 + v2[11]) = 1;
  *((unsigned char *)a1 + v2[12]) = 1;
  *(void *)((char *)a1 + v2[13]) = 0;
  uint64_t v4 = (char *)a1 + v2[14];
  *(void *)uint64_t v4 = 0;
  v4[8] = 1;
  char v5 = (void *)((char *)a1 + v2[15]);
  *char v5 = 0;
  v5[1] = 0;
  long long v5[2] = 0;
  *((unsigned char *)a1 + v2[16]) = 1;
  *(_WORD *)((char *)a1 + v2[17]) = 0;
  *(void *)((char *)a1 + v2[18]) = 0;
  return result;
}

uint64_t AwardHeaderLayout.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699334F8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB22ED0();
  sub_24EB3E0F0();
  long long v25 = *v3;
  char v27 = 0;
  sub_24EAB67A8();
  sub_24EB3DFF0();
  if (!v2)
  {
    uint64_t v9 = (int *)type metadata accessor for AwardHeaderLayout();
    char v24 = v3;
    LOBYTE(v25) = 1;
    sub_24EB3D280();
    sub_24EB23120(&qword_2699334B8, MEMORY[0x263F3DF60]);
    sub_24EB3DFF0();
    uint64_t v10 = (char *)v24 + v9[6];
    char v11 = *v10;
    LOBYTE(v10) = v10[1];
    LOBYTE(v25) = v11;
    BYTE1(v25) = (_BYTE)v10;
    char v27 = 2;
    unint64_t v12 = sub_24EAFE14C();
    sub_24EB3DFF0();
    unint64_t v23 = v12;
    *(void *)&long long v25 = *(void *)((char *)v24 + v9[7]);
    char v27 = 3;
    sub_24EAB67FC();
    sub_24EB3DFF0();
    LOBYTE(v25) = 4;
    sub_24EB3DFF0();
    uint64_t v13 = v24;
    *(void *)&long long v25 = *(void *)((char *)v24 + v9[9]);
    char v27 = 5;
    sub_24EB3DFF0();
    LOBYTE(v25) = 6;
    sub_24EB3DFC0();
    LOBYTE(v25) = 7;
    sub_24EB3DFC0();
    LOBYTE(v25) = 8;
    sub_24EB3DFC0();
    *(void *)&long long v25 = *(void *)((char *)v13 + v9[13]);
    char v27 = 9;
    sub_24EB3DFF0();
    char v14 = (uint64_t *)((char *)v13 + v9[14]);
    uint64_t v15 = *v14;
    LOBYTE(v14) = *((unsigned char *)v14 + 8);
    *(void *)&long long v25 = v15;
    BYTE8(v25) = (_BYTE)v14;
    char v27 = 10;
    sub_24EB3DFA0();
    uint64_t v16 = (uint64_t *)((char *)v24 + v9[15]);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    uint64_t v19 = v16[2];
    *(void *)&long long v25 = v17;
    *((void *)&v25 + 1) = v18;
    uint64_t v26 = v19;
    char v27 = 11;
    sub_24EB22F24();
    sub_24EB3DFF0();
    LOBYTE(v25) = *((unsigned char *)v24 + v9[16]);
    char v27 = 12;
    sub_24EB22F78();
    sub_24EB3DFF0();
    char v20 = (char *)v24 + v9[17];
    char v21 = *v20;
    LOBYTE(v20) = v20[1];
    LOBYTE(v25) = v21;
    BYTE1(v25) = (_BYTE)v20;
    char v27 = 13;
    sub_24EB3DFF0();
    *(void *)&long long v25 = *(void *)((char *)v24 + v9[18]);
    char v27 = 14;
    sub_24EB3DFF0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t AwardHeaderLayout.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v3 = sub_24EB3D280();
  uint64_t v42 = *(void *)(v3 - 8);
  uint64_t v43 = v3;
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  int v8 = (char *)&v36 - v7;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933518);
  uint64_t v44 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for AwardHeaderLayout();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB22ED0();
  char v45 = v10;
  uint64_t v14 = (uint64_t)v47;
  sub_24EB3E0E0();
  if (v14) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v15 = v6;
  char v39 = (int *)v11;
  char v40 = v13;
  uint64_t v47 = a1;
  char v50 = 0;
  sub_24EAB6B38();
  sub_24EB3DF50();
  uint64_t v16 = v40;
  *(_OWORD *)char v40 = v48;
  LOBYTE(v48) = 1;
  uint64_t v17 = sub_24EB23120(&qword_2699334C8, MEMORY[0x263F3DF60]);
  uint64_t v18 = v8;
  uint64_t v19 = v43;
  sub_24EB3DF50();
  uint64_t v38 = v17;
  char v20 = *(void (**)(char *, char *, uint64_t))(v42 + 32);
  v20(&v16[v39[5]], v18, v19);
  char v50 = 2;
  unint64_t v21 = sub_24EAFE658();
  sub_24EB3DF50();
  uint64_t v22 = v19;
  unint64_t v36 = v21;
  uint64_t v37 = v20;
  char v23 = BYTE1(v48);
  char v24 = v39;
  long long v25 = &v16[v39[6]];
  *long long v25 = v48;
  v25[1] = v23;
  char v50 = 3;
  sub_24EAB6B8C();
  sub_24EB3DF50();
  *(void *)&v16[v24[7]] = v48;
  LOBYTE(v48) = 4;
  sub_24EB3DF50();
  v37(&v16[v39[8]], v15, v22);
  char v50 = 5;
  sub_24EB3DF50();
  uint64_t v26 = v39;
  *(void *)&v16[v39[9]] = v48;
  LOBYTE(v48) = 6;
  v16[v26[10]] = sub_24EB3DF20() & 1;
  LOBYTE(v48) = 7;
  v16[v26[11]] = sub_24EB3DF20() & 1;
  LOBYTE(v48) = 8;
  v16[v26[12]] = sub_24EB3DF20() & 1;
  char v50 = 9;
  sub_24EB3DF50();
  *(void *)&v40[v39[13]] = v48;
  char v50 = 10;
  sub_24EB3DF00();
  char v27 = BYTE8(v48);
  char v28 = &v40[v39[14]];
  *(void *)char v28 = v48;
  v28[8] = v27;
  char v50 = 11;
  sub_24EB22FCC();
  sub_24EB3DF50();
  uint64_t v29 = *((void *)&v48 + 1);
  uint64_t v30 = v49;
  uint64_t v31 = &v40[v39[15]];
  *(void *)uint64_t v31 = v48;
  *((void *)v31 + 1) = v29;
  *((void *)v31 + 2) = v30;
  char v50 = 12;
  sub_24EB23020();
  sub_24EB3DF50();
  v40[v39[16]] = v48;
  char v50 = 13;
  sub_24EB3DF50();
  char v32 = BYTE1(v48);
  uint64_t v33 = &v40[v39[17]];
  *uint64_t v33 = v48;
  v33[1] = v32;
  char v50 = 14;
  sub_24EB3DF50();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v46);
  uint64_t v34 = (uint64_t)v40;
  *(void *)&v40[v39[18]] = v48;
  sub_24EB23074(v34, v41);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
  return sub_24EABF598(v34);
}

uint64_t sub_24EB229FC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AwardHeaderLayout.init(from:)(a1, a2);
}

uint64_t sub_24EB22A14(void *a1)
{
  return AwardHeaderLayout.encode(to:)(a1);
}

uint64_t AwardHeaderLayout.hash(into:)()
{
  sub_24EAAC994();
  uint64_t v1 = type metadata accessor for AwardHeaderLayout();
  sub_24EB3D280();
  sub_24EB23120(&qword_2699334D0, MEMORY[0x263F3DF60]);
  sub_24EB3DBD0();
  sub_24EB3E0A0();
  sub_24EB3E0A0();
  sub_24EB3E0C0();
  sub_24EB3DBD0();
  sub_24EB3E0C0();
  sub_24EB3E0B0();
  sub_24EB3E0B0();
  sub_24EB3E0B0();
  sub_24EB3E0C0();
  if (*(unsigned char *)(v0 + *(int *)(v1 + 56) + 8) == 1)
  {
    sub_24EB3E0B0();
  }
  else
  {
    sub_24EB3E0B0();
    sub_24EB3E0C0();
  }
  sub_24EB3E0A0();
  sub_24EB3E0C0();
  sub_24EB3E0A0();
  sub_24EB3E0A0();
  sub_24EB3E0A0();
  sub_24EB3E0A0();
  return sub_24EB3E0C0();
}

uint64_t AwardHeaderLayout.hashValue.getter()
{
  return sub_24EB3E0D0();
}

uint64_t sub_24EB22C5C()
{
  return sub_24EB3E0D0();
}

uint64_t sub_24EB22CA0()
{
  return sub_24EB3E0D0();
}

BOOL _s13FitnessAwards17AwardHeaderLayoutV2eeoiySbAC_ACtFZ_0(double *a1, double *a2)
{
  if (*a1 != *a2 || a1[1] != a2[1]) {
    return 0;
  }
  uint64_t v5 = (int *)type metadata accessor for AwardHeaderLayout();
  if ((MEMORY[0x2533484B0]((char *)a1 + v5[5], (char *)a2 + v5[5]) & 1) == 0) {
    return 0;
  }
  BOOL result = 0;
  uint64_t v7 = v5[6];
  int v8 = (char *)a1 + v7;
  int v9 = *((unsigned __int8 *)a1 + v7);
  uint64_t v10 = (unsigned __int8 *)a2 + v7;
  if (v9 != *v10 || ((v8[1] ^ v10[1]) & 1) != 0) {
    return result;
  }
  if (*(double *)((char *)a1 + v5[7]) != *(double *)((char *)a2 + v5[7])
    || (MEMORY[0x2533484B0]((char *)a1 + v5[8], (char *)a2 + v5[8]) & 1) == 0
    || *(double *)((char *)a1 + v5[9]) != *(double *)((char *)a2 + v5[9])
    || *((unsigned __int8 *)a1 + v5[10]) != *((unsigned __int8 *)a2 + v5[10])
    || *((unsigned __int8 *)a1 + v5[11]) != *((unsigned __int8 *)a2 + v5[11])
    || *((unsigned __int8 *)a1 + v5[12]) != *((unsigned __int8 *)a2 + v5[12])
    || *(double *)((char *)a1 + v5[13]) != *(double *)((char *)a2 + v5[13]))
  {
    return 0;
  }
  uint64_t v11 = v5[14];
  uint64_t v12 = (double *)((char *)a1 + v11);
  char v13 = *((unsigned char *)a1 + v11 + 8);
  uint64_t v14 = (double *)((char *)a2 + v11);
  int v15 = *((unsigned __int8 *)a2 + v11 + 8);
  if (v13)
  {
    if (!v15) {
      return 0;
    }
  }
  else
  {
    if (*v12 != *v14) {
      LOBYTE(v15) = 1;
    }
    if (v15) {
      return 0;
    }
  }
  BOOL result = 0;
  uint64_t v16 = v5[15];
  uint64_t v17 = (double *)((char *)a1 + v16);
  uint64_t v18 = *(void *)((char *)a1 + v16);
  uint64_t v19 = (double *)((char *)a2 + v16);
  if (v18 != *(void *)v19 || v17[1] != v19[1] || *((void *)v17 + 2) != *((void *)v19 + 2)) {
    return result;
  }
  if (*((unsigned __int8 *)a1 + v5[16]) != *((unsigned __int8 *)a2 + v5[16])) {
    return 0;
  }
  BOOL result = 0;
  uint64_t v20 = v5[17];
  unint64_t v21 = (char *)a1 + v20;
  int v22 = *((unsigned __int8 *)a1 + v20);
  char v23 = (unsigned __int8 *)a2 + v20;
  if (v22 == *v23 && ((v21[1] ^ v23[1]) & 1) == 0) {
    return *(double *)((char *)a1 + v5[18]) == *(double *)((char *)a2 + v5[18]);
  }
  return result;
}

unint64_t sub_24EB22ED0()
{
  unint64_t result = qword_269933500;
  if (!qword_269933500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933500);
  }
  return result;
}

unint64_t sub_24EB22F24()
{
  unint64_t result = qword_269933508;
  if (!qword_269933508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933508);
  }
  return result;
}

unint64_t sub_24EB22F78()
{
  unint64_t result = qword_269933510;
  if (!qword_269933510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933510);
  }
  return result;
}

unint64_t sub_24EB22FCC()
{
  unint64_t result = qword_269933520;
  if (!qword_269933520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933520);
  }
  return result;
}

unint64_t sub_24EB23020()
{
  unint64_t result = qword_269933528;
  if (!qword_269933528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933528);
  }
  return result;
}

uint64_t sub_24EB23074(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AwardHeaderLayout();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EB230D8()
{
  return sub_24EB23120(&qword_269933530, (void (*)(uint64_t))type metadata accessor for AwardHeaderLayout);
}

uint64_t sub_24EB23120(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for AwardHeaderLayout(char *a1, char *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *(void *)a2;
    *(void *)uint64_t v4 = *(void *)a2;
    uint64_t v4 = (char *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v7 = a3[5];
    int v8 = &a1[v7];
    int v9 = &a2[v7];
    uint64_t v10 = sub_24EB3D280();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    uint64_t v12 = a3[7];
    *(_WORD *)&v4[a3[6]] = *(_WORD *)&a2[a3[6]];
    *(void *)&v4[v12] = *(void *)&a2[v12];
    v11(&v4[a3[8]], &a2[a3[8]], v10);
    uint64_t v13 = a3[10];
    *(void *)&v4[a3[9]] = *(void *)&a2[a3[9]];
    v4[v13] = a2[v13];
    uint64_t v14 = a3[12];
    v4[a3[11]] = a2[a3[11]];
    v4[v14] = a2[v14];
    uint64_t v15 = a3[14];
    *(void *)&v4[a3[13]] = *(void *)&a2[a3[13]];
    uint64_t v16 = &v4[v15];
    uint64_t v17 = &a2[v15];
    *(void *)uint64_t v16 = *(void *)v17;
    v16[8] = v17[8];
    uint64_t v18 = a3[15];
    uint64_t v19 = a3[16];
    uint64_t v20 = &v4[v18];
    unint64_t v21 = &a2[v18];
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    *((void *)v20 + 2) = *((void *)v21 + 2);
    v4[v19] = a2[v19];
    uint64_t v22 = a3[18];
    *(_WORD *)&v4[a3[17]] = *(_WORD *)&a2[a3[17]];
    *(void *)&v4[v22] = *(void *)&a2[v22];
  }
  return v4;
}

uint64_t destroy for AwardHeaderLayout(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_24EB3D280();
  int v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v5 - 8), v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  return v8(v6, v5);
}

char *initializeWithCopy for AwardHeaderLayout(char *a1, char *a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  int v8 = &a2[v6];
  uint64_t v9 = sub_24EB3D280();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  uint64_t v11 = a3[7];
  *(_WORD *)&a1[a3[6]] = *(_WORD *)&a2[a3[6]];
  *(void *)&a1[v11] = *(void *)&a2[v11];
  v10(&a1[a3[8]], &a2[a3[8]], v9);
  uint64_t v12 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  a1[v12] = a2[v12];
  uint64_t v13 = a3[12];
  a1[a3[11]] = a2[a3[11]];
  a1[v13] = a2[v13];
  uint64_t v14 = a3[14];
  *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  *(void *)uint64_t v15 = *(void *)v16;
  v15[8] = v16[8];
  uint64_t v17 = a3[15];
  uint64_t v18 = a3[16];
  uint64_t v19 = &a1[v17];
  uint64_t v20 = &a2[v17];
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *((void *)v19 + 2) = *((void *)v20 + 2);
  a1[v18] = a2[v18];
  uint64_t v21 = a3[18];
  *(_WORD *)&a1[a3[17]] = *(_WORD *)&a2[a3[17]];
  *(void *)&a1[v21] = *(void *)&a2[v21];
  return a1;
}

char *assignWithCopy for AwardHeaderLayout(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  int v8 = &a2[v6];
  uint64_t v9 = sub_24EB3D280();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  v10(&a1[a3[8]], &a2[a3[8]], v9);
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  a1[a3[10]] = a2[a3[10]];
  a1[a3[11]] = a2[a3[11]];
  a1[a3[12]] = a2[a3[12]];
  *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
  uint64_t v14 = a3[14];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  char v17 = v16[8];
  *(void *)uint64_t v15 = *(void *)v16;
  v15[8] = v17;
  uint64_t v18 = a3[15];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = *((void *)v20 + 1);
  *((void *)v19 + 2) = *((void *)v20 + 2);
  a1[a3[16]] = a2[a3[16]];
  uint64_t v21 = a3[17];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  *uint64_t v22 = *v23;
  v22[1] = v23[1];
  *(void *)&a1[a3[18]] = *(void *)&a2[a3[18]];
  return a1;
}

char *initializeWithTake for AwardHeaderLayout(char *a1, char *a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  int v8 = &a2[v6];
  uint64_t v9 = sub_24EB3D280();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = a3[7];
  *(_WORD *)&a1[a3[6]] = *(_WORD *)&a2[a3[6]];
  *(void *)&a1[v11] = *(void *)&a2[v11];
  v10(&a1[a3[8]], &a2[a3[8]], v9);
  uint64_t v12 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  a1[v12] = a2[v12];
  uint64_t v13 = a3[12];
  a1[a3[11]] = a2[a3[11]];
  a1[v13] = a2[v13];
  uint64_t v14 = a3[14];
  *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  *(void *)uint64_t v15 = *(void *)v16;
  v15[8] = v16[8];
  uint64_t v17 = a3[15];
  uint64_t v18 = a3[16];
  uint64_t v19 = &a1[v17];
  uint64_t v20 = &a2[v17];
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *((void *)v19 + 2) = *((void *)v20 + 2);
  a1[v18] = a2[v18];
  uint64_t v21 = a3[18];
  *(_WORD *)&a1[a3[17]] = *(_WORD *)&a2[a3[17]];
  *(void *)&a1[v21] = *(void *)&a2[v21];
  return a1;
}

char *assignWithTake for AwardHeaderLayout(char *a1, char *a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  int v8 = &a2[v6];
  uint64_t v9 = sub_24EB3D280();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = &a1[v11];
  uint64_t v14 = &a2[v11];
  *uint64_t v13 = *v14;
  uint64_t v15 = *(void *)&a2[v12];
  v13[1] = v14[1];
  *(void *)&a1[v12] = v15;
  v10(&a1[a3[8]], &a2[a3[8]], v9);
  uint64_t v16 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  a1[v16] = a2[v16];
  uint64_t v17 = a3[12];
  a1[a3[11]] = a2[a3[11]];
  a1[v17] = a2[v17];
  uint64_t v18 = a3[14];
  *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  *(void *)uint64_t v19 = *(void *)v20;
  v19[8] = v20[8];
  uint64_t v21 = a3[15];
  uint64_t v22 = a3[16];
  uint64_t v23 = &a1[v21];
  char v24 = &a2[v21];
  *(void *)uint64_t v23 = *(void *)v24;
  *((void *)v23 + 1) = *((void *)v24 + 1);
  *((void *)v23 + 2) = *((void *)v24 + 2);
  a1[v22] = a2[v22];
  uint64_t v25 = a3[17];
  uint64_t v26 = a3[18];
  char v27 = &a1[v25];
  char v28 = &a2[v25];
  *char v27 = *v28;
  v27[1] = v28[1];
  *(void *)&a1[v26] = *(void *)&a2[v26];
  return a1;
}

uint64_t getEnumTagSinglePayload for AwardHeaderLayout(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EB23960);
}

uint64_t sub_24EB23960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24EB3D280();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unsigned int v12 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24) + 1);
    if (v12 >= 2) {
      return v12 - 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for AwardHeaderLayout(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EB23A38);
}

uint64_t sub_24EB23A38(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_24EB3D280();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unsigned int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 24) + 1) = a2 + 1;
  }
  return result;
}

uint64_t sub_24EB23AFC()
{
  uint64_t result = sub_24EB3D280();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AwardHeaderLayout.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF2) {
    goto LABEL_17;
  }
  if (a2 + 14 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 14) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 14;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xF;
  int v8 = v6 - 15;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AwardHeaderLayout.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 14 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 14) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF1)
  {
    unsigned int v6 = ((a2 - 242) >> 8) + 1;
    *uint64_t result = a2 + 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EB23D3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 14;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardHeaderLayout.CodingKeys()
{
  return &type metadata for AwardHeaderLayout.CodingKeys;
}

unint64_t sub_24EB23D78()
{
  unint64_t result = qword_269933548;
  if (!qword_269933548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933548);
  }
  return result;
}

unint64_t sub_24EB23DD0()
{
  unint64_t result = qword_269933550;
  if (!qword_269933550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933550);
  }
  return result;
}

unint64_t sub_24EB23E28()
{
  unint64_t result = qword_269933558;
  if (!qword_269933558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269933558);
  }
  return result;
}

uint64_t sub_24EB23E7C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x800000024EB4A5B0 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x50746E65746E6F63 && a2 == 0xEE00676E69646461 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEF746E6F466E6F69 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x800000024EB4AC60 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6461506567616D69 && a2 == 0xEC000000676E6964 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x800000024EB4AC80 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000024EB4ABE0 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6361706D6F437369 && a2 == 0xE900000000000074 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x617274726F507369 && a2 == 0xEE0065646F4D7469 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000024EB4ACA0 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x800000024EB4ACC0 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000024EB4ACE0 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x67696C4174786574 && a2 == 0xED0000746E656D6ELL || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x6E6F46656C746974 && a2 == 0xE900000000000074 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x800000024EB4AD00)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else
  {
    char v5 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    if (v5) {
      return 14;
    }
    else {
      return 15;
    }
  }
}

uint64_t AwardImageEnvironment.init(fetchSeymourAchievementImageURL:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

ValueMetadata *type metadata accessor for AwardImageEnvironment()
{
  return &type metadata for AwardImageEnvironment;
}

uint64_t sub_24EB24488(uint64_t a1, uint64_t a2)
{
  uint64_t State = type metadata accessor for AwardProgressLoadState();
  uint64_t v44 = *(void *)(State - 8);
  uint64_t v4 = MEMORY[0x270FA5388](State);
  unsigned int v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  char v45 = (char *)&v41 - v7;
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v42 = a1 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  int64_t v43 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v47 = a1;
  swift_bridgeObjectRetain();
  for (int64_t i = 0; ; int64_t i = v49)
  {
    if (v11)
    {
      uint64_t v48 = (v11 - 1) & v11;
      int64_t v49 = i;
      unint64_t v13 = __clz(__rbit64(v11)) | (i << 6);
    }
    else
    {
      int64_t v14 = i + 1;
      if (__OFADD__(i, 1)) {
        goto LABEL_36;
      }
      if (v14 >= v43) {
        return swift_release();
      }
      unint64_t v15 = *(void *)(v42 + 8 * v14);
      int64_t v16 = i + 1;
      if (!v15)
      {
        int64_t v16 = i + 2;
        if (i + 2 >= v43) {
          return swift_release();
        }
        unint64_t v15 = *(void *)(v42 + 8 * v16);
        if (!v15)
        {
          int64_t v16 = i + 3;
          if (i + 3 >= v43) {
            return swift_release();
          }
          unint64_t v15 = *(void *)(v42 + 8 * v16);
          if (!v15)
          {
            int64_t v16 = i + 4;
            if (i + 4 >= v43) {
              return swift_release();
            }
            unint64_t v15 = *(void *)(v42 + 8 * v16);
            if (!v15)
            {
              uint64_t v17 = i + 5;
              if (i + 5 >= v43) {
                return swift_release();
              }
              unint64_t v15 = *(void *)(v42 + 8 * v17);
              if (!v15)
              {
                while (1)
                {
                  int64_t v16 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_37;
                  }
                  if (v16 >= v43) {
                    return swift_release();
                  }
                  unint64_t v15 = *(void *)(v42 + 8 * v16);
                  ++v17;
                  if (v15) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v16 = i + 5;
            }
          }
        }
      }
LABEL_23:
      uint64_t v48 = (v15 - 1) & v15;
      int64_t v49 = v16;
      unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
    }
    uint64_t v18 = (uint64_t *)(*(void *)(v47 + 48) + 16 * v13);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    uint64_t v21 = (uint64_t)v45;
    swift_storeEnumTagMultiPayload();
    uint64_t v22 = *(int *)(type metadata accessor for AwardToastPresentationState() + 28);
    uint64_t v23 = (uint64_t)v6;
    sub_24EB304D4(v21, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
    swift_bridgeObjectRetain();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    char v50 = *(void **)(a2 + v22);
    uint64_t v25 = v50;
    uint64_t v26 = a2;
    *(void *)(a2 + v22) = 0x8000000000000000;
    unint64_t v28 = sub_24EAE9EE0(v19, v20);
    uint64_t v29 = v25[2];
    BOOL v30 = (v27 & 1) == 0;
    uint64_t v31 = v29 + v30;
    if (__OFADD__(v29, v30)) {
      break;
    }
    char v32 = v27;
    if (v25[3] >= v31)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_24EB2D69C();
      }
    }
    else
    {
      sub_24EB2D03C(v31, isUniquelyReferenced_nonNull_native);
      unint64_t v33 = sub_24EAE9EE0(v19, v20);
      if ((v32 & 1) != (v34 & 1)) {
        goto LABEL_38;
      }
      unint64_t v28 = v33;
    }
    unsigned int v6 = (char *)v23;
    uint64_t v35 = v50;
    if (v32)
    {
      sub_24EAFDB40(v23, v50[7] + *(void *)(v44 + 72) * v28);
    }
    else
    {
      v50[(v28 >> 6) + 8] |= 1 << v28;
      unint64_t v36 = (uint64_t *)(v35[6] + 16 * v28);
      uint64_t *v36 = v19;
      v36[1] = v20;
      sub_24EB304D4(v23, v35[7] + *(void *)(v44 + 72) * v28, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
      uint64_t v37 = v35[2];
      BOOL v38 = __OFADD__(v37, 1);
      uint64_t v39 = v37 + 1;
      if (v38) {
        goto LABEL_35;
      }
      v35[2] = v39;
      swift_bridgeObjectRetain();
    }
    a2 = v26;
    *(void *)(v26 + v22) = v35;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v11 = v48;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  uint64_t result = sub_24EB3E030();
  __break(1u);
  return result;
}

uint64_t sub_24EB24888(uint64_t a1)
{
  uint64_t v2 = a1 + 56;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 56);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v9 = (void *)MEMORY[0x263F8EE78];
  if (!v5) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (unint64_t i = v10 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v8 << 6))
  {
    uint64_t v12 = *(void *)(a1 + 48) + 40 * i;
    if (*(unsigned char *)(v12 + 32))
    {
      if (v5) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v16 = *(void *)v12;
      uint64_t v21 = *(void *)(v12 + 8);
      sub_24EAC16CC(*(void *)v12, v21, *(void *)(v12 + 16), *(void *)(v12 + 24), 0);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_24EAC4F38(0, v9[2] + 1, 1, v9);
        uint64_t v9 = (void *)result;
      }
      unint64_t v18 = v9[2];
      unint64_t v17 = v9[3];
      uint64_t v19 = v9;
      if (v18 >= v17 >> 1)
      {
        uint64_t result = (uint64_t)sub_24EAC4F38((void *)(v17 > 1), v18 + 1, 1, v9);
        uint64_t v19 = (void *)result;
      }
      v19[2] = v18 + 1;
      uint64_t v9 = v19;
      uint64_t v20 = &v19[2 * v18];
      v20[4] = v16;
      v20[5] = v21;
      if (v5) {
        goto LABEL_4;
      }
    }
LABEL_7:
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v13 >= v6) {
      goto LABEL_29;
    }
    unint64_t v14 = *(void *)(v2 + 8 * v13);
    ++v8;
    if (!v14)
    {
      int64_t v8 = v13 + 1;
      if (v13 + 1 >= v6) {
        goto LABEL_29;
      }
      unint64_t v14 = *(void *)(v2 + 8 * v8);
      if (!v14)
      {
        int64_t v8 = v13 + 2;
        if (v13 + 2 >= v6) {
          goto LABEL_29;
        }
        unint64_t v14 = *(void *)(v2 + 8 * v8);
        if (!v14)
        {
          int64_t v8 = v13 + 3;
          if (v13 + 3 >= v6) {
            goto LABEL_29;
          }
          unint64_t v14 = *(void *)(v2 + 8 * v8);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v5 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 4;
  if (v15 >= v6)
  {
LABEL_29:
    swift_release();
    return (uint64_t)v9;
  }
  unint64_t v14 = *(void *)(v2 + 8 * v15);
  if (v14)
  {
    int64_t v8 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v8 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v8 >= v6) {
      goto LABEL_29;
    }
    unint64_t v14 = *(void *)(v2 + 8 * v8);
    ++v15;
    if (v14) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_24EB24A8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_24EB2E904(a1);
  if (v6) {
    goto LABEL_8;
  }
  if (*(_DWORD *)(a1 + 36) != v5)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32))
  {
    long long v7 = 0uLL;
    char v8 = -1;
    long long v9 = 0uLL;
  }
  else
  {
    sub_24EB2EE00(result, v5, a1, (uint64_t)v12);
    long long v10 = v12[1];
    long long v11 = v12[0];
    char v8 = v13;
    uint64_t result = sub_24EB3042C((uint64_t)v12);
    long long v9 = v10;
    long long v7 = v11;
  }
  *(_OWORD *)a2 = v7;
  *(_OWORD *)(a2 + 16) = v9;
  *(unsigned char *)(a2 + 32) = v8;
  return result;
}

uint64_t sub_24EB24B2C()
{
  uint64_t v1 = *((unsigned __int8 *)v0 + 16);
  switch(*((unsigned char *)v0 + 16))
  {
    case 0xFB:
    case 0xFC:
    case 0xFD:
    case 0xFE:
    case 0xFF:
LABEL_4:
      uint64_t result = sub_24EB3E0A0();
      break;
    default:
      uint64_t v2 = *v0;
      sub_24EB3E0A0();
      switch(v1)
      {
        case 1:
          sub_24EB3E0A0();
          uint64_t result = sub_24EB3E0A0();
          uint64_t v4 = *(void *)(v2 + 16);
          if (v4)
          {
            uint64_t v5 = v2 + 40;
            do
            {
              swift_bridgeObjectRetain();
              sub_24EB3DCA0();
              uint64_t result = swift_bridgeObjectRelease();
              v5 += 16;
              --v4;
            }
            while (v4);
          }
          break;
        case 2:
          sub_24EB3E0A0();
          uint64_t result = sub_24EB3DCA0();
          break;
        case 3:
          goto LABEL_4;
        default:
          sub_24EB3E0A0();
          goto LABEL_4;
      }
      break;
  }
  return result;
}

uint64_t sub_24EB24CB4()
{
  return sub_24EB3E0D0();
}

uint64_t sub_24EB24D0C()
{
  return sub_24EB3E0D0();
}

__n128 AwardToastPresentationFeature.init(environment:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for AwardToastPresentationFeature();
  sub_24EB3D1E0();
  long long v4 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(a2 + 96) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(a2 + 112) = v4;
  *(_OWORD *)(a2 + 128) = *(_OWORD *)(a1 + 128);
  long long v5 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v5;
  long long v6 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(a2 + 80) = v6;
  __n128 result = *(__n128 *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t type metadata accessor for AwardToastPresentationFeature()
{
  uint64_t result = qword_26B1D2CB8;
  if (!qword_26B1D2CB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t AwardToastPresentationFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, char *a2, unint64_t *a3, uint64_t a4)
{
  v394 = a3;
  v395 = a2;
  uint64_t v387 = sub_24EB3D1F0();
  v386 = *(void (***)(unint64_t, uint64_t, uint64_t))(v387 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v387);
  v371 = (char *)&v369 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  v372 = (char *)&v369 - v8;
  MEMORY[0x270FA5388](v7);
  v381 = (char *)&v369 - v9;
  uint64_t State = (char *)type metadata accessor for AwardProgressLoadState();
  os_log_t v398 = (os_log_t)*((void *)State - 1);
  uint64_t v10 = MEMORY[0x270FA5388](State);
  v400 = (char *)&v369 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  v393 = (unint64_t *)((char *)&v369 - v13);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  v399 = (uint8_t *)&v369 - v15;
  MEMORY[0x270FA5388](v14);
  v392 = ((char *)&v369 - v16);
  uint64_t v383 = type metadata accessor for AwardToastPresentationFeature();
  uint64_t v388 = *(void *)(v383 - 8);
  uint64_t v17 = *(void *)(v388 + 64);
  uint64_t v18 = MEMORY[0x270FA5388](v383);
  uint64_t v384 = (uint64_t)&v369 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v376 = (uint64_t)&v369 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v377 = (uint64_t)&v369 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v378 = (uint64_t)&v369 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v373 = (uint64_t)&v369 - v25;
  uint64_t v402 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FE0);
  int64_t v396 = *(void *)(v402 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v402);
  uint64_t v385 = (uint64_t)&v369 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  v382 = (char *)&v369 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  v379 = (char *)&v369 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  char v34 = (char *)&v369 - v33;
  uint64_t v35 = MEMORY[0x270FA5388](v32);
  v375 = (uint8_t *)&v369 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  v380 = (char *)&v369 - v38;
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v41 = (char *)&v369 - v40;
  MEMORY[0x270FA5388](v39);
  v374 = (char *)&v369 - v42;
  uint64_t v389 = type metadata accessor for AwardToastLoadState();
  uint64_t v43 = MEMORY[0x270FA5388](v389);
  uint64_t v44 = MEMORY[0x270FA5388](v43);
  unint64_t v46 = (unint64_t)&v369 - v45;
  uint64_t v47 = MEMORY[0x270FA5388](v44);
  uint64_t v48 = MEMORY[0x270FA5388](v47);
  uint64_t v50 = (uint64_t)&v369 - v49;
  uint64_t v51 = MEMORY[0x270FA5388](v48);
  unint64_t v53 = (unint64_t)&v369 - v52;
  MEMORY[0x270FA5388](v51);
  uint64_t v55 = MEMORY[0x270FA5388]((char *)&v369 - v54);
  uint64_t v56 = MEMORY[0x270FA5388](v55);
  uint64_t v57 = MEMORY[0x270FA5388](v56);
  uint64_t v58 = MEMORY[0x270FA5388](v57);
  uint64_t v59 = MEMORY[0x270FA5388](v58);
  long long v67 = (char *)&v369 - v66;
  uint64_t v68 = *(void *)(a4 + 8);
  uint64_t v397 = *(void *)a4;
  uint64_t v69 = *(void *)(a4 + 24);
  unint64_t v391 = *(void *)(a4 + 16);
  unint64_t v71 = *(void *)(a4 + 32);
  uint64_t v70 = *(void *)(a4 + 40);
  int64_t v72 = *(unsigned __int8 *)(a4 + 48);
  switch(v72 >> 5)
  {
    case 1u:
      uint64_t v170 = sub_24EB2E078(v397);
      uint64_t v171 = v395;
      uint64_t result = swift_bridgeObjectRelease();
      *((void *)v171 + 1) = v170;
      return result;
    case 2u:
      v393 = v61;
      uint64_t v385 = v59;
      v399 = (uint8_t *)v69;
      v400 = (char *)v68;
      uint64_t v384 = v65;
      uint64_t State = (char *)v64;
      LODWORD(v398) = v72;
      LODWORD(v72) = v72 & 0x1F;
      uint64_t v134 = qword_26B1D27C0;
      uint64_t v50 = v397;
      unint64_t v53 = v70;
      swift_bridgeObjectRetain();
      uint64_t v77 = v391;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v134 == -1) {
        goto LABEL_83;
      }
      goto LABEL_200;
    case 3u:
      uint64_t v369 = *(void *)(a4 + 32);
      uint64_t State = (char *)v70;
      uint64_t v152 = v69;
      uint64_t v153 = v397;
      char v154 = v391;
      sub_24EAB4DA4(v397, v68, v391);
      if (qword_26B1D27C0 != -1) {
        swift_once();
      }
      uint64_t v155 = sub_24EB3D2C0();
      __swift_project_value_buffer(v155, (uint64_t)qword_26B1D27A8);
      sub_24EAB4DA4(v153, v68, v154);
      sub_24EAB4DA4(v153, v68, v154);
      uint64_t v156 = sub_24EB3D2A0();
      os_log_type_t v157 = sub_24EB3DD80();
      if (os_log_type_enabled(v156, v157))
      {
        char v158 = (uint8_t *)swift_slowAlloc();
        uint64_t v159 = swift_slowAlloc();
        v400 = (char *)v159;
        uint64_t v370 = v17;
        v399 = v158;
        *(_DWORD *)char v158 = 136315138;
        uint64_t v410 = v159;
        v403 = (void *)v153;
        uint64_t v404 = v68;
        LOBYTE(v405) = v154;
        sub_24EAB4DA4(v153, v68, v154);
        uint64_t v160 = sub_24EB3DC80();
        os_log_t v398 = v156;
        v403 = (void *)sub_24EAC5098(v160, v161, &v410);
        sub_24EB3DDB0();
        uint64_t v162 = v390;
        swift_bridgeObjectRelease();
        uint64_t v163 = v369;
        uint64_t v164 = (uint64_t)State;
        sub_24EAB4DDC(v153, v68, v154, v152, v369, (uint64_t)State, v72);
        unsigned __int8 v165 = v72;
        uint64_t v166 = v162;
        sub_24EAB4DDC(v153, v68, v154, v152, v163, v164, v165);
        os_log_t v168 = v398;
        uint64_t v167 = v399;
        _os_log_impl(&dword_24EAA5000, v398, v157, "[AwardToastPresentationFeature] Fetched award toast kind %s", v399, 0xCu);
        uint64_t v169 = (uint64_t)v400;
        swift_arrayDestroy();
        MEMORY[0x2533497D0](v169, -1, -1);
        MEMORY[0x2533497D0](v167, -1, -1);
      }
      else
      {
        uint64_t v201 = v152;
        uint64_t v202 = v152;
        uint64_t v203 = v369;
        uint64_t v204 = (uint64_t)State;
        sub_24EAB4DDC(v153, v68, v154, v202, v369, (uint64_t)State, v72);
        sub_24EAB4DDC(v153, v68, v154, v201, v203, v204, v72);

        uint64_t v166 = v390;
      }
      uint64_t v205 = v385;
      long long v206 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26B1D30A0);
      uint64_t v207 = v205 + v206[16];
      uint64_t v208 = v205 + v206[20];
      uint64_t v209 = (void *)(v205 + v206[24]);
      v403 = (void *)v153;
      uint64_t v404 = v68;
      LOBYTE(v405) = v154;
      sub_24EAB4DA4(v153, v68, v154);
      sub_24EB2C784();
      sub_24EB3DDE0();
      sub_24EB3DD30();
      uint64_t v210 = *MEMORY[0x263F39590];
      uint64_t v211 = sub_24EB3DB90();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v211 - 8) + 104))(v207, v210, v211);
      uint64_t v212 = v166;
      uint64_t v213 = v384;
      sub_24EB3046C(v212, v384, (uint64_t (*)(void))type metadata accessor for AwardToastPresentationFeature);
      unint64_t v214 = (*(unsigned __int8 *)(v388 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v388 + 80);
      uint64_t v215 = swift_allocObject();
      *(void *)(v215 + 16) = v153;
      *(void *)(v215 + 24) = v68;
      *(unsigned char *)(v215 + 32) = v154;
      sub_24EB304D4(v213, v215 + v214, (uint64_t (*)(void))type metadata accessor for AwardToastPresentationFeature);
      *uint64_t v209 = &unk_269933568;
      v209[1] = v215;
      uint64_t v216 = *MEMORY[0x263F39578];
      uint64_t v217 = sub_24EB3DB80();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v217 - 8) + 104))(v208, v216, v217);
      (*(void (**)(uint64_t, void, uint64_t))(v396 + 104))(v205, *MEMORY[0x263F39530], v402);
      unint64_t v191 = *v394;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v191 = sub_24EAC5070(0, *(void *)(v191 + 16) + 1, 1, v191);
      }
      unint64_t v219 = *(void *)(v191 + 16);
      unint64_t v218 = *(void *)(v191 + 24);
      if (v219 >= v218 >> 1) {
        unint64_t v191 = sub_24EAC5070(v218 > 1, v219 + 1, 1, v191);
      }
      *(void *)(v191 + 16) = v219 + 1;
      uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v396 + 32))(v191+ ((*(unsigned __int8 *)(v396 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v396 + 80))+ *(void *)(v396 + 72) * v219, v205, v402);
      goto LABEL_112;
    case 4u:
      if (!(v391 | v68 | v397 | v69 | v71 | v70) && v72 == 128)
      {
        if (qword_26B1D27C0 != -1) {
          swift_once();
        }
        uint64_t v114 = sub_24EB3D2C0();
        uint64_t State = (char *)__swift_project_value_buffer(v114, (uint64_t)qword_26B1D27A8);
        uint64_t v115 = sub_24EB3D2A0();
        os_log_type_t v116 = sub_24EB3DD80();
        if (os_log_type_enabled(v115, v116))
        {
          unint64_t v53 = swift_slowAlloc();
          *(_WORD *)unint64_t v53 = 0;
          _os_log_impl(&dword_24EAA5000, v115, v116, "[AwardToastPresentationFeature] Fetching award toast kind", (uint8_t *)v53, 2u);
          MEMORY[0x2533497D0](v53, -1, -1);
        }

        uint64_t v117 = type metadata accessor for AwardToastPresentationState();
        uint64_t v118 = v395;
        unint64_t v119 = (unint64_t)&v395[*(int *)(v117 + 24)];
        sub_24EB301F8(v119, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
        v386[2](v119, v390 + *(int *)(v383 + 20), v387);
        swift_storeEnumTagMultiPayload();
        uint64_t v50 = *((void *)v118 + 1);
        int64_t v120 = v50 + 64;
        uint64_t v121 = 1 << *(unsigned char *)(v50 + 32);
        uint64_t v122 = -1;
        if (v121 < 64) {
          uint64_t v122 = ~(-1 << v121);
        }
        uint64_t v77 = v122 & *(void *)(v50 + 64);
        int64_t v72 = (unint64_t)(v121 + 63) >> 6;
        swift_bridgeObjectRetain_n();
        unint64_t v71 = 0;
        char v123 = (void *)MEMORY[0x263F8EE78];
        uint64_t v370 = v17;
        if (!v77) {
          goto LABEL_58;
        }
LABEL_55:
        unint64_t v124 = __clz(__rbit64(v77));
        v77 &= v77 - 1;
        for (unint64_t i = v124 | (v71 << 6); ; unint64_t i = __clz(__rbit64(v127)) + (v71 << 6))
        {
          unint64_t v53 = *(void *)(*(void *)(v50 + 56) + 8 * i);
          if (v53 >= 2)
          {
            char v129 = (uint64_t *)(*(void *)(v50 + 48) + 16 * i);
            uint64_t v130 = *v129;
            uint64_t v17 = v129[1];
            swift_bridgeObjectRetain_n();
            sub_24EAA8EB8(v53);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              char v123 = sub_24EAC4F38(0, v123[2] + 1, 1, v123);
            }
            unint64_t v119 = v123[2];
            unint64_t v131 = v123[3];
            uint64_t v132 = v123;
            if (v119 >= v131 >> 1) {
              uint64_t v132 = sub_24EAC4F38((void *)(v131 > 1), v119 + 1, 1, v123);
            }
            v132[2] = v119 + 1;
            char v123 = v132;
            uint64_t v133 = &v132[2 * v119];
            v133[4] = v130;
            v133[5] = v17;
            swift_bridgeObjectRelease();
            sub_24EAA8EF4(v53);
            if (v77) {
              goto LABEL_55;
            }
          }
          else if (v77)
          {
            goto LABEL_55;
          }
LABEL_58:
          int64_t v126 = v71 + 1;
          if (__OFADD__(v71, 1)) {
            goto LABEL_198;
          }
          if (v126 >= v72) {
            break;
          }
          unint64_t v127 = *(void *)(v120 + 8 * v126);
          ++v71;
          if (!v127)
          {
            unint64_t v71 = v126 + 1;
            if (v126 + 1 >= v72) {
              break;
            }
            unint64_t v127 = *(void *)(v120 + 8 * v71);
            if (!v127)
            {
              unint64_t v71 = v126 + 2;
              if (v126 + 2 >= v72) {
                break;
              }
              unint64_t v127 = *(void *)(v120 + 8 * v71);
              if (!v127)
              {
                unint64_t v71 = v126 + 3;
                if (v126 + 3 >= v72) {
                  break;
                }
                unint64_t v127 = *(void *)(v120 + 8 * v71);
                if (!v127)
                {
                  unint64_t v71 = v126 + 4;
                  if (v126 + 4 >= v72) {
                    break;
                  }
                  unint64_t v127 = *(void *)(v120 + 8 * v71);
                  if (!v127)
                  {
                    int64_t v128 = v126 + 5;
                    if (v128 >= v72) {
                      break;
                    }
                    unint64_t v127 = *(void *)(v120 + 8 * v128);
                    if (!v127)
                    {
                      while (1)
                      {
                        unint64_t v71 = v128 + 1;
                        if (__OFADD__(v128, 1)) {
                          break;
                        }
                        if ((uint64_t)v71 >= v72) {
                          goto LABEL_113;
                        }
                        unint64_t v127 = *(void *)(v120 + 8 * v71);
                        ++v128;
                        if (v127) {
                          goto LABEL_81;
                        }
                      }
                      __break(1u);
LABEL_202:
                      unint64_t v119 = sub_24EAC5070(0, *(void *)(v119 + 16) + 1, 1, v119);
LABEL_142:
                      unint64_t v314 = *(void *)(v119 + 16);
                      unint64_t v313 = *(void *)(v119 + 24);
                      if (v314 >= v313 >> 1) {
                        unint64_t v119 = sub_24EAC5070(v313 > 1, v314 + 1, 1, v119);
                      }
                      *(void *)(v119 + 16) = v314 + 1;
                      uint64_t result = (*(uint64_t (**)(unint64_t, int64_t, uint64_t))(v120 + 32))(v119+ ((*(unsigned __int8 *)(v120 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v120 + 80))+ *(void *)(v120 + 72) * v314, v72, v402);
                      goto LABEL_161;
                    }
                    unint64_t v71 = v128;
                  }
                }
              }
            }
          }
LABEL_81:
          uint64_t v77 = (v127 - 1) & v127;
        }
LABEL_113:
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain_n();
        long long v220 = sub_24EB3D2A0();
        os_log_type_t v221 = sub_24EB3DD80();
        if (os_log_type_enabled(v220, v221))
        {
          long long v222 = (uint8_t *)swift_slowAlloc();
          uint64_t v223 = swift_slowAlloc();
          v403 = (void *)v223;
          long long v224 = v123;
          *(_DWORD *)long long v222 = 136315138;
          uint64_t v225 = swift_bridgeObjectRetain();
          uint64_t v226 = MEMORY[0x253348F50](v225, MEMORY[0x263F8D310]);
          unint64_t v228 = v227;
          swift_bridgeObjectRelease();
          uint64_t v410 = sub_24EAC5098(v226, v228, (uint64_t *)&v403);
          sub_24EB3DDB0();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24EAA5000, v220, v221, "[AwardToastPresentationFeature] Award candidates: %s", v222, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2533497D0](v223, -1, -1);
          MEMORY[0x2533497D0](v222, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n();
          long long v224 = v123;
        }
        char v123 = v394;
        int64_t v120 = v396;
        uint64_t v300 = v390;
        int64_t v72 = (int64_t)v380;
        if (v224[2])
        {
          v301 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26B1D30A0);
          int64_t v302 = v72 + v301[16];
          int64_t v303 = v72 + v301[20];
          v304 = (void *)(v72 + v301[24]);
          v403 = 0;
          uint64_t v404 = 0;
          LOBYTE(v405) = -1;
          sub_24EB2C784();
          sub_24EB3DDE0();
          sub_24EB3DD30();
          uint64_t v305 = *MEMORY[0x263F39590];
          uint64_t v306 = sub_24EB3DB90();
          (*(void (**)(int64_t, uint64_t, uint64_t))(*(void *)(v306 - 8) + 104))(v302, v305, v306);
          uint64_t v307 = v378;
          sub_24EB3046C(v300, v378, (uint64_t (*)(void))type metadata accessor for AwardToastPresentationFeature);
          unint64_t v308 = (*(unsigned __int8 *)(v388 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v388 + 80);
          unint64_t v309 = (v370 + v308 + 7) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v310 = swift_allocObject();
          sub_24EB304D4(v307, v310 + v308, (uint64_t (*)(void))type metadata accessor for AwardToastPresentationFeature);
          *(void *)(v310 + v309) = v224;
          void *v304 = &unk_2699335A0;
          v304[1] = v310;
          uint64_t v311 = *MEMORY[0x263F39578];
          uint64_t v312 = sub_24EB3DB80();
          (*(void (**)(int64_t, uint64_t, uint64_t))(*(void *)(v312 - 8) + 104))(v303, v311, v312);
          (*(void (**)(int64_t, void, uint64_t))(v120 + 104))(v72, *MEMORY[0x263F39530], v402);
          unint64_t v119 = *v123;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            goto LABEL_202;
          }
          goto LABEL_142;
        }
        swift_bridgeObjectRelease();
        v335 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26B1D30A0);
        v336 = v375;
        v337 = &v375[v335[16]];
        v338 = &v375[v335[20]];
        v339 = &v375[v335[24]];
        v403 = 0;
        uint64_t v404 = 0;
        LOBYTE(v405) = -2;
        sub_24EB2C784();
        sub_24EB3DDE0();
        sub_24EB3DD30();
        uint64_t v340 = *MEMORY[0x263F39590];
        uint64_t v341 = sub_24EB3DB90();
        (*(void (**)(uint8_t *, uint64_t, uint64_t))(*(void *)(v341 - 8) + 104))(v337, v340, v341);
        *(void *)v339 = &unk_2699335A8;
        *((void *)v339 + 1) = 0;
        uint64_t v342 = *MEMORY[0x263F39578];
        uint64_t v343 = sub_24EB3DB80();
        (*(void (**)(uint8_t *, uint64_t, uint64_t))(*(void *)(v343 - 8) + 104))(v338, v342, v343);
        (*(void (**)(uint8_t *, void, uint64_t))(v120 + 104))(v336, *MEMORY[0x263F39530], v402);
        unint64_t v119 = *v123;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v119 = sub_24EAC5070(0, *(void *)(v119 + 16) + 1, 1, v119);
        }
        unint64_t v345 = *(void *)(v119 + 16);
        unint64_t v344 = *(void *)(v119 + 24);
        if (v345 >= v344 >> 1) {
          unint64_t v119 = sub_24EAC5070(v344 > 1, v345 + 1, 1, v119);
        }
        *(void *)(v119 + 16) = v345 + 1;
        uint64_t result = (*(uint64_t (**)(unint64_t, uint8_t *, uint64_t))(v120 + 32))(v119+ ((*(unsigned __int8 *)(v120 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v120 + 80))+ *(void *)(v120 + 72) * v345, v336, v402);
LABEL_161:
        *char v123 = v119;
        return result;
      }
      uint64_t v173 = v391 | v68 | v69 | v71 | v70;
      if (v72 == 128 && v397 == 1 && !v173)
      {
        if (qword_26B1D27C0 != -1) {
          swift_once();
        }
        uint64_t v174 = sub_24EB3D2C0();
        __swift_project_value_buffer(v174, (uint64_t)qword_26B1D27A8);
        uint64_t v175 = sub_24EB3D2A0();
        os_log_type_t v176 = sub_24EB3DD80();
        BOOL v177 = os_log_type_enabled(v175, v176);
        uint64_t v178 = v388;
        if (v177)
        {
          uint64_t v179 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v179 = 0;
          _os_log_impl(&dword_24EAA5000, v175, v176, "[AwardToastPresentationFeature] Fetching candidates", v179, 2u);
          MEMORY[0x2533497D0](v179, -1, -1);
        }

        long long v180 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26B1D30A0);
        long long v181 = &v34[v180[16]];
        uint64_t v182 = &v34[v180[20]];
        long long v183 = &v34[v180[24]];
        v403 = 0;
        uint64_t v404 = 0;
        LOBYTE(v405) = -2;
        sub_24EB2C784();
        sub_24EB3DDE0();
        sub_24EB3DD30();
        uint64_t v184 = *MEMORY[0x263F39590];
        uint64_t v185 = sub_24EB3DB90();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v185 - 8) + 104))(v181, v184, v185);
        uint64_t v186 = v377;
        sub_24EB3046C(v390, v377, (uint64_t (*)(void))type metadata accessor for AwardToastPresentationFeature);
        unint64_t v187 = (*(unsigned __int8 *)(v178 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v178 + 80);
        uint64_t v188 = swift_allocObject();
        sub_24EB304D4(v186, v188 + v187, (uint64_t (*)(void))type metadata accessor for AwardToastPresentationFeature);
        *(void *)long long v183 = &unk_269933590;
        *((void *)v183 + 1) = v188;
        uint64_t v189 = *MEMORY[0x263F39578];
        uint64_t v190 = sub_24EB3DB80();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v190 - 8) + 104))(v182, v189, v190);
        (*(void (**)(char *, void, uint64_t))(v396 + 104))(v34, *MEMORY[0x263F39530], v402);
        unint64_t v191 = *v394;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v191 = sub_24EAC5070(0, *(void *)(v191 + 16) + 1, 1, v191);
        }
        unint64_t v193 = *(void *)(v191 + 16);
        unint64_t v192 = *(void *)(v191 + 24);
        if (v193 >= v192 >> 1) {
          unint64_t v191 = sub_24EAC5070(v192 > 1, v193 + 1, 1, v191);
        }
        *(void *)(v191 + 16) = v193 + 1;
        uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v396 + 32))(v191+ ((*(unsigned __int8 *)(v396 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v396 + 80))+ *(void *)(v396 + 72) * v193, v34, v402);
LABEL_112:
        unint64_t *v394 = v191;
        return result;
      }
      if (v72 == 128 && v397 == 2 && !v173)
      {
        uint64_t v77 = v63;
        uint64_t State = v67;
        uint64_t v384 = v65;
        if (qword_26B1D27C0 != -1) {
          swift_once();
        }
        uint64_t v257 = sub_24EB3D2C0();
        __swift_project_value_buffer(v257, (uint64_t)qword_26B1D27A8);
        v258 = sub_24EB3D2A0();
        os_log_type_t v259 = sub_24EB3DD80();
        if (os_log_type_enabled(v258, v259))
        {
          v260 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v260 = 0;
          _os_log_impl(&dword_24EAA5000, v258, v259, "Checking for eligible toast, if any", v260, 2u);
          MEMORY[0x2533497D0](v260, -1, -1);
        }

        uint64_t v261 = type metadata accessor for AwardToastPresentationState();
        unint64_t v71 = (unint64_t)State;
        sub_24EB3046C((uint64_t)&v395[*(int *)(v261 + 24)], (uint64_t)State, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
        uint64_t v262 = v384;
        swift_storeEnumTagMultiPayload();
        char StateO2eeoiySbAC_ACtFZ_0 = _s13FitnessAwards19AwardToastLoadStateO2eeoiySbAC_ACtFZ_0(v71, v262);
        sub_24EB301F8(v262, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
        if (StateO2eeoiySbAC_ACtFZ_0)
        {
          v400 = v41;
          uint64_t v370 = v17;
          v264 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26B1D30A0);
          v265 = v374;
          v266 = &v374[v264[16]];
          v267 = &v374[v264[20]];
          v268 = &v374[v264[24]];
          v403 = 0;
          uint64_t v404 = 0;
          LOBYTE(v405) = -4;
          unint64_t v391 = sub_24EB2C784();
          sub_24EB3DDE0();
          sub_24EB3DD30();
          uint64_t v269 = *MEMORY[0x263F39590];
          uint64_t v270 = sub_24EB3DB90();
          int64_t v271 = v396;
          v272 = v394;
          uint64_t v273 = v270;
          uint64_t v274 = *(void *)(v270 - 8);
          v275 = *(void (***)(unint64_t, uint64_t, uint64_t))(v274 + 104);
          LODWORD(v389) = v269;
          v386 = v275;
          uint64_t v385 = v274 + 104;
          ((void (*)(char *, uint64_t, uint64_t))v275)(v266, v269, v270);
          *(void *)v268 = &unk_2699335B0;
          *((void *)v268 + 1) = 0;
          uint64_t v276 = *MEMORY[0x263F39578];
          uint64_t v277 = sub_24EB3DB80();
          uint64_t v278 = *(void *)(v277 - 8);
          v279 = *(NSObject **)(v278 + 104);
          uint64_t v397 = v278 + 104;
          ((void (*)(char *, uint64_t, uint64_t))v279)(v267, v276, v277);
          v280 = *(NSObject **)(v271 + 104);
          LODWORD(v393) = *MEMORY[0x263F39530];
          v392 = v280;
          ((void (*)(char *))v280)(v265);
          v281 = v272;
          unint64_t v282 = *v272;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          LODWORD(v399) = v276;
          os_log_t v398 = v279;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            unint64_t v282 = sub_24EAC5070(0, *(void *)(v282 + 16) + 1, 1, v282);
          }
          unint64_t v285 = *(void *)(v282 + 16);
          unint64_t v284 = *(void *)(v282 + 24);
          if (v285 >= v284 >> 1) {
            unint64_t v282 = sub_24EAC5070(v284 > 1, v285 + 1, 1, v282);
          }
          *(void *)(v282 + 16) = v285 + 1;
          v286 = *(void (**)(unint64_t, char *, uint64_t))(v271 + 32);
          unint64_t v287 = (*(unsigned __int8 *)(v271 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v271 + 80);
          uint64_t v387 = *(void *)(v271 + 72);
          int64_t v396 = v271 + 32;
          v286(v282 + v287 + v387 * v285, v374, v402);
          unint64_t *v281 = v282;
          if (*v395 == 1)
          {
            uint64_t v384 = v287;
            v395 = (char *)v286;
            uint64_t v288 = (uint64_t)v400;
            v289 = &v400[v264[16]];
            uint64_t v383 = (uint64_t)&v400[v264[20]];
            v290 = &v400[v264[24]];
            v403 = 0;
            uint64_t v404 = 0;
            LOBYTE(v405) = -3;
            sub_24EB3DDE0();
            sub_24EB3DD30();
            ((void (*)(char *, void, uint64_t))v386)(v289, v389, v273);
            uint64_t v291 = v373;
            sub_24EB3046C(v390, v373, (uint64_t (*)(void))type metadata accessor for AwardToastPresentationFeature);
            unint64_t v292 = (*(unsigned __int8 *)(v388 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v388 + 80);
            uint64_t v293 = swift_allocObject();
            sub_24EB304D4(v291, v293 + v292, (uint64_t (*)(void))type metadata accessor for AwardToastPresentationFeature);
            *(void *)v290 = &unk_2699335C0;
            *((void *)v290 + 1) = v293;
            uint64_t v294 = v288;
            uint64_t v295 = v402;
            ((void (*)(uint64_t, void, uint64_t))v398)(v383, v399, v277);
            ((void (*)(uint64_t, void, uint64_t))v392)(v288, v393, v295);
            unint64_t v296 = *v281;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v296 = sub_24EAC5070(0, *(void *)(v296 + 16) + 1, 1, v296);
            }
            unint64_t v298 = *(void *)(v296 + 16);
            unint64_t v297 = *(void *)(v296 + 24);
            uint64_t v299 = v384;
            if (v298 >= v297 >> 1) {
              unint64_t v296 = sub_24EAC5070(v297 > 1, v298 + 1, 1, v296);
            }
            *(void *)(v296 + 16) = v298 + 1;
            ((void (*)(unint64_t, uint64_t, uint64_t))v395)(v296 + v299 + v298 * v387, v294, v295);
            unint64_t *v281 = v296;
          }
          goto LABEL_154;
        }
        sub_24EB3046C(v71, v77, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
        v347 = sub_24EB3D2A0();
        os_log_type_t v348 = sub_24EB3DD80();
        if (!os_log_type_enabled(v347, v348)) {
          goto LABEL_195;
        }
        v349 = (uint8_t *)swift_slowAlloc();
        uint64_t v350 = swift_slowAlloc();
        v403 = (void *)v350;
        *(_DWORD *)v349 = 136315138;
        sub_24EB3046C(v77, v384, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
        uint64_t v351 = sub_24EB3DC80();
        uint64_t v410 = sub_24EAC5098(v351, v352, (uint64_t *)&v403);
        sub_24EB3DDB0();
        swift_bridgeObjectRelease();
        sub_24EB301F8(v77, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
        v353 = "[AwardToastPresentationFeature] Skipping toast presentation due to loadState: %s";
LABEL_170:
        _os_log_impl(&dword_24EAA5000, v347, v348, v353, v349, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2533497D0](v350, -1, -1);
        MEMORY[0x2533497D0](v349, -1, -1);

        uint64_t v334 = v71;
        return sub_24EB301F8(v334, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
      }
      if (v72 != 128 || v397 != 3 || v173)
      {
        v354 = v395;
        if (v72 == 128 && v397 == 4 && !v173)
        {
          uint64_t v346 = (uint64_t)&v354[*(int *)(type metadata accessor for AwardToastPresentationState() + 24)];
          sub_24EB3046C(v346, v50, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
          if (swift_getEnumCaseMultiPayload())
          {
            uint64_t v334 = v50;
            return sub_24EB301F8(v334, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
          }
          v361 = v386;
          v362 = v371;
          uint64_t v363 = v50;
          uint64_t v364 = v387;
          v386[4]((unint64_t)v371, v363, v387);
          char v365 = sub_24EB3D1D0();
          uint64_t result = ((uint64_t (*)(char *, uint64_t))v361[1])(v362, v364);
          if (v365) {
            goto LABEL_187;
          }
          return result;
        }
        if (v72 == 128 && v397 == 5 && !v173)
        {
          uint64_t v355 = (uint64_t)&v354[*(int *)(type metadata accessor for AwardToastPresentationState() + 24)];
          sub_24EB301F8(v355, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
          return swift_storeEnumTagMultiPayload();
        }
        uint64_t v77 = v62;
        int64_t v72 = v65;
        unint64_t v71 = v60;
        uint64_t v360 = (uint64_t)&v354[*(int *)(type metadata accessor for AwardToastPresentationState() + 24)];
        sub_24EB3046C(v360, v71, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
        sub_24EB3046C(v71, v46, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          sub_24EB301F8(v71, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_24EB301F8(v360, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
          return swift_storeEnumTagMultiPayload();
        }
LABEL_191:
        sub_24EB301F8(v46, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
        if (qword_26B1D27C0 != -1) {
          swift_once();
        }
        uint64_t v366 = sub_24EB3D2C0();
        __swift_project_value_buffer(v366, (uint64_t)qword_26B1D27A8);
        sub_24EB3046C(v71, v77, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
        v347 = sub_24EB3D2A0();
        os_log_type_t v348 = sub_24EB3DD80();
        if (!os_log_type_enabled(v347, v348))
        {
LABEL_195:

          sub_24EB301F8(v77, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
          uint64_t v334 = v71;
          return sub_24EB301F8(v334, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
        }
        v349 = (uint8_t *)swift_slowAlloc();
        uint64_t v350 = swift_slowAlloc();
        v403 = (void *)v350;
        *(_DWORD *)v349 = 136315138;
        sub_24EB3046C(v77, v72, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
        uint64_t v367 = sub_24EB3DC80();
        uint64_t v410 = sub_24EAC5098(v367, v368, (uint64_t *)&v403);
        sub_24EB3DDB0();
        swift_bridgeObjectRelease();
        sub_24EB301F8(v77, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
        v353 = "[AwardToastPresentationFeature] Toast was presented but the load state was %s";
        goto LABEL_170;
      }
      uint64_t v346 = (uint64_t)&v395[*(int *)(type metadata accessor for AwardToastPresentationState() + 24)];
      sub_24EB3046C(v346, v53, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
      if (swift_getEnumCaseMultiPayload())
      {
        uint64_t v334 = v53;
        return sub_24EB301F8(v334, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
      }
      v356 = v386;
      v357 = v372;
      uint64_t v358 = v387;
      v386[4]((unint64_t)v372, v53, v387);
      char v359 = sub_24EB3D1D0();
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v356[1])(v357, v358);
      if (v359)
      {
LABEL_187:
        sub_24EB301F8(v346, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
        return swift_storeEnumTagMultiPayload();
      }
      return result;
    default:
      uint64_t v73 = v397;
      uint64_t v74 = *(void *)(v397 + 56);
      v394 = (unint64_t *)(v397 + 56);
      uint64_t v75 = 1 << *(unsigned char *)(v397 + 32);
      uint64_t v76 = -1;
      if (v75 < 64) {
        uint64_t v76 = ~(-1 << v75);
      }
      uint64_t v77 = v76 & v74;
      int64_t v396 = (unint64_t)(v75 + 63) >> 6;
      swift_bridgeObjectRetain();
      uint64_t v78 = 0;
      uint64_t v390 = (uint64_t)&unk_24EB4A110;
      unint64_t v391 = 0x800000024EB4A110;
      unint64_t v71 = (unint64_t)v395;
      if (!v77) {
        goto LABEL_9;
      }
      while (2)
      {
        unint64_t v79 = __clz(__rbit64(v77));
        v77 &= v77 - 1;
        uint64_t v402 = v78;
        unint64_t v80 = v79 | (v78 << 6);
LABEL_23:
        uint64_t v85 = *(void *)(v73 + 48) + 40 * v80;
        unint64_t v53 = *(void *)v85;
        uint64_t v50 = *(void *)(v85 + 8);
        int64_t v72 = *(void *)(v85 + 16);
        unint64_t v46 = *(void *)(v85 + 24);
        if (*(unsigned char *)(v85 + 32))
        {
          unint64_t v86 = v393;
          unint64_t *v393 = v53;
          v86[1] = v50;
          void v86[2] = v72;
          v86[3] = v46;
          *((unsigned char *)v86 + 32) = 1;
          swift_storeEnumTagMultiPayload();
          uint64_t v17 = *(int *)(type metadata accessor for AwardToastPresentationState() + 28);
          sub_24EB304D4((uint64_t)v86, (uint64_t)v400, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
          unint64_t v53 = swift_isUniquelyReferenced_nonNull_native();
          v403 = *(void **)(v71 + v17);
          uint64_t v87 = (uint64_t)v403;
          *(void *)(v71 + v17) = 0x8000000000000000;
          unint64_t v46 = sub_24EAE9EE0(0xD00000000000001CLL, v391);
          uint64_t v89 = *(void *)(v87 + 16);
          BOOL v90 = (v88 & 1) == 0;
          uint64_t v91 = v89 + v90;
          if (!__OFADD__(v89, v90))
          {
            uint64_t v50 = v88;
            if (*(void *)(v87 + 24) >= v91)
            {
              if (v53)
              {
                long long v94 = v403;
                if ((v88 & 1) == 0) {
                  goto LABEL_42;
                }
              }
              else
              {
                sub_24EB2D69C();
                long long v94 = v403;
                if ((v50 & 1) == 0) {
                  goto LABEL_42;
                }
              }
            }
            else
            {
              sub_24EB2D03C(v91, v53);
              unint64_t v92 = sub_24EAE9EE0(0xD00000000000001CLL, v390 | 0x8000000000000000);
              if ((v50 & 1) != (v93 & 1)) {
                goto LABEL_203;
              }
              unint64_t v46 = v92;
              long long v94 = v403;
              if ((v50 & 1) == 0)
              {
LABEL_42:
                v94[(v46 >> 6) + 8] |= 1 << v46;
                char v110 = (void *)(v94[6] + 16 * v46);
                unint64_t v111 = v390 | 0x8000000000000000;
                *char v110 = 0xD00000000000001CLL;
                v110[1] = v111;
                sub_24EB304D4((uint64_t)v400, v94[7] + (unint64_t)v398[9].isa * v46, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
                uint64_t v112 = v94[2];
                BOOL v108 = __OFADD__(v112, 1);
                uint64_t v113 = v112 + 1;
                if (!v108)
                {
                  v94[2] = v113;
LABEL_44:
                  *(void *)(v71 + v17) = v94;
                  swift_bridgeObjectRelease();
                  uint64_t v78 = v402;
                  if (v77) {
                    continue;
                  }
                  goto LABEL_9;
                }
LABEL_197:
                __break(1u);
LABEL_198:
                __break(1u);
                goto LABEL_199;
              }
            }
            sub_24EAFDB40((uint64_t)v400, v94[7] + (unint64_t)v398[9].isa * v46);
            goto LABEL_44;
          }
          __break(1u);
        }
        else
        {
          long long v95 = v392;
          v392->isa = (Class)v53;
          v95[1].isa = (Class)v50;
          v95[2].isa = (Class)v72;
          v95[3].isa = (Class)v46;
          LOBYTE(v95[4].isa) = 0;
          swift_storeEnumTagMultiPayload();
          uint64_t v96 = *(int *)(type metadata accessor for AwardToastPresentationState() + 28);
          sub_24EB304D4((uint64_t)v95, (uint64_t)v399, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
          sub_24EAC16CC(v53, v50, v72, v46, 0);
          swift_bridgeObjectRetain();
          int v97 = swift_isUniquelyReferenced_nonNull_native();
          v403 = *(void **)(v71 + v96);
          uint64_t v98 = (uint64_t)v403;
          *(void *)(v71 + v96) = 0x8000000000000000;
          unint64_t v71 = sub_24EAE9EE0(v53, v50);
          uint64_t v100 = *(void *)(v98 + 16);
          BOOL v101 = (v99 & 1) == 0;
          uint64_t v102 = v100 + v101;
          if (!__OFADD__(v100, v101))
          {
            uint64_t v17 = v99;
            if (*(void *)(v98 + 24) >= v102)
            {
              if ((v97 & 1) == 0) {
                sub_24EB2D69C();
              }
            }
            else
            {
              sub_24EB2D03C(v102, v97);
              unint64_t v103 = sub_24EAE9EE0(v53, v50);
              if ((v17 & 1) != (v104 & 1))
              {
LABEL_203:
                sub_24EB3E030();
                __break(1u);
                JUMPOUT(0x24EB28178);
              }
              unint64_t v71 = v103;
            }
            uint64_t v105 = v403;
            if (v17)
            {
              sub_24EAFDB40((uint64_t)v399, v403[7] + (unint64_t)v398[9].isa * v71);
            }
            else
            {
              v403[(v71 >> 6) + 8] |= 1 << v71;
              uint64_t v106 = (unint64_t *)(v105[6] + 16 * v71);
              *uint64_t v106 = v53;
              v106[1] = v50;
              sub_24EB304D4((uint64_t)v399, v105[7] + (unint64_t)v398[9].isa * v71, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
              uint64_t v107 = v105[2];
              BOOL v108 = __OFADD__(v107, 1);
              uint64_t v109 = v107 + 1;
              if (v108)
              {
                __break(1u);
                goto LABEL_197;
              }
              v105[2] = v109;
              swift_bridgeObjectRetain();
            }
            unint64_t v71 = (unint64_t)v395;
            *(void *)&v395[v96] = v105;
            swift_bridgeObjectRelease();
            sub_24EAB1A70(v53, v50, v72, v46, 0);
            uint64_t v73 = v397;
            uint64_t v78 = v402;
            if (v77) {
              continue;
            }
LABEL_9:
            int64_t v81 = v78 + 1;
            if (__OFADD__(v78, 1)) {
              goto LABEL_190;
            }
            if (v81 >= v396) {
              return swift_release();
            }
            unint64_t v82 = v394[v81];
            int64_t v83 = v78 + 1;
            if (v82) {
              goto LABEL_22;
            }
            int64_t v83 = v78 + 2;
            if (v78 + 2 >= v396) {
              return swift_release();
            }
            unint64_t v82 = v394[v83];
            if (v82) {
              goto LABEL_22;
            }
            int64_t v83 = v78 + 3;
            if (v78 + 3 >= v396) {
              return swift_release();
            }
            unint64_t v82 = v394[v83];
            if (v82)
            {
LABEL_22:
              uint64_t v77 = (v82 - 1) & v82;
              uint64_t v402 = v83;
              unint64_t v80 = __clz(__rbit64(v82)) + (v83 << 6);
              goto LABEL_23;
            }
            uint64_t v84 = v78 + 4;
            if (v78 + 4 >= v396) {
              return swift_release();
            }
            unint64_t v82 = v394[v84];
            if (v82)
            {
              int64_t v83 = v78 + 4;
              goto LABEL_22;
            }
            while (1)
            {
              int64_t v83 = v84 + 1;
              if (__OFADD__(v84, 1)) {
                break;
              }
              if (v83 >= v396) {
                return swift_release();
              }
              unint64_t v82 = v394[v83];
              ++v84;
              if (v82) {
                goto LABEL_22;
              }
            }
LABEL_199:
            __break(1u);
LABEL_200:
            swift_once();
LABEL_83:
            uint64_t v135 = sub_24EB3D2C0();
            __swift_project_value_buffer(v135, (uint64_t)qword_26B1D27A8);
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain_n();
            uint64_t v136 = sub_24EB3D2A0();
            os_log_type_t v137 = sub_24EB3DD80();
            int v138 = v137;
            v392 = v136;
            BOOL v139 = os_log_type_enabled(v136, v137);
            uint64_t v370 = v17;
            LODWORD(v380) = v72;
            if (v139)
            {
              uint64_t v140 = (uint8_t *)swift_slowAlloc();
              uint64_t v378 = swift_slowAlloc();
              uint64_t v410 = v378;
              LODWORD(v377) = v138;
              v375 = v140;
              *(_DWORD *)uint64_t v140 = 136315138;
              v374 = (char *)(v140 + 4);
              uint64_t v141 = v399;
              uint64_t v142 = (uint64_t)v400;
              v403 = (void *)v50;
              uint64_t v404 = (uint64_t)v400;
              uint64_t v405 = v77;
              v406 = v399;
              unint64_t v407 = v71;
              unint64_t v408 = v53;
              char v409 = v72;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v143 = sub_24EB3DC80();
              v403 = (void *)sub_24EAC5098(v143, v144, &v410);
              sub_24EB3DDB0();
              swift_bridgeObjectRelease();
              unsigned __int8 v145 = v398;
              sub_24EAB4DDC(v50, v142, v77, (uint64_t)v141, v71, v53, v398);
              uint64_t v146 = v142;
              uint64_t v147 = v71;
              uint64_t v148 = v53;
              sub_24EAB4DDC(v50, v146, v77, (uint64_t)v141, v71, v53, v145);
              uint64_t v149 = v392;
              uint64_t v150 = v375;
              _os_log_impl(&dword_24EAA5000, v392, (os_log_type_t)v377, "[AwardToastPresentationFeature] Fetched award toast detail %s", v375, 0xCu);
              uint64_t v151 = v378;
              swift_arrayDestroy();
              MEMORY[0x2533497D0](v151, -1, -1);
              MEMORY[0x2533497D0](v150, -1, -1);
            }
            else
            {
              double v194 = v399;
              uint64_t v195 = (uint64_t)v400;
              unsigned __int8 v196 = v398;
              sub_24EAB4DDC(v50, (uint64_t)v400, v77, (uint64_t)v399, v71, v53, v398);
              uint64_t v147 = v71;
              uint64_t v148 = v53;
              sub_24EAB4DDC(v50, v195, v77, (uint64_t)v194, v71, v53, v196);
            }
            uint64_t v197 = (uint64_t)&v395[*(int *)(type metadata accessor for AwardToastPresentationState() + 24)];
            uint64_t v198 = (uint64_t)State;
            sub_24EB3046C(v197, (uint64_t)State, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
            uint64_t v199 = v198;
            long long v200 = v393;
            sub_24EB3046C(v199, (uint64_t)v393, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
            if (swift_getEnumCaseMultiPayload())
            {
              sub_24EAB4DDC(v397, (uint64_t)v400, v77, (uint64_t)v399, v147, v148, v398);
              sub_24EB301F8((uint64_t)v200, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
            }
            else
            {
              __int16 v229 = v386;
              v230 = v381;
              v231 = v200;
              uint64_t v232 = v387;
              v386[4]((unint64_t)v381, (uint64_t)v231, v387);
              uint64_t v233 = v390;
              if (sub_24EB3D1D0())
              {
                sub_24EB301F8(v197, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
                uint64_t v234 = v397;
                uint64_t v235 = (uint64_t)v400;
                *(void *)uint64_t v197 = v397;
                *(void *)(v197 + 8) = v235;
                unint64_t v236 = v391;
                v237 = v399;
                *(void *)(v197 + 16) = v391;
                *(void *)(v197 + 24) = v237;
                *(void *)(v197 + 32) = v147;
                *(void *)(v197 + 40) = v148;
                uint64_t v369 = v147;
                *(unsigned char *)(v197 + 48) = (_BYTE)v380;
                swift_storeEnumTagMultiPayload();
                v238 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26B1D30A0);
                v239 = v379;
                v240 = &v379[v238[16]];
                os_log_t v398 = (os_log_t)&v379[v238[20]];
                v241 = &v379[v238[24]];
                v403 = 0;
                uint64_t v404 = 0;
                LOBYTE(v405) = -5;
                sub_24EB2C784();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_24EB3DDE0();
                sub_24EB3DD30();
                uint64_t v242 = *MEMORY[0x263F39590];
                uint64_t v243 = sub_24EB3DB90();
                (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v243 - 8) + 104))(v240, v242, v243);
                uint64_t v244 = v376;
                sub_24EB3046C(v233, v376, (uint64_t (*)(void))type metadata accessor for AwardToastPresentationFeature);
                unint64_t v245 = (*(unsigned __int8 *)(v388 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v388 + 80);
                unint64_t v246 = (v370 + v245 + 7) & 0xFFFFFFFFFFFFFFF8;
                uint64_t v247 = swift_allocObject();
                sub_24EB304D4(v244, v247 + v245, (uint64_t (*)(void))type metadata accessor for AwardToastPresentationFeature);
                unint64_t v248 = v247 + v246;
                uint64_t v249 = (uint64_t)v400;
                *(void *)unint64_t v248 = v234;
                *(void *)(v248 + 8) = v249;
                v250 = v399;
                *(void *)(v248 + 16) = v236;
                *(void *)(v248 + 24) = v250;
                *(void *)(v248 + 32) = v369;
                *(void *)(v248 + 40) = v148;
                *(unsigned char *)(v248 + 48) = (_BYTE)v380;
                *(void *)v241 = &unk_269933580;
                *((void *)v241 + 1) = v247;
                uint64_t v251 = *MEMORY[0x263F39578];
                uint64_t v252 = sub_24EB3DB80();
                (*(void (**)(os_log_t, uint64_t, uint64_t))(*(void *)(v252 - 8) + 104))(v398, v251, v252);
                (*(void (**)(char *, void, uint64_t))(v396 + 104))(v239, *MEMORY[0x263F39530], v402);
                unint64_t v253 = *v394;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  unint64_t v253 = sub_24EAC5070(0, *(void *)(v253 + 16) + 1, 1, v253);
                }
                v254 = v381;
                unint64_t v256 = *(void *)(v253 + 16);
                unint64_t v255 = *(void *)(v253 + 24);
                if (v256 >= v255 >> 1) {
                  unint64_t v253 = sub_24EAC5070(v255 > 1, v256 + 1, 1, v253);
                }
                *(void *)(v253 + 16) = v256 + 1;
                (*(void (**)(unint64_t, char *, uint64_t))(v396 + 32))(v253+ ((*(unsigned __int8 *)(v396 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v396 + 80))+ *(void *)(v396 + 72) * v256, v379, v402);
                unint64_t *v394 = v253;
                ((void (*)(char *, uint64_t))v386[1])(v254, v387);
                goto LABEL_154;
              }
              ((void (*)(char *, uint64_t))v229[1])(v230, v232);
              sub_24EAB4DDC(v397, (uint64_t)v400, v391, (uint64_t)v399, v147, v148, v398);
            }
            uint64_t v315 = v385;
            sub_24EB3046C((uint64_t)State, v385, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
            v316 = sub_24EB3D2A0();
            os_log_type_t v317 = sub_24EB3DD80();
            if (os_log_type_enabled(v316, v317))
            {
              v318 = (uint8_t *)swift_slowAlloc();
              uint64_t v319 = swift_slowAlloc();
              v403 = (void *)v319;
              *(_DWORD *)v318 = 136315138;
              sub_24EB3046C(v315, v384, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
              uint64_t v320 = sub_24EB3DC80();
              uint64_t v410 = sub_24EAC5098(v320, v321, (uint64_t *)&v403);
              sub_24EB3DDB0();
              swift_bridgeObjectRelease();
              sub_24EB301F8(v315, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
              _os_log_impl(&dword_24EAA5000, v316, v317, "[AwardToastPresentationFeature] Toast detail was fetched but the load state was %s", v318, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x2533497D0](v319, -1, -1);
              MEMORY[0x2533497D0](v318, -1, -1);
            }
            else
            {
              sub_24EB301F8(v315, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
            }

            v322 = v382;
            v323 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26B1D30A0);
            v324 = &v322[v323[16]];
            v325 = &v322[v323[20]];
            v326 = &v322[v323[24]];
            v403 = 0;
            uint64_t v404 = 0;
            LOBYTE(v405) = -1;
            sub_24EB2C784();
            sub_24EB3DDE0();
            sub_24EB3DD30();
            uint64_t v327 = *MEMORY[0x263F39590];
            uint64_t v328 = sub_24EB3DB90();
            (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v328 - 8) + 104))(v324, v327, v328);
            *(void *)v326 = &unk_269933570;
            *((void *)v326 + 1) = 0;
            uint64_t v329 = *MEMORY[0x263F39578];
            uint64_t v330 = sub_24EB3DB80();
            (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v330 - 8) + 104))(v325, v329, v330);
            (*(void (**)(char *, void, uint64_t))(v396 + 104))(v322, *MEMORY[0x263F39530], v402);
            unint64_t v331 = *v394;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v331 = sub_24EAC5070(0, *(void *)(v331 + 16) + 1, 1, v331);
            }
            unint64_t v333 = *(void *)(v331 + 16);
            unint64_t v332 = *(void *)(v331 + 24);
            if (v333 >= v332 >> 1) {
              unint64_t v331 = sub_24EAC5070(v332 > 1, v333 + 1, 1, v331);
            }
            *(void *)(v331 + 16) = v333 + 1;
            (*(void (**)(unint64_t, char *, uint64_t))(v396 + 32))(v331+ ((*(unsigned __int8 *)(v396 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v396 + 80))+ *(void *)(v396 + 72) * v333, v322, v402);
            unint64_t *v394 = v331;
LABEL_154:
            uint64_t v334 = (uint64_t)State;
            return sub_24EB301F8(v334, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
          }
        }
        break;
      }
      __break(1u);
LABEL_190:
      __break(1u);
      goto LABEL_191;
  }
}

uint64_t sub_24EB2818C(uint64_t a1)
{
  v1[9] = a1;
  sub_24EB3DD20();
  v1[10] = sub_24EB3DD10();
  uint64_t v3 = sub_24EB3DCF0();
  v1[11] = v3;
  v1[12] = v2;
  return MEMORY[0x270FA2498](sub_24EB28224, v3, v2);
}

uint64_t sub_24EB28224()
{
  if (qword_26B1D27C0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24EB3D2C0();
  __swift_project_value_buffer(v1, (uint64_t)qword_26B1D27A8);
  uint64_t v2 = sub_24EB3D2A0();
  os_log_type_t v3 = sub_24EB3DD80();
  if (os_log_type_enabled(v2, v3))
  {
    long long v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v4 = 0;
    _os_log_impl(&dword_24EAA5000, v2, v3, "[AwardToastPresentationFeature] Fetching award toast kind", v4, 2u);
    MEMORY[0x2533497D0](v4, -1, -1);
  }

  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(unsigned char *)(v0 + 64) = 0x80;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FF8);
  *uint64_t v5 = v0;
  v5[1] = sub_24EB283A4;
  return MEMORY[0x270F252C8](v0 + 16, v6);
}

uint64_t sub_24EB283A4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 96);
  uint64_t v3 = *(void *)(v1 + 88);
  return MEMORY[0x270FA2498](sub_24EB284C4, v3, v2);
}

uint64_t sub_24EB284C4()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24EB28528(uint64_t a1, uint64_t a2)
{
  v2[19] = a1;
  v2[20] = a2;
  v2[21] = sub_24EB3DD20();
  v2[22] = sub_24EB3DD10();
  uint64_t v4 = sub_24EB3DCF0();
  v2[23] = v4;
  v2[24] = v3;
  return MEMORY[0x270FA2498](sub_24EB285C4, v4, v3);
}

uint64_t sub_24EB285C4()
{
  uint64_t v3 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)(v0 + 160) + 96)
                                       + **(int **)(*(void *)(v0 + 160) + 96));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 200) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_24EB286A0;
  return v3(v0 + 112);
}

uint64_t sub_24EB286A0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 208) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 192);
  uint64_t v4 = *(void *)(v2 + 184);
  if (v0) {
    uint64_t v5 = sub_24EB28EF4;
  }
  else {
    uint64_t v5 = sub_24EB287DC;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_24EB287DC()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = __swift_project_boxed_opaque_existential_1(v0 + 14, v1);
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t v4 = swift_task_alloc();
  (*(void (**)(uint64_t, void *, uint64_t))(v3 + 16))(v4, v2, v1);
  v0[12] = swift_getAssociatedTypeWitness();
  v0[13] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1(v0 + 9);
  sub_24EB3DD50();
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 14));
  uint64_t v5 = sub_24EB3DD10();
  v0[27] = v5;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 9), v0[12]);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[28] = (uint64_t)v6;
  *uint64_t v6 = v0;
  v6[1] = sub_24EB289CC;
  uint64_t v7 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1E88]((char *)v0 + 65, v5, v7);
}

uint64_t sub_24EB289CC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 192);
  uint64_t v3 = *(void *)(v1 + 184);
  return MEMORY[0x270FA2498](sub_24EB28B10, v3, v2);
}

uint64_t sub_24EB28B10()
{
  if (*(unsigned char *)(v0 + 65) == 1)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v0 + 72);
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    if (qword_26B1D27C0 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_24EB3D2C0();
    __swift_project_value_buffer(v3, (uint64_t)qword_26B1D27A8);
    uint64_t v4 = sub_24EB3D2A0();
    os_log_type_t v5 = sub_24EB3DD80();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_24EAA5000, v4, v5, "[AwardToastPresentationFeature] App did become active, fetching award toast kind", v6, 2u);
      MEMORY[0x2533497D0](v6, -1, -1);
    }

    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    *(_OWORD *)(v0 + 48) = 0u;
    *(unsigned char *)(v0 + 64) = 0x80;
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 232) = v7;
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FF8);
    *uint64_t v7 = v0;
    v7[1] = sub_24EB28CE8;
    return MEMORY[0x270F252C8](v0 + 16, v8);
  }
}

uint64_t sub_24EB28CE8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 192);
  uint64_t v3 = *(void *)(v1 + 184);
  return MEMORY[0x270FA2498](sub_24EB28E08, v3, v2);
}

uint64_t sub_24EB28E08()
{
  uint64_t v1 = sub_24EB3DD10();
  v0[27] = v1;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 9), v0[12]);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[28] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = sub_24EB289CC;
  uint64_t v3 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1E88]((char *)v0 + 65, v1, v3);
}

uint64_t sub_24EB28EF4()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24EB28F58()
{
  *(void *)(v0 + 72) = sub_24EB3DD20();
  *(void *)(v0 + 80) = sub_24EB3DD10();
  *(void *)(v0 + 16) = 1;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(void *)(v0 + 56) = 0;
  *(unsigned char *)(v0 + 64) = 0x80;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FF8);
  *uint64_t v1 = v0;
  v1[1] = sub_24EB2904C;
  return MEMORY[0x270F252C8](v0 + 16, v2);
}

uint64_t sub_24EB2904C()
{
  swift_task_dealloc();
  uint64_t v1 = sub_24EB3DCF0();
  return MEMORY[0x270FA2498](sub_24EB284C4, v1, v0);
}

uint64_t sub_24EB29188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[2] = sub_24EB3DD20();
  v3[3] = sub_24EB3DD10();
  uint64_t v6 = (void *)swift_task_alloc();
  v3[4] = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_24EB2924C;
  return sub_24EB293EC(a1, a3);
}

uint64_t sub_24EB2924C()
{
  swift_task_dealloc();
  uint64_t v1 = sub_24EB3DCF0();
  return MEMORY[0x270FA2498](sub_24EB29388, v1, v0);
}

uint64_t sub_24EB29388()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24EB293EC(uint64_t a1, uint64_t a2)
{
  v3[109] = v2;
  v3[108] = a1;
  uint64_t v5 = (void *)swift_task_alloc();
  v3[110] = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_24EB294A0;
  v5[3] = a2;
  v5[4] = v2;
  return MEMORY[0x270FA2498](sub_24EB2BF20, 0, 0);
}

uint64_t sub_24EB294A0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 888) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x270FA2498](sub_24EB2A27C, 0, 0);
  }
  else
  {
    *(void *)(v4 + 896) = a1;
    *(void *)(v4 + 360) = a1;
    *(_OWORD *)(v4 + 368) = 0u;
    *(_OWORD *)(v4 + 384) = 0u;
    *(_OWORD *)(v4 + 393) = 0u;
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v4 + 904) = v5;
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FF8);
    *(void *)(v4 + 912) = v6;
    *uint64_t v5 = v4;
    v5[1] = sub_24EB29658;
    return MEMORY[0x270F252C8](v4 + 360, v6);
  }
}

uint64_t sub_24EB29658()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24EB29754, 0, 0);
}

uint64_t sub_24EB29754()
{
  uint64_t v1 = *(_OWORD **)(v0 + 872);
  *(_OWORD *)(v0 + 16) = *v1;
  long long v2 = v1[4];
  long long v4 = v1[1];
  long long v3 = v1[2];
  *(_OWORD *)(v0 + 64) = v1[3];
  *(_OWORD *)(v0 + 80) = v2;
  *(_OWORD *)(v0 + 32) = v4;
  *(_OWORD *)(v0 + 48) = v3;
  long long v5 = v1[8];
  long long v7 = v1[5];
  long long v6 = v1[6];
  *(_OWORD *)(v0 + 128) = v1[7];
  *(_OWORD *)(v0 + 144) = v5;
  *(_OWORD *)(v0 + 96) = v7;
  *(_OWORD *)(v0 + 112) = v6;
  long long v8 = v1[5];
  long long v9 = v1[6];
  long long v10 = v1[8];
  *(_OWORD *)(v0 + 272) = v1[7];
  *(_OWORD *)(v0 + 288) = v10;
  *(_OWORD *)(v0 + 240) = v8;
  *(_OWORD *)(v0 + 256) = v9;
  long long v11 = v1[1];
  long long v12 = v1[2];
  long long v13 = v1[4];
  *(_OWORD *)(v0 + 208) = v1[3];
  *(_OWORD *)(v0 + 224) = v13;
  *(_OWORD *)(v0 + 176) = v11;
  *(_OWORD *)(v0 + 192) = v12;
  *(_OWORD *)(v0 + 160) = *v1;
  sub_24EB30258(v0 + 16);
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v0 + 920) = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_24EB29848;
  uint64_t v15 = *(void *)(v0 + 896);
  return sub_24EAF52D0((_OWORD *)(v0 + 160), v15);
}

uint64_t sub_24EB29848(uint64_t a1)
{
  uint64_t v2 = *(void *)v1 + 16;
  *(void *)(*(void *)v1 + 928) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_24EB30304(v2);
  return MEMORY[0x270FA2498](sub_24EB29974, 0, 0);
}

uint64_t sub_24EB29974()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 928) + 16);
  if (v1)
  {
    if (v1 == 1)
    {
      sub_24EB24A8C(*(void *)(v0 + 928), v0 + 680);
      sub_24EB303B0(v0 + 680, v0 + 640);
      if (*(unsigned __int8 *)(v0 + 672) == 255
        || (sub_24EAC10A4(v0 + 640, v0 + 720), sub_24EAC10A4(v0 + 720, v0 + 760), (*(unsigned char *)(v0 + 792) & 1) != 0))
      {
        uint64_t v2 = v0 + 528;
        swift_bridgeObjectRelease();
        *(void *)(v0 + 528) = 5;
        *(_OWORD *)(v0 + 536) = 0u;
        *(_OWORD *)(v0 + 552) = 0u;
        *(void *)(v0 + 568) = 0;
        *(unsigned char *)(v0 + 576) = 0x80;
        long long v3 = (void *)swift_task_alloc();
        *(void *)(v0 + 960) = v3;
        *long long v3 = v0;
        uint64_t v4 = sub_24EB29D28;
LABEL_12:
        v3[1] = v4;
        uint64_t v10 = *(void *)(v0 + 912);
        return MEMORY[0x270F252C8](v2, v10);
      }
      uint64_t v7 = *(void *)(v0 + 760);
      uint64_t v8 = *(void *)(v0 + 768);
      swift_bridgeObjectRelease();
      unsigned int v9 = 2;
    }
    else
    {
      uint64_t v7 = sub_24EB24888(*(void *)(v0 + 928));
      swift_bridgeObjectRelease();
      uint64_t v8 = 0;
      unsigned int v9 = 1;
    }
    uint64_t v2 = v0 + 584;
    *(unsigned char *)(v0 + 353) = v9;
    *(void *)(v0 + 944) = v8;
    *(void *)(v0 + 936) = v7;
    *(void *)(v0 + 584) = v7;
    *(void *)(v0 + 592) = v8;
    *(void *)(v0 + 600) = v9;
    *(void *)(v0 + 608) = 0;
    *(void *)(v0 + 624) = 0;
    *(void *)(v0 + 616) = 0;
    *(unsigned char *)(v0 + 632) = 96;
    long long v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 952) = v3;
    *long long v3 = v0;
    uint64_t v4 = sub_24EB29BF0;
    goto LABEL_12;
  }
  swift_bridgeObjectRelease();
  long long v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 968) = v5;
  *long long v5 = v0;
  v5[1] = sub_24EB29E1C;
  uint64_t v6 = *(void *)(v0 + 872);
  uint64_t v5[5] = v0 + 824;
  v5[6] = v6;
  return MEMORY[0x270FA2498](sub_24EB2C368, 0, 0);
}

uint64_t sub_24EB29BF0()
{
  uint64_t v1 = *(void *)(*v0 + 944);
  uint64_t v2 = *(void *)(*v0 + 936);
  uint64_t v3 = *v0;
  char v4 = *(unsigned char *)(v3 + 353);
  swift_task_dealloc();
  sub_24EAA8E28(v2, v1, v4);
  long long v5 = *(uint64_t (**)(void))(v3 + 8);
  return v5();
}

uint64_t sub_24EB29D28()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24EB29E1C()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24EB29F18, 0, 0);
}

uint64_t sub_24EB29F18()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 840);
  *(unsigned char *)(v0 + 354) = v1;
  if (v1 == 255)
  {
    uint64_t v2 = v0 + 472;
    *(void *)(v0 + 472) = 5;
    *(_OWORD *)(v0 + 480) = 0u;
    *(_OWORD *)(v0 + 496) = 0u;
    *(void *)(v0 + 512) = 0;
    *(unsigned char *)(v0 + 520) = 0x80;
    long long v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 1000) = v5;
    *long long v5 = v0;
    uint64_t v6 = sub_24EB2A188;
  }
  else
  {
    uint64_t v2 = v0 + 304;
    uint64_t v3 = *(void *)(v0 + 832);
    *(void *)(v0 + 976) = v3;
    uint64_t v4 = *(void *)(v0 + 824);
    *(void *)(v0 + 984) = v4;
    *(void *)(v0 + 304) = v4;
    *(void *)(v0 + 312) = v3;
    *(void *)(v0 + 320) = v1;
    *(void *)(v0 + 328) = 0;
    *(void *)(v0 + 336) = 0;
    *(void *)(v0 + 344) = 0;
    *(unsigned char *)(v0 + 352) = 96;
    long long v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 992) = v5;
    *long long v5 = v0;
    uint64_t v6 = sub_24EB2A050;
  }
  v5[1] = v6;
  uint64_t v7 = *(void *)(v0 + 912);
  return MEMORY[0x270F252C8](v2, v7);
}

uint64_t sub_24EB2A050()
{
  uint64_t v1 = *(void *)(*v0 + 984);
  uint64_t v2 = *(void *)(*v0 + 976);
  uint64_t v3 = *v0;
  char v4 = *(unsigned char *)(v3 + 354);
  swift_task_dealloc();
  sub_24EB30418(v1, v2, v4);
  long long v5 = *(uint64_t (**)(void))(v3 + 8);
  return v5();
}

uint64_t sub_24EB2A188()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24EB2A27C()
{
  uint64_t v15 = v0;
  if (qword_26B1D27C0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 888);
  uint64_t v2 = sub_24EB3D2C0();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B1D27A8);
  MEMORY[0x2533495E0](v1);
  MEMORY[0x2533495E0](v1);
  uint64_t v3 = sub_24EB3D2A0();
  os_log_type_t v4 = sub_24EB3DD80();
  BOOL v5 = os_log_type_enabled(v3, v4);
  uint64_t v6 = *(void *)(v0 + 888);
  if (v5)
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v14 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_getErrorValue();
    uint64_t v9 = sub_24EB3E040();
    *(void *)(v0 + 848) = sub_24EAC5098(v9, v10, &v14);
    sub_24EB3DDB0();
    swift_bridgeObjectRelease();
    MEMORY[0x2533495D0](v6);
    MEMORY[0x2533495D0](v6);
    _os_log_impl(&dword_24EAA5000, v3, v4, "[AwardToastPresentationFeature] Failed to fetch award toast kind with error %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533497D0](v8, -1, -1);
    MEMORY[0x2533497D0](v7, -1, -1);
  }
  else
  {
    MEMORY[0x2533495D0](*(void *)(v0 + 888));
    MEMORY[0x2533495D0](v6);
  }

  *(void *)(v0 + 416) = 4;
  *(void *)(v0 + 456) = 0;
  *(_OWORD *)(v0 + 424) = 0u;
  *(_OWORD *)(v0 + 440) = 0u;
  *(unsigned char *)(v0 + 464) = 0x80;
  long long v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 1008) = v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FF8);
  *long long v11 = v0;
  v11[1] = sub_24EB2A50C;
  return MEMORY[0x270F252C8](v0 + 416, v12);
}

uint64_t sub_24EB2A50C()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24EB2A608, 0, 0);
}

uint64_t sub_24EB2A608()
{
  MEMORY[0x2533495D0](*(void *)(v0 + 888));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24EB2A668(uint64_t a1, uint64_t a2)
{
  v2[9] = a1;
  v2[10] = a2;
  sub_24EB3DD20();
  v2[11] = sub_24EB3DD10();
  uint64_t v4 = sub_24EB3DCF0();
  v2[12] = v4;
  v2[13] = v3;
  return MEMORY[0x270FA2498](sub_24EB2A700, v4, v3);
}

uint64_t sub_24EB2A700()
{
  uint64_t v3 = (uint64_t (*)(void))(*(void *)(*(void *)(v0 + 80) + 32) + **(int **)(*(void *)(v0 + 80) + 32));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_24EB2A7CC;
  return v3();
}

uint64_t sub_24EB2A7CC(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 120) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 96);
    uint64_t v6 = *(void *)(v4 + 104);
    return MEMORY[0x270FA2498](sub_24EB2AC98, v5, v6);
  }
  else
  {
    *(void *)(v4 + 16) = a1;
    *(void *)(v4 + 128) = a1;
    *(_OWORD *)(v4 + 24) = 0u;
    *(_OWORD *)(v4 + 40) = 0u;
    *(void *)(v4 + 56) = 0;
    *(unsigned char *)(v4 + 64) = 32;
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v4 + 136) = v7;
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FF8);
    *uint64_t v7 = v4;
    v7[1] = sub_24EB2A980;
    return MEMORY[0x270F252C8](v4 + 16, v8);
  }
}

uint64_t sub_24EB2A980()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 104);
  uint64_t v3 = *(void *)(v1 + 96);
  return MEMORY[0x270FA2498](sub_24EB2AAA0, v3, v2);
}

uint64_t sub_24EB2AAA0()
{
  uint64_t v1 = sub_24EB2E61C(v0[16]);
  v0[18] = v1;
  swift_bridgeObjectRelease();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[19] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_24EB2AB54;
  uint64_t v3 = v0[9];
  return sub_24EB293EC(v3, (uint64_t)v1);
}

uint64_t sub_24EB2AB54()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 104);
  uint64_t v3 = *(void *)(v1 + 96);
  return MEMORY[0x270FA2498](sub_24EAC48A0, v3, v2);
}

uint64_t sub_24EB2AC98()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24EB2ACFC()
{
  *(void *)(v0 + 72) = sub_24EB3DD20();
  *(void *)(v0 + 80) = sub_24EB3DD10();
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(unsigned char *)(v0 + 64) = 0x80;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FF8);
  *uint64_t v1 = v0;
  v1[1] = sub_24EB2ADE4;
  return MEMORY[0x270F252C8](v0 + 16, v2);
}

uint64_t sub_24EB2ADE4()
{
  swift_task_dealloc();
  uint64_t v1 = sub_24EB3DCF0();
  return MEMORY[0x270FA2498](sub_24EB3053C, v1, v0);
}

uint64_t sub_24EB2AF20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[17] = a2;
  v3[18] = a3;
  v3[16] = a1;
  sub_24EB3DD20();
  v3[19] = sub_24EB3DD10();
  uint64_t v5 = sub_24EB3DCF0();
  v3[20] = v5;
  v3[21] = v4;
  return MEMORY[0x270FA2498](sub_24EB2AFBC, v5, v4);
}

uint64_t sub_24EB2AFBC()
{
  uint64_t v1 = *(long long **)(v0 + 144);
  uint64_t v2 = *(int **)(*(void *)(v0 + 136) + 112);
  long long v4 = v1[1];
  long long v3 = v1[2];
  long long v5 = *v1;
  *(unsigned char *)(v0 + 64) = *((unsigned char *)v1 + 48);
  *(_OWORD *)(v0 + 32) = v4;
  *(_OWORD *)(v0 + 48) = v3;
  *(_OWORD *)(v0 + 16) = v5;
  uint64_t v8 = (uint64_t (*)(uint64_t))((char *)v2 + *v2);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_24EB2B0AC;
  return v8(v0 + 16);
}

uint64_t sub_24EB2B0AC()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 160);
    uint64_t v4 = *(void *)(v2 + 168);
    return MEMORY[0x270FA2498](sub_24EB2B3E0, v3, v4);
  }
  else
  {
    *(void *)(v2 + 72) = 6;
    *(_OWORD *)(v2 + 80) = 0u;
    *(_OWORD *)(v2 + 96) = 0u;
    *(void *)(v2 + 112) = 0;
    *(unsigned char *)(v2 + 120) = 0x80;
    long long v5 = (void *)swift_task_alloc();
    *(void *)(v2 + 192) = v5;
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FF8);
    *long long v5 = v2;
    v5[1] = sub_24EB2B25C;
    return MEMORY[0x270F252C8](v2 + 72, v6);
  }
}

uint64_t sub_24EB2B25C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 168);
  uint64_t v3 = *(void *)(v1 + 160);
  return MEMORY[0x270FA2498](sub_24EB2B37C, v3, v2);
}

uint64_t sub_24EB2B37C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24EB2B3E0()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24EB2B444(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  *(unsigned char *)(v5 + 209) = a4;
  *(void *)(v5 + 408) = a3;
  *(void *)(v5 + 416) = a5;
  *(void *)(v5 + 392) = a1;
  *(void *)(v5 + 400) = a2;
  sub_24EB3DD20();
  *(void *)(v5 + 424) = sub_24EB3DD10();
  uint64_t v7 = sub_24EB3DCF0();
  *(void *)(v5 + 432) = v7;
  *(void *)(v5 + 440) = v6;
  return MEMORY[0x270FA2498](sub_24EB2B4E4, v7, v6);
}

uint64_t sub_24EB2B4E4()
{
  uint64_t v1 = *(_OWORD **)(v0 + 416);
  char v2 = *(unsigned char *)(v0 + 209);
  *(_OWORD *)(v0 + 352) = *(_OWORD *)(v0 + 400);
  *(unsigned char *)(v0 + 368) = v2;
  *(_OWORD *)(v0 + 16) = *v1;
  long long v3 = v1[4];
  long long v5 = v1[1];
  long long v4 = v1[2];
  *(_OWORD *)(v0 + 64) = v1[3];
  *(_OWORD *)(v0 + 80) = v3;
  *(_OWORD *)(v0 + 32) = v5;
  *(_OWORD *)(v0 + 48) = v4;
  long long v6 = v1[8];
  long long v8 = v1[5];
  long long v7 = v1[6];
  *(_OWORD *)(v0 + 128) = v1[7];
  *(_OWORD *)(v0 + 144) = v6;
  *(_OWORD *)(v0 + 96) = v8;
  *(_OWORD *)(v0 + 112) = v7;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 448) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_24EB2B5CC;
  return sub_24EAA769C(v0 + 216, (_OWORD *)(v0 + 16));
}

uint64_t sub_24EB2B5CC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 456) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 432);
  uint64_t v4 = *(void *)(v2 + 440);
  if (v0) {
    long long v5 = sub_24EB2BB5C;
  }
  else {
    long long v5 = sub_24EB2B6E0;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_24EB2B6E0()
{
  uint64_t v1 = *(void *)(v0 + 216);
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v3 = *(void *)(v0 + 232);
  uint64_t v4 = *(void *)(v0 + 240);
  *(void *)(v0 + 464) = v1;
  *(void *)(v0 + 472) = v3;
  uint64_t v5 = *(void *)(v0 + 248);
  uint64_t v6 = *(void *)(v0 + 256);
  *(void *)(v0 + 480) = v5;
  *(void *)(v0 + 488) = v6;
  char v7 = *(unsigned char *)(v0 + 264) | 0x40;
  *(void *)(v0 + 160) = v1;
  *(void *)(v0 + 168) = v2;
  *(void *)(v0 + 176) = v3;
  *(void *)(v0 + 184) = v4;
  *(void *)(v0 + 192) = v5;
  *(void *)(v0 + 200) = v6;
  *(unsigned char *)(v0 + 208) = v7;
  long long v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 496) = v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FF8);
  void *v8 = v0;
  v8[1] = sub_24EB2B7C8;
  return MEMORY[0x270F252C8](v0 + 160, v9);
}

uint64_t sub_24EB2B7C8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v1 + 440);
  uint64_t v3 = *(void *)(v1 + 432);
  return MEMORY[0x270FA2498](sub_24EB2B968, v3, v2);
}

uint64_t sub_24EB2B968()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24EB2B9CC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 440);
  uint64_t v3 = *(void *)(v1 + 432);
  return MEMORY[0x270FA2498](sub_24EB2BAEC, v3, v2);
}

uint64_t sub_24EB2BAEC()
{
  uint64_t v1 = *(void *)(v0 + 456);
  swift_release();
  MEMORY[0x2533495D0](v1);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_24EB2BB5C()
{
  uint64_t v15 = v0;
  if (qword_26B1D27C0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 456);
  uint64_t v2 = sub_24EB3D2C0();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B1D27A8);
  MEMORY[0x2533495E0](v1);
  MEMORY[0x2533495E0](v1);
  uint64_t v3 = sub_24EB3D2A0();
  os_log_type_t v4 = sub_24EB3DD80();
  BOOL v5 = os_log_type_enabled(v3, v4);
  uint64_t v6 = *(void *)(v0 + 456);
  if (v5)
  {
    char v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v14 = v8;
    *(_DWORD *)char v7 = 136315138;
    swift_getErrorValue();
    uint64_t v9 = sub_24EB3E040();
    *(void *)(v0 + 376) = sub_24EAC5098(v9, v10, &v14);
    sub_24EB3DDB0();
    swift_bridgeObjectRelease();
    MEMORY[0x2533495D0](v6);
    MEMORY[0x2533495D0](v6);
    _os_log_impl(&dword_24EAA5000, v3, v4, "[AwardToastPresentationFeature] Failed to fetch award toast detail with error %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533497D0](v8, -1, -1);
    MEMORY[0x2533497D0](v7, -1, -1);
  }
  else
  {
    MEMORY[0x2533495D0](*(void *)(v0 + 456));
    MEMORY[0x2533495D0](v6);
  }

  *(void *)(v0 + 272) = 3;
  *(void *)(v0 + 312) = 0;
  *(_OWORD *)(v0 + 280) = 0u;
  *(_OWORD *)(v0 + 296) = 0u;
  *(unsigned char *)(v0 + 320) = 0x80;
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 504) = v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FF8);
  *uint64_t v11 = v0;
  v11[1] = sub_24EB2B9CC;
  return MEMORY[0x270F252C8](v0 + 272, v12);
}

uint64_t sub_24EB2BDEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t State = type metadata accessor for AwardProgressLoadState();
  MEMORY[0x270FA5388](State);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a4 + *(int *)(type metadata accessor for AwardToastPresentationFeature() + 20);
  uint64_t v10 = sub_24EB3D1F0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  swift_storeEnumTagMultiPayload();
  LOBYTE(v9) = _s13FitnessAwards22AwardProgressLoadStateO2eeoiySbAC_ACtFZ_0(a3, (uint64_t)v8);
  sub_24EB301F8((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
  return v9 & 1;
}

uint64_t sub_24EB2BEF4(uint64_t a1, uint64_t a2)
{
  return _s13FitnessAwards29AwardToastPresentationFeatureV7dispose10localState06sharedI0y8DataFlow05EmptyI0V_AA0cdeI0VztF_0(a2);
}

uint64_t sub_24EB2BF00(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 24) = a2;
  *(void *)(v3 + 32) = v2;
  return MEMORY[0x270FA2498](sub_24EB2BF20, 0, 0);
}

uint64_t sub_24EB2BF20()
{
  os_log_type_t v4 = (uint64_t (*)(uint64_t))(*(void *)(v0[4] + 48) + **(int **)(v0[4] + 48));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_24EB2BFF4;
  uint64_t v2 = v0[3];
  return v4(v2);
}

uint64_t sub_24EB2BFF4(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 48) = a1;
  swift_task_dealloc();
  if (v1)
  {
    os_log_type_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_24EB2C128, 0, 0);
  }
}

uint64_t sub_24EB2C128()
{
  long long v13 = v0;
  if (qword_26B1D27C0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24EB3D2C0();
  __swift_project_value_buffer(v1, (uint64_t)qword_26B1D27A8);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_24EB3D2A0();
  os_log_type_t v3 = sub_24EB3DD80();
  if (os_log_type_enabled(v2, v3))
  {
    os_log_type_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v12 = v5;
    *(_DWORD *)os_log_type_t v4 = 136315138;
    sub_24EAF6AF8();
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_24EB3DD60();
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    v0[2] = sub_24EAC5098(v6, v8, &v12);
    sub_24EB3DDB0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24EAA5000, v2, v3, "[AwardToastPresentationFeature] Fetched personalizedAwardProgressUpdates %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533497D0](v5, -1, -1);
    MEMORY[0x2533497D0](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v9 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v10 = v0[6];
  return v9(v10);
}

uint64_t sub_24EB2C348(uint64_t a1)
{
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = v1;
  return MEMORY[0x270FA2498](sub_24EB2C368, 0, 0);
}

uint64_t sub_24EB2C368()
{
  os_log_type_t v3 = (uint64_t (*)(void))(*(void *)(*(void *)(v0 + 48) + 64) + **(int **)(*(void *)(v0 + 48) + 64));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_24EB2C434;
  return v3();
}

uint64_t sub_24EB2C434(uint64_t a1, char a2)
{
  uint64_t v4 = *v3;
  *(void *)(v4 + 64) = a1;
  *(unsigned char *)(v4 + 25) = a2;
  swift_task_dealloc();
  if (v2)
  {
    MEMORY[0x2533495D0](v2);
    uint64_t v5 = sub_24EB2C75C;
  }
  else
  {
    uint64_t v5 = sub_24EB2C554;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_24EB2C554()
{
  uint64_t v16 = v0;
  if (qword_26B1D27C0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24EB3D2C0();
  __swift_project_value_buffer(v1, (uint64_t)qword_26B1D27A8);
  uint64_t v2 = sub_24EB3D2A0();
  os_log_type_t v3 = sub_24EB3DD80();
  if (os_log_type_enabled(v2, v3))
  {
    char v4 = *(unsigned char *)(v0 + 25);
    uint64_t v5 = *(void *)(v0 + 64);
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    uint64_t v15 = v7;
    *(void *)(v0 + 16) = v5;
    *(unsigned char *)(v0 + 24) = v4 & 1;
    uint64_t v8 = sub_24EB3DC80();
    *(void *)(v0 + 32) = sub_24EAC5098(v8, v9, &v15);
    sub_24EB3DDB0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24EAA5000, v2, v3, "[AwardToastPresentationFeature] Found a weeklyStreakNotification %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533497D0](v7, -1, -1);
    MEMORY[0x2533497D0](v6, -1, -1);
  }

  if (*(unsigned char *)(v0 + 25))
  {
    uint64_t v12 = *(void **)(v0 + 40);
    *uint64_t v12 = 0;
    v12[1] = 0;
    char v10 = 3;
  }
  else
  {
    char v10 = 0;
    uint64_t v11 = *(void **)(v0 + 40);
    *uint64_t v11 = *(void *)(v0 + 64);
    v11[1] = 0;
  }
  *(unsigned char *)(*(void *)(v0 + 40) + 16) = v10;
  long long v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_24EB2C75C()
{
  uint64_t v1 = *(void **)(v0 + 40);
  *uint64_t v1 = 0;
  v1[1] = 0;
  *(unsigned char *)(*(void *)(v0 + 40) + 16) = -1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_24EB2C784()
{
  unint64_t result = qword_26B1D2CA8;
  if (!qword_26B1D2CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2CA8);
  }
  return result;
}

uint64_t sub_24EB2C7D8()
{
  uint64_t v1 = (int *)(type metadata accessor for AwardToastPresentationFeature() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 33) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  sub_24EAA8E28(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v6 = v0 + v3 + v1[7];
  uint64_t v7 = sub_24EB3D1F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_24EB2C918(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for AwardToastPresentationFeature() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  char v8 = *(unsigned char *)(v1 + 32);
  unint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *unint64_t v9 = v2;
  v9[1] = sub_24EAC68C4;
  return sub_24EB2B444(a1, v5, v6, v8, v7);
}

uint64_t sub_24EB2CA10()
{
  uint64_t v1 = (int *)(type metadata accessor for AwardToastPresentationFeature() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 49;
  uint64_t v6 = v0 + v3;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v7 = v6 + v1[7];
  uint64_t v8 = sub_24EB3D1F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, v5, v4);
}

uint64_t sub_24EB2CB74(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for AwardToastPresentationFeature() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1 + v5;
  uint64_t v7 = v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_24EAC68C4;
  return sub_24EB2AF20(a1, v6, v7);
}

uint64_t sub_24EB2CC80(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t State = type metadata accessor for AwardImageLoadState();
  uint64_t v37 = *(void *)(State - 8);
  MEMORY[0x270FA5388](State - 8);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D30B8);
  uint64_t result = sub_24EB3DE80();
  uint64_t v10 = result;
  if (*(void *)(v8 + 16))
  {
    int64_t v11 = 0;
    uint64_t v12 = *(void *)(v8 + 64);
    uint64_t v36 = (void *)(v8 + 64);
    uint64_t v13 = 1 << *(unsigned char *)(v8 + 32);
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v12;
    char v34 = v2;
    int64_t v35 = (unint64_t)(v13 + 63) >> 6;
    uint64_t v16 = result + 64;
    while (1)
    {
      if (v15)
      {
        unint64_t v18 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v19 = v18 | (v11 << 6);
      }
      else
      {
        int64_t v20 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v36;
        if (v20 >= v35) {
          goto LABEL_34;
        }
        unint64_t v21 = v36[v20];
        ++v11;
        if (!v21)
        {
          int64_t v11 = v20 + 1;
          if (v20 + 1 >= v35) {
            goto LABEL_34;
          }
          unint64_t v21 = v36[v11];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v35)
            {
LABEL_34:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v34;
                goto LABEL_41;
              }
              uint64_t v33 = 1 << *(unsigned char *)(v8 + 32);
              if (v33 >= 64) {
                bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v36 = -1 << v33;
              }
              uint64_t v3 = v34;
              *(void *)(v8 + 16) = 0;
              break;
            }
            unint64_t v21 = v36[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v11 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_43;
                }
                if (v11 >= v35) {
                  goto LABEL_34;
                }
                unint64_t v21 = v36[v11];
                ++v22;
                if (v21) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v11 = v22;
          }
        }
LABEL_21:
        unint64_t v15 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v11 << 6);
      }
      uint64_t v23 = *(void *)(v8 + 56);
      long long v38 = *(_OWORD *)(*(void *)(v8 + 48) + 16 * v19);
      uint64_t v24 = *(void *)(v37 + 72);
      uint64_t v25 = v23 + v24 * v19;
      if (a2) {
        sub_24EB304D4(v25, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
      }
      else {
        sub_24EB3046C(v25, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
      }
      sub_24EB3E090();
      sub_24EB3E0C0();
      sub_24EB3E0C0();
      uint64_t result = sub_24EB3E0D0();
      uint64_t v26 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v16 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v31 = v28 == v30;
          if (v28 == v30) {
            unint64_t v28 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v16 + 8 * v28);
        }
        while (v32 == -1);
        unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(void *)(v16 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_OWORD *)(*(void *)(v10 + 48) + 16 * v17) = v38;
      uint64_t result = sub_24EB304D4((uint64_t)v7, *(void *)(v10 + 56) + v24 * v17, (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
      ++*(void *)(v10 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_24EB2D03C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t State = type metadata accessor for AwardProgressLoadState();
  uint64_t v42 = *(void *)(State - 8);
  MEMORY[0x270FA5388](State - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D30A8);
  int v43 = a2;
  uint64_t v9 = sub_24EB3DE80();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v41 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v40) {
      break;
    }
    uint64_t v23 = v41;
    unint64_t v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v40) {
        goto LABEL_34;
      }
      unint64_t v24 = v41[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v39;
          if ((v43 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v40) {
              goto LABEL_34;
            }
            unint64_t v24 = v41[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v14 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    uint64_t v26 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v21);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    uint64_t v29 = *(void *)(v42 + 72);
    uint64_t v30 = *(void *)(v8 + 56) + v29 * v21;
    if (v43)
    {
      sub_24EB304D4(v30, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
    }
    else
    {
      sub_24EB3046C(v30, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
      swift_bridgeObjectRetain();
    }
    sub_24EB3E090();
    sub_24EB3DCA0();
    uint64_t result = sub_24EB3E0D0();
    uint64_t v31 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v10 + 48) + 16 * v18);
    *unint64_t v19 = v28;
    v19[1] = v27;
    uint64_t result = sub_24EB304D4((uint64_t)v7, *(void *)(v10 + 56) + v29 * v18, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  uint64_t v23 = v41;
  if ((v43 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v8 + 32);
  if (v38 >= 64) {
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v38;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

void *sub_24EB2D41C()
{
  uint64_t v1 = v0;
  uint64_t State = type metadata accessor for AwardImageLoadState();
  uint64_t v3 = *(void *)(State - 8);
  MEMORY[0x270FA5388](State - 8);
  unint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D30B8);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_24EB3DE70();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v26 = v1;
  uint64_t result = (void *)(v7 + 64);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v10 + 8 * v11) {
    uint64_t result = memmove(result, (const void *)(v6 + 64), 8 * v11);
  }
  int64_t v12 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v6 + 64);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_9;
    }
    int64_t v22 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v22 >= v16) {
      goto LABEL_23;
    }
    unint64_t v23 = *(void *)(v10 + 8 * v22);
    ++v12;
    if (!v23)
    {
      int64_t v12 = v22 + 1;
      if (v22 + 1 >= v16) {
        goto LABEL_23;
      }
      unint64_t v23 = *(void *)(v10 + 8 * v12);
      if (!v23) {
        break;
      }
    }
LABEL_22:
    unint64_t v15 = (v23 - 1) & v23;
    unint64_t v18 = __clz(__rbit64(v23)) + (v12 << 6);
LABEL_9:
    uint64_t v19 = 16 * v18;
    unint64_t v20 = *(void *)(v3 + 72) * v18;
    uint64_t v21 = *(void *)(v6 + 56) + v20;
    long long v27 = *(_OWORD *)(*(void *)(v6 + 48) + 16 * v18);
    sub_24EB3046C(v21, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
    *(_OWORD *)(*(void *)(v8 + 48) + v19) = v27;
    uint64_t result = (void *)sub_24EB304D4((uint64_t)v5, *(void *)(v8 + 56) + v20, (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v16)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v26;
    goto LABEL_25;
  }
  unint64_t v23 = *(void *)(v10 + 8 * v24);
  if (v23)
  {
    int64_t v12 = v24;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_23;
    }
    unint64_t v23 = *(void *)(v10 + 8 * v12);
    ++v24;
    if (v23) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_24EB2D69C()
{
  uint64_t v1 = v0;
  uint64_t State = type metadata accessor for AwardProgressLoadState();
  uint64_t v29 = *(void *)(State - 8);
  MEMORY[0x270FA5388](State - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D30A8);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_24EB3DE70();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  long long v27 = v1;
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v28 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v23 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v28 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 16 * v16;
    unint64_t v18 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v16);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    unint64_t v21 = *(void *)(v29 + 72) * v16;
    sub_24EB3046C(*(void *)(v5 + 56) + v21, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
    int64_t v22 = (void *)(*(void *)(v7 + 48) + v17);
    *int64_t v22 = v19;
    v22[1] = v20;
    sub_24EB304D4((uint64_t)v4, *(void *)(v7 + 56) + v21, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v27;
    goto LABEL_25;
  }
  unint64_t v24 = *(void *)(v28 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_24EB2D930(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t State = type metadata accessor for AwardImageLoadState();
  uint64_t v40 = *(void *)(State - 8);
  uint64_t v9 = MEMORY[0x270FA5388](State - 8);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  unint64_t v13 = (char *)&v38 - v12;
  if (!a3) {
    return MEMORY[0x263F8EE80];
  }
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D30B8);
  uint64_t result = sub_24EB3DE90();
  uint64_t v15 = result;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  if (a2 < 1) {
    unint64_t v16 = 0;
  }
  else {
    unint64_t v16 = *a1;
  }
  uint64_t v17 = 0;
  uint64_t v18 = result + 64;
  while (1)
  {
    if (v16)
    {
      unint64_t v19 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v20 = v19 | (v17 << 6);
    }
    else
    {
      uint64_t v21 = v17 + 1;
      if (__OFADD__(v17, 1)) {
        goto LABEL_40;
      }
      if (v21 >= v39) {
        return v15;
      }
      unint64_t v22 = v38[v21];
      ++v17;
      if (!v22)
      {
        uint64_t v17 = v21 + 1;
        if (v21 + 1 >= v39) {
          return v15;
        }
        unint64_t v22 = v38[v17];
        if (!v22)
        {
          uint64_t v17 = v21 + 2;
          if (v21 + 2 >= v39) {
            return v15;
          }
          unint64_t v22 = v38[v17];
          if (!v22)
          {
            uint64_t v23 = v21 + 3;
            if (v23 >= v39) {
              return v15;
            }
            unint64_t v22 = v38[v23];
            if (!v22)
            {
              while (1)
              {
                uint64_t v17 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v17 >= v39) {
                  return v15;
                }
                unint64_t v22 = v38[v17];
                ++v23;
                if (v22) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v17 = v23;
          }
        }
      }
LABEL_24:
      unint64_t v16 = (v22 - 1) & v22;
      unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
    }
    unint64_t v24 = (uint64_t *)(a4[6] + 16 * v20);
    uint64_t v26 = *v24;
    uint64_t v25 = v24[1];
    uint64_t v27 = *(void *)(v40 + 72);
    sub_24EB3046C(a4[7] + v27 * v20, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
    sub_24EB304D4((uint64_t)v13, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
    sub_24EB3E090();
    sub_24EB3E0C0();
    sub_24EB3E0C0();
    uint64_t result = sub_24EB3E0D0();
    uint64_t v28 = -1 << *(unsigned char *)(v15 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v18 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v31 = __clz(__rbit64((-1 << v29) & ~*(void *)(v18 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v32 = 0;
      unint64_t v33 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v34 = v30 == v33;
        if (v30 == v33) {
          unint64_t v30 = 0;
        }
        v32 |= v34;
        uint64_t v35 = *(void *)(v18 + 8 * v30);
      }
      while (v35 == -1);
      unint64_t v31 = __clz(__rbit64(~v35)) + (v30 << 6);
    }
    *(void *)(v18 + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v31;
    BOOL v36 = (void *)(*(void *)(v15 + 48) + 16 * v31);
    void *v36 = v26;
    v36[1] = v25;
    uint64_t result = sub_24EB304D4((uint64_t)v11, *(void *)(v15 + 56) + v31 * v27, (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
    ++*(void *)(v15 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    if (!a3) {
      return v15;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_24EB2DCC4(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v40 = a1;
  uint64_t State = type metadata accessor for AwardProgressLoadState();
  uint64_t v44 = *(void *)(State - 8);
  uint64_t v8 = MEMORY[0x270FA5388](State - 8);
  MEMORY[0x270FA5388](v8);
  int v43 = (char *)&v38 - v10;
  if (!a3) {
    return MEMORY[0x263F8EE80];
  }
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  uint64_t v42 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D30A8);
  uint64_t result = sub_24EB3DE90();
  uint64_t v12 = result;
  uint64_t v39 = a2;
  if (a2 < 1) {
    unint64_t v13 = 0;
  }
  else {
    unint64_t v13 = *v40;
  }
  uint64_t v14 = 0;
  uint64_t v15 = result + 64;
  uint64_t v16 = v42;
  uint64_t v17 = (uint64_t)v43;
  uint64_t v41 = a4;
  while (1)
  {
    if (v13)
    {
      unint64_t v18 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v19 = v18 | (v14 << 6);
    }
    else
    {
      uint64_t v20 = v14 + 1;
      if (__OFADD__(v14, 1)) {
        goto LABEL_40;
      }
      if (v20 >= v39) {
        return v12;
      }
      unint64_t v21 = v40[v20];
      ++v14;
      if (!v21)
      {
        uint64_t v14 = v20 + 1;
        if (v20 + 1 >= v39) {
          return v12;
        }
        unint64_t v21 = v40[v14];
        if (!v21)
        {
          uint64_t v14 = v20 + 2;
          if (v20 + 2 >= v39) {
            return v12;
          }
          unint64_t v21 = v40[v14];
          if (!v21)
          {
            uint64_t v22 = v20 + 3;
            if (v22 >= v39) {
              return v12;
            }
            unint64_t v21 = v40[v22];
            if (!v21)
            {
              while (1)
              {
                uint64_t v14 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_41;
                }
                if (v14 >= v39) {
                  return v12;
                }
                unint64_t v21 = v40[v14];
                ++v22;
                if (v21) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v14 = v22;
          }
        }
      }
LABEL_24:
      unint64_t v13 = (v21 - 1) & v21;
      unint64_t v19 = __clz(__rbit64(v21)) + (v14 << 6);
    }
    uint64_t v23 = a4[7];
    unint64_t v24 = (uint64_t *)(a4[6] + 16 * v19);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    uint64_t v27 = *(void *)(v44 + 72);
    sub_24EB3046C(v23 + v27 * v19, v17, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
    sub_24EB304D4(v17, v16, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
    sub_24EB3E090();
    swift_bridgeObjectRetain();
    sub_24EB3DCA0();
    uint64_t result = sub_24EB3E0D0();
    uint64_t v28 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v31 = __clz(__rbit64((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v16 = v42;
    }
    else
    {
      char v32 = 0;
      unint64_t v33 = (unint64_t)(63 - v28) >> 6;
      uint64_t v16 = v42;
      do
      {
        if (++v30 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v34 = v30 == v33;
        if (v30 == v33) {
          unint64_t v30 = 0;
        }
        v32 |= v34;
        uint64_t v35 = *(void *)(v15 + 8 * v30);
      }
      while (v35 == -1);
      unint64_t v31 = __clz(__rbit64(~v35)) + (v30 << 6);
    }
    *(void *)(v15 + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v31;
    BOOL v36 = (void *)(*(void *)(v12 + 48) + 16 * v31);
    void *v36 = v25;
    v36[1] = v26;
    uint64_t result = sub_24EB304D4(v16, *(void *)(v12 + 56) + v31 * v27, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
    ++*(void *)(v12 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v41;
    if (!a3) {
      return v12;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_24EB2E078(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D30B0);
  uint64_t result = sub_24EB3DE70();
  uint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v33 = a1;
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v6 = a1 + 64;
  uint64_t v5 = v7;
  uint64_t v8 = 1 << *(unsigned char *)(v6 - 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v5;
  uint64_t v29 = v6;
  int64_t v30 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v31 = result + 64;
  char v32 = (void *)result;
  if (!v10) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v34 = (v10 - 1) & v10;
  int64_t v35 = v4;
  for (unint64_t i = __clz(__rbit64(v10)) | (v4 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v14 << 6))
  {
    uint64_t v16 = (uint64_t *)(*(void *)(v33 + 48) + 16 * i);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    unint64_t v19 = (uint64_t *)(*(void *)(v33 + 56) + 40 * i);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    uint64_t v23 = v19[2];
    uint64_t v22 = v19[3];
    uint64_t v24 = v19[4];
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D31D8);
    uint64_t result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_24EB3E630;
    *(void *)(result + 32) = v20;
    *(void *)(result + 40) = v21;
    *(void *)(result + 48) = v23;
    *(void *)(result + 56) = v22;
    *(void *)(result + 64) = v24;
    uint64_t v3 = v32;
    *(void *)(v31 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v25 = (void *)(v32[6] + 16 * i);
    *uint64_t v25 = v17;
    v25[1] = v18;
    *(void *)(v32[7] + 8 * i) = result;
    uint64_t v26 = v32[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    void v32[2] = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v4 = v35;
    unint64_t v10 = v34;
    if (v34) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_24;
    }
    if (v12 >= v30) {
      return (uint64_t)v3;
    }
    unint64_t v13 = *(void *)(v29 + 8 * v12);
    int64_t v14 = v4 + 1;
    if (!v13)
    {
      int64_t v14 = v4 + 2;
      if (v4 + 2 >= v30) {
        return (uint64_t)v3;
      }
      unint64_t v13 = *(void *)(v29 + 8 * v14);
      if (!v13)
      {
        int64_t v14 = v4 + 3;
        if (v4 + 3 >= v30) {
          return (uint64_t)v3;
        }
        unint64_t v13 = *(void *)(v29 + 8 * v14);
        if (!v13) {
          break;
        }
      }
    }
LABEL_18:
    uint64_t v34 = (v13 - 1) & v13;
    int64_t v35 = v14;
  }
  uint64_t v15 = v4 + 4;
  if (v4 + 4 >= v30) {
    return (uint64_t)v3;
  }
  unint64_t v13 = *(void *)(v29 + 8 * v15);
  if (v13)
  {
    int64_t v14 = v4 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v14 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v14 >= v30) {
      return (uint64_t)v3;
    }
    unint64_t v13 = *(void *)(v29 + 8 * v14);
    ++v15;
    if (v13) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_24EB2E2F4(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for AwardToastPresentationFeature() - 8);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_24EAC68C4;
  return sub_24EB2A668(a1, v5);
}

uint64_t sub_24EB2E3C8()
{
  uint64_t v1 = (int *)(type metadata accessor for AwardToastPresentationFeature() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v6 = v0 + v3;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v7 = v6 + v1[7];
  uint64_t v8 = sub_24EB3D1F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, v5, v4);
}

uint64_t sub_24EB2E510(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for AwardToastPresentationFeature() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1 + v5;
  uint64_t v7 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_24EAC68C4;
  return sub_24EB29188(a1, v6, v7);
}

void *sub_24EB2E61C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3200);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_24EB2E704((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_24EB30464();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

uint64_t sub_24EB2E704(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    long long v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_24EB2E904(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  unint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t objectdestroy_7Tm()
{
  unint64_t v1 = (int *)(type metadata accessor for AwardToastPresentationFeature() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v7 = v6 + v1[7];
  uint64_t v8 = sub_24EB3D1F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_24EB2EADC(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for AwardToastPresentationFeature() - 8);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_24EAC5824;
  return sub_24EB28528(a1, v5);
}

uint64_t sub_24EB2EBB0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = *(unsigned char *)(a1 + 16);
  uint64_t v6 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  unsigned int v7 = *(unsigned __int8 *)(a2 + 16);
  switch(v4)
  {
    case -5:
      if (v7 != 251) {
        goto LABEL_13;
      }
      sub_24EB301DC(*(void *)a1, v2, 251);
      uint64_t v8 = v6;
      uint64_t v9 = v5;
      char v10 = -5;
      goto LABEL_15;
    case -4:
      if (v7 != 252) {
        goto LABEL_13;
      }
      sub_24EB301DC(*(void *)a1, v2, 252);
      uint64_t v8 = v6;
      uint64_t v9 = v5;
      char v10 = -4;
      goto LABEL_15;
    case -3:
      if (v7 != 253) {
        goto LABEL_13;
      }
      sub_24EB301DC(*(void *)a1, v2, 253);
      uint64_t v8 = v6;
      uint64_t v9 = v5;
      char v10 = -3;
      goto LABEL_15;
    case -2:
      if (v7 != 254) {
        goto LABEL_13;
      }
      sub_24EB301DC(*(void *)a1, v2, 254);
      uint64_t v8 = v6;
      uint64_t v9 = v5;
      char v10 = -2;
      goto LABEL_15;
    case -1:
      if (v7 != 255) {
        goto LABEL_13;
      }
      sub_24EB301DC(*(void *)a1, v2, 255);
      uint64_t v8 = v6;
      uint64_t v9 = v5;
      char v10 = -1;
LABEL_15:
      sub_24EB301DC(v8, v9, v10);
      char v11 = 1;
      break;
    default:
      if (v7 > 0xFA)
      {
LABEL_13:
        sub_24EB301C8(*(void *)a2, *(void *)(a2 + 8), v7);
        sub_24EB301C8(v3, v2, v4);
        sub_24EB301DC(v3, v2, v4);
        sub_24EB301DC(v6, v5, v7);
        char v11 = 0;
      }
      else
      {
        v15[0] = *(void *)a1;
        v15[1] = v2;
        char v16 = v4;
        v13[0] = v6;
        v13[1] = v5;
        char v14 = v7;
        sub_24EB301C8(v6, v5, v7);
        sub_24EB301C8(v3, v2, v4);
        sub_24EB301C8(v6, v5, v7);
        sub_24EB301C8(v3, v2, v4);
        char v11 = _s13FitnessAwards14AwardToastKindO2eeoiySbAC_ACtFZ_0((uint64_t)v15, v13);
        sub_24EB301DC(v3, v2, v4);
        sub_24EB301DC(v6, v5, v7);
        sub_24EB301DC(v6, v5, v7);
        sub_24EB301DC(v3, v2, v4);
      }
      break;
  }
  return v11 & 1;
}

uint64_t sub_24EB2EE00@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  if (result < 0 || 1 << *(unsigned char *)(a3 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a3 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a3 + 36) == a2)
  {
    uint64_t v4 = *(void *)(a3 + 48) + 40 * result;
    char v5 = *(unsigned char *)(v4 + 32);
    long long v6 = *(_OWORD *)(v4 + 16);
    *(_OWORD *)a4 = *(_OWORD *)v4;
    *(_OWORD *)(a4 + 16) = v6;
    *(unsigned char *)(a4 + 32) = v5;
    return result;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_24EB2EE64(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, char *))
{
  uint64_t v24 = a2;
  uint64_t v29 = a4;
  uint64_t v25 = a1;
  uint64_t State = type metadata accessor for AwardProgressLoadState();
  uint64_t v6 = *(void *)(State - 8);
  uint64_t result = MEMORY[0x270FA5388](State - 8);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = 0;
  uint64_t v11 = *(void *)(a3 + 64);
  uint64_t v26 = 0;
  uint64_t v27 = a3 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  int64_t v28 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_5;
    }
    int64_t v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v20 >= v28) {
      return sub_24EB2DCC4(v25, v24, v26, (void *)a3);
    }
    unint64_t v21 = *(void *)(v27 + 8 * v20);
    ++v10;
    if (!v21)
    {
      int64_t v10 = v20 + 1;
      if (v20 + 1 >= v28) {
        return sub_24EB2DCC4(v25, v24, v26, (void *)a3);
      }
      unint64_t v21 = *(void *)(v27 + 8 * v10);
      if (!v21)
      {
        int64_t v10 = v20 + 2;
        if (v20 + 2 >= v28) {
          return sub_24EB2DCC4(v25, v24, v26, (void *)a3);
        }
        unint64_t v21 = *(void *)(v27 + 8 * v10);
        if (!v21) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v14 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_5:
    int64_t v17 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v16);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_24EB3046C(*(void *)(a3 + 56) + *(void *)(v6 + 72) * v16, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
    swift_bridgeObjectRetain();
    LOBYTE(v18) = v29(v18, v19, v9);
    sub_24EB301F8((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
    uint64_t result = swift_bridgeObjectRelease();
    if (v18)
    {
      *(unint64_t *)((char *)v25 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      if (__OFADD__(v26++, 1))
      {
        __break(1u);
        return sub_24EB2DCC4(v25, v24, v26, (void *)a3);
      }
    }
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v28) {
    return sub_24EB2DCC4(v25, v24, v26, (void *)a3);
  }
  unint64_t v21 = *(void *)(v27 + 8 * v22);
  if (v21)
  {
    int64_t v10 = v22;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v10 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v10 >= v28) {
      return sub_24EB2DCC4(v25, v24, v26, (void *)a3);
    }
    unint64_t v21 = *(void *)(v27 + 8 * v10);
    ++v22;
    if (v21) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_24EB2F10C(uint64_t isStackAllocationSafe, uint64_t (*a2)(uint64_t, uint64_t, char *), uint64_t a3)
{
  uint64_t v6 = isStackAllocationSafe;
  v13[1] = *MEMORY[0x263EF8340];
  char v7 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v8 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    uint64_t v10 = sub_24EB2EE64((void *)((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0)), v8, v6, a2);
    if (v3) {
      swift_willThrow();
    }
    else {
      return v10;
    }
  }
  else
  {
    uint64_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    a3 = sub_24EB2EE64((unint64_t *)v11, v8, v6, a2);
    MEMORY[0x2533497D0](v11, -1, -1);
  }
  return a3;
}

uint64_t _s13FitnessAwards29AwardToastPresentationFeatureV7dispose10localState06sharedI0y8DataFlow05EmptyI0V_AA0cdeI0VztF_0(uint64_t a1)
{
  uint64_t State = type metadata accessor for AwardToastLoadState();
  MEMORY[0x270FA5388](State);
  char v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_24EB3D1F0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  size_t v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = a1 + *(int *)(type metadata accessor for AwardToastPresentationState() + 24);
  sub_24EB3046C(v10, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
  if (swift_getEnumCaseMultiPayload())
  {
    uint64_t v11 = sub_24EB301F8((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v7 + 32))(v9, v5, v6);
    type metadata accessor for AwardToastPresentationFeature();
    char v12 = sub_24EB3D1D0();
    uint64_t v11 = (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
    if (v12)
    {
      sub_24EB301F8(v10, (uint64_t (*)(void))type metadata accessor for AwardToastLoadState);
      uint64_t v11 = swift_storeEnumTagMultiPayload();
    }
  }
  MEMORY[0x270FA5388](v11);
  *(void *)&v16[-16] = v1;
  uint64_t v13 = swift_bridgeObjectRetain();
  uint64_t v14 = sub_24EB2F10C(v13, (uint64_t (*)(uint64_t, uint64_t, char *))sub_24EB301F0, (uint64_t)&v16[-32]);
  swift_bridgeObjectRelease();
  sub_24EB24488(v14, a1);
  return swift_release();
}

unint64_t sub_24EB2F4F8()
{
  unint64_t result = qword_26B1D2CA0;
  if (!qword_26B1D2CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2CA0);
  }
  return result;
}

unint64_t sub_24EB2F550()
{
  unint64_t result = qword_26B1D2C98;
  if (!qword_26B1D2C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2C98);
  }
  return result;
}

unint64_t sub_24EB2F5A8()
{
  unint64_t result = qword_26B1D2B68;
  if (!qword_26B1D2B68)
  {
    type metadata accessor for AwardToastPresentationState();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2B68);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for AwardToastPresentationFeature(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 13);
    uint64_t v6 = a2[17];
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 15);
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    *(void *)(a1 + 136) = v6;
    uint64_t v10 = sub_24EB3D1F0();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v11(v8, v9, v10);
  }
  return a1;
}

uint64_t destroy for AwardToastPresentationFeature(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_24EB3D1F0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for AwardToastPresentationFeature(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  uint64_t v4 = *(void *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  *(void *)(a1 + 136) = v4;
  uint64_t v8 = sub_24EB3D1F0();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v9(v6, v7, v8);
  return a1;
}

void *assignWithCopy for AwardToastPresentationFeature(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_retain();
  swift_release();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_retain();
  swift_release();
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_retain();
  swift_release();
  uint64_t v10 = a2[9];
  a1[8] = a2[8];
  a1[9] = v10;
  swift_retain();
  swift_release();
  uint64_t v11 = a2[11];
  a1[10] = a2[10];
  a1[11] = v11;
  swift_retain();
  swift_release();
  uint64_t v12 = a2[13];
  a1[12] = a2[12];
  a1[13] = v12;
  swift_retain();
  swift_release();
  uint64_t v13 = a2[15];
  a1[14] = a2[14];
  a1[15] = v13;
  swift_retain();
  swift_release();
  uint64_t v14 = a2[17];
  a1[16] = a2[16];
  a1[17] = v14;
  swift_retain();
  swift_release();
  uint64_t v15 = *(int *)(a3 + 20);
  unint64_t v16 = (char *)a1 + v15;
  int64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_24EB3D1F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

_OWORD *initializeWithTake for AwardToastPresentationFeature(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[7];
  a1[6] = a2[6];
  a1[7] = v4;
  a1[8] = a2[8];
  long long v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  long long v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  long long v7 = a2[1];
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  *a1 = *a2;
  a1[1] = v7;
  uint64_t v11 = sub_24EB3D1F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

_OWORD *assignWithTake for AwardToastPresentationFeature(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  a1[4] = a2[4];
  swift_release();
  a1[5] = a2[5];
  swift_release();
  a1[6] = a2[6];
  swift_release();
  a1[7] = a2[7];
  swift_release();
  a1[8] = a2[8];
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  long long v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24EB3D1F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for AwardToastPresentationFeature(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EB2FCE4);
}

uint64_t sub_24EB2FCE4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_24EB3D1F0();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for AwardToastPresentationFeature(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EB2FDA8);
}

void *sub_24EB2FDA8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  long long v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_24EB3D1F0();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_24EB2FE50()
{
  uint64_t result = sub_24EB3D1F0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for AwardToastPresentationFeature.TaskIdentifier(uint64_t result)
{
  unsigned int v1 = *(unsigned __int8 *)(result + 16);
  if (v1 <= 3) {
    return sub_24EAA8E28(*(void *)result, *(void *)(result + 8), v1);
  }
  return result;
}

uint64_t _s13FitnessAwards29AwardToastPresentationFeatureV14TaskIdentifierOwCP_0(uint64_t a1, uint64_t *a2)
{
  unsigned int v3 = *((unsigned __int8 *)a2 + 16);
  if (v3 > 3)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  }
  else
  {
    uint64_t v4 = *a2;
    uint64_t v5 = a2[1];
    sub_24EAB4DA4(*a2, v5, v3);
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v5;
    *(unsigned char *)(a1 + 16) = v3;
  }
  return a1;
}

uint64_t assignWithCopy for AwardToastPresentationFeature.TaskIdentifier(uint64_t a1, long long *a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a1 + 16);
  unsigned int v5 = *((unsigned __int8 *)a2 + 16);
  if (v4 > 3)
  {
    if (v5 <= 3)
    {
      uint64_t v12 = *(void *)a2;
      uint64_t v11 = *((void *)a2 + 1);
      sub_24EAB4DA4(*(void *)a2, v11, v5);
      *(void *)a1 = v12;
      *(void *)(a1 + 8) = v11;
      *(unsigned char *)(a1 + 16) = v5;
      return a1;
    }
LABEL_7:
    long long v13 = *a2;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(_OWORD *)a1 = v13;
    return a1;
  }
  if (v5 > 3)
  {
    sub_24EAA8E28(*(void *)a1, *(void *)(a1 + 8), v4);
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)a2;
  uint64_t v6 = *((void *)a2 + 1);
  sub_24EAB4DA4(*(void *)a2, v6, v5);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v6;
  char v10 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_24EAA8E28(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for AwardToastPresentationFeature.TaskIdentifier(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a1 + 16);
  if (v4 > 3) {
    goto LABEL_5;
  }
  unsigned int v5 = *(unsigned __int8 *)(a2 + 16);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  if (v5 > 3)
  {
    sub_24EAA8E28(v6, v7, v4);
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    return a1;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v5;
  sub_24EAA8E28(v6, v7, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for AwardToastPresentationFeature.TaskIdentifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF8 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 248);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 > 3) {
    unsigned int v4 = (v3 ^ 0xFF) + 1;
  }
  else {
    unsigned int v4 = 0;
  }
  if (v4 >= 6) {
    return v4 - 5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AwardToastPresentationFeature.TaskIdentifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF7)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 0;
    *(_DWORD *)uint64_t result = a2 - 248;
    if (a3 >= 0xF8) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF8) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -5 - a2;
    }
  }
  return result;
}

uint64_t sub_24EB30124(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 16);
  if (v1 > 3) {
    return (v1 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_24EB30138(uint64_t result, unsigned int a2)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 253;
    *(void *)(result + 8) = 0;
  }
  else if (a2)
  {
    *(unsigned char *)(result + 16) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardToastPresentationFeature.TaskIdentifier()
{
  return &type metadata for AwardToastPresentationFeature.TaskIdentifier;
}

unint64_t sub_24EB30174()
{
  unint64_t result = qword_26B1D2CB0;
  if (!qword_26B1D2CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2CB0);
  }
  return result;
}

uint64_t sub_24EB301C8(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 <= 0xFAu) {
    return sub_24EAB4DA4(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_24EB301DC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 <= 0xFAu) {
    return sub_24EAA8E28(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_24EB301F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24EB2BDEC(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_24EB301F8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24EB30258(uint64_t a1)
{
  return a1;
}

uint64_t sub_24EB30304(uint64_t a1)
{
  return a1;
}

uint64_t sub_24EB303B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699335D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EB30418(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 != -1) {
    return sub_24EAA8E28(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_24EB3042C(uint64_t a1)
{
  return a1;
}

uint64_t sub_24EB30464()
{
  return swift_release();
}

uint64_t sub_24EB3046C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24EB304D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_24EB30540(char a1)
{
  unint64_t result = 0xD000000000000016;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0xD000000000000018;
      break;
    case 5:
      unint64_t result = 0x6570704177656976;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24EB305FC()
{
  return sub_24EB30540(*v0);
}

uint64_t sub_24EB30604@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EB31268(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EB3062C(uint64_t a1)
{
  unint64_t v2 = sub_24EB30FBC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB30668(uint64_t a1)
{
  unint64_t v2 = sub_24EB30FBC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB306A4(uint64_t a1)
{
  unint64_t v2 = sub_24EB311B4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB306E0(uint64_t a1)
{
  unint64_t v2 = sub_24EB311B4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB3071C(uint64_t a1)
{
  unint64_t v2 = sub_24EB3110C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB30758(uint64_t a1)
{
  unint64_t v2 = sub_24EB3110C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB30794(uint64_t a1)
{
  unint64_t v2 = sub_24EB31160();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB307D0(uint64_t a1)
{
  unint64_t v2 = sub_24EB31160();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB3080C(uint64_t a1)
{
  unint64_t v2 = sub_24EB310B8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB30848(uint64_t a1)
{
  unint64_t v2 = sub_24EB310B8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB30884(uint64_t a1)
{
  unint64_t v2 = sub_24EB31064();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB308C0(uint64_t a1)
{
  unint64_t v2 = sub_24EB31064();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB308FC(uint64_t a1)
{
  unint64_t v2 = sub_24EB31010();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB30938(uint64_t a1)
{
  unint64_t v2 = sub_24EB31010();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AwardDetailAction.encode(to:)(void *a1, int a2)
{
  int v45 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699335E8);
  uint64_t v41 = *(void *)(v3 - 8);
  uint64_t v42 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v40 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699335F0);
  uint64_t v38 = *(void *)(v5 - 8);
  uint64_t v39 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v37 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699335F8);
  uint64_t v35 = *(void *)(v7 - 8);
  uint64_t v36 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v34 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933600);
  uint64_t v32 = *(void *)(v9 - 8);
  uint64_t v33 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933608);
  uint64_t v31 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933610);
  uint64_t v30 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  int64_t v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933618);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v43 = v18;
  uint64_t v44 = v19;
  MEMORY[0x270FA5388](v18);
  unint64_t v21 = (char *)&v29 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB30FBC();
  sub_24EB3E0F0();
  switch((char)v45)
  {
    case 2:
      char v46 = 0;
      sub_24EB311B4();
      uint64_t v22 = v43;
      sub_24EB3DF70();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v15);
      goto LABEL_9;
    case 3:
      char v49 = 2;
      sub_24EB3110C();
      uint64_t v22 = v43;
      sub_24EB3DF70();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v11, v33);
      goto LABEL_9;
    case 4:
      char v50 = 3;
      sub_24EB310B8();
      uint64_t v26 = v34;
      uint64_t v22 = v43;
      sub_24EB3DF70();
      uint64_t v28 = v35;
      uint64_t v27 = v36;
      goto LABEL_8;
    case 5:
      char v51 = 4;
      sub_24EB31064();
      uint64_t v26 = v37;
      uint64_t v22 = v43;
      sub_24EB3DF70();
      uint64_t v28 = v38;
      uint64_t v27 = v39;
      goto LABEL_8;
    case 6:
      char v52 = 5;
      sub_24EB31010();
      uint64_t v26 = v40;
      uint64_t v22 = v43;
      sub_24EB3DF70();
      uint64_t v28 = v41;
      uint64_t v27 = v42;
LABEL_8:
      (*(void (**)(char *, uint64_t))(v28 + 8))(v26, v27);
LABEL_9:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v21, v22);
      break;
    default:
      char v23 = v45 & 1;
      char v48 = 1;
      sub_24EB31160();
      uint64_t v24 = v43;
      sub_24EB3DF70();
      char v47 = v23;
      sub_24EAD58A4();
      sub_24EB3DFF0();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v14, v12);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v21, v24);
      break;
  }
  return result;
}

unint64_t sub_24EB30FBC()
{
  unint64_t result = qword_269933620;
  if (!qword_269933620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933620);
  }
  return result;
}

unint64_t sub_24EB31010()
{
  unint64_t result = qword_269933628;
  if (!qword_269933628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933628);
  }
  return result;
}

unint64_t sub_24EB31064()
{
  unint64_t result = qword_269933630;
  if (!qword_269933630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933630);
  }
  return result;
}

unint64_t sub_24EB310B8()
{
  unint64_t result = qword_269933638;
  if (!qword_269933638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933638);
  }
  return result;
}

unint64_t sub_24EB3110C()
{
  unint64_t result = qword_269933640;
  if (!qword_269933640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933640);
  }
  return result;
}

unint64_t sub_24EB31160()
{
  unint64_t result = qword_269933648;
  if (!qword_269933648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933648);
  }
  return result;
}

unint64_t sub_24EB311B4()
{
  unint64_t result = qword_269933650;
  if (!qword_269933650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933650);
  }
  return result;
}

uint64_t AwardDetailAction.init(from:)(void *a1)
{
  return sub_24EB314CC(a1);
}

uint64_t sub_24EB31220@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_24EB314CC(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_24EB3124C(void *a1)
{
  return AwardDetailAction.encode(to:)(a1, *v1);
}

uint64_t sub_24EB31268(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000016 && a2 == 0x800000024EB4AD20 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000024EB4AD40 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000024EB4AD60 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024EB4AD80 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000024EB4ADA0 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6570704177656976 && a2 == 0xEC00000064657261)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v5 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    if (v5) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_24EB314CC(void *a1)
{
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699336D8);
  uint64_t v40 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  unint64_t v53 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699336E0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v47 = v3;
  uint64_t v48 = v4;
  MEMORY[0x270FA5388](v3);
  char v52 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699336E8);
  uint64_t v45 = *(void *)(v6 - 8);
  uint64_t v46 = v6;
  MEMORY[0x270FA5388](v6);
  char v50 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699336F0);
  uint64_t v42 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  char v51 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699336F8);
  uint64_t v41 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933700);
  uint64_t v39 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933708);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  int64_t v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1[3];
  uint64_t v54 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_24EB30FBC();
  uint64_t v19 = v55;
  sub_24EB3E0E0();
  if (!v19)
  {
    uint64_t v37 = v11;
    uint64_t v38 = v10;
    uint64_t v20 = v51;
    unint64_t v21 = v52;
    uint64_t v22 = v53;
    uint64_t v55 = v15;
    uint64_t v23 = sub_24EB3DF60();
    if (*(void *)(v23 + 16) == 1)
    {
      switch(*(unsigned char *)(v23 + 32))
      {
        case 1:
          uint64_t v27 = v55;
          char v58 = 1;
          sub_24EB31160();
          uint64_t v28 = v38;
          sub_24EB3DEC0();
          sub_24EAD59A0();
          uint64_t v29 = v43;
          sub_24EB3DF50();
          (*(void (**)(char *, uint64_t))(v41 + 8))(v28, v29);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v27 + 8))(v17, v14);
          uint64_t v18 = v57;
          break;
        case 2:
          uint64_t v30 = v55;
          char v59 = 2;
          sub_24EB3110C();
          sub_24EB3DEC0();
          (*(void (**)(char *, uint64_t))(v42 + 8))(v20, v44);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v14);
          uint64_t v18 = 3;
          break;
        case 3:
          uint64_t v31 = v55;
          char v60 = 3;
          sub_24EB310B8();
          uint64_t v32 = v50;
          sub_24EB3DEC0();
          (*(void (**)(char *, uint64_t))(v45 + 8))(v32, v46);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v31 + 8))(v17, v14);
          uint64_t v18 = 4;
          break;
        case 4:
          uint64_t v33 = v55;
          char v61 = 4;
          sub_24EB31064();
          sub_24EB3DEC0();
          (*(void (**)(char *, uint64_t))(v48 + 8))(v21, v47);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v33 + 8))(v17, v14);
          uint64_t v18 = 5;
          break;
        case 5:
          uint64_t v35 = v55;
          char v62 = 5;
          sub_24EB31010();
          sub_24EB3DEC0();
          (*(void (**)(char *, uint64_t))(v40 + 8))(v22, v49);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v35 + 8))(v17, v14);
          uint64_t v18 = 6;
          break;
        default:
          uint64_t v24 = v55;
          char v56 = 0;
          sub_24EB311B4();
          sub_24EB3DEC0();
          (*(void (**)(char *, uint64_t))(v39 + 8))(v13, v37);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v14);
          uint64_t v18 = 2;
          break;
      }
    }
    else
    {
      uint64_t v18 = sub_24EB3DE40();
      swift_allocError();
      uint64_t v26 = v25;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269931DD8);
      *uint64_t v26 = &type metadata for AwardDetailAction;
      sub_24EB3DED0();
      sub_24EB3DE30();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v18 - 8) + 104))(v26, *MEMORY[0x263F8DCB0], v18);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v17, v14);
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  return v18;
}

uint64_t getEnumTagSinglePayload for AwardDetailAction(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFA)
  {
    unsigned int v2 = a2 + 6;
    if (a2 + 6 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 6;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 6;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x24EB31E78);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 6;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 >= 2) {
    unsigned int v8 = v7 - 1;
  }
  else {
    unsigned int v8 = 0;
  }
  if (v8 >= 6) {
    return v8 - 5;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for AwardDetailAction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 6;
  if (a3 + 6 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFA) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v7 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x24EB31F60);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

uint64_t sub_24EB31F88(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 2) {
    return v1 - 1;
  }
  else {
    return 0;
  }
}

unsigned char *sub_24EB31F9C(unsigned char *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardDetailAction()
{
  return &type metadata for AwardDetailAction;
}

unsigned char *storeEnumTagSinglePayload for AwardDetailAction.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EB32088);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardDetailAction.CodingKeys()
{
  return &type metadata for AwardDetailAction.CodingKeys;
}

ValueMetadata *type metadata accessor for AwardDetailAction.EarnedLoadStateClearedCodingKeys()
{
  return &type metadata for AwardDetailAction.EarnedLoadStateClearedCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for AwardDetailAction.EarnedStateFetchedCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24EB3216CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardDetailAction.EarnedStateFetchedCodingKeys()
{
  return &type metadata for AwardDetailAction.EarnedStateFetchedCodingKeys;
}

ValueMetadata *type metadata accessor for AwardDetailAction.EarnedStateFetchFailedCodingKeys()
{
  return &type metadata for AwardDetailAction.EarnedStateFetchFailedCodingKeys;
}

ValueMetadata *type metadata accessor for AwardDetailAction.FetchEarnedStateCodingKeys()
{
  return &type metadata for AwardDetailAction.FetchEarnedStateCodingKeys;
}

ValueMetadata *type metadata accessor for AwardDetailAction.RefreshSuggestedWorkoutsCodingKeys()
{
  return &type metadata for AwardDetailAction.RefreshSuggestedWorkoutsCodingKeys;
}

ValueMetadata *type metadata accessor for AwardDetailAction.ViewAppearedCodingKeys()
{
  return &type metadata for AwardDetailAction.ViewAppearedCodingKeys;
}

unint64_t sub_24EB321E8()
{
  unint64_t result = qword_269933658;
  if (!qword_269933658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933658);
  }
  return result;
}

unint64_t sub_24EB32240()
{
  unint64_t result = qword_269933660;
  if (!qword_269933660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933660);
  }
  return result;
}

unint64_t sub_24EB32298()
{
  unint64_t result = qword_269933668;
  if (!qword_269933668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933668);
  }
  return result;
}

unint64_t sub_24EB322F0()
{
  unint64_t result = qword_269933670;
  if (!qword_269933670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933670);
  }
  return result;
}

unint64_t sub_24EB32348()
{
  unint64_t result = qword_269933678;
  if (!qword_269933678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933678);
  }
  return result;
}

unint64_t sub_24EB323A0()
{
  unint64_t result = qword_269933680;
  if (!qword_269933680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933680);
  }
  return result;
}

unint64_t sub_24EB323F8()
{
  unint64_t result = qword_269933688;
  if (!qword_269933688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933688);
  }
  return result;
}

unint64_t sub_24EB32450()
{
  unint64_t result = qword_269933690;
  if (!qword_269933690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933690);
  }
  return result;
}

unint64_t sub_24EB324A8()
{
  unint64_t result = qword_269933698;
  if (!qword_269933698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933698);
  }
  return result;
}

unint64_t sub_24EB32500()
{
  unint64_t result = qword_2699336A0;
  if (!qword_2699336A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699336A0);
  }
  return result;
}

unint64_t sub_24EB32558()
{
  unint64_t result = qword_2699336A8;
  if (!qword_2699336A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699336A8);
  }
  return result;
}

unint64_t sub_24EB325B0()
{
  unint64_t result = qword_2699336B0;
  if (!qword_2699336B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699336B0);
  }
  return result;
}

unint64_t sub_24EB32608()
{
  unint64_t result = qword_2699336B8;
  if (!qword_2699336B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699336B8);
  }
  return result;
}

unint64_t sub_24EB32660()
{
  unint64_t result = qword_2699336C0;
  if (!qword_2699336C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699336C0);
  }
  return result;
}

unint64_t sub_24EB326B8()
{
  unint64_t result = qword_2699336C8;
  if (!qword_2699336C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699336C8);
  }
  return result;
}

unint64_t sub_24EB32710()
{
  unint64_t result = qword_2699336D0;
  if (!qword_2699336D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699336D0);
  }
  return result;
}

__n128 AwardToastState.init(toastDetail:layout:isTabSelected:scrollPositionIdentifier:shouldDeepLink:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 40);
  char v9 = *(unsigned char *)(a1 + 48);
  unint64_t v10 = a2->n128_u64[0];
  unsigned __int8 v11 = a2->n128_u8[8];
  *(_OWORD *)a7 = *(_OWORD *)a1;
  *(void *)(a7 + 16) = v7;
  *(_OWORD *)(a7 + 24) = *(_OWORD *)(a1 + 24);
  *(void *)(a7 + 40) = v8;
  *(unsigned char *)(a7 + 48) = v9;
  *(void *)(a7 + 56) = v10;
  *(unsigned char *)(a7 + 64) = v11;
  __n128 result = a2[1];
  *(__n128 *)(a7 + 72) = result;
  *(unsigned char *)(a7 + 88) = a3;
  *(void *)(a7 + 96) = a4;
  *(void *)(a7 + 104) = a5;
  *(unsigned char *)(a7 + 112) = a6;
  return result;
}

uint64_t AwardToastState.toastDetail.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = *(void *)(v1 + 40);
  char v7 = *(unsigned char *)(v1 + 48);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(unsigned char *)(a1 + 48) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 AwardToastState.layout.getter@<Q0>(__n128 *a1@<X8>)
{
  unsigned __int8 v2 = *(unsigned char *)(v1 + 64);
  a1->n128_u64[0] = *(void *)(v1 + 56);
  a1->n128_u8[8] = v2;
  __n128 result = *(__n128 *)(v1 + 72);
  a1[1] = result;
  return result;
}

uint64_t AwardToastState.isTabSelected.getter()
{
  return *(unsigned __int8 *)(v0 + 88);
}

uint64_t AwardToastState.isTabSelected.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 88) = result;
  return result;
}

uint64_t (*AwardToastState.isTabSelected.modify())()
{
  return nullsub_1;
}

uint64_t AwardToastState.scrollPositionIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AwardToastState.scrollPositionIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = a2;
  return result;
}

uint64_t (*AwardToastState.scrollPositionIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t AwardToastState.shouldDeepLink.getter()
{
  return *(unsigned __int8 *)(v0 + 112);
}

uint64_t AwardToastState.shouldDeepLink.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 112) = result;
  return result;
}

uint64_t (*AwardToastState.shouldDeepLink.modify())()
{
  return nullsub_1;
}

unint64_t sub_24EB32924(char a1)
{
  unint64_t result = 0xD000000000000018;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x74756F79616CLL;
      break;
    case 2:
      unint64_t result = 0x6C65536261547369;
      break;
    case 3:
      return result;
    case 4:
      unint64_t result = 0x6544646C756F6873;
      break;
    default:
      unint64_t result = 0x7465447473616F74;
      break;
  }
  return result;
}

unint64_t sub_24EB329F4()
{
  return sub_24EB32924(*v0);
}

uint64_t sub_24EB329FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EB339AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EB32A24(uint64_t a1)
{
  unint64_t v2 = sub_24EB32D40();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB32A60(uint64_t a1)
{
  unint64_t v2 = sub_24EB32D40();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AwardToastState.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933710);
  uint64_t v21 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v6 = *v1;
  long long v22 = v1[1];
  long long v23 = v6;
  uint64_t v8 = *((void *)v1 + 4);
  uint64_t v7 = *((void *)v1 + 5);
  char v9 = *((unsigned char *)v1 + 48);
  uint64_t v20 = *((void *)v1 + 7);
  int v30 = *((unsigned __int8 *)v1 + 64);
  uint64_t v10 = *((void *)v1 + 9);
  uint64_t v11 = *((void *)v1 + 10);
  int v19 = *((unsigned __int8 *)v1 + 88);
  uint64_t v12 = *((void *)v1 + 12);
  uint64_t v17 = *((void *)v1 + 13);
  uint64_t v18 = v12;
  v16[1] = *((unsigned __int8 *)v1 + 112);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB32D40();
  sub_24EB3E0F0();
  long long v25 = v23;
  long long v26 = v22;
  uint64_t v27 = v8;
  uint64_t v28 = v7;
  char v29 = v9;
  char v31 = 0;
  sub_24EAB35F0();
  uint64_t v13 = v24;
  sub_24EB3DFF0();
  if (v13) {
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v5, v3);
  }
  uint64_t v15 = v21;
  *(void *)&long long v25 = v20;
  BYTE8(v25) = v30;
  *(void *)&long long v26 = v10;
  *((void *)&v26 + 1) = v11;
  char v31 = 1;
  sub_24EB32D94();
  sub_24EB3DFF0();
  LOBYTE(v25) = 2;
  sub_24EB3DFC0();
  LOBYTE(v25) = 3;
  sub_24EB3DF80();
  LOBYTE(v25) = 4;
  sub_24EB3DFC0();
  return (*(uint64_t (**)(char *, void))(v15 + 8))(v5, 0);
}

unint64_t sub_24EB32D40()
{
  unint64_t result = qword_269933718;
  if (!qword_269933718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933718);
  }
  return result;
}

unint64_t sub_24EB32D94()
{
  unint64_t result = qword_269933720;
  if (!qword_269933720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933720);
  }
  return result;
}

uint64_t AwardToastState.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933728);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB32D40();
  sub_24EB3E0E0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    char v44 = 0;
    sub_24EAB4A80();
    sub_24EB3DF50();
    uint64_t v10 = v36;
    uint64_t v32 = v37;
    uint64_t v33 = a2;
    uint64_t v11 = v38;
    uint64_t v31 = v39;
    uint64_t v12 = v40;
    uint64_t v13 = v41;
    int v43 = v42;
    char v44 = 1;
    sub_24EB33228();
    uint64_t v35 = v10;
    swift_bridgeObjectRetain();
    uint64_t v34 = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24EB3DF50();
    uint64_t v30 = v13;
    uint64_t v14 = v36;
    LODWORD(v13) = v37;
    uint64_t v15 = v38;
    uint64_t v16 = v39;
    LOBYTE(v36) = 2;
    int v27 = sub_24EB3DF20();
    int v28 = v13;
    uint64_t v29 = v14;
    LOBYTE(v36) = 3;
    uint64_t v17 = sub_24EB3DEE0();
    uint64_t v19 = v18;
    LOBYTE(v36) = 4;
    swift_bridgeObjectRetain();
    LOBYTE(v10) = sub_24EB3DF20();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v20 = v27 & 1;
    int v27 = v10 & 1;
    uint64_t v21 = v35;
    swift_bridgeObjectRetain();
    uint64_t v22 = v34;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v24 = v32;
    long long v23 = v33;
    *uint64_t v33 = v21;
    v23[1] = v24;
    uint64_t v25 = v31;
    v23[2] = v22;
    void v23[3] = v25;
    v23[4] = v12;
    v23[5] = v30;
    *((unsigned char *)v23 + 48) = v43;
    v23[7] = v29;
    *((unsigned char *)v23 + 64) = v28;
    v23[9] = v15;
    v23[10] = v16;
    *((unsigned char *)v23 + 88) = v20;
    v23[12] = v17;
    v23[13] = v19;
    *((unsigned char *)v23 + 112) = v27;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_24EB33228()
{
  unint64_t result = qword_269933730;
  if (!qword_269933730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933730);
  }
  return result;
}

uint64_t sub_24EB3327C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return AwardToastState.init(from:)(a1, a2);
}

uint64_t sub_24EB33294(void *a1)
{
  return AwardToastState.encode(to:)(a1);
}

uint64_t _s13FitnessAwards15AwardToastStateV2eeoiySbAC_ACtFZ_0(long long *a1, long long *a2)
{
  uint64_t v2 = *((void *)a1 + 2);
  uint64_t v3 = *((void *)a1 + 5);
  char v4 = *((unsigned char *)a1 + 48);
  double v5 = *((double *)a1 + 7);
  char v6 = *((unsigned char *)a1 + 64);
  double v8 = *((double *)a1 + 9);
  double v7 = *((double *)a1 + 10);
  int v9 = *((unsigned __int8 *)a1 + 88);
  uint64_t v10 = *((void *)a1 + 12);
  uint64_t v11 = *((void *)a1 + 13);
  int v12 = *((unsigned __int8 *)a1 + 112);
  long long v13 = *a2;
  uint64_t v14 = *((void *)a2 + 2);
  uint64_t v15 = *((void *)a2 + 5);
  char v16 = *((unsigned char *)a2 + 48);
  double v17 = *((double *)a2 + 7);
  int v18 = *((unsigned __int8 *)a2 + 64);
  double v20 = *((double *)a2 + 9);
  double v19 = *((double *)a2 + 10);
  int v21 = *((unsigned __int8 *)a2 + 88);
  uint64_t v23 = *((void *)a2 + 12);
  uint64_t v22 = *((void *)a2 + 13);
  int v24 = *((unsigned __int8 *)a2 + 112);
  long long v33 = *a1;
  uint64_t v34 = v2;
  long long v35 = *(long long *)((char *)a1 + 24);
  uint64_t v36 = v3;
  char v37 = v4;
  long long v28 = v13;
  uint64_t v29 = v14;
  long long v30 = *(long long *)((char *)a2 + 24);
  uint64_t v31 = v15;
  char v32 = v16;
  if ((_s13FitnessAwards16AwardToastDetailV2eeoiySbAC_ACtFZ_0((uint64_t)&v33, (uint64_t)&v28) & 1) == 0) {
    return 0;
  }
  uint64_t result = 0;
  if (v6)
  {
    if (!v18) {
      return result;
    }
  }
  else
  {
    if (v5 == v17) {
      char v26 = v18;
    }
    else {
      char v26 = 1;
    }
    if (v26) {
      return result;
    }
  }
  if (v8 != v20 || v7 != v19 || ((v9 ^ v21) & 1) != 0) {
    return result;
  }
  if (!v11)
  {
    if (!v22) {
      return v12 ^ v24 ^ 1u;
    }
    return 0;
  }
  if (!v22) {
    return 0;
  }
  if (v10 == v23 && v11 == v22) {
    return v12 ^ v24 ^ 1u;
  }
  char v27 = sub_24EB3E010();
  uint64_t result = 0;
  if (v27) {
    return v12 ^ v24 ^ 1u;
  }
  return result;
}

uint64_t destroy for AwardToastState()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AwardToastState(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v6 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v6;
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AwardToastState(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v4 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v4;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  return a1;
}

__n128 __swift_memcpy113_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for AwardToastState(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v5 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for AwardToastState(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 113)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AwardToastState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 112) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 113) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 113) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardToastState()
{
  return &type metadata for AwardToastState;
}

unsigned char *storeEnumTagSinglePayload for AwardToastState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EB3386CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardToastState.CodingKeys()
{
  return &type metadata for AwardToastState.CodingKeys;
}

unint64_t sub_24EB338A8()
{
  unint64_t result = qword_269933738;
  if (!qword_269933738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933738);
  }
  return result;
}

unint64_t sub_24EB33900()
{
  unint64_t result = qword_269933740;
  if (!qword_269933740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933740);
  }
  return result;
}

unint64_t sub_24EB33958()
{
  unint64_t result = qword_269933748;
  if (!qword_269933748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933748);
  }
  return result;
}

uint64_t sub_24EB339AC(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x7465447473616F74 && a2 == 0xEB000000006C6961;
  if (v3 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74756F79616CLL && a2 == 0xE600000000000000 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C65536261547369 && a2 == 0xED00006465746365 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000024EB4ADC0 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6544646C756F6873 && a2 == 0xEE006B6E694C7065)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

BOOL static FontStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_24EB33BF8(char a1)
{
  return *(void *)&aCallout_0[8 * a1];
}

uint64_t sub_24EB33C18(uint64_t a1)
{
  unint64_t v2 = sub_24EB34760();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB33C54(uint64_t a1)
{
  unint64_t v2 = sub_24EB34760();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB33C90()
{
  return sub_24EB33BF8(*v0);
}

uint64_t sub_24EB33C98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EB357DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EB33CC0(uint64_t a1)
{
  unint64_t v2 = sub_24EB34568();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB33CFC(uint64_t a1)
{
  unint64_t v2 = sub_24EB34568();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB33D38(uint64_t a1)
{
  unint64_t v2 = sub_24EB3470C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB33D74(uint64_t a1)
{
  unint64_t v2 = sub_24EB3470C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB33DB0(uint64_t a1)
{
  unint64_t v2 = sub_24EB346B8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB33DEC(uint64_t a1)
{
  unint64_t v2 = sub_24EB346B8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB33E28(uint64_t a1)
{
  unint64_t v2 = sub_24EB345BC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB33E64(uint64_t a1)
{
  unint64_t v2 = sub_24EB345BC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB33EA0(uint64_t a1)
{
  unint64_t v2 = sub_24EB34664();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB33EDC(uint64_t a1)
{
  unint64_t v2 = sub_24EB34664();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB33F18(uint64_t a1)
{
  unint64_t v2 = sub_24EB34610();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB33F54(uint64_t a1)
{
  unint64_t v2 = sub_24EB34610();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FontStyle.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933750);
  uint64_t v40 = *(void *)(v3 - 8);
  uint64_t v41 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v39 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933758);
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v38 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v36 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933760);
  uint64_t v34 = *(void *)(v7 - 8);
  uint64_t v35 = v7;
  MEMORY[0x270FA5388](v7);
  long long v33 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933768);
  uint64_t v31 = *(void *)(v9 - 8);
  uint64_t v32 = v9;
  MEMORY[0x270FA5388](v9);
  long long v30 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933770);
  uint64_t v28 = *(void *)(v11 - 8);
  uint64_t v29 = v11;
  MEMORY[0x270FA5388](v11);
  long long v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933778);
  uint64_t v27 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  char v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933780);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v42 = v17;
  uint64_t v43 = v18;
  MEMORY[0x270FA5388](v17);
  double v20 = (char *)&v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB34568();
  sub_24EB3E0F0();
  switch(v21)
  {
    case 1:
      char v45 = 1;
      sub_24EB3470C();
      uint64_t v22 = v42;
      sub_24EB3DF70();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v29);
      return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v22);
    case 2:
      char v46 = 2;
      sub_24EB346B8();
      uint64_t v23 = v30;
      uint64_t v22 = v42;
      sub_24EB3DF70();
      uint64_t v25 = v31;
      uint64_t v24 = v32;
      goto LABEL_8;
    case 3:
      char v47 = 3;
      sub_24EB34664();
      uint64_t v23 = v33;
      uint64_t v22 = v42;
      sub_24EB3DF70();
      uint64_t v25 = v34;
      uint64_t v24 = v35;
      goto LABEL_8;
    case 4:
      char v48 = 4;
      sub_24EB34610();
      uint64_t v23 = v36;
      uint64_t v22 = v42;
      sub_24EB3DF70();
      uint64_t v25 = v37;
      uint64_t v24 = v38;
      goto LABEL_8;
    case 5:
      char v49 = 5;
      sub_24EB345BC();
      uint64_t v23 = v39;
      uint64_t v22 = v42;
      sub_24EB3DF70();
      uint64_t v25 = v40;
      uint64_t v24 = v41;
LABEL_8:
      (*(void (**)(char *, uint64_t))(v25 + 8))(v23, v24);
      break;
    default:
      char v44 = 0;
      sub_24EB34760();
      uint64_t v22 = v42;
      sub_24EB3DF70();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v16, v14);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v22);
}

unint64_t sub_24EB34568()
{
  unint64_t result = qword_269933788;
  if (!qword_269933788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933788);
  }
  return result;
}

unint64_t sub_24EB345BC()
{
  unint64_t result = qword_269933790;
  if (!qword_269933790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933790);
  }
  return result;
}

unint64_t sub_24EB34610()
{
  unint64_t result = qword_269933798;
  if (!qword_269933798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933798);
  }
  return result;
}

unint64_t sub_24EB34664()
{
  unint64_t result = qword_2699337A0;
  if (!qword_2699337A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699337A0);
  }
  return result;
}

unint64_t sub_24EB346B8()
{
  unint64_t result = qword_2699337A8;
  if (!qword_2699337A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699337A8);
  }
  return result;
}

unint64_t sub_24EB3470C()
{
  unint64_t result = qword_2699337B0;
  if (!qword_2699337B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699337B0);
  }
  return result;
}

unint64_t sub_24EB34760()
{
  unint64_t result = qword_2699337B8;
  if (!qword_2699337B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699337B8);
  }
  return result;
}

uint64_t FontStyle.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v63 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699337C0);
  uint64_t v51 = *(void *)(v3 - 8);
  uint64_t v52 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v66 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699337C8);
  uint64_t v56 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  uint64_t v65 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699337D0);
  uint64_t v59 = *(void *)(v6 - 8);
  uint64_t v60 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v64 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699337D8);
  uint64_t v57 = *(void *)(v8 - 8);
  uint64_t v58 = v8;
  MEMORY[0x270FA5388](v8);
  char v62 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699337E0);
  uint64_t v54 = *(void *)(v10 - 8);
  uint64_t v55 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699337E8);
  uint64_t v53 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699337F0);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a1[3];
  long long v67 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_24EB34568();
  uint64_t v21 = v68;
  sub_24EB3E0E0();
  if (v21) {
    goto LABEL_6;
  }
  uint64_t v49 = v13;
  char v50 = v15;
  uint64_t v22 = v12;
  uint64_t v24 = v64;
  uint64_t v23 = v65;
  uint64_t v25 = v66;
  uint64_t v68 = v16;
  char v26 = v19;
  uint64_t v27 = sub_24EB3DF60();
  if (*(void *)(v27 + 16) != 1)
  {
    uint64_t v34 = sub_24EB3DE40();
    swift_allocError();
    uint64_t v36 = v35;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269931DD8);
    void *v36 = &type metadata for FontStyle;
    uint64_t v37 = v68;
    sub_24EB3DED0();
    sub_24EB3DE30();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v34 - 8) + 104))(v36, *MEMORY[0x263F8DCB0], v34);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v26, v37);
LABEL_6:
    uint64_t v32 = (uint64_t)v67;
    return __swift_destroy_boxed_opaque_existential_1(v32);
  }
  char v28 = *(unsigned char *)(v27 + 32);
  switch(v28)
  {
    case 1:
      char v70 = 1;
      sub_24EB3470C();
      uint64_t v39 = v68;
      sub_24EB3DEC0();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v22, v55);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v26, v39);
      uint64_t v32 = (uint64_t)v67;
      long long v33 = v63;
      break;
    case 2:
      char v40 = *(unsigned char *)(v27 + 32);
      char v71 = 2;
      sub_24EB346B8();
      uint64_t v41 = v62;
      uint64_t v42 = v68;
      sub_24EB3DEC0();
      uint64_t v44 = v57;
      uint64_t v43 = v58;
      goto LABEL_11;
    case 3:
      char v40 = *(unsigned char *)(v27 + 32);
      char v72 = 3;
      sub_24EB34664();
      uint64_t v41 = v24;
      uint64_t v42 = v68;
      sub_24EB3DEC0();
      uint64_t v44 = v59;
      uint64_t v43 = v60;
LABEL_11:
      (*(void (**)(char *, uint64_t))(v44 + 8))(v41, v43);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v26, v42);
      uint64_t v32 = (uint64_t)v67;
      long long v33 = v63;
      char v28 = v40;
      break;
    case 4:
      char v45 = *(unsigned char *)(v27 + 32);
      char v73 = 4;
      sub_24EB34610();
      uint64_t v46 = v68;
      sub_24EB3DEC0();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v23, v61);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v26, v46);
      uint64_t v32 = (uint64_t)v67;
      long long v33 = v63;
      char v28 = v45;
      break;
    case 5:
      uint64_t v65 = (char *)*(unsigned __int8 *)(v27 + 32);
      char v74 = 5;
      sub_24EB345BC();
      uint64_t v47 = v68;
      sub_24EB3DEC0();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v25, v52);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v26, v47);
      uint64_t v32 = (uint64_t)v67;
      long long v33 = v63;
      char v28 = (char)v65;
      break;
    default:
      char v29 = *(unsigned char *)(v27 + 32);
      char v69 = 0;
      sub_24EB34760();
      long long v30 = v50;
      uint64_t v31 = v68;
      sub_24EB3DEC0();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v30, v49);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v26, v31);
      uint64_t v32 = (uint64_t)v67;
      long long v33 = v63;
      char v28 = v29;
      break;
  }
  *long long v33 = v28;
  return __swift_destroy_boxed_opaque_existential_1(v32);
}

uint64_t sub_24EB3503C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FontStyle.init(from:)(a1, a2);
}

uint64_t sub_24EB35054(void *a1)
{
  return FontStyle.encode(to:)(a1);
}

uint64_t FontStyle.hash(into:)()
{
  return sub_24EB3E0A0();
}

uint64_t FontStyle.hashValue.getter()
{
  return sub_24EB3E0D0();
}

unint64_t sub_24EB350E4()
{
  unint64_t result = qword_2699337F8;
  if (!qword_2699337F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699337F8);
  }
  return result;
}

ValueMetadata *type metadata accessor for FontStyle()
{
  return &type metadata for FontStyle;
}

unsigned char *_s13FitnessAwards9FontStyleOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EB3521CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FontStyle.CodingKeys()
{
  return &type metadata for FontStyle.CodingKeys;
}

ValueMetadata *type metadata accessor for FontStyle.CalloutCodingKeys()
{
  return &type metadata for FontStyle.CalloutCodingKeys;
}

ValueMetadata *type metadata accessor for FontStyle.FootnoteCodingKeys()
{
  return &type metadata for FontStyle.FootnoteCodingKeys;
}

ValueMetadata *type metadata accessor for FontStyle.HeadlineCodingKeys()
{
  return &type metadata for FontStyle.HeadlineCodingKeys;
}

ValueMetadata *type metadata accessor for FontStyle.Title2CodingKeys()
{
  return &type metadata for FontStyle.Title2CodingKeys;
}

ValueMetadata *type metadata accessor for FontStyle.Title3CodingKeys()
{
  return &type metadata for FontStyle.Title3CodingKeys;
}

ValueMetadata *type metadata accessor for FontStyle.SubheadlineCodingKeys()
{
  return &type metadata for FontStyle.SubheadlineCodingKeys;
}

unint64_t sub_24EB352B8()
{
  unint64_t result = qword_269933800;
  if (!qword_269933800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933800);
  }
  return result;
}

unint64_t sub_24EB35310()
{
  unint64_t result = qword_269933808;
  if (!qword_269933808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933808);
  }
  return result;
}

unint64_t sub_24EB35368()
{
  unint64_t result = qword_269933810;
  if (!qword_269933810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933810);
  }
  return result;
}

unint64_t sub_24EB353C0()
{
  unint64_t result = qword_269933818;
  if (!qword_269933818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933818);
  }
  return result;
}

unint64_t sub_24EB35418()
{
  unint64_t result = qword_269933820;
  if (!qword_269933820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933820);
  }
  return result;
}

unint64_t sub_24EB35470()
{
  unint64_t result = qword_269933828;
  if (!qword_269933828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933828);
  }
  return result;
}

unint64_t sub_24EB354C8()
{
  unint64_t result = qword_269933830;
  if (!qword_269933830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933830);
  }
  return result;
}

unint64_t sub_24EB35520()
{
  unint64_t result = qword_269933838;
  if (!qword_269933838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933838);
  }
  return result;
}

unint64_t sub_24EB35578()
{
  unint64_t result = qword_269933840;
  if (!qword_269933840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933840);
  }
  return result;
}

unint64_t sub_24EB355D0()
{
  unint64_t result = qword_269933848;
  if (!qword_269933848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933848);
  }
  return result;
}

unint64_t sub_24EB35628()
{
  unint64_t result = qword_269933850;
  if (!qword_269933850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933850);
  }
  return result;
}

unint64_t sub_24EB35680()
{
  unint64_t result = qword_269933858;
  if (!qword_269933858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933858);
  }
  return result;
}

unint64_t sub_24EB356D8()
{
  unint64_t result = qword_269933860;
  if (!qword_269933860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933860);
  }
  return result;
}

unint64_t sub_24EB35730()
{
  unint64_t result = qword_269933868;
  if (!qword_269933868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933868);
  }
  return result;
}

unint64_t sub_24EB35788()
{
  unint64_t result = qword_269933870;
  if (!qword_269933870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933870);
  }
  return result;
}

uint64_t sub_24EB357DC(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x74756F6C6C6163 && a2 == 0xE700000000000000;
  if (v3 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65746F6E746F6F66 && a2 == 0xE800000000000000 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656E696C64616568 && a2 == 0xE800000000000000 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x32656C746974 && a2 == 0xE600000000000000 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x33656C746974 && a2 == 0xE600000000000000 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6C64616568627573 && a2 == 0xEB00000000656E69)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

BOOL static AwardLockupAction.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t AwardLockupAction.hash(into:)()
{
  return sub_24EB3E0A0();
}

uint64_t sub_24EB35A70(char a1)
{
  if (a1) {
    return 0x6570704177656976;
  }
  else {
    return 0x707061546D657469;
  }
}

uint64_t sub_24EB35AB4()
{
  return sub_24EB35A70(*v0);
}

uint64_t sub_24EB35ABC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EB360A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EB35AE4(uint64_t a1)
{
  unint64_t v2 = sub_24EB35F44();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB35B20(uint64_t a1)
{
  unint64_t v2 = sub_24EB35F44();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB35B5C(uint64_t a1)
{
  unint64_t v2 = sub_24EB35FEC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB35B98(uint64_t a1)
{
  unint64_t v2 = sub_24EB35FEC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24EB35BD4(uint64_t a1)
{
  unint64_t v2 = sub_24EB35F98();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB35C10(uint64_t a1)
{
  unint64_t v2 = sub_24EB35F98();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AwardLockupAction.hashValue.getter()
{
  return sub_24EB3E0D0();
}

uint64_t AwardLockupAction.encode(to:)(void *a1, int a2)
{
  int v18 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3118);
  uint64_t v16 = *(void *)(v3 - 8);
  uint64_t v17 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3110);
  uint64_t v6 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3108);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB35F44();
  sub_24EB3E0F0();
  uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v10 + 8);
  if (v18)
  {
    char v20 = 1;
    sub_24EB35F98();
    sub_24EB3DF70();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    char v19 = 0;
    sub_24EB35FEC();
    sub_24EB3DF70();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v15);
  }
  return (*v13)(v12, v9);
}

unint64_t sub_24EB35F44()
{
  unint64_t result = qword_26B1D2998;
  if (!qword_26B1D2998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2998);
  }
  return result;
}

unint64_t sub_24EB35F98()
{
  unint64_t result = qword_26B1D29C0;
  if (!qword_26B1D29C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D29C0);
  }
  return result;
}

unint64_t sub_24EB35FEC()
{
  unint64_t result = qword_269933878;
  if (!qword_269933878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933878);
  }
  return result;
}

uint64_t AwardLockupAction.init(from:)(uint64_t a1)
{
  return sub_24EB361AC(a1) & 1;
}

uint64_t sub_24EB3605C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_24EB361AC(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_24EB3608C(void *a1)
{
  return AwardLockupAction.encode(to:)(a1, *v1);
}

uint64_t sub_24EB360A8(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x707061546D657469 && a2 == 0xEA00000000006465;
  if (v3 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6570704177656976 && a2 == 0xEC00000064657261)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24EB361AC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933890);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v22 = v2;
  uint64_t v23 = v3;
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933898);
  uint64_t v25 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699338A0);
  uint64_t v24 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)a1, *(void *)(a1 + 24));
  sub_24EB35F44();
  uint64_t v12 = v26;
  sub_24EB3E0E0();
  if (v12) {
    goto LABEL_7;
  }
  uint64_t v13 = v25;
  uint64_t v21 = v6;
  uint64_t v26 = a1;
  uint64_t v14 = sub_24EB3DF60();
  if (*(void *)(v14 + 16) != 1)
  {
    uint64_t v16 = sub_24EB3DE40();
    swift_allocError();
    int v18 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269931DD8);
    *int v18 = &type metadata for AwardLockupAction;
    sub_24EB3DED0();
    sub_24EB3DE30();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v16 - 8) + 104))(v18, *MEMORY[0x263F8DCB0], v16);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v9);
    a1 = v26;
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1(a1);
    return a1;
  }
  a1 = *(unsigned __int8 *)(v14 + 32);
  if (a1)
  {
    LODWORD(v25) = *(unsigned __int8 *)(v14 + 32);
    char v28 = 1;
    sub_24EB35F98();
    sub_24EB3DEC0();
    uint64_t v15 = v24;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v22);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v11, v9);
    a1 = v25;
  }
  else
  {
    char v27 = 0;
    sub_24EB35FEC();
    sub_24EB3DEC0();
    uint64_t v19 = v24;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v21);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
  }
  __swift_destroy_boxed_opaque_existential_1(v26);
  return a1;
}

unint64_t sub_24EB36600()
{
  unint64_t result = qword_269933880;
  if (!qword_269933880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933880);
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardLockupAction()
{
  return &type metadata for AwardLockupAction;
}

unsigned char *_s13FitnessAwards17AwardLockupActionOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EB36734);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardLockupAction.CodingKeys()
{
  return &type metadata for AwardLockupAction.CodingKeys;
}

ValueMetadata *type metadata accessor for AwardLockupAction.ItemTappedCodingKeys()
{
  return &type metadata for AwardLockupAction.ItemTappedCodingKeys;
}

ValueMetadata *type metadata accessor for AwardLockupAction.ViewAppearedCodingKeys()
{
  return &type metadata for AwardLockupAction.ViewAppearedCodingKeys;
}

unint64_t sub_24EB36790()
{
  unint64_t result = qword_269933888;
  if (!qword_269933888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933888);
  }
  return result;
}

unint64_t sub_24EB367E8()
{
  unint64_t result = qword_26B1D29B8;
  if (!qword_26B1D29B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D29B8);
  }
  return result;
}

unint64_t sub_24EB36840()
{
  unint64_t result = qword_26B1D29B0;
  if (!qword_26B1D29B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D29B0);
  }
  return result;
}

unint64_t sub_24EB36898()
{
  unint64_t result = qword_26B1D29D0;
  if (!qword_26B1D29D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D29D0);
  }
  return result;
}

unint64_t sub_24EB368F0()
{
  unint64_t result = qword_26B1D29C8;
  if (!qword_26B1D29C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D29C8);
  }
  return result;
}

unint64_t sub_24EB36948()
{
  unint64_t result = qword_26B1D29A8;
  if (!qword_26B1D29A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D29A8);
  }
  return result;
}

unint64_t sub_24EB369A0()
{
  unint64_t result = qword_26B1D29A0;
  if (!qword_26B1D29A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D29A0);
  }
  return result;
}

uint64_t AwardRemoteParticipantStatusMonitorEnvironment.init(makeRemoteBrowsingIdentityUpdatedStream:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

ValueMetadata *type metadata accessor for AwardRemoteParticipantStatusMonitorEnvironment()
{
  return &type metadata for AwardRemoteParticipantStatusMonitorEnvironment;
}

BOOL static AwardDetailLayout.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2 | a2[1] ^ a1[1]) & 1) == 0;
}

FitnessAwards::AwardDetailLayout __swiftcall AwardDetailLayout.init(ignoresTopSafeArea:isScrollable:)(Swift::Bool ignoresTopSafeArea, Swift::Bool isScrollable)
{
  *uint64_t v2 = ignoresTopSafeArea;
  v2[1] = isScrollable;
  result.ignoresTopSafeArea = ignoresTopSafeArea;
  return result;
}

uint64_t AwardDetailLayout.ignoresTopSafeArea.getter()
{
  return *v0;
}

uint64_t AwardDetailLayout.isScrollable.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t sub_24EB36A50(char a1)
{
  if (a1) {
    return 0x6C6C6F7263537369;
  }
  else {
    return 0xD000000000000012;
  }
}

uint64_t sub_24EB36A94()
{
  return sub_24EB36A50(*v0);
}

uint64_t sub_24EB36A9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EB374A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EB36AC4(uint64_t a1)
{
  unint64_t v2 = sub_24EB36CA8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB36B00(uint64_t a1)
{
  unint64_t v2 = sub_24EB36CA8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AwardDetailLayout.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699338A8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v10 = *(unsigned __int8 *)(v1 + 1);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB36CA8();
  sub_24EB3E0F0();
  char v12 = 0;
  sub_24EB3DFC0();
  if (!v2)
  {
    char v11 = 1;
    sub_24EB3DFC0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_24EB36CA8()
{
  unint64_t result = qword_2699338B0;
  if (!qword_2699338B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699338B0);
  }
  return result;
}

uint64_t AwardDetailLayout.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699338B8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB36CA8();
  sub_24EB3E0E0();
  if (!v2)
  {
    char v14 = 0;
    char v9 = sub_24EB3DF20();
    char v13 = 1;
    char v10 = sub_24EB3DF20();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9 & 1;
    a2[1] = v10 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_24EB36EA4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return AwardDetailLayout.init(from:)(a1, a2);
}

uint64_t sub_24EB36EBC(void *a1)
{
  return AwardDetailLayout.encode(to:)(a1);
}

uint64_t AwardDetailLayout.hash(into:)()
{
  return sub_24EB3E0B0();
}

uint64_t AwardDetailLayout.hashValue.getter()
{
  return sub_24EB3E0D0();
}

uint64_t sub_24EB36F74()
{
  return sub_24EB3E0D0();
}

uint64_t sub_24EB36FD4()
{
  return sub_24EB3E0B0();
}

uint64_t sub_24EB37014()
{
  return sub_24EB3E0D0();
}

unint64_t sub_24EB37074()
{
  unint64_t result = qword_2699338C0;
  if (!qword_2699338C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699338C0);
  }
  return result;
}

BOOL sub_24EB370C8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2 | a2[1] ^ a1[1]) & 1) == 0;
}

uint64_t getEnumTagSinglePayload for AwardDetailLayout(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 65281 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65281 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65281;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AwardDetailLayout(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EB37260);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardDetailLayout()
{
  return &type metadata for AwardDetailLayout;
}

unsigned char *storeEnumTagSinglePayload for AwardDetailLayout.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EB37364);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardDetailLayout.CodingKeys()
{
  return &type metadata for AwardDetailLayout.CodingKeys;
}

unint64_t sub_24EB373A0()
{
  unint64_t result = qword_2699338C8;
  if (!qword_2699338C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699338C8);
  }
  return result;
}

unint64_t sub_24EB373F8()
{
  unint64_t result = qword_2699338D0;
  if (!qword_2699338D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699338D0);
  }
  return result;
}

unint64_t sub_24EB37450()
{
  unint64_t result = qword_2699338D8;
  if (!qword_2699338D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699338D8);
  }
  return result;
}

uint64_t sub_24EB374A4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x800000024EB4ADE0 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6C6F7263537369 && a2 == 0xEC000000656C6261)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24EB375A4(uint64_t a1, uint64_t a2)
{
  uint64_t v63 = sub_24EB3D1F0();
  uint64_t v4 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  char v62 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2B00);
  MEMORY[0x270FA5388](v70);
  BOOL v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t State = type metadata accessor for AwardEarnedLoadState();
  uint64_t v73 = *(void *)(State - 8);
  uint64_t v8 = MEMORY[0x270FA5388](State);
  uint64_t v66 = (unsigned __int8 *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v56 - v11;
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v56 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v64 = (char *)&v56 - v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3050);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  char v20 = (int64_t *)((char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = MEMORY[0x270FA5388](v18);
  uint64_t v23 = (int64_t *)((char *)&v56 - v22);
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v71 = 0;
  uint64_t v65 = a1;
  uint64_t v26 = *(void *)(a1 + 64);
  uint64_t v25 = a1 + 64;
  uint64_t v24 = v26;
  uint64_t v27 = 1 << *(unsigned char *)(v25 - 32);
  uint64_t v28 = -1;
  if (v27 < 64) {
    uint64_t v28 = ~(-1 << v27);
  }
  unint64_t v29 = v28 & v24;
  uint64_t v57 = v25;
  uint64_t v58 = (void (**)(char *, unsigned __int8 *, uint64_t))(v4 + 32);
  uint64_t v59 = (void (**)(uint64_t, uint64_t))(v4 + 8);
  uint64_t v60 = v12;
  int64_t v61 = (unint64_t)(v27 + 63) >> 6;
  int64_t v56 = v61 - 1;
  uint64_t v67 = a2;
  uint64_t v68 = v15;
  uint64_t v30 = (uint64_t)v64;
  while (1)
  {
    if (v29)
    {
      uint64_t v72 = (v29 - 1) & v29;
      unint64_t v31 = __clz(__rbit64(v29)) | (v71 << 6);
LABEL_10:
      uint64_t v32 = (uint64_t *)(*(void *)(v65 + 48) + 16 * v31);
      uint64_t v34 = *v32;
      uint64_t v33 = v32[1];
      uint64_t v35 = *(void *)(v65 + 56) + *(void *)(v73 + 72) * v31;
      uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932AA8);
      sub_24EB3ACE4(v35, (uint64_t)v20 + *(int *)(v36 + 48), (uint64_t (*)(void))type metadata accessor for AwardEarnedLoadState);
      *char v20 = v34;
      v20[1] = v33;
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v20, 0, 1, v36);
      swift_bridgeObjectRetain();
      uint64_t v15 = v68;
      goto LABEL_29;
    }
    int64_t v37 = v71 + 1;
    if (__OFADD__(v71, 1))
    {
      __break(1u);
      goto LABEL_47;
    }
    if (v37 < v61)
    {
      unint64_t v38 = *(void *)(v57 + 8 * v37);
      if (v38) {
        goto LABEL_14;
      }
      int64_t v39 = v71 + 2;
      ++v71;
      if (v37 + 1 < v61)
      {
        unint64_t v38 = *(void *)(v57 + 8 * v39);
        if (v38) {
          goto LABEL_17;
        }
        int64_t v71 = v37 + 1;
        if (v37 + 2 < v61)
        {
          unint64_t v38 = *(void *)(v57 + 8 * (v37 + 2));
          if (v38)
          {
            v37 += 2;
            goto LABEL_14;
          }
          int64_t v39 = v37 + 3;
          int64_t v71 = v37 + 2;
          if (v37 + 3 < v61) {
            break;
          }
        }
      }
    }
LABEL_28:
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932AA8);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v20, 1, 1, v40);
    uint64_t v72 = 0;
LABEL_29:
    sub_24EABF928((uint64_t)v20, (uint64_t)v23, &qword_26B1D3050);
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_269932AA8);
    uint64_t v42 = 1;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 48))(v23, 1, v41) == 1) {
      return v42;
    }
    uint64_t v43 = (uint64_t)v23 + *(int *)(v41 + 48);
    uint64_t v44 = *v23;
    uint64_t v45 = v23[1];
    sub_24EB3AD4C(v43, v30, (uint64_t (*)(void))type metadata accessor for AwardEarnedLoadState);
    unint64_t v46 = sub_24EAE9EE0(v44, v45);
    LOBYTE(v44) = v47;
    swift_bridgeObjectRelease();
    if ((v44 & 1) == 0) {
      goto LABEL_43;
    }
    sub_24EB3ACE4(*(void *)(a2 + 56) + *(void *)(v73 + 72) * v46, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for AwardEarnedLoadState);
    uint64_t v48 = &v7[*(int *)(v70 + 48)];
    sub_24EB3ACE4((uint64_t)v15, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for AwardEarnedLoadState);
    sub_24EB3ACE4(v30, (uint64_t)v48, (uint64_t (*)(void))type metadata accessor for AwardEarnedLoadState);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        sub_24EB3ACE4((uint64_t)v7, (uint64_t)v66, (uint64_t (*)(void))type metadata accessor for AwardEarnedLoadState);
        if (swift_getEnumCaseMultiPayload() != 1) {
          goto LABEL_41;
        }
        if (*v66 != *v48)
        {
LABEL_38:
          sub_24EB3ADB4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for AwardEarnedLoadState);
LABEL_42:
          sub_24EB3ADB4((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for AwardEarnedLoadState);
LABEL_43:
          sub_24EB3ADB4(v30, (uint64_t (*)(void))type metadata accessor for AwardEarnedLoadState);
          return 0;
        }
      }
      else if (swift_getEnumCaseMultiPayload() != 2)
      {
        goto LABEL_41;
      }
    }
    else
    {
      uint64_t v50 = (uint64_t)v60;
      sub_24EB3ACE4((uint64_t)v7, (uint64_t)v60, (uint64_t (*)(void))type metadata accessor for AwardEarnedLoadState);
      if (swift_getEnumCaseMultiPayload())
      {
        (*v59)(v50, v63);
        uint64_t v30 = (uint64_t)v64;
LABEL_41:
        sub_24EAB1E00((uint64_t)v7, &qword_26B1D2B00);
        goto LABEL_42;
      }
      uint64_t v52 = v62;
      uint64_t v51 = v63;
      (*v58)(v62, (unsigned __int8 *)v48, v63);
      char v53 = sub_24EB3D1D0();
      uint64_t v54 = *v59;
      (*v59)((uint64_t)v52, v51);
      uint64_t v55 = v51;
      uint64_t v15 = v68;
      v54(v50, v55);
      uint64_t v30 = (uint64_t)v64;
      if ((v53 & 1) == 0) {
        goto LABEL_38;
      }
    }
    sub_24EB3ADB4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for AwardEarnedLoadState);
    sub_24EB3ADB4((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for AwardEarnedLoadState);
    uint64_t result = sub_24EB3ADB4(v30, (uint64_t (*)(void))type metadata accessor for AwardEarnedLoadState);
    a2 = v67;
    unint64_t v29 = v72;
  }
  unint64_t v38 = *(void *)(v57 + 8 * v39);
  if (v38)
  {
LABEL_17:
    int64_t v37 = v39;
LABEL_14:
    int64_t v71 = v37;
    uint64_t v72 = (v38 - 1) & v38;
    unint64_t v31 = __clz(__rbit64(v38)) + (v37 << 6);
    goto LABEL_10;
  }
  while (1)
  {
    int64_t v37 = v39 + 1;
    if (__OFADD__(v39, 1)) {
      break;
    }
    if (v37 >= v61)
    {
      int64_t v71 = v56;
      goto LABEL_28;
    }
    unint64_t v38 = *(void *)(v57 + 8 * v37);
    ++v39;
    if (v38) {
      goto LABEL_14;
    }
  }
LABEL_47:
  __break(1u);
  return result;
}

uint64_t sub_24EB37D80(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v2 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v4 = result + 64;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_22;
    }
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v11 >= v8) {
      return 1;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        return 1;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          return 1;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_22:
    uint64_t v14 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + 8 * v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24EAE9EE0(v15, v16);
    char v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v20 = swift_bridgeObjectRetain();
    char v21 = sub_24EB38CA8(v20, v17);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v21 & 1) == 0) {
      return 0;
    }
  }
  int64_t v13 = v11 + 3;
  if (v13 >= v8) {
    return 1;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      return 1;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_21;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_24EB37F4C(uint64_t a1, uint64_t a2)
{
  uint64_t v92 = sub_24EB3D1F0();
  uint64_t v4 = *(void *)(v92 - 8);
  MEMORY[0x270FA5388](v92);
  uint64_t v91 = (char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2B50);
  MEMORY[0x270FA5388](v6);
  int64_t v8 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t State = type metadata accessor for AwardProgressLoadState();
  uint64_t v99 = *(void *)(State - 8);
  uint64_t v100 = State;
  uint64_t v10 = MEMORY[0x270FA5388](State);
  uint64_t v93 = (uint64_t)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v81 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v101 = (uint64_t)&v81 - v16;
  MEMORY[0x270FA5388](v15);
  char v18 = (char *)&v81 - v17;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3058);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (int64_t *)((char *)&v81 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = MEMORY[0x270FA5388](v20);
  uint64_t v25 = (int64_t *)((char *)&v81 - v24);
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v88 = v14;
  int64_t v97 = 0;
  uint64_t v26 = *(void *)(a1 + 64);
  uint64_t v83 = a1 + 64;
  uint64_t v27 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v28 = -1;
  if (v27 < 64) {
    uint64_t v28 = ~(-1 << v27);
  }
  unint64_t v29 = v28 & v26;
  unint64_t v86 = (void (**)(char *, uint64_t, uint64_t))(v4 + 32);
  uint64_t v87 = (void (**)(uint64_t, uint64_t))(v4 + 8);
  int64_t v89 = (unint64_t)(v27 + 63) >> 6;
  int64_t v81 = v89 - 1;
  uint64_t v95 = a1;
  uint64_t v96 = v18;
  uint64_t v94 = v6;
  uint64_t v85 = v8;
  uint64_t v84 = a2;
  while (1)
  {
    if (v29)
    {
      uint64_t v98 = (v29 - 1) & v29;
      unint64_t v31 = __clz(__rbit64(v29)) | (v97 << 6);
LABEL_10:
      uint64_t v32 = *(void *)(a1 + 56);
      uint64_t v33 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v31);
      uint64_t v35 = *v33;
      uint64_t v34 = v33[1];
      uint64_t v36 = v32 + *(void *)(v99 + 72) * v31;
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D1F30);
      sub_24EB3ACE4(v36, (uint64_t)v22 + *(int *)(v37 + 48), (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
      *uint64_t v22 = v35;
      v22[1] = v34;
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v22, 0, 1, v37);
      swift_bridgeObjectRetain();
      char v18 = v96;
      goto LABEL_29;
    }
    int64_t v38 = v97 + 1;
    if (__OFADD__(v97, 1))
    {
      __break(1u);
      goto LABEL_66;
    }
    if (v38 < v89)
    {
      unint64_t v39 = *(void *)(v83 + 8 * v38);
      if (v39) {
        goto LABEL_14;
      }
      int64_t v40 = v97 + 2;
      ++v97;
      if (v38 + 1 < v89)
      {
        unint64_t v39 = *(void *)(v83 + 8 * v40);
        if (v39) {
          goto LABEL_17;
        }
        int64_t v97 = v38 + 1;
        if (v38 + 2 < v89)
        {
          unint64_t v39 = *(void *)(v83 + 8 * (v38 + 2));
          if (v39)
          {
            v38 += 2;
            goto LABEL_14;
          }
          int64_t v40 = v38 + 3;
          int64_t v97 = v38 + 2;
          if (v38 + 3 < v89) {
            break;
          }
        }
      }
    }
LABEL_28:
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D1F30);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v22, 1, 1, v41);
    uint64_t v98 = 0;
LABEL_29:
    sub_24EABF928((uint64_t)v22, (uint64_t)v25, &qword_26B1D3058);
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D1F30);
    uint64_t v43 = 1;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 48))(v25, 1, v42) == 1) {
      return v43;
    }
    uint64_t v44 = (uint64_t)v25 + *(int *)(v42 + 48);
    uint64_t v45 = *v25;
    uint64_t v46 = v25[1];
    sub_24EB3AD4C(v44, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
    unint64_t v47 = sub_24EAE9EE0(v45, v46);
    char v49 = v48;
    swift_bridgeObjectRelease();
    if ((v49 & 1) == 0) {
      goto LABEL_62;
    }
    uint64_t v50 = v101;
    sub_24EB3ACE4(*(void *)(a2 + 56) + *(void *)(v99 + 72) * v47, v101, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
    uint64_t v51 = (uint64_t)&v8[*(int *)(v6 + 48)];
    sub_24EB3ACE4(v50, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
    sub_24EB3ACE4((uint64_t)v18, v51, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v53 = v93;
        sub_24EB3ACE4((uint64_t)v8, v93, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
        uint64_t v55 = *(void *)v53;
        uint64_t v54 = *(void *)(v53 + 8);
        uint64_t v56 = *(uint64_t *)(v53 + 16);
        uint64_t v57 = *(void *)(v53 + 24);
        char v58 = *(unsigned char *)(v53 + 32);
        if (swift_getEnumCaseMultiPayload() != 1)
        {
          sub_24EAB1A70(v55, v54, v56, v57, v58);
          char v18 = v96;
          goto LABEL_56;
        }
        uint64_t v60 = *(void *)v51;
        uint64_t v59 = *(void *)(v51 + 8);
        uint64_t v62 = *(void *)(v51 + 16);
        uint64_t v61 = *(void *)(v51 + 24);
        if (v58)
        {
          if ((*(unsigned char *)(v51 + 32) & 1) == 0)
          {
            uint64_t v78 = *(void *)v51;
            uint64_t v79 = *(void *)(v51 + 8);
            uint64_t v80 = *(void *)(v51 + 16);
LABEL_59:
            sub_24EAB1A70(v78, v79, v80, v61, 0);
            int64_t v8 = v85;
            char v18 = v96;
LABEL_60:
            sub_24EB3ADB4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
            goto LABEL_61;
          }
          BOOL v63 = (v54 & 1) == 0;
          BOOL v64 = v55 == v60;
          int64_t v8 = v85;
          a2 = v84;
          a1 = v95;
          char v18 = v96;
          uint64_t v6 = v94;
          if (!v64 || ((v63 ^ v59) & 1) == 0 || v56 != *(void *)(v51 + 16)) {
            goto LABEL_60;
          }
        }
        else
        {
          if (*(unsigned char *)(v51 + 32))
          {
            uint64_t v78 = v55;
            uint64_t v79 = v54;
            uint64_t v80 = v56;
            uint64_t v61 = v57;
            goto LABEL_59;
          }
          double v75 = *(double *)&v57;
          double v76 = *(double *)(v51 + 16);
          uint64_t v77 = *(uint64_t *)(v51 + 24);
          if (v55 == v60 && v54 == v59)
          {
            sub_24EAB1A70(v55, v54, v56, v57, 0);
            sub_24EAB1A70(v55, v54, v62, v77, 0);
            int64_t v8 = v85;
            a2 = v84;
            a1 = v95;
            char v18 = v96;
            uint64_t v6 = v94;
            if (*(double *)&v56 != v76) {
              goto LABEL_60;
            }
          }
          else
          {
            uint64_t v82 = *(void *)(v51 + 8);
            int v90 = sub_24EB3E010();
            sub_24EAB1A70(v55, v54, v56, v57, 0);
            sub_24EAB1A70(v60, v82, v62, v77, 0);
            int64_t v8 = v85;
            a2 = v84;
            a1 = v95;
            char v18 = v96;
            uint64_t v6 = v94;
            if ((v90 & 1) == 0 || *(double *)&v56 != v76) {
              goto LABEL_60;
            }
          }
          if (v75 != *(double *)&v77) {
            goto LABEL_60;
          }
        }
      }
      else
      {
        int v30 = swift_getEnumCaseMultiPayload();
        a1 = v95;
        if (v30 != 2) {
          goto LABEL_56;
        }
      }
    }
    else
    {
      uint64_t v65 = v18;
      uint64_t v66 = (uint64_t)v8;
      uint64_t v67 = v25;
      uint64_t v68 = v22;
      char v69 = (char *)v66;
      uint64_t v70 = (uint64_t)v88;
      sub_24EB3ACE4(v66, (uint64_t)v88, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
      if (swift_getEnumCaseMultiPayload())
      {
        (*v87)(v70, v92);
        int64_t v8 = v69;
        char v18 = v65;
LABEL_56:
        sub_24EAB1E00((uint64_t)v8, &qword_26B1D2B50);
LABEL_61:
        sub_24EB3ADB4(v101, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
LABEL_62:
        sub_24EB3ADB4((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
        return 0;
      }
      uint64_t v72 = v91;
      uint64_t v71 = v92;
      (*v86)(v91, v51, v92);
      int v90 = sub_24EB3D1D0();
      uint64_t v73 = *v87;
      char v74 = v72;
      uint64_t v6 = v94;
      (*v87)((uint64_t)v74, v71);
      v73(v70, v71);
      uint64_t v22 = v68;
      uint64_t v25 = v67;
      int64_t v8 = v69;
      a1 = v95;
      char v18 = v65;
      if ((v90 & 1) == 0) {
        goto LABEL_60;
      }
    }
    sub_24EB3ADB4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
    sub_24EB3ADB4(v101, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
    uint64_t result = sub_24EB3ADB4((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for AwardProgressLoadState);
    unint64_t v29 = v98;
  }
  unint64_t v39 = *(void *)(v83 + 8 * v40);
  if (v39)
  {
LABEL_17:
    int64_t v38 = v40;
LABEL_14:
    int64_t v97 = v38;
    uint64_t v98 = (v39 - 1) & v39;
    unint64_t v31 = __clz(__rbit64(v39)) + (v38 << 6);
    goto LABEL_10;
  }
  while (1)
  {
    int64_t v38 = v40 + 1;
    if (__OFADD__(v40, 1)) {
      break;
    }
    if (v38 >= v89)
    {
      int64_t v97 = v81;
      goto LABEL_28;
    }
    unint64_t v39 = *(void *)(v83 + 8 * v38);
    ++v40;
    if (v39) {
      goto LABEL_14;
    }
  }
LABEL_66:
  __break(1u);
  return result;
}

unint64_t sub_24EB38918(unint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v2 = a2;
  unint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  unint64_t v33 = result + 64;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  int64_t v37 = 0;
  int64_t v34 = (unint64_t)(v4 + 63) >> 6;
  unint64_t v6 = v5 & *(void *)(result + 64);
  if (v6) {
    goto LABEL_9;
  }
LABEL_10:
  int64_t v8 = v37 + 1;
  if (!__OFADD__(v37, 1))
  {
    if (v8 < v34)
    {
      unint64_t v9 = *(void *)(v33 + 8 * v8);
      int64_t v10 = v37 + 1;
      if (v9) {
        goto LABEL_23;
      }
      int64_t v10 = v37 + 2;
      if (v37 + 2 >= v34) {
        return 1;
      }
      unint64_t v9 = *(void *)(v33 + 8 * v10);
      if (v9) {
        goto LABEL_23;
      }
      int64_t v10 = v37 + 3;
      if (v37 + 3 >= v34) {
        return 1;
      }
      unint64_t v9 = *(void *)(v33 + 8 * v10);
      if (v9)
      {
LABEL_23:
        int64_t v37 = v10;
        uint64_t v38 = (v9 - 1) & v9;
        for (unint64_t i = __clz(__rbit64(v9)) + (v10 << 6); ; unint64_t i = __clz(__rbit64(v6)) | (v37 << 6))
        {
          uint64_t v12 = (uint64_t *)(*(void *)(v3 + 48) + 16 * i);
          uint64_t v13 = *v12;
          uint64_t v14 = v12[1];
          unint64_t v15 = *(void *)(*(void *)(v3 + 56) + 8 * i);
          swift_bridgeObjectRetain();
          sub_24EAA8EB8(v15);
          unint64_t v16 = sub_24EAE9EE0(v13, v14);
          char v18 = v17;
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
LABEL_50:
            sub_24EAA8EF4(v15);
            return 0;
          }
          uint64_t result = *(void *)(*(void *)(v2 + 56) + 8 * v16);
          if (!result) {
            break;
          }
          if (result == 1)
          {
            if (v15 != 1) {
              goto LABEL_50;
            }
LABEL_8:
            unint64_t v6 = v38;
            if (!v38) {
              goto LABEL_10;
            }
            goto LABEL_9;
          }
          if (v15 < 2) {
            goto LABEL_50;
          }
          uint64_t v19 = *(void *)(result + 16);
          if (v19 != *(void *)(v15 + 16)) {
            goto LABEL_50;
          }
          if (v19) {
            BOOL v20 = result == v15;
          }
          else {
            BOOL v20 = 1;
          }
          if (!v20)
          {
            unint64_t v30 = v3;
            uint64_t v31 = v2;
            uint64_t result = swift_bridgeObjectRetain();
            unint64_t v21 = 0;
            uint64_t v22 = (uint64_t *)(v15 + 64);
            unint64_t v32 = result;
            uint64_t v23 = (uint64_t *)(result + 64);
            uint64_t v35 = v19;
            unint64_t v36 = v15;
            while (v21 < *(void *)(v15 + 16))
            {
              uint64_t v24 = *(v23 - 2);
              uint64_t v25 = *(v23 - 1);
              uint64_t v26 = *v23;
              uint64_t v27 = *(v22 - 2);
              uint64_t v28 = *(v22 - 1);
              uint64_t v39 = *v22;
              if ((*(v23 - 4) != *(v22 - 4) || *(v23 - 3) != *(v22 - 3)) && (sub_24EB3E010() & 1) == 0) {
                goto LABEL_49;
              }
              if ((v24 != v27 || v25 != v28) && (sub_24EB3E010() & 1) == 0) {
                goto LABEL_49;
              }
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              char v29 = sub_24EAE5FDC(v26, v39);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t result = swift_bridgeObjectRelease();
              if ((v29 & 1) == 0)
              {
LABEL_49:
                sub_24EAA8EF4(v32);
                unint64_t v15 = v36;
                goto LABEL_50;
              }
              ++v21;
              v22 += 5;
              v23 += 5;
              unint64_t v15 = v36;
              if (v35 == v21)
              {
                sub_24EAA8EF4(v32);
                unint64_t v3 = v30;
                uint64_t v2 = v31;
                goto LABEL_34;
              }
            }
            __break(1u);
            goto LABEL_53;
          }
LABEL_34:
          uint64_t result = sub_24EAA8EF4(v15);
          unint64_t v6 = v38;
          if (!v38) {
            goto LABEL_10;
          }
LABEL_9:
          uint64_t v38 = (v6 - 1) & v6;
        }
        if (v15) {
          goto LABEL_50;
        }
        goto LABEL_8;
      }
      int64_t v11 = v37 + 4;
      if (v37 + 4 < v34)
      {
        unint64_t v9 = *(void *)(v33 + 8 * v11);
        if (v9)
        {
          int64_t v10 = v37 + 4;
          goto LABEL_23;
        }
        while (1)
        {
          int64_t v10 = v11 + 1;
          if (__OFADD__(v11, 1)) {
            goto LABEL_54;
          }
          if (v10 >= v34) {
            return 1;
          }
          unint64_t v9 = *(void *)(v33 + 8 * v10);
          ++v11;
          if (v9) {
            goto LABEL_23;
          }
        }
      }
    }
    return 1;
  }
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
  return result;
}

uint64_t sub_24EB38CA8(uint64_t a1, uint64_t a2)
{
  uint64_t v80 = sub_24EB3D190();
  uint64_t v4 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80);
  uint64_t v78 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_24EB3D1F0();
  uint64_t v6 = *(void *)(v79 - 8);
  MEMORY[0x270FA5388](v79);
  uint64_t v77 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2A60);
  MEMORY[0x270FA5388](v85);
  unint64_t v9 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t State = type metadata accessor for AwardImageLoadState();
  uint64_t v88 = *(void *)(State - 8);
  uint64_t v11 = MEMORY[0x270FA5388](State);
  uint64_t v82 = (uint64_t)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v81 = (uint64_t)&v68 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v89 = (uint64_t)&v68 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v90 = (uint64_t)&v68 - v17;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3088);
  uint64_t v19 = MEMORY[0x270FA5388](v18 - 8);
  uint64_t v87 = (char *)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v19);
  unint64_t v86 = (double *)((char *)&v68 - v22);
  if (a1 == a2) {
    return 1;
  }
  uint64_t v23 = *(void *)(a1 + 16);
  uint64_t v76 = a2;
  if (v23 != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v83 = a1;
  uint64_t v84 = State;
  int64_t v24 = 0;
  uint64_t v25 = *(void *)(a1 + 64);
  uint64_t v70 = a1 + 64;
  uint64_t v26 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v27 = -1;
  if (v26 < 64) {
    uint64_t v27 = ~(-1 << v26);
  }
  unint64_t v28 = v27 & v25;
  uint64_t v72 = (void (**)(char *, uint64_t, uint64_t))(v4 + 32);
  char v74 = (void (**)(uint64_t, uint64_t))(v4 + 8);
  uint64_t v71 = (void (**)(char *, uint64_t, uint64_t))(v6 + 32);
  uint64_t v73 = (void (**)(uint64_t, uint64_t))(v6 + 8);
  int64_t v75 = (unint64_t)(v26 + 63) >> 6;
  int64_t v69 = v75 - 1;
  uint64_t v29 = v76;
  while (1)
  {
    unint64_t v30 = v87;
    if (v28)
    {
      unint64_t v31 = __clz(__rbit64(v28));
      v28 &= v28 - 1;
      unint64_t v32 = v31 | (v24 << 6);
LABEL_10:
      unint64_t v33 = (uint64_t *)(*(void *)(v83 + 48) + 16 * v32);
      uint64_t v34 = *v33;
      uint64_t v35 = v33[1];
      uint64_t v36 = *(void *)(v83 + 56) + *(void *)(v88 + 72) * v32;
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3080);
      sub_24EB3ACE4(v36, (uint64_t)v30 + *(int *)(v37 + 48), (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
      *unint64_t v30 = v34;
      v30[1] = v35;
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v30, 0, 1, v37);
      goto LABEL_29;
    }
    int64_t v38 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
      __break(1u);
      goto LABEL_48;
    }
    if (v38 < v75)
    {
      unint64_t v39 = *(void *)(v70 + 8 * v38);
      if (v39) {
        goto LABEL_14;
      }
      int64_t v40 = v24 + 2;
      ++v24;
      if (v38 + 1 < v75)
      {
        unint64_t v39 = *(void *)(v70 + 8 * v40);
        if (v39) {
          goto LABEL_17;
        }
        int64_t v24 = v38 + 1;
        if (v38 + 2 < v75)
        {
          unint64_t v39 = *(void *)(v70 + 8 * (v38 + 2));
          if (v39)
          {
            v38 += 2;
            goto LABEL_14;
          }
          int64_t v40 = v38 + 3;
          int64_t v24 = v38 + 2;
          if (v38 + 3 < v75) {
            break;
          }
        }
      }
    }
LABEL_28:
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3080);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v30, 1, 1, v41);
    unint64_t v28 = 0;
LABEL_29:
    uint64_t v42 = (uint64_t)v30;
    uint64_t v43 = v86;
    sub_24EABF928(v42, (uint64_t)v86, &qword_26B1D3088);
    uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D3080);
    uint64_t v45 = 1;
    if ((*(unsigned int (**)(double *, uint64_t, uint64_t))(*(void *)(v44 - 8) + 48))(v43, 1, v44) == 1) {
      return v45;
    }
    double v46 = *v43;
    double v47 = v43[1];
    sub_24EB3AD4C((uint64_t)v43 + *(int *)(v44 + 48), v90, (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
    unint64_t v48 = sub_24EAE9F58(v46, v47);
    if ((v49 & 1) == 0) {
      goto LABEL_44;
    }
    uint64_t v50 = v89;
    sub_24EB3ACE4(*(void *)(v29 + 56) + *(void *)(v88 + 72) * v48, v89, (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
    uint64_t v51 = (uint64_t)&v9[*(int *)(v85 + 48)];
    sub_24EB3ACE4(v50, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
    sub_24EB3ACE4(v90, v51, (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v53 = v82;
        sub_24EB3ACE4((uint64_t)v9, v82, (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
        if (swift_getEnumCaseMultiPayload() != 1)
        {
          (*v74)(v53, v80);
LABEL_42:
          sub_24EAB1E00((uint64_t)v9, &qword_26B1D2A60);
          goto LABEL_43;
        }
        uint64_t v54 = v78;
        uint64_t v55 = v80;
        (*v72)(v78, v51, v80);
        char v56 = MEMORY[0x2533483E0](v53, v54);
        uint64_t v57 = *v74;
        uint64_t v29 = v76;
        (*v74)((uint64_t)v54, v55);
        v57(v53, v55);
        if ((v56 & 1) == 0) {
          goto LABEL_38;
        }
      }
      else if (swift_getEnumCaseMultiPayload() != 2)
      {
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v58 = v81;
      sub_24EB3ACE4((uint64_t)v9, v81, (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
      if (swift_getEnumCaseMultiPayload())
      {
        (*v73)(v58, v79);
        goto LABEL_42;
      }
      int64_t v59 = v24;
      uint64_t v60 = v77;
      uint64_t v61 = v79;
      (*v71)(v77, v51, v79);
      unint64_t v62 = v28;
      uint64_t v63 = v58;
      char v64 = sub_24EB3D1D0();
      uint64_t v65 = *v73;
      uint64_t v66 = v60;
      int64_t v24 = v59;
      (*v73)((uint64_t)v66, v61);
      uint64_t v67 = v63;
      unint64_t v28 = v62;
      v65(v67, v61);
      if ((v64 & 1) == 0)
      {
LABEL_38:
        sub_24EB3ADB4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
LABEL_43:
        sub_24EB3ADB4(v89, (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
LABEL_44:
        sub_24EB3ADB4(v90, (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
        return 0;
      }
    }
    sub_24EB3ADB4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
    sub_24EB3ADB4(v89, (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
    uint64_t result = sub_24EB3ADB4(v90, (uint64_t (*)(void))type metadata accessor for AwardImageLoadState);
  }
  unint64_t v39 = *(void *)(v70 + 8 * v40);
  if (v39)
  {
LABEL_17:
    int64_t v38 = v40;
LABEL_14:
    unint64_t v28 = (v39 - 1) & v39;
    unint64_t v32 = __clz(__rbit64(v39)) + (v38 << 6);
    int64_t v24 = v38;
    goto LABEL_10;
  }
  while (1)
  {
    int64_t v38 = v40 + 1;
    if (__OFADD__(v40, 1)) {
      break;
    }
    if (v38 >= v75)
    {
      int64_t v24 = v69;
      goto LABEL_28;
    }
    unint64_t v39 = *(void *)(v70 + 8 * v38);
    ++v40;
    if (v39) {
      goto LABEL_14;
    }
  }
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_24EB395A8(uint64_t a1, uint64_t a2)
{
  __s1[2] = *MEMORY[0x263EF8340];
  if (a1 == a2) {
    return 1;
  }
  uint64_t v2 = a1;
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v92 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v93 = (unint64_t)(v4 + 63) >> 6;
  while (2)
  {
    if (v6)
    {
      unint64_t v7 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v8 = v7 | (v3 << 6);
      uint64_t v9 = a2;
    }
    else
    {
      int64_t v10 = v3 + 1;
      uint64_t v9 = a2;
      if (__OFADD__(v3, 1))
      {
        __break(1u);
LABEL_140:
        __break(1u);
LABEL_141:
        __break(1u);
LABEL_142:
        __break(1u);
LABEL_143:
        __break(1u);
LABEL_144:
        __break(1u);
LABEL_145:
        __break(1u);
LABEL_146:
        __break(1u);
LABEL_147:
        __break(1u);
LABEL_148:
        __break(1u);
LABEL_149:
        __break(1u);
LABEL_150:
        __break(1u);
LABEL_151:
        __break(1u);
LABEL_152:
        __break(1u);
LABEL_153:
        __break(1u);
LABEL_154:
        __break(1u);
LABEL_155:
        __break(1u);
LABEL_156:
        __break(1u);
LABEL_157:
        __break(1u);
LABEL_158:
        __break(1u);
LABEL_159:
        __break(1u);
LABEL_160:
        __break(1u);
LABEL_161:
        __break(1u);
LABEL_162:
        __break(1u);
LABEL_163:
        __break(1u);
      }
      if (v10 >= v93) {
        return 1;
      }
      unint64_t v11 = *(void *)(v92 + 8 * v10);
      ++v3;
      if (!v11)
      {
        int64_t v3 = v10 + 1;
        if (v10 + 1 >= v93) {
          return 1;
        }
        unint64_t v11 = *(void *)(v92 + 8 * v3);
        if (!v11)
        {
          int64_t v3 = v10 + 2;
          if (v10 + 2 >= v93) {
            return 1;
          }
          unint64_t v11 = *(void *)(v92 + 8 * v3);
          if (!v11)
          {
            int64_t v12 = v10 + 3;
            if (v12 >= v93) {
              return 1;
            }
            unint64_t v11 = *(void *)(v92 + 8 * v12);
            if (!v11)
            {
              while (1)
              {
                int64_t v3 = v12 + 1;
                if (__OFADD__(v12, 1)) {
                  goto LABEL_145;
                }
                if (v3 >= v93) {
                  return 1;
                }
                unint64_t v11 = *(void *)(v92 + 8 * v3);
                ++v12;
                if (v11) {
                  goto LABEL_23;
                }
              }
            }
            int64_t v3 = v12;
          }
        }
      }
LABEL_23:
      unint64_t v6 = (v11 - 1) & v11;
      unint64_t v8 = __clz(__rbit64(v11)) + (v3 << 6);
    }
    uint64_t v13 = 16 * v8;
    uint64_t v14 = (uint64_t *)(*(void *)(v2 + 48) + v13);
    uint64_t v16 = *v14;
    uint64_t v15 = v14[1];
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 56) + v13);
    uint64_t v19 = *v17;
    unint64_t v18 = v17[1];
    swift_bridgeObjectRetain();
    sub_24EAD3F70(v19, v18);
    unint64_t v20 = sub_24EAE9EE0(v16, v15);
    LOBYTE(v16) = v21;
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0) {
      goto LABEL_137;
    }
    unint64_t v22 = v18 >> 62;
    uint64_t v23 = (uint64_t *)(*(void *)(v9 + 56) + 16 * v20);
    uint64_t v25 = *v23;
    unint64_t v24 = v23[1];
    uint64_t v26 = 0;
    switch(v24 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v25), v25)) {
          goto LABEL_140;
        }
        uint64_t v26 = HIDWORD(v25) - (int)v25;
LABEL_30:
        sub_24EAD3F70(v25, v24);
        break;
      case 2uLL:
        uint64_t v28 = *(void *)(v25 + 16);
        uint64_t v27 = *(void *)(v25 + 24);
        uint64_t v26 = v27 - v28;
        if (!__OFSUB__(v27, v28)) {
          goto LABEL_30;
        }
        goto LABEL_141;
      case 3uLL:
        break;
      default:
        uint64_t v26 = BYTE6(v24);
        break;
    }
    switch((int)v22)
    {
      case 1:
        LODWORD(v29) = HIDWORD(v19) - v19;
        if (__OFSUB__(HIDWORD(v19), v19)) {
          goto LABEL_142;
        }
        uint64_t v29 = (int)v29;
LABEL_36:
        if (v26 == v29)
        {
          if (v26 < 1)
          {
LABEL_7:
            sub_24EAD3FC8(v25, v24);
            sub_24EAD3FC8(v19, v18);
            uint64_t v2 = a1;
          }
          else
          {
            switch(v24 >> 62)
            {
              case 1uLL:
                if ((int)v25 > v25 >> 32) {
                  goto LABEL_144;
                }
                int64_t v38 = (char *)sub_24EB3D140();
                if (!v38) {
                  goto LABEL_50;
                }
                uint64_t v39 = sub_24EB3D160();
                if (__OFSUB__((int)v25, v39)) {
                  goto LABEL_147;
                }
                v38 += (int)v25 - v39;
LABEL_50:
                sub_24EB3D150();
                if (!v22)
                {
                  __s1[0] = v19;
                  LOWORD(__s1[1]) = v18;
                  BYTE2(__s1[1]) = BYTE2(v18);
                  BYTE3(__s1[1]) = BYTE3(v18);
                  BYTE4(__s1[1]) = BYTE4(v18);
                  BYTE5(__s1[1]) = BYTE5(v18);
                  if (!v38) {
                    goto LABEL_175;
                  }
                  size_t v55 = BYTE6(v18);
                  uint64_t v57 = __s1;
                  char v56 = v38;
LABEL_120:
                  int v54 = memcmp(v56, v57, v55);
                  goto LABEL_121;
                }
                if (v22 == 1)
                {
                  if (v19 >> 32 < (int)v19) {
                    goto LABEL_155;
                  }
                  swift_retain();
                  int64_t v40 = (char *)sub_24EB3D140();
                  if (v40)
                  {
                    uint64_t v41 = sub_24EB3D160();
                    if (__OFSUB__((int)v19, v41)) {
                      goto LABEL_163;
                    }
                    v40 += (int)v19 - v41;
                  }
                  uint64_t v42 = sub_24EB3D150();
                  if (v42 >= (v19 >> 32) - (int)v19) {
                    size_t v43 = (v19 >> 32) - (int)v19;
                  }
                  else {
                    size_t v43 = v42;
                  }
                  if (!v38) {
                    goto LABEL_165;
                  }
                  uint64_t v2 = a1;
                  if (!v40) {
                    goto LABEL_166;
                  }
                  int v44 = memcmp(v38, v40, v43);
                  sub_24EAD3FC8(v19, v18);
                  sub_24EAD3FC8(v25, v24);
                  sub_24EAD3FC8(v19, v18);
                  if (v44) {
                    return 0;
                  }
                }
                else
                {
                  uint64_t v83 = *(void *)(v19 + 16);
                  uint64_t v91 = *(char **)(v19 + 24);
                  swift_retain();
                  swift_retain();
                  uint64_t v84 = sub_24EB3D140();
                  if (v84)
                  {
                    uint64_t v85 = sub_24EB3D160();
                    if (__OFSUB__(v83, v85)) {
                      goto LABEL_162;
                    }
                    v84 += v83 - v85;
                  }
                  if (__OFSUB__(v91, v83)) {
                    goto LABEL_157;
                  }
                  uint64_t v86 = sub_24EB3D150();
                  if (v86 >= (uint64_t)&v91[-v83]) {
                    uint64_t v87 = &v91[-v83];
                  }
                  else {
                    uint64_t v87 = (char *)v86;
                  }
                  uint64_t v2 = a1;
                  uint64_t v72 = v38;
                  if (!v38) {
                    goto LABEL_176;
                  }
                  if (!v84) {
                    goto LABEL_177;
                  }
                  size_t v71 = (size_t)v87;
                  uint64_t v73 = (const void *)v84;
LABEL_133:
                  int v88 = memcmp(v72, v73, v71);
                  swift_release();
                  swift_release();
                  sub_24EAD3FC8(v25, v24);
                  sub_24EAD3FC8(v19, v18);
                  if (v88) {
                    return 0;
                  }
                }
                continue;
              case 2uLL:
                uint64_t v45 = *(void *)(v25 + 16);
                swift_retain();
                swift_retain();
                uint64_t v46 = sub_24EB3D140();
                if (v46)
                {
                  uint64_t v47 = v46;
                  uint64_t v48 = sub_24EB3D160();
                  if (__OFSUB__(v45, v48)) {
                    goto LABEL_146;
                  }
                  char v49 = (void *)(v47 + v45 - v48);
                }
                else
                {
                  char v49 = 0;
                }
                sub_24EB3D150();
                if (v22)
                {
                  uint64_t v90 = v49;
                  if (v22 == 1)
                  {
                    if (v19 >> 32 < (int)v19) {
                      goto LABEL_150;
                    }
                    swift_retain();
                    uint64_t v58 = (char *)sub_24EB3D140();
                    if (v58)
                    {
                      uint64_t v59 = sub_24EB3D160();
                      if (__OFSUB__((int)v19, v59)) {
                        goto LABEL_161;
                      }
                      v58 += (int)v19 - v59;
                    }
                    uint64_t v60 = sub_24EB3D150();
                    if (v60 >= (v19 >> 32) - (int)v19) {
                      size_t v61 = (v19 >> 32) - (int)v19;
                    }
                    else {
                      size_t v61 = v60;
                    }
                    if (!v49) {
                      goto LABEL_168;
                    }
                    if (!v58) {
                      goto LABEL_169;
                    }
                    int v54 = memcmp(v49, v58, v61);
                    sub_24EAD3FC8(v19, v18);
                    swift_release();
                    swift_release();
LABEL_121:
                    sub_24EAD3FC8(v25, v24);
                    sub_24EAD3FC8(v19, v18);
                    uint64_t v2 = a1;
                    if (v54) {
                      return 0;
                    }
                  }
                  else
                  {
                    uint64_t v76 = *(void *)(v19 + 16);
                    uint64_t v75 = *(void *)(v19 + 24);
                    swift_retain();
                    swift_retain();
                    uint64_t v77 = (char *)sub_24EB3D140();
                    if (v77)
                    {
                      uint64_t v78 = sub_24EB3D160();
                      if (__OFSUB__(v76, v78)) {
                        goto LABEL_160;
                      }
                      v77 += v76 - v78;
                    }
                    BOOL v32 = __OFSUB__(v75, v76);
                    int64_t v79 = v75 - v76;
                    if (v32) {
                      goto LABEL_156;
                    }
                    uint64_t v80 = sub_24EB3D150();
                    if (v80 >= v79) {
                      size_t v81 = v79;
                    }
                    else {
                      size_t v81 = v80;
                    }
                    if (!v90) {
                      goto LABEL_173;
                    }
                    if (!v77) {
                      goto LABEL_174;
                    }
                    int v82 = memcmp(v90, v77, v81);
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_release();
                    sub_24EAD3FC8(v25, v24);
                    sub_24EAD3FC8(v19, v18);
                    uint64_t v2 = a1;
                    if (v82) {
                      return 0;
                    }
                  }
                }
                else
                {
                  __s1[0] = v19;
                  LOWORD(__s1[1]) = v18;
                  BYTE2(__s1[1]) = BYTE2(v18);
                  BYTE3(__s1[1]) = BYTE3(v18);
                  BYTE4(__s1[1]) = BYTE4(v18);
                  BYTE5(__s1[1]) = BYTE5(v18);
                  if (!v49) {
                    goto LABEL_172;
                  }
                  int v74 = memcmp(v49, __s1, BYTE6(v18));
                  swift_release();
                  swift_release();
                  sub_24EAD3FC8(v25, v24);
                  sub_24EAD3FC8(v19, v18);
                  uint64_t v2 = a1;
                  if (v74) {
                    return 0;
                  }
                }
                break;
              case 3uLL:
                memset(__s1, 0, 14);
                if (!v22) {
                  goto LABEL_75;
                }
                if (v22 == 1)
                {
                  uint64_t v33 = (v19 >> 32) - (int)v19;
                  if (v19 >> 32 < (int)v19) {
                    goto LABEL_149;
                  }
                  swift_retain();
                  uint64_t v50 = sub_24EB3D140();
                  if (!v50) {
                    goto LABEL_167;
                  }
                  uint64_t v35 = v50;
                  uint64_t v51 = sub_24EB3D160();
                  uint64_t v37 = (int)v19 - v51;
                  if (__OFSUB__((int)v19, v51)) {
                    goto LABEL_154;
                  }
LABEL_71:
                  uint64_t v52 = sub_24EB3D150();
                  if (v52 >= v33) {
                    size_t v53 = v33;
                  }
                  else {
                    size_t v53 = v52;
                  }
                  int v54 = memcmp(__s1, (const void *)(v35 + v37), v53);
                  sub_24EAD3FC8(v19, v18);
                  goto LABEL_121;
                }
                uint64_t v68 = *(void *)(v19 + 16);
                uint64_t v69 = *(void *)(v19 + 24);
                swift_retain();
                swift_retain();
                uint64_t v64 = sub_24EB3D140();
                if (v64)
                {
                  uint64_t v70 = sub_24EB3D160();
                  if (__OFSUB__(v68, v70)) {
                    goto LABEL_159;
                  }
                  v64 += v68 - v70;
                }
                BOOL v32 = __OFSUB__(v69, v68);
                int64_t v66 = v69 - v68;
                if (v32) {
                  goto LABEL_152;
                }
                uint64_t v67 = sub_24EB3D150();
                uint64_t v2 = a1;
                if (!v64) {
                  goto LABEL_171;
                }
LABEL_100:
                if (v67 >= v66) {
                  size_t v71 = v66;
                }
                else {
                  size_t v71 = v67;
                }
                uint64_t v72 = __s1;
                uint64_t v73 = (const void *)v64;
                goto LABEL_133;
              default:
                __s1[0] = v25;
                LOWORD(__s1[1]) = v24;
                BYTE2(__s1[1]) = BYTE2(v24);
                BYTE3(__s1[1]) = BYTE3(v24);
                BYTE4(__s1[1]) = BYTE4(v24);
                BYTE5(__s1[1]) = BYTE5(v24);
                if (!v22)
                {
LABEL_75:
                  uint64_t v96 = v19;
                  __int16 v97 = v18;
                  char v98 = BYTE2(v18);
                  char v99 = BYTE3(v18);
                  char v100 = BYTE4(v18);
                  size_t v55 = BYTE6(v18);
                  char v101 = BYTE5(v18);
                  char v56 = __s1;
                  uint64_t v57 = &v96;
                  goto LABEL_120;
                }
                if (v22 == 1)
                {
                  uint64_t v33 = (v19 >> 32) - (int)v19;
                  if (v19 >> 32 < (int)v19) {
                    goto LABEL_148;
                  }
                  swift_retain();
                  uint64_t v34 = sub_24EB3D140();
                  if (!v34)
                  {
                    sub_24EB3D150();
                    __break(1u);
LABEL_165:
                    __break(1u);
LABEL_166:
                    __break(1u);
LABEL_167:
                    sub_24EB3D150();
                    __break(1u);
LABEL_168:
                    __break(1u);
LABEL_169:
                    __break(1u);
LABEL_170:
                    __break(1u);
LABEL_171:
                    __break(1u);
LABEL_172:
                    __break(1u);
LABEL_173:
                    __break(1u);
LABEL_174:
                    __break(1u);
LABEL_175:
                    __break(1u);
LABEL_176:
                    __break(1u);
LABEL_177:
                    __break(1u);
                    JUMPOUT(0x24EB3A01CLL);
                  }
                  uint64_t v35 = v34;
                  uint64_t v36 = sub_24EB3D160();
                  uint64_t v37 = (int)v19 - v36;
                  if (__OFSUB__((int)v19, v36)) {
                    goto LABEL_153;
                  }
                  goto LABEL_71;
                }
                uint64_t v62 = *(void *)(v19 + 16);
                uint64_t v63 = *(void *)(v19 + 24);
                swift_retain();
                swift_retain();
                uint64_t v64 = sub_24EB3D140();
                if (v64)
                {
                  uint64_t v65 = sub_24EB3D160();
                  if (__OFSUB__(v62, v65)) {
                    goto LABEL_158;
                  }
                  v64 += v62 - v65;
                }
                BOOL v32 = __OFSUB__(v63, v62);
                int64_t v66 = v63 - v62;
                if (v32) {
                  goto LABEL_151;
                }
                uint64_t v67 = sub_24EB3D150();
                uint64_t v2 = a1;
                if (!v64) {
                  goto LABEL_170;
                }
                goto LABEL_100;
            }
          }
          continue;
        }
LABEL_136:
        sub_24EAD3FC8(v25, v24);
LABEL_137:
        sub_24EAD3FC8(v19, v18);
        return 0;
      case 2:
        uint64_t v31 = *(void *)(v19 + 16);
        uint64_t v30 = *(void *)(v19 + 24);
        BOOL v32 = __OFSUB__(v30, v31);
        uint64_t v29 = v30 - v31;
        if (!v32) {
          goto LABEL_36;
        }
        goto LABEL_143;
      case 3:
        if (!v26) {
          goto LABEL_7;
        }
        goto LABEL_136;
      default:
        uint64_t v29 = BYTE6(v18);
        goto LABEL_36;
    }
  }
}

uint64_t AwardImageState.templateUniqueName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

double AwardImageState.size.getter()
{
  return *(double *)(v0 + 16);
}

uint64_t AwardImageState.imageLoadState.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AwardImageState.imageLoadState.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = a1;
  return result;
}

uint64_t (*AwardImageState.imageLoadState.modify())()
{
  return nullsub_1;
}

uint64_t AwardImageState.init(templateUniqueName:size:imageLoadState:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  *(void *)a4 = result;
  *(void *)(a4 + 8) = a2;
  *(double *)(a4 + 16) = a5;
  *(double *)(a4 + 24) = a6;
  *(void *)(a4 + 32) = a3;
  return result;
}

uint64_t sub_24EB3A0E8(char a1)
{
  if (!a1) {
    return 0xD000000000000012;
  }
  if (a1 == 1) {
    return 1702521203;
  }
  return 0x616F4C6567616D69;
}

uint64_t sub_24EB3A148()
{
  return sub_24EB3A0E8(*v0);
}

uint64_t sub_24EB3A150@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24EB3AB90(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24EB3A178(uint64_t a1)
{
  unint64_t v2 = sub_24EB3A408();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24EB3A1B4(uint64_t a1)
{
  unint64_t v2 = sub_24EB3A408();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AwardImageState.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699338E0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  v12[0] = v1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB3A408();
  sub_24EB3E0F0();
  LOBYTE(v13) = 0;
  uint64_t v9 = v12[1];
  sub_24EB3DFB0();
  if (!v9)
  {
    uint64_t v10 = v12[0];
    uint64_t v13 = v7;
    uint64_t v14 = v8;
    char v15 = 1;
    type metadata accessor for CGSize();
    sub_24EB3A704(&qword_26B1D3090, (void (*)(uint64_t))type metadata accessor for CGSize);
    sub_24EB3DFF0();
    uint64_t v13 = v10;
    char v15 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269932260);
    sub_24EB037F8();
    sub_24EB3DFF0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_24EB3A408()
{
  unint64_t result = qword_2699338E8;
  if (!qword_2699338E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699338E8);
  }
  return result;
}

uint64_t AwardImageState.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699338F0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24EB3A408();
  sub_24EB3E0E0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v16[0]) = 0;
  uint64_t v9 = sub_24EB3DF10();
  uint64_t v11 = v10;
  type metadata accessor for CGSize();
  char v17 = 1;
  sub_24EB3A704(&qword_269931DF8, (void (*)(uint64_t))type metadata accessor for CGSize);
  swift_bridgeObjectRetain();
  sub_24EB3DF50();
  uint64_t v12 = v16[0];
  uint64_t v13 = v16[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_269932260);
  char v17 = 2;
  sub_24EB03B2C();
  sub_24EB3DF50();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v15 = v16[0];
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v12;
  a2[3] = v13;
  a2[4] = v15;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24EB3A704(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24EB3A74C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return AwardImageState.init(from:)(a1, a2);
}

uint64_t sub_24EB3A764(void *a1)
{
  return AwardImageState.encode(to:)(a1);
}

uint64_t _s13FitnessAwards15AwardImageStateV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  double v3 = *(double *)(a1 + 16);
  double v2 = *(double *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  double v6 = *(double *)(a2 + 16);
  double v5 = *(double *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  BOOL v8 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (!v8 && (sub_24EB3E010() & 1) == 0) {
    return 0;
  }
  if (v3 != v6 || v2 != v5) {
    return 0;
  }
  return sub_24EB38CA8(v4, v7);
}

uint64_t destroy for AwardImageState()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AwardImageState(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for AwardImageState(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AwardImageState(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for AwardImageState()
{
  return &type metadata for AwardImageState;
}

unsigned char *storeEnumTagSinglePayload for AwardImageState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24EB3AA50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardImageState.CodingKeys()
{
  return &type metadata for AwardImageState.CodingKeys;
}

unint64_t sub_24EB3AA8C()
{
  unint64_t result = qword_2699338F8;
  if (!qword_2699338F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699338F8);
  }
  return result;
}

unint64_t sub_24EB3AAE4()
{
  unint64_t result = qword_269933900;
  if (!qword_269933900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933900);
  }
  return result;
}

unint64_t sub_24EB3AB3C()
{
  unint64_t result = qword_269933908;
  if (!qword_269933908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269933908);
  }
  return result;
}

uint64_t sub_24EB3AB90(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x800000024EB4A250 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_24EB3E010() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x616F4C6567616D69 && a2 == 0xEE00657461745364)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_24EB3E010();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_24EB3ACE4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24EB3AD4C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24EB3ADB4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

__n128 AwardLockupFeature.init(environment:)@<Q0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  type metadata accessor for AwardLockupFeature();
  sub_24EB3D1E0();
  __n128 result = *(__n128 *)a1;
  long long v5 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v5;
  return result;
}

uint64_t type metadata accessor for AwardLockupFeature()
{
  uint64_t result = qword_26B1D2A08;
  if (!qword_26B1D2A08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t AwardLockupFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, uint64_t *a2, unint64_t *a3, char a4)
{
  int v54 = a3;
  uint64_t v6 = type metadata accessor for AwardLockupFeature();
  uint64_t v51 = *(void *)(v6 - 8);
  uint64_t v7 = *(void *)(v51 + 64);
  uint64_t v8 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v50 - v10;
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1D2FD0);
  uint64_t v12 = *(void *)(v53 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v53);
  uint64_t v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  char v17 = (char *)&v50 - v16;
  uint64_t v18 = *a2;
  uint64_t v19 = a2[1];
  unint64_t v20 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26B1D30A0);
  uint64_t v21 = v20[16];
  uint64_t v22 = v20[20];
  uint64_t v23 = v20[24];
  if (a4)
  {
    uint64_t v50 = &v15[v20[12]];
    int64_t v38 = &v15[v21];
    uint64_t v39 = &v15[v22];
    int64_t v40 = &v15[v23];
    uint64_t v55 = v18;
    uint64_t v56 = v19;
    char v57 = 1;
    sub_24EB3B43C();
    swift_bridgeObjectRetain_n();
    sub_24EB3DDE0();
    uint64_t v41 = *MEMORY[0x263F39590];
    uint64_t v42 = sub_24EB3DB90();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 104))(v38, v41, v42);
    uint64_t v43 = *MEMORY[0x263F39570];
    uint64_t v44 = sub_24EB3DB80();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v44 - 8) + 104))(v39, v43, v44);
    sub_24EB3BBDC(v52, (uint64_t)v9);
    unint64_t v45 = (*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
    uint64_t v46 = swift_allocObject();
    *(void *)(v46 + 16) = v18;
    *(void *)(v46 + 24) = v19;
    sub_24EB3BC44((uint64_t)v9, v46 + v45);
    *(void *)int64_t v40 = &unk_269933918;
    *((void *)v40 + 1) = v46;
    sub_24EB3DD30();
    uint64_t v47 = v53;
    (*(void (**)(char *, void, uint64_t))(v12 + 104))(v15, *MEMORY[0x263F39530], v53);
    uint64_t v33 = v54;
    unint64_t v34 = *v54;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v34 = sub_24EAC5084(0, *(void *)(v34 + 16) + 1, 1, v34);
    }
    unint64_t v49 = *(void *)(v34 + 16);
    unint64_t v48 = *(void *)(v34 + 24);
    if (v49 >= v48 >> 1) {
      unint64_t v34 = sub_24EAC5084(v48 > 1, v49 + 1, 1, v34);
    }
    *(void *)(v34 + 16) = v49 + 1;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v12 + 32))(v34+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v12 + 72) * v49, v15, v47);
  }
  else
  {
    unint64_t v24 = &v17[v21];
    uint64_t v50 = &v17[v22];
    uint64_t v25 = &v17[v23];
    uint64_t v55 = v18;
    uint64_t v56 = v19;
    char v57 = 0;
    sub_24EB3B43C();
    swift_bridgeObjectRetain_n();
    sub_24EB3DDE0();
    uint64_t v26 = *MEMORY[0x263F39580];
    uint64_t v27 = sub_24EB3DB90();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104))(v24, v26, v27);
    sub_24EB3BBDC(v52, (uint64_t)v11);
    unint64_t v28 = (*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = v18;
    *(void *)(v29 + 24) = v19;
    sub_24EB3BC44((uint64_t)v11, v29 + v28);
    *(void *)uint64_t v25 = &unk_269933928;
    *((void *)v25 + 1) = v29;
    sub_24EB3DD30();
    uint64_t v30 = *MEMORY[0x263F39578];
    uint64_t v31 = sub_24EB3DB80();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 104))(v50, v30, v31);
    uint64_t v32 = v53;
    (*(void (**)(char *, void, uint64_t))(v12 + 104))(v17, *MEMORY[0x263F39530], v53);
    uint64_t v33 = v54;
    unint64_t v34 = *v54;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v34 = sub_24EAC5084(0, *(void *)(v34 + 16) + 1, 1, v34);
    }
    unint64_t v36 = *(void *)(v34 + 16);
    unint64_t v35 = *(void *)(v34 + 24);
    if (v36 >= v35 >> 1) {
      unint64_t v34 = sub_24EAC5084(v35 > 1, v36 + 1, 1, v34);
    }
    *(void *)(v34 + 16) = v36 + 1;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v12 + 32))(v34+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v12 + 72) * v36, v17, v32);
  }
  *uint64_t v33 = v34;
  return result;
}

unint64_t sub_24EB3B43C()
{
  unint64_t result = qword_26B1D29F8;
  if (!qword_26B1D29F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D29F8);
  }
  return result;
}

uint64_t sub_24EB3B490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[3] = a2;
  sub_24EB3DD20();
  v4[6] = sub_24EB3DD10();
  uint64_t v6 = sub_24EB3DCF0();
  v4[7] = v6;
  v4[8] = v5;
  return MEMORY[0x270FA2498](sub_24EB3B52C, v6, v5);
}

uint64_t sub_24EB3B52C()
{
  uint64_t v15 = v0;
  if (qword_26B1D27C0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24EB3D2C0();
  __swift_project_value_buffer(v1, (uint64_t)qword_26B1D27A8);
  swift_bridgeObjectRetain_n();
  double v2 = sub_24EB3D2A0();
  os_log_type_t v3 = sub_24EB3DD80();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = *(void *)(v0 + 32);
  if (v4)
  {
    uint64_t v6 = *(void *)(v0 + 24);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v14 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 16) = sub_24EAC5098(v6, v5, &v14);
    sub_24EB3DDB0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24EAA5000, v2, v3, "[AwardLockupFeature] %s lockup tapped, navigating", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533497D0](v8, -1, -1);
    MEMORY[0x2533497D0](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))(**(void **)(v0 + 40) + ***(int ***)(v0 + 40));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_24EB3B798;
  uint64_t v11 = *(void *)(v0 + 24);
  uint64_t v10 = *(void *)(v0 + 32);
  return v13(v11, v10);
}

uint64_t sub_24EB3B798()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = *(void *)(v2 + 56);
  if (v0) {
    unint64_t v5 = sub_24EB3C318;
  }
  else {
    unint64_t v5 = sub_24EAE4218;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_24EB3B8D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[3] = a2;
  sub_24EB3DD20();
  v4[6] = sub_24EB3DD10();
  uint64_t v6 = sub_24EB3DCF0();
  v4[7] = v6;
  v4[8] = v5;
  return MEMORY[0x270FA2498](sub_24EB3B970, v6, v5);
}

uint64_t sub_24EB3B970()
{
  uint64_t v15 = v0;
  if (qword_26B1D27C0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24EB3D2C0();
  __swift_project_value_buffer(v1, (uint64_t)qword_26B1D27A8);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_24EB3D2A0();
  os_log_type_t v3 = sub_24EB3DD80();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[4];
  if (v4)
  {
    uint64_t v6 = v0[3];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v14 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    v0[2] = sub_24EAC5098(v6, v5, &v14);
    sub_24EB3DDB0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24EAA5000, v2, v3, "[AwardHeaderFeature] Resolving award description state on viewAppeared for %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533497D0](v8, -1, -1);
    MEMORY[0x2533497D0](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v0[5] + 16) + **(int **)(v0[5] + 16));
  uint64_t v9 = (void *)swift_task_alloc();
  v0[9] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_24EAE298C;
  uint64_t v11 = v0[3];
  uint64_t v10 = v0[4];
  return v13(v11, v10);
}

uint64_t sub_24EB3BBDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AwardLockupFeature();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EB3BC44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AwardLockupFeature();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EB3BCA8(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for AwardLockupFeature() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_24EAC5824;
  return sub_24EB3B8D4(a1, v5, v6, v7);
}

uint64_t sub_24EB3BD94(uint64_t a1, uint64_t *a2, unint64_t *a3, char *a4)
{
  return AwardLockupFeature.reduce(localState:sharedState:sideEffects:action:)(a1, a2, a3, *a4);
}

uint64_t objectdestroyTm_0()
{
  uint64_t v1 = (int *)(type metadata accessor for AwardLockupFeature() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v6 = v0 + v3 + v1[7];
  uint64_t v7 = sub_24EB3D1F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_24EB3BEA4(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for AwardLockupFeature() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_24EAC68C4;
  return sub_24EB3B490(a1, v5, v6, v7);
}

unint64_t sub_24EB3BF90()
{
  unint64_t result = qword_26B1D29E0;
  if (!qword_26B1D29E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D29E0);
  }
  return result;
}

unint64_t sub_24EB3BFE8()
{
  unint64_t result = qword_26B1D29D8;
  if (!qword_26B1D29D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D29D8);
  }
  return result;
}

unint64_t sub_24EB3C040()
{
  unint64_t result = qword_26B1D2970;
  if (!qword_26B1D2970)
  {
    type metadata accessor for AwardLockupState();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2970);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AwardLockupFeature(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24EB3C0AC);
}

uint64_t sub_24EB3C0AC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_24EB3D1F0();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for AwardLockupFeature(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24EB3C170);
}

void *sub_24EB3C170(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_24EB3D1F0();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_24EB3C218()
{
  uint64_t result = sub_24EB3D1F0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for AwardLockupFeature.TaskIdentifier()
{
  return &type metadata for AwardLockupFeature.TaskIdentifier;
}

unint64_t sub_24EB3C2C4()
{
  unint64_t result = qword_26B1D2A00;
  if (!qword_26B1D2A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1D2A00);
  }
  return result;
}

ValueMetadata *type metadata accessor for WeeklyStreakNotification()
{
  return &type metadata for WeeklyStreakNotification;
}

uint64_t destroy for ColoredLinearProgressViewStyle()
{
  swift_release();
  return swift_release();
}

void *_s13FitnessAwards30ColoredLinearProgressViewStyleVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for ColoredLinearProgressViewStyle(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  return a1;
}

uint64_t assignWithTake for ColoredLinearProgressViewStyle(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ColoredLinearProgressViewStyle(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ColoredLinearProgressViewStyle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ColoredLinearProgressViewStyle()
{
  return &type metadata for ColoredLinearProgressViewStyle;
}

uint64_t sub_24EB3C4F4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24EB3C510@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_24EB3DD70();
    uint64_t v23 = (void *)sub_24EB3D600();
    sub_24EB3D290();
  }
  sub_24EB3D440();
  long long v24 = v13[1];
  long long v37 = *v13;
  long long v38 = v24;
  sub_24EB3CFF8((uint64_t)&v37, (uint64_t)v40);
  long long v26 = v13[1];
  long long v35 = v13[2];
  long long v25 = v35;
  *(_OWORD *)a9 = *v13;
  *(_OWORD *)(a9 + 16) = v26;
  *(_OWORD *)(a9 + 32) = v25;
  *(_OWORD *)(a9 + 152) = v34;
  *(_OWORD *)(a9 + 136) = v33;
  *(_OWORD *)(a9 + 120) = v32;
  *(_OWORD *)(a9 + 104) = v31;
  *(_OWORD *)(a9 + 56) = v28;
  uint64_t v39 = *((void *)&v38 + 1);
  char v36 = *((unsigned char *)v13 + 48);
  *(unsigned char *)(a9 + 48) = v36;
  *(_OWORD *)(a9 + 72) = v29;
  *(_OWORD *)(a9 + 88) = v30;
  sub_24EB3D054((uint64_t)v40);
  sub_24EB3D088((uint64_t)&v39);
  return sub_24EB3D0B4((uint64_t)&v35);
}

uint64_t sub_24EB3C6F8@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_24EB3DD70();
    long long v25 = (void *)sub_24EB3D600();
    sub_24EB3D290();
  }
  sub_24EB3D440();
  *(_OWORD *)(a9 + 56) = v30;
  *(_OWORD *)(a9 + 72) = v31;
  *(_OWORD *)(a9 + 88) = v32;
  *(_OWORD *)(a9 + 104) = v33;
  *(_OWORD *)(a9 + 8) = v27;
  *(_OWORD *)(a9 + 24) = v28;
  *(void *)a9 = a16;
  *(_OWORD *)(a9 + 40) = v29;
  return swift_retain();
}

__n128 sub_24EB3C8B4@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_24EB3DD70();
    uint64_t v23 = (void *)sub_24EB3D600();
    sub_24EB3D290();
  }
  sub_24EB3D440();
  sub_24EAB1D9C(v13, a9, &qword_269933940);
  long long v24 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269933938) + 36));
  v24[4] = v30;
  v24[5] = v31;
  v24[6] = v32;
  _OWORD *v24 = v26;
  v24[1] = v27;
  __n128 result = v29;
  v24[2] = v28;
  v24[3] = v29;
  return result;
}

uint64_t sub_24EB3CA74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>, double a5@<D1>)
{
  *a4 = sub_24EB3DB10();
  a4[1] = v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933930);
  return sub_24EB3CAEC(a2, a3, a1, (uint64_t)a4 + *(int *)(v11 + 44), a5);
}

uint64_t sub_24EB3CAEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D1>)
{
  v32[0] = a1;
  v32[1] = a3;
  uint64_t v34 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933938);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v33 = (uint64_t)v32 - v11;
  uint64_t v12 = sub_24EB3DA90();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933940);
  uint64_t v16 = v15 - 8;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)v32 - v20;
  uint64_t v22 = *MEMORY[0x263F19860];
  uint64_t v23 = sub_24EB3D550();
  long long v24 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104);
  v24(v14, v22, v23);
  sub_24EB3CF38((uint64_t)v14, (uint64_t)v19);
  *(void *)&v19[*(int *)(v16 + 60)] = a2;
  *(_WORD *)&v19[*(int *)(v16 + 64)] = 256;
  swift_retain();
  sub_24EB3CF9C((uint64_t)v14);
  sub_24EABF928((uint64_t)v19, (uint64_t)v21, &qword_269933940);
  v24(v14, v22, v23);
  sub_24EB3CF38((uint64_t)v14, (uint64_t)v19);
  *(void *)&v19[*(int *)(v16 + 60)] = v32[0];
  *(_WORD *)&v19[*(int *)(v16 + 64)] = 256;
  swift_retain();
  sub_24EB3CF9C((uint64_t)v14);
  sub_24EB3D390();
  double v26 = v25 * a5;
  sub_24EB3DB00();
  sub_24EB3C8B4(0.0, 1, 0.0, 1, v26, 0, 0.0, 1, (uint64_t)v10, 0.0, 1, 0.0, 1);
  sub_24EAB1E00((uint64_t)v19, &qword_269933940);
  uint64_t v27 = v33;
  sub_24EABF928((uint64_t)v10, v33, &qword_269933938);
  sub_24EAB1D9C((uint64_t)v21, (uint64_t)v19, &qword_269933940);
  uint64_t v28 = v27;
  sub_24EAB1D9C(v27, (uint64_t)v10, &qword_269933938);
  uint64_t v29 = v34;
  sub_24EAB1D9C((uint64_t)v19, v34, &qword_269933940);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_269933948);
  sub_24EAB1D9C((uint64_t)v10, v29 + *(int *)(v30 + 48), &qword_269933938);
  sub_24EAB1E00(v28, &qword_269933938);
  sub_24EAB1E00((uint64_t)v21, &qword_269933940);
  sub_24EAB1E00((uint64_t)v10, &qword_269933938);
  return sub_24EAB1E00((uint64_t)v19, &qword_269933940);
}

uint64_t sub_24EB3CE50@<X0>(uint64_t (**a1)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v5 = v1[2];
  double v6 = COERCE_DOUBLE(sub_24EB3D5F0());
  if (v7) {
    double v8 = 0.0;
  }
  else {
    double v8 = v6;
  }
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v3;
  *(void *)(v9 + 24) = v4;
  *(void *)(v9 + 32) = v5;
  *(double *)(v9 + 40) = v8;
  *a1 = sub_24EB3CF2C;
  a1[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))v9;
  swift_retain();
  return swift_retain();
}

uint64_t sub_24EB3CEEC()
{
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_24EB3CF2C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24EB3CA74(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2, *(double *)(v2 + 40));
}

uint64_t sub_24EB3CF38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24EB3DA90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24EB3CF9C(uint64_t a1)
{
  uint64_t v2 = sub_24EB3DA90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24EB3CFF8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_24EB3D054(uint64_t a1)
{
  return a1;
}

uint64_t sub_24EB3D088(uint64_t a1)
{
  return a1;
}

uint64_t sub_24EB3D0B4(uint64_t a1)
{
  return a1;
}

unint64_t sub_24EB3D0E4()
{
  unint64_t result = qword_269933950;
  if (!qword_269933950)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269933958);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269933950);
  }
  return result;
}

uint64_t sub_24EB3D140()
{
  return MEMORY[0x270EEE638]();
}

uint64_t sub_24EB3D150()
{
  return MEMORY[0x270EEE658]();
}

uint64_t sub_24EB3D160()
{
  return MEMORY[0x270EEE670]();
}

uint64_t sub_24EB3D170()
{
  return MEMORY[0x270EEFDF0]();
}

uint64_t sub_24EB3D180()
{
  return MEMORY[0x270EEFE68]();
}

uint64_t sub_24EB3D190()
{
  return MEMORY[0x270EEFF68]();
}

uint64_t sub_24EB3D1A0()
{
  return MEMORY[0x270EF0120]();
}

uint64_t sub_24EB3D1B0()
{
  return MEMORY[0x270EF0190]();
}

uint64_t sub_24EB3D1C0()
{
  return MEMORY[0x270EF0C40]();
}

uint64_t sub_24EB3D1D0()
{
  return MEMORY[0x270EF0CB0]();
}

uint64_t sub_24EB3D1E0()
{
  return MEMORY[0x270EF0D08]();
}

uint64_t sub_24EB3D1F0()
{
  return MEMORY[0x270EF0D18]();
}

uint64_t sub_24EB3D200()
{
  return MEMORY[0x270EF0F30]();
}

uint64_t sub_24EB3D210()
{
  return MEMORY[0x270EF0FA0]();
}

uint64_t sub_24EB3D220()
{
  return MEMORY[0x270EF10A8]();
}

uint64_t sub_24EB3D230()
{
  return MEMORY[0x270F2B010]();
}

uint64_t sub_24EB3D240()
{
  return MEMORY[0x270F2B018]();
}

uint64_t sub_24EB3D250()
{
  return MEMORY[0x270F2B030]();
}

uint64_t sub_24EB3D260()
{
  return MEMORY[0x270F2B040]();
}

uint64_t sub_24EB3D270()
{
  return MEMORY[0x270F2B048]();
}

uint64_t sub_24EB3D280()
{
  return MEMORY[0x270F2B050]();
}

uint64_t sub_24EB3D290()
{
  return MEMORY[0x270FA2C78]();
}

uint64_t sub_24EB3D2A0()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_24EB3D2B0()
{
  return MEMORY[0x270FA2E08]();
}

uint64_t sub_24EB3D2C0()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_24EB3D2D0()
{
  return MEMORY[0x270EFEDF0]();
}

uint64_t sub_24EB3D2E0()
{
  return MEMORY[0x270EFEDF8]();
}

uint64_t sub_24EB3D2F0()
{
  return MEMORY[0x270EFEF30]();
}

uint64_t sub_24EB3D300()
{
  return MEMORY[0x270EFEF58]();
}

uint64_t sub_24EB3D310()
{
  return MEMORY[0x270EFEF78]();
}

uint64_t sub_24EB3D320()
{
  return MEMORY[0x270EFEFA0]();
}

uint64_t sub_24EB3D330()
{
  return MEMORY[0x270EFEFB8]();
}

uint64_t sub_24EB3D340()
{
  return MEMORY[0x270EFF008]();
}

uint64_t sub_24EB3D350()
{
  return MEMORY[0x270EFF108]();
}

uint64_t sub_24EB3D360()
{
  return MEMORY[0x270EFF390]();
}

uint64_t sub_24EB3D370()
{
  return MEMORY[0x270EFF3B8]();
}

uint64_t sub_24EB3D380()
{
  return MEMORY[0x270EFF598]();
}

uint64_t sub_24EB3D390()
{
  return MEMORY[0x270EFF6D0]();
}

uint64_t sub_24EB3D3A0()
{
  return MEMORY[0x270EFFA08]();
}

uint64_t sub_24EB3D3B0()
{
  return MEMORY[0x270EFFA10]();
}

uint64_t sub_24EB3D3C0()
{
  return MEMORY[0x270EFFEE0]();
}

uint64_t sub_24EB3D3D0()
{
  return MEMORY[0x270F00060]();
}

uint64_t sub_24EB3D3E0()
{
  return MEMORY[0x270F001A8]();
}

uint64_t sub_24EB3D3F0()
{
  return MEMORY[0x270F00220]();
}

uint64_t sub_24EB3D400()
{
  return MEMORY[0x270F004D0]();
}

uint64_t sub_24EB3D410()
{
  return MEMORY[0x270F004E8]();
}

uint64_t sub_24EB3D420()
{
  return MEMORY[0x270F00560]();
}

uint64_t sub_24EB3D430()
{
  return MEMORY[0x270F00578]();
}

uint64_t sub_24EB3D440()
{
  return MEMORY[0x270F00688]();
}

uint64_t sub_24EB3D450()
{
  return MEMORY[0x270F007E8]();
}

uint64_t sub_24EB3D460()
{
  return MEMORY[0x270F008D0]();
}

uint64_t sub_24EB3D470()
{
  return MEMORY[0x270F008D8]();
}

uint64_t sub_24EB3D480()
{
  return MEMORY[0x270F00C78]();
}

uint64_t sub_24EB3D490()
{
  return MEMORY[0x270F00C88]();
}

uint64_t sub_24EB3D4A0()
{
  return MEMORY[0x270F00D80]();
}

uint64_t sub_24EB3D4B0()
{
  return MEMORY[0x270F00D90]();
}

uint64_t sub_24EB3D4C0()
{
  return MEMORY[0x270F00E88]();
}

uint64_t sub_24EB3D4D0()
{
  return MEMORY[0x270F00E98]();
}

uint64_t sub_24EB3D4E0()
{
  return MEMORY[0x270F01070]();
}

uint64_t sub_24EB3D4F0()
{
  return MEMORY[0x270F01210]();
}

uint64_t sub_24EB3D500()
{
  return MEMORY[0x270F01238]();
}

uint64_t sub_24EB3D510()
{
  return MEMORY[0x270F01248]();
}

uint64_t sub_24EB3D520()
{
  return MEMORY[0x270F01258]();
}

uint64_t sub_24EB3D530()
{
  return MEMORY[0x270F01270]();
}

uint64_t sub_24EB3D540()
{
  return MEMORY[0x270F01280]();
}

uint64_t sub_24EB3D550()
{
  return MEMORY[0x270F01358]();
}

uint64_t sub_24EB3D560()
{
  return MEMORY[0x270F01510]();
}

uint64_t sub_24EB3D570()
{
  return MEMORY[0x270F01520]();
}

uint64_t sub_24EB3D580()
{
  return MEMORY[0x270F017F8]();
}

uint64_t sub_24EB3D590()
{
  return MEMORY[0x270F01800]();
}

uint64_t sub_24EB3D5A0()
{
  return MEMORY[0x270F01818]();
}

uint64_t sub_24EB3D5B0()
{
  return MEMORY[0x270F018D8]();
}

uint64_t sub_24EB3D5C0()
{
  return MEMORY[0x270F01D20]();
}

uint64_t sub_24EB3D5D0()
{
  return MEMORY[0x270F01D38]();
}

uint64_t sub_24EB3D5E0()
{
  return MEMORY[0x270F01F70]();
}

uint64_t sub_24EB3D5F0()
{
  return MEMORY[0x270F02758]();
}

uint64_t sub_24EB3D600()
{
  return MEMORY[0x270F029E0]();
}

uint64_t sub_24EB3D610()
{
  return MEMORY[0x270F029F0]();
}

uint64_t sub_24EB3D620()
{
  return MEMORY[0x270F02A00]();
}

uint64_t sub_24EB3D630()
{
  return MEMORY[0x270F02A30]();
}

uint64_t sub_24EB3D640()
{
  return MEMORY[0x270F02A38]();
}

uint64_t sub_24EB3D650()
{
  return MEMORY[0x270F02A68]();
}

uint64_t sub_24EB3D660()
{
  return MEMORY[0x270F02AE8]();
}

uint64_t sub_24EB3D670()
{
  return MEMORY[0x270F02BA8]();
}

uint64_t sub_24EB3D680()
{
  return MEMORY[0x270F02BC0]();
}

uint64_t sub_24EB3D690()
{
  return MEMORY[0x270F02C00]();
}

uint64_t sub_24EB3D6A0()
{
  return MEMORY[0x270F02C68]();
}

uint64_t sub_24EB3D6B0()
{
  return MEMORY[0x270F02C70]();
}

uint64_t sub_24EB3D6C0()
{
  return MEMORY[0x270F02C98]();
}

uint64_t sub_24EB3D6D0()
{
  return MEMORY[0x270F02CB0]();
}

uint64_t sub_24EB3D6E0()
{
  return MEMORY[0x270F02CD0]();
}

uint64_t sub_24EB3D6F0()
{
  return MEMORY[0x270F02CE8]();
}

uint64_t sub_24EB3D700()
{
  return MEMORY[0x270F02D10]();
}

uint64_t sub_24EB3D710()
{
  return MEMORY[0x270F02D30]();
}

uint64_t sub_24EB3D720()
{
  return MEMORY[0x270F2B438]();
}

uint64_t sub_24EB3D730()
{
  return MEMORY[0x270F03010]();
}

uint64_t sub_24EB3D740()
{
  return MEMORY[0x270F03058]();
}

uint64_t sub_24EB3D750()
{
  return MEMORY[0x270F030A8]();
}

uint64_t sub_24EB3D760()
{
  return MEMORY[0x270F03228]();
}

uint64_t sub_24EB3D770()
{
  return MEMORY[0x270F03250]();
}

uint64_t sub_24EB3D780()
{
  return MEMORY[0x270F03260]();
}

uint64_t sub_24EB3D790()
{
  return MEMORY[0x270F032C0]();
}

uint64_t sub_24EB3D7A0()
{
  return MEMORY[0x270F032D0]();
}

uint64_t sub_24EB3D7B0()
{
  return MEMORY[0x270F032F0]();
}

uint64_t sub_24EB3D7C0()
{
  return MEMORY[0x270F03318]();
}

uint64_t sub_24EB3D7D0()
{
  return MEMORY[0x270F03428]();
}

uint64_t sub_24EB3D7E0()
{
  return MEMORY[0x270F03438]();
}

uint64_t sub_24EB3D7F0()
{
  return MEMORY[0x270F034A0]();
}

uint64_t sub_24EB3D800()
{
  return MEMORY[0x270F034B0]();
}

uint64_t sub_24EB3D810()
{
  return MEMORY[0x270F03590]();
}

uint64_t sub_24EB3D820()
{
  return MEMORY[0x270F035E0]();
}

uint64_t sub_24EB3D830()
{
  return MEMORY[0x270F036C0]();
}

uint64_t sub_24EB3D840()
{
  return MEMORY[0x270F03790]();
}

uint64_t sub_24EB3D850()
{
  return MEMORY[0x270F037D8]();
}

uint64_t sub_24EB3D860()
{
  return MEMORY[0x270F03A78]();
}

uint64_t sub_24EB3D870()
{
  return MEMORY[0x270F03B30]();
}

uint64_t sub_24EB3D880()
{
  return MEMORY[0x270F03CE0]();
}

uint64_t sub_24EB3D890()
{
  return MEMORY[0x270F03F00]();
}

uint64_t sub_24EB3D8A0()
{
  return MEMORY[0x270F03FE8]();
}

uint64_t sub_24EB3D8B0()
{
  return MEMORY[0x270F03FF8]();
}

uint64_t sub_24EB3D8C0()
{
  return MEMORY[0x270F04038]();
}

uint64_t sub_24EB3D8D0()
{
  return MEMORY[0x270F040B0]();
}

uint64_t sub_24EB3D8E0()
{
  return MEMORY[0x270F04108]();
}

uint64_t sub_24EB3D8F0()
{
  return MEMORY[0x270F04178]();
}

uint64_t sub_24EB3D900()
{
  return MEMORY[0x270F041A0]();
}

uint64_t sub_24EB3D910()
{
  return MEMORY[0x270F041C8]();
}

uint64_t sub_24EB3D920()
{
  return MEMORY[0x270F04210]();
}

uint64_t sub_24EB3D930()
{
  return MEMORY[0x270F04230]();
}

uint64_t sub_24EB3D940()
{
  return MEMORY[0x270F04260]();
}

uint64_t sub_24EB3D950()
{
  return MEMORY[0x270F043A8]();
}

uint64_t sub_24EB3D960()
{
  return MEMORY[0x270F04478]();
}

uint64_t sub_24EB3D970()
{
  return MEMORY[0x270F04498]();
}

uint64_t sub_24EB3D980()
{
  return MEMORY[0x270F044E8]();
}

uint64_t sub_24EB3D990()
{
  return MEMORY[0x270F04558]();
}

uint64_t sub_24EB3D9A0()
{
  return MEMORY[0x270F04570]();
}

uint64_t sub_24EB3D9B0()
{
  return MEMORY[0x270F04608]();
}

uint64_t sub_24EB3D9C0()
{
  return MEMORY[0x270F04620]();
}

uint64_t sub_24EB3D9D0()
{
  return MEMORY[0x270F04630]();
}

uint64_t sub_24EB3D9E0()
{
  return MEMORY[0x270F04650]();
}

uint64_t sub_24EB3D9F0()
{
  return MEMORY[0x270F04690]();
}

uint64_t sub_24EB3DA00()
{
  return MEMORY[0x270F04718]();
}

uint64_t sub_24EB3DA10()
{
  return MEMORY[0x270F048B0]();
}

uint64_t sub_24EB3DA20()
{
  return MEMORY[0x270F04900]();
}

uint64_t sub_24EB3DA30()
{
  return MEMORY[0x270F04950]();
}

uint64_t sub_24EB3DA40()
{
  return MEMORY[0x270F04960]();
}

uint64_t sub_24EB3DA50()
{
  return MEMORY[0x270F04AF0]();
}

uint64_t sub_24EB3DA60()
{
  return MEMORY[0x270F04AF8]();
}

uint64_t sub_24EB3DA70()
{
  return MEMORY[0x270F04B08]();
}

uint64_t sub_24EB3DA80()
{
  return MEMORY[0x270F04B10]();
}

uint64_t sub_24EB3DA90()
{
  return MEMORY[0x270F04C18]();
}

uint64_t sub_24EB3DAA0()
{
  return MEMORY[0x270F04C90]();
}

uint64_t sub_24EB3DAB0()
{
  return MEMORY[0x270F04CC0]();
}

uint64_t sub_24EB3DAC0()
{
  return MEMORY[0x270F04CE8]();
}

uint64_t sub_24EB3DAD0()
{
  return MEMORY[0x270F04F98]();
}

uint64_t sub_24EB3DAE0()
{
  return MEMORY[0x270F04FB0]();
}

uint64_t sub_24EB3DAF0()
{
  return MEMORY[0x270F05058]();
}

uint64_t sub_24EB3DB00()
{
  return MEMORY[0x270F05078]();
}

uint64_t sub_24EB3DB10()
{
  return MEMORY[0x270F05088]();
}

uint64_t sub_24EB3DB20()
{
  return MEMORY[0x270F05320]();
}

uint64_t sub_24EB3DB30()
{
  return MEMORY[0x270F05330]();
}

uint64_t sub_24EB3DB50()
{
  return MEMORY[0x270F252A0]();
}

uint64_t sub_24EB3DB60()
{
  return MEMORY[0x270F252B0]();
}

uint64_t sub_24EB3DB80()
{
  return MEMORY[0x270F25398]();
}

uint64_t sub_24EB3DB90()
{
  return MEMORY[0x270F253A0]();
}

uint64_t sub_24EB3DBA0()
{
  return MEMORY[0x270F253B0]();
}

uint64_t sub_24EB3DBB0()
{
  return MEMORY[0x270F253C0]();
}

uint64_t sub_24EB3DBC0()
{
  return MEMORY[0x270F9D060]();
}

uint64_t sub_24EB3DBD0()
{
  return MEMORY[0x270F9D320]();
}

uint64_t sub_24EB3DBE0()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_24EB3DBF0()
{
  return MEMORY[0x270EF18D0]();
}

uint64_t sub_24EB3DC00()
{
  return MEMORY[0x270EF18F0]();
}

uint64_t sub_24EB3DC10()
{
  return MEMORY[0x270EF1908]();
}

uint64_t sub_24EB3DC20()
{
  return MEMORY[0x270EF1918]();
}

uint64_t sub_24EB3DC30()
{
  return MEMORY[0x270EF1928]();
}

uint64_t sub_24EB3DC40()
{
  return MEMORY[0x270EF1938]();
}

uint64_t sub_24EB3DC50()
{
  return MEMORY[0x270EF1950]();
}

uint64_t sub_24EB3DC60()
{
  return MEMORY[0x270EF1958]();
}

uint64_t sub_24EB3DC70()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_24EB3DC80()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_24EB3DC90()
{
  return MEMORY[0x270F2CE98]();
}

uint64_t sub_24EB3DCA0()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_24EB3DCB0()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_24EB3DCC0()
{
  return MEMORY[0x270F9DA80]();
}

uint64_t sub_24EB3DCD0()
{
  return MEMORY[0x270F9DB00]();
}

uint64_t sub_24EB3DCE0()
{
  return MEMORY[0x270F9DBB0]();
}

uint64_t sub_24EB3DCF0()
{
  return MEMORY[0x270FA1DF8]();
}

uint64_t sub_24EB3DD10()
{
  return MEMORY[0x270FA1EA0]();
}

uint64_t sub_24EB3DD20()
{
  return MEMORY[0x270FA1EA8]();
}

uint64_t sub_24EB3DD30()
{
  return MEMORY[0x270FA1EC0]();
}

uint64_t sub_24EB3DD40()
{
  return MEMORY[0x270FA1EF0]();
}

uint64_t sub_24EB3DD50()
{
  return MEMORY[0x270FA2080]();
}

uint64_t sub_24EB3DD60()
{
  return MEMORY[0x270F9DEB0]();
}

uint64_t sub_24EB3DD70()
{
  return MEMORY[0x270FA2E70]();
}

uint64_t sub_24EB3DD80()
{
  return MEMORY[0x270FA2E80]();
}

uint64_t sub_24EB3DD90()
{
  return MEMORY[0x270F62148]();
}

uint64_t sub_24EB3DDA0()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_24EB3DDB0()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_24EB3DDC0()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_24EB3DDD0()
{
  return MEMORY[0x270F9E7F0]();
}

uint64_t sub_24EB3DDE0()
{
  return MEMORY[0x270F9E8E8]();
}

uint64_t sub_24EB3DDF0()
{
  return MEMORY[0x270F9E958]();
}

uint64_t sub_24EB3DE00()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_24EB3DE10()
{
  return MEMORY[0x270F9E970]();
}

uint64_t sub_24EB3DE20()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_24EB3DE30()
{
  return MEMORY[0x270F9EA78]();
}

uint64_t sub_24EB3DE40()
{
  return MEMORY[0x270F9EA98]();
}

uint64_t sub_24EB3DE50()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_24EB3DE60()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_24EB3DE70()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_24EB3DE80()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_24EB3DE90()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_24EB3DEA0()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_24EB3DEB0()
{
  return MEMORY[0x270F9F230]();
}

uint64_t sub_24EB3DEC0()
{
  return MEMORY[0x270F9F250]();
}

uint64_t sub_24EB3DED0()
{
  return MEMORY[0x270F9F258]();
}

uint64_t sub_24EB3DEE0()
{
  return MEMORY[0x270F9F270]();
}

uint64_t sub_24EB3DEF0()
{
  return MEMORY[0x270F9F280]();
}

uint64_t sub_24EB3DF00()
{
  return MEMORY[0x270F9F2A0]();
}

uint64_t sub_24EB3DF10()
{
  return MEMORY[0x270F9F2E8]();
}

uint64_t sub_24EB3DF20()
{
  return MEMORY[0x270F9F2F0]();
}

uint64_t sub_24EB3DF30()
{
  return MEMORY[0x270F9F2F8]();
}

uint64_t sub_24EB3DF40()
{
  return MEMORY[0x270F9F308]();
}

uint64_t sub_24EB3DF50()
{
  return MEMORY[0x270F9F318]();
}

uint64_t sub_24EB3DF60()
{
  return MEMORY[0x270F9F360]();
}

uint64_t sub_24EB3DF70()
{
  return MEMORY[0x270F9F390]();
}

uint64_t sub_24EB3DF80()
{
  return MEMORY[0x270F9F3B0]();
}

uint64_t sub_24EB3DF90()
{
  return MEMORY[0x270F9F3C0]();
}

uint64_t sub_24EB3DFA0()
{
  return MEMORY[0x270F9F3E0]();
}

uint64_t sub_24EB3DFB0()
{
  return MEMORY[0x270F9F428]();
}

uint64_t sub_24EB3DFC0()
{
  return MEMORY[0x270F9F430]();
}

uint64_t sub_24EB3DFD0()
{
  return MEMORY[0x270F9F438]();
}

uint64_t sub_24EB3DFE0()
{
  return MEMORY[0x270F9F448]();
}

uint64_t sub_24EB3DFF0()
{
  return MEMORY[0x270F9F458]();
}

uint64_t sub_24EB3E000()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_24EB3E010()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_24EB3E020()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_24EB3E030()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_24EB3E040()
{
  return MEMORY[0x270EF2680]();
}

uint64_t sub_24EB3E050()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_24EB3E060()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_24EB3E070()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_24EB3E080()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_24EB3E090()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_24EB3E0A0()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_24EB3E0B0()
{
  return MEMORY[0x270F9FC68]();
}

uint64_t sub_24EB3E0C0()
{
  return MEMORY[0x270F9FC80]();
}

uint64_t sub_24EB3E0D0()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_24EB3E0E0()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t sub_24EB3E0F0()
{
  return MEMORY[0x270F9FD98]();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void bzero(void *a1, size_t a2)
{
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x270EDA468](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x270FA01D0]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x270FA01D8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x270FA0208]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x270FA02F8]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x270FA0300]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x270FA0338]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x270FA0348]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x270FA0370]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x270FA03B0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x270FA03B8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x270FA03D0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x270FA03F0]();
}

uint64_t swift_getOpaqueTypeMetadata2()
{
  return MEMORY[0x270FA03F8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x270FA0410]();
}

uint64_t swift_getTupleTypeMetadata()
{
  return MEMORY[0x270FA0420]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x270FA0428]();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return MEMORY[0x270FA0430]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x270FA0440]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x270FA0448]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x270FA0460]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x270FA04D8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x270FA0538]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x270FA0568]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x270FA0578]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x270FA2450]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x270FA2460]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}