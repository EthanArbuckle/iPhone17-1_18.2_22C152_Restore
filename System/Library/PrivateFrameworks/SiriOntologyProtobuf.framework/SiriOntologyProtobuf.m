ValueMetadata *type metadata accessor for UnknownStorage()
{
  return &type metadata for UnknownStorage;
}

uint64_t sub_1C8CA3CF8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t destroy for UnknownStorage(uint64_t a1)
{
  return sub_1C8CA3D5C(*(void *)a1, *(void *)(a1 + 8));
}

uint64_t sub_1C8CA3D5C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

ValueMetadata *type metadata accessor for BinaryDecodingOptions()
{
  return &type metadata for BinaryDecodingOptions;
}

ValueMetadata *type metadata accessor for Google_Protobuf_Int32Value()
{
  return &type metadata for Google_Protobuf_Int32Value;
}

double UnknownStorage.init()@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = xmmword_1C8D8AD80;
  return result;
}

uint64_t storeEnumTagSinglePayload for UnknownStorage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)double result = a2 - 13;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      *(void *)double result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for UnknownStorage(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

Swift::String __swiftcall Message.textFormatString()()
{
  char v4 = 1;
  Swift::String v2 = Message.textFormatString(options:)((SiriOntologyProtobuf::TextFormatEncodingOptions)&v4);
  object = v2._object;
  uint64_t countAndFlagsBits = v2._countAndFlagsBits;
  result._object = object;
  result._uint64_t countAndFlagsBits = countAndFlagsBits;
  return result;
}

Swift::String __swiftcall Message.textFormatString(options:)(SiriOntologyProtobuf::TextFormatEncodingOptions options)
{
  uint64_t v4 = v2;
  uint64_t v5 = v1;
  v6 = *(unsigned char **)&options;
  uint64_t v7 = sub_1C8D88340();
  uint64_t v9 = MEMORY[0x1F4188790](v7 - 8, v8);
  uint64_t v10 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v9, v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v6) = *v6;
  v28[3] = v5;
  v28[4] = v4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v28);
  v15 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v10 + 16);
  v15(boxed_opaque_existential_1, v3, v5);
  sub_1C8CA425C((uint64_t)v28, (uint64_t)v27);
  char v26 = (char)v6;
  sub_1C8CA42C0((uint64_t)v27, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], &v26, (uint64_t)v29);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  v15((uint64_t *)v13, v3, v5);
  if (swift_dynamicCast())
  {
    uint64_t v16 = v28[0];
    unint64_t v17 = v28[1];
    sub_1C8D634A0((char **)v29);
    sub_1C8CA3D5C(v16, v17);
    swift_release();
  }
  else
  {
    (*(void (**)(_OWORD *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v4 + 72))(v29, &type metadata for TextFormatEncodingVisitor, &off_1F23554E0, v5, v4);
  }
  long long v18 = v29[1];
  v28[0] = *(void *)&v29[0];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C8CA463C(v18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8D88330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
  sub_1C8CA4790();
  uint64_t v19 = sub_1C8D88310();
  v21 = v20;
  swift_bridgeObjectRelease();
  if (v21)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v22 = v19;
    v23 = v21;
  }
  else
  {
    __break(1u);
    uint64_t v22 = swift_unexpectedError();
    __break(1u);
  }
  result._object = v23;
  result._uint64_t countAndFlagsBits = v22;
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_1C8CA425C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1C8CA42C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  void (*v21)(long long *__return_ptr, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  long long v28[2];
  uint64_t v29;
  void v30[5];
  long long v31;
  long long v32;
  uint64_t v33;

  uint64_t v7 = a1;
  char v9 = *a4;
  sub_1C8CA425C(a1, (uint64_t)v30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CD8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CD0);
  if (swift_dynamicCast())
  {
    sub_1C8CA4528(v28, (uint64_t)&v31);
    __swift_project_boxed_opaque_existential_1(&v31, *((uint64_t *)&v32 + 1));
    swift_getDynamicType();
    (*(void (**)(void *__return_ptr))(v33 + 8))(v30);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
    uint64_t v11 = v30[0];
    uint64_t v10 = v30[1];
    uint64_t v12 = v30[2];
    v27 = v30[3];
  }
  else
  {
    v29 = 0;
    memset(v28, 0, sizeof(v28));
    sub_1C8D33174((uint64_t)v28, &qword_1EA567208);
    uint64_t v11 = 0;
    uint64_t v10 = 0;
    uint64_t v12 = 0;
    v27 = 0;
  }
  sub_1C8CA425C(v7, (uint64_t)v30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CC0);
  if (swift_dynamicCast())
  {
    char v26 = v7;
    uint64_t v13 = v12;
    uint64_t v14 = v10;
    uint64_t v15 = v11;
    uint64_t v16 = a2;
    uint64_t v17 = a3;
    char v18 = v9;
    uint64_t v19 = *((void *)&v32 + 1);
    uint64_t v20 = v33;
    __swift_project_boxed_opaque_existential_1(&v31, *((uint64_t *)&v32 + 1));
    v21 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v20 + 16);
    uint64_t v22 = v20;
    char v9 = v18;
    a3 = v17;
    a2 = v16;
    uint64_t v11 = v15;
    uint64_t v10 = v14;
    uint64_t v12 = v13;
    uint64_t v7 = v26;
    v21(v28, v19, v22);
    v23 = *(void *)&v28[0];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
  }
  else
  {
    v33 = 0;
    v31 = 0u;
    v32 = 0u;
    sub_1C8D33174((uint64_t)&v31, &qword_1EBCB2CC8);
    v23 = 0;
  }
  v24 = sub_1C8D840C8(MEMORY[0x1E4FBC860]);
  Swift::String result = __swift_destroy_boxed_opaque_existential_1(v7);
  *(void *)a5 = a2;
  *(void *)(a5 + 8) = a3;
  *(void *)(a5 + 16) = v11;
  *(void *)(a5 + 24) = v10;
  *(void *)(a5 + 32) = v12;
  *(void *)(a5 + 40) = v27;
  *(void *)(a5 + 48) = v24;
  *(void *)(a5 + 56) = v23;
  *(unsigned char *)(a5 + 64) = v9;
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_1C8CA4528(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

ValueMetadata *type metadata accessor for _NameMap()
{
  return &type metadata for _NameMap;
}

void *initializeWithCopy for _NameMap(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1C8CA463C(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C8CA469C(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t UnknownStorage.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = *v3;
  unint64_t v5 = v3[1];
  switch(v5 >> 62)
  {
    case 1uLL:
      if ((int)result != result >> 32) {
        goto LABEL_7;
      }
      break;
    case 2uLL:
      if (*(void *)(result + 16) != *(void *)(result + 24)) {
        goto LABEL_7;
      }
      break;
    case 3uLL:
      return result;
    default:
      if ((v5 & 0xFF000000000000) != 0) {
LABEL_7:
      }
        uint64_t result = (*(uint64_t (**)(uint64_t))(a3 + 448))(result);
      break;
  }
  return result;
}

unint64_t sub_1C8CA4790()
{
  unint64_t result = qword_1EBCB2CF0;
  if (!qword_1EBCB2CF0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBCB2CE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBCB2CF0);
  }
  return result;
}

uint64_t Message.serializedData(partial:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  char v8 = a1;
  uint64_t v9 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1, a2);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v5, a2);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, a2);
  }
  else
  {
    char v12 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 32))(a2, a3);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, a2);
    if ((v12 & 1) == 0)
    {
      sub_1C8D0DC70();
      swift_allocError();
      *uint64_t v16 = 1;
      return swift_willThrow();
    }
  }
  v17[0] = 0;
  uint64_t result = (*(uint64_t (**)(uint64_t *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(a3 + 72))(v17, &type metadata for BinaryEncodingSizeVisitor, &off_1F2354500, a2, a3);
  if (!v4)
  {
    uint64_t v14 = v17[0];
    v17[0] = sub_1C8CA4A2C(v17[0]);
    v17[1] = v15;
    MEMORY[0x1F4188790](v17[0], v15);
    v17[-4] = a2;
    v17[-3] = a3;
    v17[-2] = v5;
    v17[-1] = v14;
    sub_1C8D0DCD4(sub_1C8CA4ACC);
    return v17[0];
  }
  return result;
}

uint64_t sub_1C8CA4A1C()
{
  return 1;
}

uint64_t Message.isInitialized.getter()
{
  return 1;
}

uint64_t sub_1C8CA4A2C(uint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (result <= 14)
    {
      if (result < 0) {
        __break(1u);
      }
      else {
        return 0;
      }
    }
    else
    {
      sub_1C8D88150();
      swift_allocObject();
      sub_1C8D88120();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_1C8D88190();
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

uint64_t sub_1C8CA4ACC(uint64_t result, uint64_t a2)
{
  if (result)
  {
    if (a2 - result >= 1)
    {
      v7[1] = v3;
      v7[2] = v4;
      uint64_t v5 = *(void *)(v2 + 24);
      uint64_t v6 = *(void *)(v2 + 16);
      v7[0] = result;
      return (*(uint64_t (**)(void *, ValueMetadata *, _UNKNOWN **, uint64_t))(v5 + 72))(v7, &type metadata for BinaryEncodingVisitor, &off_1F2355030, v6);
    }
  }
  return result;
}

SiriOntologyProtobuf::BinaryDecodingOptions __swiftcall BinaryDecodingOptions.init()()
{
  *(void *)uint64_t v0 = 100;
  *(unsigned char *)(v0 + 8) = 0;
  return result;
}

uint64_t Message.init(serializedData:extensions:partial:options:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v14 = *a5;
  char v15 = *((unsigned char *)a5 + 8);
  (*(void (**)(uint64_t, uint64_t))(a7 + 16))(a6, a7);
  uint64_t v19 = v14;
  char v20 = v15;
  uint64_t v16 = v21;
  Message.merge(serializedData:extensions:partial:options:)(a1, a2, a3, a4, (uint64_t)&v19, a6, a7);
  sub_1C8CA3D5C(a1, a2);
  uint64_t result = sub_1C8CA4F3C(a3);
  if (v16) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a6 - 8) + 8))(a8, a6);
  }
  return result;
}

uint64_t Message.merge(serializedData:extensions:partial:options:)(uint64_t result, unint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  uint64_t v11 = *(void *)a5;
  uint64_t v12 = *(unsigned __int8 *)(a5 + 8);
  uint64_t v16 = result;
  switch(a2 >> 62)
  {
    case 1uLL:
      if ((int)result != result >> 32) {
        goto LABEL_10;
      }
      goto LABEL_6;
    case 2uLL:
      if (*(void *)(result + 16) == *(void *)(result + 24)) {
        goto LABEL_6;
      }
LABEL_10:
      MEMORY[0x1F4188790]();
      if (v18 == 2)
      {
        uint64_t v19 = *(void *)(v16 + 16);
        uint64_t v20 = *(void *)(v16 + 24);
        swift_retain();
        swift_retain();
        sub_1C8D0DFE8(v19, v20, sub_1C8CA8678);
        swift_release();
        uint64_t result = swift_release();
        if (v8) {
          return result;
        }
      }
      else
      {
        if (v16 >> 32 < (int)v16) {
          __break(1u);
        }
        swift_retain();
        sub_1C8D0DFE8((int)v16, v16 >> 32, sub_1C8CA8678);
        uint64_t result = sub_1C8CA3D5C(v16, a2);
        if (v8) {
          return result;
        }
      }
      goto LABEL_12;
    case 3uLL:
      goto LABEL_6;
    default:
      if ((a2 & 0xFF000000000000) == 0)
      {
LABEL_6:
        if (a4) {
          return result;
        }
        goto LABEL_7;
      }
      uint64_t v21 = result;
      __int16 v22 = a2;
      char v23 = BYTE2(a2);
      char v24 = BYTE3(a2);
      char v25 = BYTE4(a2);
      char v26 = BYTE5(a2);
      uint64_t result = sub_1C8CA86A0((uint64_t)&v21, (uint64_t)&v21 + BYTE6(a2), v11, v12, a3, v7, a6, a7);
      if (v8) {
        return result;
      }
LABEL_12:
      if ((a4 & 1) == 0)
      {
LABEL_7:
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a7 + 32))(a6, a7, v11, v12);
        if ((result & 1) == 0)
        {
          sub_1C8D0E090();
          swift_allocError();
          *uint64_t v17 = 4;
          return swift_willThrow();
        }
      }
      return result;
  }
}

uint64_t sub_1C8CA4F3C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBCB2D10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t Message.debugDescription.getter()
{
  swift_getDynamicType();
  swift_getMetatypeMetadata();
  uint64_t v1 = sub_1C8D88360();
  sub_1C8D88400();
  Message.textFormatString()();
  swift_bridgeObjectRetain();
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

ValueMetadata *type metadata accessor for Google_Protobuf_DoubleValue()
{
  return &type metadata for Google_Protobuf_DoubleValue;
}

ValueMetadata *type metadata accessor for Google_Protobuf_Int64Value()
{
  return &type metadata for Google_Protobuf_Int64Value;
}

ValueMetadata *type metadata accessor for Google_Protobuf_StringValue()
{
  return &type metadata for Google_Protobuf_StringValue;
}

uint64_t storeEnumTagSinglePayload for Google_Protobuf_SourceContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Google_Protobuf_SourceContext(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

double Google_Protobuf_Int32Value.init()@<D0>(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C8D8AD80;
  return result;
}

uint64_t Google_Protobuf_Int32Value.value.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t destroy for Google_Protobuf_BoolValue(uint64_t a1)
{
  return sub_1C8CA3D5C(*(void *)(a1 + 8), *(void *)(a1 + 16));
}

double Google_Protobuf_StringValue.init()@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  double result = 0.0;
  *(_OWORD *)(a1 + 16) = xmmword_1C8D8AD80;
  return result;
}

uint64_t Google_Protobuf_StringValue.value.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void *initializeWithCopy for Google_Protobuf_SourceContext(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[2];
  unint64_t v5 = a2[3];
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(v4, v5);
  a1[2] = v4;
  a1[3] = v5;
  return a1;
}

uint64_t destroy for Google_Protobuf_SourceContext(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void *)(a1 + 24);
  return sub_1C8CA3D5C(v2, v3);
}

uint64_t _s20SiriOntologyProtobuf27Google_Protobuf_DoubleValueVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 13;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2)
    {
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

uint64_t _s20SiriOntologyProtobuf27Google_Protobuf_DoubleValueVwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 16) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 16) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

double Google_Protobuf_Int32Value.init(integerLiteral:)@<D0>(int a1@<W0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = a1;
  double result = 0.0;
  *(_OWORD *)(a2 + 8) = xmmword_1C8D8AD80;
  return result;
}

uint64_t _s20SiriOntologyProtobuf07Google_C11_Int32ValueV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a1 != *(_DWORD *)a2) {
    return 0;
  }
  uint64_t v3 = *(void *)(a2 + 8);
  unint64_t v2 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a1 + 8);
  unint64_t v4 = *(void *)(a1 + 16);
  sub_1C8CA3CF8(v5, v4);
  sub_1C8CA3CF8(v3, v2);
  char v6 = sub_1C8D01FBC(v5, v4, v3, v2);
  sub_1C8CA3D5C(v3, v2);
  sub_1C8CA3D5C(v5, v4);
  return v6 & 1;
}

uint64_t Google_Protobuf_Int32Value.value.getter()
{
  return *v0;
}

uint64_t Google_Protobuf_StringValue.value.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 280))();
}

uint64_t sub_1C8CA53F8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CA5410(a1, a2, a3, a4);
}

uint64_t sub_1C8CA5410(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = v4;
  uint64_t v8 = a3;
  unint64_t v52 = a2;
  uint64_t v9 = a1;
  uint64_t v10 = *(void *)(a3 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = MEMORY[0x1F4188790](a1, a2);
  v51 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12, v13);
  uint64_t v16 = (char *)v41 - v15;
  MEMORY[0x1F4188790](v14, v17);
  uint64_t v19 = (char *)v41 - v18;
  uint64_t v20 = swift_bridgeObjectRetain();
  if (!MEMORY[0x1CB773090](v20, v8)) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v56 = v5;
  v41[0] = v11;
  uint64_t v21 = 0;
  v55 = (void (**)(char *, char **, uint64_t))(v10 + 16);
  v44 = (void (**)(char *, char *, uint64_t))(v10 + 32);
  uint64_t v43 = v6 + 8;
  v41[1] = a4 + 72;
  v42 = (void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v50 = v9;
  uint64_t v49 = a4;
  uint64_t v48 = v8;
  uint64_t v47 = v10;
  v46 = v16;
  v45 = v19;
  while (1)
  {
    char v28 = sub_1C8D88510();
    sub_1C8D884D0();
    if (v28)
    {
      unint64_t v29 = v9
          + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))
          + *(void *)(v10 + 72) * v21;
      v30 = *(void (**)(char *, char **, uint64_t))(v10 + 16);
      v30(v19, (char **)v29, v8);
      uint64_t v31 = v21 + 1;
      if (__OFADD__(v21, 1)) {
        goto LABEL_14;
      }
      goto LABEL_6;
    }
    v39 = (char *)sub_1C8D886B0();
    if (v41[0] != 8) {
      break;
    }
    v58[0] = v39;
    v30 = *v55;
    (*v55)(v19, v58, v8);
    swift_unknownObjectRelease();
    uint64_t v31 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_14:
      __break(1u);
      return swift_bridgeObjectRelease();
    }
LABEL_6:
    uint64_t v54 = v21;
    (*v44)(v16, v19, v8);
    sub_1C8CA5968(v52);
    sub_1C8CA6B04(v32);
    v57[3] = v8;
    v57[4] = a4;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v57);
    v30((char *)boxed_opaque_existential_1, (char **)v16, v8);
    uint64_t v35 = *(void *)v6;
    uint64_t v34 = *(void *)(v6 + 8);
    char v59 = *(unsigned char *)(v6 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C8CA42C0((uint64_t)v57, v35, v34, &v59, (uint64_t)v58);
    v30(v51, (char **)v16, v8);
    int v36 = swift_dynamicCast();
    uint64_t v53 = v31;
    if (v36)
    {
      a4 = v57[0];
      uint64_t v16 = (char *)v57[1];
      sub_1C8D634A0(v58);
      sub_1C8CA3CF8(a4, (unint64_t)v16);
      uint64_t v37 = v56;
      sub_1C8D2D968((uint64_t)v58, a4, (unint64_t)v16);
      if (v37) {
        goto LABEL_19;
      }
      uint64_t v56 = 0;
      sub_1C8CA3D5C(a4, (unint64_t)v16);
      sub_1C8CA3D5C(a4, (unint64_t)v16);
      swift_release();
    }
    else
    {
      uint64_t v38 = v56;
      (*(void (**)(char **, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(a4 + 72))(v58, &type metadata for TextFormatEncodingVisitor, &off_1F23554E0, v8, a4);
      if (v38) {
        goto LABEL_20;
      }
      uint64_t v56 = 0;
    }
    __int16 v22 = v58[0];
    char v23 = v58[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)uint64_t v6 = v22;
    *(void *)(v6 + 8) = v23;
    sub_1C8CA7498(*((void *)v23 + 2) - 1);
    sub_1C8CA7498(*(void *)(*(void *)(v6 + 8) + 16) - 1);
    uint64_t v24 = swift_bridgeObjectRetain();
    sub_1C8CA67D4(v24);
    sub_1C8CA6060((uint64_t)"}\n", 2, v25);
    char v26 = v58[2];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C((uint64_t)v26);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v16 = v46;
    uint64_t v8 = v48;
    (*v42)(v46, v48);
    uint64_t v9 = v50;
    uint64_t v27 = MEMORY[0x1CB773090](v50, v8);
    uint64_t v21 = v54 + 1;
    a4 = v49;
    uint64_t v10 = v47;
    uint64_t v19 = v45;
    if (v53 == v27) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_19:
  sub_1C8CA3D5C(a4, (unint64_t)v16);
  swift_unexpectedError();
  __break(1u);
LABEL_20:
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

unint64_t sub_1C8CA5968(unint64_t a1)
{
  uint64_t v2 = v1;
  if (*(void *)(v1 + 16))
  {
    uint64_t v4 = *(void *)(v1 + 24);
    if (*(void *)(v4 + 16))
    {
      unint64_t v5 = sub_1C8CA5D14(a1);
      if (v6)
      {
        uint64_t v7 = *(void *)(v4 + 56) + 80 * v5;
        uint64_t v8 = *(void *)(v7 + 40);
        uint64_t v9 = *(void *)(v7 + 48);
        uint64_t v10 = *(void *)(v7 + 56);
        uint64_t v11 = *(void *)(v7 + 64);
        char v12 = *(unsigned char *)(v7 + 73);
        uint64_t v13 = *(unsigned __int8 *)(v7 + 72);
        sub_1C8CA6050(v10, v11, v13, v12);
        uint64_t v14 = swift_bridgeObjectRetain();
        sub_1C8CA67D4(v14);
        sub_1C8CA6060(v8, v9, v15);
        return sub_1C8CA6AF4(v10, v11, v13, v12);
      }
    }
  }
  uint64_t v17 = *(void *)(v2 + 48);
  if (!*(void *)(v17 + 16) || (unint64_t result = sub_1C8CA5D14(a1), (v18 & 1) == 0))
  {
    uint64_t v24 = *(void *)(v2 + 56);
    if (v24)
    {
      if (*(void *)(v24 + 16) && (unint64_t v25 = sub_1C8CA5D14(a1), (v26 & 1) != 0))
      {
        sub_1C8CA425C(*(void *)(v24 + 56) + 40 * v25, (uint64_t)&v43);
        uint64_t v27 = *((void *)&v44 + 1);
        if (*((void *)&v44 + 1))
        {
          uint64_t v28 = v45;
          unint64_t v29 = __swift_project_boxed_opaque_existential_1(&v43, *((uint64_t *)&v44 + 1));
          uint64_t v30 = *(void *)(v27 - 8);
          MEMORY[0x1F4188790](v29, v29);
          v32 = (char *)&v40[-1] - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v30 + 16))(v32);
          sub_1C8D33174((uint64_t)&v43, &qword_1EA565EA0);
          (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v28 + 24))(v40, v27, v28);
          (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v27);
          uint64_t v33 = v41;
          uint64_t v34 = v42;
          __swift_project_boxed_opaque_existential_1(v40, v41);
          uint64_t v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 16))(v33, v34);
          unint64_t v37 = v36;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
          sub_1C8D5C16C(v35, v37);
          return swift_bridgeObjectRelease();
        }
      }
      else
      {
        uint64_t v45 = 0;
        long long v43 = 0u;
        long long v44 = 0u;
      }
      sub_1C8D33174((uint64_t)&v43, &qword_1EA565EA0);
    }
    uint64_t v38 = swift_bridgeObjectRetain();
    unint64_t result = sub_1C8CA67D4(v38);
    if ((a1 & 0x8000000000000000) == 0) {
      return sub_1C8D5C98C(a1);
    }
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v19 = *(void *)(v17 + 56) + 24 * result;
  if (*(unsigned char *)(v19 + 16))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v20 = *(void *)v19;
  if (!*(void *)v19)
  {
LABEL_26:
    __break(1u);
    return result;
  }
  uint64_t v21 = *(void *)(v19 + 8);
  uint64_t v22 = swift_bridgeObjectRetain();
  sub_1C8CA67D4(v22);
  return sub_1C8CA6060(v20, v21, v23);
}

unint64_t sub_1C8CA5C9C(uint64_t a1, uint64_t a2)
{
  sub_1C8D88840();
  sub_1C8D883C0();
  uint64_t v4 = sub_1C8D888A0();
  return sub_1C8CA5E88(a1, a2, v4);
}

unint64_t sub_1C8CA5D14(uint64_t a1)
{
  uint64_t v2 = sub_1C8D88830();
  return sub_1C8CA5DEC(a1, v2);
}

unint64_t sub_1C8CA5D58(unsigned __int8 *a1, unsigned __int8 *a2)
{
  sub_1C8D88840();
  if (a1 && a2)
  {
    uint64_t v4 = a2;
    unint64_t v5 = a1;
    do
    {
      ++v5;
      sub_1C8D88860();
      --v4;
    }
    while (v4);
  }
  uint64_t v6 = sub_1C8D888A0();
  return sub_1C8CA5F6C(a1, a2, v6);
}

unint64_t sub_1C8CA5DEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1C8CA5E88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1C8D887C0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1C8D887C0() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1C8CA5F6C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t result = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = &a2[(void)a1];
    if (!a1) {
      uint64_t v8 = 0;
    }
    do
    {
      uint64_t v9 = (unsigned __int8 **)(*(void *)(v3 + 48) + 40 * result);
      if (v9[1] == a2)
      {
        uint64_t v10 = *v9;
        BOOL v11 = &a2[(void)v10];
        if (!v10) {
          BOOL v11 = 0;
        }
        uint64_t v12 = a1;
        while (1)
        {
          if (!v10 || v10 == v11)
          {
            int v14 = 0;
            int v13 = 1;
            if (!v12) {
              break;
            }
          }
          else
          {
            int v13 = 0;
            int v15 = *v10++;
            int v14 = v15;
            if (!v12) {
              break;
            }
          }
          if (v12 == v8) {
            break;
          }
          int v16 = *v12++;
          if (v14 != v16) {
            int v13 = 1;
          }
          if (v13 == 1) {
            goto LABEL_6;
          }
        }
        if (v13) {
          break;
        }
      }
LABEL_6:
      unint64_t result = (result + 1) & v7;
    }
    while (((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

uint64_t sub_1C8CA6050(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) == 0) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C8CA6060@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X8>)
{
  uint64_t v5 = *v3;
  int64_t v6 = *(void *)(*v3 + 16);
  int64_t v7 = v6 + a2;
  if (__OFADD__(v6, a2))
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = (unsigned __int8 *)result;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v3 = v5;
    if (!result || (int64_t v9 = *(void *)(v5 + 24) >> 1, v9 < v7))
    {
      if (v6 <= v7) {
        int64_t v10 = v7;
      }
      else {
        int64_t v10 = v6;
      }
      uint64_t result = (uint64_t)sub_1C8D5EB50((char *)result, v10, 1, (char *)v5);
      uint64_t v5 = result;
      *uint64_t v3 = result;
      int64_t v9 = *(void *)(result + 24) >> 1;
    }
    uint64_t v11 = *(void *)(v5 + 16);
    uint64_t v12 = v9 - v11;
    if (!a2 || v9 == v11)
    {
      a3 = &v4[a2];
      if (!v4) {
        a3 = 0;
      }
      if (a2 <= 0)
      {
        int64_t v13 = 0;
LABEL_22:
        if (v13 != v12) {
          goto LABEL_23;
        }
        goto LABEL_26;
      }
    }
    else
    {
      if (a2 >= v12) {
        int64_t v13 = v9 - v11;
      }
      else {
        int64_t v13 = a2;
      }
      uint64_t result = (uint64_t)memcpy((void *)(v5 + v11 + 32), v4, v13);
      if (v12 >= a2)
      {
        a3 = &v4[a2];
        if (v13 >= 1)
        {
          uint64_t v14 = *(void *)(v5 + 16);
          BOOL v15 = __OFADD__(v14, v13);
          uint64_t v16 = v14 + v13;
          if (v15)
          {
            __break(1u);
            return result;
          }
          *(void *)(v5 + 16) = v16;
        }
        v4 += v13;
        goto LABEL_22;
      }
    }
  }
  __break(1u);
LABEL_26:
  if (v4 && v4 != a3)
  {
    int64_t v17 = *(void *)(v5 + 16);
    int v20 = *v4;
    uint64_t v19 = v4 + 1;
    int v18 = v20;
    while (1)
    {
      unint64_t v21 = *(void *)(v5 + 24);
      int64_t v22 = v21 >> 1;
      int64_t v23 = v17 + 1;
      if ((uint64_t)(v21 >> 1) < v17 + 1)
      {
        uint64_t v33 = (char *)v5;
        uint64_t v34 = a3;
        int64_t v35 = v17;
        int v36 = v18;
        uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v21 > 1), v17 + 1, 1, v33);
        int v18 = v36;
        int64_t v17 = v35;
        a3 = v34;
        uint64_t v5 = result;
        *uint64_t v3 = result;
        int64_t v22 = *(void *)(result + 24) >> 1;
        if (v17 >= v22) {
          goto LABEL_30;
        }
      }
      else if (v17 >= v22)
      {
        goto LABEL_30;
      }
      *(unsigned char *)(v5 + 32 + v17) = v18;
      if (v19 == a3)
      {
LABEL_48:
        *(void *)(v5 + 16) = v23;
        break;
      }
      uint64_t v24 = (unsigned __int8 *)(v22 + ~v17);
      if (v24 >= &a3[~(unint64_t)v19]) {
        uint64_t v24 = &a3[~(unint64_t)v19];
      }
      unint64_t v25 = v24 + 1;
      if ((unint64_t)(v24 + 1) > 0x10 && (unint64_t)(v17 + v5 - (void)v19 + 33) >= 0x10)
      {
        char v26 = (long long *)v19;
        uint64_t v27 = v25 & 0xF;
        if ((v25 & 0xF) == 0) {
          uint64_t v27 = 16;
        }
        uint64_t v28 = &v25[-v27];
        v23 += (int64_t)v28;
        uint64_t v19 = &v28[(void)v19];
        unint64_t v29 = (_OWORD *)(v5 + v17 + 33);
        do
        {
          long long v30 = *v26++;
          *v29++ = v30;
          v28 -= 16;
        }
        while (v28);
      }
      uint64_t v31 = v19++;
      while (1)
      {
        int v32 = *v31++;
        int v18 = v32;
        if (v22 == v23) {
          break;
        }
        *(unsigned char *)(v5 + 32 + v23++) = v18;
        ++v19;
        if (v31 == a3) {
          goto LABEL_48;
        }
      }
      int64_t v17 = v22;
LABEL_30:
      *(void *)(v5 + 16) = v17;
    }
  }
LABEL_23:
  *uint64_t v3 = v5;
  return result;
}

uint64_t sub_1C8CA62B4(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1C8D881F0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = MEMORY[0x1F4188790](v6, v8);
  uint64_t v11 = &v30[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_32;
      }
      uint64_t v12 = HIDWORD(a1) - (int)a1;
      goto LABEL_6;
    case 2uLL:
      uint64_t v14 = *(void *)(a1 + 16);
      uint64_t v13 = *(void *)(a1 + 24);
      uint64_t v12 = v13 - v14;
      if (!__OFSUB__(v13, v14)) {
        goto LABEL_6;
      }
      goto LABEL_33;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v12 = BYTE6(a2);
LABEL_6:
      BOOL v15 = *v3;
      int64_t v16 = *((void *)*v3 + 2);
      int64_t v17 = v16 + v12;
      if (__OFADD__(v16, v12))
      {
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        int64_t v26 = *((void *)v15 + 2);
        sub_1C8D63150();
        sub_1C8D88630();
        if (v31) {
          return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v11, v6);
        }
        while (1)
        {
          unint64_t v27 = *((void *)v15 + 3);
          int64_t v28 = v27 >> 1;
          if ((uint64_t)(v27 >> 1) >= v26 + 1) {
            break;
          }
          BOOL v15 = sub_1C8D5EB50((char *)(v27 > 1), v26 + 1, 1, v15);
          *uint64_t v3 = v15;
          char v29 = v31;
          int64_t v28 = *((void *)v15 + 3) >> 1;
          if ((v31 & 1) == 0) {
            goto LABEL_26;
          }
LABEL_23:
          *((void *)v15 + 2) = v26;
          if (v29) {
            return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v11, v6);
          }
        }
        char v29 = 0;
        do
        {
LABEL_26:
          if (v26 >= v28) {
            break;
          }
          v15[v26++ + 32] = v30[14];
          sub_1C8D88630();
          char v29 = v31;
        }
        while ((v31 & 1) == 0);
        goto LABEL_23;
      }
      isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v3 = v15;
      if (!isUniquelyReferenced_nonNull_native || (int64_t v19 = *((void *)v15 + 3) >> 1, v19 < v17))
      {
        if (v16 <= v17) {
          int64_t v20 = v16 + v12;
        }
        else {
          int64_t v20 = v16;
        }
        BOOL v15 = sub_1C8D5EB50(isUniquelyReferenced_nonNull_native, v20, 1, v15);
        *uint64_t v3 = v15;
        int64_t v19 = *((void *)v15 + 3) >> 1;
      }
      uint64_t v21 = v19 - *((void *)v15 + 2);
      sub_1C8CA3CF8(a1, a2);
      uint64_t v22 = sub_1C8D88180();
      sub_1C8CA3D5C(a1, a2);
      uint64_t result = sub_1C8CA3D5C(a1, a2);
      if (v22 < v12) {
        goto LABEL_20;
      }
      if (v22 < 1) {
        goto LABEL_17;
      }
      uint64_t v23 = *((void *)v15 + 2);
      BOOL v24 = __OFADD__(v23, v22);
      uint64_t v25 = v23 + v22;
      if (!v24)
      {
        *((void *)v15 + 2) = v25;
LABEL_17:
        if (v22 != v21) {
          return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v11, v6);
        }
        goto LABEL_21;
      }
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
      return result;
  }
}

uint64_t sub_1C8CA6574(uint64_t result)
{
  if (BYTE1(result) < result) {
    uint64_t v2 = -(uint64_t)(result - BYTE1(result));
  }
  else {
    uint64_t v2 = BYTE1(result) - result;
  }
  uint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2 + 1;
  if (__OFADD__(v4, v2 + 1))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  __int16 v6 = result;
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v1 = v3;
  if (!isUniquelyReferenced_nonNull_native || (int64_t v8 = *((void *)v3 + 3) >> 1, v8 < v5))
  {
    if (v4 <= v5) {
      int64_t v9 = v4 + v2 + 1;
    }
    else {
      int64_t v9 = v4;
    }
    uint64_t v3 = sub_1C8D5EB50(isUniquelyReferenced_nonNull_native, v9, 1, v3);
    *uint64_t v1 = v3;
    int64_t v8 = *((void *)v3 + 3) >> 1;
  }
  uint64_t v10 = *((void *)v3 + 2);
  uint64_t v11 = v8 - v10;
  uint64_t result = sub_1C8D62E90((uint64_t)v31, (uint64_t)&v3[v10 + 32], v8 - v10, v6);
  if (result <= v2) {
    goto LABEL_18;
  }
  if (result >= 1)
  {
    uint64_t v12 = *((void *)v3 + 2);
    BOOL v13 = __OFADD__(v12, result);
    uint64_t v14 = v12 + result;
    if (v13)
    {
      __break(1u);
      goto LABEL_36;
    }
    *((void *)v3 + 2) = v14;
  }
  if (result != v11)
  {
LABEL_16:
    *uint64_t v1 = v3;
    return result;
  }
LABEL_19:
  if (v33) {
    goto LABEL_16;
  }
  uint64_t v2 = *((void *)v3 + 2);
  int v15 = v32;
  int v16 = v31[1];
  int64_t v17 = sub_1C8D62F34(v30, v32);
  char v19 = *v18;
  uint64_t result = ((uint64_t (*)(unsigned char *, void))v17)(v30, 0);
  uint64_t v20 = 0;
  BOOL v21 = v15 == v16;
  if (v15 == v16 || (uint64_t v20 = (v15 + 1), (((_WORD)v15 + 1) & 0x100) == 0))
  {
    unsigned __int8 v32 = v20;
    BOOL v33 = v15 == v16;
    while (1)
    {
      unint64_t v22 = *((void *)v3 + 3);
      int64_t v23 = v22 >> 1;
      if ((uint64_t)(v22 >> 1) < v2 + 1)
      {
        BOOL v24 = v3;
        uint64_t v25 = v20;
        BOOL v26 = v21;
        uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v22 > 1), v2 + 1, 1, v24);
        BOOL v21 = v26;
        uint64_t v20 = v25;
        uint64_t v3 = (char *)result;
        *uint64_t v1 = (char *)result;
        int64_t v23 = *(void *)(result + 24) >> 1;
        if (v2 < v23)
        {
LABEL_29:
          while (1)
          {
            v3[v2++ + 32] = v19;
            if (v21) {
              break;
            }
            int v27 = v20;
            int64_t v28 = sub_1C8D62F34(v30, v20);
            char v19 = *v29;
            uint64_t result = ((uint64_t (*)(unsigned char *, void))v28)(v30, 0);
            uint64_t v20 = 0;
            BOOL v21 = v27 == v16;
            if (v27 != v16)
            {
              uint64_t v20 = (v27 + 1);
              if ((((_WORD)v27 + 1) & 0x100) != 0)
              {
                __break(1u);
                goto LABEL_37;
              }
            }
            if (v23 == v2)
            {
              uint64_t v2 = v23;
              goto LABEL_34;
            }
          }
LABEL_36:
          *((void *)v3 + 2) = v2;
          goto LABEL_16;
        }
      }
      else if (v2 < v23)
      {
        goto LABEL_29;
      }
LABEL_34:
      *((void *)v3 + 2) = v2;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C8CA67D4(uint64_t result)
{
  int64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v1 = v3;
  if (result && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v11 = v4 + v2;
  }
  else {
    int64_t v11 = v4;
  }
  uint64_t result = (uint64_t)sub_1C8D5EB50((char *)result, v11, 1, (char *)v3);
  uint64_t v3 = result;
  *uint64_t v1 = result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  uint64_t v7 = *(void *)(v3 + 16);
  if ((*(void *)(v3 + 24) >> 1) - v7 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = (uint64_t)memcpy((void *)(v3 + v7 + 32), (const void *)(v6 + 32), v2);
  if (!v2)
  {
LABEL_14:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v8 = *(void *)(v3 + 16);
  BOOL v9 = __OFADD__(v8, v2);
  uint64_t v10 = v8 + v2;
  if (!v9)
  {
    *(void *)(v3 + 16) = v10;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

void *sub_1C8CA68C0(void *result)
{
  uint64_t v2 = result[2];
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = result;
  uint64_t result = (void *)swift_isUniquelyReferenced_nonNull_native();
  *(void *)uint64_t v1 = v3;
  if (result && v5 <= v3[3] >> 1)
  {
    if (v6[2]) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v10 = v4 + v2;
  }
  else {
    int64_t v10 = v4;
  }
  uint64_t result = sub_1C8D5F664(result, v10, 1, v3);
  uint64_t v3 = result;
  *(void *)uint64_t v1 = result;
  if (!v6[2])
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  if ((v3[3] >> 1) - v3[2] < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA565EC0);
  uint64_t result = (void *)swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    uint64_t result = (void *)swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v7 = v3[2];
  BOOL v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    v3[2] = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1C8CA69C8(uint64_t result, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    uint64_t result = sub_1C8D88420();
    uint64_t v3 = result;
  }
  else if ((a2 & 0x2000000000000000) != 0)
  {
    uint64_t v3 = HIBYTE(a2) & 0xF;
  }
  else
  {
    uint64_t v3 = result & 0xFFFFFFFFFFFFLL;
  }
  int64_t v4 = *v2;
  int64_t v5 = *((void *)*v2 + 2);
  int64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
  }
  else
  {
    isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v2 = v4;
    if (!isUniquelyReferenced_nonNull_native || *((void *)v4 + 3) >> 1 < v6)
    {
      if (v5 <= v6) {
        int64_t v8 = v5 + v3;
      }
      else {
        int64_t v8 = v5;
      }
      int64_t v4 = sub_1C8D5EB50(isUniquelyReferenced_nonNull_native, v8, 1, v4);
      *uint64_t v2 = v4;
    }
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C8D88690();
    if (v9) {
      goto LABEL_22;
    }
    uint64_t v10 = result;
    uint64_t result = swift_bridgeObjectRelease_n();
    if (v10 >= v3)
    {
      if (v10 < 1)
      {
LABEL_17:
        *uint64_t v2 = v4;
        return result;
      }
      uint64_t v11 = *((void *)v4 + 2);
      BOOL v12 = __OFADD__(v11, v10);
      uint64_t v13 = v11 + v10;
      if (!v12)
      {
        *((void *)v4 + 2) = v13;
        goto LABEL_17;
      }
      goto LABEL_21;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_1C8CA6AF4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) == 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C8CA6B04@<X0>(unsigned __int8 *a1@<X8>)
{
  sub_1C8CA6060((uint64_t)" {\n", 3, a1);
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v1 + 8) = v2;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
    uint64_t v2 = result;
    *(void *)(v1 + 8) = result;
  }
  unint64_t v5 = *(void *)(v2 + 16);
  unint64_t v4 = *(void *)(v2 + 24);
  unint64_t v6 = v5 + 1;
  if (v5 >= v4 >> 1)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v4 > 1), v5 + 1, 1, (char *)v2);
    uint64_t v2 = result;
  }
  *(void *)(v2 + 16) = v6;
  *(unsigned char *)(v2 + v5 + 32) = 32;
  *(void *)(v1 + 8) = v2;
  unint64_t v7 = *(void *)(v2 + 24);
  int64_t v8 = v5 + 2;
  if (v8 > (uint64_t)(v7 >> 1))
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v7 > 1), v8, 1, (char *)v2);
    uint64_t v2 = result;
  }
  *(void *)(v2 + 16) = v8;
  *(unsigned char *)(v2 + v6 + 32) = 32;
  *(void *)(v1 + 8) = v2;
  return result;
}

uint64_t dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 112))();
}

uint64_t sub_1C8CA6C24(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C8CA6C50(a1, a2, a3, (void (*)(uint64_t, uint64_t))sub_1C8CA6D2C);
}

uint64_t sub_1C8CA6C50(uint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  sub_1C8CA5968(a3);
  sub_1C8CA6060((uint64_t)": ", 2, v8);
  a4(a1, a2);
  uint64_t v9 = *v4;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *unint64_t v4 = v9;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50(0, *(void *)(v9 + 16) + 1, 1, (char *)v9);
    uint64_t v9 = result;
    *unint64_t v4 = result;
  }
  unint64_t v12 = *(void *)(v9 + 16);
  unint64_t v11 = *(void *)(v9 + 24);
  if (v12 >= v11 >> 1)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v11 > 1), v12 + 1, 1, (char *)v9);
    uint64_t v9 = result;
  }
  *(void *)(v9 + 16) = v12 + 1;
  *(unsigned char *)(v9 + v12 + 32) = 10;
  *unint64_t v4 = v9;
  return result;
}

uint64_t sub_1C8CA6D2C(uint64_t a1, unint64_t a2)
{
  unint64_t v5 = *v2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v2 = v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_85:
    unint64_t v5 = sub_1C8D5EB50(0, *((void *)v5 + 2) + 1, 1, v5);
    *uint64_t v2 = v5;
  }
  unint64_t v8 = *((void *)v5 + 2);
  unint64_t v7 = *((void *)v5 + 3);
  if (v8 >= v7 >> 1) {
    unint64_t v5 = sub_1C8D5EB50((char *)(v7 > 1), v8 + 1, 1, v5);
  }
  *((void *)v5 + 2) = v8 + 1;
  v5[v8 + 32] = 34;
  *uint64_t v2 = v5;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v9 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v9 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v9)
  {
    swift_bridgeObjectRetain();
    unint64_t v5 = 0;
    uint64_t v55 = a1;
    while (2)
    {
      if ((a2 & 0x1000000000000000) != 0)
      {
        unsigned int v11 = sub_1C8D88670();
      }
      else
      {
        if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0) {
          sub_1C8D886C0();
        }
        unsigned int v11 = sub_1C8D886D0();
      }
      unsigned int v14 = v11;
      uint64_t v15 = v12;
      switch(v11)
      {
        case 8u:
          uint64_t v10 = "\\b";
          goto LABEL_10;
        case 9u:
          uint64_t v10 = "\\t";
          goto LABEL_10;
        case 0xAu:
          uint64_t v10 = "\\n";
          goto LABEL_10;
        case 0xBu:
          uint64_t v10 = "\\v";
          goto LABEL_10;
        case 0xCu:
          uint64_t v10 = "\\f";
          goto LABEL_10;
        case 0xDu:
          uint64_t v10 = "\\r";
          goto LABEL_10;
        case 0xEu:
        case 0xFu:
        case 0x10u:
        case 0x11u:
        case 0x12u:
        case 0x13u:
        case 0x14u:
        case 0x15u:
        case 0x16u:
        case 0x17u:
        case 0x18u:
        case 0x19u:
        case 0x1Au:
        case 0x1Bu:
        case 0x1Cu:
        case 0x1Du:
        case 0x1Eu:
        case 0x1Fu:
        case 0x20u:
        case 0x21u:
          goto LABEL_22;
        case 0x22u:
          uint64_t v10 = "\\\"";
          goto LABEL_10;
        default:
          if (v11 == 92)
          {
            uint64_t v10 = "\\\\"";
LABEL_10:
            sub_1C8CA6060((uint64_t)v10, 2, v13);
          }
          else
          {
LABEL_22:
            if (v11 < 0x20 || v11 == 127)
            {
              int64_t v17 = *v2;
              char v28 = swift_isUniquelyReferenced_nonNull_native();
              *uint64_t v2 = v17;
              if ((v28 & 1) == 0)
              {
                int64_t v17 = sub_1C8D5EB50(0, *((void *)v17 + 2) + 1, 1, v17);
                *uint64_t v2 = v17;
              }
              unint64_t v30 = *((void *)v17 + 2);
              unint64_t v29 = *((void *)v17 + 3);
              unint64_t v31 = v30 + 1;
              if (v30 >= v29 >> 1) {
                int64_t v17 = sub_1C8D5EB50((char *)(v29 > 1), v30 + 1, 1, v17);
              }
              *((void *)v17 + 2) = v31;
              v17[v30 + 32] = 92;
              *uint64_t v2 = v17;
              unint64_t v32 = *((void *)v17 + 3);
              unint64_t v33 = v30 + 2;
              if ((uint64_t)(v30 + 2) > (uint64_t)(v32 >> 1)) {
                int64_t v17 = sub_1C8D5EB50((char *)(v32 > 1), v30 + 2, 1, v17);
              }
              *((void *)v17 + 2) = v33;
              v17[v31 + 32] = (v14 >> 6) + 48;
              *uint64_t v2 = v17;
              unint64_t v34 = *((void *)v17 + 3);
              unint64_t v25 = v30 + 3;
              if ((uint64_t)(v30 + 3) > (uint64_t)(v34 >> 1)) {
                int64_t v17 = sub_1C8D5EB50((char *)(v34 > 1), v30 + 3, 1, v17);
              }
              *((void *)v17 + 2) = v25;
              v17[v33 + 32] = (v14 >> 3) & 7 | 0x30;
              *uint64_t v2 = v17;
              unint64_t v35 = *((void *)v17 + 3);
              int64_t v27 = v30 + 4;
              if ((uint64_t)(v30 + 4) > (uint64_t)(v35 >> 1)) {
                int64_t v17 = sub_1C8D5EB50((char *)(v35 > 1), v30 + 4, 1, v17);
              }
              char v36 = v14 & 7 | 0x30;
              goto LABEL_54;
            }
            if (v11 > 0x7F)
            {
              if (v11 <= 0x7FF)
              {
                int64_t v17 = *v2;
                char v42 = swift_isUniquelyReferenced_nonNull_native();
                *uint64_t v2 = v17;
                if ((v42 & 1) == 0)
                {
                  int64_t v17 = sub_1C8D5EB50(0, *((void *)v17 + 2) + 1, 1, v17);
                  *uint64_t v2 = v17;
                }
                unint64_t v44 = *((void *)v17 + 2);
                unint64_t v43 = *((void *)v17 + 3);
                unint64_t v45 = v44 + 1;
                if (v44 >= v43 >> 1) {
                  int64_t v17 = sub_1C8D5EB50((char *)(v43 > 1), v44 + 1, 1, v17);
                }
                *((void *)v17 + 2) = v45;
                v17[v44 + 32] = (v14 >> 6) - 64;
                *uint64_t v2 = v17;
                unint64_t v46 = *((void *)v17 + 3);
                if ((uint64_t)(v44 + 2) > (uint64_t)(v46 >> 1)) {
                  int64_t v17 = sub_1C8D5EB50((char *)(v46 > 1), v44 + 2, 1, v17);
                }
                char v36 = v14 & 0x3F | 0x80;
                *((void *)v17 + 2) = v44 + 2;
                unint64_t v37 = &v17[v45];
              }
              else
              {
                if (HIWORD(v11))
                {
                  char v16 = (v11 >> 18) - 16;
                  if ((((v11 >> 18) + 240) & 0x100) != 0)
                  {
                    __break(1u);
                    goto LABEL_85;
                  }
                  int64_t v17 = *v2;
                  char v18 = swift_isUniquelyReferenced_nonNull_native();
                  *uint64_t v2 = v17;
                  if ((v18 & 1) == 0)
                  {
                    int64_t v17 = sub_1C8D5EB50(0, *((void *)v17 + 2) + 1, 1, v17);
                    *uint64_t v2 = v17;
                  }
                  unint64_t v20 = *((void *)v17 + 2);
                  unint64_t v19 = *((void *)v17 + 3);
                  unint64_t v21 = v20 + 1;
                  if (v20 >= v19 >> 1) {
                    int64_t v17 = sub_1C8D5EB50((char *)(v19 > 1), v20 + 1, 1, v17);
                  }
                  *((void *)v17 + 2) = v21;
                  v17[v20 + 32] = v16;
                  *uint64_t v2 = v17;
                  unint64_t v22 = *((void *)v17 + 3);
                  unint64_t v23 = v20 + 2;
                  if ((uint64_t)(v20 + 2) > (uint64_t)(v22 >> 1)) {
                    int64_t v17 = sub_1C8D5EB50((char *)(v22 > 1), v20 + 2, 1, v17);
                  }
                  *((void *)v17 + 2) = v23;
                  v17[v21 + 32] = (v14 >> 12) & 0x3F | 0x80;
                  *uint64_t v2 = v17;
                  unint64_t v24 = *((void *)v17 + 3);
                  unint64_t v25 = v20 + 3;
                  if ((uint64_t)(v20 + 3) > (uint64_t)(v24 >> 1)) {
                    int64_t v17 = sub_1C8D5EB50((char *)(v24 > 1), v20 + 3, 1, v17);
                  }
                  *((void *)v17 + 2) = v25;
                  v17[v23 + 32] = (v14 >> 6) & 0x3F | 0x80;
                  *uint64_t v2 = v17;
                  unint64_t v26 = *((void *)v17 + 3);
                  int64_t v27 = v20 + 4;
                }
                else
                {
                  int64_t v17 = *v2;
                  char v47 = swift_isUniquelyReferenced_nonNull_native();
                  *uint64_t v2 = v17;
                  if ((v47 & 1) == 0)
                  {
                    int64_t v17 = sub_1C8D5EB50(0, *((void *)v17 + 2) + 1, 1, v17);
                    *uint64_t v2 = v17;
                  }
                  unint64_t v49 = *((void *)v17 + 2);
                  unint64_t v48 = *((void *)v17 + 3);
                  unint64_t v50 = v49 + 1;
                  if (v49 >= v48 >> 1) {
                    int64_t v17 = sub_1C8D5EB50((char *)(v48 > 1), v49 + 1, 1, v17);
                  }
                  *((void *)v17 + 2) = v50;
                  v17[v49 + 32] = (v14 >> 12) - 32;
                  *uint64_t v2 = v17;
                  unint64_t v51 = *((void *)v17 + 3);
                  unint64_t v25 = v49 + 2;
                  if ((uint64_t)(v49 + 2) > (uint64_t)(v51 >> 1)) {
                    int64_t v17 = sub_1C8D5EB50((char *)(v51 > 1), v49 + 2, 1, v17);
                  }
                  *((void *)v17 + 2) = v25;
                  v17[v50 + 32] = (v14 >> 6) & 0x3F | 0x80;
                  *uint64_t v2 = v17;
                  unint64_t v26 = *((void *)v17 + 3);
                  int64_t v27 = v49 + 3;
                }
                if (v27 > (uint64_t)(v26 >> 1)) {
                  int64_t v17 = sub_1C8D5EB50((char *)(v26 > 1), v27, 1, v17);
                }
                char v36 = v14 & 0x3F | 0x80;
LABEL_54:
                *((void *)v17 + 2) = v27;
                unint64_t v37 = &v17[v25];
              }
              v37[32] = v36;
              *uint64_t v2 = v17;
              a1 = v55;
              goto LABEL_11;
            }
            uint64_t v38 = *v2;
            char v39 = swift_isUniquelyReferenced_nonNull_native();
            *uint64_t v2 = v38;
            if ((v39 & 1) == 0)
            {
              uint64_t v38 = sub_1C8D5EB50(0, *((void *)v38 + 2) + 1, 1, v38);
              *uint64_t v2 = v38;
            }
            unint64_t v41 = *((void *)v38 + 2);
            unint64_t v40 = *((void *)v38 + 3);
            if (v41 >= v40 >> 1) {
              uint64_t v38 = sub_1C8D5EB50((char *)(v40 > 1), v41 + 1, 1, v38);
            }
            *((void *)v38 + 2) = v41 + 1;
            v38[v41 + 32] = v14;
            *uint64_t v2 = v38;
          }
LABEL_11:
          v5 += v15;
          if ((uint64_t)v5 < v9) {
            continue;
          }
          swift_bridgeObjectRelease();
          unint64_t v5 = *v2;
          break;
      }
      break;
    }
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v2 = v5;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50(0, *((void *)v5 + 2) + 1, 1, v5);
    unint64_t v5 = (char *)result;
    *uint64_t v2 = (char *)result;
  }
  unint64_t v54 = *((void *)v5 + 2);
  unint64_t v53 = *((void *)v5 + 3);
  if (v54 >= v53 >> 1)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v53 > 1), v54 + 1, 1, v5);
    unint64_t v5 = (char *)result;
  }
  *((void *)v5 + 2) = v54 + 1;
  v5[v54 + 32] = 34;
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1C8CA7498(unint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v1 = v3;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C8CC54D8(v3);
    uint64_t v3 = result;
    *uint64_t v1 = result;
  }
  unint64_t v5 = *(void *)(v3 + 16);
  if (v5 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v6 = v5 - 1;
    uint64_t v7 = *(unsigned __int8 *)(v3 + a1 + 32);
    memmove((void *)(v3 + a1 + 32), (const void *)(v3 + a1 + 33), v5 - 1 - a1);
    *(void *)(v3 + 16) = v6;
    *uint64_t v1 = v3;
    return v7;
  }
  return result;
}

uint64_t dispatch thunk of Visitor.visitRepeatedStringField(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 256))();
}

uint64_t sub_1C8CA754C(uint64_t a1, unint64_t a2)
{
  return sub_1C8CA7564(a1, a2);
}

uint64_t sub_1C8CA7564(uint64_t result, unint64_t a2)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    unint64_t v5 = (unint64_t *)(swift_bridgeObjectRetain() + 40);
    do
    {
      uint64_t v6 = *(v5 - 1);
      unint64_t v7 = *v5;
      swift_bridgeObjectRetain();
      sub_1C8CA5968(a2);
      sub_1C8CA6060((uint64_t)": ", 2, v8);
      sub_1C8CA6D2C(v6, v7);
      swift_bridgeObjectRelease();
      uint64_t v9 = *v2;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v2 = v9;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v9 = sub_1C8D5EB50(0, *((void *)v9 + 2) + 1, 1, v9);
        *uint64_t v2 = v9;
      }
      unint64_t v12 = *((void *)v9 + 2);
      unint64_t v11 = *((void *)v9 + 3);
      if (v12 >= v11 >> 1) {
        uint64_t v9 = sub_1C8D5EB50((char *)(v11 > 1), v12 + 1, 1, v9);
      }
      v5 += 2;
      *((void *)v9 + 2) = v12 + 1;
      v9[v12 + 32] = 10;
      *uint64_t v2 = v9;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C8CA7690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CA76A8(a1, a2, a3, a4);
}

uint64_t sub_1C8CA76A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v41 = a4;
  uint64_t v8 = *(void *)(a3 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = MEMORY[0x1F4188790](a1, a2);
  unint64_t v11 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v10, v12);
  char v42 = (char *)&v35 - v16;
  unsigned int v17 = 8 * v14;
  uint64_t v18 = 2;
  uint64_t v19 = 3;
  uint64_t v20 = 4;
  if ((8 * v14) >> 28) {
    uint64_t v20 = 5;
  }
  if (v17 >= 0x200000) {
    uint64_t v19 = v20;
  }
  if ((8 * v14) >> 14) {
    uint64_t v18 = v19;
  }
  if (v17 >= 0x80) {
    uint64_t v21 = v18;
  }
  else {
    uint64_t v21 = 1;
  }
  uint64_t result = MEMORY[0x1CB773070](v13, v15);
  uint64_t v23 = result * v21;
  if ((unsigned __int128)(result * (__int128)v21) >> 64 != (result * v21) >> 63) {
    goto LABEL_44;
  }
  BOOL v24 = __OFADD__(*v4, v23);
  uint64_t v25 = *v4 + v23;
  if (v24)
  {
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
  }
  else
  {
    *unint64_t v4 = v25;
    uint64_t v26 = swift_bridgeObjectRetain();
    if (MEMORY[0x1CB773090](v26, a3))
    {
      uint64_t v36 = v9;
      unint64_t v37 = v4;
      uint64_t v27 = 0;
      char v39 = (void (**)(char *, char *, uint64_t))(v8 + 32);
      unint64_t v40 = (void (**)(char *, uint64_t *, uint64_t))(v8 + 16);
      uint64_t v38 = (void (**)(char *, uint64_t))(v8 + 8);
      do
      {
        char v28 = sub_1C8D88510();
        sub_1C8D884D0();
        if (v28)
        {
          (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v42, a1+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v27, a3);
          uint64_t v29 = v27 + 1;
          if (__OFADD__(v27, 1)) {
            goto LABEL_38;
          }
        }
        else
        {
          uint64_t result = sub_1C8D886B0();
          if (v36 != 8) {
            goto LABEL_46;
          }
          uint64_t v43 = result;
          (*v40)(v42, &v43, a3);
          swift_unknownObjectRelease();
          uint64_t v29 = v27 + 1;
          if (__OFADD__(v27, 1))
          {
LABEL_38:
            __break(1u);
LABEL_39:
            (*v38)(v11, a3);
            return swift_bridgeObjectRelease();
          }
        }
        (*v39)(v11, v42, a3);
        uint64_t result = sub_1C8CA7A1C(a3, v41);
        if (v5) {
          goto LABEL_39;
        }
        unint64_t v30 = result;
        if (result < 0)
        {
          __break(1u);
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          goto LABEL_45;
        }
        uint64_t result = ((uint64_t (*)(char *, uint64_t))*v38)(v11, a3);
        if (v30 <= 0x7F)
        {
          uint64_t v31 = 1;
          goto LABEL_31;
        }
        if (v30 >> 35)
        {
          if (v30 >> 49)
          {
            unint64_t v32 = v30 >> 28;
            uint64_t v31 = 8;
LABEL_29:
            if (!(v32 >> 28)) {
              goto LABEL_31;
            }
LABEL_30:
            ++v31;
            goto LABEL_31;
          }
          uint64_t v31 = 6;
          if (v30 >> 42) {
            goto LABEL_30;
          }
        }
        else
        {
          if (v30 >= 0x200000)
          {
            uint64_t v31 = 4;
            unint64_t v32 = v30;
            goto LABEL_29;
          }
          uint64_t v31 = 2;
          if (v30 >= 0x4000) {
            goto LABEL_30;
          }
        }
LABEL_31:
        BOOL v24 = __OFADD__(v31, v30);
        unint64_t v33 = v31 + v30;
        if (v24) {
          goto LABEL_42;
        }
        BOOL v24 = __OFADD__(*v37, v33);
        unint64_t v34 = *v37 + v33;
        if (v24) {
          goto LABEL_43;
        }
        *unint64_t v37 = v34;
        ++v27;
      }
      while (v29 != MEMORY[0x1CB773090](a1, a3));
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C8CA7A1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = 0;
  uint64_t result = (*(uint64_t (**)(uint64_t *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(a2 + 72))(&v4, &type metadata for BinaryEncodingSizeVisitor, &off_1F2354500, a1, a2);
  if (!v2) {
    return v4;
  }
  return result;
}

uint64_t sub_1C8CA7A78(uint64_t a1, unint64_t a2, int a3)
{
  return sub_1C8CA7A90(a1, a2, a3);
}

uint64_t sub_1C8CA7A90(uint64_t a1, unint64_t a2, int a3)
{
  unsigned int v4 = 8 * a3;
  if ((8 * a3) >= 0x80)
  {
    if (v4 >= 0x4000)
    {
      if (v4 >> 21)
      {
        if (v4 >> 28)
        {
          uint64_t v5 = 5;
          if ((a2 & 0x1000000000000000) != 0) {
            goto LABEL_20;
          }
        }
        else
        {
          uint64_t v5 = 4;
          if ((a2 & 0x1000000000000000) != 0) {
            goto LABEL_20;
          }
        }
      }
      else
      {
        uint64_t v5 = 3;
        if ((a2 & 0x1000000000000000) != 0) {
          goto LABEL_20;
        }
      }
LABEL_3:
      if ((a2 & 0x2000000000000000) == 0)
      {
LABEL_4:
        unint64_t v6 = a1 & 0xFFFFFFFFFFFFLL;
        goto LABEL_9;
      }
      goto LABEL_8;
    }
    uint64_t v5 = 2;
    if ((a2 & 0x1000000000000000) == 0)
    {
      if ((a2 & 0x2000000000000000) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      unint64_t v6 = HIBYTE(a2) & 0xF;
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v5 = 1;
    if ((a2 & 0x1000000000000000) == 0) {
      goto LABEL_3;
    }
  }
LABEL_20:
  unint64_t v6 = sub_1C8D88420();
LABEL_9:
  uint64_t result = sub_1C8CA7C20(v6);
  uint64_t v8 = v5 + result;
  if (__OFADD__(v5, result))
  {
    __break(1u);
    goto LABEL_22;
  }
  BOOL v9 = __OFADD__(v8, v6);
  unint64_t v10 = v8 + v6;
  if (v9)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  BOOL v9 = __OFADD__(*v3, v10);
  unint64_t v11 = *v3 + v10;
  if (!v9)
  {
    *uint64_t v3 = v11;
    return result;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1C8CA7B64(unsigned int a1)
{
  uint64_t v1 = 1;
  uint64_t v2 = 2;
  uint64_t v3 = 3;
  uint64_t v4 = 4;
  if (a1 >> 28) {
    uint64_t v4 = 5;
  }
  if (a1 >= 0x200000) {
    uint64_t v3 = v4;
  }
  if (a1 >= 0x4000) {
    uint64_t v2 = v3;
  }
  if (a1 >= 0x80) {
    uint64_t v1 = v2;
  }
  if ((a1 & 0x80000000) == 0) {
    return v1;
  }
  else {
    return 10;
  }
}

uint64_t sub_1C8CA7BA8(unint64_t a1)
{
  if (a1 < 0x80) {
    return 1;
  }
  unint64_t v2 = a1;
  if ((a1 & 0x8000000000000000) != 0) {
    return 10;
  }
  if (a1 >> 35)
  {
    if (!(a1 >> 49))
    {
      uint64_t result = 6;
      if (v2 >> 42) {
        return ++result;
      }
      return result;
    }
    unint64_t v2 = a1 >> 28;
    uint64_t result = 8;
  }
  else
  {
    if (a1 < 0x200000)
    {
      uint64_t result = 2;
      if (v2 < 0x4000) {
        return result;
      }
      return ++result;
    }
    uint64_t result = 4;
  }
  if (v2 >> 28) {
    return ++result;
  }
  return result;
}

uint64_t sub_1C8CA7C20(unint64_t a1)
{
  if (a1 < 0x80) {
    return 1;
  }
  unint64_t v2 = a1;
  if ((a1 & 0x8000000000000000) != 0) {
    return 10;
  }
  if (!(a1 >> 35))
  {
    if (!(a1 >> 21))
    {
      uint64_t result = 2;
      if (v2 < 0x4000) {
        return result;
      }
      return ++result;
    }
    uint64_t result = 4;
LABEL_14:
    if (!(v2 >> 28)) {
      return result;
    }
    return ++result;
  }
  if (a1 >> 49)
  {
    unint64_t v2 = a1 >> 28;
    uint64_t result = 8;
    goto LABEL_14;
  }
  uint64_t result = 6;
  if (v2 >> 42) {
    return ++result;
  }
  return result;
}

unint64_t sub_1C8CA7C98(unint64_t a1, int a2)
{
  return sub_1C8CA7CB0(a1, a2);
}

unint64_t sub_1C8CA7CB0(unint64_t result, int a2)
{
  uint64_t v3 = *(void *)(result + 16);
  if (!v3) {
    return result;
  }
  unsigned int v4 = 8 * a2;
  uint64_t v5 = *v2;
  for (i = (unint64_t *)(result + 40); ; i += 2)
  {
    unint64_t v7 = *i;
    if (v4 > 0x7F)
    {
      if (v4 >= 0x4000)
      {
        if (v4 >= 0x200000)
        {
          if (v4 >> 28)
          {
            uint64_t v8 = 5;
            if ((v7 & 0x1000000000000000) != 0)
            {
LABEL_14:
              uint64_t result = sub_1C8D88420();
              if (result < 0x80) {
                goto LABEL_17;
              }
              goto LABEL_7;
            }
          }
          else
          {
            uint64_t v8 = 4;
            if ((v7 & 0x1000000000000000) != 0) {
              goto LABEL_14;
            }
          }
        }
        else
        {
          uint64_t v8 = 3;
          if ((v7 & 0x1000000000000000) != 0) {
            goto LABEL_14;
          }
        }
      }
      else
      {
        uint64_t v8 = 2;
        if ((v7 & 0x1000000000000000) != 0) {
          goto LABEL_14;
        }
      }
    }
    else
    {
      uint64_t v8 = 1;
      if ((v7 & 0x1000000000000000) != 0) {
        goto LABEL_14;
      }
    }
    if ((v7 & 0x2000000000000000) != 0)
    {
      uint64_t result = HIBYTE(v7) & 0xF;
LABEL_17:
      uint64_t v9 = 1;
      goto LABEL_18;
    }
    uint64_t result = *(i - 1) & 0xFFFFFFFFFFFFLL;
    if (result < 0x80) {
      goto LABEL_17;
    }
LABEL_7:
    if ((result & 0x8000000000000000) != 0)
    {
      uint64_t v9 = 10;
      goto LABEL_18;
    }
    if (!(result >> 35))
    {
      if (result >= 0x200000)
      {
        uint64_t v9 = 4;
        if (!(result >> 28)) {
          goto LABEL_18;
        }
      }
      else
      {
        uint64_t v9 = 2;
        if (result < 0x4000) {
          goto LABEL_18;
        }
      }
LABEL_37:
      ++v9;
      goto LABEL_18;
    }
    if (result >> 49)
    {
      uint64_t v9 = 8;
      if (!HIBYTE(result)) {
        goto LABEL_18;
      }
      goto LABEL_37;
    }
    uint64_t v9 = result >> 42 ? 7 : 6;
LABEL_18:
    uint64_t v10 = v9 + v8;
    BOOL v11 = __OFADD__(v10, result);
    unint64_t v12 = v10 + result;
    if (v11) {
      break;
    }
    BOOL v11 = __OFADD__(v5, v12);
    v5 += v12;
    if (v11) {
      goto LABEL_41;
    }
    if (!--v3)
    {
      *unint64_t v2 = v5;
      return result;
    }
  }
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

unint64_t sub_1C8CA7E24(unint64_t result, int a2)
{
  uint64_t v23 = *(void *)(result + 16);
  if (!v23) {
    return result;
  }
  uint64_t v3 = 0;
  unint64_t v4 = (8 * a2) | 2;
  unint64_t v21 = v4;
  unint64_t v22 = result + 32;
  while (1)
  {
    uint64_t v5 = (unint64_t *)(v22 + 16 * v3);
    unint64_t v6 = *v5;
    unint64_t v7 = v5[1];
    uint64_t v8 = *v2;
    uint64_t v24 = v3;
    if (v4 >= 0x80)
    {
      unint64_t v9 = v4;
      do
      {
        *v8++ = v9 | 0x80;
        unint64_t v4 = v9 >> 7;
        unint64_t v10 = v9 >> 14;
        v9 >>= 7;
      }
      while (v10);
    }
    *uint64_t v8 = v4;
    *unint64_t v2 = v8 + 1;
    unint64_t v11 = HIBYTE(v7) & 0xF;
    if ((v7 & 0x1000000000000000) != 0)
    {
      unint64_t v13 = sub_1C8D88420();
      uint64_t v12 = v7 & 0x2000000000000000;
    }
    else
    {
      uint64_t v12 = (v7 & 0x2000000000000000) != 0;
      if ((v7 & 0x2000000000000000) != 0) {
        unint64_t v13 = HIBYTE(v7) & 0xF;
      }
      else {
        unint64_t v13 = v6 & 0xFFFFFFFFFFFFLL;
      }
    }
    uint64_t result = sub_1C8CAB02C(v13);
    uint64_t v25 = v12;
    if (!v12) {
      unint64_t v11 = v6 & 0xFFFFFFFFFFFFLL;
    }
    if (v11) {
      break;
    }
LABEL_3:
    uint64_t v3 = v24 + 1;
    unint64_t v4 = v21;
    if (v24 + 1 == v23) {
      return result;
    }
  }
  uint64_t v14 = (v6 >> 59) & 1;
  if ((v7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  unint64_t v16 = 15;
  while (1)
  {
    unint64_t v18 = v16 & 0xC;
    uint64_t result = v16;
    if (v18 == v15) {
      uint64_t result = sub_1C8D62E14(v16, v6, v7);
    }
    unint64_t v19 = result >> 16;
    if (result >> 16 >= v11) {
      break;
    }
    if ((v7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_1C8D88460();
      char v20 = result;
      if (v18 != v15) {
        goto LABEL_27;
      }
    }
    else if (v25)
    {
      v26[0] = v6;
      v26[1] = v7 & 0xFFFFFFFFFFFFFFLL;
      char v20 = *((unsigned char *)v26 + v19);
      if (v18 != v15) {
        goto LABEL_27;
      }
    }
    else
    {
      uint64_t result = (v7 & 0xFFFFFFFFFFFFFFFLL) + 32;
      if ((v6 & 0x1000000000000000) == 0) {
        uint64_t result = sub_1C8D886C0();
      }
      char v20 = *(unsigned char *)(result + v19);
      if (v18 != v15)
      {
LABEL_27:
        if ((v7 & 0x1000000000000000) == 0) {
          goto LABEL_17;
        }
        goto LABEL_28;
      }
    }
    uint64_t result = sub_1C8D62E14(v16, v6, v7);
    unint64_t v16 = result;
    if ((v7 & 0x1000000000000000) == 0)
    {
LABEL_17:
      unint64_t v16 = (v16 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_18;
    }
LABEL_28:
    if (v11 <= v16 >> 16) {
      goto LABEL_38;
    }
    uint64_t result = sub_1C8D88430();
    unint64_t v16 = result;
LABEL_18:
    unsigned int v17 = *v2;
    *unsigned int v17 = v20;
    *unint64_t v2 = v17 + 1;
    if (4 * v11 == v16 >> 14) {
      goto LABEL_3;
    }
  }
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1C8CA8058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)(a1, a2, a5, a3, a6, a4);
}

uint64_t Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v29 = a3;
  uint64_t v30 = a6;
  uint64_t v28 = a2;
  uint64_t v10 = *(void *)(a4 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = MEMORY[0x1F4188790](a1, a2);
  unint64_t v13 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12, v14);
  uint64_t v31 = (char *)&v21 - v15;
  uint64_t v16 = swift_bridgeObjectRetain();
  if (!MEMORY[0x1CB773090](v16, a4)) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v17 = 0;
  uint64_t v26 = a5;
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 136);
  uint64_t v25 = a5 + 136;
  uint64_t v27 = (void (**)(char *, uint64_t *, uint64_t))(v10 + 16);
  uint64_t v22 = v11;
  uint64_t v23 = (void (**)(char *, char *, uint64_t))(v10 + 32);
  while (1)
  {
    char v18 = sub_1C8D88510();
    sub_1C8D884D0();
    if (v18)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v31, a1+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v17, a4);
      uint64_t v19 = v17 + 1;
      if (__OFADD__(v17, 1)) {
        goto LABEL_11;
      }
      goto LABEL_5;
    }
    uint64_t result = sub_1C8D886B0();
    if (v22 != 8) {
      break;
    }
    uint64_t v32 = result;
    (*v27)(v31, &v32, a4);
    swift_unknownObjectRelease();
    uint64_t v19 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_11:
      __break(1u);
      return swift_bridgeObjectRelease();
    }
LABEL_5:
    (*v23)(v13, v31, a4);
    v24(v13, v28, a4, v30, v29, v26);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, a4);
    if (!v6)
    {
      ++v17;
      if (v19 != MEMORY[0x1CB773090](a1, a4)) {
        continue;
      }
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

unint64_t sub_1C8CA82EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CA8304(a1, a2, a3, a4);
}

unint64_t sub_1C8CA8304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C8CA83B4(a2, 2u);
  unint64_t result = sub_1C8CA7A1C(a3, a4);
  if (!v5)
  {
    sub_1C8CAB02C(result);
    return (*(uint64_t (**)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(a4 + 72))(v4, &type metadata for BinaryEncodingVisitor, &off_1F2355030, a3, a4);
  }
  return result;
}

uint64_t sub_1C8CA83B4(uint64_t result, unsigned __int8 a2)
{
  unint64_t v3 = (8 * result) | (unint64_t)a2;
  uint64_t v4 = *v2;
  if (v3 < 0x80)
  {
    LOBYTE(v5) = (8 * result) | a2;
  }
  else
  {
    do
    {
      *v4++ = v3 | 0x80;
      unint64_t v5 = v3 >> 7;
      unint64_t v6 = v3 >> 14;
      v3 >>= 7;
    }
    while (v6);
  }
  *uint64_t v4 = v5;
  *unint64_t v2 = v4 + 1;
  return result;
}

uint64_t sub_1C8CA83F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C8CA8424(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t))sub_1C8CA8478);
}

uint64_t sub_1C8CA8424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t))
{
  return a6(a1, a2);
}

unint64_t sub_1C8CA8478(unint64_t result, unint64_t a2)
{
  unint64_t v4 = result;
  unint64_t v5 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_37;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    result &= 0xFFFFFFFFFFFFuLL;
    goto LABEL_4;
  }
  unint64_t v6 = *v2;
  uint64_t v7 = HIBYTE(a2) & 0xF;
LABEL_9:
  unsigned char *v6 = v7;
  *unint64_t v2 = v6 + 1;
  if ((a2 & 0x2000000000000000) != 0) {
    unint64_t v9 = v5;
  }
  else {
    unint64_t v9 = v4 & 0xFFFFFFFFFFFFLL;
  }
  if (v9)
  {
    uint64_t v10 = (v4 >> 59) & 1;
    if ((a2 & 0x1000000000000000) == 0) {
      LOBYTE(v10) = 1;
    }
    uint64_t v11 = 4 << v10;
    unint64_t v5 = 15;
    do
    {
      unint64_t v13 = v5 & 0xC;
      unint64_t result = v5;
      if (v13 == v11) {
        unint64_t result = sub_1C8D62E14(v5, v4, a2);
      }
      unint64_t v14 = result >> 16;
      if (result >> 16 >= v9)
      {
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        unint64_t result = sub_1C8D88420();
LABEL_4:
        unint64_t v6 = *v2;
        if (result < 0x80)
        {
          LOBYTE(v7) = result;
        }
        else
        {
          do
          {
            *v6++ = result | 0x80;
            uint64_t v7 = result >> 7;
            unint64_t v8 = result >> 14;
            result >>= 7;
          }
          while (v8);
        }
        goto LABEL_9;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        unint64_t result = sub_1C8D88460();
        char v15 = result;
        if (v13 != v11) {
          goto LABEL_28;
        }
      }
      else if ((a2 & 0x2000000000000000) != 0)
      {
        v16[0] = v4;
        v16[1] = a2 & 0xFFFFFFFFFFFFFFLL;
        char v15 = *((unsigned char *)v16 + v14);
        if (v13 != v11) {
          goto LABEL_28;
        }
      }
      else
      {
        unint64_t result = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if ((v4 & 0x1000000000000000) == 0) {
          unint64_t result = sub_1C8D886C0();
        }
        char v15 = *(unsigned char *)(result + v14);
        if (v13 != v11)
        {
LABEL_28:
          if ((a2 & 0x1000000000000000) == 0) {
            goto LABEL_16;
          }
          goto LABEL_29;
        }
      }
      unint64_t result = sub_1C8D62E14(v5, v4, a2);
      unint64_t v5 = result;
      if ((a2 & 0x1000000000000000) == 0)
      {
LABEL_16:
        unint64_t v5 = (v5 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_17;
      }
LABEL_29:
      if (v9 <= v5 >> 16) {
        goto LABEL_36;
      }
      unint64_t result = sub_1C8D88430();
      unint64_t v5 = result;
LABEL_17:
      uint64_t v12 = *v2;
      *uint64_t v12 = v15;
      *unint64_t v2 = v12 + 1;
    }
    while (4 * v9 != v5 >> 14);
  }
  return result;
}

unint64_t sub_1C8CA8660(unint64_t a1, int a2)
{
  return sub_1C8CA7E24(a1, a2);
}

uint64_t sub_1C8CA8678(uint64_t a1, uint64_t a2)
{
  return sub_1C8CA86A0(a1, a2, *(void *)(v2 + 32), *(unsigned char *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1C8CA86A0(uint64_t result, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (result)
  {
    uint64_t v8 = result;
    uint64_t v9 = a2 - result;
    if (a2 - result >= 1)
    {
      sub_1C8CA87D8(a5, (uint64_t)v21);
      *(_WORD *)uint64_t v16 = 1;
      memset(&v16[8], 0, 56);
      LOBYTE(v17) = 1;
      long long v19 = xmmword_1C8D8BEE0;
      long long v20 = xmmword_1C8D8BEE0;
      *(void *)&long long v15 = v8;
      *((void *)&v15 + 1) = v9;
      sub_1C8CA8840((uint64_t)v21, (uint64_t)&v16[16]);
      *((void *)&v17 + 1) = a3;
      LOBYTE(v18) = a4 & 1;
      *((void *)&v18 + 1) = a3;
      v22[8] = v19;
      v22[9] = v20;
      v22[2] = *(_OWORD *)v16;
      v22[3] = *(_OWORD *)&v16[16];
      v22[4] = *(_OWORD *)&v16[32];
      v22[5] = *(_OWORD *)&v16[48];
      v22[0] = v15;
      v22[1] = (unint64_t)v8;
      v22[6] = v17;
      v22[7] = v18;
      sub_1C8CA890C(a6, a7, a8);
      return sub_1C8CA9498((uint64_t)v22);
    }
  }
  return result;
}

uint64_t sub_1C8CA87D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBCB2D10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C8CA8840(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBCB2D10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C8CA88A8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C8CA890C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3[15];
  BOOL v6 = __OFSUB__(v5, 1);
  uint64_t v7 = v5 - 1;
  if (v6)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v3[15] = v7;
  if (v7 < 0)
  {
    char v13 = 6;
    goto LABEL_9;
  }
  uint64_t result = (*(uint64_t (**)(void *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(a3 + 64))(v3, &type metadata for BinaryDecoder, &off_1F2356D48, a2, a3);
  if (v4) {
    return result;
  }
  uint64_t v11 = v3[15];
  BOOL v6 = __OFADD__(v11, 1);
  uint64_t v12 = v11 + 1;
  if (v6) {
    goto LABEL_14;
  }
  v3[15] = v12;
  if (v3[13] < v12)
  {
LABEL_15:
    uint64_t result = sub_1C8D88750();
    __break(1u);
    return result;
  }
  if (v3[1])
  {
    char v13 = 0;
LABEL_9:
    sub_1C8D0E090();
    swift_allocError();
    *unint64_t v14 = v13;
    return swift_willThrow();
  }
  unint64_t v15 = v3[17];
  if (v15 >> 60 != 15)
  {
    uint64_t v16 = v3[16];
    long long v17 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(a3 + 56);
    sub_1C8CA3CF8(v16, v15);
    long long v18 = (void (*)(unsigned char *, void))v17(v19, a2, a3);
    sub_1C8D881E0();
    v18(v19, 0);
    return sub_1C8CAA9F0(v16, v15);
  }
  return result;
}

uint64_t dispatch thunk of Decoder.nextFieldNumber()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

void sub_1C8CA8B10()
{
}

void sub_1C8CA8B34()
{
  uint64_t v2 = v0;
  if ((uint64_t)v0[5] >= 1)
  {
    unint64_t v3 = (unint64_t)v0[19];
    if (v3 >> 60 == 15)
    {
      if (((_BYTE)v0[4] & 1) == 0)
      {
        if (*((unsigned char *)v0 + 112) == 1)
        {
          uint64_t v4 = v0[3];
          if (v4)
          {
            *uint64_t v0 = v4;
          }
          else
          {
            uint64_t v21 = v0[1];
            long long v20 = v0[2];
            uint64_t v22 = (unsigned __int8 *)(*v0 - v20);
            BOOL v23 = __OFADD__(v21, v22);
            uint64_t v24 = &v22[(void)v21];
            if (v23)
            {
LABEL_50:
              __break(1u);
              goto LABEL_51;
            }
            *uint64_t v0 = v20;
            v0[1] = v24;
            unint64_t v25 = sub_1C8CAA4F0();
            if (v1) {
              return;
            }
            if ((v25 & 0x100000000) != 0)
            {
              sub_1C8D0E090();
              swift_allocError();
              char v13 = 1;
              goto LABEL_23;
            }
            sub_1C8CAA5FC(v25);
            v0[3] = *v0;
          }
        }
        else
        {
          sub_1C8CAA440();
          if (v1) {
            return;
          }
          unint64_t v14 = v0[3];
          if (!v14)
          {
LABEL_51:
            __break(1u);
            return;
          }
          uint64_t v15 = sub_1C8D32844(v0[2], v14 - v0[2]);
          uint64_t v17 = v15;
          unint64_t v18 = v16;
          if ((unint64_t)v0[17] >> 60 == 15)
          {
            v0[16] = (unsigned __int8 *)v15;
            v0[17] = (unsigned __int8 *)v16;
          }
          else
          {
            sub_1C8D881E0();
            sub_1C8CA3D5C(v17, v18);
          }
        }
      }
    }
    else
    {
      uint64_t v5 = (uint64_t)v0[18];
      if ((unint64_t)v0[17] >> 60 == 15)
      {
        v0[16] = (unsigned __int8 *)v5;
        v0[17] = (unsigned __int8 *)v3;
      }
      else
      {
        sub_1C8CA3CF8((uint64_t)v0[18], (unint64_t)v0[19]);
        sub_1C8D881E0();
        sub_1C8CAA9F0(v5, v3);
        sub_1C8CAA9F0(v5, v3);
      }
      *((_OWORD *)v0 + 9) = xmmword_1C8D8BEE0;
    }
  }
  unint64_t v6 = (unint64_t)v0[1];
  if (!v6) {
    return;
  }
  uint64_t v7 = *v2;
  v2[2] = *v2;
  v2[3] = 0;
  unint64_t v8 = *v7;
  char v9 = sub_1C8D5D988(v8 & 7);
  if (v9 == 6) {
    goto LABEL_22;
  }
  *((unsigned char *)v2 + 33) = v9;
  if ((v8 & 0x80) == 0)
  {
    *uint64_t v2 = v7 + 1;
    if (!__OFSUB__(v6, 1))
    {
      v2[1] = (unsigned __int8 *)(v6 - 1);
      uint64_t v10 = (unsigned __int8 *)(v8 >> 3);
      goto LABEL_16;
    }
    __break(1u);
    goto LABEL_50;
  }
  uint64_t v11 = (unsigned __int8 *)((v8 >> 3) & 0xF);
  v2[5] = v11;
  if ((uint64_t)v6 <= 1) {
    goto LABEL_22;
  }
  uint64_t v19 = v7[1];
  if ((char)v7[1] < 0)
  {
    uint64_t v26 = (v8 >> 3) & 0xFLL | (16 * (v19 & 0x7F));
    v2[5] = (unsigned __int8 *)v26;
    if (v6 > 2)
    {
      int v27 = (char)v7[2];
      uint64_t v10 = (unsigned __int8 *)(v26 | ((unint64_t)(v27 & 0x7F) << 11));
      v2[5] = v10;
      if (v27 < 0)
      {
        if (v6 <= 3) {
          goto LABEL_22;
        }
        int v30 = (char)v7[3];
        uint64_t v10 = (unsigned __int8 *)((unint64_t)v10 | ((unint64_t)(v30 & 0x7F) << 18));
        v2[5] = v10;
        if (v30 < 0)
        {
          if (v6 <= 4) {
            goto LABEL_22;
          }
          unint64_t v31 = v7[4];
          if (v31 >= 0x10) {
            goto LABEL_22;
          }
          uint64_t v10 = (unsigned __int8 *)((unint64_t)v10 | (v31 << 25));
          v2[5] = v10;
          uint64_t v28 = v7 + 5;
          unint64_t v29 = v6 - 5;
        }
        else
        {
          uint64_t v28 = v7 + 4;
          unint64_t v29 = v6 - 4;
        }
      }
      else
      {
        uint64_t v28 = v7 + 3;
        unint64_t v29 = v6 - 3;
      }
      *uint64_t v2 = v28;
      v2[1] = (unsigned __int8 *)v29;
      if (v10) {
        goto LABEL_17;
      }
    }
LABEL_22:
    sub_1C8D0E090();
    swift_allocError();
    char v13 = 3;
LABEL_23:
    *uint64_t v12 = v13;
    swift_willThrow();
    return;
  }
  *uint64_t v2 = v7 + 2;
  v2[1] = (unsigned __int8 *)(v6 - 2);
  uint64_t v10 = (unsigned __int8 *)((unint64_t)v11 | (16 * v19));
LABEL_16:
  v2[5] = v10;
  if (!v10) {
    goto LABEL_22;
  }
LABEL_17:
  *((unsigned char *)v2 + 32) = 0;
  if (v9 == 4 && (((_BYTE)v2[12] & 1) != 0 || v2[11] != v10)) {
    goto LABEL_22;
  }
}

uint64_t dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 416))();
}

unint64_t sub_1C8CA8E8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CA8EA4(a1, a2, a3);
}

unint64_t sub_1C8CA8EA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v8 = MEMORY[0x1F4188790](a1, a2);
  uint64_t v10 = &v24[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unint64_t result = MEMORY[0x1F4188790](v8, v11);
  uint64_t v15 = &v24[-v14];
  if (*(unsigned char *)(v3 + 33) == 2)
  {
    unint64_t v27 = result;
    uint64_t v44 = v13;
    unint64_t result = sub_1C8CA91C4();
    if (!v4)
    {
      unint64_t v16 = *(void *)(v3 + 8);
      if ((v16 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else
      {
        unint64_t v17 = result;
        BOOL v18 = v16 >= result;
        unint64_t v19 = v16 - result;
        if (v18)
        {
          unint64_t v26 = *(void *)v3;
          *(void *)uint64_t v3 = v26 + result;
          *(void *)(v3 + 8) = v19;
          (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
          sub_1C8CA92A4(v3, (uint64_t)v36);
          uint64_t v21 = v37[7];
          int v25 = v38;
          sub_1C8CA9434((uint64_t)v37, (uint64_t)v35, (uint64_t *)&unk_1EBCB2D10);
          LOWORD(v30[0]) = 1;
          *(_OWORD *)((char *)v30 + 8) = 0u;
          *(_OWORD *)((char *)&v30[1] + 8) = 0u;
          *(_OWORD *)((char *)&v30[2] + 8) = 0u;
          *((void *)&v30[3] + 1) = 0;
          LOBYTE(v31) = 1;
          long long v33 = xmmword_1C8D8BEE0;
          long long v34 = xmmword_1C8D8BEE0;
          *(void *)&long long v28 = v26;
          *((void *)&v28 + 1) = v17;
          long long v29 = v26;
          sub_1C8CA88A8((uint64_t)v35, (uint64_t)&v30[1], (uint64_t *)&unk_1EBCB2D10);
          *((void *)&v31 + 1) = v21;
          LOBYTE(v32) = v25;
          *((void *)&v32 + 1) = v21;
          long long v42 = v33;
          long long v43 = v34;
          v40[2] = v30[0];
          void v40[3] = v30[1];
          v40[4] = v30[2];
          v40[5] = v30[3];
          v40[0] = v28;
          v40[1] = v29;
          v40[6] = v31;
          long long v41 = v32;
          uint64_t v22 = v39;
          sub_1C8CA9498((uint64_t)v36);
          *((void *)&v41 + 1) = v22;
          sub_1C8CA890C((uint64_t)v15, a2, a3);
          uint64_t v23 = v44;
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v44 + 16))(v10, v15, a2);
          sub_1C8D88550();
          sub_1C8D88530();
          sub_1C8CA9498((uint64_t)v40);
          unint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v23 + 8))(v15, a2);
          *(unsigned char *)(v5 + 32) = 1;
        }
        else
        {
          sub_1C8D0E090();
          swift_allocError();
          unsigned char *v20 = 1;
          return swift_willThrow();
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C8CA91C4()
{
  uint64_t v1 = v0[1];
  BOOL v2 = v1 < 1;
  unint64_t v3 = v1 - 1;
  if (v2)
  {
    char v5 = 1;
  }
  else
  {
    uint64_t result = *(unsigned __int8 *)*v0;
    if ((*(char *)*v0 & 0x80000000) == 0)
    {
      ++*v0;
LABEL_4:
      v0[1] = v3;
      return result;
    }
    if (v3)
    {
      result &= 0x7Fu;
      uint64_t v7 = *v0 + 2;
      unint64_t v8 = 7;
      char v5 = 3;
      while (1)
      {
        result |= (unint64_t)(*(unsigned char *)(v7 - 1) & 0x7F) << v8;
        if ((*(unsigned char *)(v7 - 1) & 0x80) == 0) {
          break;
        }
        if (v3 >= 2)
        {
          ++v7;
          --v3;
          BOOL v2 = v8 > 0x38;
          v8 += 7;
          if (!v2) {
            continue;
          }
        }
        goto LABEL_6;
      }
      --v3;
      *uint64_t v0 = v7;
      goto LABEL_4;
    }
    char v5 = 3;
  }
LABEL_6:
  sub_1C8D0E090();
  swift_allocError();
  char *v6 = v5;
  return swift_willThrow();
}

uint64_t sub_1C8CA92A4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithCopy for BinaryDecoder(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v5 = a1 + 48;
  uint64_t v6 = a2 + 48;
  uint64_t v7 = *(void *)(a2 + 72);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 80);
    *(void *)(a1 + 72) = v7;
    *(void *)(a1 + 80) = v8;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(v5, v6);
  }
  else
  {
    long long v9 = *(_OWORD *)(v6 + 16);
    *(_OWORD *)uint64_t v5 = *(_OWORD *)v6;
    *(_OWORD *)(v5 + 16) = v9;
    *(void *)(v5 + 32) = *(void *)(v6 + 32);
  }
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  uint64_t v10 = (uint64_t *)(a2 + 128);
  unint64_t v11 = *(void *)(a2 + 136);
  if (v11 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 128) = *(_OWORD *)v10;
  }
  else
  {
    uint64_t v12 = *v10;
    sub_1C8CA3CF8(*v10, *(void *)(a2 + 136));
    *(void *)(a1 + 128) = v12;
    *(void *)(a1 + 136) = v11;
  }
  uint64_t v13 = (uint64_t *)(a2 + 144);
  unint64_t v14 = *(void *)(a2 + 152);
  if (v14 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 144) = *(_OWORD *)v13;
  }
  else
  {
    uint64_t v15 = *v13;
    sub_1C8CA3CF8(*v13, v14);
    *(void *)(a1 + 144) = v15;
    *(void *)(a1 + 152) = v14;
  }
  return a1;
}

uint64_t sub_1C8CA9434(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C8CA9498(uint64_t a1)
{
  return a1;
}

uint64_t destroy for BinaryDecoder(uint64_t result)
{
  uint64_t v1 = (uint64_t *)result;
  if (*(void *)(result + 72)) {
    uint64_t result = __swift_destroy_boxed_opaque_existential_1(result + 48);
  }
  unint64_t v2 = v1[17];
  if (v2 >> 60 != 15) {
    uint64_t result = sub_1C8CA3D5C(v1[16], v2);
  }
  unint64_t v3 = v1[19];
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = v1[18];
    return sub_1C8CA3D5C(v4, v3);
  }
  return result;
}

uint64_t dispatch thunk of Decoder.decodeSingularStringField(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 336))();
}

{
  return (*(uint64_t (**)(void))(a3 + 344))();
}

unint64_t sub_1C8CA95B4(unint64_t a1)
{
  return sub_1C8CA95CC(a1);
}

unint64_t sub_1C8CA95CC(unint64_t result)
{
  if (*(unsigned char *)(v1 + 33) == 2)
  {
    unint64_t v3 = (void *)result;
    uint64_t result = sub_1C8CA91C4();
    if (!v2)
    {
      unint64_t v4 = *(void *)(v1 + 8);
      if ((v4 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else
      {
        uint64_t v5 = result;
        BOOL v6 = v4 >= result;
        unint64_t v7 = v4 - result;
        if (v6)
        {
          long long v9 = *(char **)v1;
          *(void *)v1 += v5;
          *(void *)(v1 + 8) = v7;
          uint64_t v10 = sub_1C8CA96A4(v9, v5);
          if (v11)
          {
            uint64_t v12 = v10;
            uint64_t v13 = v11;
            uint64_t result = swift_bridgeObjectRelease();
            *unint64_t v3 = v12;
            v3[1] = v13;
            *(unsigned char *)(v1 + 32) = 1;
            return result;
          }
          char v8 = 2;
        }
        else
        {
          char v8 = 1;
        }
        sub_1C8D0E090();
        swift_allocError();
        *unint64_t v14 = v8;
        return swift_willThrow();
      }
    }
  }
  return result;
}

uint64_t (*sub_1C8CA96A4(char *a1, uint64_t a2))()
{
  if (!a2) {
    return 0;
  }
  int v2 = 0;
  unsigned int v15 = 0;
  unsigned __int8 v16 = 0;
  unint64_t v3 = &a1[a2];
  unint64_t v4 = a1;
  while (1)
  {
    while (!(_BYTE)v2)
    {
      if (!v4 || v3 == v4) {
        return (uint64_t (*)())sub_1C8D883A0();
      }
      int v2 = 0;
      int v6 = *v4++;
      unsigned __int8 v5 = v6;
      if (v6 < 0)
      {
        unsigned int v7 = v15 & 0xFFFFFF00 | v5;
        int v2 = 8;
LABEL_8:
        char v8 = (unsigned __int8 *)v4;
        if (v4 == v3) {
          goto LABEL_22;
        }
        ++v4;
        unsigned int v7 = ((-255 << v2) - 1) & v7 | (*v8 << v2);
        int v9 = v2 + 8;
        if ((v2 + 8) >= 0x20u) {
          goto LABEL_21;
        }
        if (v4 != v3)
        {
          unint64_t v4 = (char *)(v8 + 2);
          unsigned int v7 = ((-255 << v9) - 1) & v7 | (v8[1] << v9);
          int v9 = v2 + 16;
          if ((v2 + 16) > 0x1Fu) {
            goto LABEL_21;
          }
          if (v4 != v3)
          {
            unint64_t v4 = (char *)(v8 + 3);
            unsigned int v7 = ((-255 << v9) - 1) & v7 | (v8[2] << v9);
            int v9 = v2 + 24;
            if ((v2 + 24) > 0x1Fu) {
              goto LABEL_21;
            }
            if (v4 != v3)
            {
              unint64_t v4 = (char *)(v8 + 4);
              unsigned int v7 = ((-255 << v9) - 1) & v7 | (v8[3] << v9);
              int v9 = v2 + 32;
              if (v2 < 0xE0u) {
                goto LABEL_21;
              }
              if (v4 != v3)
              {
                unsigned int v7 = ((-255 << v2) - 1) & v7 | (v8[4] << v2);
                int v9 = v2 + 40;
                if ((v2 + 40) >= 0x20u)
                {
                  unint64_t v4 = (char *)(v8 + 5);
LABEL_21:
                  int v2 = v9;
                  goto LABEL_22;
                }
              }
            }
          }
        }
        int v2 = v9;
        unint64_t v4 = v3;
        if (!(_BYTE)v9) {
          return (uint64_t (*)())sub_1C8D883A0();
        }
LABEL_22:
        if ((v7 & 0xC0E0) == 0x80C0)
        {
          if ((v7 & 0x1E) == 0) {
            goto LABEL_40;
          }
          int v10 = 16;
        }
        else if ((v7 & 0xC0C0F0) == 0x8080E0)
        {
          if ((v7 & 0x200F) == 0 || (v7 & 0x200F) == 0x200D) {
            goto LABEL_40;
          }
          int v10 = 24;
        }
        else
        {
          if ((v7 & 0xC0C0C0F8) != 0x808080F0 || (v7 & 0x3007) == 0 || __rev16(v7 & 0x3007) > 0x400)
          {
LABEL_40:
            sub_1C8D888B0();
            return 0;
          }
          int v10 = 32;
        }
        unsigned int v15 = (unint64_t)v7 >> v10;
        v2 -= v10;
        unsigned __int8 v16 = v2;
      }
    }
    unsigned int v7 = v15;
    if ((v15 & 0x80) != 0)
    {
      if (!v4) {
        goto LABEL_22;
      }
      goto LABEL_8;
    }
    sub_1C8D0BA68();
    uint64_t result = sub_1C8CBC6F8();
    char v13 = *(unsigned char *)(v12 + 4);
    if (!v13) {
      break;
    }
    *(_DWORD *)v12 >>= 8;
    *(unsigned char *)(v12 + 4) = v13 - 8;
    ((void (*)(char *, void))result)(v14, 0);
    int v2 = v16;
  }
  __break(1u);
  return result;
}

uint64_t dispatch thunk of Decoder.decodeRepeatedStringField(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 352))();
}

unint64_t sub_1C8CA99F8(unint64_t a1)
{
  return sub_1C8CA9A10(a1);
}

unint64_t sub_1C8CA9A10(unint64_t result)
{
  if (*(unsigned char *)(v1 + 33) != 2) {
    return result;
  }
  int v6 = (unint64_t *)result;
  uint64_t result = sub_1C8CA91C4();
  if (v2) {
    return result;
  }
  unint64_t v7 = *(void *)(v1 + 8);
  if ((v7 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = result;
    BOOL v9 = v7 >= result;
    unint64_t v10 = v7 - result;
    if (!v9)
    {
      char v11 = 1;
LABEL_12:
      sub_1C8D0E090();
      swift_allocError();
      *unint64_t v19 = v11;
      return swift_willThrow();
    }
    uint64_t v12 = *(char **)v1;
    *(void *)v1 += v8;
    *(void *)(v1 + 8) = v10;
    char v13 = sub_1C8CA96A4(v12, v8);
    if (!v14)
    {
      char v11 = 2;
      goto LABEL_12;
    }
    unint64_t v3 = v13;
    uint64_t v4 = v14;
    unint64_t v5 = *v6;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    unint64_t *v6 = v5;
    if (result) {
      goto LABEL_8;
    }
  }
  uint64_t result = (unint64_t)sub_1C8D5ED38(0, *(void *)(v5 + 16) + 1, 1, (char *)v5);
  unint64_t v5 = result;
  unint64_t *v6 = result;
LABEL_8:
  unint64_t v15 = *(void *)(v5 + 16);
  unint64_t v16 = *(void *)(v5 + 24);
  unint64_t v17 = v15 + 1;
  if (v15 >= v16 >> 1)
  {
    unint64_t v22 = v15 + 1;
    long long v20 = (char *)v5;
    unint64_t v21 = *(void *)(v5 + 16);
    uint64_t result = (unint64_t)sub_1C8D5ED38((char *)(v16 > 1), v15 + 1, 1, v20);
    unint64_t v15 = v21;
    unint64_t v17 = v22;
    unint64_t v5 = result;
  }
  *(void *)(v5 + 16) = v17;
  unint64_t v18 = v5 + 16 * v15;
  *(void *)(v18 + 32) = v3;
  *(void *)(v18 + 40) = v4;
  unint64_t *v6 = v5;
  *(unsigned char *)(v1 + 32) = 1;
  return result;
}

uint64_t dispatch thunk of Decoder.decodeSingularDoubleField(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

void sub_1C8CA9BBC(uint64_t a1)
{
  if (*(unsigned char *)(v1 + 33) == 1)
  {
    sub_1C8CA9C40();
    if (!v2)
    {
      *(void *)a1 = v4;
      *(unsigned char *)(a1 + 8) = 0;
      *(unsigned char *)(v1 + 32) = 1;
    }
  }
}

void sub_1C8CA9C00(void *a1)
{
  if (*(unsigned char *)(v1 + 33) == 1)
  {
    sub_1C8CA9C40();
    if (!v2)
    {
      *a1 = v4;
      *(unsigned char *)(v1 + 32) = 1;
    }
  }
}

void sub_1C8CA9C40()
{
  uint64_t v1 = v0[1];
  BOOL v2 = v1 < 8;
  uint64_t v3 = v1 - 8;
  if (v2)
  {
    sub_1C8D0E090();
    swift_allocError();
    *uint64_t v4 = 1;
    swift_willThrow();
  }
  else
  {
    *v0 += 8;
    v0[1] = v3;
  }
}

uint64_t dispatch thunk of Decoder.decodeSingularBoolField(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 320))();
}

{
  return (*(uint64_t (**)(void))(a3 + 312))();
}

uint64_t sub_1C8CA9D34(uint64_t a1)
{
  return sub_1C8D5592C(a1);
}

uint64_t dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 408))();
}

unint64_t sub_1C8CA9D74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CA9D8C(a1, a2, a3);
}

unint64_t sub_1C8CA9D8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v53 = a2;
  uint64_t v8 = sub_1C8D88620();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v8, v10);
  char v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t result = MEMORY[0x1F4188790](v11, v14);
  unint64_t v17 = (char *)&v29 - v16;
  if (*(unsigned char *)(v5 + 33) == 2)
  {
    uint64_t v36 = a3;
    unint64_t result = sub_1C8CA91C4();
    if (!v4)
    {
      unint64_t v18 = *(void *)(v5 + 8);
      if ((v18 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else
      {
        BOOL v19 = v18 >= result;
        unint64_t v20 = v18 - result;
        if (!v19)
        {
          sub_1C8D0E090();
          swift_allocError();
          unsigned char *v21 = 1;
          return swift_willThrow();
        }
        *(void *)&long long v33 = *(void *)v5;
        *((void *)&v33 + 1) = result;
        *(void *)uint64_t v5 = v33 + result;
        *(void *)(v5 + 8) = v20;
        uint64_t v22 = a1;
        (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v17, a1, v8);
        uint64_t v23 = v53;
        uint64_t v30 = *(void *)(v53 - 8);
        long long v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
        uint64_t v35 = v30 + 48;
        int v32 = v34(v17, 1, v53);
        uint64_t v31 = v9;
        uint64_t v24 = v9;
        uint64_t v25 = v22;
        (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v8);
        if (v32 == 1)
        {
          (*(void (**)(uint64_t))(v36 + 16))(v23);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v13, 0, 1, v23);
          (*(void (**)(uint64_t, char *, uint64_t))(v31 + 40))(v22, v13, v8);
        }
        sub_1C8CA92A4(v5, (uint64_t)v45);
        uint64_t v26 = v46[7];
        char v27 = v47;
        sub_1C8CA9434((uint64_t)v46, (uint64_t)v44, (uint64_t *)&unk_1EBCB2D10);
        LOWORD(v39[0]) = 1;
        *(_OWORD *)((char *)v39 + 8) = 0u;
        *(_OWORD *)((char *)&v39[1] + 8) = 0u;
        *(_OWORD *)((char *)&v39[2] + 8) = 0u;
        *((void *)&v39[3] + 1) = 0;
        LOBYTE(v40) = 1;
        long long v42 = xmmword_1C8D8BEE0;
        long long v43 = xmmword_1C8D8BEE0;
        long long v37 = v33;
        long long v38 = (unint64_t)v33;
        sub_1C8CA88A8((uint64_t)v44, (uint64_t)&v39[1], (uint64_t *)&unk_1EBCB2D10);
        *((void *)&v40 + 1) = v26;
        LOBYTE(v41) = v27;
        *((void *)&v41 + 1) = v26;
        long long v51 = v42;
        long long v52 = v43;
        v49[2] = v39[0];
        v49[3] = v39[1];
        v49[4] = v39[2];
        v49[5] = v39[3];
        v49[0] = v37;
        v49[1] = v38;
        v49[6] = v40;
        long long v50 = v41;
        uint64_t v28 = v48;
        sub_1C8CA9498((uint64_t)v45);
        *((void *)&v50 + 1) = v28;
        unint64_t result = v34((char *)v25, 1, v23);
        if (result != 1)
        {
          sub_1C8CA890C(v25, v23, v36);
          unint64_t result = sub_1C8CA9498((uint64_t)v49);
          *(unsigned char *)(v5 + 32) = 1;
          return result;
        }
      }
      __break(1u);
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ProtobufString()
{
  return &type metadata for ProtobufString;
}

uint64_t sub_1C8CAA154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufString.decodeSingular<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t static ProtobufString.decodeSingular<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 344))(a1, a3, a4);
}

uint64_t dispatch thunk of Decoder.decodeSingularInt32Field(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t sub_1C8CAA1F8(uint64_t a1)
{
  return sub_1C8CAA210(a1);
}

uint64_t sub_1C8CAA210(uint64_t result)
{
  if (!*(unsigned char *)(v1 + 33))
  {
    uint64_t v3 = (_DWORD *)result;
    unint64_t result = sub_1C8CA91C4();
    if (!v2)
    {
      *uint64_t v3 = result;
      *(unsigned char *)(v1 + 32) = 1;
    }
  }
  return result;
}

uint64_t sub_1C8CAA24C(uint64_t a1)
{
  return sub_1C8CAA264(a1);
}

uint64_t sub_1C8CAA264(uint64_t result)
{
  if (!*(unsigned char *)(v1 + 33))
  {
    uint64_t v3 = result;
    unint64_t result = sub_1C8CA91C4();
    if (!v2)
    {
      *(_DWORD *)uint64_t v3 = result;
      *(unsigned char *)(v3 + 4) = 0;
      *(unsigned char *)(v1 + 32) = 1;
    }
  }
  return result;
}

uint64_t dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 392))();
}

{
  return (*(uint64_t (**)(void))(a5 + 384))();
}

uint64_t sub_1C8CAA2F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D50FE0(a1, a2, a3);
}

uint64_t sub_1C8CAA30C(char *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D50D98(a1, a2, a3);
}

uint64_t dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 128))();
}

{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

uint64_t dispatch thunk of Decoder.decodeSingularUInt64Field(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 144))();
}

{
  return (*(uint64_t (**)(void))(a3 + 152))();
}

uint64_t sub_1C8CAA3C4(uint64_t result)
{
  if (!*(unsigned char *)(v1 + 33))
  {
    uint64_t v3 = result;
    unint64_t result = sub_1C8CA91C4();
    if (!v2)
    {
      *(void *)uint64_t v3 = result;
      *(unsigned char *)(v3 + 8) = 0;
      *(unsigned char *)(v1 + 32) = 1;
    }
  }
  return result;
}

uint64_t sub_1C8CAA404(uint64_t result)
{
  if (!*(unsigned char *)(v1 + 33))
  {
    uint64_t v3 = (void *)result;
    unint64_t result = sub_1C8CA91C4();
    if (!v2)
    {
      *uint64_t v3 = result;
      *(unsigned char *)(v1 + 32) = 1;
    }
  }
  return result;
}

void sub_1C8CAA440()
{
  uint64_t v2 = v0[3];
  if (v2)
  {
    *uint64_t v0 = v2;
  }
  else
  {
    uint64_t v4 = v0[1];
    uint64_t v3 = v0[2];
    uint64_t v5 = *v0 - v3;
    BOOL v6 = __OFADD__(v4, v5);
    uint64_t v7 = v4 + v5;
    if (v6)
    {
      __break(1u);
    }
    else
    {
      *uint64_t v0 = v3;
      v0[1] = v7;
      unint64_t v8 = sub_1C8CAA4F0();
      if (!v1)
      {
        if ((v8 & 0x100000000) != 0)
        {
          sub_1C8D0E090();
          swift_allocError();
          *uint64_t v9 = 1;
          swift_willThrow();
        }
        else
        {
          sub_1C8CAA5FC(v8);
          v0[3] = *v0;
        }
      }
    }
  }
}

unint64_t sub_1C8CAA4F0()
{
  uint64_t v2 = *(void *)(v0 + 8);
  if (v2 < 1)
  {
    uint64_t v6 = 0;
    return v6 | ((unint64_t)(v2 < 1) << 32);
  }
  unint64_t result = sub_1C8CA91C4();
  if (v1) {
    return result;
  }
  if (result <= 0xFFFFFFFE)
  {
    uint64_t v4 = sub_1C8CAA5B4(result);
    if ((v4 & 0x100000000) == 0)
    {
      unsigned int v5 = v4;
      *(unsigned char *)(v0 + 33) = sub_1C8CAA5E8(v4);
      *(void *)(v0 + 40) = v5 >> 3;
      uint64_t v6 = v5;
      return v6 | ((unint64_t)(v2 < 1) << 32);
    }
  }
  sub_1C8D0E090();
  swift_allocError();
  *uint64_t v7 = 3;
  return swift_willThrow();
}

uint64_t sub_1C8CAA5B4(unsigned int a1)
{
  BOOL v2 = (~a1 & 6) == 0 || a1 < 8;
  uint64_t v3 = v2;
  if (v2) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = a1;
  }
  return v4 | (v3 << 32);
}

uint64_t sub_1C8CAA5E8(char a1)
{
  uint64_t result = a1 & 7;
  if (result > 5) {
    __break(1u);
  }
  return result;
}

unint64_t sub_1C8CAA5FC(unint64_t result)
{
  unsigned int v3 = result;
  switch(result & 7)
  {
    case 0uLL:
      uint64_t v4 = v1[1];
      if (v4 <= 0) {
        goto LABEL_37;
      }
      unsigned int v5 = (char *)*v1;
      if ((*(char *)*v1 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      *uint64_t v1 = (uint64_t)++v5;
      v1[1] = v4 - 1;
      if (v4 != 1)
      {
        do
        {
          if ((*v5 & 0x80000000) == 0)
          {
            --v4;
LABEL_4:
            uint64_t v6 = (uint64_t)(v5 + 1);
            uint64_t v7 = (char *)(v4 - 1);
            goto LABEL_39;
          }
          *uint64_t v1 = (uint64_t)++v5;
          v1[1] = v4 - 2;
          --v4;
        }
        while (v4 >= 2);
      }
      goto LABEL_37;
    case 1uLL:
      uint64_t v19 = v1[1];
      if (v19 <= 7) {
        goto LABEL_37;
      }
      uint64_t v6 = *v1 + 8;
      uint64_t v7 = (char *)(v19 - 8);
      goto LABEL_39;
    case 2uLL:
      goto LABEL_29;
    case 3uLL:
      unint64_t v8 = (char *)v1[15];
      BOOL v9 = __OFSUB__(v8, 1);
      unint64_t v10 = (unint64_t)(v8 - 1);
      if (v9) {
        goto LABEL_54;
      }
      v1[15] = v10;
      if ((v10 & 0x8000000000000000) != 0)
      {
        sub_1C8D0E090();
        swift_allocError();
        char v22 = 6;
        goto LABEL_50;
      }
      uint64_t v11 = v1[1];
      if (v11 < 1) {
        goto LABEL_37;
      }
      break;
    case 4uLL:
      goto LABEL_49;
    case 5uLL:
      uint64_t v20 = v1[1];
      if (v20 <= 3) {
        goto LABEL_37;
      }
      uint64_t v6 = *v1 + 4;
      uint64_t v7 = (char *)(v20 - 4);
      goto LABEL_39;
    default:
      __break(1u);
LABEL_54:
      __break(1u);
      goto LABEL_55;
  }
  while (1)
  {
    uint64_t result = *(unsigned __int8 *)*v1;
    unint64_t v12 = v11 - 1;
    if (*(char *)*v1 < 0)
    {
      if (!v12) {
        goto LABEL_49;
      }
      result &= 0x7Fu;
      uint64_t v13 = *v1 + 2;
      unint64_t v14 = 7;
      while (1)
      {
        result |= (unint64_t)(*(unsigned char *)(v13 - 1) & 0x7F) << v14;
        if ((*(unsigned char *)(v13 - 1) & 0x80) == 0) {
          break;
        }
        if (v12 >= 2)
        {
          ++v13;
          --v12;
          BOOL v15 = v14 > 0x38;
          v14 += 7;
          if (!v15) {
            continue;
          }
        }
        goto LABEL_49;
      }
      *uint64_t v1 = v13;
      v1[1] = v12 - 1;
      if (result >= 0xFFFFFFFF) {
        goto LABEL_49;
      }
    }
    else
    {
      ++*v1;
      v1[1] = v12;
    }
    unsigned int v16 = result & 7;
    BOOL v17 = result < 8 || v16 >= 6;
    if (v17) {
      goto LABEL_49;
    }
    if (v16 >= 4) {
      break;
    }
LABEL_23:
    *((unsigned char *)v1 + 33) = v16;
    v1[5] = result >> 3;
    uint64_t result = sub_1C8CAA5FC();
    if (v2) {
      return result;
    }
    uint64_t v11 = v1[1];
    if (v11 < 1) {
      goto LABEL_37;
    }
  }
  if (v16 == 4)
  {
    *((unsigned char *)v1 + 33) = 4;
    uint64_t v23 = (char *)(result >> 3);
    v1[5] = (uint64_t)v23;
    if (v23 == v3 >> 3)
    {
      uint64_t v24 = (char *)v1[15];
      BOOL v9 = __OFADD__(v24, 1);
      uint64_t v25 = v24 + 1;
      if (v9)
      {
LABEL_56:
        __break(1u);
        return result;
      }
      v1[15] = (uint64_t)v25;
      if (v1[13] >= (uint64_t)v25) {
        return result;
      }
      sub_1C8D88750();
      __break(1u);
    }
LABEL_49:
    sub_1C8D0E090();
    swift_allocError();
    char v22 = 3;
    goto LABEL_50;
  }
  if (v16 == 5) {
    goto LABEL_23;
  }
  __break(1u);
LABEL_29:
  uint64_t result = sub_1C8CA91C4();
  if (v2) {
    return result;
  }
  unint64_t v18 = v1[1];
  if ((v18 & 0x8000000000000000) != 0)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  BOOL v17 = v18 >= result;
  uint64_t v7 = (char *)(v18 - result);
  if (!v17)
  {
LABEL_37:
    sub_1C8D0E090();
    swift_allocError();
    char v22 = 1;
LABEL_50:
    char *v21 = v22;
    return swift_willThrow();
  }
  uint64_t v6 = *v1 + result;
LABEL_39:
  *uint64_t v1 = v6;
  v1[1] = (uint64_t)v7;
  return result;
}

uint64_t sub_1C8CAA92C(unsigned char *__src, unsigned char *a2)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_1C8CAA9F0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1C8CA3D5C(a1, a2);
  }
  return a1;
}

ValueMetadata *type metadata accessor for BinaryEncodingError()
{
  return &type metadata for BinaryEncodingError;
}

uint64_t dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1C8CAAA3C(uint64_t a1)
{
  return sub_1C8CAAA54(a1);
}

uint64_t sub_1C8CAAA54(uint64_t result)
{
  unsigned int v2 = 8 * result;
  uint64_t v3 = 10;
  uint64_t v4 = 11;
  uint64_t v5 = 12;
  if ((8 * result) >> 28) {
    uint64_t v5 = 13;
  }
  if (v2 >= 0x200000) {
    uint64_t v4 = v5;
  }
  if ((8 * result) >> 14) {
    uint64_t v3 = v4;
  }
  if (v2 >= 0x80) {
    uint64_t v6 = v3;
  }
  else {
    uint64_t v6 = 9;
  }
  BOOL v7 = __OFADD__(*v1, v6);
  uint64_t v8 = *v1 + v6;
  if (v7) {
    __break(1u);
  }
  else {
    *uint64_t v1 = v8;
  }
  return result;
}

uint64_t dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 104))();
}

uint64_t sub_1C8CAAAD0(uint64_t a1, uint64_t a2)
{
  return sub_1C8CAAAEC(a2);
}

uint64_t sub_1C8CAAAEC(uint64_t result)
{
  unsigned int v2 = 8 * result;
  uint64_t v3 = 3;
  uint64_t v4 = 4;
  uint64_t v5 = 5;
  if ((8 * result) >> 28) {
    uint64_t v5 = 6;
  }
  if (v2 >= 0x200000) {
    uint64_t v4 = v5;
  }
  if ((8 * result) >> 14) {
    uint64_t v3 = v4;
  }
  if (v2 >= 0x80) {
    uint64_t v6 = v3;
  }
  else {
    uint64_t v6 = 2;
  }
  BOOL v7 = __OFADD__(*v1, v6);
  uint64_t v8 = *v1 + v6;
  if (v7) {
    __break(1u);
  }
  else {
    *uint64_t v1 = v8;
  }
  return result;
}

uint64_t dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 136))();
}

unint64_t sub_1C8CAAB68(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CAAB80(a1, a2, a3, a4);
}

unint64_t sub_1C8CAAB80(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  unsigned int v6 = 8 * a2;
  uint64_t v7 = 2;
  uint64_t v8 = 3;
  uint64_t v9 = 4;
  if ((8 * a2) >> 28) {
    uint64_t v9 = 5;
  }
  if (v6 >= 0x200000) {
    uint64_t v8 = v9;
  }
  if ((8 * a2) >> 14) {
    uint64_t v7 = v8;
  }
  if (v6 >= 0x80) {
    uint64_t v10 = v7;
  }
  else {
    uint64_t v10 = 1;
  }
  unint64_t result = sub_1C8CA7A1C(a3, a4);
  if (!v5)
  {
    unint64_t v12 = result;
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      unint64_t result = sub_1C8CA7BA8(result);
      unint64_t v13 = v10 + result;
      if (!__OFADD__(v10, result))
      {
        BOOL v14 = __OFADD__(v13, v12);
        unint64_t v15 = v13 + v12;
        if (!v14)
        {
          BOOL v14 = __OFADD__(*v4, v15);
          unint64_t v16 = *v4 + v15;
          if (!v14)
          {
            *uint64_t v4 = v16;
            return result;
          }
LABEL_20:
          __break(1u);
          return result;
        }
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
    }
    __break(1u);
    goto LABEL_19;
  }
  return result;
}

uint64_t dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

unint64_t sub_1C8CAAC68(int a1, int a2)
{
  return sub_1C8CAAC84(a1, a2);
}

unint64_t sub_1C8CAAC84(unint64_t result, int a2)
{
  unsigned int v3 = 8 * a2;
  if ((8 * a2) >= 0x80)
  {
    if (v3 < 0x4000)
    {
      if (result < 0x80)
      {
        uint64_t v5 = 2;
        uint64_t v4 = 1;
        goto LABEL_59;
      }
      if ((result & 0x8000000000000000) != 0)
      {
        uint64_t v5 = 2;
        goto LABEL_46;
      }
      if (result >> 35)
      {
        uint64_t v5 = 2;
        goto LABEL_50;
      }
      if (!(result >> 21))
      {
        uint64_t v4 = 2;
        uint64_t v5 = 2;
LABEL_18:
        if (result < 0x4000) {
          goto LABEL_59;
        }
LABEL_58:
        ++v4;
        goto LABEL_59;
      }
      uint64_t v5 = 2;
LABEL_56:
      uint64_t v4 = 4;
      goto LABEL_57;
    }
    if (v3 >> 21)
    {
      if (v3 >> 28)
      {
        if (result < 0x80)
        {
          uint64_t v5 = 5;
          uint64_t v4 = 1;
          goto LABEL_59;
        }
        if ((result & 0x8000000000000000) != 0)
        {
          uint64_t v5 = 5;
          goto LABEL_46;
        }
        if (result >> 35)
        {
          uint64_t v5 = 5;
          goto LABEL_50;
        }
        if (!(result >> 21))
        {
          uint64_t v5 = 5;
          goto LABEL_10;
        }
        uint64_t v5 = 5;
        goto LABEL_56;
      }
      if (result < 0x80)
      {
        uint64_t v5 = 4;
        uint64_t v4 = 1;
        goto LABEL_59;
      }
      if ((result & 0x8000000000000000) == 0)
      {
        if (!(result >> 35))
        {
          if (!(result >> 21))
          {
            uint64_t v5 = 4;
            goto LABEL_10;
          }
          uint64_t v4 = 4;
          uint64_t v5 = 4;
LABEL_57:
          if (!(result >> 28)) {
            goto LABEL_59;
          }
          goto LABEL_58;
        }
        uint64_t v5 = 4;
        goto LABEL_50;
      }
      uint64_t v5 = 4;
    }
    else
    {
      if (result < 0x80)
      {
        uint64_t v5 = 3;
        uint64_t v4 = 1;
        goto LABEL_59;
      }
      if ((result & 0x8000000000000000) == 0)
      {
        if (!(result >> 35))
        {
          if (!(result >> 21))
          {
            uint64_t v5 = 3;
            goto LABEL_10;
          }
          uint64_t v5 = 3;
          goto LABEL_56;
        }
        uint64_t v5 = 3;
        goto LABEL_50;
      }
      uint64_t v5 = 3;
    }
LABEL_46:
    uint64_t v4 = 10;
    goto LABEL_59;
  }
  if (result < 0x80)
  {
    uint64_t v4 = 1;
    uint64_t v5 = 1;
    goto LABEL_59;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    uint64_t v5 = 1;
    goto LABEL_46;
  }
  if (!(result >> 35))
  {
    uint64_t v5 = 1;
    if (result < 0x200000)
    {
LABEL_10:
      uint64_t v4 = 2;
      goto LABEL_18;
    }
    goto LABEL_56;
  }
  uint64_t v5 = 1;
LABEL_50:
  if (result >> 49)
  {
    result >>= 28;
    uint64_t v4 = 8;
    goto LABEL_57;
  }
  uint64_t v4 = 6;
  if (result >> 42) {
    goto LABEL_58;
  }
LABEL_59:
  uint64_t v6 = v5 + v4;
  BOOL v7 = __OFADD__(*v2, v6);
  uint64_t v8 = *v2 + v6;
  if (v7) {
    __break(1u);
  }
  else {
    *unsigned int v2 = v8;
  }
  return result;
}

uint64_t dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 128))();
}

void sub_1C8CAAE88(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
}

void sub_1C8CAAEA0(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  unsigned int v5 = 8 * a2;
  uint64_t v6 = 2;
  uint64_t v7 = 3;
  uint64_t v8 = 4;
  if ((8 * a2) >> 28) {
    uint64_t v8 = 5;
  }
  if (v5 >= 0x200000) {
    uint64_t v7 = v8;
  }
  if ((8 * a2) >> 14) {
    uint64_t v6 = v7;
  }
  if (v5 >= 0x80) {
    uint64_t v9 = v6;
  }
  else {
    uint64_t v9 = 1;
  }
  uint64_t v10 = *v4 + v9;
  if (__OFADD__(*v4, v9))
  {
    __break(1u);
  }
  else
  {
    *uint64_t v4 = v10;
    unsigned int v11 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 40))(a3, a4);
    uint64_t v12 = sub_1C8CA7B64(v11);
    if (!__OFADD__(v10, v12))
    {
      *uint64_t v4 = v10 + v12;
      return;
    }
  }
  __break(1u);
}

uint64_t dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

unint64_t sub_1C8CAAF7C(unsigned int a1, int a2)
{
  return sub_1C8CAAC84(a1, a2);
}

uint64_t dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

unint64_t sub_1C8CAAFC0(unint64_t a1, int a2)
{
  return sub_1C8CAAC84(a1, a2);
}

uint64_t sub_1C8CAAFD8(uint64_t a1, double a2)
{
  return sub_1C8D2A3E8(a1, a2);
}

unint64_t sub_1C8CAAFF0(char a1, uint64_t a2)
{
  unint64_t v2 = a1 & 1;
  sub_1C8CA83B4(a2, 0);
  return sub_1C8CAB02C(v2);
}

unint64_t sub_1C8CAB02C(unint64_t result)
{
  unint64_t v2 = *v1;
  if (result < 0x80)
  {
    LOBYTE(v3) = result;
  }
  else
  {
    do
    {
      *v2++ = result | 0x80;
      unint64_t v3 = result >> 7;
      unint64_t v4 = result >> 14;
      result >>= 7;
    }
    while (v4);
  }
  *unint64_t v2 = v3;
  *uint64_t v1 = v2 + 1;
  return result;
}

unint64_t sub_1C8CAB064(int a1, uint64_t a2)
{
  unint64_t v2 = a1;
  sub_1C8CA83B4(a2, 0);
  return sub_1C8CAB02C(v2);
}

unint64_t sub_1C8CAB0A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CAB0B8(a1, a2, a3, a4);
}

unint64_t sub_1C8CAB0B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 40))(a3, a4);
  sub_1C8CA83B4(a2, 0);
  return sub_1C8CAB02C(v5);
}

unint64_t sub_1C8CAB130(unsigned int a1, uint64_t a2)
{
  unint64_t v2 = a1;
  sub_1C8CA83B4(a2, 0);
  return sub_1C8CAB02C(v2);
}

unint64_t sub_1C8CAB16C(unint64_t a1, uint64_t a2)
{
  return sub_1C8CAB02C(a1);
}

uint64_t sub_1C8CAB1A8(char a1, unint64_t a2)
{
  return sub_1C8CAB1C0(a1, a2);
}

uint64_t sub_1C8CAB1C0(char a1, unint64_t a2)
{
  sub_1C8CA5968(a2);
  sub_1C8CA6060((uint64_t)": ", 2, v4);
  if (a1) {
    unint64_t v5 = "true";
  }
  else {
    unint64_t v5 = "false";
  }
  if (a1) {
    uint64_t v6 = 4;
  }
  else {
    uint64_t v6 = 5;
  }
  sub_1C8CA6060((uint64_t)v5, v6, (unsigned __int8 *)4);
  uint64_t v7 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *unint64_t v2 = v7;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50(0, *(void *)(v7 + 16) + 1, 1, (char *)v7);
    uint64_t v7 = result;
    *unint64_t v2 = result;
  }
  unint64_t v10 = *(void *)(v7 + 16);
  unint64_t v9 = *(void *)(v7 + 24);
  if (v10 >= v9 >> 1)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v9 > 1), v10 + 1, 1, (char *)v7);
    uint64_t v7 = result;
  }
  *(void *)(v7 + 16) = v10 + 1;
  *(unsigned char *)(v7 + v10 + 32) = 10;
  *unint64_t v2 = v7;
  return result;
}

BOOL static BinaryEncodingError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t BinaryEncodingError.hash(into:)()
{
  return sub_1C8D88850();
}

uint64_t BinaryEncodingError.hashValue.getter()
{
  return sub_1C8D888A0();
}

BOOL sub_1C8CAB334(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1C8CAB34C()
{
  return sub_1C8D888A0();
}

uint64_t sub_1C8CAB394()
{
  return sub_1C8D88850();
}

uint64_t sub_1C8CAB3C0()
{
  return sub_1C8D888A0();
}

unint64_t sub_1C8CAB408()
{
  unint64_t result = qword_1EA565E88;
  if (!qword_1EA565E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA565E88);
  }
  return result;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for BinaryEncodingError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for BinaryEncodingError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C8CAB5D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1C8CAB600(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1C8CAB60C(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for HashVisitor(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for HashVisitor(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 72)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for HashVisitor(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 72) = v3;
  return result;
}

ValueMetadata *type metadata accessor for HashVisitor()
{
  return &type metadata for HashVisitor;
}

uint64_t sub_1C8CAB6DC()
{
  return sub_1C8D882C0();
}

uint64_t sub_1C8CAB728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C8D88850();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 80))(v4, a3, a4);
}

uint64_t sub_1C8CAB784(uint64_t a1)
{
  sub_1C8D88850();
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_1C8D88850();
  if (v2)
  {
    uint64_t v4 = a1 + 32;
    do
    {
      ++v4;
      uint64_t result = sub_1C8D88860();
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_1C8CAB7E0(uint64_t a1)
{
  sub_1C8D88850();
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_1C8D88850();
  if (v2)
  {
    uint64_t v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1C8D883C0();
      uint64_t result = swift_bridgeObjectRelease();
      v4 += 16;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_1C8CAB85C(uint64_t a1)
{
  sub_1C8D88850();
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_1C8D88850();
  if (v2)
  {
    uint64_t v4 = (unint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      unint64_t v6 = *v4;
      sub_1C8CA3CF8(v5, *v4);
      sub_1C8D881D0();
      uint64_t result = sub_1C8CA3D5C(v5, v6);
      v4 += 2;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_1C8CAB8E8()
{
  return sub_1C8D88560();
}

uint64_t sub_1C8CAB93C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(a3 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](a1, a2);
  unint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v4;
  sub_1C8D88850();
  uint64_t v11 = swift_bridgeObjectRetain();
  if (MEMORY[0x1CB773090](v11, a3))
  {
    uint64_t v16 = v9;
    uint64_t v12 = 0;
    BOOL v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 80);
    uint64_t v18 = a4;
    uint64_t v19 = (void (**)(char *, uint64_t *, uint64_t))(v8 + 16);
    while (1)
    {
      char v13 = sub_1C8D88510();
      sub_1C8D884D0();
      if (v13)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v10, a1+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v12, a3);
        uint64_t v14 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          goto LABEL_10;
        }
      }
      else
      {
        uint64_t result = sub_1C8D886B0();
        if (v16 != 8)
        {
          __break(1u);
          return result;
        }
        uint64_t v21 = result;
        (*v19)(v10, &v21, a3);
        swift_unknownObjectRelease();
        uint64_t v14 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_10:
          __break(1u);
          return swift_bridgeObjectRelease();
        }
      }
      v17(v20, a3, v18);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, a3);
      ++v12;
      if (v14 == MEMORY[0x1CB773090](a1, a3)) {
        return swift_bridgeObjectRelease();
      }
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C8CABB68()
{
  return sub_1C8D882A0();
}

uint64_t sub_1C8CABC6C()
{
  return sub_1C8D882A0();
}

uint64_t sub_1C8CABD28()
{
  return sub_1C8D882A0();
}

uint64_t sub_1C8CABDE4()
{
  return sub_1C8D88880();
}

uint64_t sub_1C8CABE28()
{
  return sub_1C8D88880();
}

uint64_t sub_1C8CABE60()
{
  return sub_1C8D88860();
}

uint64_t sub_1C8CABE98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C8CABEF0(a1, a2, a3, a4, a5, MEMORY[0x1E4FBB120]);
}

uint64_t sub_1C8CABEC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C8CABEF0(a1, a2, a3, a4, a5, MEMORY[0x1E4F27780]);
}

uint64_t sub_1C8CABEF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t))
{
  sub_1C8D88850();
  return a6(v6, a1, a2);
}

uint64_t sub_1C8CABF44()
{
  return sub_1C8CAB6DC();
}

uint64_t sub_1C8CABF6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CAB728(a1, a2, a3, a4);
}

uint64_t sub_1C8CABF94(uint64_t a1)
{
  sub_1C8D88850();
  return sub_1C8D4067C(v1, a1);
}

uint64_t sub_1C8CABFD0(uint64_t a1)
{
  sub_1C8D88850();
  return sub_1C8D40624(v1, a1);
}

uint64_t sub_1C8CAC00C(uint64_t a1)
{
  return sub_1C8CAC03C(a1);
}

uint64_t sub_1C8CAC024(uint64_t a1)
{
  return sub_1C8CAC098(a1);
}

uint64_t sub_1C8CAC03C(uint64_t a1)
{
  sub_1C8D88850();
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_1C8D88850();
  if (v2)
  {
    uint64_t v4 = a1 + 32;
    do
    {
      v4 += 4;
      uint64_t result = sub_1C8D88870();
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_1C8CAC098(uint64_t a1)
{
  sub_1C8D88850();
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_1C8D88850();
  if (v2)
  {
    uint64_t v4 = a1 + 32;
    do
    {
      v4 += 8;
      uint64_t result = sub_1C8D88880();
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_1C8CAC0F4(uint64_t a1)
{
  return sub_1C8CAB784(a1);
}

uint64_t sub_1C8CAC10C(uint64_t a1)
{
  return sub_1C8CAB7E0(a1);
}

uint64_t sub_1C8CAC124(uint64_t a1)
{
  return sub_1C8CAB85C(a1);
}

uint64_t sub_1C8CAC13C()
{
  return sub_1C8CAB8E8();
}

uint64_t sub_1C8CAC154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CAB93C(a1, a2, a3, a4);
}

uint64_t sub_1C8CAC16C()
{
  return sub_1C8CABB68();
}

uint64_t sub_1C8CAC184()
{
  return sub_1C8CABC6C();
}

uint64_t sub_1C8CAC19C()
{
  return sub_1C8CABD28();
}

uint64_t sub_1C8CAC1B4()
{
  return sub_1C8D881D0();
}

uint64_t sub_1C8CAC1E8()
{
  return sub_1C8CABE28();
}

unint64_t sub_1C8CAC200(int a1)
{
  if ((a1 - 58) >= 0xFFFFFFF6)
  {
    unsigned __int8 v1 = 0;
    uint64_t v2 = (a1 - 48);
  }
  else
  {
    unsigned __int8 v1 = 0;
    uint64_t v2 = 10;
    switch(a1)
    {
      case 'A':
      case 'a':
        return v2 | ((unint64_t)v1 << 32);
      case 'B':
      case 'b':
        unsigned __int8 v1 = 0;
        uint64_t v2 = 11;
        break;
      case 'C':
      case 'c':
        unsigned __int8 v1 = 0;
        uint64_t v2 = 12;
        break;
      case 'D':
      case 'd':
        unsigned __int8 v1 = 0;
        uint64_t v2 = 13;
        break;
      case 'E':
      case 'e':
        unsigned __int8 v1 = 0;
        uint64_t v2 = 14;
        break;
      case 'F':
      case 'f':
        unsigned __int8 v1 = 0;
        uint64_t v2 = 15;
        break;
      default:
        uint64_t v2 = 0;
        unsigned __int8 v1 = 1;
        break;
    }
  }
  return v2 | ((unint64_t)v1 << 32);
}

void sub_1C8CAC340()
{
  qword_1EA575070 = (uint64_t)&unk_1F234F6B0;
}

uint64_t sub_1C8CAC354(uint64_t result, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *a3;
  if (*(unsigned char *)(result + *a3) != 34 || (uint64_t v8 = v5 + 1, *a3 = v5 + 1, v5 + 1 == a4))
  {
LABEL_3:
    sub_1C8CAC5B0();
    swift_allocError();
    *uint64_t v9 = xmmword_1C8D8AD10;
    return swift_willThrow();
  }
  uint64_t v10 = v4;
  uint64_t v11 = a2;
  uint64_t v12 = result;
  int v13 = *(unsigned __int8 *)(result + v8);
  if (v13 != 34)
  {
    uint64_t v26 = v4;
    int v16 = 0;
    char v17 = 0;
    uint64_t v14 = 0;
    unint64_t v18 = 0x1EA565000uLL;
    uint64_t v19 = v5 + 1;
    while (1)
    {
      if (v13 <= 46)
      {
        if (v13 == 43) {
          goto LABEL_20;
        }
        if (v13 == 45) {
LABEL_19:
        }
          int v16 = 1;
      }
      else
      {
        switch(v13)
        {
          case '/':
            goto LABEL_20;
          case '_':
            goto LABEL_19;
          case '\\':
            if (++v19 == a4) {
              goto LABEL_29;
            }
            int v13 = *(unsigned __int8 *)(v12 + v19);
            if (v13 != 47)
            {
              *a3 = v19;
              goto LABEL_3;
            }
LABEL_20:
            char v17 = 1;
            break;
        }
      }
      if (*(void *)(v18 + 2528) != -1)
      {
        int v22 = v16;
        uint64_t result = swift_once();
        unint64_t v18 = 0x1EA565000;
        int v16 = v22;
      }
      if (*(void *)(qword_1EA575070 + 16) <= (unint64_t)v13)
      {
        __break(1u);
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
      if ((*(void *)(qword_1EA575070 + 8 * v13 + 32) & 0x8000000000000000) == 0
        && __OFADD__(v14++, 1))
      {
        goto LABEL_34;
      }
      if (++v19 == a4)
      {
LABEL_29:
        *a3 = a4;
        goto LABEL_3;
      }
      int v13 = *(unsigned __int8 *)(v12 + v19);
      if (v13 == 34)
      {
        *a3 = v19;
        char v21 = v17 & v16;
        uint64_t v10 = v26;
        uint64_t v11 = a2;
        if (v21) {
          goto LABEL_3;
        }
        goto LABEL_6;
      }
    }
  }
  uint64_t v14 = 0;
LABEL_6:
  if ((unsigned __int128)(v14 * (__int128)3) >> 64 == (3 * v14) >> 63)
  {
    uint64_t v24 = sub_1C8CA4A2C(3 * v14 / 4);
    unint64_t v25 = v15;
    *a3 = v8;
    sub_1C8CB0A7C(&v24, v12, v11, a3);
    if (v10)
    {
      return sub_1C8CA3D5C(v24, v25);
    }
    else
    {
      ++*a3;
      return v24;
    }
  }
  else
  {
LABEL_35:
    __break(1u);
  }
  return result;
}

unint64_t sub_1C8CAC5B0()
{
  unint64_t result = qword_1EA565E90;
  if (!qword_1EA565E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA565E90);
  }
  return result;
}

uint64_t sub_1C8CAC604(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  if (!result) {
    return result;
  }
  uint64_t v5 = (unsigned char *)result;
  if (a2 - result < 1) {
    return result;
  }
  uint64_t v8 = 0;
  unint64_t v9 = 0;
  for (uint64_t i = *a5; ; *a5 = i)
  {
    unint64_t v11 = *(unsigned __int8 *)(a3 + i);
    if (qword_1EA5659E0 != -1) {
      unint64_t result = swift_once();
    }
    uint64_t v12 = qword_1EA575070;
    if (*(void *)(qword_1EA575070 + 16) <= v11)
    {
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }
    uint64_t v13 = *(void *)(qword_1EA575070 + 8 * v11 + 32);
    if ((v13 & 0x8000000000000000) == 0) {
      goto LABEL_14;
    }
    if (v11 == 32) {
      goto LABEL_4;
    }
    if (v11 != 92) {
      break;
    }
    uint64_t v14 = *a5 + 1;
    *a5 = v14;
    if (*(unsigned char *)(a3 + v14) != 47) {
      goto LABEL_39;
    }
    if (*(void *)(v12 + 16) < 0x30uLL) {
      goto LABEL_45;
    }
    uint64_t v13 = *(void *)(v12 + 408);
LABEL_14:
    BOOL v15 = __OFADD__(v8++, 1);
    if (v15) {
      goto LABEL_44;
    }
    unint64_t v9 = v13 | (v9 << 6);
    if (v8 == 4)
    {
      uint64_t v8 = 0;
      *uint64_t v5 = BYTE2(v9);
      v5[1] = BYTE1(v9);
      v5[2] = v9;
      v5 += 3;
      unint64_t v9 = 0;
    }
LABEL_4:
    uint64_t i = *a5 + 1;
  }
  if (v11 != 61)
  {
    if (v11 != 34)
    {
LABEL_39:
      sub_1C8CAC5B0();
      swift_allocError();
      *uint64_t v19 = xmmword_1C8D8AD10;
      return swift_willThrow();
    }
LABEL_21:
    switch(v8)
    {
      case 0:
        return result;
      case 2:
LABEL_32:
        *uint64_t v5 = v9 >> 4;
        return result;
      case 3:
        *uint64_t v5 = v9 >> 10;
        v5[1] = v9 >> 2;
        return result;
    }
    goto LABEL_39;
  }
  int v16 = *(unsigned __int8 *)(a3 + *a5);
  if (v16 == 34) {
    goto LABEL_21;
  }
  unint64_t v17 = 0;
  uint64_t v18 = *a5 + 1;
  do
  {
    if (v16 != 32)
    {
      if (v16 != 61) {
        goto LABEL_39;
      }
      BOOL v15 = __OFADD__(v17++, 1);
      if (v15)
      {
        __break(1u);
        goto LABEL_32;
      }
    }
    *a5 = v18;
    int v16 = *(unsigned __int8 *)(a3 + v18++);
  }
  while (v16 != 34);
  switch(v8)
  {
    case 0:
      if (!v17) {
        return result;
      }
      goto LABEL_39;
    case 2:
      *uint64_t v5 = v9 >> 4;
      if ((v17 | 2) != 2) {
        goto LABEL_39;
      }
      break;
    case 3:
      *uint64_t v5 = v9 >> 10;
      v5[1] = v9 >> 2;
      if (v17 >= 2) {
        goto LABEL_39;
      }
      break;
    default:
      goto LABEL_39;
  }
  return result;
}

uint64_t sub_1C8CAC864(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v3 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    while (1)
    {
      if ((a2 & 0x1000000000000000) != 0)
      {
        int v9 = sub_1C8D88670();
      }
      else
      {
        if ((a2 & 0x2000000000000000) == 0)
        {
          uint64_t v6 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a1 & 0x1000000000000000) == 0) {
            uint64_t v6 = sub_1C8D886C0();
          }
          int v7 = *(unsigned __int8 *)(v6 + v5);
          if (*(char *)(v6 + v5) < 0)
          {
            switch(__clz(v7 ^ 0xFF))
            {
              case 0x1Au:
                int v7 = *(unsigned char *)(v5 + v6 + 1) & 0x3F | ((v7 & 0x1F) << 6);
                uint64_t v8 = 2;
                break;
              case 0x1Bu:
                int v7 = ((v7 & 0xF) << 12) | ((*(unsigned char *)(v5 + v6 + 1) & 0x3F) << 6) | *(unsigned char *)(v5 + v6 + 2) & 0x3F;
                uint64_t v8 = 3;
                break;
              case 0x1Cu:
                int v7 = ((v7 & 0xF) << 18) | ((*(unsigned char *)(v5 + v6 + 1) & 0x3F) << 12) | ((*(unsigned char *)(v5 + v6 + 2) & 0x3F) << 6) | *(unsigned char *)(v5 + v6 + 3) & 0x3F;
                uint64_t v8 = 4;
                break;
              default:
                goto LABEL_12;
            }
          }
          else
          {
LABEL_12:
            uint64_t v8 = 1;
          }
          goto LABEL_16;
        }
        int v9 = sub_1C8D886D0();
      }
      int v7 = v9;
LABEL_16:
      v5 += v8;
      if (v7 == 92)
      {
        if (v5 >= v3) {
          goto LABEL_128;
        }
        if ((a2 & 0x1000000000000000) != 0)
        {
          int v10 = sub_1C8D88670();
        }
        else
        {
          if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0) {
            sub_1C8D886C0();
          }
          int v10 = sub_1C8D886D0();
        }
        v5 += v11;
        switch(v10)
        {
          case '""':
          case '/':
          case '\\':
          case 'b':
          case 'f':
          case 'n':
          case 'r':
          case 't':
            break;
          case 'u':
            if (v5 >= v3) {
              goto LABEL_128;
            }
            if ((a2 & 0x1000000000000000) != 0)
            {
              int v12 = sub_1C8D88670();
            }
            else
            {
              if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0) {
                sub_1C8D886C0();
              }
              int v12 = sub_1C8D886D0();
            }
            uint64_t v14 = v13;
            unint64_t v15 = sub_1C8CAC200(v12);
            if ((v15 & 0x100000000) != 0) {
              goto LABEL_128;
            }
            uint64_t v16 = v14 + v5;
            if (v16 >= v3) {
              goto LABEL_128;
            }
            unsigned int v17 = v15;
            if ((a2 & 0x1000000000000000) != 0)
            {
              int v18 = sub_1C8D88670();
            }
            else
            {
              if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0) {
                sub_1C8D886C0();
              }
              int v18 = sub_1C8D886D0();
            }
            uint64_t v20 = v19;
            unint64_t v21 = sub_1C8CAC200(v18);
            if ((v21 & 0x100000000) != 0) {
              goto LABEL_128;
            }
            uint64_t v22 = v20 + v16;
            if (v22 >= v3) {
              goto LABEL_128;
            }
            int v23 = v21;
            if ((a2 & 0x1000000000000000) != 0)
            {
              int v24 = sub_1C8D88670();
            }
            else
            {
              if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0) {
                sub_1C8D886C0();
              }
              int v24 = sub_1C8D886D0();
            }
            uint64_t v26 = v25;
            unint64_t v27 = sub_1C8CAC200(v24);
            if ((v27 & 0x100000000) != 0) {
              goto LABEL_128;
            }
            uint64_t v28 = v26 + v22;
            if (v28 >= v3) {
              goto LABEL_128;
            }
            int v29 = v27;
            if ((a2 & 0x1000000000000000) != 0)
            {
              int v30 = sub_1C8D88670();
            }
            else
            {
              if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0) {
                sub_1C8D886C0();
              }
              int v30 = sub_1C8D886D0();
            }
            uint64_t v32 = v31;
            unint64_t v33 = sub_1C8CAC200(v30);
            if ((v33 & 0x100000000) != 0) {
              goto LABEL_128;
            }
            if (v17 >> 28)
            {
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
              JUMPOUT(0x1C8CAD018);
            }
            unsigned int v34 = v23 + 16 * v17;
            if (__CFADD__(v23, 16 * v17)) {
              goto LABEL_132;
            }
            if (v34 >> 28) {
              goto LABEL_133;
            }
            BOOL v35 = __CFADD__(v29, 16 * v34);
            unsigned int v36 = v29 + 16 * v34;
            if (v35) {
              goto LABEL_134;
            }
            if (v36 >> 28) {
              goto LABEL_135;
            }
            unsigned int v37 = v33 + 16 * v36;
            if (__CFADD__(v33, 16 * v36)) {
              goto LABEL_136;
            }
            uint64_t v5 = v32 + v28;
            if (HIWORD(v37) <= 0x10u && (v37 & 0xFFFFF800) != 0xD800) {
              break;
            }
            if (v37 >= 0xE000 || v37 >> 10 >= 0x37 || v5 >= v3) {
              goto LABEL_128;
            }
            if ((a2 & 0x1000000000000000) != 0)
            {
              int v38 = sub_1C8D88670();
            }
            else
            {
              if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0) {
                sub_1C8D886C0();
              }
              int v38 = sub_1C8D886D0();
            }
            if (v38 != 92) {
              goto LABEL_128;
            }
            uint64_t v40 = v39 + v5;
            if (v39 + v5 >= v3) {
              goto LABEL_128;
            }
            if ((a2 & 0x1000000000000000) != 0)
            {
              int v41 = sub_1C8D88670();
            }
            else
            {
              if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0) {
                sub_1C8D886C0();
              }
              int v41 = sub_1C8D886D0();
            }
            if (v41 != 117) {
              goto LABEL_128;
            }
            uint64_t v43 = v42 + v40;
            if (v42 + v40 >= v3) {
              goto LABEL_128;
            }
            if ((a2 & 0x1000000000000000) != 0)
            {
              int v44 = sub_1C8D88670();
            }
            else
            {
              if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0) {
                sub_1C8D886C0();
              }
              int v44 = sub_1C8D886D0();
            }
            uint64_t v46 = v45;
            unint64_t v47 = sub_1C8CAC200(v44);
            if ((v47 & 0x100000000) != 0) {
              goto LABEL_128;
            }
            uint64_t v48 = v46 + v43;
            if (v48 >= v3) {
              goto LABEL_128;
            }
            unsigned int v49 = v47;
            if ((a2 & 0x1000000000000000) != 0)
            {
              int v50 = sub_1C8D88670();
            }
            else
            {
              if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0) {
                sub_1C8D886C0();
              }
              int v50 = sub_1C8D886D0();
            }
            uint64_t v52 = v51;
            unint64_t v53 = sub_1C8CAC200(v50);
            if ((v53 & 0x100000000) != 0) {
              goto LABEL_128;
            }
            uint64_t v54 = v52 + v48;
            if (v54 >= v3) {
              goto LABEL_128;
            }
            int v55 = v53;
            if ((a2 & 0x1000000000000000) != 0)
            {
              int v56 = sub_1C8D88670();
            }
            else
            {
              if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0) {
                sub_1C8D886C0();
              }
              int v56 = sub_1C8D886D0();
            }
            uint64_t v68 = v57;
            unint64_t v58 = sub_1C8CAC200(v56);
            if ((v58 & 0x100000000) != 0) {
              goto LABEL_128;
            }
            uint64_t v59 = v68 + v54;
            if (v59 >= v3) {
              goto LABEL_128;
            }
            int v60 = v58;
            if ((a2 & 0x1000000000000000) != 0)
            {
              int v61 = sub_1C8D88670();
            }
            else
            {
              if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0) {
                sub_1C8D886C0();
              }
              int v61 = sub_1C8D886D0();
            }
            uint64_t v69 = v62;
            unint64_t v63 = sub_1C8CAC200(v61);
            if ((v63 & 0x100000000) != 0)
            {
LABEL_128:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return 0;
            }
            if (v49 >> 28) {
              goto LABEL_137;
            }
            unsigned int v64 = v55 + 16 * v49;
            if (__CFADD__(v55, 16 * v49)) {
              goto LABEL_138;
            }
            if (v64 >> 28) {
              goto LABEL_139;
            }
            BOOL v35 = __CFADD__(v60, 16 * v64);
            unsigned int v65 = v60 + 16 * v64;
            if (v35) {
              goto LABEL_140;
            }
            if (v65 >> 28) {
              goto LABEL_141;
            }
            BOOL v35 = __CFADD__(v63, 16 * v65);
            unsigned int v66 = v63 + 16 * v65;
            if (v35) {
              goto LABEL_142;
            }
            if (v66 >> 10 != 55) {
              goto LABEL_128;
            }
            if (v37 < 0xD800) {
              goto LABEL_143;
            }
            uint64_t v5 = v69 + v59;
            break;
          default:
            goto LABEL_128;
        }
      }
      sub_1C8D88390();
      if (v5 >= v3)
      {
        swift_bridgeObjectRelease();
        return 0;
      }
    }
  }
  return 0;
}

void sub_1C8CAD178()
{
  uint64_t v1 = v0[1];
  uint64_t v2 = v0[2];
  if (v2 != v1)
  {
    uint64_t v3 = *v0;
    do
    {
      unsigned int v4 = *(unsigned __int8 *)(v3 + v2);
      BOOL v5 = v4 > 0x20;
      uint64_t v6 = (1 << v4) & 0x100002600;
      if (v5 || v6 == 0) {
        break;
      }
      v0[2] = ++v2;
    }
    while (v1 != v2);
  }
}

uint64_t sub_1C8CAD1C0()
{
  uint64_t v2 = v0[1];
  uint64_t v1 = v0[2];
  if (v1 == v2) {
    goto LABEL_8;
  }
  uint64_t v3 = *v0;
  while (1)
  {
    unsigned int v4 = *(unsigned __int8 *)(v3 + v1);
    BOOL v5 = v4 > 0x20;
    uint64_t v6 = (1 << v4) & 0x100002600;
    if (v5 || v6 == 0) {
      break;
    }
    v0[2] = ++v1;
    if (v2 == v1) {
      goto LABEL_8;
    }
  }
  if (v2 == v1)
  {
LABEL_8:
    sub_1C8CAC5B0();
    swift_allocError();
    *uint64_t v8 = xmmword_1C8D8AD20;
    return swift_willThrow();
  }
  else
  {
    int v10 = *(char *)(*v0 + v1);
    if (v10 >= 0) {
      unsigned int v11 = v10 + 1;
    }
    else {
      unsigned int v11 = ((v10 >> 6) & 0xFFFFC0FF | ((v10 & 0x3F) << 8)) + 33217;
    }
    uint64_t v12 = (v11 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * ((4 - (__clz(v11) >> 3)) & 7)));
    return MEMORY[0x1CB772F00](&v12);
  }
}

uint64_t sub_1C8CAD2CC(uint64_t result, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *a3;
  if (*a3 != a4)
  {
    int v9 = *(unsigned __int8 *)(result + v5);
    unsigned __int8 v10 = v9 - 48;
    if (v9 == 48)
    {
      *a3 = v5 + 1;
      if (v5 + 1 == a4) {
        return 0;
      }
      int v11 = *(unsigned __int8 *)(result + v5 + 1);
      if ((v11 - 58) >= 0xFFFFFFF6)
      {
        sub_1C8CAC5B0();
        swift_allocError();
        long long v7 = xmmword_1C8D8AD50;
        goto LABEL_3;
      }
      if (*(unsigned __int8 *)(result + v5 + 1) <= 0x5Bu)
      {
        if (v11 != 46 && v11 != 69) {
          return 0;
        }
        goto LABEL_35;
      }
      if (v11 != 92)
      {
        if (v11 != 101) {
          return 0;
        }
        goto LABEL_35;
      }
    }
    else
    {
      if ((v9 - 58) >= 0xF7u)
      {
        uint64_t v12 = 0;
        uint64_t v13 = v10;
        uint64_t v14 = v5 + 1;
        while (1)
        {
          BOOL v15 = __CFADD__(v12, v13);
          unint64_t v8 = v12 + v13;
          if (v15)
          {
            __break(1u);
            return result;
          }
          uint64_t v16 = v14;
          if (a4 == v14)
          {
            *a3 = a4;
            return v8;
          }
          int v17 = *(unsigned __int8 *)(result + v14);
          if ((v17 - 58) < 0xF6u) {
            break;
          }
          if (v8 <= 0x1999999999999999)
          {
            uint64_t v13 = (v17 - 48);
            uint64_t v12 = 10 * v8;
            ++v14;
            if (!__CFADD__(v13, v12)) {
              continue;
            }
          }
          *a3 = v16;
          sub_1C8CAC5B0();
          swift_allocError();
          long long v7 = xmmword_1C8D8AD30;
          goto LABEL_3;
        }
        *a3 = v14;
        if (v17 > 91)
        {
          if (v17 == 92) {
            return 0;
          }
          if (v17 != 101) {
            return v8;
          }
        }
        else if (v17 != 46 && v17 != 69)
        {
          return v8;
        }
LABEL_35:
        *a3 = v5;
        double v18 = COERCE_DOUBLE(sub_1C8CAD540(result, a2, a3, a4));
        if (v4) {
          return v8;
        }
        if ((v19 & 1) == 0 && v18 > -1.0 && v18 < 1.84467441e19 && trunc(v18) == v18) {
          return (unint64_t)v18;
        }
        goto LABEL_41;
      }
      if (v9 != 92)
      {
LABEL_41:
        sub_1C8CAC5B0();
        swift_allocError();
        long long v7 = xmmword_1C8D8AD40;
        goto LABEL_3;
      }
    }
    return 0;
  }
  sub_1C8CAC5B0();
  swift_allocError();
  long long v7 = xmmword_1C8D8AD20;
LABEL_3:
  long long *v6 = v7;
  swift_willThrow();
  return v8;
}

char *sub_1C8CAD540(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4 = *a3;
  if (*a3 == a4) {
    goto LABEL_2;
  }
  uint64_t v7 = 0;
  unint64_t result = (char *)(a1 + v4);
  int v10 = *result;
  if (v10 == 92 || v10 == 78) {
    return (char *)v7;
  }
  if (v10 == 45)
  {
    uint64_t v11 = v4 + 1;
    *a3 = v4 + 1;
    if (v4 + 1 == a4)
    {
      *a3 = v4;
LABEL_2:
      uint64_t v5 = 13;
LABEL_3:
      sub_1C8CAC5B0();
      swift_allocError();
      void *v6 = 0;
      v6[1] = v5;
      swift_willThrow();
      return (char *)v7;
    }
    int v10 = *(unsigned __int8 *)(a1 + v11);
    if (v10 == 92) {
      return 0;
    }
  }
  else
  {
    uint64_t v11 = *a3;
  }
  if (v10 == 73) {
    return 0;
  }
  if (v10 == 48)
  {
    uint64_t v12 = v11 + 1;
    *a3 = v12;
    if (v12 == a4) {
      return 0;
    }
    LODWORD(v13) = *(unsigned __int8 *)(a1 + v12);
    if (v13 == 92) {
      return 0;
    }
    if ((v13 - 58) >= 0xFFFFFFF6)
    {
      uint64_t v5 = 12;
      goto LABEL_3;
    }
  }
  else
  {
    if ((v10 - 58) < 0xFFFFFFF7) {
      goto LABEL_18;
    }
    *a3 = v11 + 1;
    if (v11 + 1 == a4)
    {
LABEL_23:
      if (!a1)
      {
LABEL_78:
        __break(1u);
        goto LABEL_79;
      }
      int64_t v14 = a4 - v4;
      if (!__OFSUB__(a4, v4))
      {
LABEL_25:
        BOOL v15 = sub_1C8D0B988(result, v14);
        if ((v16 & 1) == 0) {
          return v15;
        }
        uint64_t v5 = 6;
        goto LABEL_3;
      }
LABEL_77:
      __break(1u);
      goto LABEL_78;
    }
    LODWORD(v13) = *(unsigned __int8 *)(a1 + v11 + 1);
    if (v13 == 92) {
      return 0;
    }
    uint64_t v17 = v11 + 2;
    while ((v13 - 58) >= 0xFFFFFFF6)
    {
      *a3 = v17;
      if (a4 == v17) {
        goto LABEL_23;
      }
      uint64_t v7 = 0;
      LODWORD(v13) = *(unsigned __int8 *)(a1 + v17++);
      if (v13 == 92) {
        return (char *)v7;
      }
    }
    uint64_t v12 = v17 - 1;
  }
  if (v13 == 46)
  {
    *a3 = v12 + 1;
    if (v12 + 1 == a4) {
      goto LABEL_2;
    }
    int v18 = *(unsigned __int8 *)(a1 + v12 + 1);
    if ((v18 - 58) < 0xFFFFFFF6)
    {
      uint64_t v5 = 1;
      if (v18 == 92) {
        return 0;
      }
      goto LABEL_3;
    }
    uint64_t v13 = v12 + 2;
    *a3 = v12 + 2;
    if (v12 + 2 == a4)
    {
LABEL_42:
      if (!a1)
      {
LABEL_80:
        __break(1u);
        goto LABEL_81;
      }
      int64_t v14 = a4 - v4;
      if (!__OFSUB__(a4, v4)) {
        goto LABEL_25;
      }
      __break(1u);
    }
    LODWORD(v13) = *(unsigned __int8 *)(a1 + v13);
    if (v13 == 92) {
      return 0;
    }
    v12 += 3;
    while ((v13 - 58) >= 0xFFFFFFF6)
    {
      *a3 = v12;
      if (a4 == v12) {
        goto LABEL_42;
      }
      uint64_t v7 = 0;
      uint64_t v13 = *(unsigned __int8 *)(a1 + v12++);
      if (v13 == 92) {
        return (char *)v7;
      }
    }
    --v12;
  }
  if ((v13 | 0x20) != 0x65) {
    goto LABEL_73;
  }
  uint64_t v19 = v12 + 1;
  *a3 = v12 + 1;
  if (v12 + 1 == a4) {
    goto LABEL_2;
  }
  int v20 = *(unsigned __int8 *)(a1 + v19);
  switch(v20)
  {
    case '+':
      goto LABEL_84;
    case '\\':
      return 0;
    case '-':
LABEL_84:
      uint64_t v19 = v12 + 2;
      *a3 = v12 + 2;
      if (v12 + 2 == a4) {
        goto LABEL_2;
      }
      int v20 = *(unsigned __int8 *)(a1 + v19);
      if (v20 == 92) {
        return 0;
      }
      break;
  }
  if ((v20 - 58) < 0xFFFFFFF6)
  {
LABEL_18:
    uint64_t v5 = 1;
    goto LABEL_3;
  }
  uint64_t v21 = v19 + 1;
  *a3 = v19 + 1;
  if (v19 + 1 != a4)
  {
LABEL_66:
    int v22 = *(unsigned __int8 *)(a1 + v21);
    if (v22 == 92) {
      return 0;
    }
    uint64_t v21 = v19 + 2;
    while (1)
    {
      uint64_t v19 = (v22 - 58);
      if (v19 < 0xFFFFFFF6) {
        break;
      }
      *a3 = v21;
      if (a4 == v21) {
        goto LABEL_62;
      }
      uint64_t v7 = 0;
      int v22 = *(unsigned __int8 *)(a1 + v21++);
      if (v22 == 92) {
        return (char *)v7;
      }
    }
    uint64_t v12 = v21 - 1;
LABEL_73:
    if (!a1)
    {
LABEL_79:
      __break(1u);
      goto LABEL_80;
    }
    int64_t v14 = v12 - v4;
    if (!__OFSUB__(v12, v4)) {
      goto LABEL_25;
    }
    __break(1u);
    goto LABEL_77;
  }
LABEL_62:
  if (a1)
  {
    int64_t v14 = a4 - v4;
    if (!__OFSUB__(a4, v4)) {
      goto LABEL_25;
    }
    __break(1u);
    goto LABEL_66;
  }
LABEL_81:
  __break(1u);
  return result;
}

unint64_t sub_1C8CAD888(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *a3;
  if (*a3 == a4) {
    goto LABEL_2;
  }
  if (*(unsigned char *)(a1 + v5) == 45)
  {
    uint64_t v9 = v5 + 1;
    *a3 = v9;
    if (v9 == a4)
    {
LABEL_2:
      sub_1C8CAC5B0();
      swift_allocError();
      long long v7 = xmmword_1C8D8AD20;
LABEL_3:
      long long *v6 = v7;
      return swift_willThrow();
    }
    if (*(unsigned __int8 *)(a1 + v9) - 58 <= 0xFFFFFFF5)
    {
      sub_1C8CAC5B0();
      swift_allocError();
      long long v7 = xmmword_1C8D8AD40;
      goto LABEL_3;
    }
    unint64_t result = sub_1C8CAD2CC(a1, a2, a3, a4);
    if (v4) {
      return result;
    }
    if ((v11 & 1) == 0)
    {
      unint64_t v12 = result;
      if ((result & 0x8000000000000000) == 0) {
        return -(uint64_t)result;
      }
      unint64_t result = 0x8000000000000000;
      if (v12 != 0x8000000000000000) {
        goto LABEL_19;
      }
      return result;
    }
    return 0;
  }
  unint64_t result = sub_1C8CAD2CC(a1, a2, a3, a4);
  if (v4) {
    return result;
  }
  if (v10) {
    return 0;
  }
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_19:
    sub_1C8CAC5B0();
    swift_allocError();
    long long v7 = xmmword_1C8D8AD30;
    goto LABEL_3;
  }
  return result;
}

char *sub_1C8CAD9C4()
{
  uint64_t v1 = v0[1];
  uint64_t v2 = v0[2] + 1;
  v0[2] = v2;
  if (v2 == v1) {
    return 0;
  }
  uint64_t v4 = *v0;
  unint64_t result = (char *)(*v0 + v2);
  int v6 = *result;
  if (v6 == 34)
  {
    char v7 = 0;
    uint64_t v8 = v2;
    if (v4) {
      goto LABEL_5;
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  char v7 = 0;
  uint64_t v8 = v2;
  do
  {
    uint64_t v11 = v8 + 1;
    if (v6 == 92)
    {
      if (v11 == v1 || (v8 += 2, v8 == v1))
      {
LABEL_15:
        uint64_t v3 = 0;
        v0[2] = v1;
        return (char *)v3;
      }
      char v7 = 1;
    }
    else
    {
      ++v8;
      if (v11 == v1) {
        goto LABEL_15;
      }
    }
    int v6 = *(unsigned __int8 *)(v4 + v8);
  }
  while (v6 != 34);
  v0[2] = v8;
  if (!v4) {
    goto LABEL_18;
  }
LABEL_5:
  if (!__OFSUB__(v8, v2))
  {
    uint64_t v9 = sub_1C8CA96A4(result, v8 - v2);
    uint64_t v3 = (uint64_t)v9;
    v0[2] = v8 + 1;
    if (((v10 != 0) & v7) == 1)
    {
      uint64_t v3 = sub_1C8CAC864((uint64_t)v9, v10);
      swift_bridgeObjectRelease();
    }
    return (char *)v3;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_1C8CADAF4()
{
  return sub_1C8CADCA4(sub_1C8CAD2CC, sub_1C8CAD2CC);
}

char *sub_1C8CADB68()
{
  uint64_t v2 = v0[1];
  uint64_t v1 = v0[2];
  if (v1 == v2) {
    goto LABEL_2;
  }
  uint64_t v4 = *v0;
  uint64_t v3 = 13;
  while (1)
  {
    unsigned int v5 = *(unsigned __int8 *)(v4 + v1);
    BOOL v6 = v5 > 0x20;
    uint64_t v7 = (1 << v5) & 0x100002600;
    if (v6 || v7 == 0) {
      break;
    }
    v0[2] = ++v1;
    if (v2 == v1) {
      goto LABEL_9;
    }
  }
  if (v2 == v1)
  {
LABEL_2:
    uint64_t v3 = 13;
LABEL_9:
    sub_1C8CAC5B0();
    swift_allocError();
    *uint64_t v9 = 0;
    v9[1] = v3;
    return (char *)swift_willThrow();
  }
  if (*(unsigned char *)(*v0 + v1) != 34 || (unint64_t result = sub_1C8CAD9C4(), !v11))
  {
    uint64_t v3 = 5;
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_1C8CADC30()
{
  return sub_1C8CADCA4((uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_1C8CAD888, (uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_1C8CAD888);
}

uint64_t sub_1C8CADCA4(uint64_t (*a1)(uint64_t, uint64_t, uint64_t *, uint64_t), uint64_t (*a2)(uint64_t, uint64_t, uint64_t *, uint64_t))
{
  unint64_t v47 = a2;
  uint64_t v5 = v3;
  uint64_t v6 = v2;
  uint64_t v63 = *MEMORY[0x1E4F143B8];
  uint64_t v7 = sub_1C8D88340();
  MEMORY[0x1F4188790](v7, v8);
  uint64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (uint64_t *)(v2 + 16);
  uint64_t v12 = *(void *)(v2 + 16);
  uint64_t v14 = *(void *)(v2 + 8);
  if (v12 == v14) {
    goto LABEL_8;
  }
  uint64_t v15 = *(void *)v2;
  while (1)
  {
    unsigned int v16 = *(unsigned __int8 *)(v15 + v12);
    BOOL v17 = v16 > 0x20;
    uint64_t v18 = (1 << v16) & 0x100002600;
    if (v17 || v18 == 0) {
      break;
    }
    uint64_t *v13 = ++v12;
    if (v14 == v12) {
      goto LABEL_8;
    }
  }
  if (v14 == v12) {
    goto LABEL_8;
  }
  uint64_t v23 = *(void *)v2;
  if (*(unsigned char *)(*(void *)v2 + v12) != 34)
  {
    uint64_t v28 = *(void *)(v2 + 24);
    char v29 = *(unsigned char *)(v2 + 48);
    uint64_t v57 = *(void *)v2;
    uint64_t v58 = v14;
    uint64_t v59 = v12;
    uint64_t v60 = v28;
    long long v61 = *(_OWORD *)(v2 + 32);
    char v62 = v29;
    swift_retain();
    uint64_t v30 = a1(v23, v14, v13, v14);
    if (v5)
    {
LABEL_16:
      swift_release();
      return v5;
    }
    uint64_t v5 = v30;
    char v34 = v31;
    swift_release();
    if ((v34 & 1) == 0) {
      return v5;
    }
    goto LABEL_22;
  }
  uint64_t v44 = v9;
  *(void *)(v2 + 16) = v12 + 1;
  uint64_t v24 = *(void *)(v2 + 24);
  char v25 = *(unsigned char *)(v2 + 48);
  uint64_t v51 = v23;
  uint64_t v52 = v14;
  uint64_t v53 = v12 + 1;
  uint64_t v54 = v24;
  long long v55 = *(_OWORD *)(v2 + 32);
  char v56 = v25;
  uint64_t v46 = v24;
  swift_retain();
  uint64_t v45 = v23;
  uint64_t v26 = a1(v23, v14, v13, v14);
  if (v5) {
    goto LABEL_16;
  }
  uint64_t v5 = v26;
  char v32 = v27;
  swift_release();
  if ((v32 & 1) == 0)
  {
    uint64_t v33 = *v13;
    if (*v13 != v14)
    {
      if (*(unsigned char *)(v45 + v33) == 34)
      {
        uint64_t *v13 = v33 + 1;
        return v5;
      }
      goto LABEL_22;
    }
LABEL_8:
    sub_1C8CAC5B0();
    swift_allocError();
    long long v21 = xmmword_1C8D8AD20;
LABEL_9:
    long long *v20 = v21;
    swift_willThrow();
    return v5;
  }
  *(void *)(v6 + 16) = v12;
  sub_1C8CADB68();
  uint64_t v5 = v35;
  sub_1C8D88330();
  uint64_t v36 = sub_1C8D882F0();
  unint64_t v38 = v37;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v11, v7);
  if (v38 >> 60 == 15)
  {
LABEL_35:
    __break(1u);
    JUMPOUT(0x1C8CAE1F8);
  }
  switch(v38 >> 62)
  {
    case 1uLL:
      if (v36 >> 32 < (int)v36)
      {
        __break(1u);
        goto LABEL_35;
      }
      swift_retain();
      uint64_t v5 = sub_1C8CB0D9C((int)v36, v36 >> 32, v38 & 0x3FFFFFFFFFFFFFFFLL, v6, v47);
      char v42 = v43;
      sub_1C8CAA9F0(v36, v38);
LABEL_32:
      sub_1C8CAA9F0(v36, v38);
      if (v42)
      {
LABEL_22:
        sub_1C8CAC5B0();
        swift_allocError();
        long long v21 = xmmword_1C8D8AD40;
        goto LABEL_9;
      }
      return v5;
    case 2uLL:
      uint64_t v39 = *(void *)(v36 + 16);
      uint64_t v40 = *(void *)(v36 + 24);
      swift_retain();
      swift_retain();
      uint64_t v5 = sub_1C8CB0D9C(v39, v40, v38 & 0x3FFFFFFFFFFFFFFFLL, v6, v47);
      char v42 = v41;
      swift_release();
      swift_release();
      goto LABEL_32;
    case 3uLL:
      memset(v48, 0, 14);
      sub_1C8CAF16C((uint64_t)v48, (uint64_t)v48, v6, v47, (uint64_t)&v49);
      sub_1C8CAA9F0(v36, v38);
      if ((v50 & 1) == 0) {
        return v49;
      }
      goto LABEL_22;
    default:
      v48[0] = v36;
      LOWORD(v48[1]) = v38;
      BYTE2(v48[1]) = BYTE2(v38);
      BYTE3(v48[1]) = BYTE3(v38);
      BYTE4(v48[1]) = BYTE4(v38);
      BYTE5(v48[1]) = BYTE5(v38);
      sub_1C8CAF16C((uint64_t)v48, (uint64_t)v48 + BYTE6(v38), v6, v47, (uint64_t)&v49);
      sub_1C8CAA9F0(v36, v38);
      if (v50) {
        goto LABEL_22;
      }
      return v49;
  }
}

uint64_t sub_1C8CAE208()
{
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  uint64_t v62 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1C8D88340();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t *)(v0 + 16);
  uint64_t v10 = *(void *)(v0 + 16);
  uint64_t v11 = *(void *)(v0 + 8);
  if (v10 == v11) {
    goto LABEL_8;
  }
  uint64_t v12 = *(void *)v0;
  while (1)
  {
    unsigned int v13 = *(unsigned __int8 *)(v12 + v10);
    BOOL v14 = v13 > 0x20;
    uint64_t v15 = (1 << v13) & 0x100002600;
    if (v14 || v15 == 0) {
      break;
    }
    *uint64_t v9 = ++v10;
    if (v11 == v10) {
      goto LABEL_8;
    }
  }
  if (v11 == v10) {
    goto LABEL_8;
  }
  uint64_t v20 = *(void *)v0;
  if (*(unsigned char *)(*(void *)v0 + v10) == 34)
  {
    *(void *)(v0 + 16) = v10 + 1;
    uint64_t v21 = *(void *)(v0 + 24);
    char v22 = *(unsigned char *)(v0 + 48);
    uint64_t v50 = v20;
    uint64_t v51 = v11;
    uint64_t v52 = v10 + 1;
    uint64_t v53 = v21;
    long long v54 = *(_OWORD *)(v0 + 32);
    char v55 = v22;
    uint64_t v46 = v21;
    swift_retain();
    uint64_t v45 = v20;
    uint64_t v23 = sub_1C8CAD540(v20, v11, v9, v11);
    if (v2) {
      return swift_release();
    }
    char v29 = v24;
    uint64_t v44 = v23;
    uint64_t result = swift_release();
    if ((v29 & 1) == 0)
    {
      uint64_t v30 = *v9;
      if (*v9 != v11)
      {
        if (*(unsigned char *)(v45 + v30) == 34)
        {
          *uint64_t v9 = v30 + 1;
          return result;
        }
        goto LABEL_23;
      }
LABEL_8:
      sub_1C8CAC5B0();
      swift_allocError();
      long long v18 = xmmword_1C8D8AD20;
LABEL_9:
      *BOOL v17 = v18;
      return swift_willThrow();
    }
    *(void *)(v3 + 16) = v10;
    uint64_t v35 = sub_1C8CADB68();
    uint64_t v36 = v34;
    if (v35 == (char *)5136718 && v34 == 0xE300000000000000
      || (sub_1C8D887C0() & 1) != 0
      || v35 == (char *)6712905 && v36 == 0xE300000000000000
      || (sub_1C8D887C0() & 1) != 0
      || v35 == (char *)1718503725 && v36 == 0xE400000000000000
      || (sub_1C8D887C0() & 1) != 0
      || v35 == (char *)0x7974696E69666E49 && v36 == 0xE800000000000000
      || (sub_1C8D887C0() & 1) != 0
      || v35 == (char *)0x74696E69666E492DLL && v36 == 0xE900000000000079
      || (sub_1C8D887C0() & 1) != 0)
    {
      return swift_bridgeObjectRelease();
    }
    sub_1C8D88330();
    uint64_t v37 = sub_1C8D882F0();
    unint64_t v39 = v38;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    if (v39 >> 60 != 15)
    {
      switch(v39 >> 62)
      {
        case 1uLL:
          if (v37 >> 32 >= (int)v37)
          {
            swift_retain();
            unint64_t v43 = sub_1C8CB0E5C((int)v37, v37 >> 32, v39 & 0x3FFFFFFFFFFFFFFFLL, v3);
            sub_1C8CAA9F0(v37, v39);
            uint64_t result = sub_1C8CAA9F0(v37, v39);
            if ((v43 & 0x100000000) == 0) {
              return result;
            }
LABEL_23:
            sub_1C8CAC5B0();
            swift_allocError();
            long long v18 = xmmword_1C8D8AD40;
            goto LABEL_9;
          }
          __break(1u);
          break;
        case 2uLL:
          uint64_t v40 = *(void *)(v37 + 16);
          uint64_t v41 = *(void *)(v37 + 24);
          swift_retain();
          swift_retain();
          unint64_t v42 = sub_1C8CB0E5C(v40, v41, v39 & 0x3FFFFFFFFFFFFFFFLL, v3);
          swift_release();
          swift_release();
          uint64_t result = sub_1C8CAA9F0(v37, v39);
          if ((v42 & 0x100000000) == 0) {
            return result;
          }
          goto LABEL_23;
        case 3uLL:
          memset(v47, 0, 14);
          sub_1C8CAE924((uint64_t)v47, (uint64_t)v47, v3, (uint64_t)&v48);
          uint64_t result = sub_1C8CAA9F0(v37, v39);
          goto LABEL_50;
        default:
          v47[0] = v37;
          LOWORD(v47[1]) = v39;
          BYTE2(v47[1]) = BYTE2(v39);
          BYTE3(v47[1]) = BYTE3(v39);
          BYTE4(v47[1]) = BYTE4(v39);
          BYTE5(v47[1]) = BYTE5(v39);
          sub_1C8CAE924((uint64_t)v47, (uint64_t)v47 + BYTE6(v39), v3, (uint64_t)&v48);
          uint64_t result = sub_1C8CAA9F0(v37, v39);
LABEL_50:
          if ((v49 & 1) == 0) {
            return result;
          }
          goto LABEL_23;
      }
    }
    __break(1u);
    JUMPOUT(0x1C8CAE914);
  }
  uint64_t v25 = *(void *)(v0 + 24);
  char v26 = *(unsigned char *)(v0 + 48);
  uint64_t v56 = *(void *)v0;
  uint64_t v57 = v11;
  uint64_t v58 = v10;
  uint64_t v59 = v25;
  long long v60 = *(_OWORD *)(v0 + 32);
  char v61 = v26;
  swift_retain();
  char v27 = sub_1C8CAD540(v20, v11, v9, v11);
  if (v2) {
    return swift_release();
  }
  double v31 = *(double *)&v27;
  char v32 = v28;
  uint64_t result = swift_release();
  if (v32) {
    goto LABEL_23;
  }
  float v33 = v31;
  if ((~LODWORD(v33) & 0x7F800000) == 0) {
    goto LABEL_23;
  }
  return result;
}

uint64_t sub_1C8CAE924@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (!result) {
    goto LABEL_8;
  }
  uint64_t v6 = result;
  uint64_t v7 = a2 - result;
  if (a2 - result < 1) {
    goto LABEL_8;
  }
  uint64_t v16 = 0;
  long long v8 = *(_OWORD *)(a3 + 16);
  v14[0] = *(_OWORD *)a3;
  v14[1] = v8;
  v14[2] = *(_OWORD *)(a3 + 32);
  char v15 = *(unsigned char *)(a3 + 48);
  sub_1C8CB0FB4((uint64_t)v14);
  uint64_t v9 = sub_1C8CAD540(v6, v7, &v16, v7);
  if (v4) {
    return sub_1C8CB0FE0((uint64_t)v14);
  }
  double v11 = *(double *)&v9;
  char v12 = v10;
  uint64_t result = sub_1C8CB0FE0((uint64_t)v14);
  if ((v12 & 1) == 0 && v16 == v7 && (float v13 = v11, (~LODWORD(v13) & 0x7F800000) != 0))
  {
    *(float *)a4 = v13;
    *(unsigned char *)(a4 + 4) = 0;
  }
  else
  {
LABEL_8:
    *(_DWORD *)a4 = 0;
    *(unsigned char *)(a4 + 4) = 1;
  }
  return result;
}

uint64_t sub_1C8CAEA1C()
{
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  uint64_t v60 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1C8D88340();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  long long v8 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t *)(v0 + 16);
  uint64_t v10 = *(void *)(v0 + 16);
  uint64_t v11 = *(void *)(v0 + 8);
  if (v10 == v11) {
    goto LABEL_8;
  }
  uint64_t v12 = *(void *)v0;
  while (1)
  {
    unsigned int v13 = *(unsigned __int8 *)(v12 + v10);
    BOOL v14 = v13 > 0x20;
    uint64_t v15 = (1 << v13) & 0x100002600;
    if (v14 || v15 == 0) {
      break;
    }
    *uint64_t v9 = ++v10;
    if (v11 == v10) {
      goto LABEL_8;
    }
  }
  if (v11 == v10) {
    goto LABEL_8;
  }
  uint64_t v20 = *(void *)v0;
  if (*(unsigned char *)(*(void *)v0 + v10) != 34)
  {
    uint64_t v25 = *(void *)(v0 + 24);
    char v26 = *(unsigned char *)(v0 + 48);
    uint64_t v54 = *(void *)v0;
    uint64_t v55 = v11;
    uint64_t v56 = v10;
    uint64_t v57 = v25;
    long long v58 = *(_OWORD *)(v0 + 32);
    char v59 = v26;
    swift_retain();
    sub_1C8CAD540(v20, v11, v9, v11);
    if (v2) {
      return swift_release();
    }
    char v30 = v27;
    uint64_t result = swift_release();
    if (v30) {
      goto LABEL_51;
    }
    return result;
  }
  *(void *)(v0 + 16) = v10 + 1;
  uint64_t v21 = *(void *)(v0 + 24);
  char v22 = *(unsigned char *)(v0 + 48);
  uint64_t v48 = v20;
  uint64_t v49 = v11;
  uint64_t v50 = v10 + 1;
  uint64_t v51 = v21;
  long long v52 = *(_OWORD *)(v0 + 32);
  char v53 = v22;
  uint64_t v44 = v21;
  swift_retain();
  uint64_t v43 = v20;
  uint64_t v23 = sub_1C8CAD540(v20, v11, v9, v11);
  if (v2) {
    return swift_release();
  }
  char v28 = v24;
  v42[1] = v23;
  uint64_t result = swift_release();
  if ((v28 & 1) == 0)
  {
    uint64_t v29 = *v9;
    if (*v9 != v11)
    {
      if (*(unsigned char *)(v43 + v29) == 34)
      {
        *uint64_t v9 = v29 + 1;
        return result;
      }
      goto LABEL_51;
    }
LABEL_8:
    sub_1C8CAC5B0();
    swift_allocError();
    long long v18 = xmmword_1C8D8AD20;
LABEL_9:
    *BOOL v17 = v18;
    return swift_willThrow();
  }
  *(void *)(v3 + 16) = v10;
  char v32 = sub_1C8CADB68();
  uint64_t v33 = v31;
  if (v32 == (char *)5136718 && v31 == 0xE300000000000000
    || (sub_1C8D887C0() & 1) != 0
    || v32 == (char *)6712905 && v33 == 0xE300000000000000
    || (sub_1C8D887C0() & 1) != 0
    || v32 == (char *)1718503725 && v33 == 0xE400000000000000
    || (sub_1C8D887C0() & 1) != 0
    || v32 == (char *)0x7974696E69666E49 && v33 == 0xE800000000000000
    || (sub_1C8D887C0() & 1) != 0
    || v32 == (char *)0x74696E69666E492DLL && v33 == 0xE900000000000079
    || (sub_1C8D887C0() & 1) != 0)
  {
    return swift_bridgeObjectRelease();
  }
  sub_1C8D88330();
  uint64_t v34 = sub_1C8D882F0();
  unint64_t v36 = v35;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  if (v36 >> 60 == 15)
  {
LABEL_53:
    __break(1u);
    JUMPOUT(0x1C8CAF15CLL);
  }
  switch(v36 >> 62)
  {
    case 1uLL:
      if (v34 >> 32 < (int)v34)
      {
        __break(1u);
        goto LABEL_53;
      }
      swift_retain();
      sub_1C8CB0D9C((int)v34, v34 >> 32, v36 & 0x3FFFFFFFFFFFFFFFLL, v3, (uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_1C8CAD540);
      char v41 = v40;
      sub_1C8CAA9F0(v34, v36);
LABEL_50:
      uint64_t result = sub_1C8CAA9F0(v34, v36);
      if (v41)
      {
LABEL_51:
        sub_1C8CAC5B0();
        swift_allocError();
        long long v18 = xmmword_1C8D8AD40;
        goto LABEL_9;
      }
      return result;
    case 2uLL:
      uint64_t v37 = *(void *)(v34 + 16);
      uint64_t v38 = *(void *)(v34 + 24);
      swift_retain();
      swift_retain();
      sub_1C8CB0D9C(v37, v38, v36 & 0x3FFFFFFFFFFFFFFFLL, v3, (uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_1C8CAD540);
      char v41 = v39;
      swift_release();
      swift_release();
      goto LABEL_50;
    case 3uLL:
      memset(v45, 0, 14);
      sub_1C8CAF16C((uint64_t)v45, (uint64_t)v45, v3, (uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_1C8CAD540, (uint64_t)&v46);
      uint64_t result = sub_1C8CAA9F0(v34, v36);
      goto LABEL_48;
    default:
      v45[0] = v34;
      LOWORD(v45[1]) = v36;
      BYTE2(v45[1]) = BYTE2(v36);
      BYTE3(v45[1]) = BYTE3(v36);
      BYTE4(v45[1]) = BYTE4(v36);
      BYTE5(v45[1]) = BYTE5(v36);
      sub_1C8CAF16C((uint64_t)v45, (uint64_t)v45 + BYTE6(v36), v3, (uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_1C8CAD540, (uint64_t)&v46);
      uint64_t result = sub_1C8CAA9F0(v34, v36);
LABEL_48:
      if ((v47 & 1) == 0) {
        return result;
      }
      goto LABEL_51;
  }
}

uint64_t sub_1C8CAF16C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t, uint64_t *, uint64_t)@<X3>, uint64_t a5@<X8>)
{
  if (!result) {
    goto LABEL_8;
  }
  uint64_t v7 = result;
  uint64_t v8 = a2 - result;
  if (a2 - result < 1) {
    goto LABEL_8;
  }
  uint64_t v15 = 0;
  long long v10 = *(_OWORD *)(a3 + 16);
  v16[0] = *(_OWORD *)a3;
  v16[1] = v10;
  void v16[2] = *(_OWORD *)(a3 + 32);
  char v17 = *(unsigned char *)(a3 + 48);
  sub_1C8CB0FB4((uint64_t)v16);
  uint64_t v11 = a4(v7, v8, &v15, v8);
  if (v5) {
    return sub_1C8CB0FE0((uint64_t)v16);
  }
  uint64_t v13 = v11;
  char v14 = v12;
  uint64_t result = sub_1C8CB0FE0((uint64_t)v16);
  if ((v14 & 1) == 0 && v15 == v8)
  {
    *(void *)a5 = v13;
    *(unsigned char *)(a5 + 8) = 0;
  }
  else
  {
LABEL_8:
    *(void *)a5 = 0;
    *(unsigned char *)(a5 + 8) = 1;
  }
  return result;
}

uint64_t sub_1C8CAF254(uint64_t a1)
{
  uint64_t v2 = v1[2];
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
    uint64_t v6 = v1[2];
    if (v2 == v1[1]) {
      return 1;
    }
LABEL_5:
    if ((*(unsigned char *)(*v1 + v6) & 0xDFu) - 91 >= 0xFFFFFFE6)
    {
      uint64_t result = 0;
      v1[2] = v2;
      return result;
    }
    return 1;
  }
  uint64_t v4 = v1[1];
  if (v2 == v4) {
    return 0;
  }
  if (*(unsigned __int8 *)(*v1 + v2) != *(unsigned __int8 *)(a1 + 32)) {
    return 0;
  }
  uint64_t v6 = v3 + v2;
  uint64_t v7 = v2 + 1;
  uint64_t v8 = (unsigned __int8 *)(a1 + 33);
  uint64_t v9 = v3 - 1;
  while (v9)
  {
    if (v4 != v7)
    {
      int v10 = *v8++;
      int v11 = *(unsigned __int8 *)(*v1 + v7++);
      --v9;
      if (v11 == v10) {
        continue;
      }
    }
    return 0;
  }
  v1[2] = v6;
  if (v6 != v4) {
    goto LABEL_5;
  }
  return 1;
}

uint64_t sub_1C8CAF30C()
{
  uint64_t v2 = v0[1];
  uint64_t v1 = v0[2];
  if (v1 == v2) {
    return 0;
  }
  uint64_t v3 = *v0;
  while (1)
  {
    unsigned int v4 = *(unsigned __int8 *)(v3 + v1);
    BOOL v5 = v4 > 0x20;
    uint64_t v6 = (1 << v4) & 0x100002600;
    if (v5 || v6 == 0) {
      break;
    }
    v0[2] = ++v1;
    if (v2 == v1) {
      return 0;
    }
  }
  if (v2 == v1 || *(unsigned char *)(*v0 + v1) != 110) {
    return 0;
  }
  else {
    return sub_1C8CAF254((uint64_t)&unk_1F234F568);
  }
}

uint64_t sub_1C8CAF37C()
{
  uint64_t v2 = v0[1];
  uint64_t v1 = v0[2];
  if (v1 == v2) {
    goto LABEL_2;
  }
  uint64_t v4 = *v0;
  uint64_t v3 = 13;
  do
  {
    unsigned int v5 = *(unsigned __int8 *)(v4 + v1);
    BOOL v6 = v5 > 0x20;
    uint64_t v7 = (1 << v5) & 0x100002600;
    if (v6 || v7 == 0) {
      break;
    }
    v0[2] = ++v1;
  }
  while (v2 != v1);
  if (v2 == v1)
  {
LABEL_2:
    uint64_t v3 = 13;
  }
  else
  {
    int v12 = *(unsigned __int8 *)(*v0 + v1);
    if (v12 == 116)
    {
      if (sub_1C8CAF254((uint64_t)&unk_1F234F5B8))
      {
        char v10 = 1;
        return v10 & 1;
      }
    }
    else if (v12 == 102 && (sub_1C8CAF254((uint64_t)&unk_1F234F590) & 1) != 0)
    {
      char v10 = 0;
      return v10 & 1;
    }
    uint64_t v3 = 4;
  }
  sub_1C8CAC5B0();
  swift_allocError();
  *uint64_t v9 = 0;
  v9[1] = v3;
  swift_willThrow();
  return v10 & 1;
}

uint64_t sub_1C8CAF478()
{
  uint64_t v2 = v0[1];
  uint64_t v1 = v0[2];
  if (v1 == v2) {
    goto LABEL_2;
  }
  uint64_t v4 = *v0;
  uint64_t v3 = 13;
  do
  {
    unsigned int v5 = *(unsigned __int8 *)(v4 + v1);
    BOOL v6 = v5 > 0x20;
    uint64_t v7 = (1 << v5) & 0x100002600;
    if (v6 || v7 == 0) {
      break;
    }
    v0[2] = ++v1;
  }
  while (v2 != v1);
  if (v2 == v1)
  {
LABEL_2:
    uint64_t v3 = 13;
  }
  else if (*(unsigned char *)(*v0 + v1) == 34)
  {
    int v12 = sub_1C8CAD9C4();
    if (v13)
    {
      char v14 = v12;
      uint64_t v15 = v13;
      if (v12 == (char *)0x65736C6166 && v13 == 0xE500000000000000 || (sub_1C8D887C0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        char v10 = 0;
        return v10 & 1;
      }
      if (v14 == (char *)1702195828 && v15 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_23:
        char v10 = 1;
        return v10 & 1;
      }
      char v16 = sub_1C8D887C0();
      swift_bridgeObjectRelease();
      if (v16) {
        goto LABEL_23;
      }
    }
    uint64_t v3 = 4;
  }
  else
  {
    uint64_t v3 = 11;
  }
  sub_1C8CAC5B0();
  swift_allocError();
  *uint64_t v9 = 0;
  v9[1] = v3;
  swift_willThrow();
  return v10 & 1;
}

void sub_1C8CAF60C()
{
  uint64_t v2 = v0[1];
  uint64_t v1 = v0[2];
  if (v1 == v2) {
    goto LABEL_8;
  }
  uint64_t v3 = *v0;
  uint64_t v4 = v1 + 2;
  while (1)
  {
    unsigned int v5 = *(unsigned __int8 *)(v3 + v4 - 2);
    BOOL v6 = v5 > 0x20;
    uint64_t v7 = (1 << v5) & 0x100002600;
    if (v6 || v7 == 0) {
      break;
    }
    v0[2] = v4++ - 1;
    if (v4 - v2 == 2) {
      goto LABEL_8;
    }
  }
  if (v4 - v2 == 2) {
    goto LABEL_8;
  }
  uint64_t v10 = *v0;
  if (*(unsigned char *)(*v0 + v4 - 2) == 34)
  {
    v0[2] = v4 - 1;
    if (v4 - v2 == 1)
    {
LABEL_8:
      sub_1C8CAC5B0();
      swift_allocError();
      *uint64_t v9 = xmmword_1C8D8AD20;
      swift_willThrow();
      return;
    }
    uint64_t v11 = v4 - 2;
    int v12 = *(unsigned __int8 *)(v10 + v4 - 1);
    if (v12 == 92) {
      goto LABEL_23;
    }
    uint64_t v13 = v4 - 1;
    if (v12 != 34)
    {
      uint64_t v14 = v4;
      while (v2 != v14)
      {
        int v15 = *(unsigned __int8 *)(v10 + v14);
        if (v15 == 92) {
          goto LABEL_23;
        }
        ++v14;
        if (v15 == 34)
        {
          uint64_t v13 = v14 - 1;
          v0[2] = v13;
          goto LABEL_19;
        }
      }
      v0[2] = v2;
      goto LABEL_8;
    }
LABEL_19:
    if (v10)
    {
      if (!__OFSUB__(v13, v4 - 1))
      {
        uint64_t v11 = v13 + 1;
LABEL_23:
        v0[2] = v11;
        return;
      }
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t sub_1C8CAF78C(uint64_t a1)
{
  uint64_t v3 = i;
  uint64_t v4 = *(void *)(a1 + 24);
  sub_1C8CAF60C();
  if (v2) {
    return i;
  }
  uint64_t v8 = v5;
  uint64_t v9 = v6;
  for (uint64_t i = 13; ; uint64_t i = 13)
  {
    uint64_t v11 = *(void *)(v3 + 8);
    uint64_t v10 = *(void *)(v3 + 16);
    if (v7)
    {
      if (v10 == v11) {
        goto LABEL_77;
      }
      uint64_t v17 = *(void *)v3;
      while (1)
      {
        unsigned int v18 = *(unsigned __int8 *)(v17 + v10);
        BOOL v14 = v18 > 0x20;
        uint64_t v19 = (1 << v18) & 0x100002600;
        if (v14 || v19 == 0) {
          break;
        }
        *(void *)(v3 + 16) = ++v10;
        if (v11 == v10) {
          goto LABEL_77;
        }
      }
      if (v11 == v10) {
        goto LABEL_77;
      }
      uint64_t v29 = *(void *)v3;
      if (*(unsigned char *)(*(void *)v3 + v10) != 34 || (i = v3, char v30 = sub_1C8CAD9C4(), !v31))
      {
        uint64_t i = 5;
LABEL_77:
        sub_1C8CAC5B0();
        swift_allocError();
        *char v53 = 0;
        v53[1] = i;
        goto LABEL_78;
      }
      char v32 = (char *)v31;
      uint64_t v33 = *(void *)(v3 + 16);
      uint64_t v34 = MEMORY[0x1E4FBC860];
      if (v33 == v11) {
        goto LABEL_74;
      }
      while (1)
      {
        unsigned int v35 = *(unsigned __int8 *)(v29 + v33);
        if (v35 > 0x20 || ((1 << v35) & 0x100002600) == 0) {
          break;
        }
        *(void *)(v3 + 16) = ++v33;
        if (v11 == v33) {
          goto LABEL_74;
        }
      }
      if (v11 == v33)
      {
LABEL_74:
        sub_1C8CAC5B0();
        swift_allocError();
        *long long v52 = xmmword_1C8D8AD20;
LABEL_75:
        swift_willThrow();
        swift_bridgeObjectRelease();
        return i;
      }
      if (v35 != 58)
      {
        sub_1C8CAC5B0();
        swift_allocError();
        *uint64_t v63 = 0;
        v63[1] = 0;
        goto LABEL_75;
      }
      *(void *)(v3 + 16) = v33 + 1;
      if ((v31 & 0x1000000000000000) != 0)
      {
        char v41 = v30;
        uint64_t v50 = sub_1C8D88420();
        uint64_t v34 = MEMORY[0x1E4FBC860];
        uint64_t i = v50;
        if (!v50) {
          goto LABEL_56;
        }
      }
      else if ((v31 & 0x2000000000000000) != 0)
      {
        uint64_t i = HIBYTE(v31) & 0xF;
        char v41 = v30;
        if (!i) {
          goto LABEL_56;
        }
      }
      else
      {
        uint64_t i = (unint64_t)v30 & 0xFFFFFFFFFFFFLL;
        char v41 = v30;
        if (((unint64_t)v30 & 0xFFFFFFFFFFFFLL) == 0)
        {
LABEL_56:
          uint64_t v42 = v34;
LABEL_64:
          if (*(void *)(v4 + 16))
          {
            uint64_t i = v4;
            unint64_t v46 = sub_1C8CA5D58((unsigned __int8 *)(v42 + 32), *(unsigned __int8 **)(v42 + 16));
            if (v47)
            {
              uint64_t i = *(void *)(*(void *)(v4 + 56) + 8 * v46);
              swift_bridgeObjectRelease();
              swift_release();
              return i;
            }
          }
          swift_release();
          if ((*(unsigned char *)(v3 + 48) & 1) == 0)
          {
            sub_1C8CAC5B0();
            swift_allocError();
            *unsigned int v64 = v41;
            v64[1] = v32;
            goto LABEL_78;
          }
          swift_bridgeObjectRelease();
          goto LABEL_25;
        }
      }
      if (i < 1)
      {
        uint64_t v42 = v34;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2D08);
        uint64_t v42 = swift_allocObject();
        size_t v43 = _swift_stdlib_malloc_size((const void *)v42);
        *(void *)(v42 + 16) = i;
        *(void *)(v42 + 24) = 2 * v43 - 64;
      }
      swift_bridgeObjectRetain();
      uint64_t v44 = sub_1C8D88690();
      if (v45) {
        goto LABEL_93;
      }
      if (v44 != i)
      {
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
        goto LABEL_94;
      }
      swift_bridgeObjectRelease();
      goto LABEL_64;
    }
    if (v10 == v11) {
      goto LABEL_73;
    }
    uint64_t v12 = *(void *)v3;
    while (1)
    {
      unsigned int v13 = *(unsigned __int8 *)(v12 + v10);
      BOOL v14 = v13 > 0x20;
      uint64_t v15 = (1 << v13) & 0x100002600;
      if (v14 || v15 == 0) {
        break;
      }
      *(void *)(v3 + 16) = ++v10;
      if (v11 == v10) {
        goto LABEL_73;
      }
    }
    if (v11 == v10)
    {
LABEL_73:
      sub_1C8CAC5B0();
      swift_allocError();
      _OWORD *v51 = xmmword_1C8D8AD20;
      goto LABEL_78;
    }
    if (*(unsigned char *)(*(void *)v3 + v10) != 58) {
      goto LABEL_80;
    }
    *(void *)(v3 + 16) = v10 + 1;
    if (*(void *)(v4 + 16))
    {
      unint64_t v21 = sub_1C8CA5D58(v8, v9);
      if (v22) {
        return *(void *)(*(void *)(v4 + 56) + 8 * v21);
      }
    }
    if ((*(unsigned char *)(v3 + 48) & 1) == 0)
    {
      if (v8)
      {
        uint64_t v56 = sub_1C8CA96A4((char *)v8, (uint64_t)v9);
        if (v57)
        {
          uint64_t i = (uint64_t)v56;
          uint64_t v58 = v57;
          sub_1C8CAC5B0();
          swift_allocError();
          *char v59 = i;
          v59[1] = v58;
          goto LABEL_78;
        }
        goto LABEL_95;
      }
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
      goto LABEL_96;
    }
LABEL_25:
    uint64_t i = v3;
    sub_1C8CAFE14();
    uint64_t v24 = *(void *)(v3 + 8);
    uint64_t v23 = *(void *)(v3 + 16);
    if (v23 == v24) {
      goto LABEL_73;
    }
    uint64_t v25 = *(void *)v3;
    while (1)
    {
      unsigned int v26 = *(unsigned __int8 *)(v25 + v23);
      BOOL v14 = v26 > 0x20;
      uint64_t v27 = (1 << v26) & 0x100002600;
      if (v14 || v27 == 0) {
        break;
      }
      *(void *)(v3 + 16) = ++v23;
      if (v24 == v23) {
        goto LABEL_73;
      }
    }
    if (v24 == v23) {
      goto LABEL_73;
    }
    uint64_t v37 = *(void *)v3;
    if (*(unsigned char *)(*(void *)v3 + v23) == 125) {
      break;
    }
    while (1)
    {
      unsigned int v38 = *(unsigned __int8 *)(v37 + v23);
      BOOL v14 = v38 > 0x20;
      uint64_t v39 = (1 << v38) & 0x100002600;
      if (v14 || v39 == 0) {
        break;
      }
      *(void *)(v3 + 16) = ++v23;
      if (v24 == v23) {
        goto LABEL_73;
      }
    }
    if (v24 == v23) {
      goto LABEL_73;
    }
    if (*(unsigned char *)(*(void *)v3 + v23) != 44)
    {
LABEL_80:
      sub_1C8CAC5B0();
      swift_allocError();
      *uint64_t v55 = 0;
      v55[1] = 0;
LABEL_78:
      swift_willThrow();
      return i;
    }
    *(void *)(v3 + 16) = v23 + 1;
    sub_1C8CAF60C();
    uint64_t v8 = v48;
    uint64_t v9 = v49;
  }
  *(void *)(v3 + 16) = v23 + 1;
  uint64_t v60 = *(void *)(v3 + 40);
  BOOL v61 = __OFADD__(v60, 1);
  uint64_t v62 = v60 + 1;
  if (v61) {
    goto LABEL_92;
  }
  *(void *)(v3 + 40) = v62;
  if (*(void *)(v3 + 32) >= v62) {
    return 0;
  }
LABEL_96:
  uint64_t result = sub_1C8D88750();
  __break(1u);
  return result;
}

uint64_t sub_1C8CAFD2C(uint64_t result)
{
  uint64_t v3 = v1[1];
  uint64_t v2 = v1[2];
  if (v2 == v3) {
    goto LABEL_8;
  }
  uint64_t v4 = *v1;
  while (1)
  {
    unsigned int v5 = *(unsigned __int8 *)(v4 + v2);
    BOOL v6 = v5 > 0x20;
    uint64_t v7 = (1 << v5) & 0x100002600;
    if (v6 || v7 == 0) {
      break;
    }
    v1[2] = ++v2;
    if (v3 == v2) {
      goto LABEL_8;
    }
  }
  if (v3 == v2)
  {
LABEL_8:
    sub_1C8CAC5B0();
    swift_allocError();
    *uint64_t v9 = xmmword_1C8D8AD20;
    return swift_willThrow();
  }
  if (*(unsigned __int8 *)(*v1 + v2) != result)
  {
    sub_1C8CAC5B0();
    swift_allocError();
    *uint64_t v10 = 0;
    v10[1] = 0;
    return swift_willThrow();
  }
  v1[2] = v2 + 1;
  return result;
}

void sub_1C8CAFE14()
{
  uint64_t v2 = v0[1];
  uint64_t v1 = v0[2];
  if (v1 != v2)
  {
    uint64_t v3 = *v0;
    while (1)
    {
      unsigned int v4 = *(unsigned __int8 *)(v3 + v1);
      BOOL v5 = v4 > 0x20;
      uint64_t v6 = (1 << v4) & 0x100002600;
      if (v5 || v6 == 0) {
        break;
      }
      v0[2] = ++v1;
      if (v2 == v1) {
        goto LABEL_8;
      }
    }
    if (v2 != v1)
    {
      int v9 = *(unsigned __int8 *)(*v0 + v1);
      switch(v9)
      {
        case '[':
          sub_1C8CB08B0();
          return;
        case '\\':
        case ']':
        case '^':
        case '_':
        case 'a':
        case 'b':
        case 'c':
        case 'd':
        case 'e':
        case 'g':
        case 'h':
        case 'i':
        case 'j':
        case 'k':
        case 'l':
        case 'm':
        case 'o':
        case 'p':
        case 'q':
        case 'r':
        case 's':
        case 'u':
        case 'v':
        case 'w':
        case 'x':
        case 'y':
        case 'z':
          goto LABEL_14;
        case 'f':
          uint64_t v10 = &unk_1F234F518;
          goto LABEL_18;
        case 'n':
          uint64_t v10 = &unk_1F234F4F0;
          goto LABEL_18;
        case 't':
          uint64_t v10 = &unk_1F234F540;
LABEL_18:
          if (sub_1C8CAF254((uint64_t)v10)) {
            return;
          }
          break;
        case '{':
          sub_1C8CB05E8();
          return;
        default:
          if (v9 == 34) {
            sub_1C8CB0510();
          }
          else {
LABEL_14:
          }
            sub_1C8CAEA1C();
          return;
      }
    }
  }
LABEL_8:
  sub_1C8CAC5B0();
  swift_allocError();
  *uint64_t v8 = xmmword_1C8D8AD20;
  swift_willThrow();
}

uint64_t sub_1C8CAFFD8()
{
  uint64_t v2 = v0[1];
  uint64_t v1 = v0[2];
  if (v1 == v2) {
    return 0;
  }
  uint64_t v3 = *v0;
  while (1)
  {
    unsigned int v4 = *(unsigned __int8 *)(v3 + v1);
    BOOL v5 = v4 > 0x20;
    uint64_t v6 = (1 << v4) & 0x100002600;
    if (v5 || v6 == 0) {
      break;
    }
    v0[2] = ++v1;
    if (v2 == v1) {
      return 0;
    }
  }
  if (v2 == v1 || *(unsigned char *)(*v0 + v1) != 125) {
    return 0;
  }
  v0[2] = v1 + 1;
  uint64_t v9 = v0[5];
  BOOL v10 = __OFADD__(v9, 1);
  uint64_t v11 = v9 + 1;
  if (v10)
  {
    __break(1u);
  }
  else
  {
    v0[5] = v11;
    if (v0[4] >= v11) {
      return 1;
    }
  }
  uint64_t result = sub_1C8D88750();
  __break(1u);
  return result;
}

void sub_1C8CB00D0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v37 = a3;
  uint64_t v7 = sub_1C8D88620();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v7, v9);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v10, v13);
  char v16 = (char *)&v36 - v15;
  MEMORY[0x1F4188790](v14, v17);
  uint64_t v19 = (char *)&v36 - v18;
  uint64_t v21 = v3[1];
  uint64_t v20 = v3[2];
  if (v20 == v21) {
    goto LABEL_8;
  }
  uint64_t v22 = *v3;
  while (1)
  {
    unsigned int v23 = *(unsigned __int8 *)(v22 + v20);
    BOOL v24 = v23 > 0x20;
    uint64_t v25 = (1 << v23) & 0x100002600;
    if (v24 || v25 == 0) {
      break;
    }
    v3[2] = ++v20;
    if (v21 == v20) {
      goto LABEL_8;
    }
  }
  if (v21 == v20)
  {
LABEL_8:
    sub_1C8CAC5B0();
    swift_allocError();
    long long v28 = xmmword_1C8D8AD20;
LABEL_9:
    *uint64_t v27 = v28;
    swift_willThrow();
    return;
  }
  if (*(unsigned char *)(*v3 + v20) == 34)
  {
    sub_1C8CAF60C();
    if (!v4)
    {
      if (v31)
      {
        uint64_t v34 = sub_1C8CADB68();
        sub_1C8CB4FCC((uint64_t)v34, v35, a1, a2, (uint64_t)v16);
        uint64_t v32 = *(void *)(a1 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v16, 1, a1) == 1)
        {
          (*(void (**)(char *, uint64_t))(v8 + 8))(v16, v7);
          goto LABEL_20;
        }
        uint64_t v12 = v16;
      }
      else
      {
        sub_1C8CB4D28(v29, v30, a1, a2, (uint64_t)v19);
        uint64_t v32 = *(void *)(a1 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v19, 1, a1) == 1)
        {
          (*(void (**)(char *, uint64_t))(v8 + 8))(v19, v7);
LABEL_20:
          sub_1C8CAC5B0();
          swift_allocError();
          long long v28 = xmmword_1C8D8AD60;
          goto LABEL_9;
        }
        uint64_t v12 = v19;
      }
      goto LABEL_25;
    }
  }
  else
  {
    uint64_t v33 = sub_1C8CADCA4((uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_1C8CAD888, (uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t))sub_1C8CAD888);
    if (!v4)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(a2 + 32))(v33, a1, a2);
      uint64_t v32 = *(void *)(a1 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v12, 1, a1) == 1)
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
        goto LABEL_20;
      }
LABEL_25:
      (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v37, v12, a1);
    }
  }
}

uint64_t sub_1C8CB049C()
{
  uint64_t v2 = v0[1];
  uint64_t v1 = v0[2];
  if (v1 == v2) {
    return 0;
  }
  uint64_t v3 = *v0;
  while (1)
  {
    unsigned int v4 = *(unsigned __int8 *)(v3 + v1);
    BOOL v5 = v4 > 0x20;
    uint64_t v6 = (1 << v4) & 0x100002600;
    if (v5 || v6 == 0) {
      break;
    }
    v0[2] = ++v1;
    if (v2 == v1) {
      return 0;
    }
  }
  if (v2 == v1 || *(unsigned char *)(*v0 + v1) != 93) {
    return 0;
  }
  v0[2] = v1 + 1;
  return 1;
}

void sub_1C8CB0510()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[2];
  if (*(unsigned char *)(*v0 + v2) != 34)
  {
    uint64_t v7 = 5;
LABEL_14:
    sub_1C8CAC5B0();
    swift_allocError();
    *uint64_t v8 = 0;
    v8[1] = v7;
    swift_willThrow();
    return;
  }
  uint64_t v3 = v2 + 1;
  v0[2] = v2 + 1;
  uint64_t v4 = v0[1];
  if (v3 == v4)
  {
LABEL_13:
    uint64_t v7 = 13;
    goto LABEL_14;
  }
  int v5 = *(unsigned __int8 *)(v1 + v3);
  if (v5 != 34)
  {
    while (1)
    {
      uint64_t v6 = v3 + 1;
      if (v5 == 92)
      {
        if (v6 == v4) {
          break;
        }
        uint64_t v6 = v3 + 2;
      }
      if (v6 == v4) {
        break;
      }
      int v5 = *(unsigned __int8 *)(v1 + v6);
      uint64_t v3 = v6;
      if (v5 == 34) {
        goto LABEL_10;
      }
    }
    v0[2] = v4;
    goto LABEL_13;
  }
  uint64_t v6 = v3;
LABEL_10:
  v0[2] = v6 + 1;
}

void sub_1C8CB05E8()
{
  sub_1C8CAFD2C(123);
  if (!v1)
  {
    uint64_t v2 = v0[5];
    BOOL v3 = __OFSUB__(v2, 1);
    uint64_t v4 = v2 - 1;
    if (v3)
    {
      __break(1u);
LABEL_49:
      v0[2] = v4 + 1;
      uint64_t v28 = v0[5];
      BOOL v3 = __OFADD__(v28, 1);
      uint64_t v29 = v28 + 1;
      if (!v3)
      {
        v0[5] = v29;
        if (v0[4] >= v29) {
          return;
        }
        sub_1C8D88750();
        __break(1u);
      }
      __break(1u);
      return;
    }
    v0[5] = v4;
    if (v4 < 0)
    {
      sub_1C8CAC5B0();
      swift_allocError();
      long long v26 = xmmword_1C8D8AD70;
LABEL_44:
      *uint64_t v25 = v26;
    }
    else
    {
      if (sub_1C8CAFFD8()) {
        return;
      }
      uint64_t v6 = v0[1];
      uint64_t v5 = v0[2];
      if (v5 != v6)
      {
LABEL_6:
        uint64_t v7 = *v0;
        do
        {
          unsigned int v8 = *(unsigned __int8 *)(v7 + v5);
          BOOL v9 = v8 > 0x20;
          uint64_t v10 = (1 << v8) & 0x100002600;
          if (v9 || v10 == 0) {
            break;
          }
          v0[2] = ++v5;
        }
        while (v6 != v5);
        goto LABEL_12;
      }
      while (1)
      {
LABEL_12:
        sub_1C8CB0510();
        uint64_t v12 = v0[2];
        if (v12 == v6) {
          goto LABEL_43;
        }
        uint64_t v13 = *v0;
        while (1)
        {
          unsigned int v14 = *(unsigned __int8 *)(v13 + v12);
          BOOL v9 = v14 > 0x20;
          uint64_t v15 = (1 << v14) & 0x100002600;
          if (v9 || v15 == 0) {
            break;
          }
          v0[2] = ++v12;
          if (v6 == v12) {
            goto LABEL_43;
          }
        }
        if (v6 == v12) {
          goto LABEL_43;
        }
        if (*(unsigned char *)(*v0 + v12) != 58) {
          break;
        }
        v0[2] = v12 + 1;
        sub_1C8CAFE14();
        uint64_t v6 = v0[1];
        uint64_t v4 = v0[2];
        if (v4 == v6) {
          goto LABEL_43;
        }
        uint64_t v17 = *v0;
        while (1)
        {
          unsigned int v18 = *(unsigned __int8 *)(v17 + v4);
          BOOL v9 = v18 > 0x20;
          uint64_t v19 = (1 << v18) & 0x100002600;
          if (v9 || v19 == 0) {
            break;
          }
          v0[2] = ++v4;
          if (v6 == v4) {
            goto LABEL_43;
          }
        }
        if (v6 == v4) {
          goto LABEL_43;
        }
        uint64_t v21 = *v0;
        if (*(unsigned char *)(*v0 + v4) == 125) {
          goto LABEL_49;
        }
        while (1)
        {
          unsigned int v22 = *(unsigned __int8 *)(v21 + v4);
          BOOL v9 = v22 > 0x20;
          uint64_t v23 = (1 << v22) & 0x100002600;
          if (v9 || v23 == 0) {
            break;
          }
          v0[2] = ++v4;
          if (v6 == v4) {
            goto LABEL_43;
          }
        }
        if (v6 == v4)
        {
LABEL_43:
          sub_1C8CAC5B0();
          swift_allocError();
          long long v26 = xmmword_1C8D8AD20;
          goto LABEL_44;
        }
        if (*(unsigned char *)(*v0 + v4) != 44) {
          break;
        }
        uint64_t v5 = v4 + 1;
        v0[2] = v5;
        if (v5 != v6) {
          goto LABEL_6;
        }
      }
      sub_1C8CAC5B0();
      swift_allocError();
      *uint64_t v27 = 0;
      v27[1] = 0;
    }
    swift_willThrow();
  }
}

uint64_t sub_1C8CB08B0()
{
  uint64_t result = sub_1C8CAFD2C(91);
  if (!v1)
  {
    uint64_t v4 = v0[1];
    uint64_t v3 = v0[2];
    if (v3 == v4) {
      goto LABEL_9;
    }
    uint64_t v5 = *v0;
    while (1)
    {
      unsigned int v6 = *(unsigned __int8 *)(v5 + v3);
      BOOL v7 = v6 > 0x20;
      uint64_t v8 = (1 << v6) & 0x100002600;
      if (v7 || v8 == 0) {
        break;
      }
      v0[2] = ++v3;
      if (v4 == v3) {
        goto LABEL_9;
      }
    }
    if (v4 == v3 || *(unsigned char *)(*v0 + v3) != 93)
    {
LABEL_9:
      for (uint64_t result = sub_1C8CAFE14(result); ; uint64_t result = sub_1C8CAFE14(result))
      {
        uint64_t v10 = v0[1];
        uint64_t v3 = v0[2];
        if (v3 == v10) {
          goto LABEL_29;
        }
        uint64_t v11 = *v0;
        while (1)
        {
          unsigned int v12 = *(unsigned __int8 *)(v11 + v3);
          BOOL v7 = v12 > 0x20;
          uint64_t v13 = (1 << v12) & 0x100002600;
          if (v7 || v13 == 0) {
            break;
          }
          v0[2] = ++v3;
          if (v10 == v3) {
            goto LABEL_29;
          }
        }
        if (v10 == v3) {
          goto LABEL_29;
        }
        uint64_t v15 = *v0;
        if (*(unsigned char *)(*v0 + v3) == 93) {
          goto LABEL_34;
        }
        while (1)
        {
          unsigned int v16 = *(unsigned __int8 *)(v15 + v3);
          BOOL v7 = v16 > 0x20;
          uint64_t v17 = (1 << v16) & 0x100002600;
          if (v7 || v17 == 0) {
            break;
          }
          v0[2] = ++v3;
          if (v10 == v3) {
            goto LABEL_29;
          }
        }
        if (v10 == v3)
        {
LABEL_29:
          sub_1C8CAC5B0();
          swift_allocError();
          *uint64_t v19 = xmmword_1C8D8AD20;
          return swift_willThrow();
        }
        if (*(unsigned char *)(*v0 + v3) != 44) {
          break;
        }
        v0[2] = v3 + 1;
      }
      sub_1C8CAC5B0();
      swift_allocError();
      void *v20 = 0;
      v20[1] = 0;
      return swift_willThrow();
    }
    else
    {
LABEL_34:
      v0[2] = v3 + 1;
    }
  }
  return result;
}

uint64_t sub_1C8CB0A7C(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  unint64_t v4 = a1[1];
  switch(v4 >> 62)
  {
    case 1uLL:
      *(void *)&long long v23 = *a1;
      *((void *)&v23 + 1) = v4 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)a1 = xmmword_1C8D8AD80;
      uint64_t result = sub_1C8CB0CDC((int *)&v23, a2, a3, a4);
      uint64_t v9 = v23;
      unint64_t v10 = *((void *)&v23 + 1) | 0x4000000000000000;
      goto LABEL_4;
    case 2uLL:
      *(void *)&long long v23 = *a1;
      *((void *)&v23 + 1) = v4 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)a1 = xmmword_1C8D8AD80;
      sub_1C8D88160();
      uint64_t v11 = *((void *)&v23 + 1);
      uint64_t v12 = *(void *)(v23 + 16);
      uint64_t v22 = *(void *)(v23 + 24);
      uint64_t v13 = sub_1C8D88110();
      if (!v13)
      {
        __break(1u);
        JUMPOUT(0x1C8CB0CCCLL);
      }
      uint64_t v14 = v13;
      uint64_t v15 = sub_1C8D88140();
      uint64_t v16 = v12 - v15;
      if (__OFSUB__(v12, v15))
      {
        __break(1u);
LABEL_15:
        __break(1u);
      }
      BOOL v17 = __OFSUB__(v22, v12);
      uint64_t v18 = v22 - v12;
      if (v17) {
        goto LABEL_15;
      }
      uint64_t v19 = sub_1C8D88130();
      if (v19 >= v18) {
        uint64_t v20 = v18;
      }
      else {
        uint64_t v20 = v19;
      }
      uint64_t result = sub_1C8CAC604(v14 + v16, v14 + v16 + v20, a2, a3, a4);
      *a1 = v23;
      a1[1] = v11 | 0x8000000000000000;
      return result;
    case 3uLL:
      *(void *)((char *)&v23 + 7) = 0;
      *(void *)&long long v23 = 0;
      return sub_1C8CAC604((uint64_t)&v23, (uint64_t)&v23, a2, a3, a4);
    default:
      *(void *)&long long v23 = *a1;
      WORD4(v23) = v4;
      BYTE10(v23) = BYTE2(v4);
      BYTE11(v23) = BYTE3(v4);
      BYTE12(v23) = BYTE4(v4);
      BYTE13(v23) = BYTE5(v4);
      BYTE14(v23) = BYTE6(v4);
      uint64_t result = sub_1C8CAC604((uint64_t)&v23, (uint64_t)&v23 + BYTE6(v4), a2, a3, a4);
      uint64_t v9 = v23;
      unint64_t v10 = DWORD2(v23) | ((unint64_t)BYTE12(v23) << 32) | ((unint64_t)BYTE13(v23) << 40) | ((unint64_t)BYTE14(v23) << 48);
LABEL_4:
      *a1 = v9;
      a1[1] = v10;
      return result;
  }
}

uint64_t sub_1C8CB0CDC(int *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t result = sub_1C8D88170();
  uint64_t v9 = *a1;
  uint64_t v10 = a1[1];
  if ((int)v10 < (int)v9)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t result = sub_1C8D88110();
  if (!result)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v11 = result;
  uint64_t result = sub_1C8D88140();
  uint64_t v12 = v9 - result;
  if (__OFSUB__(v9, result))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v13 = v10 - v9;
  uint64_t v14 = sub_1C8D88130();
  if (v14 >= v13) {
    uint64_t v15 = v13;
  }
  else {
    uint64_t v15 = v14;
  }
  return sub_1C8CAC604(v11 + v12, v11 + v12 + v15, a2, a3, a4);
}

uint64_t sub_1C8CB0D9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t *, uint64_t))
{
  uint64_t result = sub_1C8D88110();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_1C8D88140();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  BOOL v12 = __OFSUB__(a2, a1);
  uint64_t v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v14 = sub_1C8D88130();
  if (v14 >= v13) {
    uint64_t v15 = v13;
  }
  else {
    uint64_t v15 = v14;
  }
  uint64_t v16 = v11 + v15;
  if (v11) {
    uint64_t v17 = v16;
  }
  else {
    uint64_t v17 = 0;
  }
  uint64_t result = sub_1C8CAF16C(v11, v17, a4, a5, (uint64_t)&v18);
  if (!v5) {
    return v18;
  }
  return result;
}

unint64_t sub_1C8CB0E5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t result = sub_1C8D88110();
  uint64_t v9 = result;
  if (result)
  {
    unint64_t result = sub_1C8D88140();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v9 += a1 - result;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v12 = sub_1C8D88130();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  uint64_t v14 = v9 + v13;
  if (v9) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = 0;
  }
  unint64_t result = sub_1C8CAE924(v9, v15, a4, (uint64_t)&v16);
  if (!v4) {
    return v16 | ((unint64_t)v17 << 32);
  }
  return result;
}

uint64_t sub_1C8CB0F18(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_9;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      uint64_t v3 = sub_1C8D0D9F4(v2, 0);
      uint64_t result = sub_1C8D88690();
      if (v5) {
        break;
      }
      if (result == v2) {
        return (uint64_t)v3;
      }
      __break(1u);
LABEL_9:
      uint64_t v2 = sub_1C8D88420();
      if (!v2) {
        return MEMORY[0x1E4FBC860];
      }
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1C8CB0FB4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C8CB0FE0(uint64_t a1)
{
  return a1;
}

uint64_t destroy for JSONScanner()
{
  return swift_release();
}

uint64_t initializeWithCopy for JSONScanner(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for JSONScanner(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for JSONScanner(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for JSONScanner(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JSONScanner(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JSONScanner()
{
  return &type metadata for JSONScanner;
}

uint64_t (*sub_1C8CB11EC(unint64_t a1, unint64_t a2))()
{
  uint64_t v4 = (char *)MEMORY[0x1E4FBC860];
  v90 = (char *)MEMORY[0x1E4FBC860];
  if ((a2 & 0x2000000000000000) != 0) {
    unint64_t v5 = HIBYTE(a2) & 0xF;
  }
  else {
    unint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
  }
  swift_bridgeObjectRetain();
  if (!v5) {
    goto LABEL_194;
  }
  uint64_t v6 = 4 * v5;
  uint64_t v7 = (a1 >> 59) & 1;
  if ((a2 & 0x1000000000000000) == 0) {
    LOBYTE(v7) = 1;
  }
  uint64_t v8 = 4 << v7;
  unint64_t v9 = 15;
  do
  {
    unint64_t v12 = v9 & 0xC;
    unint64_t v13 = v9;
    if (v12 == v8) {
      unint64_t v13 = sub_1C8D62E14(v9, a1, a2);
    }
    unint64_t v14 = v13 >> 16;
    if (v13 >> 16 >= v5)
    {
      __break(1u);
LABEL_198:
      __break(1u);
LABEL_199:
      __break(1u);
LABEL_200:
      __break(1u);
LABEL_201:
      __break(1u);
LABEL_202:
      __break(1u);
LABEL_203:
      __break(1u);
LABEL_204:
      __break(1u);
LABEL_205:
      __break(1u);
LABEL_206:
      __break(1u);
LABEL_207:
      __break(1u);
LABEL_208:
      __break(1u);
LABEL_209:
      __break(1u);
      JUMPOUT(0x1C8CB1F3CLL);
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
      char v16 = sub_1C8D88460();
      if (v12 != v8) {
        goto LABEL_22;
      }
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      unint64_t v88 = a1;
      uint64_t v89 = a2 & 0xFFFFFFFFFFFFFFLL;
      char v16 = *((unsigned char *)&v88 + v14);
      if (v12 != v8) {
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v15 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
      if ((a1 & 0x1000000000000000) == 0) {
        uint64_t v15 = sub_1C8D886C0();
      }
      char v16 = *(unsigned char *)(v15 + v14);
      if (v12 != v8)
      {
LABEL_22:
        if ((a2 & 0x1000000000000000) == 0) {
          goto LABEL_23;
        }
        goto LABEL_26;
      }
    }
    unint64_t v9 = sub_1C8D62E14(v9, a1, a2);
    if ((a2 & 0x1000000000000000) == 0)
    {
LABEL_23:
      unint64_t v9 = (v9 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_28;
    }
LABEL_26:
    if (v5 <= v9 >> 16) {
      goto LABEL_198;
    }
    unint64_t v9 = sub_1C8D88430();
LABEL_28:
    if (v16 != 92)
    {
      uint64_t v22 = v90;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v22 = sub_1C8D5EB50(0, *((void *)v22 + 2) + 1, 1, v22);
      }
      unint64_t v24 = *((void *)v22 + 2);
      unint64_t v23 = *((void *)v22 + 3);
      if (v24 >= v23 >> 1) {
        uint64_t v22 = sub_1C8D5EB50((char *)(v23 > 1), v24 + 1, 1, v22);
      }
      *((void *)v22 + 2) = v24 + 1;
      v22[v24 + 32] = v16;
      v90 = v22;
      continue;
    }
    if (v6 == v9 >> 14) {
      goto LABEL_195;
    }
    unint64_t v17 = v9 & 0xC;
    unint64_t v18 = v9;
    if (v17 == v8) {
      unint64_t v18 = sub_1C8D62E14(v9, a1, a2);
    }
    unint64_t v19 = v18 >> 16;
    if (v18 >> 16 >= v5) {
      goto LABEL_199;
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
      char v21 = sub_1C8D88460();
      if (v17 != v8) {
        goto LABEL_45;
      }
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      unint64_t v88 = a1;
      uint64_t v89 = a2 & 0xFFFFFFFFFFFFFFLL;
      char v21 = *((unsigned char *)&v88 + v19);
      if (v17 != v8) {
        goto LABEL_45;
      }
    }
    else
    {
      uint64_t v20 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
      if ((a1 & 0x1000000000000000) == 0) {
        uint64_t v20 = sub_1C8D886C0();
      }
      char v21 = *(unsigned char *)(v20 + v19);
      if (v17 != v8)
      {
LABEL_45:
        if ((a2 & 0x1000000000000000) != 0) {
          goto LABEL_49;
        }
        goto LABEL_46;
      }
    }
    unint64_t v9 = sub_1C8D62E14(v9, a1, a2);
    if ((a2 & 0x1000000000000000) != 0)
    {
LABEL_49:
      if (v5 <= v9 >> 16) {
        goto LABEL_200;
      }
      unint64_t v25 = sub_1C8D88430();
      goto LABEL_51;
    }
LABEL_46:
    unint64_t v25 = (v9 & 0xFFFFFFFFFFFF0000) + 65540;
LABEL_51:
    if ((v21 - 56) >= 0xF8u)
    {
      char v29 = v21 - 48;
      if (v6 != v25 >> 14)
      {
        unint64_t v30 = v25;
        if ((v25 & 0xC) == v8) {
          unint64_t v30 = sub_1C8D62E14(v25, a1, a2);
        }
        unint64_t v31 = v30 >> 16;
        if (v30 >> 16 >= v5) {
          goto LABEL_201;
        }
        if ((a2 & 0x1000000000000000) != 0)
        {
          char v33 = sub_1C8D88460();
        }
        else if ((a2 & 0x2000000000000000) != 0)
        {
          unint64_t v88 = a1;
          uint64_t v89 = a2 & 0xFFFFFFFFFFFFFFLL;
          char v33 = *((unsigned char *)&v88 + v31);
        }
        else
        {
          uint64_t v32 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a1 & 0x1000000000000000) == 0) {
            uint64_t v32 = sub_1C8D886C0();
          }
          char v33 = *(unsigned char *)(v32 + v31);
        }
        unint64_t v34 = v25;
        if ((v25 & 0xC) == v8)
        {
          unint64_t v34 = sub_1C8D62E14(v25, a1, a2);
          if ((a2 & 0x1000000000000000) != 0) {
            goto LABEL_144;
          }
LABEL_71:
          unint64_t v9 = (v34 & 0xFFFFFFFFFFFF0000) + 65540;
        }
        else
        {
          if ((a2 & 0x1000000000000000) == 0) {
            goto LABEL_71;
          }
LABEL_144:
          if (v5 <= v34 >> 16) {
            goto LABEL_202;
          }
          unint64_t v9 = sub_1C8D88430();
        }
        if ((v33 - 56) >= 0xF8u)
        {
          char v64 = v33 - 48;
          if (v6 == v9 >> 14) {
            goto LABEL_170;
          }
          unint64_t v65 = v9;
          if ((v9 & 0xC) == v8) {
            unint64_t v65 = sub_1C8D62E14(v9, a1, a2);
          }
          unint64_t v66 = v65 >> 16;
          if (v65 >> 16 >= v5) {
            goto LABEL_203;
          }
          if ((a2 & 0x1000000000000000) != 0)
          {
            char v68 = sub_1C8D88460();
          }
          else if ((a2 & 0x2000000000000000) != 0)
          {
            unint64_t v88 = a1;
            uint64_t v89 = a2 & 0xFFFFFFFFFFFFFFLL;
            char v68 = *((unsigned char *)&v88 + v66);
          }
          else
          {
            uint64_t v67 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
            if ((a1 & 0x1000000000000000) == 0) {
              uint64_t v67 = sub_1C8D886C0();
            }
            char v68 = *(unsigned char *)(v67 + v66);
          }
          unint64_t v69 = v9;
          if ((v9 & 0xC) == v8)
          {
            unint64_t v69 = sub_1C8D62E14(v9, a1, a2);
            if ((a2 & 0x1000000000000000) != 0) {
              goto LABEL_167;
            }
LABEL_165:
            uint64_t v70 = (v69 & 0xFFFFFFFFFFFF0000) + 65540;
          }
          else
          {
            if ((a2 & 0x1000000000000000) == 0) {
              goto LABEL_165;
            }
LABEL_167:
            if (v5 <= v69 >> 16) {
              goto LABEL_205;
            }
            uint64_t v70 = sub_1C8D88430();
          }
          if ((v68 - 56) < 0xF8u)
          {
LABEL_170:
            v71 = v90;
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              v71 = sub_1C8D5EB50(0, *((void *)v71 + 2) + 1, 1, v71);
              v90 = v71;
            }
            unint64_t v73 = *((void *)v71 + 2);
            unint64_t v72 = *((void *)v71 + 3);
            if (v73 >= v72 >> 1) {
              v90 = sub_1C8D5EB50((char *)(v72 > 1), v73 + 1, 1, v71);
            }
            char v74 = v64 + 8 * v29;
            uint64_t v75 = v73;
          }
          else
          {
            if ((v21 - 48) > 3u) {
              goto LABEL_206;
            }
            unint64_t v9 = v70;
            char v76 = (v21 << 6) + 8 * v64 + v68 - 48;
            swift_bridgeObjectRetain();
            sub_1C8D5EAA8();
            v77 = (char *)*((void *)v90 + 2);
            sub_1C8D5EAF4(v77);
            uint64_t v75 = (uint64_t)v77;
            char v74 = v76;
          }
          uint64_t v78 = sub_1C8D5EB38(v75, v74);
          nullsub_1(v78, v79, v80);
          swift_bridgeObjectRelease();
          continue;
        }
      }
      long long v26 = v90;
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v26 = sub_1C8D5EB50(0, *((void *)v26 + 2) + 1, 1, v26);
      }
      unint64_t v63 = *((void *)v26 + 2);
      unint64_t v62 = *((void *)v26 + 3);
      if (v63 >= v62 >> 1) {
        long long v26 = sub_1C8D5EB50((char *)(v62 > 1), v63 + 1, 1, v26);
      }
      *((void *)v26 + 2) = v63 + 1;
      v26[v63 + 32] = v29;
      swift_bridgeObjectRelease();
LABEL_10:
      v90 = v26;
      unint64_t v9 = v25;
      continue;
    }
    switch(v21)
    {
      case '""':
      case '\'':
      case '?':
      case '\\':
        long long v26 = v90;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          long long v26 = sub_1C8D5EB50(0, *((void *)v26 + 2) + 1, 1, v26);
        }
        unint64_t v28 = *((void *)v26 + 2);
        unint64_t v27 = *((void *)v26 + 3);
        if (v28 >= v27 >> 1) {
          long long v26 = sub_1C8D5EB50((char *)(v27 > 1), v28 + 1, 1, v26);
        }
        *((void *)v26 + 2) = v28 + 1;
        v26[v28 + 32] = v21;
        goto LABEL_10;
      case 'a':
        long long v26 = v90;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          long long v26 = sub_1C8D5EB50(0, *((void *)v26 + 2) + 1, 1, v26);
        }
        unint64_t v36 = *((void *)v26 + 2);
        unint64_t v35 = *((void *)v26 + 3);
        if (v36 >= v35 >> 1) {
          long long v26 = sub_1C8D5EB50((char *)(v35 > 1), v36 + 1, 1, v26);
        }
        *((void *)v26 + 2) = v36 + 1;
        BOOL v10 = &v26[v36];
        char v11 = 7;
        goto LABEL_9;
      case 'b':
        long long v26 = v90;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          long long v26 = sub_1C8D5EB50(0, *((void *)v26 + 2) + 1, 1, v26);
        }
        unint64_t v38 = *((void *)v26 + 2);
        unint64_t v37 = *((void *)v26 + 3);
        if (v38 >= v37 >> 1) {
          long long v26 = sub_1C8D5EB50((char *)(v37 > 1), v38 + 1, 1, v26);
        }
        *((void *)v26 + 2) = v38 + 1;
        BOOL v10 = &v26[v38];
        char v11 = 8;
        goto LABEL_9;
      case 'f':
        long long v26 = v90;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          long long v26 = sub_1C8D5EB50(0, *((void *)v26 + 2) + 1, 1, v26);
        }
        unint64_t v40 = *((void *)v26 + 2);
        unint64_t v39 = *((void *)v26 + 3);
        if (v40 >= v39 >> 1) {
          long long v26 = sub_1C8D5EB50((char *)(v39 > 1), v40 + 1, 1, v26);
        }
        *((void *)v26 + 2) = v40 + 1;
        BOOL v10 = &v26[v40];
        char v11 = 12;
        goto LABEL_9;
      case 'n':
        long long v26 = v90;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          long long v26 = sub_1C8D5EB50(0, *((void *)v26 + 2) + 1, 1, v26);
        }
        unint64_t v42 = *((void *)v26 + 2);
        unint64_t v41 = *((void *)v26 + 3);
        if (v42 >= v41 >> 1) {
          long long v26 = sub_1C8D5EB50((char *)(v41 > 1), v42 + 1, 1, v26);
        }
        *((void *)v26 + 2) = v42 + 1;
        BOOL v10 = &v26[v42];
        char v11 = 10;
        goto LABEL_9;
      case 'r':
        long long v26 = v90;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          long long v26 = sub_1C8D5EB50(0, *((void *)v26 + 2) + 1, 1, v26);
        }
        unint64_t v44 = *((void *)v26 + 2);
        unint64_t v43 = *((void *)v26 + 3);
        if (v44 >= v43 >> 1) {
          long long v26 = sub_1C8D5EB50((char *)(v43 > 1), v44 + 1, 1, v26);
        }
        *((void *)v26 + 2) = v44 + 1;
        BOOL v10 = &v26[v44];
        char v11 = 13;
        goto LABEL_9;
      case 't':
        long long v26 = v90;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          long long v26 = sub_1C8D5EB50(0, *((void *)v26 + 2) + 1, 1, v26);
        }
        unint64_t v46 = *((void *)v26 + 2);
        unint64_t v45 = *((void *)v26 + 3);
        if (v46 >= v45 >> 1) {
          long long v26 = sub_1C8D5EB50((char *)(v45 > 1), v46 + 1, 1, v26);
        }
        *((void *)v26 + 2) = v46 + 1;
        BOOL v10 = &v26[v46];
        char v11 = 9;
        goto LABEL_9;
      case 'v':
        long long v26 = v90;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          long long v26 = sub_1C8D5EB50(0, *((void *)v26 + 2) + 1, 1, v26);
        }
        unint64_t v48 = *((void *)v26 + 2);
        unint64_t v47 = *((void *)v26 + 3);
        if (v48 >= v47 >> 1) {
          long long v26 = sub_1C8D5EB50((char *)(v47 > 1), v48 + 1, 1, v26);
        }
        *((void *)v26 + 2) = v48 + 1;
        BOOL v10 = &v26[v48];
        char v11 = 11;
LABEL_9:
        v10[32] = v11;
        goto LABEL_10;
      case 'x':
        if (v6 == v25 >> 14) {
          goto LABEL_195;
        }
        unint64_t v49 = v25 & 0xC;
        unint64_t v50 = v25;
        if (v49 == v8) {
          unint64_t v50 = sub_1C8D62E14(v25, a1, a2);
        }
        unint64_t v51 = v50 >> 16;
        if (v50 >> 16 >= v5) {
          goto LABEL_204;
        }
        if ((a2 & 0x1000000000000000) != 0)
        {
          char v53 = sub_1C8D88460();
          if (v49 != v8) {
            goto LABEL_117;
          }
        }
        else if ((a2 & 0x2000000000000000) != 0)
        {
          unint64_t v88 = a1;
          uint64_t v89 = a2 & 0xFFFFFFFFFFFFFFLL;
          char v53 = *((unsigned char *)&v88 + v51);
          if (v49 != v8) {
            goto LABEL_117;
          }
        }
        else
        {
          uint64_t v52 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a1 & 0x1000000000000000) == 0) {
            uint64_t v52 = sub_1C8D886C0();
          }
          char v53 = *(unsigned char *)(v52 + v51);
          if (v49 != v8)
          {
LABEL_117:
            if ((a2 & 0x1000000000000000) == 0) {
              goto LABEL_118;
            }
            goto LABEL_121;
          }
        }
        unint64_t v25 = sub_1C8D62E14(v25, a1, a2);
        if ((a2 & 0x1000000000000000) == 0)
        {
LABEL_118:
          unint64_t v9 = (v25 & 0xFFFFFFFFFFFF0000) + 65540;
          goto LABEL_123;
        }
LABEL_121:
        if (v5 <= v25 >> 16) {
          goto LABEL_207;
        }
        unint64_t v9 = sub_1C8D88430();
LABEL_123:
        if ((v53 - 58) > 0xF5u)
        {
          char v54 = -48;
        }
        else if ((v53 - 71) > 0xF9u)
        {
          char v54 = -55;
        }
        else
        {
          if ((v53 - 103) <= 0xF9u)
          {
LABEL_195:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return 0;
          }
          char v54 = -87;
        }
        char v55 = v53 + v54;
        if (v6 == v9 >> 14) {
          goto LABEL_188;
        }
        unint64_t v56 = v9;
        if ((v9 & 0xC) == v8) {
          unint64_t v56 = sub_1C8D62E14(v9, a1, a2);
        }
        unint64_t v57 = v56 >> 16;
        if (v56 >> 16 >= v5) {
          goto LABEL_208;
        }
        if ((a2 & 0x1000000000000000) != 0)
        {
          char v59 = sub_1C8D88460();
        }
        else if ((a2 & 0x2000000000000000) != 0)
        {
          unint64_t v88 = a1;
          uint64_t v89 = a2 & 0xFFFFFFFFFFFFFFLL;
          char v59 = *((unsigned char *)&v88 + v57);
        }
        else
        {
          uint64_t v58 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a1 & 0x1000000000000000) == 0) {
            uint64_t v58 = sub_1C8D886C0();
          }
          char v59 = *(unsigned char *)(v58 + v57);
        }
        unint64_t v60 = v9;
        if ((v9 & 0xC) == v8)
        {
          unint64_t v60 = sub_1C8D62E14(v9, a1, a2);
          if ((a2 & 0x1000000000000000) == 0)
          {
LABEL_142:
            uint64_t v61 = (v60 & 0xFFFFFFFFFFFF0000) + 65540;
            goto LABEL_181;
          }
        }
        else if ((a2 & 0x1000000000000000) == 0)
        {
          goto LABEL_142;
        }
        if (v5 <= v60 >> 16) {
          goto LABEL_209;
        }
        uint64_t v61 = sub_1C8D88430();
LABEL_181:
        if ((v59 - 58) > 0xF5u)
        {
          char v81 = -48;
        }
        else if ((v59 - 71) > 0xF9u)
        {
          char v81 = -55;
        }
        else
        {
          if ((v59 - 103) < 0xFAu) {
            goto LABEL_188;
          }
          char v81 = -87;
        }
        char v55 = v59 + v81 + 16 * v55;
        unint64_t v9 = v61;
LABEL_188:
        v82 = v90;
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          v82 = sub_1C8D5EB50(0, *((void *)v82 + 2) + 1, 1, v82);
        }
        unint64_t v84 = *((void *)v82 + 2);
        unint64_t v83 = *((void *)v82 + 3);
        if (v84 >= v83 >> 1) {
          v82 = sub_1C8D5EB50((char *)(v83 > 1), v84 + 1, 1, v82);
        }
        *((void *)v82 + 2) = v84 + 1;
        v82[v84 + 32] = v55;
        swift_bridgeObjectRelease();
        v90 = v82;
        break;
      default:
        goto LABEL_195;
    }
  }
  while (v6 != v9 >> 14);
  uint64_t v4 = v90;
LABEL_194:
  uint64_t v85 = *((void *)v4 + 2);
  swift_bridgeObjectRetain();
  v86 = sub_1C8CA96A4(v4 + 32, v85);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return v86;
}

void sub_1C8CB2098()
{
  uint64_t v1 = *(unsigned __int8 **)(v0 + 40);
  unint64_t v2 = *(unsigned __int8 **)(v0 + 48);
  while (v1 != v2)
  {
    uint64_t v3 = *v1;
    if (v3 > 0x23) {
      break;
    }
    if (((1 << v3) & 0x100002600) != 0)
    {
      *(void *)(v0 + 40) = ++v1;
    }
    else
    {
      if (v3 != 35) {
        return;
      }
      *(void *)(v0 + 40) = v1 + 1;
      if (v1 + 1 == v2) {
        return;
      }
      int v4 = v1[1];
      v1 += 2;
      *(void *)(v0 + 40) = v1;
      if (v4 != 10 && v4 != 13)
      {
        while (v1 != v2)
        {
          int v6 = *v1++;
          int v5 = v6;
          *(void *)(v0 + 40) = v1;
          if (v6 == 10 || v5 == 13) {
            goto LABEL_4;
          }
        }
        return;
      }
    }
LABEL_4:
    ;
  }
}

unsigned __int8 *sub_1C8CB2134()
{
  unint64_t v2 = *(unsigned __int8 **)(v0 + 40);
  uint64_t v1 = *(unsigned __int8 **)(v0 + 48);
  if (v2 != v1)
  {
    uint64_t v3 = *(unsigned __int8 **)(v0 + 40);
    do
    {
      int v4 = *v3;
      if ((v4 & 0xFFFFFFDF) - 91 <= 0xFFFFFFE5 && v4 != 95 && (v4 - 48) > 9) {
        break;
      }
      *(void *)(v0 + 40) = ++v3;
    }
    while (v3 != v1);
  }
  sub_1C8CB2098();
  return v2;
}

uint64_t (*sub_1C8CB21BC())()
{
  uint64_t v1 = *(char **)(v0 + 40);
  unint64_t v2 = *(char **)(v0 + 48);
  if (v1 == v2) {
    return 0;
  }
  if ((*v1 & 0xDFu) - 91 < 0xFFFFFFE6) {
    return 0;
  }
  *(void *)(v0 + 40) = v1 + 1;
  if (v1 + 1 == v2) {
    return 0;
  }
  uint64_t v3 = 1;
  while (1)
  {
    int v4 = v1[v3];
    BOOL v5 = (v4 - 58) > 0xFFFFFFF5 || (v4 & 0xFFFFFFDF) - 91 > 0xFFFFFFE5;
    if (!v5 && (v4 - 46) >= 2 && v4 != 95) {
      break;
    }
    *(void *)(v0 + 40) = &v1[++v3];
    if (&v1[v3] == v2) {
      return 0;
    }
  }
  if (v4 != 93) {
    return 0;
  }
  else {
    return sub_1C8CA96A4(v1, v3);
  }
}

uint64_t sub_1C8CB2270(unsigned __int8 a1, unsigned char *a2)
{
  uint64_t v3 = *(unsigned __int8 **)(v2 + 40);
  *a2 = 0;
  int v4 = *(unsigned __int8 **)(v2 + 48);
  if (v3 == v4)
  {
LABEL_40:
    sub_1C8CB47EC();
    swift_allocError();
    *unint64_t v18 = 0;
    return swift_willThrow();
  }
  else
  {
    int v5 = a1;
    int v6 = v3 + 1;
    int v7 = *v3;
    *(void *)(v2 + 40) = v3 + 1;
    if (v7 != a1)
    {
      uint64_t result = 0;
      unint64_t v9 = v3;
      while (1)
      {
        if (v7 == 92)
        {
          *a2 = 1;
          if (v6 == v4) {
            goto LABEL_40;
          }
          unsigned int v11 = v9[1];
          unint64_t v12 = v9 + 2;
          *(void *)(v2 + 40) = v9 + 2;
          if (v11 - 56 >= 0xFFFFFFF8)
          {
            unint64_t v17 = v4;
            if (v12 != v4)
            {
              unint64_t v17 = v9 + 2;
              if (*v12 - 56 >= 0xFFFFFFF8)
              {
                *(void *)(v2 + 40) = v9 + 3;
                unint64_t v17 = v4;
                if (v9 + 3 != v4)
                {
                  unint64_t v17 = v9 + 3;
                  if (v9[3] - 56 >= 0xFFFFFFF8)
                  {
                    if (v11 > 0x33) {
                      goto LABEL_40;
                    }
                    unint64_t v17 = v9 + 4;
                    *(void *)(v2 + 40) = v9 + 4;
                  }
                }
              }
            }
            BOOL v10 = __OFADD__(result++, 1);
            if (v10) {
              goto LABEL_42;
            }
            unint64_t v9 = v17;
            if (v17 == v4) {
              goto LABEL_40;
            }
          }
          else
          {
            switch(v11)
            {
              case '""':
              case '\'':
              case '?':
              case '\\':
              case 'a':
              case 'b':
              case 'f':
              case 'n':
              case 'r':
              case 't':
              case 'v':
                BOOL v10 = __OFADD__(result++, 1);
                if (!v10) {
                  goto LABEL_7;
                }
                goto LABEL_43;
              case 'x':
                if (v12 == v4) {
                  goto LABEL_40;
                }
                if ((*v12 - 58) <= 0xF5u)
                {
                  unsigned int v13 = *v12 - 65;
                  if (v13 > 0x25 || ((1 << v13) & 0x3F0000003FLL) == 0) {
                    goto LABEL_40;
                  }
                }
                unint64_t v14 = v9 + 3;
                *(void *)(v2 + 40) = v9 + 3;
                unint64_t v12 = v4;
                if (v9 + 3 == v4) {
                  goto LABEL_22;
                }
                if ((*v14 - 58) > 0xF5u) {
                  goto LABEL_21;
                }
                unsigned int v15 = *v14 - 65;
                if (v15 > 0x25)
                {
                  unint64_t v12 = v9 + 3;
                  BOOL v10 = __OFADD__(result++, 1);
                  if (v10) {
                    goto LABEL_39;
                  }
                }
                else
                {
                  uint64_t v16 = 1 << v15;
                  unint64_t v12 = v9 + 3;
                  if ((v16 & 0x3F0000003FLL) != 0)
                  {
LABEL_21:
                    unint64_t v12 = v9 + 4;
                    *(void *)(v2 + 40) = v9 + 4;
                  }
LABEL_22:
                  BOOL v10 = __OFADD__(result++, 1);
                  if (v10)
                  {
LABEL_39:
                    __break(1u);
                    goto LABEL_40;
                  }
                }
LABEL_7:
                unint64_t v9 = v12;
                if (v12 == v4) {
                  goto LABEL_40;
                }
                break;
              default:
                goto LABEL_40;
            }
          }
        }
        else
        {
          BOOL v10 = __OFADD__(result++, 1);
          if (v10)
          {
            __break(1u);
LABEL_42:
            __break(1u);
LABEL_43:
            __break(1u);
            JUMPOUT(0x1C8CB24C0);
          }
          unint64_t v9 = v6;
          if (v6 == v4) {
            goto LABEL_40;
          }
        }
        int v6 = v9 + 1;
        int v7 = *v9;
        *(void *)(v2 + 40) = v9 + 1;
        if (v7 == v5) {
          goto LABEL_4;
        }
      }
    }
    uint64_t result = 0;
LABEL_4:
    *(void *)(v2 + 40) = v3;
  }
  return result;
}

unsigned char *sub_1C8CB261C(unsigned char *result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (!result || a2 - (uint64_t)result < 1) {
    return result;
  }
  int v4 = *(unsigned __int8 **)(a3 + 40);
  int v5 = *v4;
  if (v5 != a4)
  {
    while (1)
    {
      if (v5 == 92)
      {
        unsigned __int8 v7 = v4[1];
        int v6 = v4 + 2;
        if ((v7 - 56) >= 0xF8u)
        {
          LOBYTE(v5) = v7 - 48;
          unsigned __int8 v8 = *v6;
          if ((*v6 - 56) >= 0xF8u)
          {
            int v6 = v4 + 4;
            unsigned __int8 v10 = v4[3];
            unint64_t v9 = v4 + 3;
            char v11 = v8 - 48;
            LOBYTE(v5) = v11 + 8 * v5;
            char v12 = (v7 << 6) + 8 * v11 + v10 - 48;
            if ((v10 - 56) < 0xF8u) {
              int v6 = v9;
            }
            else {
              LOBYTE(v5) = v12;
            }
          }
          goto LABEL_8;
        }
        LOBYTE(v5) = 7;
        switch(v4[1])
        {
          case 'a':
            break;
          case 'b':
            LOBYTE(v5) = 8;
            break;
          case 'f':
            LOBYTE(v5) = 12;
            break;
          case 'n':
            LOBYTE(v5) = 10;
            break;
          case 'r':
            LOBYTE(v5) = 13;
            break;
          case 't':
            LOBYTE(v5) = 9;
            break;
          case 'v':
            LOBYTE(v5) = 11;
            break;
          case 'x':
            unsigned __int8 v13 = *v6;
            if ((*v6 - 58) > 0xF5u)
            {
              char v14 = -48;
            }
            else if ((v13 - 71) > 0xF9u)
            {
              char v14 = -55;
            }
            else
            {
              if ((v13 - 103) < 0xFAu)
              {
                __break(1u);
                JUMPOUT(0x1C8CB27ECLL);
              }
              char v14 = -87;
            }
            LOBYTE(v5) = v13 + v14;
            int v6 = v4 + 3;
            unsigned __int8 v15 = v4[3];
            if ((v15 - 58) > 0xF5u)
            {
              char v16 = -48;
              goto LABEL_35;
            }
            if ((v15 - 71) > 0xF9u)
            {
              char v16 = -55;
              goto LABEL_35;
            }
            if ((v15 - 103) >= 0xFAu)
            {
              char v16 = -87;
LABEL_35:
              LOBYTE(v5) = v15 + v16 + 16 * v5;
              int v6 = v4 + 4;
              break;
            }
            break;
          default:
            LOBYTE(v5) = v4[1];
            break;
        }
      }
      else
      {
        int v6 = v4 + 1;
      }
LABEL_8:
      *result++ = v5;
      int v5 = *v6;
      int v4 = v6;
      if (v5 == a4) {
        goto LABEL_5;
      }
    }
  }
  int v6 = *(unsigned __int8 **)(a3 + 40);
LABEL_5:
  *(void *)(a3 + 40) = v6 + 1;
  return result;
}

uint64_t (*sub_1C8CB284C(unsigned __int8 a1))()
{
  uint64_t v3 = *(char **)(v1 + 40);
  int v4 = *(char **)(v1 + 48);
  if (v3 == v4) {
    return 0;
  }
  int v5 = *v3;
  if (v5 == a1)
  {
    char v6 = 0;
    unsigned __int8 v7 = *(unsigned __int8 **)(v1 + 40);
  }
  else
  {
    char v6 = 0;
    unsigned __int8 v7 = (unsigned __int8 *)(v3 + 2);
    do
    {
      while (1)
      {
        unint64_t v9 = v7 - 1;
        if (v5 != 92) {
          break;
        }
        if (v9 == (unsigned __int8 *)v4 || v7 == (unsigned __int8 *)v4)
        {
LABEL_14:
          unsigned __int8 v8 = 0;
          *(void *)(v1 + 40) = v4;
          return v8;
        }
        int v5 = *v7;
        char v6 = 1;
        if (v5 == a1) {
          goto LABEL_15;
        }
        v7 += 2;
      }
      if (v9 == (unsigned __int8 *)v4) {
        goto LABEL_14;
      }
      int v5 = *(v7++ - 1);
    }
    while (v5 != a1);
    v7 -= 2;
LABEL_15:
    *(void *)(v1 + 40) = v7;
  }
  unsigned __int8 v8 = sub_1C8CA96A4(v3, v7 - (unsigned __int8 *)v3);
  unint64_t v11 = v10;
  *(void *)(v1 + 40) = v7 + 1;
  sub_1C8CB2098();
  if (v11 && (v6 & 1) != 0)
  {
    unsigned __int8 v8 = sub_1C8CB11EC((unint64_t)v8, v11);
    swift_bridgeObjectRelease();
  }
  return v8;
}

void sub_1C8CB2970()
{
  uint64_t v2 = *(unsigned __int8 **)(v0 + 40);
  uint64_t v1 = *(unsigned __int8 **)(v0 + 48);
  if (v2 == v1) {
    goto LABEL_16;
  }
  uint64_t v3 = v2 + 1;
  int v4 = *v2;
  *(void *)(v0 + 40) = v2 + 1;
  if (v4 != 48)
  {
    if ((v4 - 58) >= 0xF7u)
    {
      if (v3 == v1) {
        goto LABEL_25;
      }
      int v11 = *v3;
      if (v11 != 117)
      {
        if ((v11 - 58) < 0xF6u) {
          goto LABEL_25;
        }
        uint64_t v12 = (v11 - 48);
        uint64_t v13 = 10 * (v4 - 48);
        char v14 = v2 + 2;
        while (1)
        {
          unint64_t v15 = v13 + v12;
          if (__CFADD__(v13, v12))
          {
            __break(1u);
            return;
          }
          char v16 = v14;
          if (v14 == v1) {
            goto LABEL_23;
          }
          int v17 = *v14;
          if (v17 == 117) {
            break;
          }
          if ((v17 - 58) < 0xF6u)
          {
LABEL_46:
            *(void *)(v0 + 40) = v16;
            goto LABEL_25;
          }
          if (v15 <= 0x1999999999999999)
          {
            uint64_t v12 = (v17 - 48);
            uint64_t v13 = 10 * v15;
            ++v14;
            if (!__CFADD__(v12, 10 * v15)) {
              continue;
            }
          }
          goto LABEL_42;
        }
LABEL_43:
        uint64_t v2 = v16 - 1;
      }
LABEL_22:
      uint64_t v1 = v2 + 2;
      goto LABEL_23;
    }
LABEL_16:
    sub_1C8CB47EC();
    swift_allocError();
    *unint64_t v10 = 1;
    swift_willThrow();
    return;
  }
  int v5 = *v3;
  if (v5 != 120)
  {
    if (v3 == v1) {
      goto LABEL_25;
    }
    if (v5 == 117) {
      goto LABEL_22;
    }
    if ((v5 - 56) < 0xF8u) {
      goto LABEL_25;
    }
    unint64_t v18 = 0;
    char v16 = v2 + 2;
    do
    {
      unint64_t v18 = 8 * v18 + (v5 - 48);
      if (v16 == v1) {
        goto LABEL_23;
      }
      int v5 = *v16;
      if (v5 == 117) {
        goto LABEL_43;
      }
      if ((v5 - 56) < 0xF8u) {
        goto LABEL_46;
      }
      ++v16;
    }
    while (!(v18 >> 61));
    --v16;
LABEL_42:
    *(void *)(v0 + 40) = v16;
    goto LABEL_16;
  }
  char v6 = v2 + 2;
  *(void *)(v0 + 40) = v6;
  if (v6 == v1) {
    goto LABEL_25;
  }
  unint64_t v7 = 0;
  while (1)
  {
    int v9 = *v6;
    if ((v9 - 58) > 0xF5u)
    {
      char v8 = -48;
      if (v7 >> 60) {
        goto LABEL_16;
      }
      goto LABEL_7;
    }
    if ((v9 - 103) <= 0xF9u) {
      break;
    }
    char v8 = -87;
    if (v7 >> 60) {
      goto LABEL_16;
    }
LABEL_7:
    *(void *)(v0 + 40) = ++v6;
    unint64_t v7 = 16 * v7 + (v9 + v8);
    if (v6 == v1) {
      goto LABEL_25;
    }
  }
  if ((v9 - 71) > 0xF9u)
  {
    char v8 = -55;
    if (v7 >> 60) {
      goto LABEL_16;
    }
    goto LABEL_7;
  }
  if (v9 == 117)
  {
    uint64_t v1 = v6 + 1;
LABEL_23:
    *(void *)(v0 + 40) = v1;
  }
LABEL_25:
  sub_1C8CB2098();
}

void sub_1C8CB2BE8()
{
  uint64_t v2 = *(unsigned char **)(v0 + 40);
  if (v2 == *(unsigned char **)(v0 + 48)) {
    goto LABEL_11;
  }
  if (*v2 == 45)
  {
    *(void *)(v0 + 40) = v2 + 1;
    if (v2[1] - 58 <= 0xFFFFFFF5
      || (sub_1C8CB2970(), !v1) && v3 < 0 && v3 != 0x8000000000000000)
    {
LABEL_11:
      sub_1C8CB47EC();
      swift_allocError();
      *int v5 = 1;
      swift_willThrow();
    }
  }
  else
  {
    sub_1C8CB2970();
    if (!v1 && v4 < 0) {
      goto LABEL_11;
    }
  }
}

uint64_t sub_1C8CB2CA4()
{
  uint64_t v1 = v0;
  sub_1C8CB2098();
  uint64_t v2 = *(unsigned __int8 **)(v0 + 40);
  uint64_t v3 = *(unsigned __int8 **)(v0 + 48);
  if (v2 != v3 && ((int v4 = *v2, v4 == 39) || v4 == 34) && (*(void *)(v0 + 40) = v2 + 1, v5 = sub_1C8CB284C(v4), v6))
  {
    unint64_t v28 = v5;
    unint64_t v7 = *(unsigned __int8 **)(v0 + 40);
    while (v7 != v3)
    {
      int v8 = *v7;
      if (v8 != 34 && v8 != 39) {
        break;
      }
      int v9 = (char *)(v7 + 1);
      *(void *)(v1 + 40) = v7 + 1;
      if (v7 + 1 == v3) {
        goto LABEL_51;
      }
      int v10 = *v9;
      if (v10 != v8)
      {
        char v11 = 0;
        for (uint64_t i = v7 + 3; ; i += 2)
        {
          while (1)
          {
            uint64_t v13 = i - 1;
            if (v10 == 92) {
              break;
            }
            if (v13 == v3) {
              goto LABEL_50;
            }
            int v10 = *(i++ - 1);
            if (v10 == v8)
            {
              i -= 2;
LABEL_22:
              *(void *)(v1 + 40) = i;
              goto LABEL_23;
            }
          }
          if (v13 == v3 || i == v3) {
            break;
          }
          int v10 = *i;
          char v11 = 1;
          if (v10 == v8) {
            goto LABEL_22;
          }
        }
LABEL_50:
        *(void *)(v1 + 40) = v3;
LABEL_51:
        swift_bridgeObjectRelease();
        goto LABEL_52;
      }
      char v11 = 0;
      uint64_t i = v7 + 1;
LABEL_23:
      char v14 = sub_1C8CA96A4(v9, i - (unsigned __int8 *)v9);
      char v16 = i + 1;
      *(void *)(v1 + 40) = i + 1;
      unint64_t v7 = v3;
      if (v16 == v3)
      {
LABEL_44:
        if (!v15) {
          goto LABEL_51;
        }
      }
      else
      {
        while (1)
        {
          uint64_t v18 = *v16;
          if (v18 > 0x23) {
            break;
          }
          if (((1 << v18) & 0x100002600) != 0)
          {
            int v17 = v16 + 1;
            *(void *)(v1 + 40) = v16 + 1;
          }
          else
          {
            if (v18 != 35) {
              break;
            }
            *(void *)(v1 + 40) = v16 + 1;
            if (v16 + 1 == v3) {
              goto LABEL_43;
            }
            int v19 = v16[1];
            int v17 = v16 + 2;
            *(void *)(v1 + 40) = v16 + 2;
            if (v19 != 10 && v19 != 13)
            {
              if (v17 == v3) {
                goto LABEL_43;
              }
              int v20 = v16[2];
              int v17 = v16 + 3;
              *(void *)(v1 + 40) = v16 + 3;
              if (v20 != 10 && v20 != 13)
              {
                while (v17 != v3)
                {
                  int v22 = *v17++;
                  int v21 = v22;
                  *(void *)(v1 + 40) = v17;
                  if (v22 == 10 || v21 == 13) {
                    goto LABEL_26;
                  }
                }
LABEL_43:
                unint64_t v7 = v3;
                goto LABEL_44;
              }
            }
          }
LABEL_26:
          char v16 = v17;
          if (v17 == v3) {
            goto LABEL_43;
          }
        }
        unint64_t v7 = v16;
        if (!v15) {
          goto LABEL_51;
        }
      }
      if (v11)
      {
        sub_1C8CB11EC((unint64_t)v14, v15);
        uint64_t v25 = v24;
        swift_bridgeObjectRelease();
        if (!v25) {
          goto LABEL_51;
        }
      }
      sub_1C8D88400();
      swift_bridgeObjectRelease();
    }
    return (uint64_t)v28;
  }
  else
  {
LABEL_52:
    sub_1C8CB47EC();
    swift_allocError();
    *long long v26 = 0;
    return swift_willThrow();
  }
}

uint64_t sub_1C8CB2F5C()
{
  uint64_t v2 = v0;
  sub_1C8CB2098();
  uint64_t v3 = *(unsigned __int8 **)(v0 + 40);
  int v4 = *(unsigned __int8 **)(v0 + 48);
  if (v3 != v4 && ((int v5 = *v3, v5 == 34) || v5 == 39))
  {
    *(void *)(v0 + 40) = v3 + 1;
    char v43 = 0;
    uint64_t result = sub_1C8CB2270(v5, &v43);
    if (!v1)
    {
      uint64_t v7 = result;
      if (v43 == 1)
      {
        uint64_t v41 = sub_1C8CA4A2C(result);
        unint64_t v42 = v8;
        sub_1C8CB44E0(&v41, v2, v5);
      }
      else
      {
        int v10 = *(unsigned char **)(v2 + 40);
        uint64_t v41 = sub_1C8D32844(v10, result);
        unint64_t v42 = v11;
        if (__OFADD__(v7, 1)) {
          goto LABEL_92;
        }
        *(void *)(v2 + 40) = &v10[v7 + 1];
      }
      for (uint64_t i = *(unsigned __int8 **)(v2 + 40); i != v4; uint64_t i = *(unsigned __int8 **)(v2 + 40))
      {
        while (1)
        {
          uint64_t v13 = *i;
          if (v13 > 0x23) {
            break;
          }
          if (((1 << v13) & 0x100002600) != 0)
          {
            char v14 = i + 1;
            *(void *)(v2 + 40) = i + 1;
            goto LABEL_15;
          }
          if (v13 != 35) {
            break;
          }
          *(void *)(v2 + 40) = i + 1;
          if (i + 1 == v4) {
            return v41;
          }
          int v15 = i[1];
          char v14 = i + 2;
          *(void *)(v2 + 40) = i + 2;
          if (v15 != 10 && v15 != 13)
          {
            if (v14 == v4) {
              return v41;
            }
            int v16 = i[2];
            char v14 = i + 3;
            *(void *)(v2 + 40) = i + 3;
            if (v16 != 10 && v16 != 13)
            {
              while (v14 != v4)
              {
                int v18 = *v14++;
                int v17 = v18;
                *(void *)(v2 + 40) = v14;
                if (v18 == 10 || v17 == 13) {
                  goto LABEL_15;
                }
              }
              return v41;
            }
          }
LABEL_15:
          uint64_t i = v14;
          if (v14 == v4) {
            return v41;
          }
        }
        if (i == v4 || v13 != 39 && v13 != 34) {
          return v41;
        }
        int v19 = i + 1;
        *(void *)(v2 + 40) = i + 1;
        if (i + 1 == v4)
        {
LABEL_87:
          sub_1C8CB47EC();
          swift_allocError();
          *unint64_t v38 = 0;
          swift_willThrow();
          return sub_1C8CA3D5C(v41, v42);
        }
        int v20 = i[1];
        int v21 = i + 2;
        *(void *)(v2 + 40) = v21;
        if (v20 == v13)
        {
          uint64_t v22 = 0;
          *(void *)(v2 + 40) = v19;
        }
        else
        {
          uint64_t v22 = 0;
          char v23 = 0;
          uint64_t v24 = v19;
          do
          {
            if (v20 == 92)
            {
              if (v21 == v4) {
                goto LABEL_87;
              }
              unsigned int v27 = v24[1];
              int v21 = v24 + 2;
              *(void *)(v2 + 40) = v24 + 2;
              if (v27 - 56 >= 0xFFFFFFF8)
              {
                uint64_t v32 = v4;
                if (v21 != v4)
                {
                  uint64_t v32 = v24 + 2;
                  if (*v21 - 56 > 0xFFFFFFF7)
                  {
                    *(void *)(v2 + 40) = v24 + 3;
                    uint64_t v32 = v4;
                    if (v24 + 3 != v4)
                    {
                      uint64_t v32 = v24 + 3;
                      if (v24[3] - 56 >= 0xFFFFFFF8)
                      {
                        if (v27 > 0x33) {
                          goto LABEL_87;
                        }
                        uint64_t v32 = v24 + 4;
                        *(void *)(v2 + 40) = v24 + 4;
                      }
                    }
                  }
                }
                BOOL v25 = __OFADD__(v22++, 1);
                if (v25) {
                  goto LABEL_89;
                }
                if (v32 == v4) {
                  goto LABEL_87;
                }
                char v23 = 1;
                int v21 = v32;
              }
              else
              {
                switch(v27)
                {
                  case '""':
                  case '\'':
                  case '?':
                  case '\\':
                  case 'a':
                  case 'b':
                  case 'f':
                  case 'n':
                  case 'r':
                  case 't':
                  case 'v':
                    BOOL v25 = __OFADD__(v22++, 1);
                    if (!v25) {
                      goto LABEL_40;
                    }
                    goto LABEL_90;
                  case 'x':
                    if (v21 == v4) {
                      goto LABEL_87;
                    }
                    unsigned __int8 v28 = *v21;
                    if ((v28 - 58) <= 0xF5u)
                    {
                      unsigned int v29 = v28 - 65;
                      if (v29 > 0x25 || ((1 << v29) & 0x3F0000003FLL) == 0) {
                        goto LABEL_87;
                      }
                    }
                    *(void *)(v2 + 40) = v24 + 3;
                    int v21 = v4;
                    if (v24 + 3 == v4) {
                      goto LABEL_56;
                    }
                    if ((v24[3] - 58) > 0xF5u) {
                      goto LABEL_55;
                    }
                    unsigned int v30 = v24[3] - 65;
                    if (v30 > 0x25)
                    {
                      int v21 = v24 + 3;
                      BOOL v25 = __OFADD__(v22++, 1);
                      if (v25) {
                        goto LABEL_93;
                      }
                    }
                    else
                    {
                      uint64_t v31 = 1 << v30;
                      int v21 = v24 + 3;
                      if ((v31 & 0x3F0000003FLL) != 0)
                      {
LABEL_55:
                        int v21 = v24 + 4;
                        *(void *)(v2 + 40) = v24 + 4;
                      }
LABEL_56:
                      BOOL v25 = __OFADD__(v22++, 1);
                      if (v25) {
                        goto LABEL_93;
                      }
                    }
LABEL_40:
                    if (v21 == v4) {
                      goto LABEL_87;
                    }
                    char v23 = 1;
                    break;
                  default:
                    goto LABEL_87;
                }
              }
            }
            else
            {
              BOOL v25 = __OFADD__(v22++, 1);
              if (v25)
              {
                __break(1u);
LABEL_89:
                __break(1u);
LABEL_90:
                __break(1u);
LABEL_91:
                __break(1u);
LABEL_92:
                __break(1u);
LABEL_93:
                __break(1u);
LABEL_94:
                __break(1u);
                JUMPOUT(0x1C8CB34B8);
              }
              if (v21 == v4) {
                goto LABEL_87;
              }
            }
            uint64_t v24 = v21;
            int v26 = *v21++;
            LOBYTE(v20) = v26;
            *(void *)(v2 + 40) = v21;
          }
          while (v26 != v13);
          *(void *)(v2 + 40) = v19;
          if (v23)
          {
            if (v22)
            {
              if (v22 <= 14)
              {
                if (v22 < 0) {
                  goto LABEL_94;
                }
                uint64_t v34 = 0;
                unint64_t v35 = (unint64_t)v22 << 48;
              }
              else
              {
                sub_1C8D88150();
                swift_allocObject();
                uint64_t v33 = sub_1C8D88120();
                if ((unint64_t)v22 >= 0x7FFFFFFF)
                {
                  sub_1C8D88190();
                  uint64_t v34 = swift_allocObject();
                  *(void *)(v34 + 16) = 0;
                  *(void *)(v34 + 24) = v22;
                  unint64_t v35 = v33 | 0x8000000000000000;
                }
                else
                {
                  uint64_t v34 = v22 << 32;
                  unint64_t v35 = v33 | 0x4000000000000000;
                }
              }
            }
            else
            {
              uint64_t v34 = 0;
              unint64_t v35 = 0xC000000000000000;
            }
            uint64_t v39 = v34;
            unint64_t v40 = v35;
            sub_1C8CB44E0(&v39, v2, v13);
            uint64_t v36 = v39;
            unint64_t v37 = v40;
            sub_1C8CA3CF8(v39, v40);
            sub_1C8D881E0();
            sub_1C8CA3D5C(v36, v37);
            sub_1C8CA3D5C(v36, v37);
            continue;
          }
          if (v22) {
            sub_1C8D881B0();
          }
        }
        if (__OFADD__(v22, 1)) {
          goto LABEL_91;
        }
        *(void *)(v2 + 40) = &v19[v22 + 1];
      }
      return v41;
    }
  }
  else
  {
    sub_1C8CB47EC();
    swift_allocError();
    *int v9 = 0;
    return swift_willThrow();
  }
  return result;
}

char *sub_1C8CB3614()
{
  uint64_t v1 = *(unsigned __int8 **)(v0 + 40);
  uint64_t v2 = *(unsigned __int8 **)(v0 + 48);
  if (v1 != v2)
  {
    int v3 = *v1;
    int v4 = *(unsigned __int8 **)(v0 + 40);
    if (v3 == 45)
    {
      int v4 = v1 + 1;
      *(void *)(v0 + 40) = v1 + 1;
      if (v1 + 1 == v2) {
        goto LABEL_24;
      }
      int v3 = *v4;
    }
    if (v3 == 46)
    {
      *(void *)(v0 + 40) = ++v4;
      if (v4 == v2 || *v4 - 58 <= 0xFFFFFFF5) {
        goto LABEL_24;
      }
      goto LABEL_13;
    }
    if (v3 == 48)
    {
      *(void *)(v0 + 40) = ++v4;
      if (v4 == v2)
      {
LABEL_20:
        int v4 = v2;
        goto LABEL_21;
      }
      if (*v4 - 58 >= 0xFFFFFFF6) {
        goto LABEL_24;
      }
LABEL_13:
      int64_t v6 = v4 - v1;
      while (1)
      {
        int v7 = *v4;
        if ((v7 - 58) <= 0xFFFFFFF5)
        {
          uint64_t v8 = (v7 - 43);
          if (v8 > 0x3B) {
            goto LABEL_21;
          }
          if (((1 << v8) & 0x40000000400000DLL) == 0) {
            break;
          }
        }
        *(void *)(v0 + 40) = ++v4;
        ++v6;
        if (v4 == v2) {
          goto LABEL_20;
        }
      }
      if (v8 == 59)
      {
        int v5 = sub_1C8D0B988(v1, v6);
        *(void *)(v0 + 40) = v4 + 1;
LABEL_22:
        sub_1C8CB2098();
        return v5;
      }
LABEL_21:
      int v5 = sub_1C8D0B988(v1, v4 - v1);
      goto LABEL_22;
    }
    if ((v3 - 58) >= 0xFFFFFFF7) {
      goto LABEL_13;
    }
LABEL_24:
    int v5 = 0;
    *(void *)(v0 + 40) = v1;
    return v5;
  }
  return 0;
}

uint64_t sub_1C8CB3788(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    int v4 = *(unsigned __int8 **)(v1 + 40);
    int v3 = *(unsigned __int8 **)(v1 + 48);
    if (v4 != v3 && *v4 == *(unsigned __int8 *)(result + 32))
    {
      int v5 = &v4[v2];
      int64_t v6 = v4 + 1;
      int v7 = (unsigned __int8 *)(result + 33);
      uint64_t v8 = v2 - 1;
      while (v8)
      {
        if (v6 != v3)
        {
          int v10 = *v7++;
          int v9 = v10;
          int v11 = *v6++;
          --v8;
          if (v11 == v9) {
            continue;
          }
        }
        return result;
      }
      *(void *)(v1 + 40) = v5;
    }
  }
  return result;
}

uint64_t sub_1C8CB37E8(uint64_t a1)
{
  uint64_t v2 = *(unsigned char **)(v1 + 40);
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    int v4 = *(unsigned char **)(v1 + 48);
    if (v2 != v4)
    {
      uint64_t v5 = 0;
      uint64_t v6 = v3 - 1;
      do
      {
        unsigned __int8 v7 = v2[v5];
        if ((v7 - 91) >= 0xE6u) {
          v7 += 32;
        }
        if (*(unsigned __int8 *)(a1 + 32 + v5) != v7) {
          break;
        }
        uint64_t v8 = &v2[v5 + 1];
        *(void *)(v1 + 40) = v8;
        if (v6 == v5) {
          goto LABEL_11;
        }
        ++v5;
      }
      while (&v2[v5] != v4);
    }
    goto LABEL_15;
  }
  int v4 = *(unsigned char **)(v1 + 48);
  uint64_t v8 = *(unsigned char **)(v1 + 40);
LABEL_11:
  if (v8 == v4) {
    return 1;
  }
  if ((*v8 & 0xDFu) - 91 < 0xFFFFFFE6)
  {
    sub_1C8CB2098();
    return 1;
  }
LABEL_15:
  uint64_t result = 0;
  *(void *)(v1 + 40) = v2;
  return result;
}

unint64_t sub_1C8CB38A8()
{
  uint64_t v1 = *(unsigned __int8 **)(v0 + 40);
  if (v1 == *(unsigned __int8 **)(v0 + 48)) {
    goto LABEL_9;
  }
  int v2 = *v1;
  if (v2 == 45) {
    *(void *)(v0 + 40) = v1 + 1;
  }
  if (sub_1C8CB37E8((uint64_t)&unk_1F234FF30) & 1) != 0 || (sub_1C8CB37E8((uint64_t)&unk_1F234FF58))
  {
    unsigned __int8 v3 = 0;
    uint64_t v4 = 2139095040;
    if (v2 == 45) {
      uint64_t v4 = 4286578688;
    }
  }
  else
  {
LABEL_9:
    uint64_t v4 = 0;
    unsigned __int8 v3 = 1;
  }
  return v4 | ((unint64_t)v3 << 32);
}

uint64_t sub_1C8CB3938()
{
  uint64_t result = (uint64_t)sub_1C8CB3614();
  if (v1)
  {
    uint64_t result = sub_1C8CB37E8((uint64_t)&unk_1F234FF80);
    if ((result & 1) == 0)
    {
      uint64_t result = sub_1C8CB38A8();
      if ((result & 0x100000000) != 0)
      {
        sub_1C8CB47EC();
        swift_allocError();
        *int v2 = 1;
        return swift_willThrow();
      }
    }
  }
  return result;
}

uint64_t sub_1C8CB39CC()
{
  uint64_t result = (uint64_t)sub_1C8CB3614();
  if (v1)
  {
    uint64_t result = sub_1C8CB37E8((uint64_t)&unk_1F234FFA8);
    if ((result & 1) == 0)
    {
      uint64_t result = sub_1C8CB38A8();
      if ((result & 0x100000000) != 0)
      {
        sub_1C8CB47EC();
        swift_allocError();
        *int v2 = 1;
        return swift_willThrow();
      }
    }
  }
  return result;
}

uint64_t sub_1C8CB3A60()
{
  sub_1C8CB2098();
  char v1 = *(unsigned __int8 **)(v0 + 40);
  int v2 = *(unsigned __int8 **)(v0 + 48);
  if (v1 == v2)
  {
LABEL_19:
    sub_1C8CB47EC();
    swift_allocError();
    *int v9 = 0;
    swift_willThrow();
  }
  else
  {
    int v5 = *v1;
    unsigned __int8 v3 = v1 + 1;
    int v4 = v5;
    *(void *)(v0 + 40) = v3;
    switch(v5)
    {
      case '0':
        if (v3 != v2)
        {
          LOBYTE(v2) = 0;
          int v6 = *v3;
          switch(v6)
          {
            case 9:
            case 10:
            case 13:
            case 32:
            case 35:
            case 44:
            case 59:
            case 62:
            case 93:
              goto LABEL_10;
            case 11:
            case 12:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 27:
            case 28:
            case 29:
            case 30:
            case 31:
            case 33:
            case 34:
            case 36:
            case 37:
            case 38:
            case 39:
            case 40:
            case 41:
            case 42:
            case 43:
            case 45:
            case 46:
            case 47:
            case 48:
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
            case 55:
            case 56:
            case 57:
            case 58:
            case 60:
            case 61:
            case 63:
            case 64:
            case 65:
            case 66:
            case 67:
            case 68:
            case 69:
            case 70:
            case 71:
            case 72:
            case 73:
            case 74:
            case 75:
            case 76:
            case 77:
            case 78:
            case 79:
            case 80:
            case 81:
            case 82:
            case 83:
            case 84:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
            case 90:
            case 91:
            case 92:
              goto LABEL_19;
            default:
              goto LABEL_18;
          }
        }
        goto LABEL_14;
      case '1':
        if (v3 != v2)
        {
          int v6 = *v3;
          LOBYTE(v2) = 1;
          switch(v6)
          {
            case 9:
            case 10:
            case 13:
            case 32:
            case 35:
            case 44:
            case 59:
            case 62:
            case 93:
              goto LABEL_10;
            case 11:
            case 12:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 27:
            case 28:
            case 29:
            case 30:
            case 31:
            case 33:
            case 34:
            case 36:
            case 37:
            case 38:
            case 39:
            case 40:
            case 41:
            case 42:
            case 43:
            case 45:
            case 46:
            case 47:
            case 48:
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
            case 55:
            case 56:
            case 57:
            case 58:
            case 60:
            case 61:
            case 63:
            case 64:
            case 65:
            case 66:
            case 67:
            case 68:
            case 69:
            case 70:
            case 71:
            case 72:
            case 73:
            case 74:
            case 75:
            case 76:
            case 77:
            case 78:
            case 79:
            case 80:
            case 81:
            case 82:
            case 83:
            case 84:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
            case 90:
            case 91:
            case 92:
              goto LABEL_19;
            default:
              goto LABEL_18;
          }
        }
        goto LABEL_17;
      case '2':
      case '3':
      case '4':
      case '5':
      case '6':
      case '7':
      case '8':
      case '9':
      case ':':
      case ';':
      case '<':
      case '=':
      case '>':
      case '?':
      case '@':
      case 'A':
      case 'B':
      case 'C':
      case 'D':
      case 'E':
      case 'G':
      case 'H':
      case 'I':
      case 'J':
      case 'K':
      case 'L':
      case 'M':
      case 'N':
      case 'O':
      case 'P':
      case 'Q':
      case 'R':
      case 'S':
        goto LABEL_19;
      case 'F':
        goto LABEL_11;
      case 'T':
        goto LABEL_7;
      default:
        if (v4 == 102)
        {
LABEL_11:
          if (v3 != v2)
          {
            sub_1C8CB3788((uint64_t)&unk_1F234F5E0);
            uint64_t v8 = *(unsigned __int8 **)(v0 + 40);
            if (v8 != v2)
            {
              LOBYTE(v2) = 0;
              int v6 = *v8;
              switch(v6)
              {
                case 9:
                case 10:
                case 13:
                case 32:
                case 35:
                case 44:
                case 59:
                case 62:
                case 93:
                  goto LABEL_10;
                case 11:
                case 12:
                case 14:
                case 15:
                case 16:
                case 17:
                case 18:
                case 19:
                case 20:
                case 21:
                case 22:
                case 23:
                case 24:
                case 25:
                case 26:
                case 27:
                case 28:
                case 29:
                case 30:
                case 31:
                case 33:
                case 34:
                case 36:
                case 37:
                case 38:
                case 39:
                case 40:
                case 41:
                case 42:
                case 43:
                case 45:
                case 46:
                case 47:
                case 48:
                case 49:
                case 50:
                case 51:
                case 52:
                case 53:
                case 54:
                case 55:
                case 56:
                case 57:
                case 58:
                case 60:
                case 61:
                case 63:
                case 64:
                case 65:
                case 66:
                case 67:
                case 68:
                case 69:
                case 70:
                case 71:
                case 72:
                case 73:
                case 74:
                case 75:
                case 76:
                case 77:
                case 78:
                case 79:
                case 80:
                case 81:
                case 82:
                case 83:
                case 84:
                case 85:
                case 86:
                case 87:
                case 88:
                case 89:
                case 90:
                case 91:
                case 92:
                  goto LABEL_19;
                default:
                  goto LABEL_18;
              }
            }
          }
LABEL_14:
          LOBYTE(v2) = 0;
        }
        else
        {
          if (v4 != 116) {
            goto LABEL_19;
          }
LABEL_7:
          if (v3 == v2 || (sub_1C8CB3788((uint64_t)&unk_1F234F608), unsigned __int8 v7 = *(unsigned __int8 **)(v0 + 40), v7 == v2))
          {
LABEL_17:
            LOBYTE(v2) = 1;
          }
          else
          {
            int v6 = *v7;
            LOBYTE(v2) = 1;
            switch(v6)
            {
              case 9:
              case 10:
              case 13:
              case 32:
              case 35:
              case 44:
              case 59:
              case 62:
              case 93:
                break;
              case 11:
              case 12:
              case 14:
              case 15:
              case 16:
              case 17:
              case 18:
              case 19:
              case 20:
              case 21:
              case 22:
              case 23:
              case 24:
              case 25:
              case 26:
              case 27:
              case 28:
              case 29:
              case 30:
              case 31:
              case 33:
              case 34:
              case 36:
              case 37:
              case 38:
              case 39:
              case 40:
              case 41:
              case 42:
              case 43:
              case 45:
              case 46:
              case 47:
              case 48:
              case 49:
              case 50:
              case 51:
              case 52:
              case 53:
              case 54:
              case 55:
              case 56:
              case 57:
              case 58:
              case 60:
              case 61:
              case 63:
              case 64:
              case 65:
              case 66:
              case 67:
              case 68:
              case 69:
              case 70:
              case 71:
              case 72:
              case 73:
              case 74:
              case 75:
              case 76:
              case 77:
              case 78:
              case 79:
              case 80:
              case 81:
              case 82:
              case 83:
              case 84:
              case 85:
              case 86:
              case 87:
              case 88:
              case 89:
              case 90:
              case 91:
              case 92:
                goto LABEL_19;
              default:
LABEL_18:
                if (v6 != 125) {
                  goto LABEL_19;
                }
                break;
            }
LABEL_10:
            sub_1C8CB2098();
          }
        }
        break;
    }
  }
  return v2 & 1;
}

unsigned __int8 *sub_1C8CB422C()
{
  sub_1C8CB2098();
  char v1 = *(unsigned char **)(v0 + 40);
  if (v1 == *(unsigned char **)(v0 + 48))
  {
    sub_1C8CB47EC();
    swift_allocError();
    *unsigned __int8 v3 = 0;
    return (unsigned __int8 *)swift_willThrow();
  }
  else if ((*v1 & 0xDFu) - 91 >= 0xFFFFFFE6)
  {
    return sub_1C8CB2134();
  }
  else
  {
    return 0;
  }
}

uint64_t (*sub_1C8CB42BC())()
{
  sub_1C8CB2098();
  int v2 = *(unsigned char **)(v0 + 40);
  unsigned __int8 v3 = *(unsigned char **)(v0 + 48);
  if (v2 == v3 || *v2 != 91) {
    return 0;
  }
  *(void *)(v0 + 40) = v2 + 1;
  int v4 = sub_1C8CB21BC();
  if (!v5)
  {
LABEL_9:
    sub_1C8CB47EC();
    swift_allocError();
    *unsigned __int8 v7 = 0;
    swift_willThrow();
    return v1;
  }
  int v6 = *(unsigned char **)(v0 + 40);
  if (v6 == v3 || *v6 != 93)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  char v1 = v4;
  *(void *)(v0 + 40) = v6 + 1;
  sub_1C8CB2098();
  return v1;
}

uint64_t sub_1C8CB438C(uint64_t a1)
{
  unsigned __int8 v3 = *(unsigned __int8 **)(v1 + 40);
  int v4 = *(unsigned __int8 **)(v1 + 48);
  if (v3 == v4) {
    return 0;
  }
  uint64_t v5 = *v3;
  if ((v5 & 0xFFFFFFDF) - 91 >= 0xFFFFFFE6)
  {
    uint64_t v2 = *(void *)(a1 + 16);
    unsigned __int8 v7 = sub_1C8CB2134();
    if (!*(void *)(v2 + 16)) {
      goto LABEL_18;
    }
    unint64_t v9 = sub_1C8CA5D58(v7, v8);
    if ((v10 & 1) == 0) {
      goto LABEL_18;
    }
    return *(void *)(*(void *)(v2 + 56) + 8 * v9);
  }
  else
  {
    if ((v5 - 58) < 0xFFFFFFF7)
    {
      char v6 = 0;
LABEL_19:
      sub_1C8CB47EC();
      swift_allocError();
      *int v17 = v6;
      swift_willThrow();
      return v2;
    }
    uint64_t v11 = *(void *)(a1 + 8);
    uint64_t v2 = v5 - 48;
    *(void *)(v1 + 40) = v3 + 1;
    if (v3 + 1 != v4)
    {
      unsigned int v12 = v3[1];
      if (v12 - 58 >= 0xFFFFFFF6)
      {
        uint64_t v13 = v4;
        char v14 = v3 + 2;
        while (1)
        {
          uint64_t v2 = 10 * v2 + v12 - 48;
          if (v14 == v4) {
            break;
          }
          unsigned int v15 = *v14++;
          unsigned int v12 = v15;
          if (v15 - 58 <= 0xFFFFFFF5)
          {
            uint64_t v13 = v14 - 1;
            break;
          }
        }
        *(void *)(v1 + 40) = v13;
      }
    }
    sub_1C8CB2098();
    if (!*(void *)(v11 + 16) || (sub_1C8CA5D14(v2), (v16 & 1) == 0))
    {
LABEL_18:
      char v6 = 7;
      goto LABEL_19;
    }
  }
  return v2;
}

unsigned char *sub_1C8CB44E0(void *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  unint64_t v3 = a1[1];
  switch(v3 >> 62)
  {
    case 1uLL:
      *(void *)&long long v21 = *a1;
      *((void *)&v21 + 1) = v3 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)a1 = xmmword_1C8D8AD80;
      uint64_t result = sub_1C8CB4738((int *)&v21, a2, a3);
      uint64_t v8 = v21;
      unint64_t v9 = *((void *)&v21 + 1) | 0x4000000000000000;
      goto LABEL_4;
    case 2uLL:
      *(void *)&long long v21 = *a1;
      *((void *)&v21 + 1) = v3 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)a1 = xmmword_1C8D8AD80;
      sub_1C8D88160();
      uint64_t v10 = *((void *)&v21 + 1);
      uint64_t v11 = *(void *)(v21 + 16);
      uint64_t v20 = *(void *)(v21 + 24);
      uint64_t v12 = sub_1C8D88110();
      if (!v12)
      {
        __break(1u);
        JUMPOUT(0x1C8CB4728);
      }
      uint64_t v13 = v12;
      uint64_t v14 = sub_1C8D88140();
      uint64_t v15 = v11 - v14;
      if (__OFSUB__(v11, v14))
      {
        __break(1u);
LABEL_15:
        __break(1u);
      }
      BOOL v16 = __OFSUB__(v20, v11);
      uint64_t v17 = v20 - v11;
      if (v16) {
        goto LABEL_15;
      }
      uint64_t v18 = sub_1C8D88130();
      if (v18 >= v17) {
        uint64_t v19 = v17;
      }
      else {
        uint64_t v19 = v18;
      }
      uint64_t result = sub_1C8CB261C((unsigned char *)(v13 + v15), v13 + v15 + v19, a2, a3);
      *a1 = v21;
      a1[1] = v10 | 0x8000000000000000;
      return result;
    case 3uLL:
      *(void *)((char *)&v21 + 7) = 0;
      *(void *)&long long v21 = 0;
      return sub_1C8CB261C(&v21, (uint64_t)&v21, a2, a3);
    default:
      *(void *)&long long v21 = *a1;
      WORD4(v21) = v3;
      BYTE10(v21) = BYTE2(v3);
      BYTE11(v21) = BYTE3(v3);
      BYTE12(v21) = BYTE4(v3);
      BYTE13(v21) = BYTE5(v3);
      BYTE14(v21) = BYTE6(v3);
      uint64_t result = sub_1C8CB261C(&v21, (uint64_t)&v21 + BYTE6(v3), a2, a3);
      uint64_t v8 = v21;
      unint64_t v9 = DWORD2(v21) | ((unint64_t)BYTE12(v21) << 32) | ((unint64_t)BYTE13(v21) << 40) | ((unint64_t)BYTE14(v21) << 48);
LABEL_4:
      *a1 = v8;
      a1[1] = v9;
      return result;
  }
}

unsigned char *sub_1C8CB4738(int *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result = (unsigned char *)sub_1C8D88170();
  uint64_t v7 = *a1;
  uint64_t v8 = a1[1];
  if ((int)v8 < (int)v7)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t result = (unsigned char *)sub_1C8D88110();
  if (!result)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  unint64_t v9 = result;
  uint64_t result = (unsigned char *)sub_1C8D88140();
  uint64_t v10 = v7 - (void)result;
  if (__OFSUB__(v7, result))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v11 = v8 - v7;
  uint64_t v12 = sub_1C8D88130();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  return sub_1C8CB261C(&v9[v10], (uint64_t)&v9[v10 + v13], a2, a3);
}

unint64_t sub_1C8CB47EC()
{
  unint64_t result = qword_1EA565E98;
  if (!qword_1EA565E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA565E98);
  }
  return result;
}

uint64_t destroy for TextFormatScanner(uint64_t a1)
{
  if (*(void *)(a1 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  return swift_release();
}

uint64_t initializeWithCopy for TextFormatScanner(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TextFormatScanner(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 3);
  if (!*(void *)(a1 + 24))
  {
    if (v4)
    {
      *(void *)(a1 + 24) = v4;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
      goto LABEL_8;
    }
LABEL_7:
    long long v5 = *a2;
    long long v6 = a2[1];
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
LABEL_8:
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  *(void *)(a1 + 56) = *((void *)a2 + 7);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    unint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        unint64_t result = (uint64_t *)swift_release();
        *unint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for TextFormatScanner(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TextFormatScanner(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TextFormatScanner(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextFormatScanner()
{
  return &type metadata for TextFormatScanner;
}

uint64_t sub_1C8CB4D28@<X0>(unsigned __int8 *a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v11 = sub_1C8D88620();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11, v13);
  uint64_t v15 = (char *)&v26 - v14;
  uint64_t v16 = swift_conformsToProtocol2();
  if (v16) {
    uint64_t v17 = v16;
  }
  else {
    uint64_t v17 = 0;
  }
  if (v16) {
    uint64_t v18 = a3;
  }
  else {
    uint64_t v18 = 0;
  }
  if (v18)
  {
    uint64_t v27 = v12;
    uint64_t v28 = v5;
    uint64_t v29 = a5;
    (*(void (**)(uint64_t *__return_ptr))(v17 + 8))(&v30);
    uint64_t v19 = v31;
    if (*(void *)(v31 + 16) && (unint64_t v20 = sub_1C8CA5D58(a1, a2), (v21 & 1) != 0))
    {
      uint64_t v22 = *(void *)(*(void *)(v19 + 56) + 8 * v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 32))(v22, a3, a4);
      uint64_t v23 = *(void *)(a3 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v15, 1, a3))
      {
        uint64_t v25 = v29;
        (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v29, v15, a3);
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v23 + 56))(v25, 0, 1, a3);
      }
      (*(void (**)(char *, uint64_t))(v27 + 8))(v15, v11);
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
    }
    a5 = v29;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56))(a5, 1, 1, a3);
}

uint64_t sub_1C8CB4FCC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v11 = sub_1C8D88620();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11, v13);
  uint64_t v15 = (char *)&v26 - v14;
  uint64_t v16 = swift_conformsToProtocol2();
  if (v16) {
    uint64_t v17 = v16;
  }
  else {
    uint64_t v17 = 0;
  }
  if (v16) {
    uint64_t v18 = a3;
  }
  else {
    uint64_t v18 = 0;
  }
  if (v18)
  {
    uint64_t v27 = v12;
    uint64_t v28 = v5;
    uint64_t v29 = a5;
    (*(void (**)(void *__return_ptr))(v17 + 8))(v30);
    uint64_t v19 = v30[3];
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1C8CB0F18(a1, a2);
    swift_bridgeObjectRelease();
    if (*(void *)(v19 + 16)
      && (unint64_t v21 = sub_1C8CA5D58((unsigned __int8 *)(v20 + 32), *(unsigned __int8 **)(v20 + 16)), (v22 & 1) != 0))
    {
      uint64_t v26 = *(void *)(*(void *)(v19 + 56) + 8 * v21);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 32))(v26, a3, a4);
      uint64_t v23 = *(void *)(a3 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v15, 1, a3))
      {
        uint64_t v25 = v29;
        (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v29, v15, a3);
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v23 + 56))(v25, 0, 1, a3);
      }
      (*(void (**)(char *, uint64_t))(v27 + 8))(v15, v11);
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
    }
    a5 = v29;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56))(a5, 1, 1, a3);
}

uint64_t Enum.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D88850();
}

uint64_t dispatch thunk of Enum.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of Enum.init(rawValue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of Enum.rawValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_1C8CB5340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = swift_conformsToProtocol2();
  if (v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  if (v6) {
    uint64_t result = a1;
  }
  else {
    uint64_t result = 0;
  }
  long long v9 = 0uLL;
  if (result)
  {
    (*(void (**)(void *__return_ptr, __n128))(v7 + 8))(v27, (__n128)0);
    uint64_t v10 = v27[1];
    uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 40))(a1, a2);
    if (*(void *)(v10 + 16) && (unint64_t v12 = sub_1C8CA5D14(v11), (v13 & 1) != 0))
    {
      uint64_t v14 = *(void *)(v10 + 56) + 80 * v12;
      uint64_t v24 = *(void *)(v14 + 8);
      uint64_t v25 = *(void *)v14;
      uint64_t v22 = *(void *)(v14 + 24);
      uint64_t v23 = *(void *)(v14 + 16);
      long long v26 = *(_OWORD *)(v14 + 40);
      uint64_t v15 = *(void *)(v14 + 56);
      uint64_t v16 = *(void *)(v14 + 64);
      uint64_t v17 = *(unsigned __int8 *)(v14 + 72);
      int v18 = *(unsigned __int8 *)(v14 + 73);
      uint64_t v19 = *(unsigned __int16 *)(v14 + 32);
      sub_1C8CB5524(*(void *)v14, v24, v23, v22, v19);
      sub_1C8CA6050(v15, v16, v17, v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1C8CA6050(v15, v16, v17, v18);
      sub_1C8CB554C(v25, v24, v23, v22, v19);
      uint64_t result = sub_1C8CA6AF4(v15, v16, v17, v18);
      long long v9 = v26;
      if (v18) {
        __int16 v20 = 256;
      }
      else {
        __int16 v20 = 0;
      }
      __int16 v21 = v20 | v17;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      uint64_t v15 = 0;
      uint64_t v16 = 0;
      __int16 v21 = -256;
      long long v9 = 0uLL;
    }
  }
  else
  {
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    __int16 v21 = -256;
  }
  *(_OWORD *)a3 = v9;
  *(void *)(a3 + 16) = v15;
  *(void *)(a3 + 24) = v16;
  *(_WORD *)(a3 + 32) = v21;
  return result;
}

uint64_t sub_1C8CB5524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (BYTE1(a5) != 255) {
    return sub_1C8CA6050(a3, a4, a5, BYTE1(a5) & 1);
  }
  return result;
}

uint64_t sub_1C8CB554C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (BYTE1(a5) != 255) {
    return sub_1C8CA6AF4(a3, a4, a5, BYTE1(a5) & 1);
  }
  return result;
}

uint64_t ExtensibleMessage.setExtensionValue<A>(ext:value:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  uint64_t v7 = *(void *)(*a1 + 96);
  uint64_t v8 = *(void *)(*a1 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness, v11);
  char v13 = &v22[-v12];
  uint64_t v14 = v6;
  uint64_t v15 = a1[2];
  uint64_t v16 = *(void *)(v14 + 88);
  uint64_t v17 = *(void *)(a3 + 8);
  v24[0] = v8;
  v24[1] = v16;
  v24[2] = v7;
  uint64_t v25 = v17;
  v23[3] = type metadata accessor for MessageExtension();
  v23[4] = &protocol witness table for MessageExtension<A, B>;
  v23[0] = a1;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v10 + 16))(v13, a2, AssociatedTypeWitness);
  int v18 = *(void (**)(void *, unsigned char *, uint64_t, uint64_t))(v7 + 56);
  uint64_t v25 = v8;
  uint64_t v26 = *(void *)(v7 + 8);
  __swift_allocate_boxed_opaque_existential_1(v24);
  swift_retain();
  v18(v23, v13, v8, v7);
  uint64_t v19 = (uint64_t (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(a3 + 32))(v22, v16, a3);
  sub_1C8CB5788((uint64_t)v24, (uint64_t)v23);
  sub_1C8CB5E04((uint64_t)v23, v15);
  sub_1C8CB5F10((uint64_t)v24);
  return v19(v22, 0);
}

uint64_t sub_1C8CB5788(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA565EA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ExtensibleMessage.getExtensionValue<A>(ext:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v26 = *a1;
  uint64_t v5 = v26;
  uint64_t v27 = a3;
  uint64_t v6 = *(void *)(v26 + 80);
  uint64_t v7 = sub_1C8D88620();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v7, v9);
  uint64_t v12 = (char *)&v26 - v11;
  uint64_t v13 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v10, v14);
  uint64_t v16 = (char *)&v26 - v15;
  (*(void (**)(uint64_t *__return_ptr, void, uint64_t))(a2 + 16))(&v30, *(void *)(v5 + 88), a2);
  uint64_t v17 = v30;
  if (*(void *)(v30 + 16) && (unint64_t v18 = sub_1C8CA5D14(a1[2]), (v19 & 1) != 0))
  {
    sub_1C8CA425C(*(void *)(v17 + 56) + 40 * v18, (uint64_t)v28);
  }
  else
  {
    uint64_t v29 = 0;
    memset(v28, 0, sizeof(v28));
  }
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA565EA0);
  char v20 = swift_dynamicCast();
  __int16 v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  if (v20)
  {
    v21(v12, 0, 1, v6);
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v12, v6);
    uint64_t v22 = v27;
    (*(void (**)(uint64_t, void))(*(void *)(v26 + 96) + 32))(v6, *(void *)(v26 + 96));
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v6);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v22, 0, 1, AssociatedTypeWitness);
  }
  else
  {
    v21(v12, 1, 1, v6);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
    uint64_t v25 = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v27, 1, 1, v25);
  }
}

BOOL ExtensibleMessage.hasExtensionValue<A>(ext:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(void *)(*a1 + 80);
  uint64_t v6 = sub_1C8D88620();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v8);
  uint64_t v10 = (char *)v18 - v9;
  (*(void (**)(uint64_t *__return_ptr, void, uint64_t))(a2 + 16))(&v20, *(void *)(v4 + 88), a2);
  uint64_t v11 = v20;
  if (*(void *)(v20 + 16) && (unint64_t v12 = sub_1C8CA5D14(a1[2]), (v13 & 1) != 0))
  {
    sub_1C8CA425C(*(void *)(v11 + 56) + 40 * v12, (uint64_t)v18);
  }
  else
  {
    uint64_t v19 = 0;
    memset(v18, 0, sizeof(v18));
  }
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA565EA0);
  int v14 = swift_dynamicCast();
  uint64_t v15 = *(void *)(v5 - 8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v10, v14 ^ 1u, 1, v5);
  BOOL v16 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v10, 1, v5) == 0;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  return v16;
}

uint64_t ExtensibleMessage.clearExtensionValue<A>(ext:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[2];
  uint64_t v9 = 0;
  memset(v8, 0, sizeof(v8));
  uint64_t v4 = (uint64_t (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *, void, uint64_t))(a2 + 32))(v7, *(void *)(v2 + 88), a2);
  sub_1C8CB5788((uint64_t)v8, (uint64_t)v6);
  sub_1C8CB5E04((uint64_t)v6, v3);
  sub_1C8CB5F10((uint64_t)v8);
  return v4(v7, 0);
}

uint64_t sub_1C8CB5E04(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (*(void *)(a1 + 24))
  {
    sub_1C8CA4528((long long *)a1, (uint64_t)v14);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1C8D861FC(v14, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v12;
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C8CB5F10(a1);
    unint64_t v7 = sub_1C8CA5D14(a2);
    if (v8)
    {
      unint64_t v9 = v7;
      char v10 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v11 = *v2;
      uint64_t v13 = *v3;
      *uint64_t v3 = 0x8000000000000000;
      if ((v10 & 1) == 0)
      {
        sub_1C8D86D18();
        uint64_t v11 = v13;
      }
      sub_1C8CA4528((long long *)(*(void *)(v11 + 56) + 40 * v9), (uint64_t)v14);
      sub_1C8CCDC3C(v9, v11);
      *uint64_t v3 = v11;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v15 = 0;
      memset(v14, 0, sizeof(v14));
    }
    return sub_1C8CB5F10((uint64_t)v14);
  }
}

uint64_t sub_1C8CB5F10(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA565EA0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C8CB5F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a3)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13[0] = *v5;
    *uint64_t v5 = 0x8000000000000000;
    sub_1C8D8633C(a1, a2, a3, a4, a5, isUniquelyReferenced_nonNull_native);
    *uint64_t v5 = v13[0];
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C8CCDB2C(a4, a5, (uint64_t)v13);
    swift_bridgeObjectRelease();
    return sub_1C8CB6084(v13[0], v13[1], v13[2]);
  }
}

uint64_t dispatch thunk of ExtensibleMessage._protobuf_extensionFieldValues.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ExtensibleMessage._protobuf_extensionFieldValues.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ExtensibleMessage._protobuf_extensionFieldValues.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_1C8CB6084(uint64_t result, unint64_t a2, uint64_t a3)
{
  if (a3)
  {
    sub_1C8CA3D5C(result, a2);
    return swift_release();
  }
  return result;
}

uint64_t ExtensionFieldValueSet.subscript.setter(uint64_t a1, uint64_t a2)
{
  sub_1C8CB5788(a1, (uint64_t)v5);
  sub_1C8CB5E04((uint64_t)v5, a2);
  return sub_1C8CB5F10(a1);
}

double ExtensionFieldValueSet.subscript.getter@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *v2;
  if (*(void *)(v4 + 16) && (unint64_t v5 = sub_1C8CA5D14(a1), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(v4 + 56) + 40 * v5;
    sub_1C8CA425C(v7, a2);
  }
  else
  {
    *(void *)(a2 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

SiriOntologyProtobuf::ExtensionFieldValueSet __swiftcall ExtensionFieldValueSet.init()()
{
  *uint64_t v0 = MEMORY[0x1E4FBC868];
  return result;
}

uint64_t ExtensionFieldValueSet.hash(into:)(long long *a1)
{
  uint64_t v3 = *v1;
  uint64_t v21 = *v1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(*v1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(*v1 + 64);
  int64_t v22 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v9 = 16777619;
  if (!v6) {
    goto LABEL_8;
  }
LABEL_6:
  unint64_t v15 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v16 = v15 | (v8 << 6);
  while (2)
  {
    uint64_t v17 = *(void *)(v3 + 56);
    *(void *)&long long v23 = *(void *)(*(void *)(v3 + 48) + 8 * v16);
    sub_1C8CA425C(v17 + 40 * v16, (uint64_t)&v23 + 8);
    while (1)
    {
      sub_1C8CB7B8C((uint64_t)&v23, (uint64_t)&v31);
      if (!v33)
      {
        swift_release();
        return sub_1C8D88850();
      }
      sub_1C8CA4528(&v32, (uint64_t)v28);
      uint64_t v10 = *((void *)a1 + 8);
      long long v11 = a1[1];
      long long v23 = *a1;
      long long v24 = v11;
      long long v12 = a1[3];
      long long v25 = a1[2];
      long long v26 = v12;
      uint64_t v27 = v10;
      sub_1C8D88850();
      uint64_t v13 = v29;
      uint64_t v14 = v30;
      __swift_project_boxed_opaque_existential_1(v28, v29);
      (*(void (**)(long long *, uint64_t, uint64_t))(v14 + 16))(&v23, v13, v14);
      long long v36 = v25;
      long long v37 = v26;
      uint64_t v38 = v27;
      long long v34 = v23;
      long long v35 = v24;
      v9 += sub_1C8D88890();
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
      if (v6) {
        goto LABEL_6;
      }
LABEL_8:
      int64_t v18 = v8 + 1;
      if (__OFADD__(v8, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (v18 < v22)
      {
        unint64_t v19 = *(void *)(v21 + 8 * v18);
        if (v19) {
          goto LABEL_11;
        }
        int64_t v20 = v8 + 2;
        ++v8;
        if (v18 + 1 < v22)
        {
          unint64_t v19 = *(void *)(v21 + 8 * v20);
          if (v19) {
            goto LABEL_14;
          }
          int64_t v8 = v18 + 1;
          if (v18 + 2 < v22)
          {
            unint64_t v19 = *(void *)(v21 + 8 * (v18 + 2));
            if (v19)
            {
              v18 += 2;
              goto LABEL_11;
            }
            int64_t v20 = v18 + 3;
            int64_t v8 = v18 + 2;
            if (v18 + 3 < v22) {
              break;
            }
          }
        }
      }
LABEL_25:
      unint64_t v6 = 0;
      long long v24 = 0u;
      long long v25 = 0u;
      long long v23 = 0u;
    }
    unint64_t v19 = *(void *)(v21 + 8 * v20);
    if (v19)
    {
LABEL_14:
      int64_t v18 = v20;
LABEL_11:
      unint64_t v6 = (v19 - 1) & v19;
      unint64_t v16 = __clz(__rbit64(v19)) + (v18 << 6);
      int64_t v8 = v18;
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v18 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v18 >= v22)
    {
      int64_t v8 = v22 - 1;
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v21 + 8 * v18);
    ++v20;
    if (v19) {
      goto LABEL_11;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t ExtensionFieldValueSet.traverse<A>(visitor:start:end:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v40 = a5;
  int64_t v8 = *(void **)v5;
  uint64_t v9 = *(void *)v5 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(*(void *)v5 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(*(void *)v5 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v14 = 0;
  unint64_t v15 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v34 = a3;
  while (1)
  {
    if (v12)
    {
      unint64_t v16 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_21;
    }
    if (__OFADD__(v14++, 1))
    {
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v14 >= v13) {
      goto LABEL_32;
    }
    unint64_t v19 = *(void *)(v9 + 8 * v14);
    if (v19) {
      goto LABEL_20;
    }
    int64_t v20 = v14 + 1;
    if (v14 + 1 >= v13) {
      goto LABEL_32;
    }
    unint64_t v19 = *(void *)(v9 + 8 * v20);
    if (!v19)
    {
      int64_t v20 = v14 + 2;
      if (v14 + 2 >= v13) {
        goto LABEL_32;
      }
      unint64_t v19 = *(void *)(v9 + 8 * v20);
      if (!v19)
      {
        int64_t v20 = v14 + 3;
        if (v14 + 3 >= v13) {
          goto LABEL_32;
        }
        unint64_t v19 = *(void *)(v9 + 8 * v20);
        if (!v19)
        {
          int64_t v20 = v14 + 4;
          if (v14 + 4 >= v13) {
            goto LABEL_32;
          }
          unint64_t v19 = *(void *)(v9 + 8 * v20);
          if (!v19) {
            break;
          }
        }
      }
    }
LABEL_19:
    int64_t v14 = v20;
LABEL_20:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_21:
    uint64_t v21 = *(void *)(v8[6] + 8 * v17);
    if (v21 >= a2 && v21 < a3)
    {
      v37[0] = v15;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C8CB75F4(0, *((void *)v15 + 2) + 1, 1);
        unint64_t v15 = v37[0];
      }
      unint64_t v23 = *((void *)v15 + 2);
      unint64_t v22 = *((void *)v15 + 3);
      unint64_t v24 = v23 + 1;
      if (v23 >= v22 >> 1)
      {
        sub_1C8CB75F4((char *)(v22 > 1), v23 + 1, 1);
        unint64_t v24 = v23 + 1;
        unint64_t v15 = v37[0];
      }
      *((void *)v15 + 2) = v24;
      *(void *)&v15[8 * v23 + 32] = v21;
      a3 = v34;
    }
  }
  int64_t v20 = v14 + 5;
  if (v14 + 5 >= v13)
  {
LABEL_32:
    swift_release();
    v37[0] = v15;
    swift_bridgeObjectRetain();
    sub_1C8CB6BF4(v37);
    if (v33) {
      goto LABEL_43;
    }
    swift_release();
    long long v25 = v37[0];
    uint64_t v26 = *((void *)v37[0] + 2);
    if (!v26) {
      return swift_release();
    }
    uint64_t v27 = 0;
    while (v8[2])
    {
      unint64_t v28 = sub_1C8CA5D14(*(void *)&v25[8 * v27 + 32]);
      if ((v29 & 1) == 0) {
        goto LABEL_41;
      }
      sub_1C8CA425C(v8[7] + 40 * v28, (uint64_t)v37);
      uint64_t v30 = v38;
      uint64_t v31 = v39;
      __swift_project_boxed_opaque_existential_1(v37, v38);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 48))(a1, a4, v40, v30, v31);
      ++v27;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
      if (v26 == v27) {
        return swift_release();
      }
    }
    goto LABEL_40;
  }
  unint64_t v19 = *(void *)(v9 + 8 * v20);
  if (v19) {
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v13) {
      goto LABEL_32;
    }
    unint64_t v19 = *(void *)(v9 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_20;
    }
  }
LABEL_42:
  __break(1u);
LABEL_43:
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1C8CB673C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = *a3;
  sub_1C8CB5788(a1, (uint64_t)v6);
  sub_1C8CB5788((uint64_t)v6, (uint64_t)v5);
  sub_1C8CB5E04((uint64_t)v5, v3);
  return sub_1C8CB5F10((uint64_t)v6);
}

void (*ExtensionFieldValueSet.subscript.modify(void *a1, uint64_t a2))(uint64_t *a1, char a2)
{
  uint64_t v5 = malloc(0x88uLL);
  *a1 = v5;
  v5[15] = a2;
  v5[16] = v2;
  uint64_t v6 = *v2;
  if (*(void *)(v6 + 16) && (unint64_t v7 = sub_1C8CA5D14(a2), (v8 & 1) != 0))
  {
    sub_1C8CA425C(*(void *)(v6 + 56) + 40 * v7, (uint64_t)v5);
  }
  else
  {
    v5[4] = 0;
    *(_OWORD *)uint64_t v5 = 0u;
    *((_OWORD *)v5 + 1) = 0u;
  }
  return sub_1C8CB6828;
}

void sub_1C8CB6828(uint64_t *a1, char a2)
{
  uint64_t v2 = (void *)*a1;
  uint64_t v3 = *a1 + 40;
  if (a2)
  {
    uint64_t v4 = v2[15];
    sub_1C8CB5788(*a1, v3);
    sub_1C8CB5788(v3, (uint64_t)(v2 + 10));
    sub_1C8CB5E04((uint64_t)(v2 + 10), v4);
    sub_1C8CB5F10(v3);
  }
  else
  {
    uint64_t v5 = v2[15];
    sub_1C8CB5788(*a1, v3);
    sub_1C8CB5E04(v3, v5);
  }
  sub_1C8CB5F10((uint64_t)v2);
  free(v2);
}

uint64_t ExtensionFieldValueSet.isInitialized.getter()
{
  uint64_t v1 = *v0;
  uint64_t v17 = *v0 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(*v0 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(*v0 + 64);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  if (!v4) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v8 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  unint64_t v9 = v8 | (v7 << 6);
LABEL_5:
  uint64_t v10 = *(void *)(v1 + 56);
  *(void *)&long long v18 = *(void *)(*(void *)(v1 + 48) + 8 * v9);
  sub_1C8CA425C(v10 + 40 * v9, (uint64_t)&v18 + 8);
  while (1)
  {
    sub_1C8CB7B8C((uint64_t)&v18, (uint64_t)v21);
    uint64_t v14 = v23;
    if (!v23)
    {
      swift_release();
      return v14 == 0;
    }
    sub_1C8CA4528(&v22, (uint64_t)&v18);
    uint64_t v15 = *((void *)&v19 + 1);
    uint64_t v16 = v20;
    __swift_project_boxed_opaque_existential_1(&v18, *((uint64_t *)&v19 + 1));
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v16 + 56))(v15, v16) & 1) == 0) {
      break;
    }
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
    if (v4) {
      goto LABEL_4;
    }
LABEL_6:
    int64_t v11 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v11 < v5)
    {
      unint64_t v12 = *(void *)(v17 + 8 * v11);
      if (v12) {
        goto LABEL_9;
      }
      int64_t v13 = v7 + 2;
      ++v7;
      if (v11 + 1 < v5)
      {
        unint64_t v12 = *(void *)(v17 + 8 * v13);
        if (v12) {
          goto LABEL_12;
        }
        int64_t v7 = v11 + 1;
        if (v11 + 2 < v5)
        {
          unint64_t v12 = *(void *)(v17 + 8 * (v11 + 2));
          if (v12)
          {
            v11 += 2;
            goto LABEL_9;
          }
          int64_t v13 = v11 + 3;
          int64_t v7 = v11 + 2;
          if (v11 + 3 < v5)
          {
            unint64_t v12 = *(void *)(v17 + 8 * v13);
            if (!v12)
            {
              while (1)
              {
                int64_t v11 = v13 + 1;
                if (__OFADD__(v13, 1)) {
                  break;
                }
                if (v11 >= v5)
                {
                  int64_t v7 = v5 - 1;
                  goto LABEL_23;
                }
                unint64_t v12 = *(void *)(v17 + 8 * v11);
                ++v13;
                if (v12) {
                  goto LABEL_9;
                }
              }
LABEL_32:
              __break(1u);
              return result;
            }
LABEL_12:
            int64_t v11 = v13;
LABEL_9:
            unint64_t v4 = (v12 - 1) & v12;
            unint64_t v9 = __clz(__rbit64(v12)) + (v11 << 6);
            int64_t v7 = v11;
            goto LABEL_5;
          }
        }
      }
    }
LABEL_23:
    unint64_t v4 = 0;
    long long v19 = 0u;
    long long v20 = 0u;
    long long v18 = 0u;
  }
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  return v14 == 0;
}

uint64_t ExtensionFieldValueSet.hashValue.getter()
{
  uint64_t v3 = *v0;
  sub_1C8D88840();
  ExtensionFieldValueSet.hash(into:)(v2);
  return sub_1C8D888A0();
}

uint64_t sub_1C8CB6B58()
{
  uint64_t v3 = *v0;
  sub_1C8D88840();
  ExtensionFieldValueSet.hash(into:)(v2);
  return sub_1C8D888A0();
}

uint64_t sub_1C8CB6BA8()
{
  uint64_t v3 = *v0;
  sub_1C8D88840();
  ExtensionFieldValueSet.hash(into:)(v2);
  return sub_1C8D888A0();
}

uint64_t sub_1C8CB6BF4(char **a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v2 = sub_1C8CB787C((uint64_t)v2);
    *a1 = v2;
  }
  uint64_t v4 = *((void *)v2 + 2);
  v6[0] = v2 + 32;
  v6[1] = v4;
  uint64_t result = sub_1C8CB6C68(v6);
  *a1 = v2;
  return result;
}

uint64_t sub_1C8CB6C68(void *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C8D88790();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_138;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v76 = 0;
      uint64_t v77 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v79 = *(void *)(v77 + 8 * i);
        uint64_t v80 = v76;
        do
        {
          uint64_t v81 = *(void *)(v77 + v80);
          if (v79 >= v81) {
            break;
          }
          if (!v77) {
            goto LABEL_142;
          }
          *(void *)(v77 + v80 + 8) = v81;
          *(void *)(v77 + v80) = v79;
          v80 -= 8;
        }
        while (v80 != -8);
        v76 += 8;
      }
    }
  }
  else
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 < -1) {
      goto LABEL_137;
    }
    uint64_t v93 = result;
    uint64_t v94 = v3;
    if (v3 > 1)
    {
      uint64_t v6 = v5 >> 1;
      uint64_t result = sub_1C8D88500();
      *(void *)(result + 16) = v6;
      uint64_t v3 = v94;
      uint64_t v92 = result;
      v96 = (char *)(result + 32);
LABEL_13:
      uint64_t v8 = 0;
      uint64_t v9 = *v2;
      v90 = v2;
      uint64_t v91 = *v2 - 8;
      uint64_t v10 = MEMORY[0x1E4FBC860];
      uint64_t v95 = *v2;
      while (1)
      {
        uint64_t v12 = v8++;
        if (v8 < v3)
        {
          uint64_t v13 = *(void *)(v9 + 8 * v8);
          uint64_t v14 = *(void *)(v9 + 8 * v12);
          uint64_t v8 = v12 + 2;
          if (v12 + 2 < v3)
          {
            uint64_t v15 = v13;
            while (1)
            {
              uint64_t v16 = *(void *)(v9 + 8 * v8);
              if (v13 < v14 == v16 >= v15) {
                break;
              }
              ++v8;
              uint64_t v15 = v16;
              if (v3 == v8)
              {
                uint64_t v8 = v3;
                break;
              }
            }
          }
          if (v13 < v14)
          {
            if (v8 < v12) {
              goto LABEL_139;
            }
            if (v12 < v8)
            {
              uint64_t v17 = v8 - 1;
              uint64_t v18 = v12;
              do
              {
                if (v18 != v17)
                {
                  if (!v9) {
                    goto LABEL_145;
                  }
                  uint64_t v19 = *(void *)(v9 + 8 * v18);
                  *(void *)(v9 + 8 * v18) = *(void *)(v9 + 8 * v17);
                  *(void *)(v9 + 8 * v17) = v19;
                }
                BOOL v58 = ++v18 < v17--;
              }
              while (v58);
            }
          }
        }
        if (v8 < v3)
        {
          if (__OFSUB__(v8, v12)) {
            goto LABEL_136;
          }
          if (v8 - v12 < v93)
          {
            uint64_t v20 = v12 + v93;
            if (__OFADD__(v12, v93)) {
              goto LABEL_140;
            }
            if (v20 >= v3) {
              uint64_t v20 = v3;
            }
            if (v20 < v12)
            {
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
              return result;
            }
            if (v8 != v20)
            {
              uint64_t v21 = (uint64_t *)(v91 + 8 * v8);
              do
              {
                uint64_t v22 = *(void *)(v9 + 8 * v8);
                uint64_t v23 = v12;
                unint64_t v24 = v21;
                do
                {
                  uint64_t v25 = *v24;
                  if (v22 >= *v24) {
                    break;
                  }
                  if (!v9) {
                    goto LABEL_143;
                  }
                  *unint64_t v24 = v22;
                  v24[1] = v25;
                  --v24;
                  ++v23;
                }
                while (v8 != v23);
                ++v8;
                ++v21;
              }
              while (v8 != v20);
              uint64_t v8 = v20;
            }
          }
        }
        if (v8 < v12) {
          goto LABEL_131;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1C8CB74B4(0, *(void *)(v10 + 16) + 1, 1, (char *)v10);
          uint64_t v10 = result;
        }
        unint64_t v27 = *(void *)(v10 + 16);
        unint64_t v26 = *(void *)(v10 + 24);
        unint64_t v11 = v27 + 1;
        uint64_t v9 = v95;
        if (v27 >= v26 >> 1)
        {
          uint64_t result = (uint64_t)sub_1C8CB74B4((char *)(v26 > 1), v27 + 1, 1, (char *)v10);
          uint64_t v9 = v95;
          uint64_t v10 = result;
        }
        *(void *)(v10 + 16) = v11;
        uint64_t v28 = v10 + 32;
        char v29 = (uint64_t *)(v10 + 32 + 16 * v27);
        *char v29 = v12;
        v29[1] = v8;
        if (v27)
        {
          while (1)
          {
            unint64_t v30 = v11 - 1;
            if (v11 >= 4)
            {
              unint64_t v35 = v28 + 16 * v11;
              uint64_t v36 = *(void *)(v35 - 64);
              uint64_t v37 = *(void *)(v35 - 56);
              BOOL v41 = __OFSUB__(v37, v36);
              uint64_t v38 = v37 - v36;
              if (v41) {
                goto LABEL_120;
              }
              uint64_t v40 = *(void *)(v35 - 48);
              uint64_t v39 = *(void *)(v35 - 40);
              BOOL v41 = __OFSUB__(v39, v40);
              uint64_t v33 = v39 - v40;
              char v34 = v41;
              if (v41) {
                goto LABEL_121;
              }
              unint64_t v42 = v11 - 2;
              char v43 = (uint64_t *)(v28 + 16 * (v11 - 2));
              uint64_t v45 = *v43;
              uint64_t v44 = v43[1];
              BOOL v41 = __OFSUB__(v44, v45);
              uint64_t v46 = v44 - v45;
              if (v41) {
                goto LABEL_122;
              }
              BOOL v41 = __OFADD__(v33, v46);
              uint64_t v47 = v33 + v46;
              if (v41) {
                goto LABEL_124;
              }
              if (v47 >= v38)
              {
                unint64_t v65 = (uint64_t *)(v28 + 16 * v30);
                uint64_t v67 = *v65;
                uint64_t v66 = v65[1];
                BOOL v41 = __OFSUB__(v66, v67);
                uint64_t v68 = v66 - v67;
                if (v41) {
                  goto LABEL_130;
                }
                BOOL v58 = v33 < v68;
                goto LABEL_84;
              }
            }
            else
            {
              if (v11 != 3)
              {
                uint64_t v59 = *(void *)(v10 + 32);
                uint64_t v60 = *(void *)(v10 + 40);
                BOOL v41 = __OFSUB__(v60, v59);
                uint64_t v52 = v60 - v59;
                char v53 = v41;
                goto LABEL_78;
              }
              uint64_t v32 = *(void *)(v10 + 32);
              uint64_t v31 = *(void *)(v10 + 40);
              BOOL v41 = __OFSUB__(v31, v32);
              uint64_t v33 = v31 - v32;
              char v34 = v41;
            }
            if (v34) {
              goto LABEL_123;
            }
            unint64_t v42 = v11 - 2;
            unint64_t v48 = (uint64_t *)(v28 + 16 * (v11 - 2));
            uint64_t v50 = *v48;
            uint64_t v49 = v48[1];
            BOOL v51 = __OFSUB__(v49, v50);
            uint64_t v52 = v49 - v50;
            char v53 = v51;
            if (v51) {
              goto LABEL_125;
            }
            char v54 = (uint64_t *)(v28 + 16 * v30);
            uint64_t v56 = *v54;
            uint64_t v55 = v54[1];
            BOOL v41 = __OFSUB__(v55, v56);
            uint64_t v57 = v55 - v56;
            if (v41) {
              goto LABEL_127;
            }
            if (__OFADD__(v52, v57)) {
              goto LABEL_129;
            }
            if (v52 + v57 >= v33)
            {
              BOOL v58 = v33 < v57;
LABEL_84:
              if (v58) {
                unint64_t v30 = v42;
              }
              goto LABEL_86;
            }
LABEL_78:
            if (v53) {
              goto LABEL_126;
            }
            uint64_t v61 = (uint64_t *)(v28 + 16 * v30);
            uint64_t v63 = *v61;
            uint64_t v62 = v61[1];
            BOOL v41 = __OFSUB__(v62, v63);
            uint64_t v64 = v62 - v63;
            if (v41) {
              goto LABEL_128;
            }
            if (v64 < v52) {
              goto LABEL_15;
            }
LABEL_86:
            unint64_t v69 = v30 - 1;
            if (v30 - 1 >= v11)
            {
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
              goto LABEL_141;
            }
            if (!v9) {
              goto LABEL_144;
            }
            uint64_t v70 = (uint64_t *)(v28 + 16 * v69);
            uint64_t v71 = *v70;
            uint64_t v72 = v28;
            unint64_t v73 = (void *)(v28 + 16 * v30);
            uint64_t v74 = v73[1];
            uint64_t result = sub_1C8CB72B0((char *)(v9 + 8 * *v70), (char *)(v9 + 8 * *v73), v9 + 8 * v74, v96);
            if (v1) {
              goto LABEL_114;
            }
            if (v74 < v71) {
              goto LABEL_117;
            }
            if (v30 > *(void *)(v10 + 16)) {
              goto LABEL_118;
            }
            *uint64_t v70 = v71;
            *(void *)(v72 + 16 * v69 + 8) = v74;
            unint64_t v75 = *(void *)(v10 + 16);
            if (v30 >= v75) {
              goto LABEL_119;
            }
            unint64_t v11 = v75 - 1;
            uint64_t result = (uint64_t)memmove(v73, v73 + 2, 16 * (v75 - 1 - v30));
            uint64_t v28 = v72;
            *(void *)(v10 + 16) = v75 - 1;
            uint64_t v9 = v95;
            if (v75 <= 2) {
              goto LABEL_15;
            }
          }
        }
        unint64_t v11 = 1;
LABEL_15:
        uint64_t v3 = v94;
        if (v8 >= v94)
        {
          uint64_t v7 = v92;
          uint64_t v2 = v90;
          goto LABEL_103;
        }
      }
    }
    uint64_t v7 = MEMORY[0x1E4FBC860];
    v96 = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 == 1)
    {
      uint64_t v92 = MEMORY[0x1E4FBC860];
      goto LABEL_13;
    }
    unint64_t v11 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    uint64_t v10 = MEMORY[0x1E4FBC860];
LABEL_103:
    uint64_t v92 = v7;
    if (v11 >= 2)
    {
      uint64_t v82 = *v2;
      do
      {
        unint64_t v83 = v11 - 2;
        if (v11 < 2) {
          goto LABEL_132;
        }
        if (!v82) {
          goto LABEL_146;
        }
        uint64_t v84 = v10;
        uint64_t v85 = v10 + 32;
        uint64_t v86 = *(void *)(v10 + 32 + 16 * v83);
        uint64_t v87 = *(void *)(v10 + 32 + 16 * (v11 - 1) + 8);
        uint64_t result = sub_1C8CB72B0((char *)(v82 + 8 * v86), (char *)(v82 + 8 * *(void *)(v85 + 16 * (v11 - 1))), v82 + 8 * v87, v96);
        if (v1) {
          break;
        }
        if (v87 < v86) {
          goto LABEL_133;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1C8CB75B0(v84);
          uint64_t v84 = result;
        }
        if (v83 >= *(void *)(v84 + 16)) {
          goto LABEL_134;
        }
        unint64_t v88 = (void *)(v84 + 32 + 16 * v83);
        *unint64_t v88 = v86;
        v88[1] = v87;
        unint64_t v89 = *(void *)(v84 + 16);
        if (v11 > v89) {
          goto LABEL_135;
        }
        uint64_t result = (uint64_t)memmove((void *)(v84 + 32 + 16 * (v11 - 1)), (const void *)(v84 + 32 + 16 * v11), 16 * (v89 - v11));
        uint64_t v10 = v84;
        *(void *)(v84 + 16) = v89 - 1;
        unint64_t v11 = v89 - 1;
      }
      while (v89 > 2);
    }
LABEL_114:
    swift_bridgeObjectRelease();
    *(void *)(v92 + 16) = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C8CB72B0(char *__dst, char *__src, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = __src - __dst;
  int64_t v9 = __src - __dst + 7;
  if (__src - __dst >= 0) {
    int64_t v9 = __src - __dst;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)__src;
  uint64_t v12 = a3 - (void)__src + 7;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v12 = a3 - (void)__src;
  }
  uint64_t v13 = v12 >> 3;
  if (v10 >= v12 >> 3)
  {
    if (a4 != __src || &__src[8 * v13] <= a4) {
      memmove(a4, __src, 8 * v13);
    }
    uint64_t v14 = &v4[8 * v13];
    if (v7 >= v6 || v11 < 8) {
      goto LABEL_39;
    }
    uint64_t v17 = (char *)(a3 - 8);
    uint64_t v18 = v6;
    while (1)
    {
      uint64_t v19 = v17 + 8;
      uint64_t v21 = *((void *)v18 - 1);
      v18 -= 8;
      uint64_t v20 = v21;
      if (*((void *)v14 - 1) < v21) {
        break;
      }
      uint64_t v20 = *((void *)v14 - 1);
      uint64_t v18 = v6;
      if (v19 != v14)
      {
        v14 -= 8;
LABEL_35:
        *(void *)uint64_t v17 = v20;
        goto LABEL_36;
      }
      BOOL v22 = v17 >= v14;
      v14 -= 8;
      if (v22) {
        goto LABEL_35;
      }
LABEL_36:
      if (v18 > v7)
      {
        v17 -= 8;
        uint64_t v6 = v18;
        if (v14 > v4) {
          continue;
        }
      }
      uint64_t v6 = v18;
      goto LABEL_39;
    }
    if (v19 == v6 && v17 < v6) {
      goto LABEL_36;
    }
    goto LABEL_35;
  }
  if (a4 != __dst || &__dst[8 * v10] <= a4) {
    memmove(a4, __dst, 8 * v10);
  }
  uint64_t v14 = &v4[8 * v10];
  if ((unint64_t)v6 < a3 && v8 >= 8)
  {
    while (1)
    {
      uint64_t v15 = *(void *)v6;
      if (*(void *)v6 >= *(void *)v4) {
        break;
      }
      BOOL v16 = v7 == v6;
      v6 += 8;
      if (!v16) {
        goto LABEL_16;
      }
LABEL_17:
      v7 += 8;
      if (v4 >= v14 || (unint64_t)v6 >= a3) {
        goto LABEL_19;
      }
    }
    uint64_t v15 = *(void *)v4;
    BOOL v16 = v7 == v4;
    v4 += 8;
    if (v16) {
      goto LABEL_17;
    }
LABEL_16:
    *(void *)uint64_t v7 = v15;
    goto LABEL_17;
  }
LABEL_19:
  uint64_t v6 = v7;
LABEL_39:
  int64_t v23 = v14 - v4 + (v14 - v4 < 0 ? 7uLL : 0);
  if (v6 != v4 || v6 >= &v4[v23 & 0xFFFFFFFFFFFFFFF8]) {
    memmove(v6, v4, 8 * (v23 >> 3));
  }
  return 1;
}

char *sub_1C8CB74B4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA565ED0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1C8CB75B0(uint64_t a1)
{
  return sub_1C8CB74B4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void *sub_1C8CB75C4(void *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C8CB7740(a1, a2, a3, *v3, &qword_1EA565EC8, &qword_1EBCB2CD8);
  *uint64_t v3 = result;
  return result;
}

char *sub_1C8CB75F4(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C8CB7644(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_1C8CB7614(void *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C8CB7740(a1, a2, a3, *v3, &qword_1EA565EB8, &qword_1EA565EC0);
  *uint64_t v3 = result;
  return result;
}

char *sub_1C8CB7644(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA565ED8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 8 * v8);
  }
  swift_release();
  return v10;
}

void *sub_1C8CB7740(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v13 = (void *)swift_allocObject();
    size_t v14 = _swift_stdlib_malloc_size(v13);
    v13[2] = v11;
    uint64_t v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
  }
  if (v8)
  {
    if (v13 != a4 || v13 + 4 >= &a4[5 * v11 + 4]) {
      memmove(v13 + 4, a4 + 4, 40 * v11);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v13;
}

char *sub_1C8CB787C(uint64_t a1)
{
  return sub_1C8CB7644(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t _s20SiriOntologyProtobuf22ExtensionFieldValueSetV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  if (*(void *)(*a1 + 16) != *(void *)(*a2 + 16)) {
    return 0;
  }
  uint64_t v22 = v2 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(v2 + 64);
  int64_t v23 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  if (!v6) {
    goto LABEL_7;
  }
LABEL_5:
  unint64_t v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v10 = v9 | (v8 << 6);
  while (2)
  {
    uint64_t v11 = *(void *)(v2 + 56);
    *(void *)&long long v26 = *(void *)(*(void *)(v2 + 48) + 8 * v10);
    sub_1C8CA425C(v11 + 40 * v10, (uint64_t)&v26 + 8);
    while (1)
    {
      sub_1C8CB7B8C((uint64_t)&v26, (uint64_t)&v29);
      if (!v31)
      {
        swift_release();
        return 1;
      }
      uint64_t v15 = v29;
      sub_1C8CA4528(&v30, (uint64_t)&v26);
      if (!*(void *)(v3 + 16)) {
        goto LABEL_34;
      }
      unint64_t v16 = sub_1C8CA5D14(v15);
      if ((v17 & 1) == 0) {
        goto LABEL_34;
      }
      sub_1C8CA425C(*(void *)(v3 + 56) + 40 * v16, (uint64_t)v24);
      sub_1C8CA4528(v24, (uint64_t)v25);
      __swift_project_boxed_opaque_existential_1(&v26, *((uint64_t *)&v27 + 1));
      uint64_t DynamicType = swift_getDynamicType();
      __swift_project_boxed_opaque_existential_1(v25, v25[3]);
      if (DynamicType != swift_getDynamicType())
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
LABEL_34:
        swift_release();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
        return 0;
      }
      uint64_t v19 = *((void *)&v27 + 1);
      uint64_t v20 = v28;
      __swift_project_boxed_opaque_existential_1(&v26, *((uint64_t *)&v27 + 1));
      char v21 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 32))(v25, v19, v20);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
      if ((v21 & 1) == 0) {
        goto LABEL_34;
      }
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
      if (v6) {
        goto LABEL_5;
      }
LABEL_7:
      int64_t v12 = v8 + 1;
      if (__OFADD__(v8, 1))
      {
        __break(1u);
        goto LABEL_37;
      }
      if (v12 < v23)
      {
        unint64_t v13 = *(void *)(v22 + 8 * v12);
        if (v13) {
          goto LABEL_10;
        }
        int64_t v14 = v8 + 2;
        ++v8;
        if (v12 + 1 < v23)
        {
          unint64_t v13 = *(void *)(v22 + 8 * v14);
          if (v13) {
            goto LABEL_13;
          }
          int64_t v8 = v12 + 1;
          if (v12 + 2 < v23)
          {
            unint64_t v13 = *(void *)(v22 + 8 * (v12 + 2));
            if (v13)
            {
              v12 += 2;
              goto LABEL_10;
            }
            int64_t v14 = v12 + 3;
            int64_t v8 = v12 + 2;
            if (v12 + 3 < v23) {
              break;
            }
          }
        }
      }
LABEL_24:
      unint64_t v6 = 0;
      long long v27 = 0u;
      long long v28 = 0u;
      long long v26 = 0u;
    }
    unint64_t v13 = *(void *)(v22 + 8 * v14);
    if (v13)
    {
LABEL_13:
      int64_t v12 = v14;
LABEL_10:
      unint64_t v6 = (v13 - 1) & v13;
      unint64_t v10 = __clz(__rbit64(v13)) + (v12 << 6);
      int64_t v8 = v12;
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v12 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v12 >= v23)
    {
      int64_t v8 = v23 - 1;
      goto LABEL_24;
    }
    unint64_t v13 = *(void *)(v22 + 8 * v12);
    ++v14;
    if (v13) {
      goto LABEL_10;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C8CB7B8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA565EA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C8CB7BF8()
{
  unint64_t result = qword_1EA565EB0;
  if (!qword_1EA565EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA565EB0);
  }
  return result;
}

double sub_1C8CB7C4C@<D0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  return ExtensionFieldValueSet.subscript.getter(*a1, a2);
}

uint64_t sub_1C8CB7C88()
{
  return 0;
}

ValueMetadata *type metadata accessor for ExtensionFieldValueSet()
{
  return &type metadata for ExtensionFieldValueSet;
}

uint64_t sub_1C8CB7CA8()
{
  return sub_1C8D88850();
}

unint64_t Google_Protobuf_Syntax.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = result < 2;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

uint64_t Google_Protobuf_Syntax.rawValue.getter()
{
  if (v0[8]) {
    return *(void *)v0 != 0;
  }
  else {
    return *(void *)v0;
  }
}

unint64_t sub_1C8CB7D04@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = result < 2;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

uint64_t sub_1C8CB7D1C()
{
  if (v0[8]) {
    return *(void *)v0 != 0;
  }
  else {
    return *(void *)v0;
  }
}

void *sub_1C8CB7D38@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2 = *result >= 2uLL;
  *(void *)a2 = *result;
  char v3 = !v2;
  *(unsigned char *)(a2 + 8) = v3;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

void sub_1C8CB7D54(void *a1@<X8>)
{
  uint64_t v2 = *v1;
  if (*((unsigned char *)v1 + 8)) {
    uint64_t v2 = *v1 != 0;
  }
  *a1 = v2;
}

uint64_t sub_1C8CB7D74()
{
  return sub_1C8D888A0();
}

uint64_t sub_1C8CB7DCC()
{
  return sub_1C8D88850();
}

uint64_t sub_1C8CB7E0C()
{
  return sub_1C8D888A0();
}

BOOL sub_1C8CB7E60(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  if (*((unsigned char *)a1 + 8)) {
    uint64_t v2 = *a1 != 0;
  }
  uint64_t v3 = *a2 != 0;
  if (!*((unsigned char *)a2 + 8)) {
    uint64_t v3 = *a2;
  }
  return v2 == v3;
}

BOOL sub_1C8CB7E9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1 == a3;
}

void sub_1C8CB7EA8()
{
  qword_1EA565EE0 = (uint64_t)&unk_1F2350160;
}

uint64_t static Google_Protobuf_Syntax.allCases.getter()
{
  return sub_1C8CB95DC(&qword_1EA5659E8);
}

uint64_t static Google_Protobuf_Syntax.allCases.setter(uint64_t a1)
{
  return sub_1C8CB965C(a1, &qword_1EA5659E8, &qword_1EA565EE0);
}

uint64_t (*static Google_Protobuf_Syntax.allCases.modify())()
{
  if (qword_1EA5659E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1C8CB7F8C@<X0>(void *a1@<X8>)
{
  return sub_1C8CB9774(&qword_1EA5659E8, &qword_1EA565EE0, a1);
}

uint64_t Google_Protobuf_Type.name.setter(uint64_t a1, uint64_t a2)
{
  return sub_1C8CB98E0(a1, a2, (void (*)(void))type metadata accessor for Google_Protobuf_Type._StorageClass, 97, sub_1C8CC1C48);
}

uint64_t type metadata accessor for Google_Protobuf_Type._StorageClass()
{
  return self;
}

void (*Google_Protobuf_Type.name.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 24);
  v3[9] = *(void *)(v4 + 16);
  v3[10] = v5;
  swift_bridgeObjectRetain();
  return sub_1C8CB8088;
}

void sub_1C8CB8088(uint64_t a1, char a2)
{
}

uint64_t Google_Protobuf_Type.fields.setter(uint64_t a1)
{
  return sub_1C8CB9D24(a1, (void (*)(void))type metadata accessor for Google_Protobuf_Type._StorageClass, 97, sub_1C8CC1C48);
}

void (*Google_Protobuf_Type.fields.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(void *)(v4 + 32);
  swift_bridgeObjectRetain();
  return sub_1C8CB816C;
}

void sub_1C8CB816C(uint64_t a1, char a2)
{
}

uint64_t Google_Protobuf_Type.oneofs.setter(uint64_t a1)
{
  return sub_1C8CBA15C(a1, (void (*)(void))type metadata accessor for Google_Protobuf_Type._StorageClass, 97, sub_1C8CC1C48);
}

void (*Google_Protobuf_Type.oneofs.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(void *)(v4 + 40);
  swift_bridgeObjectRetain();
  return sub_1C8CB8250;
}

void sub_1C8CB8250(uint64_t a1, char a2)
{
}

uint64_t Google_Protobuf_Type.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CB82C4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Type._StorageClass();
    swift_allocObject();
    uint64_t v4 = swift_retain();
    uint64_t v5 = sub_1C8CC1C48(v4);
    swift_release();
    *(void *)(a2 + 16) = v5;
    swift_release();
  }
  uint64_t v6 = *(void *)(a2 + 16);
  swift_beginAccess();
  *(void *)(v6 + 48) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_Type.options.setter(uint64_t a1)
{
  uint64_t v2 = v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Type._StorageClass();
    swift_allocObject();
    uint64_t v4 = swift_retain();
    uint64_t v5 = sub_1C8CC1C48(v4);
    swift_release();
    *(void *)(v2 + 16) = v5;
    swift_release();
  }
  uint64_t v6 = *(void *)(v2 + 16);
  swift_beginAccess();
  *(void *)(v6 + 48) = a1;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_Type.options.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(void *)(v4 + 48);
  swift_bridgeObjectRetain();
  return sub_1C8CB8494;
}

void sub_1C8CB8494(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 72);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v4 = v2[10];
      type metadata accessor for Google_Protobuf_Type._StorageClass();
      swift_allocObject();
      uint64_t v5 = swift_retain();
      uint64_t v6 = sub_1C8CC1C48(v5);
      swift_release();
      *(void *)(v4 + 16) = v6;
      swift_release();
    }
    uint64_t v7 = *(void *)(v2[10] + 16);
    swift_beginAccess();
    *(void *)(v7 + 48) = v3;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v8 = v2[10];
      type metadata accessor for Google_Protobuf_Type._StorageClass();
      swift_allocObject();
      uint64_t v9 = swift_retain();
      uint64_t v10 = sub_1C8CC1C48(v9);
      swift_release();
      *(void *)(v8 + 16) = v10;
      swift_release();
    }
    uint64_t v11 = *(void *)(v2[10] + 16);
    swift_beginAccess();
    *(void *)(v11 + 48) = v3;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

void Google_Protobuf_Type.sourceContext.getter(void *a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + 16);
  swift_beginAccess();
  uint64_t v4 = v3[7];
  uint64_t v5 = v3[8];
  uint64_t v6 = v3[9];
  unint64_t v7 = v3[10];
  unint64_t v8 = 0xC000000000000000;
  unint64_t v9 = 0xE000000000000000;
  if (v5) {
    uint64_t v10 = v3[7];
  }
  else {
    uint64_t v10 = 0;
  }
  if (v5)
  {
    unint64_t v9 = v3[8];
    uint64_t v11 = v3[9];
  }
  else
  {
    uint64_t v11 = 0;
  }
  if (v5) {
    unint64_t v8 = v3[10];
  }
  *a1 = v10;
  a1[1] = v9;
  a1[2] = v11;
  a1[3] = v8;
  sub_1C8CC1EAC(v4, v5, v6, v7);
}

void sub_1C8CB8660(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void **)(a1 + 16);
  swift_beginAccess();
  uint64_t v4 = v3[7];
  uint64_t v5 = v3[8];
  uint64_t v6 = v3[9];
  unint64_t v7 = v3[10];
  unint64_t v8 = 0xE000000000000000;
  unint64_t v9 = 0xC000000000000000;
  if (v5) {
    uint64_t v10 = v3[9];
  }
  else {
    uint64_t v10 = 0;
  }
  if (v5)
  {
    unint64_t v9 = v3[10];
    uint64_t v11 = v3[7];
  }
  else
  {
    uint64_t v11 = 0;
  }
  if (v5) {
    unint64_t v8 = v3[8];
  }
  *a2 = v11;
  a2[1] = v8;
  a2[2] = v10;
  a2[3] = v9;
  sub_1C8CC1EAC(v4, v5, v6, v7);
}

void Google_Protobuf_Type.sourceContext.setter(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v6 = a1[3];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Type._StorageClass();
    swift_allocObject();
    uint64_t v7 = swift_retain();
    uint64_t v8 = sub_1C8CC1C48(v7);
    swift_release();
    *(void *)(v2 + 16) = v8;
    swift_release();
  }
  unint64_t v9 = *(void **)(v2 + 16);
  swift_beginAccess();
  uint64_t v10 = v9[7];
  uint64_t v11 = v9[8];
  uint64_t v12 = v9[9];
  unint64_t v13 = v9[10];
  v9[7] = v3;
  v9[8] = v4;
  v9[9] = v5;
  v9[10] = v6;
  sub_1C8CC1EF8(v10, v11, v12, v13);
}

void (*Google_Protobuf_Type.sourceContext.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x70uLL);
  *a1 = v3;
  v3[13] = v1;
  uint64_t v4 = *(void **)(v1 + 16);
  swift_beginAccess();
  uint64_t v5 = v4[7];
  uint64_t v6 = v4[8];
  uint64_t v7 = v4[9];
  unint64_t v8 = v4[10];
  unint64_t v9 = 0xC000000000000000;
  unint64_t v10 = 0xE000000000000000;
  if (v6) {
    uint64_t v11 = v4[7];
  }
  else {
    uint64_t v11 = 0;
  }
  if (v6)
  {
    unint64_t v10 = v4[8];
    uint64_t v12 = v4[9];
  }
  else
  {
    uint64_t v12 = 0;
  }
  if (v6) {
    unint64_t v9 = v4[10];
  }
  *uint64_t v3 = v11;
  v3[1] = v10;
  v3[2] = v12;
  v3[3] = v9;
  sub_1C8CC1EAC(v5, v6, v7, v8);
  return sub_1C8CB8830;
}

void sub_1C8CB8830(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v4 = **a1;
  uint64_t v3 = (*a1)[1];
  uint64_t v6 = (*a1)[2];
  unint64_t v5 = (*a1)[3];
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1C8CA3CF8(v6, v5);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v7 = v2[13];
      type metadata accessor for Google_Protobuf_Type._StorageClass();
      swift_allocObject();
      uint64_t v8 = swift_retain();
      uint64_t v9 = sub_1C8CC1C48(v8);
      swift_release();
      *(void *)(v7 + 16) = v9;
      swift_release();
    }
    unint64_t v10 = *(void **)(v2[13] + 16);
    swift_beginAccess();
    uint64_t v11 = v10[7];
    uint64_t v12 = v10[8];
    uint64_t v13 = v10[9];
    unint64_t v14 = v10[10];
    v10[7] = v4;
    v10[8] = v3;
    v10[9] = v6;
    v10[10] = v5;
    sub_1C8CC1EF8(v11, v12, v13, v14);
    uint64_t v15 = v2[2];
    unint64_t v16 = v2[3];
    swift_bridgeObjectRelease();
    sub_1C8CA3D5C(v15, v16);
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v17 = v2[13];
      type metadata accessor for Google_Protobuf_Type._StorageClass();
      swift_allocObject();
      uint64_t v18 = swift_retain();
      uint64_t v19 = sub_1C8CC1C48(v18);
      swift_release();
      *(void *)(v17 + 16) = v19;
      swift_release();
    }
    uint64_t v20 = *(void **)(v2[13] + 16);
    swift_beginAccess();
    uint64_t v21 = v20[7];
    uint64_t v22 = v20[8];
    uint64_t v23 = v20[9];
    unint64_t v24 = v20[10];
    v20[7] = v4;
    v20[8] = v3;
    v20[9] = v6;
    v20[10] = v5;
    sub_1C8CC1EF8(v21, v22, v23, v24);
  }
  free(v2);
}

BOOL Google_Protobuf_Type.hasSourceContext.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  return *(void *)(v1 + 64) != 0;
}

Swift::Void __swiftcall Google_Protobuf_Type.clearSourceContext()()
{
  uint64_t v1 = v0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Type._StorageClass();
    swift_allocObject();
    uint64_t v2 = swift_retain();
    uint64_t v3 = sub_1C8CC1C48(v2);
    swift_release();
    *(void *)(v1 + 16) = v3;
    swift_release();
  }
  uint64_t v4 = *(void **)(v1 + 16);
  swift_beginAccess();
  uint64_t v5 = v4[7];
  uint64_t v6 = v4[8];
  uint64_t v7 = v4[9];
  unint64_t v8 = v4[10];
  *(_OWORD *)(v4 + 7) = 0u;
  *(_OWORD *)(v4 + 9) = 0u;
  sub_1C8CC1EF8(v5, v6, v7, v8);
}

uint64_t Google_Protobuf_Type.syntax.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t result = swift_beginAccess();
  char v5 = *(unsigned char *)(v3 + 96);
  *(void *)a1 = *(void *)(v3 + 88);
  *(unsigned char *)(a1 + 8) = v5;
  return result;
}

uint64_t sub_1C8CB8B10(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  char v4 = *((unsigned char *)a1 + 8);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Type._StorageClass();
    swift_allocObject();
    uint64_t v5 = swift_retain();
    uint64_t v6 = sub_1C8CC1C48(v5);
    swift_release();
    *(void *)(a2 + 16) = v6;
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t result = swift_beginAccess();
  *(void *)(v7 + 88) = v3;
  *(unsigned char *)(v7 + 96) = v4;
  return result;
}

uint64_t Google_Protobuf_Type.syntax.setter(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *a1;
  char v4 = *((unsigned char *)a1 + 8);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Type._StorageClass();
    swift_allocObject();
    uint64_t v5 = swift_retain();
    uint64_t v6 = sub_1C8CC1C48(v5);
    swift_release();
    *(void *)(v2 + 16) = v6;
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t result = swift_beginAccess();
  *(void *)(v7 + 88) = v3;
  *(unsigned char *)(v7 + 96) = v4;
  return result;
}

void (*Google_Protobuf_Type.syntax.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  char v5 = *(unsigned char *)(v4 + 96);
  v3[9] = *(void *)(v4 + 88);
  *((unsigned char *)v3 + 80) = v5;
  return sub_1C8CB8CE8;
}

void sub_1C8CB8CE8(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void *)(*(void *)a1 + 72);
  char v5 = *(unsigned char *)(*(void *)a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v7 = v3[11];
    type metadata accessor for Google_Protobuf_Type._StorageClass();
    swift_allocObject();
    uint64_t v8 = swift_retain();
    uint64_t v9 = sub_1C8CC1C48(v8);
    swift_release();
    *(void *)(v7 + 16) = v9;
    swift_release();
  }
LABEL_4:
  uint64_t v10 = *(void *)(v3[11] + 16);
  swift_beginAccess();
  *(void *)(v10 + 88) = v4;
  *(unsigned char *)(v10 + 96) = v5;
  free(v3);
}

uint64_t (*Google_Protobuf_Type.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Type.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_1C8CBACE8(&qword_1EA565A10, &qword_1EA565F38, a1);
}

void Google_Protobuf_Field.kind.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 8);
  *(void *)a1 = *(void *)v1;
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t Google_Protobuf_Field.kind.setter(uint64_t result)
{
  char v2 = *(unsigned char *)(result + 8);
  *(void *)uint64_t v1 = *(void *)result;
  *(unsigned char *)(v1 + 8) = v2;
  return result;
}

uint64_t (*Google_Protobuf_Field.kind.modify())()
{
  return nullsub_1;
}

void Google_Protobuf_Field.cardinality.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 24);
  *(void *)a1 = *(void *)(v1 + 16);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t Google_Protobuf_Field.cardinality.setter(uint64_t result)
{
  char v2 = *(unsigned char *)(result + 8);
  *(void *)(v1 + 16) = *(void *)result;
  *(unsigned char *)(v1 + 24) = v2;
  return result;
}

uint64_t (*Google_Protobuf_Field.cardinality.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Field.number.getter()
{
  return *(unsigned int *)(v0 + 28);
}

uint64_t Google_Protobuf_Field.number.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 28) = result;
  return result;
}

uint64_t (*Google_Protobuf_Field.number.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Field.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Google_Protobuf_Field.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*Google_Protobuf_Field.name.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Field.typeURL.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Google_Protobuf_Field.typeURL.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t (*Google_Protobuf_Field.typeURL.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Field.oneofIndex.getter()
{
  return *(unsigned int *)(v0 + 64);
}

uint64_t Google_Protobuf_Field.oneofIndex.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 64) = result;
  return result;
}

uint64_t (*Google_Protobuf_Field.oneofIndex.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Field.packed.getter()
{
  return *(unsigned __int8 *)(v0 + 68);
}

uint64_t Google_Protobuf_Field.packed.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 68) = result;
  return result;
}

uint64_t (*Google_Protobuf_Field.packed.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Field.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_Field.options.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 72) = a1;
  return result;
}

uint64_t (*Google_Protobuf_Field.options.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Field.jsonName.getter()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Google_Protobuf_Field.jsonName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = a2;
  return result;
}

uint64_t (*Google_Protobuf_Field.jsonName.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Field.defaultValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Google_Protobuf_Field.defaultValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = a2;
  return result;
}

uint64_t (*Google_Protobuf_Field.defaultValue.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Field.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 112);
  unint64_t v3 = *(void *)(v1 + 120);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C8CA3CF8(v2, v3);
}

uint64_t Google_Protobuf_Field.unknownFields.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C8CA3D5C(*(void *)(v1 + 112), *(void *)(v1 + 120));
  *(void *)(v1 + 112) = v2;
  *(void *)(v1 + 120) = v3;
  return result;
}

uint64_t (*Google_Protobuf_Field.unknownFields.modify())()
{
  return nullsub_1;
}

unint64_t Google_Protobuf_Field.Kind.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = result < 0x13;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

unint64_t sub_1C8CB922C@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return Google_Protobuf_Field.Kind.init(rawValue:)(*a1, a2);
}

uint64_t sub_1C8CB9234@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Google_Protobuf_Field.Cardinality.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1C8CB925C()
{
  return sub_1C8D888A0();
}

uint64_t sub_1C8CB92AC()
{
  return sub_1C8CB7CA8();
}

uint64_t sub_1C8CB92B8()
{
  return sub_1C8D888A0();
}

BOOL sub_1C8CB9304(uint64_t a1, uint64_t *a2)
{
  return sub_1C8CB7E9C(*(void *)a1, *(unsigned __int8 *)(a1 + 8), *a2);
}

void Google_Protobuf_Field.Cardinality.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

unint64_t Google_Protobuf_Field.Cardinality.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = result < 4;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

uint64_t Google_Protobuf_Field.Cardinality.rawValue.getter()
{
  return *(void *)v0;
}

void sub_1C8CB9350(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t sub_1C8CB9364()
{
  return *(void *)v0;
}

unint64_t sub_1C8CB936C@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return Google_Protobuf_Field.Cardinality.init(rawValue:)(*a1, a2);
}

void sub_1C8CB9374(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1C8CB9380()
{
  return sub_1C8D888A0();
}

uint64_t sub_1C8CB93C8()
{
  return sub_1C8D88850();
}

uint64_t sub_1C8CB93F4()
{
  return sub_1C8D888A0();
}

BOOL sub_1C8CB9438(void *a1, void *a2)
{
  return *a1 == *a2;
}

double Google_Protobuf_Field.init()@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  *(void *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 24) = 1;
  *(_DWORD *)(a1 + 28) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0xE000000000000000;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0xE000000000000000;
  *(_DWORD *)(a1 + 64) = 0;
  *(unsigned char *)(a1 + 68) = 0;
  *(void *)(a1 + 72) = MEMORY[0x1E4FBC860];
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0xE000000000000000;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0xE000000000000000;
  double result = 0.0;
  *(_OWORD *)(a1 + 112) = xmmword_1C8D8AD80;
  return result;
}

void sub_1C8CB949C()
{
  qword_1EA565EE8 = (uint64_t)&unk_1F23501A0;
}

uint64_t static Google_Protobuf_Field.Kind.allCases.getter()
{
  return sub_1C8CB95DC(&qword_1EA5659F0);
}

uint64_t static Google_Protobuf_Field.Kind.allCases.setter(uint64_t a1)
{
  return sub_1C8CB965C(a1, &qword_1EA5659F0, &qword_1EA565EE8);
}

uint64_t (*static Google_Protobuf_Field.Kind.allCases.modify())()
{
  if (qword_1EA5659F0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1C8CB9580@<X0>(void *a1@<X8>)
{
  return sub_1C8CB9774(&qword_1EA5659F0, &qword_1EA565EE8, a1);
}

void sub_1C8CB95A4()
{
  qword_1EA565EF0 = (uint64_t)&unk_1F23502F0;
}

uint64_t static Google_Protobuf_Field.Cardinality.allCases.getter()
{
  return sub_1C8CB95DC(&qword_1EA5659F8);
}

uint64_t sub_1C8CB95DC(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static Google_Protobuf_Field.Cardinality.allCases.setter(uint64_t a1)
{
  return sub_1C8CB965C(a1, &qword_1EA5659F8, &qword_1EA565EF0);
}

uint64_t sub_1C8CB965C(uint64_t a1, void *a2, void *a3)
{
  if (*a2 != -1) {
    swift_once();
  }
  swift_beginAccess();
  *a3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static Google_Protobuf_Field.Cardinality.allCases.modify())()
{
  if (qword_1EA5659F8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1C8CB9750@<X0>(void *a1@<X8>)
{
  return sub_1C8CB9774(&qword_1EA5659F8, &qword_1EA565EF0, a1);
}

uint64_t sub_1C8CB9774@<X0>(void *a1@<X2>, void *a2@<X3>, void *a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  swift_beginAccess();
  *a3 = *a2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CB97E0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v11 = *a1;
  uint64_t v10 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a5(0);
    swift_allocObject();
    uint64_t v12 = swift_retain();
    uint64_t v13 = a7(v12);
    swift_release();
    *(void *)(a2 + 16) = v13;
    swift_release();
  }
  uint64_t v14 = *(void *)(a2 + 16);
  swift_beginAccess();
  *(void *)(v14 + 16) = v11;
  *(void *)(v14 + 24) = v10;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_Enum.name.setter(uint64_t a1, uint64_t a2)
{
  return sub_1C8CB98E0(a1, a2, (void (*)(void))type metadata accessor for Google_Protobuf_Enum._StorageClass, 89, sub_1C8CC1A30);
}

uint64_t sub_1C8CB98E0(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v8 = v5;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a3(0);
    swift_allocObject();
    uint64_t v11 = swift_retain();
    uint64_t v12 = a5(v11);
    swift_release();
    *(void *)(v8 + 16) = v12;
    swift_release();
  }
  uint64_t v13 = *(void *)(v8 + 16);
  swift_beginAccess();
  *(void *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_Enum.name.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 24);
  v3[9] = *(void *)(v4 + 16);
  v3[10] = v5;
  swift_bridgeObjectRetain();
  return sub_1C8CB9A2C;
}

void sub_1C8CB9A2C(uint64_t a1, char a2)
{
}

void sub_1C8CB9A5C(uint64_t a1, char a2, void (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v7 = *(void **)a1;
  uint64_t v8 = *(void *)(*(void *)a1 + 72);
  uint64_t v9 = *(void *)(*(void *)a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v10 = v7[11];
      a3(0);
      swift_allocObject();
      uint64_t v11 = swift_retain();
      uint64_t v12 = a5(v11);
      swift_release();
      *(void *)(v10 + 16) = v12;
      swift_release();
    }
    uint64_t v13 = *(void *)(v7[11] + 16);
    swift_beginAccess();
    *(void *)(v13 + 16) = v8;
    *(void *)(v13 + 24) = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v14 = v7[11];
      a3(0);
      swift_allocObject();
      uint64_t v15 = swift_retain();
      uint64_t v16 = a5(v15);
      swift_release();
      *(void *)(v14 + 16) = v16;
      swift_release();
    }
    uint64_t v17 = *(void *)(v7[11] + 16);
    swift_beginAccess();
    *(void *)(v17 + 16) = v8;
    *(void *)(v17 + 24) = v9;
  }
  swift_bridgeObjectRelease();
  free(v7);
}

uint64_t _s20SiriOntologyProtobuf07Google_C5_TypeV6fieldsSayAA0d1_C6_FieldVGvg_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CB9C2C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v10 = *a1;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a5(0);
    swift_allocObject();
    uint64_t v11 = swift_retain();
    uint64_t v12 = a7(v11);
    swift_release();
    *(void *)(a2 + 16) = v12;
    swift_release();
  }
  uint64_t v13 = *(void *)(a2 + 16);
  swift_beginAccess();
  *(void *)(v13 + 32) = v10;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_Enum.enumvalue.setter(uint64_t a1)
{
  return sub_1C8CB9D24(a1, (void (*)(void))type metadata accessor for Google_Protobuf_Enum._StorageClass, 89, sub_1C8CC1A30);
}

uint64_t sub_1C8CB9D24(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v7 = v4;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a2(0);
    swift_allocObject();
    uint64_t v9 = swift_retain();
    uint64_t v10 = a4(v9);
    swift_release();
    *(void *)(v7 + 16) = v10;
    swift_release();
  }
  uint64_t v11 = *(void *)(v7 + 16);
  swift_beginAccess();
  *(void *)(v11 + 32) = a1;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_Enum.enumvalue.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(void *)(v4 + 32);
  swift_bridgeObjectRetain();
  return sub_1C8CB9E6C;
}

void sub_1C8CB9E6C(uint64_t a1, char a2)
{
}

void sub_1C8CB9E9C(uint64_t a1, char a2, void (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v7 = *(void **)a1;
  uint64_t v8 = *(void *)(*(void *)a1 + 72);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = v7[10];
      a3(0);
      swift_allocObject();
      uint64_t v10 = swift_retain();
      uint64_t v11 = a5(v10);
      swift_release();
      *(void *)(v9 + 16) = v11;
      swift_release();
    }
    uint64_t v12 = *(void *)(v7[10] + 16);
    swift_beginAccess();
    *(void *)(v12 + 32) = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v13 = v7[10];
      a3(0);
      swift_allocObject();
      uint64_t v14 = swift_retain();
      uint64_t v15 = a5(v14);
      swift_release();
      *(void *)(v13 + 16) = v15;
      swift_release();
    }
    uint64_t v16 = *(void *)(v7[10] + 16);
    swift_beginAccess();
    *(void *)(v16 + 32) = v8;
  }
  swift_bridgeObjectRelease();
  free(v7);
}

uint64_t _s20SiriOntologyProtobuf07Google_C5_TypeV6oneofsSaySSGvg_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CBA064(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v10 = *a1;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a5(0);
    swift_allocObject();
    uint64_t v11 = swift_retain();
    uint64_t v12 = a7(v11);
    swift_release();
    *(void *)(a2 + 16) = v12;
    swift_release();
  }
  uint64_t v13 = *(void *)(a2 + 16);
  swift_beginAccess();
  *(void *)(v13 + 40) = v10;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_Enum.options.setter(uint64_t a1)
{
  return sub_1C8CBA15C(a1, (void (*)(void))type metadata accessor for Google_Protobuf_Enum._StorageClass, 89, sub_1C8CC1A30);
}

uint64_t sub_1C8CBA15C(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v7 = v4;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a2(0);
    swift_allocObject();
    uint64_t v9 = swift_retain();
    uint64_t v10 = a4(v9);
    swift_release();
    *(void *)(v7 + 16) = v10;
    swift_release();
  }
  uint64_t v11 = *(void *)(v7 + 16);
  swift_beginAccess();
  *(void *)(v11 + 40) = a1;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_Enum.options.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(void *)(v4 + 40);
  swift_bridgeObjectRetain();
  return sub_1C8CBA2A4;
}

void sub_1C8CBA2A4(uint64_t a1, char a2)
{
}

void sub_1C8CBA2D4(uint64_t a1, char a2, void (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v7 = *(void **)a1;
  uint64_t v8 = *(void *)(*(void *)a1 + 72);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = v7[10];
      a3(0);
      swift_allocObject();
      uint64_t v10 = swift_retain();
      uint64_t v11 = a5(v10);
      swift_release();
      *(void *)(v9 + 16) = v11;
      swift_release();
    }
    uint64_t v12 = *(void *)(v7[10] + 16);
    swift_beginAccess();
    *(void *)(v12 + 40) = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v13 = v7[10];
      a3(0);
      swift_allocObject();
      uint64_t v14 = swift_retain();
      uint64_t v15 = a5(v14);
      swift_release();
      *(void *)(v13 + 16) = v15;
      swift_release();
    }
    uint64_t v16 = *(void *)(v7[10] + 16);
    swift_beginAccess();
    *(void *)(v16 + 40) = v8;
  }
  swift_bridgeObjectRelease();
  free(v7);
}

void Google_Protobuf_Enum.sourceContext.getter(void *a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + 16);
  swift_beginAccess();
  uint64_t v4 = v3[6];
  uint64_t v5 = v3[7];
  uint64_t v6 = v3[8];
  unint64_t v7 = v3[9];
  unint64_t v8 = 0xC000000000000000;
  unint64_t v9 = 0xE000000000000000;
  if (v5) {
    uint64_t v10 = v3[6];
  }
  else {
    uint64_t v10 = 0;
  }
  if (v5)
  {
    unint64_t v9 = v3[7];
    uint64_t v11 = v3[8];
  }
  else
  {
    uint64_t v11 = 0;
  }
  if (v5) {
    unint64_t v8 = v3[9];
  }
  *a1 = v10;
  a1[1] = v9;
  a1[2] = v11;
  a1[3] = v8;
  sub_1C8CC1EAC(v4, v5, v6, v7);
}

void sub_1C8CBA4C4(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void **)(a1 + 16);
  swift_beginAccess();
  uint64_t v4 = v3[6];
  uint64_t v5 = v3[7];
  uint64_t v6 = v3[8];
  unint64_t v7 = v3[9];
  unint64_t v8 = 0xE000000000000000;
  unint64_t v9 = 0xC000000000000000;
  if (v5) {
    uint64_t v10 = v3[8];
  }
  else {
    uint64_t v10 = 0;
  }
  if (v5)
  {
    unint64_t v9 = v3[9];
    uint64_t v11 = v3[6];
  }
  else
  {
    uint64_t v11 = 0;
  }
  if (v5) {
    unint64_t v8 = v3[7];
  }
  *a2 = v11;
  a2[1] = v8;
  a2[2] = v10;
  a2[3] = v9;
  sub_1C8CC1EAC(v4, v5, v6, v7);
}

uint64_t sub_1C8CBA534(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void *))
{
  uint64_t v6 = a1[1];
  uint64_t v7 = a1[2];
  unint64_t v8 = a1[3];
  v10[0] = *a1;
  v10[1] = v6;
  v10[2] = v7;
  v10[3] = v8;
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(v7, v8);
  return a5(v10);
}

void Google_Protobuf_Enum.sourceContext.setter(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v6 = a1[3];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Enum._StorageClass();
    swift_allocObject();
    uint64_t v7 = swift_retain();
    uint64_t v8 = sub_1C8CC1A30(v7);
    swift_release();
    *(void *)(v2 + 16) = v8;
    swift_release();
  }
  unint64_t v9 = *(void **)(v2 + 16);
  swift_beginAccess();
  uint64_t v10 = v9[6];
  uint64_t v11 = v9[7];
  uint64_t v12 = v9[8];
  unint64_t v13 = v9[9];
  v9[6] = v3;
  v9[7] = v4;
  v9[8] = v5;
  v9[9] = v6;
  sub_1C8CC1EF8(v10, v11, v12, v13);
}

void (*Google_Protobuf_Enum.sourceContext.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x70uLL);
  *a1 = v3;
  v3[13] = v1;
  uint64_t v4 = *(void **)(v1 + 16);
  swift_beginAccess();
  uint64_t v5 = v4[6];
  uint64_t v6 = v4[7];
  uint64_t v7 = v4[8];
  unint64_t v8 = v4[9];
  unint64_t v9 = 0xC000000000000000;
  unint64_t v10 = 0xE000000000000000;
  if (v6) {
    uint64_t v11 = v4[6];
  }
  else {
    uint64_t v11 = 0;
  }
  if (v6)
  {
    unint64_t v10 = v4[7];
    uint64_t v12 = v4[8];
  }
  else
  {
    uint64_t v12 = 0;
  }
  if (v6) {
    unint64_t v9 = v4[9];
  }
  *uint64_t v3 = v11;
  v3[1] = v10;
  v3[2] = v12;
  v3[3] = v9;
  sub_1C8CC1EAC(v5, v6, v7, v8);
  return sub_1C8CBA6F8;
}

void sub_1C8CBA6F8(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v4 = **a1;
  uint64_t v3 = (*a1)[1];
  uint64_t v6 = (*a1)[2];
  unint64_t v5 = (*a1)[3];
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1C8CA3CF8(v6, v5);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v7 = v2[13];
      type metadata accessor for Google_Protobuf_Enum._StorageClass();
      swift_allocObject();
      uint64_t v8 = swift_retain();
      uint64_t v9 = sub_1C8CC1A30(v8);
      swift_release();
      *(void *)(v7 + 16) = v9;
      swift_release();
    }
    unint64_t v10 = *(void **)(v2[13] + 16);
    swift_beginAccess();
    uint64_t v11 = v10[6];
    uint64_t v12 = v10[7];
    uint64_t v13 = v10[8];
    unint64_t v14 = v10[9];
    v10[6] = v4;
    v10[7] = v3;
    v10[8] = v6;
    v10[9] = v5;
    sub_1C8CC1EF8(v11, v12, v13, v14);
    uint64_t v15 = v2[2];
    unint64_t v16 = v2[3];
    swift_bridgeObjectRelease();
    sub_1C8CA3D5C(v15, v16);
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v17 = v2[13];
      type metadata accessor for Google_Protobuf_Enum._StorageClass();
      swift_allocObject();
      uint64_t v18 = swift_retain();
      uint64_t v19 = sub_1C8CC1A30(v18);
      swift_release();
      *(void *)(v17 + 16) = v19;
      swift_release();
    }
    uint64_t v20 = *(void **)(v2[13] + 16);
    swift_beginAccess();
    uint64_t v21 = v20[6];
    uint64_t v22 = v20[7];
    uint64_t v23 = v20[8];
    unint64_t v24 = v20[9];
    v20[6] = v4;
    v20[7] = v3;
    v20[8] = v6;
    v20[9] = v5;
    sub_1C8CC1EF8(v21, v22, v23, v24);
  }
  free(v2);
}

BOOL Google_Protobuf_Enum.hasSourceContext.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  return *(void *)(v1 + 56) != 0;
}

Swift::Void __swiftcall Google_Protobuf_Enum.clearSourceContext()()
{
  uint64_t v1 = v0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Enum._StorageClass();
    swift_allocObject();
    uint64_t v2 = swift_retain();
    uint64_t v3 = sub_1C8CC1A30(v2);
    swift_release();
    *(void *)(v1 + 16) = v3;
    swift_release();
  }
  uint64_t v4 = *(void **)(v1 + 16);
  swift_beginAccess();
  uint64_t v5 = v4[6];
  uint64_t v6 = v4[7];
  uint64_t v7 = v4[8];
  unint64_t v8 = v4[9];
  *((_OWORD *)v4 + 3) = 0u;
  *((_OWORD *)v4 + 4) = 0u;
  sub_1C8CC1EF8(v5, v6, v7, v8);
}

uint64_t Google_Protobuf_Enum.syntax.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t result = swift_beginAccess();
  char v5 = *(unsigned char *)(v3 + 88);
  *(void *)a1 = *(void *)(v3 + 80);
  *(unsigned char *)(a1 + 8) = v5;
  return result;
}

uint64_t sub_1C8CBA9D4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  char v4 = *((unsigned char *)a1 + 8);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Enum._StorageClass();
    swift_allocObject();
    uint64_t v5 = swift_retain();
    uint64_t v6 = sub_1C8CC1A30(v5);
    swift_release();
    *(void *)(a2 + 16) = v6;
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t result = swift_beginAccess();
  *(void *)(v7 + 80) = v3;
  *(unsigned char *)(v7 + 88) = v4;
  return result;
}

uint64_t Google_Protobuf_Enum.syntax.setter(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *a1;
  char v4 = *((unsigned char *)a1 + 8);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Enum._StorageClass();
    swift_allocObject();
    uint64_t v5 = swift_retain();
    uint64_t v6 = sub_1C8CC1A30(v5);
    swift_release();
    *(void *)(v2 + 16) = v6;
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t result = swift_beginAccess();
  *(void *)(v7 + 80) = v3;
  *(unsigned char *)(v7 + 88) = v4;
  return result;
}

void (*Google_Protobuf_Enum.syntax.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  char v5 = *(unsigned char *)(v4 + 88);
  v3[9] = *(void *)(v4 + 80);
  *((unsigned char *)v3 + 80) = v5;
  return sub_1C8CBABAC;
}

void sub_1C8CBABAC(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void *)(*(void *)a1 + 72);
  char v5 = *(unsigned char *)(*(void *)a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v7 = v3[11];
    type metadata accessor for Google_Protobuf_Enum._StorageClass();
    swift_allocObject();
    uint64_t v8 = swift_retain();
    uint64_t v9 = sub_1C8CC1A30(v8);
    swift_release();
    *(void *)(v7 + 16) = v9;
    swift_release();
  }
LABEL_4:
  uint64_t v10 = *(void *)(v3[11] + 16);
  swift_beginAccess();
  *(void *)(v10 + 80) = v4;
  *(unsigned char *)(v10 + 88) = v5;
  free(v3);
}

uint64_t Google_Protobuf_Enum.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_1C8CA3CF8(v2, v3);
}

uint64_t (*Google_Protobuf_Enum.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Enum.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_1C8CBACE8(&qword_1EA565A38, &qword_1EA565FC0, a1);
}

uint64_t sub_1C8CBACE8@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  *(_OWORD *)a3 = xmmword_1C8D8AD80;
  if (*a1 != -1) {
    swift_once();
  }
  *(void *)(a3 + 16) = *a2;
  return swift_retain();
}

uint64_t Google_Protobuf_EnumValue.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Google_Protobuf_EnumValue.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Google_Protobuf_EnumValue.name.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_EnumValue.number.getter()
{
  return *(unsigned int *)(v0 + 16);
}

uint64_t Google_Protobuf_EnumValue.number.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*Google_Protobuf_EnumValue.number.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_EnumValue.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_EnumValue.options.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t (*Google_Protobuf_EnumValue.options.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_EnumValue.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  unint64_t v3 = *(void *)(v1 + 40);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C8CA3CF8(v2, v3);
}

uint64_t Google_Protobuf_EnumValue.unknownFields.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C8CA3D5C(*(void *)(v1 + 32), *(void *)(v1 + 40));
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v3;
  return result;
}

uint64_t (*Google_Protobuf_EnumValue.unknownFields.modify())()
{
  return nullsub_1;
}

double Google_Protobuf_EnumValue.init()@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(_DWORD *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = MEMORY[0x1E4FBC860];
  double result = 0.0;
  *(_OWORD *)(a1 + 32) = xmmword_1C8D8AD80;
  return result;
}

uint64_t _s20SiriOntologyProtobuf07Google_C5_TypeV4nameSSvg_0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t Google_Protobuf_Option.name.setter(uint64_t a1, uint64_t a2)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    char v5 = *(void **)(v2 + 16);
    type metadata accessor for Google_Protobuf_Option._StorageClass();
    uint64_t v6 = (void *)swift_allocObject();
    void v6[2] = 0;
    v6[3] = 0xE000000000000000;
    v6[5] = 0;
    v6[6] = 0;
    v6[4] = 0;
    swift_beginAccess();
    uint64_t v8 = v5[2];
    uint64_t v7 = v5[3];
    swift_beginAccess();
    void v6[2] = v8;
    v6[3] = v7;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v9 = v5[4];
    unint64_t v10 = v5[5];
    uint64_t v11 = v5[6];
    sub_1C8CC1F8C(v9, v10, v11);
    swift_release();
    swift_beginAccess();
    uint64_t v12 = v6[4];
    unint64_t v13 = v6[5];
    uint64_t v14 = v6[6];
    v6[4] = v9;
    v6[5] = v10;
    v6[6] = v11;
    sub_1C8CB6084(v12, v13, v14);
    *(void *)(v2 + 16) = v6;
    swift_release();
  }
  uint64_t v15 = *(void *)(v2 + 16);
  swift_beginAccess();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_Option.name.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 24);
  v3[3] = *(void *)(v4 + 16);
  v3[4] = v5;
  swift_bridgeObjectRetain();
  return sub_1C8CBB11C;
}

void sub_1C8CBB11C(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 24);
  uint64_t v4 = *(void *)(*(void *)a1 + 32);
  if (a2)
  {
    swift_bridgeObjectRetain();
    Google_Protobuf_Option.name.setter(v3, v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    Google_Protobuf_Option.name.setter(*(void *)(*(void *)a1 + 24), v4);
  }
  free(v2);
}

uint64_t Google_Protobuf_Option.value.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + 16);
  swift_beginAccess();
  uint64_t v4 = v3[4];
  unint64_t v5 = v3[5];
  uint64_t v6 = v3[6];
  if (v6)
  {
    *a1 = v4;
    a1[1] = v5;
    a1[2] = v6;
  }
  else
  {
    *(_OWORD *)a1 = xmmword_1C8D8AD80;
    if (qword_1EA565C88 != -1) {
      swift_once();
    }
    a1[2] = qword_1EA575078;
    swift_retain();
  }
  return sub_1C8CC1F8C(v4, v5, v6);
}

uint64_t sub_1C8CBB250@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  unint64_t v5 = (void *)a1[2];
  swift_beginAccess();
  uint64_t v6 = v5[4];
  unint64_t v7 = v5[5];
  uint64_t v8 = v5[6];
  if (v8)
  {
    sub_1C8CA3CF8(v3, v4);
    swift_retain();
    uint64_t v9 = v8;
    uint64_t v10 = v6;
    unint64_t v11 = v7;
  }
  else
  {
    sub_1C8CA3CF8(v3, v4);
    uint64_t v12 = qword_1EA565C88;
    swift_retain();
    if (v12 != -1) {
      swift_once();
    }
    uint64_t v9 = qword_1EA575078;
    swift_retain();
    uint64_t v10 = 0;
    unint64_t v11 = 0xC000000000000000;
  }
  sub_1C8CC1F8C(v6, v7, v8);
  sub_1C8CA3D5C(v3, v4);
  uint64_t result = swift_release();
  *a2 = v10;
  a2[1] = v11;
  a2[2] = v9;
  return result;
}

uint64_t sub_1C8CBB36C(uint64_t *a1)
{
  unint64_t v1 = a1[1];
  uint64_t v2 = a1[2];
  v4[0] = *a1;
  v4[1] = v1;
  v4[2] = v2;
  sub_1C8CA3CF8(v4[0], v1);
  swift_retain();
  return Google_Protobuf_Option.value.setter(v4);
}

uint64_t Google_Protobuf_Option.value.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v20 = v2;
    unint64_t v5 = *(void **)(v1 + 16);
    type metadata accessor for Google_Protobuf_Option._StorageClass();
    uint64_t v6 = (void *)swift_allocObject();
    void v6[2] = 0;
    v6[3] = 0xE000000000000000;
    v6[5] = 0;
    v6[6] = 0;
    v6[4] = 0;
    swift_beginAccess();
    uint64_t v8 = v5[2];
    uint64_t v7 = v5[3];
    swift_beginAccess();
    void v6[2] = v8;
    v6[3] = v7;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v9 = v5[4];
    unint64_t v10 = v5[5];
    uint64_t v11 = v5[6];
    sub_1C8CC1F8C(v9, v10, v11);
    uint64_t v2 = v20;
    swift_release();
    swift_beginAccess();
    uint64_t v12 = v6[4];
    unint64_t v13 = v6[5];
    uint64_t v14 = v6[6];
    v6[4] = v9;
    v6[5] = v10;
    v6[6] = v11;
    sub_1C8CB6084(v12, v13, v14);
    *(void *)(v1 + 16) = v6;
    swift_release();
  }
  uint64_t v15 = *(void **)(v1 + 16);
  swift_beginAccess();
  uint64_t v16 = v15[4];
  unint64_t v17 = v15[5];
  uint64_t v18 = v15[6];
  v15[4] = v2;
  v15[5] = v3;
  v15[6] = v4;
  return sub_1C8CB6084(v16, v17, v18);
}

void (*Google_Protobuf_Option.value.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[6] = v1;
  uint64_t v4 = *(void **)(v1 + 16);
  swift_beginAccess();
  uint64_t v5 = v4[4];
  unint64_t v6 = v4[5];
  uint64_t v7 = v4[6];
  if (v7)
  {
    *uint64_t v3 = v5;
    v3[1] = v6;
    v3[2] = v7;
  }
  else
  {
    *(_OWORD *)uint64_t v3 = xmmword_1C8D8AD80;
    if (qword_1EA565C88 != -1) {
      swift_once();
    }
    v3[2] = qword_1EA575078;
    swift_retain();
  }
  sub_1C8CC1F8C(v5, v6, v7);
  return sub_1C8CBB624;
}

void sub_1C8CBB624(uint64_t **a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = **a1;
  unint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  v7[0] = v4;
  v7[1] = v5;
  v7[2] = v6;
  if (a2)
  {
    sub_1C8CA3CF8(v4, v5);
    swift_retain();
    Google_Protobuf_Option.value.setter(v7);
    sub_1C8CA3D5C(*v3, v3[1]);
    swift_release();
  }
  else
  {
    Google_Protobuf_Option.value.setter(v7);
  }
  free(v3);
}

BOOL Google_Protobuf_Option.hasValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  return *(void *)(v1 + 48) != 0;
}

Swift::Void __swiftcall Google_Protobuf_Option.clearValue()()
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v1 = *(void **)(v0 + 16);
    type metadata accessor for Google_Protobuf_Option._StorageClass();
    uint64_t v2 = (void *)swift_allocObject();
    v2[2] = 0;
    v2[3] = 0xE000000000000000;
    v2[5] = 0;
    v2[6] = 0;
    long long v2[4] = 0;
    swift_beginAccess();
    uint64_t v4 = v1[2];
    uint64_t v3 = v1[3];
    swift_beginAccess();
    v2[2] = v4;
    v2[3] = v3;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v5 = v1[4];
    unint64_t v6 = v1[5];
    uint64_t v7 = v1[6];
    sub_1C8CC1F8C(v5, v6, v7);
    swift_release();
    swift_beginAccess();
    uint64_t v8 = v2[4];
    unint64_t v9 = v2[5];
    uint64_t v10 = v2[6];
    long long v2[4] = v5;
    v2[5] = v6;
    v2[6] = v7;
    sub_1C8CB6084(v8, v9, v10);
    *(void *)(v0 + 16) = v2;
    swift_release();
  }
  uint64_t v11 = *(void **)(v0 + 16);
  swift_beginAccess();
  uint64_t v12 = v11[4];
  unint64_t v13 = v11[5];
  uint64_t v14 = v11[6];
  v11[5] = 0;
  v11[6] = 0;
  v11[4] = 0;
  sub_1C8CB6084(v12, v13, v14);
}

uint64_t _s20SiriOntologyProtobuf07Google_C5_TypeV13unknownFieldsAA14UnknownStorageVvs_0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C8CA3D5C(*(void *)v1, *(void *)(v1 + 8));
  *(void *)uint64_t v1 = v2;
  *(void *)(v1 + 8) = v3;
  return result;
}

uint64_t (*Google_Protobuf_Option.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Option.init()@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_1C8D8AD80;
  type metadata accessor for Google_Protobuf_Option._StorageClass();
  uint64_t result = swift_initStaticObject();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1C8CBB908()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234F3D0, &qword_1EA565EF8);
}

uint64_t static Google_Protobuf_Syntax._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565A00 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA565F00;
  uint64_t v3 = qword_1EA565F08;
  uint64_t v4 = unk_1EA565F10;
  *a1 = qword_1EA565EF8;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CBB9B4@<X0>(void *a1@<X8>)
{
  if (qword_1EA565A00 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA565F00;
  uint64_t v3 = qword_1EA565F08;
  uint64_t v4 = unk_1EA565F10;
  *a1 = qword_1EA565EF8;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

unint64_t static Google_Protobuf_Type.protoMessageName.getter()
{
  return 0xD000000000000014;
}

uint64_t sub_1C8CBBA68()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234E638, &qword_1EA565F18);
}

uint64_t static Google_Protobuf_Type._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565A08 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA565F20;
  uint64_t v3 = qword_1EA565F28;
  uint64_t v4 = unk_1EA565F30;
  *a1 = qword_1EA565F18;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

double sub_1C8CBBB14()
{
  type metadata accessor for Google_Protobuf_Type._StorageClass();
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0xE000000000000000;
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 40) = v1;
  *(void *)(v0 + 48) = v1;
  double result = 0.0;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *(void *)(v0 + 88) = 0;
  *(unsigned char *)(v0 + 96) = 1;
  qword_1EA565F38 = v0;
  return result;
}

uint64_t sub_1C8CBBB74()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C8CC1EF8(*(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80));
  return MEMORY[0x1F4186488](v0, 97, 7);
}

uint64_t Google_Protobuf_Type.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CBF91C(a1, a2, a3, (void (*)(void))type metadata accessor for Google_Protobuf_Type._StorageClass, 97, sub_1C8CC1C48, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C8CBBC28);
}

uint64_t sub_1C8CBBC28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 16);
  uint64_t result = v8(a3, a4);
  uint64_t v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          swift_beginAccess();
          uint64_t v16 = v11;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 336))(a1 + 16, a3, a4);
          goto LABEL_6;
        case 2:
          swift_beginAccess();
          uint64_t v12 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 416);
          unint64_t v13 = sub_1C8CC2D6C();
          uint64_t v14 = a1 + 32;
          uint64_t v15 = &type metadata for Google_Protobuf_Field;
          goto LABEL_5;
        case 3:
          swift_beginAccess();
          uint64_t v16 = v11;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 352))(a1 + 40, a3, a4);
          goto LABEL_6;
        case 4:
          swift_beginAccess();
          uint64_t v12 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 416);
          unint64_t v13 = sub_1C8CC23C8();
          uint64_t v14 = a1 + 48;
          uint64_t v15 = &type metadata for Google_Protobuf_Option;
LABEL_5:
          uint64_t v16 = v11;
          v12(v14, v15, v13, a3, a4);
          goto LABEL_6;
        case 5:
          swift_beginAccess();
          unint64_t v17 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 408);
          unint64_t v18 = sub_1C8CC4204();
          uint64_t v16 = v11;
          v17(a1 + 56, &type metadata for Google_Protobuf_SourceContext, v18, a3, a4);
LABEL_6:
          uint64_t v11 = v16;
          swift_endAccess();
          break;
        case 6:
          swift_beginAccess();
          uint64_t v19 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 384);
          unint64_t v20 = sub_1C8CC41B0();
          v19(a1 + 88, &type metadata for Google_Protobuf_Syntax, v20, a3, a4);
          swift_endAccess();
          break;
        default:
          break;
      }
      uint64_t result = v8(a3, a4);
    }
  }
  return result;
}

uint64_t Google_Protobuf_Type.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CC13D4(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C8CBBF44);
}

uint64_t sub_1C8CBBF44(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = v4;
  swift_beginAccess();
  uint64_t v9 = *(void *)(a1 + 16);
  unint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0) {
    uint64_t v11 = v9 & 0xFFFFFFFFFFFFLL;
  }
  if (!v11
    || (uint64_t v12 = (void (*)(uint64_t, unint64_t, uint64_t, uint64_t, void *))a4[14],
        swift_bridgeObjectRetain(),
        v12(v9, v10, 1, a3, a4),
        uint64_t result = swift_bridgeObjectRelease(),
        !v5))
  {
    swift_beginAccess();
    if (!*(void *)(*(void *)(a1 + 32) + 16)
      || (uint64_t v14 = (void (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, void *))a4[35],
          unint64_t v15 = sub_1C8CC2D6C(),
          uint64_t v16 = swift_bridgeObjectRetain(),
          v14(v16, 2, &type metadata for Google_Protobuf_Field, v15, a3, a4),
          uint64_t result = swift_bridgeObjectRelease(),
          !v5))
    {
      swift_beginAccess();
      if (!*(void *)(*(void *)(a1 + 40) + 16)
        || (unint64_t v17 = (void (*)(uint64_t, uint64_t, uint64_t, void *))a4[32],
            uint64_t v18 = swift_bridgeObjectRetain(),
            v17(v18, 3, a3, a4),
            uint64_t result = swift_bridgeObjectRelease(),
            !v5))
      {
        swift_beginAccess();
        if (!*(void *)(*(void *)(a1 + 48) + 16)
          || (uint64_t v19 = (void (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, void *))a4[35],
              unint64_t v20 = sub_1C8CC23C8(),
              uint64_t v21 = swift_bridgeObjectRetain(),
              v19(v21, 4, &type metadata for Google_Protobuf_Option, v20, a3, a4),
              uint64_t result = swift_bridgeObjectRelease(),
              !v5))
        {
          swift_beginAccess();
          uint64_t v22 = *(void *)(a1 + 64);
          if (!v22
            || (v28[0] = *(void *)(a1 + 56),
                v28[1] = v22,
                long long v29 = *(_OWORD *)(a1 + 72),
                uint64_t v23 = (uint64_t (*)(void *, uint64_t, ValueMetadata *, unint64_t, uint64_t, void *))a4[17],
                unint64_t v24 = sub_1C8CC4204(),
                uint64_t result = v23(v28, 5, &type metadata for Google_Protobuf_SourceContext, v24, a3, a4),
                !v5))
          {
            uint64_t result = swift_beginAccess();
            if (*(void *)(a1 + 88))
            {
              char v25 = *(unsigned char *)(a1 + 96);
              uint64_t v30 = *(void *)(a1 + 88);
              char v31 = v25;
              long long v26 = (uint64_t (*)(uint64_t *, uint64_t, ValueMetadata *, unint64_t, uint64_t, void *))a4[16];
              unint64_t v27 = sub_1C8CC41B0();
              return v26(&v30, 6, &type metadata for Google_Protobuf_Syntax, v27, a3, a4);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t static Google_Protobuf_Type.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1C8CC24C4(a1, a2, sub_1C8CBC244) & 1;
}

uint64_t sub_1C8CBC244(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  swift_beginAccess();
  BOOL v6 = v4 == *(void *)(a2 + 16) && v5 == *(void *)(a2 + 24);
  if (v6 || (v7 = sub_1C8D887C0(), uint64_t result = 0, (v7 & 1) != 0))
  {
    swift_beginAccess();
    uint64_t v9 = *(void *)(a1 + 32);
    swift_beginAccess();
    uint64_t v10 = *(void *)(a2 + 32);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v11 = sub_1C8CFCFC0(v9, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0) {
      goto LABEL_26;
    }
    swift_beginAccess();
    uint64_t v12 = *(void **)(a1 + 40);
    swift_beginAccess();
    if ((sub_1C8CFBFEC(v12, *(void **)(a2 + 40)) & 1) == 0) {
      goto LABEL_26;
    }
    swift_beginAccess();
    uint64_t v13 = *(void *)(a1 + 48);
    swift_beginAccess();
    uint64_t v14 = *(void *)(a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v15 = sub_1C8CF9F50(v13, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0) {
      goto LABEL_26;
    }
    swift_beginAccess();
    uint64_t v17 = *(void *)(a1 + 56);
    uint64_t v16 = *(void *)(a1 + 64);
    uint64_t v19 = *(void *)(a1 + 72);
    unint64_t v18 = *(void *)(a1 + 80);
    swift_beginAccess();
    uint64_t v20 = *(void *)(a2 + 56);
    uint64_t v21 = *(void *)(a2 + 64);
    uint64_t v22 = *(void *)(a2 + 72);
    unint64_t v23 = *(void *)(a2 + 80);
    if (v16)
    {
      if (v21)
      {
        if (v17 == v20 && v16 == v21 || (sub_1C8D887C0() & 1) != 0)
        {
          sub_1C8CC1EAC(v17, v16, v19, v18);
          sub_1C8CC1EAC(v17, v16, v19, v18);
          sub_1C8CC1EAC(v20, v21, v22, v23);
          sub_1C8CA3CF8(v19, v18);
          sub_1C8CA3CF8(v22, v23);
          char v33 = sub_1C8D01FBC(v19, v18, v22, v23);
          sub_1C8CA3D5C(v22, v23);
          sub_1C8CA3D5C(v19, v18);
          sub_1C8CC1EF8(v20, v21, v22, v23);
          swift_bridgeObjectRelease();
          sub_1C8CA3D5C(v19, v18);
          sub_1C8CC1EF8(v17, v16, v19, v18);
          if ((v33 & 1) == 0) {
            goto LABEL_26;
          }
LABEL_17:
          swift_beginAccess();
          uint64_t v24 = *(void *)(a1 + 88);
          int v25 = *(unsigned __int8 *)(a1 + 96);
          swift_release();
          swift_beginAccess();
          uint64_t v26 = *(void *)(a2 + 88);
          int v27 = *(unsigned __int8 *)(a2 + 96);
          swift_release();
          uint64_t v28 = v24 != 0;
          if (!v25) {
            uint64_t v28 = v24;
          }
          if (v27 == 1)
          {
            if (v26)
            {
              if (v28 != 1) {
                return 0;
              }
            }
            else if (v28)
            {
              return 0;
            }
          }
          else if (v28 != v26)
          {
            return 0;
          }
          return 1;
        }
        sub_1C8CC1EAC(v17, v16, v19, v18);
        swift_bridgeObjectRetain();
        sub_1C8CA3CF8(v19, v18);
        swift_bridgeObjectRelease();
        sub_1C8CA3D5C(v19, v18);
        uint64_t v29 = v17;
        uint64_t v30 = v16;
        uint64_t v31 = v19;
        unint64_t v32 = v18;
LABEL_25:
        sub_1C8CC1EF8(v29, v30, v31, v32);
LABEL_26:
        swift_release();
        swift_release();
        return 0;
      }
      swift_bridgeObjectRetain();
      sub_1C8CA3CF8(v19, v18);
      swift_bridgeObjectRetain();
      sub_1C8CA3CF8(v19, v18);
      swift_bridgeObjectRelease();
      sub_1C8CA3D5C(v19, v18);
    }
    else if (!v21)
    {
      goto LABEL_17;
    }
    sub_1C8CC1EAC(v20, v21, v22, v23);
    sub_1C8CC1EF8(v17, v16, v19, v18);
    uint64_t v29 = v20;
    uint64_t v30 = v21;
    uint64_t v31 = v22;
    unint64_t v32 = v23;
    goto LABEL_25;
  }
  return result;
}

uint64_t Google_Protobuf_Type.hashValue.getter()
{
  return sub_1C8CC039C((void (*)(uint64_t, long long *))sub_1C8D68958);
}

uint64_t sub_1C8CBC6B4@<X0>(uint64_t a1@<X8>)
{
  return sub_1C8CC0424(&qword_1EA565A10, &qword_1EA565F38, a1);
}

unint64_t sub_1C8CBC6D8()
{
  return 0xD000000000000014;
}

uint64_t (*sub_1C8CBC6F8())()
{
  return nullsub_1;
}

uint64_t sub_1C8CBC718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_Type.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8CBC730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_Type.traverse<A>(visitor:)(a1, a2, a3);
}

double sub_1C8CBC74C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v7 = *(void *)(a1 + 64);
  long long v8 = *(_OWORD *)(a1 + 16);
  long long v15 = *(_OWORD *)a1;
  long long v16 = v8;
  long long v9 = *(_OWORD *)(a1 + 48);
  long long v17 = *(_OWORD *)(a1 + 32);
  long long v18 = v9;
  uint64_t v19 = v7;
  if (*(void *)(a2 + 16))
  {
    sub_1C8D88850();
    sub_1C8D21494(&v15, a2);
  }
  switch(a4 >> 62)
  {
    case 1uLL:
      if ((int)a3 != a3 >> 32) {
        goto LABEL_9;
      }
      break;
    case 2uLL:
      if (*(void *)(a3 + 16) != *(void *)(a3 + 24)) {
        goto LABEL_9;
      }
      break;
    case 3uLL:
      break;
    default:
      if ((a4 & 0xFF000000000000) != 0) {
LABEL_9:
      }
        sub_1C8D881D0();
      break;
  }
  uint64_t v11 = v19;
  long long v12 = v16;
  *(_OWORD *)a1 = v15;
  *(_OWORD *)(a1 + 16) = v12;
  double result = *(double *)&v17;
  long long v14 = v18;
  *(_OWORD *)(a1 + 32) = v17;
  *(_OWORD *)(a1 + 48) = v14;
  *(void *)(a1 + 64) = v11;
  return result;
}

double sub_1C8CBC850(long long *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1C8CBD424(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))sub_1C8D196CC);
}

double sub_1C8CBC868(long long *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  return sub_1C8CBD19C(a1, a2, a3, a4, (void (*)(uint64_t, long long *))sub_1C8D6C07C);
}

void *sub_1C8CBC880(void *result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = *result;
  uint64_t v4 = result[1];
  uint64_t v5 = result[2];
  uint64_t v6 = result[3];
  uint64_t v7 = result[4];
  uint64_t v8 = result[5];
  uint64_t v10 = result[6];
  uint64_t v9 = result[7];
  uint64_t v11 = result[8];
  uint64_t v17 = *result;
  uint64_t v18 = v4;
  long long v14 = result;
  switch(a3 >> 62)
  {
    case 1uLL:
      if ((int)a2 != a2 >> 32) {
        goto LABEL_7;
      }
      break;
    case 2uLL:
      if (*(void *)(a2 + 16) != *(void *)(a2 + 24))
      {
LABEL_7:
        sub_1C8CA3CF8(a2, a3);
        goto LABEL_8;
      }
      break;
    case 3uLL:
      goto LABEL_3;
    default:
      if ((a3 & 0xFF000000000000) != 0)
      {
LABEL_8:
        sub_1C8D881D0();
        double result = (void *)sub_1C8CA3D5C(a2, a3);
        uint64_t v3 = v17;
        uint64_t v4 = v18;
      }
      else
      {
LABEL_3:
        uint64_t v15 = *result;
        uint64_t v16 = result[1];
        double result = (void *)sub_1C8CA3D5C(a2, a3);
        uint64_t v4 = v16;
        uint64_t v3 = v15;
      }
      break;
  }
  *long long v14 = v3;
  v14[1] = v4;
  long long v14[2] = v5;
  _OWORD v14[3] = v6;
  v14[4] = v7;
  v14[5] = v8;
  v14[6] = v10;
  v14[7] = v9;
  v14[8] = v11;
  return result;
}

double sub_1C8CBC9C4(long long *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  return sub_1C8CBD19C(a1, a2, a3, a4, (void (*)(uint64_t, long long *))sub_1C8D68958);
}

double sub_1C8CBC9E0(long long *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  return sub_1C8CBD19C(a1, a2, a3, a4, (void (*)(uint64_t, long long *))sub_1C8D6BBD8);
}

double sub_1C8CBC9F8(long long *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  return sub_1C8CBD19C(a1, a2, a3, a4, (void (*)(uint64_t, long long *))sub_1C8D6C3BC);
}

double sub_1C8CBCA10(long long *a1)
{
  long long v4 = *a1;
  long long v5 = a1[1];
  long long v6 = a1[2];
  long long v7 = a1[3];
  uint64_t v8 = *((void *)a1 + 8);
  sub_1C8CC4098((uint64_t)(v1 + 1), (uint64_t)v11, &qword_1EA566130);
  sub_1C8CC4098((uint64_t)v11, (uint64_t)v12, &qword_1EA566130);
  if (v12[1])
  {
    sub_1C8D88850();
    sub_1C8D883C0();
  }
  sub_1C8CC4098((uint64_t)(v1 + 2), (uint64_t)&v10, &qword_1EA566138);
  sub_1C8CC4098((uint64_t)&v10, (uint64_t)&v13, &qword_1EA566138);
  if (v13 != 2)
  {
    sub_1C8D88850();
    sub_1C8D88860();
  }
  long long v9 = *v1;
  switch(*((void *)&v9 + 1) >> 62)
  {
    case 1:
      if ((int)v9 != (uint64_t)v9 >> 32) {
        goto LABEL_11;
      }
      break;
    case 2:
      if (*(void *)(v9 + 16) != *(void *)(v9 + 24))
      {
LABEL_11:
        sub_1C8CC40FC((uint64_t)&v9);
        goto LABEL_12;
      }
      break;
    case 3:
      goto LABEL_13;
    default:
      if ((*((void *)&v9 + 1) & 0xFF000000000000) != 0) {
LABEL_12:
      }
        sub_1C8D881D0();
LABEL_13:
      sub_1C8CC412C((uint64_t)&v9);
      break;
  }
  *a1 = v4;
  a1[1] = v5;
  double result = *(double *)&v6;
  a1[2] = v6;
  a1[3] = v7;
  *((void *)a1 + 8) = v8;
  return result;
}

double sub_1C8CBCBA4(long long *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  return sub_1C8CBD19C(a1, a2, a3, a4, (void (*)(uint64_t, long long *))sub_1C8D6F188);
}

double sub_1C8CBCBBC(long long *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  return sub_1C8CBD19C(a1, a2, a3, a4, (void (*)(uint64_t, long long *))sub_1C8D6F574);
}

double sub_1C8CBCBD4(long long *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  return sub_1C8CBD19C(a1, a2, a3, a4, (void (*)(uint64_t, long long *))sub_1C8D6DF08);
}

double sub_1C8CBCBEC(long long *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  return sub_1C8CBD19C(a1, a2, a3, a4, (void (*)(uint64_t, long long *))sub_1C8D6CB74);
}

void *sub_1C8CBCC04(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  long long v4 = result;
  uint64_t v5 = *result;
  uint64_t v6 = result[1];
  uint64_t v8 = result[2];
  uint64_t v7 = result[3];
  uint64_t v10 = result[4];
  uint64_t v9 = result[5];
  uint64_t v11 = result[6];
  uint64_t v12 = result[7];
  uint64_t v13 = result[8];
  uint64_t v49 = *result;
  uint64_t v50 = v6;
  uint64_t v51 = v8;
  uint64_t v52 = v7;
  uint64_t v53 = v10;
  uint64_t v54 = v9;
  uint64_t v55 = v11;
  uint64_t v56 = v12;
  uint64_t v57 = v13;
  uint64_t v38 = *(void *)(a2 + 16);
  if (v38)
  {
    uint64_t v34 = a3;
    unint64_t v35 = a4;
    uint64_t v36 = result;
    sub_1C8D88850();
    uint64_t v37 = a2 + 32;
    uint64_t v5 = v49;
    swift_bridgeObjectRetain();
    uint64_t v15 = v52;
    uint64_t v16 = v53;
    uint64_t v17 = v54;
    uint64_t v18 = v55;
    uint64_t v19 = v57;
    uint64_t v20 = 0;
    while (1)
    {
      uint64_t v21 = (void *)(v37 + 72 * v20);
      uint64_t v39 = v20;
      uint64_t v40 = v21[1];
      uint64_t v22 = v21[2];
      uint64_t v23 = v21[3];
      unint64_t v24 = v21[4];
      uint64_t v25 = v21[6];
      uint64_t v26 = v21[8];
      uint64_t v41 = v6;
      uint64_t v42 = v8;
      uint64_t v43 = v15;
      uint64_t v27 = *v21;
      uint64_t v44 = v16;
      uint64_t v45 = v17;
      uint64_t v46 = v18;
      uint64_t v47 = v12;
      uint64_t v48 = v19;
      uint64_t v28 = *(void *)(*v21 + 16);
      if (v28)
      {
        sub_1C8D88850();
        sub_1C8D88850();
        uint64_t v29 = v27 + 32;
        do
        {
          v29 += 4;
          sub_1C8D88870();
          --v28;
        }
        while (v28);
      }
      uint64_t v30 = *(void *)(v40 + 16);
      if (v30)
      {
        sub_1C8D88850();
        sub_1C8D88850();
        uint64_t v31 = v40 + 32;
        do
        {
          v31 += 4;
          sub_1C8D88870();
          --v30;
        }
        while (v30);
      }
      if (!v25) {
        break;
      }
      sub_1C8D88850();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C8CA3CF8(v23, v24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C8D883C0();
      if (v26) {
        goto LABEL_14;
      }
LABEL_15:
      uint64_t v32 = *(void *)(v22 + 16);
      if (v32)
      {
        sub_1C8D88850();
        sub_1C8D88850();
        uint64_t v33 = v22 + 40;
        do
        {
          swift_bridgeObjectRetain();
          sub_1C8D883C0();
          swift_bridgeObjectRelease();
          v33 += 16;
          --v32;
        }
        while (v32);
      }
      uint64_t v20 = v39 + 1;
      switch(v24 >> 62)
      {
        case 1uLL:
          if ((int)v23 != v23 >> 32) {
            goto LABEL_4;
          }
          break;
        case 2uLL:
          if (*(void *)(v23 + 16) != *(void *)(v23 + 24)) {
            goto LABEL_4;
          }
          break;
        case 3uLL:
          break;
        default:
          if ((v24 & 0xFF000000000000) != 0) {
LABEL_4:
          }
            sub_1C8D881D0();
          break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C8CA3D5C(v23, v24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = v41;
      uint64_t v8 = v42;
      uint64_t v15 = v43;
      uint64_t v16 = v44;
      uint64_t v17 = v45;
      uint64_t v18 = v46;
      uint64_t v12 = v47;
      uint64_t v19 = v48;
      if (v20 == v38)
      {
        double result = (void *)swift_bridgeObjectRelease();
        uint64_t v7 = v43;
        uint64_t v10 = v44;
        uint64_t v9 = v45;
        uint64_t v11 = v46;
        uint64_t v13 = v48;
        uint64_t v50 = v41;
        uint64_t v51 = v42;
        uint64_t v52 = v43;
        uint64_t v53 = v44;
        uint64_t v54 = v45;
        uint64_t v55 = v46;
        uint64_t v56 = v47;
        uint64_t v57 = v48;
        a4 = v35;
        long long v4 = v36;
        a3 = v34;
        goto LABEL_26;
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C8CA3CF8(v23, v24);
    swift_bridgeObjectRetain();
    if (!v26) {
      goto LABEL_15;
    }
LABEL_14:
    sub_1C8D88850();
    sub_1C8D883C0();
    goto LABEL_15;
  }
LABEL_26:
  switch(a4 >> 62)
  {
    case 1uLL:
      if ((int)a3 != a3 >> 32) {
        goto LABEL_32;
      }
      break;
    case 2uLL:
      if (*(void *)(a3 + 16) != *(void *)(a3 + 24)) {
        goto LABEL_32;
      }
      break;
    case 3uLL:
      break;
    default:
      if ((a4 & 0xFF000000000000) != 0)
      {
LABEL_32:
        double result = (void *)sub_1C8D881D0();
        uint64_t v5 = v49;
        uint64_t v6 = v50;
        uint64_t v8 = v51;
        uint64_t v7 = v52;
        uint64_t v10 = v53;
        uint64_t v9 = v54;
        uint64_t v11 = v55;
        uint64_t v12 = v56;
        uint64_t v13 = v57;
      }
      break;
  }
  *long long v4 = v5;
  v4[1] = v6;
  v4[2] = v8;
  uint64_t v4[3] = v7;
  v4[4] = v10;
  v4[5] = v9;
  v4[6] = v11;
  v4[7] = v12;
  v4[8] = v13;
  return result;
}

double sub_1C8CBD040(long long *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *((void *)a1 + 8);
  long long v11 = a1[1];
  long long v17 = *a1;
  long long v18 = v11;
  long long v12 = a1[3];
  long long v19 = a1[2];
  long long v20 = v12;
  uint64_t v21 = v10;
  swift_retain();
  sub_1C8D6FBBC(a5, (uint64_t)&v17, a2, a3, a4);
  swift_release();
  switch(a3 >> 62)
  {
    case 1uLL:
      if ((int)a2 != a2 >> 32) {
        goto LABEL_7;
      }
      break;
    case 2uLL:
      if (*(void *)(a2 + 16) != *(void *)(a2 + 24)) {
        goto LABEL_7;
      }
      break;
    case 3uLL:
      break;
    default:
      if ((a3 & 0xFF000000000000) != 0) {
LABEL_7:
      }
        sub_1C8D881D0();
      break;
  }
  uint64_t v13 = v21;
  long long v14 = v18;
  *a1 = v17;
  a1[1] = v14;
  double result = *(double *)&v19;
  long long v16 = v20;
  a1[2] = v19;
  a1[3] = v16;
  *((void *)a1 + 8) = v13;
  return result;
}

double sub_1C8CBD168(long long *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  return sub_1C8CBD19C(a1, a2, a3, a4, (void (*)(uint64_t, long long *))sub_1C8D6EA44);
}

double sub_1C8CBD184(long long *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  return sub_1C8CBD19C(a1, a2, a3, a4, (void (*)(uint64_t, long long *))sub_1C8D6D5E4);
}

double sub_1C8CBD19C(long long *a1, uint64_t a2, unint64_t a3, uint64_t a4, void (*a5)(uint64_t, long long *))
{
  uint64_t v10 = *((void *)a1 + 8);
  long long v11 = a1[1];
  long long v17 = *a1;
  long long v18 = v11;
  long long v12 = a1[3];
  long long v19 = a1[2];
  long long v20 = v12;
  uint64_t v21 = v10;
  swift_retain();
  a5(a4, &v17);
  swift_release();
  switch(a3 >> 62)
  {
    case 1uLL:
      if ((int)a2 != a2 >> 32) {
        goto LABEL_7;
      }
      break;
    case 2uLL:
      if (*(void *)(a2 + 16) != *(void *)(a2 + 24)) {
        goto LABEL_7;
      }
      break;
    case 3uLL:
      break;
    default:
      if ((a3 & 0xFF000000000000) != 0) {
LABEL_7:
      }
        sub_1C8D881D0();
      break;
  }
  uint64_t v13 = v21;
  long long v14 = v18;
  *a1 = v17;
  a1[1] = v14;
  double result = *(double *)&v19;
  long long v16 = v20;
  a1[2] = v19;
  a1[3] = v16;
  *((void *)a1 + 8) = v13;
  return result;
}

double sub_1C8CBD2B8(long long *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  long long v10 = *a1;
  long long v11 = a1[1];
  long long v12 = a1[2];
  long long v13 = a1[3];
  uint64_t v14 = *((void *)a1 + 8);
  if ((a4 & 0x100000000) == 0)
  {
    sub_1C8D88850();
    sub_1C8D88880();
  }
  if ((a5 & 0x100000000) == 0)
  {
    sub_1C8D88850();
    sub_1C8D88880();
  }
  switch(a3 >> 62)
  {
    case 1uLL:
      if ((int)a2 != a2 >> 32) {
        goto LABEL_11;
      }
      break;
    case 2uLL:
      if (*(void *)(a2 + 16) != *(void *)(a2 + 24))
      {
LABEL_11:
        sub_1C8CA3CF8(a2, a3);
        goto LABEL_12;
      }
      break;
    case 3uLL:
      goto LABEL_13;
    default:
      if ((a3 & 0xFF000000000000) != 0) {
LABEL_12:
      }
        sub_1C8D881D0();
LABEL_13:
      sub_1C8CA3D5C(a2, a3);
      break;
  }
  *a1 = v10;
  a1[1] = v11;
  double result = *(double *)&v12;
  a1[2] = v12;
  a1[3] = v13;
  *((void *)a1 + 8) = v14;
  return result;
}

double sub_1C8CBD3F4(long long *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1C8CBD424(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))sub_1C8D1C97C);
}

double sub_1C8CBD40C(long long *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1C8CBD424(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))sub_1C8D1CC28);
}

double sub_1C8CBD424(long long *a1, uint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  long long v11 = *a1;
  long long v12 = a1[1];
  long long v13 = a1[2];
  long long v14 = a1[3];
  uint64_t v15 = *((void *)a1 + 8);
  if (*(void *)(a2 + 16)) {
    a5(a2, 1);
  }
  switch(a4 >> 62)
  {
    case 1uLL:
      uint64_t v8 = (int)a3;
      uint64_t v9 = a3 >> 32;
      goto LABEL_8;
    case 2uLL:
      uint64_t v8 = *(void *)(a3 + 16);
      uint64_t v9 = *(void *)(a3 + 24);
LABEL_8:
      if (v8 != v9) {
        goto LABEL_9;
      }
      goto LABEL_10;
    case 3uLL:
      goto LABEL_10;
    default:
      if ((a4 & 0xFF000000000000) == 0) {
        goto LABEL_10;
      }
LABEL_9:
      sub_1C8D881D0();
LABEL_10:
      *a1 = v11;
      a1[1] = v12;
      double result = *(double *)&v13;
      a1[2] = v13;
      a1[3] = v14;
      *((void *)a1 + 8) = v15;
      return result;
  }
}

double sub_1C8CBD530(long long *a1, int a2, uint64_t a3, unint64_t a4)
{
  long long v8 = *a1;
  long long v9 = a1[1];
  long long v10 = a1[2];
  long long v11 = a1[3];
  uint64_t v12 = *((void *)a1 + 8);
  if (a2)
  {
    sub_1C8D88850();
    sub_1C8D88880();
  }
  switch(a4 >> 62)
  {
    case 1uLL:
      if ((int)a3 != a3 >> 32) {
        goto LABEL_9;
      }
      break;
    case 2uLL:
      if (*(void *)(a3 + 16) != *(void *)(a3 + 24))
      {
LABEL_9:
        sub_1C8CA3CF8(a3, a4);
        goto LABEL_10;
      }
      break;
    case 3uLL:
      goto LABEL_11;
    default:
      if ((a4 & 0xFF000000000000) != 0) {
LABEL_10:
      }
        sub_1C8D881D0();
LABEL_11:
      sub_1C8CA3D5C(a3, a4);
      break;
  }
  *a1 = v8;
  a1[1] = v9;
  double result = *(double *)&v10;
  a1[2] = v10;
  a1[3] = v11;
  *((void *)a1 + 8) = v12;
  return result;
}

double sub_1C8CBD648(long long *a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  long long v10 = *a1;
  long long v11 = a1[1];
  long long v12 = a1[2];
  long long v13 = a1[3];
  uint64_t v14 = *((void *)a1 + 8);
  uint64_t v8 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v8 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v8)
  {
    sub_1C8D88850();
    sub_1C8D883C0();
  }
  switch(a5 >> 62)
  {
    case 1uLL:
      if ((int)a4 != a4 >> 32) {
        goto LABEL_11;
      }
      break;
    case 2uLL:
      if (*(void *)(a4 + 16) != *(void *)(a4 + 24)) {
        goto LABEL_11;
      }
      break;
    case 3uLL:
      break;
    default:
      if ((a5 & 0xFF000000000000) != 0) {
LABEL_11:
      }
        sub_1C8D881D0();
      break;
  }
  *a1 = v10;
  a1[1] = v11;
  double result = *(double *)&v12;
  a1[2] = v12;
  a1[3] = v13;
  *((void *)a1 + 8) = v14;
  return result;
}

double sub_1C8CBD760(long long *a1, uint64_t a2, unint64_t a3, double a4)
{
  long long v8 = *a1;
  long long v9 = a1[1];
  long long v10 = a1[2];
  long long v11 = a1[3];
  uint64_t v12 = *((void *)a1 + 8);
  if (a4 != 0.0)
  {
    sub_1C8D88850();
    sub_1C8D88880();
  }
  switch(a3 >> 62)
  {
    case 1uLL:
      if ((int)a2 != a2 >> 32) {
        goto LABEL_9;
      }
      break;
    case 2uLL:
      if (*(void *)(a2 + 16) != *(void *)(a2 + 24))
      {
LABEL_9:
        sub_1C8CA3CF8(a2, a3);
        goto LABEL_10;
      }
      break;
    case 3uLL:
      goto LABEL_11;
    default:
      if ((a3 & 0xFF000000000000) != 0) {
LABEL_10:
      }
        sub_1C8D881D0();
LABEL_11:
      sub_1C8CA3D5C(a2, a3);
      break;
  }
  *a1 = v8;
  a1[1] = v9;
  double result = *(double *)&v10;
  a1[2] = v10;
  a1[3] = v11;
  *((void *)a1 + 8) = v12;
  return result;
}

double sub_1C8CBD884(long long *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  long long v8 = *a1;
  long long v9 = a1[1];
  long long v10 = a1[2];
  long long v11 = a1[3];
  uint64_t v12 = *((void *)a1 + 8);
  if (a2)
  {
    sub_1C8D88850();
    sub_1C8D88880();
  }
  switch(a4 >> 62)
  {
    case 1uLL:
      if ((int)a3 != a3 >> 32) {
        goto LABEL_9;
      }
      break;
    case 2uLL:
      if (*(void *)(a3 + 16) != *(void *)(a3 + 24))
      {
LABEL_9:
        sub_1C8CA3CF8(a3, a4);
        goto LABEL_10;
      }
      break;
    case 3uLL:
      goto LABEL_11;
    default:
      if ((a4 & 0xFF000000000000) != 0) {
LABEL_10:
      }
        sub_1C8D881D0();
LABEL_11:
      sub_1C8CA3D5C(a3, a4);
      break;
  }
  *a1 = v8;
  a1[1] = v9;
  double result = *(double *)&v10;
  a1[2] = v10;
  a1[3] = v11;
  *((void *)a1 + 8) = v12;
  return result;
}

double sub_1C8CBD99C(long long *a1, int a2, uint64_t a3, unint64_t a4)
{
  long long v8 = *a1;
  long long v9 = a1[1];
  long long v10 = a1[2];
  long long v11 = a1[3];
  uint64_t v12 = *((void *)a1 + 8);
  if (a2)
  {
    sub_1C8D88850();
    sub_1C8D88880();
  }
  switch(a4 >> 62)
  {
    case 1uLL:
      if ((int)a3 != a3 >> 32) {
        goto LABEL_9;
      }
      break;
    case 2uLL:
      if (*(void *)(a3 + 16) != *(void *)(a3 + 24))
      {
LABEL_9:
        sub_1C8CA3CF8(a3, a4);
        goto LABEL_10;
      }
      break;
    case 3uLL:
      goto LABEL_11;
    default:
      if ((a4 & 0xFF000000000000) != 0) {
LABEL_10:
      }
        sub_1C8D881D0();
LABEL_11:
      sub_1C8CA3D5C(a3, a4);
      break;
  }
  *a1 = v8;
  a1[1] = v9;
  double result = *(double *)&v10;
  a1[2] = v10;
  a1[3] = v11;
  *((void *)a1 + 8) = v12;
  return result;
}

double sub_1C8CBDAB4(long long *a1, uint64_t a2, unint64_t a3, float a4)
{
  long long v8 = *a1;
  long long v9 = a1[1];
  long long v10 = a1[2];
  long long v11 = a1[3];
  uint64_t v12 = *((void *)a1 + 8);
  if (a4 != 0.0)
  {
    sub_1C8D88850();
    sub_1C8D88880();
  }
  switch(a3 >> 62)
  {
    case 1uLL:
      if ((int)a2 != a2 >> 32) {
        goto LABEL_9;
      }
      break;
    case 2uLL:
      if (*(void *)(a2 + 16) != *(void *)(a2 + 24))
      {
LABEL_9:
        sub_1C8CA3CF8(a2, a3);
        goto LABEL_10;
      }
      break;
    case 3uLL:
      goto LABEL_11;
    default:
      if ((a3 & 0xFF000000000000) != 0) {
LABEL_10:
      }
        sub_1C8D881D0();
LABEL_11:
      sub_1C8CA3D5C(a2, a3);
      break;
  }
  *a1 = v8;
  a1[1] = v9;
  double result = *(double *)&v10;
  a1[2] = v10;
  a1[3] = v11;
  *((void *)a1 + 8) = v12;
  return result;
}

double sub_1C8CBDBD8(long long *a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  long long v9 = *a1;
  long long v10 = a1[1];
  long long v11 = a1[2];
  long long v12 = a1[3];
  uint64_t v13 = *((void *)a1 + 8);
  switch(a3 >> 62)
  {
    case 1uLL:
      if ((int)a2 != a2 >> 32) {
        goto LABEL_7;
      }
      break;
    case 2uLL:
      if (*(void *)(a2 + 16) != *(void *)(a2 + 24)) {
        goto LABEL_7;
      }
      break;
    case 3uLL:
      break;
    default:
      if ((a3 & 0xFF000000000000) != 0)
      {
LABEL_7:
        sub_1C8D88850();
        sub_1C8D881D0();
      }
      break;
  }
  switch(a5 >> 62)
  {
    case 1uLL:
      if ((int)a4 != a4 >> 32) {
        goto LABEL_14;
      }
      break;
    case 2uLL:
      if (*(void *)(a4 + 16) != *(void *)(a4 + 24)) {
        goto LABEL_14;
      }
      break;
    case 3uLL:
      break;
    default:
      if ((a5 & 0xFF000000000000) != 0) {
LABEL_14:
      }
        sub_1C8D881D0();
      break;
  }
  *a1 = v9;
  a1[1] = v10;
  double result = *(double *)&v11;
  a1[2] = v11;
  a1[3] = v12;
  *((void *)a1 + 8) = v13;
  return result;
}

double sub_1C8CBDD3C(long long *a1, uint64_t a2, int a3, uint64_t a4, unint64_t a5)
{
  long long v10 = *a1;
  long long v11 = a1[1];
  long long v12 = a1[2];
  long long v13 = a1[3];
  uint64_t v14 = *((void *)a1 + 8);
  if (a2)
  {
    sub_1C8D88850();
    sub_1C8D88880();
  }
  if (a3)
  {
    sub_1C8D88850();
    sub_1C8D88880();
  }
  switch(a5 >> 62)
  {
    case 1uLL:
      if ((int)a4 != a4 >> 32) {
        goto LABEL_11;
      }
      break;
    case 2uLL:
      if (*(void *)(a4 + 16) != *(void *)(a4 + 24))
      {
LABEL_11:
        sub_1C8CA3CF8(a4, a5);
        goto LABEL_12;
      }
      break;
    case 3uLL:
      goto LABEL_13;
    default:
      if ((a5 & 0xFF000000000000) != 0) {
LABEL_12:
      }
        sub_1C8D881D0();
LABEL_13:
      sub_1C8CA3D5C(a4, a5);
      break;
  }
  *a1 = v10;
  a1[1] = v11;
  double result = *(double *)&v12;
  a1[2] = v12;
  a1[3] = v13;
  *((void *)a1 + 8) = v14;
  return result;
}

double sub_1C8CBDE78(long long *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  long long v11 = *a1;
  long long v12 = a1[1];
  long long v13 = a1[2];
  long long v14 = a1[3];
  uint64_t v15 = *((void *)a1 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  if (v7)
  {
    sub_1C8D88850();
    sub_1C8D88850();
    uint64_t v9 = a2 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1C8D883C0();
      swift_bridgeObjectRelease();
      v9 += 16;
      --v7;
    }
    while (v7);
  }
  switch(a4 >> 62)
  {
    case 1uLL:
      if ((int)a3 != a3 >> 32) {
        goto LABEL_10;
      }
      break;
    case 2uLL:
      if (*(void *)(a3 + 16) != *(void *)(a3 + 24)) {
        goto LABEL_10;
      }
      break;
    case 3uLL:
      break;
    default:
      if ((a4 & 0xFF000000000000) != 0) {
LABEL_10:
      }
        sub_1C8D881D0();
      break;
  }
  *a1 = v11;
  a1[1] = v12;
  double result = *(double *)&v13;
  a1[2] = v13;
  a1[3] = v14;
  *((void *)a1 + 8) = v15;
  return result;
}

double sub_1C8CBDFB8(long long *a1, char a2, uint64_t a3, unint64_t a4)
{
  long long v8 = *a1;
  long long v9 = a1[1];
  long long v10 = a1[2];
  long long v11 = a1[3];
  uint64_t v12 = *((void *)a1 + 8);
  if (a2)
  {
    sub_1C8D88850();
    sub_1C8D88860();
  }
  switch(a4 >> 62)
  {
    case 1uLL:
      if ((int)a3 != a3 >> 32) {
        goto LABEL_9;
      }
      break;
    case 2uLL:
      if (*(void *)(a3 + 16) != *(void *)(a3 + 24))
      {
LABEL_9:
        sub_1C8CA3CF8(a3, a4);
        goto LABEL_10;
      }
      break;
    case 3uLL:
      goto LABEL_11;
    default:
      if ((a4 & 0xFF000000000000) != 0) {
LABEL_10:
      }
        sub_1C8D881D0();
LABEL_11:
      sub_1C8CA3D5C(a3, a4);
      break;
  }
  *a1 = v8;
  a1[1] = v9;
  double result = *(double *)&v10;
  a1[2] = v10;
  a1[3] = v11;
  *((void *)a1 + 8) = v12;
  return result;
}

uint64_t sub_1C8CBE0C4@<X0>(void *a1@<X8>)
{
  if (qword_1EA565A08 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA565F20;
  uint64_t v3 = qword_1EA565F28;
  uint64_t v4 = unk_1EA565F30;
  *a1 = qword_1EA565F18;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CBE15C()
{
  return sub_1C8D68FF4(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16));
}

uint64_t sub_1C8CBE168(uint64_t a1, uint64_t a2)
{
  return sub_1C8CC059C(a1, a2, (void (*)(uint64_t, long long *))sub_1C8D68958);
}

double sub_1C8CBE180(long long *a1)
{
  return sub_1C8CBD19C(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), (void (*)(uint64_t, long long *))sub_1C8D68958);
}

uint64_t sub_1C8CBE1B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CC064C(a1, a2, a3, (void (*)(uint64_t, long long *))sub_1C8D68958);
}

uint64_t sub_1C8CBE1CC(uint64_t *a1, uint64_t *a2)
{
  return sub_1C8CC24C4(a1, a2, sub_1C8CBC244) & 1;
}

unint64_t static Google_Protobuf_Field.protoMessageName.getter()
{
  return 0xD000000000000015;
}

uint64_t sub_1C8CBE218()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234ECF0, &qword_1EA565F40);
}

uint64_t static Google_Protobuf_Field._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565A18 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA565F48;
  uint64_t v3 = qword_1EA565F50;
  uint64_t v4 = unk_1EA565F58;
  *a1 = qword_1EA565F40;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_Field.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  uint64_t result = v7(a2, a3);
  uint64_t v10 = v4;
  if (!v4)
  {
    while ((v9 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          long long v11 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 384);
          unint64_t v12 = sub_1C8CC2470();
          uint64_t v13 = v3;
          long long v14 = &type metadata for Google_Protobuf_Field.Kind;
          goto LABEL_7;
        case 2:
          long long v11 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 384);
          unint64_t v12 = sub_1C8CC241C();
          uint64_t v13 = v3 + 16;
          long long v14 = &type metadata for Google_Protobuf_Field.Cardinality;
LABEL_7:
          uint64_t v15 = v10;
          v11(v13, v14, v12, a2, a3);
          goto LABEL_18;
        case 3:
          long long v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 72);
          uint64_t v17 = v3 + 28;
          goto LABEL_17;
        case 4:
          long long v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 336);
          uint64_t v17 = v3 + 32;
          goto LABEL_17;
        case 6:
          long long v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 336);
          uint64_t v17 = v3 + 48;
          goto LABEL_17;
        case 7:
          long long v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 72);
          uint64_t v17 = v3 + 64;
          goto LABEL_17;
        case 8:
          uint64_t v15 = v10;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 312))(v3 + 68, a2, a3);
          goto LABEL_18;
        case 9:
          long long v18 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 416);
          unint64_t v19 = sub_1C8CC23C8();
          uint64_t v15 = v10;
          v18(v3 + 72, &type metadata for Google_Protobuf_Option, v19, a2, a3);
          goto LABEL_18;
        case 10:
          long long v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 336);
          uint64_t v17 = v3 + 80;
          goto LABEL_17;
        case 11:
          long long v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 336);
          uint64_t v17 = v3 + 96;
LABEL_17:
          uint64_t v15 = v10;
          v16(v17, a2, a3);
LABEL_18:
          uint64_t v10 = v15;
          break;
        default:
          break;
      }
      uint64_t result = v7(a2, a3);
    }
  }
  return result;
}

uint64_t sub_1C8CBE544()
{
  if (*(void *)v0)
  {
    sub_1C8D88850();
    sub_1C8CB7CA8();
  }
  sub_1C8CC4258((uint64_t *)(v0 + 16), (uint64_t)v13);
  sub_1C8CC4258(v13, (uint64_t)&v15);
  if (v15)
  {
    sub_1C8D88850();
    sub_1C8CC4258(v13, (uint64_t)&v14);
    sub_1C8D88850();
  }
  if (*(_DWORD *)(v0 + 28))
  {
    sub_1C8D88850();
    sub_1C8D88880();
  }
  unint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = *(void *)(v0 + 32) & 0xFFFFFFFFFFFFLL;
  }
  if (v3)
  {
    sub_1C8D88850();
    sub_1C8D883C0();
  }
  unint64_t v4 = *(void *)(v0 + 56);
  uint64_t v5 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    uint64_t v5 = *(void *)(v0 + 48) & 0xFFFFFFFFFFFFLL;
  }
  if (v5)
  {
    sub_1C8D88850();
    sub_1C8D883C0();
  }
  if (*(_DWORD *)(v0 + 64))
  {
    sub_1C8D88850();
    sub_1C8D88880();
  }
  if (*(unsigned char *)(v0 + 68))
  {
    sub_1C8D88850();
    sub_1C8D88860();
  }
  uint64_t result = *(void *)(v0 + 72);
  if (!*(void *)(result + 16) || (uint64_t result = sub_1C8D19C00(result), !v1))
  {
    unint64_t v7 = *(void *)(v0 + 88);
    uint64_t v8 = HIBYTE(v7) & 0xF;
    if ((v7 & 0x2000000000000000) == 0) {
      uint64_t v8 = *(void *)(v0 + 80) & 0xFFFFFFFFFFFFLL;
    }
    if (v8)
    {
      sub_1C8D88850();
      uint64_t result = sub_1C8D883C0();
    }
    unint64_t v9 = *(void *)(v0 + 104);
    uint64_t v10 = HIBYTE(v9) & 0xF;
    if ((v9 & 0x2000000000000000) == 0) {
      uint64_t v10 = *(void *)(v0 + 96) & 0xFFFFFFFFFFFFLL;
    }
    if (v10)
    {
      sub_1C8D88850();
      uint64_t result = sub_1C8D883C0();
    }
    uint64_t v11 = *(void *)(v0 + 112);
    unint64_t v12 = *(void *)(v0 + 120);
    switch(v12 >> 62)
    {
      case 1uLL:
        if ((int)v11 != v11 >> 32) {
          goto LABEL_35;
        }
        break;
      case 2uLL:
        if (*(void *)(v11 + 16) != *(void *)(v11 + 24)) {
          goto LABEL_35;
        }
        break;
      case 3uLL:
        return result;
      default:
        if ((v12 & 0xFF000000000000) != 0) {
LABEL_35:
        }
          uint64_t result = sub_1C8D881D0();
        break;
    }
  }
  return result;
}

uint64_t sub_1C8CBE77C(char **a1)
{
  uint64_t v3 = v1;
  unint64_t v5 = *(void *)v3;
  if (*(void *)v3)
  {
    char v6 = *(unsigned char *)(v3 + 8);
    sub_1C8CA5968(1uLL);
    sub_1C8CA6060((uint64_t)": ", 2, v7);
    sub_1C8D70E70(v5, v6);
    uint64_t v8 = *a1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a1 = v8;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v8 = sub_1C8D5EB50(0, *((void *)v8 + 2) + 1, 1, v8);
      *a1 = v8;
    }
    unint64_t v11 = *((void *)v8 + 2);
    unint64_t v10 = *((void *)v8 + 3);
    if (v11 >= v10 >> 1) {
      uint64_t v8 = sub_1C8D5EB50((char *)(v10 > 1), v11 + 1, 1, v8);
    }
    *((void *)v8 + 2) = v11 + 1;
    v8[v11 + 32] = 10;
    *a1 = v8;
  }
  unint64_t v12 = *(void *)(v3 + 16);
  if (v12)
  {
    char v13 = *(unsigned char *)(v3 + 24);
    sub_1C8CA5968(2uLL);
    sub_1C8CA6060((uint64_t)": ", 2, v14);
    sub_1C8D70E88(v12, v13);
    uint64_t v15 = *a1;
    char v16 = swift_isUniquelyReferenced_nonNull_native();
    *a1 = v15;
    if ((v16 & 1) == 0)
    {
      uint64_t v15 = sub_1C8D5EB50(0, *((void *)v15 + 2) + 1, 1, v15);
      *a1 = v15;
    }
    unint64_t v18 = *((void *)v15 + 2);
    unint64_t v17 = *((void *)v15 + 3);
    if (v18 >= v17 >> 1) {
      uint64_t v15 = sub_1C8D5EB50((char *)(v17 > 1), v18 + 1, 1, v15);
    }
    *((void *)v15 + 2) = v18 + 1;
    v15[v18 + 32] = 10;
    *a1 = v15;
  }
  int v19 = *(_DWORD *)(v3 + 28);
  if (!v19 || (uint64_t result = sub_1C8D3BACC(v19, 3uLL), !v2))
  {
    uint64_t v21 = *(void *)(v3 + 32);
    unint64_t v22 = *(void *)(v3 + 40);
    uint64_t v23 = HIBYTE(v22) & 0xF;
    if ((v22 & 0x2000000000000000) == 0) {
      uint64_t v23 = v21 & 0xFFFFFFFFFFFFLL;
    }
    if (v23)
    {
      sub_1C8CA5968(4uLL);
      sub_1C8CA6060((uint64_t)": ", 2, v24);
      sub_1C8CA6D2C(v21, v22);
      uint64_t v25 = *a1;
      char v26 = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v25;
      if ((v26 & 1) == 0)
      {
        uint64_t v25 = sub_1C8D5EB50(0, *((void *)v25 + 2) + 1, 1, v25);
        *a1 = v25;
      }
      unint64_t v28 = *((void *)v25 + 2);
      unint64_t v27 = *((void *)v25 + 3);
      if (v28 >= v27 >> 1) {
        uint64_t v25 = sub_1C8D5EB50((char *)(v27 > 1), v28 + 1, 1, v25);
      }
      *((void *)v25 + 2) = v28 + 1;
      v25[v28 + 32] = 10;
      *a1 = v25;
    }
    uint64_t v29 = *(void *)(v3 + 48);
    unint64_t v30 = *(void *)(v3 + 56);
    uint64_t v31 = HIBYTE(v30) & 0xF;
    if ((v30 & 0x2000000000000000) == 0) {
      uint64_t v31 = v29 & 0xFFFFFFFFFFFFLL;
    }
    if (v31)
    {
      sub_1C8CA5968(6uLL);
      sub_1C8CA6060((uint64_t)": ", 2, v32);
      sub_1C8CA6D2C(v29, v30);
      uint64_t v33 = *a1;
      char v34 = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v33;
      if ((v34 & 1) == 0)
      {
        uint64_t v33 = sub_1C8D5EB50(0, *((void *)v33 + 2) + 1, 1, v33);
        *a1 = v33;
      }
      unint64_t v36 = *((void *)v33 + 2);
      unint64_t v35 = *((void *)v33 + 3);
      if (v36 >= v35 >> 1) {
        uint64_t v33 = sub_1C8D5EB50((char *)(v35 > 1), v36 + 1, 1, v33);
      }
      *((void *)v33 + 2) = v36 + 1;
      v33[v36 + 32] = 10;
      *a1 = v33;
    }
    int v37 = *(_DWORD *)(v3 + 64);
    if (!v37 || (uint64_t result = sub_1C8D3BACC(v37, 7uLL), !v2))
    {
      if (*(unsigned char *)(v3 + 68) != 1 || (uint64_t result = sub_1C8CAB1C0(1, 8uLL), !v2))
      {
        uint64_t v38 = *(void *)(v3 + 72);
        if (!*(void *)(v38 + 16) || (uint64_t result = sub_1C8D72DFC(v38, 9uLL), !v2))
        {
          uint64_t v39 = *(void *)(v3 + 80);
          unint64_t v40 = *(void *)(v3 + 88);
          uint64_t v41 = HIBYTE(v40) & 0xF;
          if ((v40 & 0x2000000000000000) == 0) {
            uint64_t v41 = v39 & 0xFFFFFFFFFFFFLL;
          }
          if (v41)
          {
            sub_1C8CA5968(0xAuLL);
            sub_1C8CA6060((uint64_t)": ", 2, v42);
            sub_1C8CA6D2C(v39, v40);
            uint64_t v43 = *a1;
            char v44 = swift_isUniquelyReferenced_nonNull_native();
            *a1 = v43;
            if ((v44 & 1) == 0)
            {
              uint64_t v43 = sub_1C8D5EB50(0, *((void *)v43 + 2) + 1, 1, v43);
              *a1 = v43;
            }
            unint64_t v46 = *((void *)v43 + 2);
            unint64_t v45 = *((void *)v43 + 3);
            if (v46 >= v45 >> 1) {
              uint64_t v43 = sub_1C8D5EB50((char *)(v45 > 1), v46 + 1, 1, v43);
            }
            *((void *)v43 + 2) = v46 + 1;
            v43[v46 + 32] = 10;
            *a1 = v43;
          }
          uint64_t v47 = *(void *)(v3 + 96);
          unint64_t v48 = *(void *)(v3 + 104);
          uint64_t v49 = HIBYTE(v48) & 0xF;
          if ((v48 & 0x2000000000000000) == 0) {
            uint64_t v49 = v47 & 0xFFFFFFFFFFFFLL;
          }
          if (v49)
          {
            sub_1C8CA5968(0xBuLL);
            sub_1C8CA6060((uint64_t)": ", 2, v50);
            sub_1C8CA6D2C(v47, v48);
            uint64_t v51 = *a1;
            char v52 = swift_isUniquelyReferenced_nonNull_native();
            *a1 = v51;
            if ((v52 & 1) == 0)
            {
              uint64_t v51 = sub_1C8D5EB50(0, *((void *)v51 + 2) + 1, 1, v51);
              *a1 = v51;
            }
            unint64_t v54 = *((void *)v51 + 2);
            unint64_t v53 = *((void *)v51 + 3);
            if (v54 >= v53 >> 1) {
              uint64_t v51 = sub_1C8D5EB50((char *)(v53 > 1), v54 + 1, 1, v51);
            }
            *((void *)v51 + 2) = v54 + 1;
            v51[v54 + 32] = 10;
            *a1 = v51;
          }
          return sub_1C8D2D968((uint64_t)a1, *(void *)(v3 + 112), *(void *)(v3 + 120));
        }
      }
    }
  }
  return result;
}

uint64_t Google_Protobuf_Field.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = a1;
  uint64_t v8 = *v3;
  uint64_t v9 = v3[2];
  char v10 = *((unsigned char *)v3 + 24);
  uint64_t v11 = *((unsigned int *)v3 + 7);
  uint64_t v37 = v3[4];
  uint64_t v34 = v3[6];
  unint64_t v35 = v3[5];
  unint64_t v33 = v3[7];
  int v31 = *((unsigned __int8 *)v3 + 68);
  int v32 = *((_DWORD *)v3 + 16);
  uint64_t v29 = v3[10];
  uint64_t v30 = v3[9];
  uint64_t v27 = v3[12];
  unint64_t v28 = v3[11];
  unint64_t v26 = v3[13];
  long long v25 = *((_OWORD *)v3 + 7);
  if (!v8
    || (char v12 = *((unsigned char *)v3 + 8),
        *(void *)&long long v36 = v8,
        BYTE8(v36) = v12,
        uint64_t v14 = *(uint64_t (**)(long long *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 128),
        unint64_t v15 = sub_1C8CC2470(),
        uint64_t result = v14(&v36, 1, &type metadata for Google_Protobuf_Field.Kind, v15, a2, a3),
        uint64_t v7 = a1,
        !v4))
  {
    if (!v9
      || (*(void *)&long long v36 = v9,
          BYTE8(v36) = v10,
          unint64_t v17 = *(uint64_t (**)(long long *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 128),
          unint64_t v18 = sub_1C8CC241C(),
          uint64_t result = v17(&v36, 2, &type metadata for Google_Protobuf_Field.Cardinality, v18, a2, a3),
          !v4))
    {
      if (!v11
        || (uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 24))(v11, 3, a2, a3), !v4))
      {
        uint64_t v19 = HIBYTE(v35) & 0xF;
        if ((v35 & 0x2000000000000000) == 0) {
          uint64_t v19 = v37 & 0xFFFFFFFFFFFFLL;
        }
        if (!v19 || (uint64_t result = (*(uint64_t (**)(void))(a3 + 112))(), !v4))
        {
          uint64_t v20 = HIBYTE(v33) & 0xF;
          if ((v33 & 0x2000000000000000) == 0) {
            uint64_t v20 = v34 & 0xFFFFFFFFFFFFLL;
          }
          if (!v20 || (uint64_t result = (*(uint64_t (**)(void))(a3 + 112))(), !v4))
          {
            if (!v32 || (uint64_t result = (*(uint64_t (**)(void))(a3 + 24))(), !v4))
            {
              if (!v31
                || (uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 104))(1, 8, a2, a3), !v4))
              {
                if (!*(void *)(v30 + 16)
                  || (uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 280),
                      unint64_t v22 = sub_1C8CC23C8(),
                      uint64_t result = v21(v30, 9, &type metadata for Google_Protobuf_Option, v22, a2, a3),
                      !v4))
                {
                  uint64_t v23 = HIBYTE(v28) & 0xF;
                  if ((v28 & 0x2000000000000000) == 0) {
                    uint64_t v23 = v29 & 0xFFFFFFFFFFFFLL;
                  }
                  if (!v23 || (uint64_t result = (*(uint64_t (**)(void))(a3 + 112))(), !v4))
                  {
                    uint64_t v24 = HIBYTE(v26) & 0xF;
                    if ((v26 & 0x2000000000000000) == 0) {
                      uint64_t v24 = v27 & 0xFFFFFFFFFFFFLL;
                    }
                    if (!v24 || (uint64_t result = (*(uint64_t (**)(void))(a3 + 112))(), !v4))
                    {
                      long long v36 = v25;
                      return UnknownStorage.traverse<A>(visitor:)(v7, a2, a3);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t Google_Protobuf_Field.hashValue.getter()
{
  return sub_1C8D888A0();
}

double sub_1C8CBF0DC@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  *(void *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 24) = 1;
  *(_DWORD *)(a1 + 28) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0xE000000000000000;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0xE000000000000000;
  *(_DWORD *)(a1 + 64) = 0;
  *(unsigned char *)(a1 + 68) = 0;
  *(void *)(a1 + 72) = MEMORY[0x1E4FBC860];
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0xE000000000000000;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0xE000000000000000;
  double result = 0.0;
  *(_OWORD *)(a1 + 112) = xmmword_1C8D8AD80;
  return result;
}

unint64_t sub_1C8CBF12C()
{
  return 0xD000000000000015;
}

uint64_t sub_1C8CBF148@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 112);
  unint64_t v3 = *(void *)(v1 + 120);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C8CA3CF8(v2, v3);
}

uint64_t sub_1C8CBF154(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C8CA3D5C(*(void *)(v1 + 112), *(void *)(v1 + 120));
  *(void *)(v1 + 112) = v2;
  *(void *)(v1 + 120) = v3;
  return result;
}

uint64_t (*sub_1C8CBF188())()
{
  return nullsub_1;
}

uint64_t sub_1C8CBF1A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_Field.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8CBF1C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_Field.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8CBF1D8@<X0>(void *a1@<X8>)
{
  if (qword_1EA565A18 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA565F48;
  uint64_t v3 = qword_1EA565F50;
  uint64_t v4 = unk_1EA565F58;
  *a1 = qword_1EA565F40;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CBF270()
{
  return sub_1C8D690E8();
}

uint64_t sub_1C8CBF2BC()
{
  return sub_1C8D888A0();
}

double sub_1C8CBF370(long long *a1)
{
  long long v3 = *a1;
  long long v4 = a1[1];
  long long v5 = a1[2];
  long long v6 = a1[3];
  uint64_t v7 = *((void *)a1 + 8);
  sub_1C8CBE544();
  *a1 = v3;
  a1[1] = v4;
  double result = *(double *)&v5;
  a1[2] = v5;
  a1[3] = v6;
  *((void *)a1 + 8) = v7;
  return result;
}

uint64_t sub_1C8CBF414()
{
  return sub_1C8D888A0();
}

uint64_t sub_1C8CBF4C8()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234E8A8, &qword_1EA565F60);
}

uint64_t static Google_Protobuf_Field.Kind._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565A20 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA565F68;
  uint64_t v3 = qword_1EA565F70;
  uint64_t v4 = unk_1EA565F78;
  *a1 = qword_1EA565F60;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CBF574@<X0>(void *a1@<X8>)
{
  if (qword_1EA565A20 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA565F68;
  uint64_t v3 = qword_1EA565F70;
  uint64_t v4 = unk_1EA565F78;
  *a1 = qword_1EA565F60;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CBF60C()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234E7A8, &qword_1EA565F80);
}

uint64_t static Google_Protobuf_Field.Cardinality._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565A28 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA565F88;
  uint64_t v3 = qword_1EA565F90;
  uint64_t v4 = unk_1EA565F98;
  *a1 = qword_1EA565F80;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CBF6B8@<X0>(void *a1@<X8>)
{
  if (qword_1EA565A28 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA565F88;
  uint64_t v3 = qword_1EA565F90;
  uint64_t v4 = unk_1EA565F98;
  *a1 = qword_1EA565F80;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

unint64_t static Google_Protobuf_Enum.protoMessageName.getter()
{
  return 0xD000000000000014;
}

uint64_t sub_1C8CBF76C()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234E500, &qword_1EA565FA0);
}

uint64_t static Google_Protobuf_Enum._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565A30 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA565FA8;
  uint64_t v3 = qword_1EA565FB0;
  uint64_t v4 = unk_1EA565FB8;
  *a1 = qword_1EA565FA0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

double sub_1C8CBF818()
{
  type metadata accessor for Google_Protobuf_Enum._StorageClass();
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0xE000000000000000;
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *(void *)(v0 + 32) = MEMORY[0x1E4FBC860];
  *(void *)(v0 + 40) = v1;
  double result = 0.0;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(void *)(v0 + 80) = 0;
  *(unsigned char *)(v0 + 88) = 1;
  qword_1EA565FC0 = v0;
  return result;
}

uint64_t sub_1C8CBF870()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C8CC1EF8(*(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72));
  return MEMORY[0x1F4186488](v0, 89, 7);
}

uint64_t Google_Protobuf_Enum.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CBF91C(a1, a2, a3, (void (*)(void))type metadata accessor for Google_Protobuf_Enum._StorageClass, 89, sub_1C8CC1A30, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C8CBFA10);
}

uint64_t sub_1C8CBF91C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t (*a6)(uint64_t), void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a4(0);
    swift_allocObject();
    uint64_t v14 = swift_retain();
    uint64_t v15 = a6(v14);
    swift_release();
    *(void *)(v7 + 16) = v15;
    swift_release();
  }
  uint64_t v16 = swift_retain();
  a7(v16, a1, a2, a3);
  return swift_release();
}

uint64_t sub_1C8CBFA10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 16);
  uint64_t result = v8(a3, a4);
  uint64_t v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          swift_beginAccess();
          uint64_t v16 = v11;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 336))(a1 + 16, a3, a4);
          goto LABEL_6;
        case 2:
          swift_beginAccess();
          char v12 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 416);
          unint64_t v13 = sub_1C8CC30BC();
          uint64_t v14 = a1 + 32;
          uint64_t v15 = &type metadata for Google_Protobuf_EnumValue;
          goto LABEL_5;
        case 3:
          swift_beginAccess();
          char v12 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 416);
          unint64_t v13 = sub_1C8CC23C8();
          uint64_t v14 = a1 + 40;
          uint64_t v15 = &type metadata for Google_Protobuf_Option;
LABEL_5:
          uint64_t v16 = v11;
          v12(v14, v15, v13, a3, a4);
          goto LABEL_6;
        case 4:
          swift_beginAccess();
          unint64_t v17 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 408);
          unint64_t v18 = sub_1C8CC4204();
          uint64_t v16 = v11;
          v17(a1 + 48, &type metadata for Google_Protobuf_SourceContext, v18, a3, a4);
          goto LABEL_6;
        case 5:
          swift_beginAccess();
          uint64_t v19 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 384);
          unint64_t v20 = sub_1C8CC41B0();
          uint64_t v16 = v11;
          v19(a1 + 80, &type metadata for Google_Protobuf_Syntax, v20, a3, a4);
LABEL_6:
          uint64_t v11 = v16;
          swift_endAccess();
          break;
        default:
          break;
      }
      uint64_t result = v8(a3, a4);
    }
  }
  return result;
}

uint64_t Google_Protobuf_Enum.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CC13D4(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C8CBFCC4);
}

uint64_t sub_1C8CBFCC4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = v4;
  swift_beginAccess();
  uint64_t v9 = *(void *)(a1 + 16);
  unint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0) {
    uint64_t v11 = v9 & 0xFFFFFFFFFFFFLL;
  }
  if (!v11
    || (char v12 = (void (*)(uint64_t, unint64_t, uint64_t, uint64_t, void *))a4[14],
        swift_bridgeObjectRetain(),
        v12(v9, v10, 1, a3, a4),
        uint64_t result = swift_bridgeObjectRelease(),
        !v5))
  {
    swift_beginAccess();
    if (!*(void *)(*(void *)(a1 + 32) + 16)
      || (uint64_t v14 = (void (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, void *))a4[35],
          unint64_t v15 = sub_1C8CC30BC(),
          uint64_t v16 = swift_bridgeObjectRetain(),
          v14(v16, 2, &type metadata for Google_Protobuf_EnumValue, v15, a3, a4),
          uint64_t result = swift_bridgeObjectRelease(),
          !v5))
    {
      swift_beginAccess();
      if (!*(void *)(*(void *)(a1 + 40) + 16)
        || (unint64_t v17 = (void (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, void *))a4[35],
            unint64_t v18 = sub_1C8CC23C8(),
            uint64_t v19 = swift_bridgeObjectRetain(),
            v17(v19, 3, &type metadata for Google_Protobuf_Option, v18, a3, a4),
            uint64_t result = swift_bridgeObjectRelease(),
            !v5))
      {
        swift_beginAccess();
        uint64_t v20 = *(void *)(a1 + 56);
        if (!v20
          || (v26[0] = *(void *)(a1 + 48),
              v26[1] = v20,
              long long v27 = *(_OWORD *)(a1 + 64),
              uint64_t v21 = (uint64_t (*)(void *, uint64_t, ValueMetadata *, unint64_t, uint64_t, void *))a4[17],
              unint64_t v22 = sub_1C8CC4204(),
              uint64_t result = v21(v26, 4, &type metadata for Google_Protobuf_SourceContext, v22, a3, a4),
              !v5))
        {
          uint64_t result = swift_beginAccess();
          if (*(void *)(a1 + 80))
          {
            char v23 = *(unsigned char *)(a1 + 88);
            uint64_t v28 = *(void *)(a1 + 80);
            char v29 = v23;
            uint64_t v24 = (uint64_t (*)(uint64_t *, uint64_t, ValueMetadata *, unint64_t, uint64_t, void *))a4[16];
            unint64_t v25 = sub_1C8CC41B0();
            return v24(&v28, 5, &type metadata for Google_Protobuf_Syntax, v25, a3, a4);
          }
        }
      }
    }
  }
  return result;
}

uint64_t static Google_Protobuf_Enum.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1C8CC24C4(a1, a2, sub_1C8CBFF68) & 1;
}

uint64_t sub_1C8CBFF68(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  swift_beginAccess();
  BOOL v6 = v4 == *(void *)(a2 + 16) && v5 == *(void *)(a2 + 24);
  if (v6 || (v7 = sub_1C8D887C0(), uint64_t result = 0, (v7 & 1) != 0))
  {
    swift_beginAccess();
    uint64_t v9 = *(void *)(a1 + 32);
    swift_beginAccess();
    uint64_t v10 = *(void *)(a2 + 32);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v11 = sub_1C8CFD08C(v9, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0) {
      goto LABEL_25;
    }
    swift_beginAccess();
    uint64_t v12 = *(void *)(a1 + 40);
    swift_beginAccess();
    uint64_t v13 = *(void *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v14 = sub_1C8CF9F50(v12, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0) {
      goto LABEL_25;
    }
    swift_beginAccess();
    uint64_t v16 = *(void *)(a1 + 48);
    uint64_t v15 = *(void *)(a1 + 56);
    uint64_t v18 = *(void *)(a1 + 64);
    unint64_t v17 = *(void *)(a1 + 72);
    swift_beginAccess();
    uint64_t v19 = *(void *)(a2 + 48);
    uint64_t v20 = *(void *)(a2 + 56);
    uint64_t v21 = *(void *)(a2 + 64);
    unint64_t v22 = *(void *)(a2 + 72);
    if (v15)
    {
      if (v20)
      {
        if (v16 == v19 && v15 == v20 || (sub_1C8D887C0() & 1) != 0)
        {
          sub_1C8CC1EAC(v16, v15, v18, v17);
          sub_1C8CC1EAC(v16, v15, v18, v17);
          sub_1C8CC1EAC(v19, v20, v21, v22);
          sub_1C8CA3CF8(v18, v17);
          sub_1C8CA3CF8(v21, v22);
          char v32 = sub_1C8D01FBC(v18, v17, v21, v22);
          sub_1C8CA3D5C(v21, v22);
          sub_1C8CA3D5C(v18, v17);
          sub_1C8CC1EF8(v19, v20, v21, v22);
          swift_bridgeObjectRelease();
          sub_1C8CA3D5C(v18, v17);
          sub_1C8CC1EF8(v16, v15, v18, v17);
          if ((v32 & 1) == 0) {
            goto LABEL_25;
          }
LABEL_16:
          swift_beginAccess();
          uint64_t v23 = *(void *)(a1 + 80);
          int v24 = *(unsigned __int8 *)(a1 + 88);
          swift_release();
          swift_beginAccess();
          uint64_t v25 = *(void *)(a2 + 80);
          int v26 = *(unsigned __int8 *)(a2 + 88);
          swift_release();
          uint64_t v27 = v23 != 0;
          if (!v24) {
            uint64_t v27 = v23;
          }
          if (v26 == 1)
          {
            if (v25)
            {
              if (v27 != 1) {
                return 0;
              }
            }
            else if (v27)
            {
              return 0;
            }
          }
          else if (v27 != v25)
          {
            return 0;
          }
          return 1;
        }
        sub_1C8CC1EAC(v16, v15, v18, v17);
        swift_bridgeObjectRetain();
        sub_1C8CA3CF8(v18, v17);
        swift_bridgeObjectRelease();
        sub_1C8CA3D5C(v18, v17);
        uint64_t v28 = v16;
        uint64_t v29 = v15;
        uint64_t v30 = v18;
        unint64_t v31 = v17;
LABEL_24:
        sub_1C8CC1EF8(v28, v29, v30, v31);
LABEL_25:
        swift_release();
        swift_release();
        return 0;
      }
      swift_bridgeObjectRetain();
      sub_1C8CA3CF8(v18, v17);
      swift_bridgeObjectRetain();
      sub_1C8CA3CF8(v18, v17);
      swift_bridgeObjectRelease();
      sub_1C8CA3D5C(v18, v17);
    }
    else if (!v20)
    {
      goto LABEL_16;
    }
    sub_1C8CC1EAC(v19, v20, v21, v22);
    sub_1C8CC1EF8(v16, v15, v18, v17);
    uint64_t v28 = v19;
    uint64_t v29 = v20;
    uint64_t v30 = v21;
    unint64_t v31 = v22;
    goto LABEL_24;
  }
  return result;
}

uint64_t Google_Protobuf_Enum.hashValue.getter()
{
  return sub_1C8CC039C((void (*)(uint64_t, long long *))sub_1C8D6BBD8);
}

uint64_t sub_1C8CC039C(void (*a1)(uint64_t, long long *))
{
  uint64_t v3 = *v1;
  unint64_t v4 = v1[1];
  uint64_t v5 = v1[2];
  sub_1C8D88840();
  sub_1C8CBD19C(v7, v3, v4, v5, a1);
  return sub_1C8D888A0();
}

uint64_t sub_1C8CC0400@<X0>(uint64_t a1@<X8>)
{
  return sub_1C8CC0424(&qword_1EA565A38, &qword_1EA565FC0, a1);
}

uint64_t sub_1C8CC0424@<X0>(void *a1@<X2>, void *a2@<X3>, uint64_t a3@<X8>)
{
  *(_OWORD *)a3 = xmmword_1C8D8AD80;
  if (*a1 != -1) {
    swift_once();
  }
  *(void *)(a3 + 16) = *a2;
  return swift_retain();
}

unint64_t sub_1C8CC0488()
{
  return 0xD000000000000014;
}

uint64_t sub_1C8CC04A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_1C8CA3CF8(v2, v3);
}

uint64_t sub_1C8CC04B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_Enum.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8CC04C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_Enum.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8CC04E0@<X0>(void *a1@<X8>)
{
  if (qword_1EA565A30 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA565FA8;
  uint64_t v3 = qword_1EA565FB0;
  uint64_t v4 = unk_1EA565FB8;
  *a1 = qword_1EA565FA0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CC0578()
{
  return sub_1C8D691BC(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16));
}

uint64_t sub_1C8CC0584(uint64_t a1, uint64_t a2)
{
  return sub_1C8CC059C(a1, a2, (void (*)(uint64_t, long long *))sub_1C8D6BBD8);
}

uint64_t sub_1C8CC059C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, long long *))
{
  uint64_t v5 = *v3;
  unint64_t v6 = v3[1];
  uint64_t v7 = v3[2];
  sub_1C8D88840();
  sub_1C8CBD19C(v9, v5, v6, v7, a3);
  return sub_1C8D888A0();
}

double sub_1C8CC0600(long long *a1)
{
  return sub_1C8CBD19C(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), (void (*)(uint64_t, long long *))sub_1C8D6BBD8);
}

uint64_t sub_1C8CC0634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CC064C(a1, a2, a3, (void (*)(uint64_t, long long *))sub_1C8D6BBD8);
}

uint64_t sub_1C8CC064C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, long long *))
{
  uint64_t v6 = *v4;
  unint64_t v7 = v4[1];
  uint64_t v8 = v4[2];
  sub_1C8D88840();
  sub_1C8CBD19C(v10, v6, v7, v8, a4);
  return sub_1C8D888A0();
}

uint64_t sub_1C8CC06AC(uint64_t *a1, uint64_t *a2)
{
  return sub_1C8CC24C4(a1, a2, sub_1C8CBFF68) & 1;
}

unint64_t static Google_Protobuf_EnumValue.protoMessageName.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_1C8CC06F8()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234B6D8, &qword_1EA565FC8);
}

uint64_t static Google_Protobuf_EnumValue._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565A40 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA565FD0;
  uint64_t v3 = qword_1EA565FD8;
  uint64_t v4 = unk_1EA565FE0;
  *a1 = qword_1EA565FC8;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_EnumValue.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  uint64_t result = v7(a2, a3);
  uint64_t v10 = v4;
  if (!v4)
  {
    while (1)
    {
      if (v9) {
        return result;
      }
      if (result == 3) {
        break;
      }
      if (result == 2)
      {
        uint64_t v13 = v10;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 72))(v3 + 16, a2, a3);
        goto LABEL_5;
      }
      if (result == 1)
      {
        uint64_t v13 = v10;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 336))(v3, a2, a3);
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = v7(a2, a3);
    }
    char v11 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 416);
    unint64_t v12 = sub_1C8CC23C8();
    uint64_t v13 = v10;
    v11(v3 + 24, &type metadata for Google_Protobuf_Option, v12, a2, a3);
LABEL_5:
    uint64_t v10 = v13;
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_1C8CC0904()
{
  unint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = *(void *)v0 & 0xFFFFFFFFFFFFLL;
  }
  if (v3)
  {
    sub_1C8D88850();
    sub_1C8D883C0();
  }
  if (*(_DWORD *)(v0 + 16))
  {
    sub_1C8D88850();
    sub_1C8D88880();
  }
  uint64_t result = *(void *)(v0 + 24);
  if (!*(void *)(result + 16) || (uint64_t result = sub_1C8D19C00(result), !v1))
  {
    uint64_t v5 = *(void *)(v0 + 32);
    unint64_t v6 = *(void *)(v0 + 40);
    switch(v6 >> 62)
    {
      case 1uLL:
        if ((int)v5 != v5 >> 32) {
          goto LABEL_15;
        }
        break;
      case 2uLL:
        if (*(void *)(v5 + 16) != *(void *)(v5 + 24)) {
          goto LABEL_15;
        }
        break;
      case 3uLL:
        return result;
      default:
        if ((v6 & 0xFF000000000000) != 0) {
LABEL_15:
        }
          uint64_t result = sub_1C8D881D0();
        break;
    }
  }
  return result;
}

uint64_t sub_1C8CC0A14(char **a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *(void *)v3;
  unint64_t v6 = *(void *)(v3 + 8);
  uint64_t v7 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0) {
    uint64_t v7 = *(void *)v3 & 0xFFFFFFFFFFFFLL;
  }
  if (v7)
  {
    sub_1C8CA5968(1uLL);
    sub_1C8CA6060((uint64_t)": ", 2, v8);
    sub_1C8CA6D2C(v5, v6);
    char v9 = *a1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a1 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      char v9 = sub_1C8D5EB50(0, *((void *)v9 + 2) + 1, 1, v9);
      *a1 = v9;
    }
    unint64_t v12 = *((void *)v9 + 2);
    unint64_t v11 = *((void *)v9 + 3);
    if (v12 >= v11 >> 1) {
      char v9 = sub_1C8D5EB50((char *)(v11 > 1), v12 + 1, 1, v9);
    }
    *((void *)v9 + 2) = v12 + 1;
    v9[v12 + 32] = 10;
    *a1 = v9;
  }
  int v13 = *(_DWORD *)(v3 + 16);
  if (!v13 || (uint64_t result = sub_1C8D3BACC(v13, 2uLL), !v2))
  {
    uint64_t v15 = *(void *)(v3 + 24);
    if (!*(void *)(v15 + 16)) {
      return sub_1C8D2D968((uint64_t)a1, *(void *)(v3 + 32), *(void *)(v3 + 40));
    }
    uint64_t result = sub_1C8D72DFC(v15, 3uLL);
    if (!v2) {
      return sub_1C8D2D968((uint64_t)a1, *(void *)(v3 + 32), *(void *)(v3 + 40));
    }
  }
  return result;
}

uint64_t Google_Protobuf_EnumValue.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v8 = *(void *)(v3 + 8);
  uint64_t v9 = *(unsigned int *)(v3 + 16);
  uint64_t v10 = *(void *)(v3 + 24);
  uint64_t v11 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0) {
    uint64_t v11 = *(void *)v3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v11 || (uint64_t result = (*(uint64_t (**)(void))(a3 + 112))(), !v4))
  {
    if (!v9
      || (uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 24))(v9, 2, a2, a3), !v4))
    {
      if (!*(void *)(v10 + 16)) {
        return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
      }
      int v13 = *(uint64_t (**)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 280);
      unint64_t v14 = sub_1C8CC23C8();
      uint64_t result = v13(v10, 3, &type metadata for Google_Protobuf_Option, v14, a2, a3);
      if (!v4) {
        return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
      }
    }
  }
  return result;
}

uint64_t Google_Protobuf_EnumValue.hashValue.getter()
{
  return sub_1C8D888A0();
}

double sub_1C8CC0D50@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(_DWORD *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = MEMORY[0x1E4FBC860];
  double result = 0.0;
  *(_OWORD *)(a1 + 32) = xmmword_1C8D8AD80;
  return result;
}

unint64_t sub_1C8CC0D78()
{
  return 0xD000000000000019;
}

uint64_t sub_1C8CC0D94@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  unint64_t v3 = *(void *)(v1 + 40);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C8CA3CF8(v2, v3);
}

uint64_t sub_1C8CC0DA0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C8CA3D5C(*(void *)(v1 + 32), *(void *)(v1 + 40));
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v3;
  return result;
}

uint64_t (*sub_1C8CC0DD4())()
{
  return nullsub_1;
}

uint64_t sub_1C8CC0DF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_EnumValue.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8CC0E0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_EnumValue.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8CC0E24@<X0>(void *a1@<X8>)
{
  if (qword_1EA565A40 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA565FD0;
  uint64_t v3 = qword_1EA565FD8;
  uint64_t v4 = unk_1EA565FE0;
  *a1 = qword_1EA565FC8;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CC0EBC()
{
  return sub_1C8D692B0();
}

uint64_t sub_1C8CC0EF8()
{
  return sub_1C8D888A0();
}

double sub_1C8CC0F9C(long long *a1)
{
  long long v3 = *a1;
  long long v4 = a1[1];
  long long v5 = a1[2];
  long long v6 = a1[3];
  uint64_t v7 = *((void *)a1 + 8);
  sub_1C8CC0904();
  *a1 = v3;
  a1[1] = v4;
  double result = *(double *)&v5;
  a1[2] = v5;
  a1[3] = v6;
  *((void *)a1 + 8) = v7;
  return result;
}

uint64_t sub_1C8CC1028()
{
  return sub_1C8D888A0();
}

unint64_t static Google_Protobuf_Option.protoMessageName.getter()
{
  return 0xD000000000000016;
}

uint64_t sub_1C8CC10E8()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234F2E8, &qword_1EA565FE8);
}

uint64_t static Google_Protobuf_Option._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565A48 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA565FF0;
  uint64_t v3 = qword_1EA565FF8;
  uint64_t v4 = unk_1EA566000;
  *a1 = qword_1EA565FE8;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CC1194()
{
  swift_bridgeObjectRelease();
  sub_1C8CB6084(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
  return MEMORY[0x1F4186488](v0, 56, 7);
}

uint64_t Google_Protobuf_Option.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C8CC1FCC();
  uint64_t v6 = swift_retain();
  sub_1C8CC1248(v6, a1, a2, a3);
  return swift_release();
}

uint64_t sub_1C8CC1248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 16);
  uint64_t result = v8(a3, a4);
  uint64_t v11 = v4;
  if (!v4)
  {
    uint64_t v12 = a1 + 32;
    uint64_t v13 = a1 + 16;
    while (1)
    {
      if (v10) {
        return result;
      }
      if (result == 2) {
        break;
      }
      if (result == 1)
      {
        swift_beginAccess();
        uint64_t v16 = v11;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 336))(v13, a3, a4);
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = v8(a3, a4);
    }
    swift_beginAccess();
    unint64_t v14 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 408);
    unint64_t v15 = sub_1C8CC415C();
    uint64_t v16 = v11;
    v14(v12, &type metadata for Google_Protobuf_Any, v15, a3, a4);
LABEL_5:
    uint64_t v11 = v16;
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

uint64_t Google_Protobuf_Option.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CC13D4(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C8CC1478);
}

uint64_t sub_1C8CC13D4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9 = swift_retain();
  a4(v9, a1, a2, a3);
  uint64_t result = swift_release();
  if (!v4) {
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_1C8CC1478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  swift_beginAccess();
  uint64_t v9 = *(void *)(a1 + 16);
  unint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0) {
    uint64_t v11 = v9 & 0xFFFFFFFFFFFFLL;
  }
  if (!v11
    || (uint64_t v12 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(a4 + 112),
        swift_bridgeObjectRetain(),
        v12(v9, v10, 1, a3, a4),
        uint64_t result = swift_bridgeObjectRelease(),
        !v5))
  {
    uint64_t result = swift_beginAccess();
    uint64_t v14 = *(void *)(a1 + 48);
    if (v14)
    {
      long long v17 = *(_OWORD *)(a1 + 32);
      uint64_t v18 = v14;
      unint64_t v15 = *(uint64_t (**)(long long *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 136);
      unint64_t v16 = sub_1C8CC415C();
      return v15(&v17, 2, &type metadata for Google_Protobuf_Any, v16, a3, a4);
    }
  }
  return result;
}

uint64_t static Google_Protobuf_Option.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1C8CC24C4(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1C8CC15D4) & 1;
}

BOOL sub_1C8CC15D4(void *a1, void *a2)
{
  swift_beginAccess();
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  swift_beginAccess();
  BOOL v6 = v4 == a2[2] && v5 == a2[3];
  if (v6 || (v7 = sub_1C8D887C0(), BOOL result = 0, (v7 & 1) != 0))
  {
    swift_beginAccess();
    uint64_t v10 = a1[4];
    unint64_t v9 = a1[5];
    uint64_t v11 = a1[6];
    swift_beginAccess();
    uint64_t v13 = a2[4];
    unint64_t v12 = a2[5];
    uint64_t v14 = a2[6];
    if (v11)
    {
      if (v14)
      {
        sub_1C8CC1F8C(v10, v9, v11);
        sub_1C8CC1F8C(v10, v9, v11);
        swift_retain();
        swift_retain();
        sub_1C8CC1F8C(v13, v12, v14);
        if (v11 == v14 || (sub_1C8D631A8(v14) & 1) != 0)
        {
          sub_1C8CA3CF8(v10, v9);
          sub_1C8CA3CF8(v13, v12);
          char v15 = sub_1C8D01FBC(v10, v9, v13, v12);
          sub_1C8CA3D5C(v13, v12);
          sub_1C8CA3D5C(v10, v9);
          swift_release();
          swift_release();
          sub_1C8CB6084(v13, v12, v14);
          sub_1C8CA3D5C(v10, v9);
          swift_release();
          sub_1C8CB6084(v10, v9, v11);
          return (v15 & 1) != 0;
        }
        swift_release();
        swift_release();
        sub_1C8CB6084(v13, v12, v14);
        sub_1C8CA3D5C(v10, v9);
        swift_release();
        uint64_t v16 = v10;
        unint64_t v17 = v9;
        uint64_t v18 = v11;
LABEL_17:
        sub_1C8CB6084(v16, v17, v18);
        return 0;
      }
      sub_1C8CC1F8C(v10, v9, v11);
      sub_1C8CA3CF8(v10, v9);
      swift_retain();
      sub_1C8CA3D5C(v10, v9);
      swift_release();
    }
    else if (!v14)
    {
      return 1;
    }
    sub_1C8CC1F8C(v13, v12, v14);
    sub_1C8CB6084(v10, v9, v11);
    uint64_t v16 = v13;
    unint64_t v17 = v12;
    uint64_t v18 = v14;
    goto LABEL_17;
  }
  return result;
}

uint64_t Google_Protobuf_Option.hashValue.getter()
{
  return sub_1C8CC039C((void (*)(uint64_t, long long *))sub_1C8D6C07C);
}

uint64_t sub_1C8CC1868@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_1C8D8AD80;
  type metadata accessor for Google_Protobuf_Option._StorageClass();
  uint64_t result = swift_initStaticObject();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C8CC18AC()
{
  return 0xD000000000000016;
}

uint64_t sub_1C8CC18C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_Option.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8CC18E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_Option.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8CC18F8@<X0>(void *a1@<X8>)
{
  if (qword_1EA565A48 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA565FF0;
  uint64_t v3 = qword_1EA565FF8;
  uint64_t v4 = unk_1EA566000;
  *a1 = qword_1EA565FE8;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CC1990()
{
  return sub_1C8D693A8(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16));
}

uint64_t sub_1C8CC199C(uint64_t a1, uint64_t a2)
{
  return sub_1C8CC059C(a1, a2, (void (*)(uint64_t, long long *))sub_1C8D6C07C);
}

double sub_1C8CC19B4(long long *a1)
{
  return sub_1C8CBD19C(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), (void (*)(uint64_t, long long *))sub_1C8D6C07C);
}

uint64_t sub_1C8CC19E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CC064C(a1, a2, a3, (void (*)(uint64_t, long long *))sub_1C8D6C07C);
}

uint64_t sub_1C8CC1A00(uint64_t *a1, uint64_t *a2)
{
  return sub_1C8CC24C4(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1C8CC15D4) & 1;
}

uint64_t sub_1C8CC1A30(uint64_t a1)
{
  *(void *)(v1 + 16) = 0;
  uint64_t v3 = MEMORY[0x1E4FBC860];
  *(void *)(v1 + 32) = MEMORY[0x1E4FBC860];
  *(void *)(v1 + 40) = v3;
  *(void *)(v1 + 24) = 0xE000000000000000;
  *(_OWORD *)(v1 + 64) = 0u;
  *(void *)(v1 + 80) = 0;
  *(_OWORD *)(v1 + 48) = 0u;
  *(unsigned char *)(v1 + 88) = 1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  swift_beginAccess();
  *(void *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v6 = *(void *)(a1 + 32);
  swift_beginAccess();
  *(void *)(v1 + 32) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v7 = *(void *)(a1 + 40);
  swift_beginAccess();
  *(void *)(v1 + 40) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(a1 + 56);
  uint64_t v10 = *(void *)(a1 + 64);
  unint64_t v11 = *(void *)(a1 + 72);
  swift_beginAccess();
  uint64_t v12 = *(void *)(v1 + 48);
  uint64_t v14 = *(void *)(v1 + 56);
  uint64_t v13 = *(void *)(v1 + 64);
  unint64_t v15 = *(void *)(v1 + 72);
  *(void *)(v1 + 48) = v8;
  *(void *)(v1 + 56) = v9;
  *(void *)(v1 + 64) = v10;
  *(void *)(v1 + 72) = v11;
  sub_1C8CC1EAC(v8, v9, v10, v11);
  sub_1C8CC1EF8(v12, v14, v13, v15);
  swift_beginAccess();
  uint64_t v16 = *(void *)(a1 + 80);
  LOBYTE(a1) = *(unsigned char *)(a1 + 88);
  swift_beginAccess();
  *(void *)(v1 + 80) = v16;
  *(unsigned char *)(v1 + 88) = a1;
  return v1;
}

uint64_t sub_1C8CC1C48(uint64_t a1)
{
  *(void *)(v1 + 16) = 0;
  uint64_t v3 = MEMORY[0x1E4FBC860];
  *(void *)(v1 + 32) = MEMORY[0x1E4FBC860];
  *(void *)(v1 + 40) = v3;
  *(void *)(v1 + 48) = v3;
  *(void *)(v1 + 24) = 0xE000000000000000;
  *(_OWORD *)(v1 + 72) = 0u;
  *(void *)(v1 + 88) = 0;
  *(_OWORD *)(v1 + 56) = 0u;
  *(unsigned char *)(v1 + 96) = 1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  swift_beginAccess();
  *(void *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v6 = *(void *)(a1 + 32);
  swift_beginAccess();
  *(void *)(v1 + 32) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v7 = *(void *)(a1 + 40);
  swift_beginAccess();
  *(void *)(v1 + 40) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v8 = *(void *)(a1 + 48);
  swift_beginAccess();
  *(void *)(v1 + 48) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v9 = *(void *)(a1 + 56);
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v11 = *(void *)(a1 + 72);
  unint64_t v12 = *(void *)(a1 + 80);
  swift_beginAccess();
  uint64_t v13 = *(void *)(v1 + 56);
  uint64_t v15 = *(void *)(v1 + 64);
  uint64_t v14 = *(void *)(v1 + 72);
  unint64_t v16 = *(void *)(v1 + 80);
  *(void *)(v1 + 56) = v9;
  *(void *)(v1 + 64) = v10;
  *(void *)(v1 + 72) = v11;
  *(void *)(v1 + 80) = v12;
  sub_1C8CC1EAC(v9, v10, v11, v12);
  sub_1C8CC1EF8(v13, v15, v14, v16);
  swift_beginAccess();
  uint64_t v17 = *(void *)(a1 + 88);
  LOBYTE(a1) = *(unsigned char *)(a1 + 96);
  swift_beginAccess();
  *(void *)(v1 + 88) = v17;
  *(unsigned char *)(v1 + 96) = a1;
  return v1;
}

void sub_1C8CC1EAC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1C8CA3CF8(a3, a4);
  }
}

void sub_1C8CC1EF8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    sub_1C8CA3D5C(a3, a4);
  }
}

uint64_t type metadata accessor for Google_Protobuf_Enum._StorageClass()
{
  return self;
}

uint64_t type metadata accessor for Google_Protobuf_Option._StorageClass()
{
  return self;
}

uint64_t sub_1C8CC1F8C(uint64_t result, unint64_t a2, uint64_t a3)
{
  if (a3)
  {
    sub_1C8CA3CF8(result, a2);
    return swift_retain();
  }
  return result;
}

uint64_t sub_1C8CC1FCC()
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v1 = *(void **)(v0 + 16);
    type metadata accessor for Google_Protobuf_Option._StorageClass();
    uint64_t v2 = (void *)swift_allocObject();
    v2[2] = 0;
    v2[3] = 0xE000000000000000;
    v2[5] = 0;
    v2[6] = 0;
    long long v2[4] = 0;
    swift_beginAccess();
    uint64_t v4 = v1[2];
    uint64_t v3 = v1[3];
    swift_beginAccess();
    v2[2] = v4;
    v2[3] = v3;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v5 = v1[4];
    unint64_t v6 = v1[5];
    uint64_t v7 = v1[6];
    sub_1C8CC1F8C(v5, v6, v7);
    swift_release();
    swift_beginAccess();
    uint64_t v8 = v2[4];
    unint64_t v9 = v2[5];
    uint64_t v10 = v2[6];
    long long v2[4] = v5;
    v2[5] = v6;
    v2[6] = v7;
    sub_1C8CB6084(v8, v9, v10);
    *(void *)(v0 + 16) = v2;
    swift_release();
  }
  return *(void *)(v0 + 16);
}

uint64_t _s20SiriOntologyProtobuf07Google_C6_FieldV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 28);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v33 = *(void *)(a1 + 56);
  uint64_t v34 = *(void *)(a1 + 48);
  int v31 = *(_DWORD *)(a1 + 64);
  int v29 = *(unsigned __int8 *)(a1 + 68);
  uint64_t v27 = *(void *)(a1 + 72);
  uint64_t v25 = *(void *)(a1 + 80);
  uint64_t v23 = *(void *)(a1 + 88);
  uint64_t v21 = *(void *)(a1 + 96);
  uint64_t v19 = *(void *)(a1 + 104);
  unint64_t v16 = *(void *)(a1 + 120);
  uint64_t v17 = *(void *)(a1 + 112);
  uint64_t v6 = *(void *)(a2 + 16);
  int v7 = *(unsigned __int8 *)(a2 + 24);
  int v8 = *(_DWORD *)(a2 + 28);
  uint64_t v10 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v32 = *(void *)(a2 + 48);
  int v30 = *(_DWORD *)(a2 + 64);
  int v28 = *(unsigned __int8 *)(a2 + 68);
  uint64_t v26 = *(void *)(a2 + 72);
  uint64_t v24 = *(void *)(a2 + 80);
  uint64_t v22 = *(void *)(a2 + 88);
  uint64_t v20 = *(void *)(a2 + 96);
  uint64_t v18 = *(void *)(a2 + 104);
  unint64_t v14 = *(void *)(a2 + 120);
  uint64_t v15 = *(void *)(a2 + 112);
  if (sub_1C8CB7E9C(*(void *)a1, *(unsigned __int8 *)(a1 + 8), *(void *)a2))
  {
    if (v7)
    {
      switch(v6)
      {
        case 1:
          if (v2 != 1) {
            return 0;
          }
          goto LABEL_13;
        case 2:
          if (v2 != 2) {
            return 0;
          }
          goto LABEL_13;
        case 3:
          if (v2 == 3) {
            goto LABEL_13;
          }
          return 0;
        default:
          if (v2) {
            return 0;
          }
          goto LABEL_13;
      }
    }
    if (v2 == v6)
    {
LABEL_13:
      if (v3 == v8
        && (v5 == v10 && v4 == v9 || (sub_1C8D887C0() & 1) != 0)
        && (v34 == v32 && v33 == v11 || (sub_1C8D887C0() & 1) != 0)
        && v31 == v30
        && ((v29 ^ v28) & 1) == 0
        && (sub_1C8CF9F50(v27, v26) & 1) != 0
        && (v25 == v24 && v23 == v22 || (sub_1C8D887C0() & 1) != 0)
        && (v21 == v20 && v19 == v18 || (sub_1C8D887C0() & 1) != 0))
      {
        sub_1C8CA3CF8(v17, v16);
        sub_1C8CA3CF8(v15, v14);
        char v12 = sub_1C8D01FBC(v17, v16, v15, v14);
        sub_1C8CA3D5C(v15, v14);
        sub_1C8CA3D5C(v17, v16);
        return v12 & 1;
      }
    }
  }
  return 0;
}

unint64_t sub_1C8CC23C8()
{
  unint64_t result = qword_1EA566008;
  if (!qword_1EA566008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566008);
  }
  return result;
}

unint64_t sub_1C8CC241C()
{
  unint64_t result = qword_1EA566010;
  if (!qword_1EA566010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566010);
  }
  return result;
}

unint64_t sub_1C8CC2470()
{
  unint64_t result = qword_1EA566018;
  if (!qword_1EA566018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566018);
  }
  return result;
}

uint64_t sub_1C8CC24C4(uint64_t *a1, uint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  uint64_t v8 = a2[2];
  if (v5 != v8)
  {
    swift_retain();
    swift_retain();
    LOBYTE(a3) = a3(v5, v8);
    swift_release();
    swift_release();
    if ((a3 & 1) == 0) {
      return 0;
    }
  }
  sub_1C8CA3CF8(v3, v4);
  sub_1C8CA3CF8(v6, v7);
  char v10 = sub_1C8D01FBC(v3, v4, v6, v7);
  sub_1C8CA3D5C(v6, v7);
  sub_1C8CA3D5C(v3, v4);
  return v10 & 1;
}

uint64_t _s20SiriOntologyProtobuf07Google_C10_EnumValueV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2 = *(_DWORD *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  unint64_t v5 = *(void *)(a1 + 40);
  int v6 = *(_DWORD *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  unint64_t v9 = *(void *)(a2 + 40);
  if ((*(void *)a1 != *(void *)a2 || *(void *)(a1 + 8) != *(void *)(a2 + 8)) && (sub_1C8D887C0() & 1) == 0
    || v2 != v6
    || (sub_1C8CF9F50(v4, v8) & 1) == 0)
  {
    return 0;
  }
  sub_1C8CA3CF8(v3, v5);
  sub_1C8CA3CF8(v7, v9);
  char v10 = sub_1C8D01FBC(v3, v5, v7, v9);
  sub_1C8CA3D5C(v7, v9);
  sub_1C8CA3D5C(v3, v5);
  return v10 & 1;
}

uint64_t sub_1C8CC2688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CC3264(a1, a2, a3, (uint64_t (*)(void))sub_1C8CC26B4, (uint64_t (*)(void))sub_1C8CC2708);
}

unint64_t sub_1C8CC26B4()
{
  unint64_t result = qword_1EA566020;
  if (!qword_1EA566020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566020);
  }
  return result;
}

unint64_t sub_1C8CC2708()
{
  unint64_t result = qword_1EA566028;
  if (!qword_1EA566028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566028);
  }
  return result;
}

unint64_t sub_1C8CC2760()
{
  unint64_t result = qword_1EA566030;
  if (!qword_1EA566030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566030);
  }
  return result;
}

uint64_t sub_1C8CC27B4()
{
  return sub_1C8CC2ACC(&qword_1EA566038, &qword_1EA566040);
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_1C8CC2824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CC3264(a1, a2, a3, (uint64_t (*)(void))sub_1C8CC2850, (uint64_t (*)(void))sub_1C8CC28A4);
}

unint64_t sub_1C8CC2850()
{
  unint64_t result = qword_1EA566048;
  if (!qword_1EA566048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566048);
  }
  return result;
}

unint64_t sub_1C8CC28A4()
{
  unint64_t result = qword_1EA566050;
  if (!qword_1EA566050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566050);
  }
  return result;
}

unint64_t sub_1C8CC28FC()
{
  unint64_t result = qword_1EA566058;
  if (!qword_1EA566058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566058);
  }
  return result;
}

uint64_t sub_1C8CC2950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CC3264(a1, a2, a3, (uint64_t (*)(void))sub_1C8CC297C, (uint64_t (*)(void))sub_1C8CC29D0);
}

unint64_t sub_1C8CC297C()
{
  unint64_t result = qword_1EA566060;
  if (!qword_1EA566060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566060);
  }
  return result;
}

unint64_t sub_1C8CC29D0()
{
  unint64_t result = qword_1EA566068;
  if (!qword_1EA566068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566068);
  }
  return result;
}

unint64_t sub_1C8CC2A28()
{
  unint64_t result = qword_1EA566070;
  if (!qword_1EA566070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566070);
  }
  return result;
}

uint64_t sub_1C8CC2A7C()
{
  return sub_1C8CC2ACC(&qword_1EA566078, &qword_1EA566080);
}

uint64_t sub_1C8CC2AA4()
{
  return sub_1C8CC2ACC(&qword_1EA566088, &qword_1EA566090);
}

uint64_t sub_1C8CC2ACC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C8CC2B1C(uint64_t a1)
{
  unint64_t result = sub_1C8CC2B44();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8CC2B44()
{
  unint64_t result = qword_1EA566098;
  if (!qword_1EA566098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566098);
  }
  return result;
}

uint64_t sub_1C8CC2B98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CC3264(a1, a2, a3, (uint64_t (*)(void))sub_1C8CC2BC4, (uint64_t (*)(void))sub_1C8CC2C18);
}

unint64_t sub_1C8CC2BC4()
{
  unint64_t result = qword_1EA5660A0;
  if (!qword_1EA5660A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5660A0);
  }
  return result;
}

unint64_t sub_1C8CC2C18()
{
  unint64_t result = qword_1EA5660A8;
  if (!qword_1EA5660A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5660A8);
  }
  return result;
}

unint64_t sub_1C8CC2C70()
{
  unint64_t result = qword_1EA5660B0;
  if (!qword_1EA5660B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5660B0);
  }
  return result;
}

unint64_t sub_1C8CC2CC4(uint64_t a1)
{
  unint64_t result = sub_1C8CC2CEC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8CC2CEC()
{
  unint64_t result = qword_1EA5660B8;
  if (!qword_1EA5660B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5660B8);
  }
  return result;
}

uint64_t sub_1C8CC2D40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CC3264(a1, a2, a3, (uint64_t (*)(void))sub_1C8CC2D6C, (uint64_t (*)(void))sub_1C8CC2DC0);
}

unint64_t sub_1C8CC2D6C()
{
  unint64_t result = qword_1EA5660C0;
  if (!qword_1EA5660C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5660C0);
  }
  return result;
}

unint64_t sub_1C8CC2DC0()
{
  unint64_t result = qword_1EA5660C8;
  if (!qword_1EA5660C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5660C8);
  }
  return result;
}

unint64_t sub_1C8CC2E18()
{
  unint64_t result = qword_1EA5660D0;
  if (!qword_1EA5660D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5660D0);
  }
  return result;
}

unint64_t sub_1C8CC2E6C(uint64_t a1)
{
  unint64_t result = sub_1C8CC2E94();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8CC2E94()
{
  unint64_t result = qword_1EA5660D8;
  if (!qword_1EA5660D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5660D8);
  }
  return result;
}

uint64_t sub_1C8CC2EE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CC3264(a1, a2, a3, (uint64_t (*)(void))sub_1C8CC2F14, (uint64_t (*)(void))sub_1C8CC2F68);
}

unint64_t sub_1C8CC2F14()
{
  unint64_t result = qword_1EA5660E0;
  if (!qword_1EA5660E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5660E0);
  }
  return result;
}

unint64_t sub_1C8CC2F68()
{
  unint64_t result = qword_1EA5660E8;
  if (!qword_1EA5660E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5660E8);
  }
  return result;
}

unint64_t sub_1C8CC2FC0()
{
  unint64_t result = qword_1EA5660F0;
  if (!qword_1EA5660F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5660F0);
  }
  return result;
}

unint64_t sub_1C8CC3014(uint64_t a1)
{
  unint64_t result = sub_1C8CC303C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8CC303C()
{
  unint64_t result = qword_1EA5660F8;
  if (!qword_1EA5660F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5660F8);
  }
  return result;
}

uint64_t sub_1C8CC3090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CC3264(a1, a2, a3, (uint64_t (*)(void))sub_1C8CC30BC, (uint64_t (*)(void))sub_1C8CC3110);
}

unint64_t sub_1C8CC30BC()
{
  unint64_t result = qword_1EA566100;
  if (!qword_1EA566100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566100);
  }
  return result;
}

unint64_t sub_1C8CC3110()
{
  unint64_t result = qword_1EA566108;
  if (!qword_1EA566108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566108);
  }
  return result;
}

unint64_t sub_1C8CC3168()
{
  unint64_t result = qword_1EA566110;
  if (!qword_1EA566110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566110);
  }
  return result;
}

unint64_t sub_1C8CC31BC(uint64_t a1)
{
  unint64_t result = sub_1C8CC31E4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8CC31E4()
{
  unint64_t result = qword_1EA566118;
  if (!qword_1EA566118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566118);
  }
  return result;
}

uint64_t sub_1C8CC3238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CC3264(a1, a2, a3, (uint64_t (*)(void))sub_1C8CC23C8, (uint64_t (*)(void))sub_1C8CC32A0);
}

uint64_t sub_1C8CC3264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C8CC32A0()
{
  unint64_t result = qword_1EA566120;
  if (!qword_1EA566120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566120);
  }
  return result;
}

unint64_t sub_1C8CC32F8()
{
  unint64_t result = qword_1EA566128;
  if (!qword_1EA566128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566128);
  }
  return result;
}

uint64_t sub_1C8CC3350(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CB97E0(a1, a2, a3, a4, (void (*)(void))type metadata accessor for Google_Protobuf_Type._StorageClass, 97, sub_1C8CC1C48);
}

uint64_t sub_1C8CC3398(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CB9C2C(a1, a2, a3, a4, (void (*)(void))type metadata accessor for Google_Protobuf_Type._StorageClass, 97, sub_1C8CC1C48);
}

uint64_t sub_1C8CC33E0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CBA064(a1, a2, a3, a4, (void (*)(void))type metadata accessor for Google_Protobuf_Type._StorageClass, 97, sub_1C8CC1C48);
}

uint64_t sub_1C8CC3424@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CC3478(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CBA534(a1, a2, a3, a4, (uint64_t (*)(void *))Google_Protobuf_Type.sourceContext.setter);
}

uint64_t sub_1C8CC34A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t result = swift_beginAccess();
  char v5 = *(unsigned char *)(v3 + 96);
  *(void *)a2 = *(void *)(v3 + 88);
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_1C8CC34FC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CB97E0(a1, a2, a3, a4, (void (*)(void))type metadata accessor for Google_Protobuf_Enum._StorageClass, 89, sub_1C8CC1A30);
}

uint64_t keypath_get_12Tm@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  swift_beginAccess();
  *a2 = *(void *)(v3 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CC3590(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CB9C2C(a1, a2, a3, a4, (void (*)(void))type metadata accessor for Google_Protobuf_Enum._StorageClass, 89, sub_1C8CC1A30);
}

uint64_t keypath_get_14Tm@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  swift_beginAccess();
  *a2 = *(void *)(v3 + 40);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CC3624(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CBA064(a1, a2, a3, a4, (void (*)(void))type metadata accessor for Google_Protobuf_Enum._StorageClass, 89, sub_1C8CC1A30);
}

uint64_t sub_1C8CC366C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CBA534(a1, a2, a3, a4, (uint64_t (*)(void *))Google_Protobuf_Enum.sourceContext.setter);
}

uint64_t sub_1C8CC3698@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t result = swift_beginAccess();
  char v5 = *(unsigned char *)(v3 + 88);
  *(void *)a2 = *(void *)(v3 + 80);
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t keypath_getTm@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CC373C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  return Google_Protobuf_Option.name.setter(v1, v2);
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_Syntax()
{
  return &type metadata for Google_Protobuf_Syntax;
}

ValueMetadata *type metadata accessor for Google_Protobuf_Type()
{
  return &type metadata for Google_Protobuf_Type;
}

uint64_t destroy for Google_Protobuf_Field(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 112);
  unint64_t v3 = *(void *)(a1 + 120);
  return sub_1C8CA3D5C(v2, v3);
}

uint64_t initializeWithCopy for Google_Protobuf_Field(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  uint64_t v3 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v3;
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 68) = *(unsigned char *)(a2 + 68);
  uint64_t v5 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v5;
  uint64_t v6 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v6;
  uint64_t v7 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  unint64_t v8 = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(v7, v8);
  *(void *)(a1 + 112) = v7;
  *(void *)(a1 + 120) = v8;
  return a1;
}

uint64_t assignWithCopy for Google_Protobuf_Field(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  uint64_t v5 = a2[2];
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 16) = v5;
  *(_DWORD *)(a1 + 28) = *((_DWORD *)a2 + 7);
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 64) = *((_DWORD *)a2 + 16);
  *(unsigned char *)(a1 + 68) = *((unsigned char *)a2 + 68);
  *(void *)(a1 + 72) = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = a2[10];
  *(void *)(a1 + 88) = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = a2[12];
  *(void *)(a1 + 104) = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[14];
  unint64_t v6 = a2[15];
  sub_1C8CA3CF8(v7, v6);
  uint64_t v8 = *(void *)(a1 + 112);
  unint64_t v9 = *(void *)(a1 + 120);
  *(void *)(a1 + 112) = v7;
  *(void *)(a1 + 120) = v6;
  sub_1C8CA3D5C(v8, v9);
  return a1;
}

__n128 __swift_memcpy128_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t assignWithTake for Google_Protobuf_Field(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 68) = *(unsigned char *)(a2 + 68);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a1 + 112);
  unint64_t v9 = *(void *)(a1 + 120);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  sub_1C8CA3D5C(v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for Google_Protobuf_Field(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 128)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Google_Protobuf_Field(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 128) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 128) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_Field()
{
  return &type metadata for Google_Protobuf_Field;
}

ValueMetadata *type metadata accessor for Google_Protobuf_Field.Kind()
{
  return &type metadata for Google_Protobuf_Field.Kind;
}

uint64_t getEnumTagSinglePayload for Google_Protobuf_Field.Cardinality(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Google_Protobuf_Field.Cardinality(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)__n128 result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_1C8CC3C18(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1C8CC3C34(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_Field.Cardinality()
{
  return &type metadata for Google_Protobuf_Field.Cardinality;
}

ValueMetadata *type metadata accessor for Google_Protobuf_Enum()
{
  return &type metadata for Google_Protobuf_Enum;
}

uint64_t destroy for Google_Protobuf_EnumValue(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 32);
  unint64_t v3 = *(void *)(a1 + 40);
  return sub_1C8CA3D5C(v2, v3);
}

uint64_t initializeWithCopy for Google_Protobuf_EnumValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  unint64_t v5 = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(v4, v5);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  return a1;
}

uint64_t assignWithCopy for Google_Protobuf_EnumValue(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  unint64_t v4 = *(void *)(a2 + 40);
  sub_1C8CA3CF8(v5, v4);
  uint64_t v6 = *(void *)(a1 + 32);
  unint64_t v7 = *(void *)(a1 + 40);
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v4;
  sub_1C8CA3D5C(v6, v7);
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for Google_Protobuf_EnumValue(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a1 + 32);
  unint64_t v6 = *(void *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  sub_1C8CA3D5C(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for Google_Protobuf_EnumValue(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Google_Protobuf_EnumValue(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_EnumValue()
{
  return &type metadata for Google_Protobuf_EnumValue;
}

uint64_t destroy for Google_Protobuf_Any(uint64_t a1)
{
  sub_1C8CA3D5C(*(void *)a1, *(void *)(a1 + 8));
  return swift_release();
}

uint64_t *_s20SiriOntologyProtobuf19Google_Protobuf_AnyVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_1C8CA3CF8(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  a1[2] = a2[2];
  swift_retain();
  return a1;
}

uint64_t *assignWithCopy for Google_Protobuf_Any(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_1C8CA3CF8(*a2, v5);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_1C8CA3D5C(v6, v7);
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t *assignWithTake for Google_Protobuf_Any(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1C8CA3D5C(v4, v5);
  a1[2] = *(void *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Google_Protobuf_Any(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Google_Protobuf_Any(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_Option()
{
  return &type metadata for Google_Protobuf_Option;
}

uint64_t sub_1C8CC4098(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C8CC40FC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C8CC412C(uint64_t a1)
{
  return a1;
}

unint64_t sub_1C8CC415C()
{
  unint64_t result = qword_1EA566140;
  if (!qword_1EA566140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566140);
  }
  return result;
}

unint64_t sub_1C8CC41B0()
{
  unint64_t result = qword_1EA566148;
  if (!qword_1EA566148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566148);
  }
  return result;
}

unint64_t sub_1C8CC4204()
{
  unint64_t result = qword_1EA566150;
  if (!qword_1EA566150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566150);
  }
  return result;
}

uint64_t sub_1C8CC4258(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  *(unsigned char *)(a2 + 8) = *((unsigned char *)a1 + 8);
  *(void *)a2 = v2;
  return a2;
}

unint64_t destroy for JSONDecodingError(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s20SiriOntologyProtobuf17JSONDecodingErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for JSONDecodingError(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t assignWithTake for JSONDecodingError(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for JSONDecodingError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFEB && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483628);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 19;
  if (v4 >= 0x15) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for JSONDecodingError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFEC)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)__n128 result = a2 - 2147483628;
    if (a3 >= 0x7FFFFFEC) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFEC) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 19;
    }
  }
  return result;
}

uint64_t sub_1C8CC44C8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1C8CC44E0(void *result, int a2)
{
  if (a2 < 0)
  {
    *__n128 result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for JSONDecodingError()
{
  return &type metadata for JSONDecodingError;
}

uint64_t sub_1C8CC4510(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v3) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
        JUMPOUT(0x1C8CC4648);
      }
      unint64_t v3 = (int)v3;
LABEL_6:
      unint64_t v7 = *v2;
      if (v3 < 0x80)
      {
        LOBYTE(v8) = v3;
      }
      else
      {
        do
        {
          *v7++ = v3 | 0x80;
          unint64_t v8 = v3 >> 7;
          unint64_t v9 = v3 >> 14;
          v3 >>= 7;
        }
        while (v9);
      }
      *unint64_t v7 = v8;
      char v10 = v7 + 1;
      *uint64_t v2 = v10;
      uint64_t v11 = 0;
      switch(a2 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(a1), a1)) {
            goto LABEL_19;
          }
          uint64_t v11 = HIDWORD(a1) - (int)a1;
          break;
        case 2uLL:
          uint64_t v14 = *(void *)(a1 + 16);
          uint64_t v13 = *(void *)(a1 + 24);
          uint64_t v11 = v13 - v14;
          if (!__OFSUB__(v13, v14)) {
            break;
          }
          goto LABEL_20;
        case 3uLL:
          break;
        default:
          uint64_t v11 = BYTE6(a2);
          break;
      }
LABEL_16:
      uint64_t result = sub_1C8D88200();
      *uint64_t v2 = &v10[v11];
      return result;
    case 2uLL:
      uint64_t v5 = *(void *)(a1 + 16);
      uint64_t v4 = *(void *)(a1 + 24);
      BOOL v6 = __OFSUB__(v4, v5);
      unint64_t v3 = v4 - v5;
      if (!v6) {
        goto LABEL_6;
      }
      goto LABEL_18;
    case 3uLL:
      uint64_t v11 = 0;
      char v12 = *v2;
      *char v12 = 0;
      char v10 = v12 + 1;
      *uint64_t v2 = v10;
      goto LABEL_16;
    default:
      unint64_t v3 = BYTE6(a2);
      goto LABEL_6;
  }
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for BinaryEncoder(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 != 1 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 2);
  }
  if (*(void *)a1) {
    int v3 = -1;
  }
  else {
    int v3 = 0;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for BinaryEncoder(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(void *)uint64_t result = a2 - 2;
    if (a3 >= 2) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 2) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BinaryEncoder()
{
  return &type metadata for BinaryEncoder;
}

double Google_Protobuf_ListValue.init(arrayLiteral:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = a1;
  double result = 0.0;
  *(_OWORD *)(a2 + 8) = xmmword_1C8D8AD80;
  return result;
}

double Google_Protobuf_ListValue.init(values:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = a1;
  double result = 0.0;
  *(_OWORD *)(a2 + 8) = xmmword_1C8D8AD80;
  return result;
}

double sub_1C8CC472C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = a1;
  double result = 0.0;
  *(_OWORD *)(a2 + 8) = xmmword_1C8D8AD80;
  return result;
}

uint64_t *sub_1C8CC4740(unsigned __int8 *a1)
{
  uint64_t v45 = sub_1C8D88340();
  uint64_t v3 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45, v4);
  uint64_t v47 = (char *)v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v60 = *a1;
  int v46 = a1[1];
  uint64_t v6 = *v1;
  uint64_t v58 = MEMORY[0x1E4FBC860];
  __int16 v59 = 256;
  sub_1C8CA69C8(91, 0xE100000000000000);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    char v44 = (void (**)(char *, uint64_t))(v3 + 8);
    swift_bridgeObjectRetain();
    uint64_t v8 = 0;
    v43[1] = v6;
    unint64_t v9 = (uint64_t *)(v6 + 48);
    char v10 = "";
    while (1)
    {
      uint64_t v52 = v7;
      uint64_t v11 = *(v9 - 2);
      unint64_t v12 = *(v9 - 1);
      uint64_t v13 = *v9;
      sub_1C8CA3CF8(v11, v12);
      swift_retain();
      uint64_t v14 = &v58;
      sub_1C8CA6060((uint64_t)v10, v8, v15);
      uint64_t v16 = *(uint64_t *)(v13 + 16);
      uint64_t v17 = *(void *)(v13 + 24);
      unint64_t v18 = *(void *)(v13 + 32);
      int v19 = *(unsigned __int8 *)(v13 + 40);
      if ((~v18 & 0x3000000000000000) == 0 && v19 == 255)
      {
        sub_1C8CC552C();
        uint64_t v38 = swift_allocError();
        unsigned char *v39 = 5;
        uint64_t v51 = v38;
        swift_willThrow();
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
      switch((v18 >> 60) & 3 | (4 * (v19 & 1u)))
      {
        case 1uLL:
          if ((~v16 & 0x7FF0000000000000) != 0)
          {
            uint64_t v36 = sub_1C8D88580();
            sub_1C8CA69C8(v36, v37);
            goto LABEL_25;
          }
          uint64_t v21 = v52;
          if ((v16 & 0xFFFFFFFFFFFFFLL) != 0)
          {
            sub_1C8CA6060((uint64_t)"\"NaN\"", 5, (unsigned __int8 *)0x7FF0000000000000);
          }
          else if (*(double *)&v16 >= 0.0)
          {
            sub_1C8CA6060((uint64_t)"\"Infinity\"", 10, (unsigned __int8 *)0x7FF0000000000000);
          }
          else
          {
            sub_1C8CA6060((uint64_t)"\"-Infinity\"", 11, (unsigned __int8 *)0x7FF0000000000000);
          }
          goto LABEL_26;
        case 2uLL:
          sub_1C8CC55A4(*(void *)(v13 + 16), *(void *)(v13 + 24), *(void *)(v13 + 32), v19 & 1);
          sub_1C8D288BC(v16, v17);
          sub_1C8CC5640(v16, v17, v18, v19);
          goto LABEL_25;
        case 3uLL:
          if (v16)
          {
            uint64_t v20 = "true";
LABEL_23:
            uint64_t v22 = 4;
          }
          else
          {
            uint64_t v20 = "false";
            uint64_t v22 = 5;
          }
          sub_1C8CA6060((uint64_t)v20, v22, (unsigned __int8 *)0x3000000000000000);
          goto LABEL_25;
        case 4uLL:
          unint64_t v50 = v12;
          uint64_t v57 = &off_1F2351A10;
          uint64_t v53 = v16;
          uint64_t v54 = v17;
          unint64_t v55 = v18;
          uint64_t v56 = &type metadata for Google_Protobuf_Struct;
          uint64_t v14 = __swift_project_boxed_opaque_existential_1(&v53, (uint64_t)&type metadata for Google_Protobuf_Struct);
          unsigned __int8 v61 = v60;
          char v62 = v46;
          sub_1C8CC5580(v16, v17, v18, v19);
          swift_bridgeObjectRetain();
          uint64_t v49 = v17;
          sub_1C8CA3CF8(v17, v18);
          uint64_t v23 = v51;
          sub_1C8CCCEE0(&v61);
          uint64_t v51 = v23;
          if (v23)
          {
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v53);
            sub_1C8CC5640(v16, v49, v18, v19);
            swift_bridgeObjectRelease();
            unint64_t v12 = v50;
            goto LABEL_32;
          }
          uint64_t v48 = v11;
          uint64_t v24 = v47;
          sub_1C8D88330();
          uint64_t v25 = sub_1C8D882F0();
          unint64_t v27 = v26;
          swift_bridgeObjectRelease();
          (*v44)(v24, v45);
          if (v27 >> 60 == 15)
          {
            __break(1u);
LABEL_39:
            __break(1u);
LABEL_40:
            __break(1u);
LABEL_41:
            __break(1u);
LABEL_42:
            __break(1u);
            JUMPOUT(0x1C8CC4D84);
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v53);
          sub_1C8D88330();
          uint64_t v28 = sub_1C8D88300();
          if (!v29) {
            goto LABEL_39;
          }
          goto LABEL_20;
        case 5uLL:
          unint64_t v50 = v12;
          uint64_t v48 = v11;
          uint64_t v57 = &off_1F2351260;
          uint64_t v53 = v16;
          uint64_t v54 = v17;
          unint64_t v55 = v18 & 0xCFFFFFFFFFFFFFFFLL;
          uint64_t v56 = &type metadata for Google_Protobuf_ListValue;
          int v30 = __swift_project_boxed_opaque_existential_1(&v53, (uint64_t)&type metadata for Google_Protobuf_ListValue);
          unsigned __int8 v61 = v60;
          char v62 = v46;
          sub_1C8CC5580(v16, v17, v18, v19);
          swift_bridgeObjectRetain();
          uint64_t v49 = v17;
          sub_1C8CA3CF8(v17, v18 & 0xCFFFFFFFFFFFFFFFLL);
          uint64_t v14 = v30;
          uint64_t v31 = v51;
          sub_1C8CC4740(&v61);
          uint64_t v51 = v31;
          if (v31)
          {
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v53);
            sub_1C8CC5640(v16, v49, v18, v19);
            swift_bridgeObjectRelease();
            uint64_t v11 = v48;
            unint64_t v12 = v50;
LABEL_32:
            swift_bridgeObjectRelease();
            sub_1C8CA3D5C(v11, v12);
            swift_release();
            return v14;
          }
          uint64_t v32 = v47;
          sub_1C8D88330();
          uint64_t v25 = sub_1C8D882F0();
          unint64_t v27 = v33;
          swift_bridgeObjectRelease();
          (*v44)(v32, v45);
          if (v27 >> 60 == 15) {
            goto LABEL_40;
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v53);
          sub_1C8D88330();
          uint64_t v28 = sub_1C8D88300();
          if (!v29) {
            goto LABEL_41;
          }
LABEL_20:
          uint64_t v34 = v28;
          unint64_t v35 = v29;
          sub_1C8CAA9F0(v25, v27);
          sub_1C8CA69C8(v34, v35);
          sub_1C8CC5640(v16, v49, v18, v19);
          uint64_t v11 = v48;
          unint64_t v12 = v50;
LABEL_25:
          uint64_t v21 = v52;
LABEL_26:
          sub_1C8CA3D5C(v11, v12);
          swift_release();
          v9 += 3;
          uint64_t v8 = 1;
          char v10 = ",";
          uint64_t v7 = v21 - 1;
          if (!v7)
          {
            swift_bridgeObjectRelease();
            goto LABEL_33;
          }
          break;
        default:
          uint64_t v20 = "null";
          goto LABEL_23;
      }
    }
  }
LABEL_33:
  sub_1C8CA69C8(93, 0xE100000000000000);
  uint64_t v53 = v58;
  swift_bridgeObjectRetain();
  sub_1C8D88330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
  sub_1C8CA4790();
  uint64_t v14 = (uint64_t *)sub_1C8D88310();
  uint64_t v41 = v40;
  swift_bridgeObjectRelease();
  if (!v41) {
    goto LABEL_42;
  }
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1C8CC4D9C(uint64_t *a1)
{
  uint64_t v3 = v1;
  uint64_t result = sub_1C8CAF30C();
  if ((result & 1) == 0)
  {
    uint64_t result = sub_1C8CAFD2C(91);
    if (!v2)
    {
      uint64_t result = sub_1C8CB049C();
      if ((result & 1) == 0)
      {
        type metadata accessor for Google_Protobuf_Value._StorageClass();
        uint64_t inited = swift_initStaticObject();
        long long v28 = xmmword_1C8D8AD80;
        uint64_t v29 = inited;
        sub_1C8D60820(a1);
        while (1)
        {
          uint64_t v7 = *v3;
          sub_1C8CA3CF8(v28, *((unint64_t *)&v28 + 1));
          swift_retain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v3 = v7;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            uint64_t v7 = sub_1C8D5EE3C(0, *((void *)v7 + 2) + 1, 1, v7);
            *uint64_t v3 = v7;
          }
          unint64_t v10 = *((void *)v7 + 2);
          unint64_t v9 = *((void *)v7 + 3);
          unint64_t v11 = v10 + 1;
          if (v10 >= v9 >> 1)
          {
            uint64_t v25 = sub_1C8D5EE3C((char *)(v9 > 1), v10 + 1, 1, v7);
            unint64_t v12 = *((void *)&v28 + 1);
            unint64_t v11 = v10 + 1;
            uint64_t v7 = v25;
          }
          else
          {
            unint64_t v12 = *((void *)&v28 + 1);
          }
          *((void *)v7 + 2) = v11;
          uint64_t v13 = &v7[24 * v10];
          *((void *)v13 + 4) = v28;
          *((void *)v13 + 5) = v12;
          *((void *)v13 + 6) = v29;
          *uint64_t v3 = v7;
          uint64_t v14 = a1[1];
          uint64_t v15 = a1[2];
          if (v15 == v14) {
            goto LABEL_29;
          }
          uint64_t v16 = *a1;
          while (1)
          {
            unsigned int v17 = *(unsigned __int8 *)(v16 + v15);
            BOOL v18 = v17 > 0x20;
            uint64_t v19 = (1 << v17) & 0x100002600;
            if (v18 || v19 == 0) {
              break;
            }
            a1[2] = ++v15;
            if (v14 == v15) {
              goto LABEL_29;
            }
          }
          if (v14 == v15)
          {
LABEL_29:
            sub_1C8CAC5B0();
            swift_allocError();
            *unint64_t v26 = xmmword_1C8D8AD20;
LABEL_30:
            swift_willThrow();
            sub_1C8CA3D5C(v28, *((unint64_t *)&v28 + 1));
            return swift_release();
          }
          uint64_t v21 = *a1;
          if (*(unsigned char *)(*a1 + v15) == 93) {
            break;
          }
          while (1)
          {
            unsigned int v22 = *(unsigned __int8 *)(v21 + v15);
            BOOL v18 = v22 > 0x20;
            uint64_t v23 = (1 << v22) & 0x100002600;
            if (v18 || v23 == 0) {
              break;
            }
            a1[2] = ++v15;
            if (v14 == v15) {
              goto LABEL_29;
            }
          }
          if (v14 == v15) {
            goto LABEL_29;
          }
          if (*(unsigned char *)(*a1 + v15) != 44)
          {
            sub_1C8CAC5B0();
            swift_allocError();
            *unint64_t v27 = 0;
            v27[1] = 0;
            goto LABEL_30;
          }
          sub_1C8CA3D5C(v28, v12);
          swift_release();
          a1[2] = v15 + 1;
          long long v28 = xmmword_1C8D8AD80;
          uint64_t v29 = inited;
          sub_1C8D60820(a1);
        }
        sub_1C8CA3D5C(v28, v12);
        uint64_t result = swift_release();
        a1[2] = v15 + 1;
      }
    }
  }
  return result;
}

uint64_t *sub_1C8CC5080(unsigned __int8 *a1)
{
  return sub_1C8CC4740(a1);
}

uint64_t sub_1C8CC5098(uint64_t *a1)
{
  return sub_1C8CC4D9C(a1);
}

unint64_t Google_Protobuf_ListValue.subscript.getter@<X0>(unint64_t result@<X0>, uint64_t *a2@<X8>)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (*(void *)(*(void *)v2 + 16) <= result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v3 = (void *)(*(void *)v2 + 24 * result);
  uint64_t v4 = v3[4];
  unint64_t v5 = v3[5];
  uint64_t v6 = v3[6];
  *a2 = v4;
  a2[1] = v5;
  a2[2] = v6;
  sub_1C8CA3CF8(v4, v5);
  return swift_retain();
}

uint64_t sub_1C8CC5118@<X0>(uint64_t result@<X0>, unint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  unint64_t v3 = *a2;
  if ((*a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v3 >= *(void *)(*(void *)result + 16))
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v4 = (void *)(*(void *)result + 24 * v3);
  uint64_t v5 = v4[4];
  unint64_t v6 = v4[5];
  uint64_t v7 = v4[6];
  *a3 = v5;
  a3[1] = v6;
  a3[2] = v7;
  sub_1C8CA3CF8(v5, v6);
  return swift_retain();
}

uint64_t sub_1C8CC5184(uint64_t *a1, uint64_t *a2, unint64_t *a3)
{
  unint64_t v4 = *a3;
  uint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  uint64_t v7 = a1[2];
  uint64_t v8 = *a2;
  sub_1C8CA3CF8(*a1, v6);
  swift_retain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *a2 = v8;
  if (result)
  {
    if ((v4 & 0x8000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t result = (uint64_t)sub_1C8CC5500(v8);
  uint64_t v8 = result;
  *a2 = result;
  if ((v4 & 0x8000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if (v4 < *(void *)(v8 + 16))
  {
    unint64_t v10 = (void *)(v8 + 24 * v4);
    uint64_t v11 = v10[4];
    unint64_t v12 = v10[5];
    long long v10[4] = v5;
    v10[5] = v6;
    v10[6] = v7;
    sub_1C8CA3D5C(v11, v12);
    uint64_t result = swift_release();
    *a2 = v8;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t Google_Protobuf_ListValue.subscript.setter(uint64_t *a1, unint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v7 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v2 = v7;
  if (result)
  {
    if ((a2 & 0x8000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t result = (uint64_t)sub_1C8CC5500(v7);
  uint64_t v7 = result;
  *uint64_t v2 = result;
  if ((a2 & 0x8000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if (*(void *)(v7 + 16) > a2)
  {
    unint64_t v9 = (void *)(v7 + 24 * a2);
    uint64_t v10 = v9[4];
    unint64_t v11 = v9[5];
    long long v9[4] = v4;
    v9[5] = v5;
    v9[6] = v6;
    sub_1C8CA3D5C(v10, v11);
    uint64_t result = swift_release();
    *uint64_t v2 = v7;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

void (*Google_Protobuf_ListValue.subscript.modify(void (**a1)(uint64_t **a1, char a2), unint64_t a2))(uint64_t **a1, char a2)
{
  uint64_t result = (void (*)(uint64_t **, char))malloc(0x28uLL);
  *a1 = result;
  *((void *)result + 3) = a2;
  *((void *)result + 4) = v2;
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(*(void *)v2 + 16) > a2)
  {
    uint64_t v6 = (uint64_t *)result;
    uint64_t v7 = (void *)(*(void *)v2 + 24 * a2);
    uint64_t v8 = v7[4];
    unint64_t v9 = v7[5];
    uint64_t v10 = v7[6];
    uint64_t *v6 = v8;
    v6[1] = v9;
    void v6[2] = v10;
    sub_1C8CA3CF8(v8, v9);
    swift_retain();
    return sub_1C8CC537C;
  }
  __break(1u);
  return result;
}

void sub_1C8CC537C(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = (char **)(*a1)[4];
  uint64_t v5 = **a1;
  unint64_t v4 = (*a1)[1];
  uint64_t v6 = (*a1)[2];
  uint64_t v7 = *v3;
  if (a2)
  {
    sub_1C8CA3CF8(**a1, v4);
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *unint64_t v3 = v7;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v20 = (char **)v2[4];
      uint64_t v7 = sub_1C8CC5500((uint64_t)v7);
      const char *v20 = v7;
    }
    unint64_t v9 = v2[3];
    if (*((void *)v7 + 2) > v9)
    {
      uint64_t v10 = (char **)v2[4];
      unint64_t v11 = &v7[24 * v9];
      uint64_t v12 = *((void *)v11 + 4);
      unint64_t v13 = *((void *)v11 + 5);
      *((void *)v11 + 4) = v5;
      *((void *)v11 + 5) = v4;
      *((void *)v11 + 6) = v6;
      sub_1C8CA3D5C(v12, v13);
      swift_release();
      *uint64_t v10 = v7;
      sub_1C8CA3D5C(*v2, v2[1]);
      swift_release();
      goto LABEL_9;
    }
    __break(1u);
    goto LABEL_13;
  }
  char v14 = swift_isUniquelyReferenced_nonNull_native();
  *unint64_t v3 = v7;
  if ((v14 & 1) == 0)
  {
LABEL_13:
    uint64_t v21 = (char **)v2[4];
    uint64_t v7 = sub_1C8CC5500((uint64_t)v7);
    void *v21 = v7;
  }
  unint64_t v15 = v2[3];
  if (*((void *)v7 + 2) <= v15)
  {
    __break(1u);
    return;
  }
  uint64_t v16 = (char **)v2[4];
  unsigned int v17 = &v7[24 * v15];
  uint64_t v18 = *((void *)v17 + 4);
  unint64_t v19 = *((void *)v17 + 5);
  *((void *)v17 + 4) = v5;
  *((void *)v17 + 5) = v4;
  *((void *)v17 + 6) = v6;
  sub_1C8CA3D5C(v18, v19);
  swift_release();
  *uint64_t v16 = v7;
LABEL_9:
  free(v2);
}

char *sub_1C8CC54D8(uint64_t a1)
{
  return sub_1C8D5EB50(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_1C8CC54EC(uint64_t a1)
{
  return sub_1C8D5EF58(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_1C8CC5500(uint64_t a1)
{
  return sub_1C8D5EE3C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1C8CC551C()
{
  return 0;
}

unint64_t sub_1C8CC552C()
{
  unint64_t result = qword_1EA566158;
  if (!qword_1EA566158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566158);
  }
  return result;
}

void sub_1C8CC5580(uint64_t a1, uint64_t a2, unint64_t a3, unsigned __int8 a4)
{
  if ((~a3 & 0x3000000000000000) != 0 || a4 != 255) {
    sub_1C8CC55A4(a1, a2, a3, a4 & 1);
  }
}

void sub_1C8CC55A4(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  unint64_t v4 = a3;
  if (a4) {
    int v6 = 4;
  }
  else {
    int v6 = 0;
  }
  int v7 = (a3 >> 60) & 3 | v6;
  if (v7 == 5)
  {
    unint64_t v4 = a3 & 0xCFFFFFFFFFFFFFFFLL;
  }
  else if (v7 != 4)
  {
    if (v7 == 2)
    {
      swift_bridgeObjectRetain();
    }
    return;
  }
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(a2, v4);
}

void sub_1C8CC5640(uint64_t a1, uint64_t a2, unint64_t a3, unsigned __int8 a4)
{
  if ((~a3 & 0x3000000000000000) != 0 || a4 != 255) {
    sub_1C8CC5664(a1, a2, a3, a4 & 1);
  }
}

void sub_1C8CC5664(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  unint64_t v4 = a3;
  if (a4) {
    int v6 = 4;
  }
  else {
    int v6 = 0;
  }
  int v7 = (a3 >> 60) & 3 | v6;
  if (v7 == 5)
  {
    unint64_t v4 = a3 & 0xCFFFFFFFFFFFFFFFLL;
  }
  else if (v7 != 4)
  {
    if (v7 == 2)
    {
      swift_bridgeObjectRelease();
    }
    return;
  }
  swift_bridgeObjectRelease();
  sub_1C8CA3D5C(a2, v4);
}

uint64_t static Internal.emptyData.getter()
{
  return 0;
}

uint64_t static Internal.areAllInitialized<A>(_:)(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBCB2CD8);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v37 = sub_1C8D88620();
  uint64_t v6 = MEMORY[0x1F4188790](v37, v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6, v9);
  uint64_t v12 = (char *)&v30 - v11;
  uint64_t v13 = *(void *)(a1 + 64);
  uint64_t v32 = a1 + 64;
  uint64_t v14 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  uint64_t v38 = a2 - 8;
  unint64_t v35 = (void (**)(char *, char *, uint64_t))(v10 + 32);
  uint64_t v36 = TupleTypeMetadata2 - 8;
  int64_t v33 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v34 = a1;
  int64_t v31 = v33 - 1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v18 = 0;
  if (!v16) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v19 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  unint64_t v20 = v19 | (v18 << 6);
  while (2)
  {
    uint64_t v21 = v34;
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(v8, *(void *)(v34 + 48) + *(void *)(*(void *)(a2 - 8) + 72) * v20, a2);
    sub_1C8CA425C(*(void *)(v21 + 56) + 40 * v20, (uint64_t)&v8[*(int *)(TupleTypeMetadata2 + 48)]);
    for (uint64_t i = 0; ; uint64_t i = 1)
    {
      while (1)
      {
LABEL_18:
        uint64_t v26 = *(void *)(TupleTypeMetadata2 - 8);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56))(v8, i, 1, TupleTypeMetadata2);
        (*v35)(v12, v8, v37);
        int v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48))(v12, 1, TupleTypeMetadata2);
        if (v27 == 1)
        {
          swift_release();
          return v27 == 1;
        }
        sub_1C8CA4528((long long *)&v12[*(int *)(TupleTypeMetadata2 + 48)], (uint64_t)v39);
        uint64_t v28 = v40;
        uint64_t v29 = v41;
        __swift_project_boxed_opaque_existential_1(v39, v40);
        if (((*(uint64_t (**)(uint64_t, uint64_t))(v29 + 32))(v28, v29) & 1) == 0)
        {
          swift_release();
          (*(void (**)(char *, uint64_t))(*(void *)(a2 - 8) + 8))(v12, a2);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
          return v27 == 1;
        }
        (*(void (**)(char *, uint64_t))(*(void *)(a2 - 8) + 8))(v12, a2);
        uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
        if (v16) {
          goto LABEL_4;
        }
LABEL_6:
        int64_t v23 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
          __break(1u);
          goto LABEL_31;
        }
        if (v23 < v33) {
          break;
        }
LABEL_17:
        unint64_t v16 = 0;
        uint64_t i = 1;
      }
      unint64_t v24 = *(void *)(v32 + 8 * v23);
      if (v24) {
        goto LABEL_9;
      }
      v18 += 2;
      if (v23 + 1 < v33) {
        break;
      }
      unint64_t v16 = 0;
      int64_t v18 = v23;
    }
    unint64_t v24 = *(void *)(v32 + 8 * v18);
    if (v24)
    {
      ++v23;
LABEL_9:
      unint64_t v16 = (v24 - 1) & v24;
      unint64_t v20 = __clz(__rbit64(v24)) + (v23 << 6);
      int64_t v18 = v23;
      continue;
    }
    break;
  }
  int64_t v25 = v23 + 2;
  if (v23 + 2 >= v33) {
    goto LABEL_17;
  }
  unint64_t v24 = *(void *)(v32 + 8 * v25);
  if (v24)
  {
    v23 += 2;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v23 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v23 >= v33)
    {
      unint64_t v16 = 0;
      uint64_t i = 1;
      int64_t v18 = v31;
      goto LABEL_18;
    }
    unint64_t v24 = *(void *)(v32 + 8 * v23);
    ++v25;
    if (v24) {
      goto LABEL_9;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t _s20SiriOntologyProtobuf8InternalO17areAllInitializedySbSayAA7Message_pGFZ_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = (void *)(a1 + 32);
    swift_bridgeObjectRetain();
    uint64_t v3 = v1 - 1;
    do
    {
      uint64_t v4 = v2[3];
      uint64_t v5 = v2[4];
      __swift_project_boxed_opaque_existential_1(v2, v4);
      char v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 32))(v4, v5);
      char v7 = v6;
      BOOL v9 = v3-- != 0;
      if ((v6 & 1) == 0) {
        break;
      }
      v2 += 5;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    char v7 = 1;
  }
  return v7 & 1;
}

ValueMetadata *type metadata accessor for Internal()
{
  return &type metadata for Internal;
}

uint64_t Google_Protobuf_Api.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C8CC5C58(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Api._StorageClass();
    swift_allocObject();
    uint64_t v5 = swift_retain();
    uint64_t v6 = sub_1C8CCA59C(v5);
    swift_release();
    *(void *)(a2 + 16) = v6;
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + 16);
  swift_beginAccess();
  *(void *)(v7 + 16) = v4;
  *(void *)(v7 + 24) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_Api.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Api._StorageClass();
    swift_allocObject();
    uint64_t v6 = swift_retain();
    uint64_t v7 = sub_1C8CCA59C(v6);
    swift_release();
    *(void *)(v3 + 16) = v7;
    swift_release();
  }
  uint64_t v8 = *(void *)(v3 + 16);
  swift_beginAccess();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for Google_Protobuf_Api._StorageClass()
{
  return self;
}

void (*Google_Protobuf_Api.name.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 24);
  v3[9] = *(void *)(v4 + 16);
  v3[10] = v5;
  swift_bridgeObjectRetain();
  return sub_1C8CC5E60;
}

void sub_1C8CC5E60(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 72);
  uint64_t v4 = *(void *)(*(void *)a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = v2[11];
      type metadata accessor for Google_Protobuf_Api._StorageClass();
      swift_allocObject();
      uint64_t v6 = swift_retain();
      uint64_t v7 = sub_1C8CCA59C(v6);
      swift_release();
      *(void *)(v5 + 16) = v7;
      swift_release();
    }
    uint64_t v8 = *(void *)(v2[11] + 16);
    swift_beginAccess();
    *(void *)(v8 + 16) = v3;
    *(void *)(v8 + 24) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = v2[11];
      type metadata accessor for Google_Protobuf_Api._StorageClass();
      swift_allocObject();
      uint64_t v10 = swift_retain();
      uint64_t v11 = sub_1C8CCA59C(v10);
      swift_release();
      *(void *)(v9 + 16) = v11;
      swift_release();
    }
    uint64_t v12 = *(void *)(v2[11] + 16);
    swift_beginAccess();
    *(void *)(v12 + 16) = v3;
    *(void *)(v12 + 24) = v4;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

uint64_t Google_Protobuf_Api.methods.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CC6008(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Api._StorageClass();
    swift_allocObject();
    uint64_t v4 = swift_retain();
    uint64_t v5 = sub_1C8CCA59C(v4);
    swift_release();
    *(void *)(a2 + 16) = v5;
    swift_release();
  }
  uint64_t v6 = *(void *)(a2 + 16);
  swift_beginAccess();
  *(void *)(v6 + 32) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_Api.methods.setter(uint64_t a1)
{
  uint64_t v2 = v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Api._StorageClass();
    swift_allocObject();
    uint64_t v4 = swift_retain();
    uint64_t v5 = sub_1C8CCA59C(v4);
    swift_release();
    *(void *)(v2 + 16) = v5;
    swift_release();
  }
  uint64_t v6 = *(void *)(v2 + 16);
  swift_beginAccess();
  *(void *)(v6 + 32) = a1;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_Api.methods.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(void *)(v4 + 32);
  swift_bridgeObjectRetain();
  return sub_1C8CC61D8;
}

void sub_1C8CC61D8(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 72);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v4 = v2[10];
      type metadata accessor for Google_Protobuf_Api._StorageClass();
      swift_allocObject();
      uint64_t v5 = swift_retain();
      uint64_t v6 = sub_1C8CCA59C(v5);
      swift_release();
      *(void *)(v4 + 16) = v6;
      swift_release();
    }
    uint64_t v7 = *(void *)(v2[10] + 16);
    swift_beginAccess();
    *(void *)(v7 + 32) = v3;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v8 = v2[10];
      type metadata accessor for Google_Protobuf_Api._StorageClass();
      swift_allocObject();
      uint64_t v9 = swift_retain();
      uint64_t v10 = sub_1C8CCA59C(v9);
      swift_release();
      *(void *)(v8 + 16) = v10;
      swift_release();
    }
    uint64_t v11 = *(void *)(v2[10] + 16);
    swift_beginAccess();
    *(void *)(v11 + 32) = v3;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

uint64_t Google_Protobuf_Api.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CC6378(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Api._StorageClass();
    swift_allocObject();
    uint64_t v4 = swift_retain();
    uint64_t v5 = sub_1C8CCA59C(v4);
    swift_release();
    *(void *)(a2 + 16) = v5;
    swift_release();
  }
  uint64_t v6 = *(void *)(a2 + 16);
  swift_beginAccess();
  *(void *)(v6 + 40) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_Api.options.setter(uint64_t a1)
{
  uint64_t v2 = v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Api._StorageClass();
    swift_allocObject();
    uint64_t v4 = swift_retain();
    uint64_t v5 = sub_1C8CCA59C(v4);
    swift_release();
    *(void *)(v2 + 16) = v5;
    swift_release();
  }
  uint64_t v6 = *(void *)(v2 + 16);
  swift_beginAccess();
  *(void *)(v6 + 40) = a1;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_Api.options.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(void *)(v4 + 40);
  swift_bridgeObjectRetain();
  return sub_1C8CC6548;
}

void sub_1C8CC6548(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 72);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v4 = v2[10];
      type metadata accessor for Google_Protobuf_Api._StorageClass();
      swift_allocObject();
      uint64_t v5 = swift_retain();
      uint64_t v6 = sub_1C8CCA59C(v5);
      swift_release();
      *(void *)(v4 + 16) = v6;
      swift_release();
    }
    uint64_t v7 = *(void *)(v2[10] + 16);
    swift_beginAccess();
    *(void *)(v7 + 40) = v3;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v8 = v2[10];
      type metadata accessor for Google_Protobuf_Api._StorageClass();
      swift_allocObject();
      uint64_t v9 = swift_retain();
      uint64_t v10 = sub_1C8CCA59C(v9);
      swift_release();
      *(void *)(v8 + 16) = v10;
      swift_release();
    }
    uint64_t v11 = *(void *)(v2[10] + 16);
    swift_beginAccess();
    *(void *)(v11 + 40) = v3;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

uint64_t Google_Protobuf_Api.version.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 48);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C8CC66F4(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Api._StorageClass();
    swift_allocObject();
    uint64_t v5 = swift_retain();
    uint64_t v6 = sub_1C8CCA59C(v5);
    swift_release();
    *(void *)(a2 + 16) = v6;
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + 16);
  swift_beginAccess();
  *(void *)(v7 + 48) = v4;
  *(void *)(v7 + 56) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_Api.version.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Api._StorageClass();
    swift_allocObject();
    uint64_t v6 = swift_retain();
    uint64_t v7 = sub_1C8CCA59C(v6);
    swift_release();
    *(void *)(v3 + 16) = v7;
    swift_release();
  }
  uint64_t v8 = *(void *)(v3 + 16);
  swift_beginAccess();
  *(void *)(v8 + 48) = a1;
  *(void *)(v8 + 56) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_Api.version.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 56);
  v3[9] = *(void *)(v4 + 48);
  v3[10] = v5;
  swift_bridgeObjectRetain();
  return sub_1C8CC68D8;
}

void sub_1C8CC68D8(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 72);
  uint64_t v4 = *(void *)(*(void *)a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = v2[11];
      type metadata accessor for Google_Protobuf_Api._StorageClass();
      swift_allocObject();
      uint64_t v6 = swift_retain();
      uint64_t v7 = sub_1C8CCA59C(v6);
      swift_release();
      *(void *)(v5 + 16) = v7;
      swift_release();
    }
    uint64_t v8 = *(void *)(v2[11] + 16);
    swift_beginAccess();
    *(void *)(v8 + 48) = v3;
    *(void *)(v8 + 56) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = v2[11];
      type metadata accessor for Google_Protobuf_Api._StorageClass();
      swift_allocObject();
      uint64_t v10 = swift_retain();
      uint64_t v11 = sub_1C8CCA59C(v10);
      swift_release();
      *(void *)(v9 + 16) = v11;
      swift_release();
    }
    uint64_t v12 = *(void *)(v2[11] + 16);
    swift_beginAccess();
    *(void *)(v12 + 48) = v3;
    *(void *)(v12 + 56) = v4;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

void Google_Protobuf_Api.sourceContext.getter(void *a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + 16);
  swift_beginAccess();
  uint64_t v4 = v3[8];
  uint64_t v5 = v3[9];
  uint64_t v6 = v3[10];
  unint64_t v7 = v3[11];
  unint64_t v8 = 0xC000000000000000;
  unint64_t v9 = 0xE000000000000000;
  if (v5) {
    uint64_t v10 = v3[8];
  }
  else {
    uint64_t v10 = 0;
  }
  if (v5)
  {
    unint64_t v9 = v3[9];
    uint64_t v11 = v3[10];
  }
  else
  {
    uint64_t v11 = 0;
  }
  if (v5) {
    unint64_t v8 = v3[11];
  }
  *a1 = v10;
  a1[1] = v9;
  a1[2] = v11;
  a1[3] = v8;
  sub_1C8CC1EAC(v4, v5, v6, v7);
}

void sub_1C8CC6AAC(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void **)(a1 + 16);
  swift_beginAccess();
  uint64_t v4 = v3[8];
  uint64_t v5 = v3[9];
  uint64_t v6 = v3[10];
  unint64_t v7 = v3[11];
  unint64_t v8 = 0xE000000000000000;
  unint64_t v9 = 0xC000000000000000;
  if (v5) {
    uint64_t v10 = v3[10];
  }
  else {
    uint64_t v10 = 0;
  }
  if (v5)
  {
    unint64_t v9 = v3[11];
    uint64_t v11 = v3[8];
  }
  else
  {
    uint64_t v11 = 0;
  }
  if (v5) {
    unint64_t v8 = v3[9];
  }
  *a2 = v11;
  a2[1] = v8;
  a2[2] = v10;
  a2[3] = v9;
  sub_1C8CC1EAC(v4, v5, v6, v7);
}

void sub_1C8CC6B1C(uint64_t *a1)
{
  uint64_t v1 = a1[1];
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  v4[0] = *a1;
  v4[1] = v1;
  v4[2] = v2;
  uint64_t v4[3] = v3;
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(v2, v3);
  Google_Protobuf_Api.sourceContext.setter(v4);
}

void Google_Protobuf_Api.sourceContext.setter(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v6 = a1[3];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Api._StorageClass();
    swift_allocObject();
    uint64_t v7 = swift_retain();
    uint64_t v8 = sub_1C8CCA59C(v7);
    swift_release();
    *(void *)(v2 + 16) = v8;
    swift_release();
  }
  unint64_t v9 = *(void **)(v2 + 16);
  swift_beginAccess();
  uint64_t v10 = v9[8];
  uint64_t v11 = v9[9];
  uint64_t v12 = v9[10];
  unint64_t v13 = v9[11];
  v9[8] = v3;
  v9[9] = v4;
  v9[10] = v5;
  v9[11] = v6;
  sub_1C8CC1EF8(v10, v11, v12, v13);
}

void (*Google_Protobuf_Api.sourceContext.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x70uLL);
  *a1 = v3;
  v3[13] = v1;
  uint64_t v4 = *(void **)(v1 + 16);
  swift_beginAccess();
  uint64_t v5 = v4[8];
  uint64_t v6 = v4[9];
  uint64_t v7 = v4[10];
  unint64_t v8 = v4[11];
  unint64_t v9 = 0xC000000000000000;
  unint64_t v10 = 0xE000000000000000;
  if (v6) {
    uint64_t v11 = v4[8];
  }
  else {
    uint64_t v11 = 0;
  }
  if (v6)
  {
    unint64_t v10 = v4[9];
    uint64_t v12 = v4[10];
  }
  else
  {
    uint64_t v12 = 0;
  }
  if (v6) {
    unint64_t v9 = v4[11];
  }
  *uint64_t v3 = v11;
  v3[1] = v10;
  v3[2] = v12;
  v3[3] = v9;
  sub_1C8CC1EAC(v5, v6, v7, v8);
  return sub_1C8CC6CD8;
}

void sub_1C8CC6CD8(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v4 = **a1;
  uint64_t v3 = (*a1)[1];
  uint64_t v6 = (*a1)[2];
  unint64_t v5 = (*a1)[3];
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1C8CA3CF8(v6, v5);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v7 = v2[13];
      type metadata accessor for Google_Protobuf_Api._StorageClass();
      swift_allocObject();
      uint64_t v8 = swift_retain();
      uint64_t v9 = sub_1C8CCA59C(v8);
      swift_release();
      *(void *)(v7 + 16) = v9;
      swift_release();
    }
    unint64_t v10 = *(void **)(v2[13] + 16);
    swift_beginAccess();
    uint64_t v11 = v10[8];
    uint64_t v12 = v10[9];
    uint64_t v13 = v10[10];
    unint64_t v14 = v10[11];
    v10[8] = v4;
    v10[9] = v3;
    v10[10] = v6;
    v10[11] = v5;
    sub_1C8CC1EF8(v11, v12, v13, v14);
    uint64_t v15 = v2[2];
    unint64_t v16 = v2[3];
    swift_bridgeObjectRelease();
    sub_1C8CA3D5C(v15, v16);
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v17 = v2[13];
      type metadata accessor for Google_Protobuf_Api._StorageClass();
      swift_allocObject();
      uint64_t v18 = swift_retain();
      uint64_t v19 = sub_1C8CCA59C(v18);
      swift_release();
      *(void *)(v17 + 16) = v19;
      swift_release();
    }
    unint64_t v20 = *(void **)(v2[13] + 16);
    swift_beginAccess();
    uint64_t v21 = v20[8];
    uint64_t v22 = v20[9];
    uint64_t v23 = v20[10];
    unint64_t v24 = v20[11];
    v20[8] = v4;
    v20[9] = v3;
    v20[10] = v6;
    v20[11] = v5;
    sub_1C8CC1EF8(v21, v22, v23, v24);
  }
  free(v2);
}

BOOL Google_Protobuf_Api.hasSourceContext.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  return *(void *)(v1 + 72) != 0;
}

Swift::Void __swiftcall Google_Protobuf_Api.clearSourceContext()()
{
  uint64_t v1 = v0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Api._StorageClass();
    swift_allocObject();
    uint64_t v2 = swift_retain();
    uint64_t v3 = sub_1C8CCA59C(v2);
    swift_release();
    *(void *)(v1 + 16) = v3;
    swift_release();
  }
  uint64_t v4 = *(void **)(v1 + 16);
  swift_beginAccess();
  uint64_t v5 = v4[8];
  uint64_t v6 = v4[9];
  uint64_t v7 = v4[10];
  unint64_t v8 = v4[11];
  *((_OWORD *)v4 + 4) = 0u;
  *((_OWORD *)v4 + 5) = 0u;
  sub_1C8CC1EF8(v5, v6, v7, v8);
}

uint64_t Google_Protobuf_Api.mixins.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CC6FA8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Api._StorageClass();
    swift_allocObject();
    uint64_t v4 = swift_retain();
    uint64_t v5 = sub_1C8CCA59C(v4);
    swift_release();
    *(void *)(a2 + 16) = v5;
    swift_release();
  }
  uint64_t v6 = *(void *)(a2 + 16);
  swift_beginAccess();
  *(void *)(v6 + 96) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_Api.mixins.setter(uint64_t a1)
{
  uint64_t v2 = v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Api._StorageClass();
    swift_allocObject();
    uint64_t v4 = swift_retain();
    uint64_t v5 = sub_1C8CCA59C(v4);
    swift_release();
    *(void *)(v2 + 16) = v5;
    swift_release();
  }
  uint64_t v6 = *(void *)(v2 + 16);
  swift_beginAccess();
  *(void *)(v6 + 96) = a1;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_Api.mixins.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(void *)(v4 + 96);
  swift_bridgeObjectRetain();
  return sub_1C8CC7178;
}

void sub_1C8CC7178(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 72);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v4 = v2[10];
      type metadata accessor for Google_Protobuf_Api._StorageClass();
      swift_allocObject();
      uint64_t v5 = swift_retain();
      uint64_t v6 = sub_1C8CCA59C(v5);
      swift_release();
      *(void *)(v4 + 16) = v6;
      swift_release();
    }
    uint64_t v7 = *(void *)(v2[10] + 16);
    swift_beginAccess();
    *(void *)(v7 + 96) = v3;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v8 = v2[10];
      type metadata accessor for Google_Protobuf_Api._StorageClass();
      swift_allocObject();
      uint64_t v9 = swift_retain();
      uint64_t v10 = sub_1C8CCA59C(v9);
      swift_release();
      *(void *)(v8 + 16) = v10;
      swift_release();
    }
    uint64_t v11 = *(void *)(v2[10] + 16);
    swift_beginAccess();
    *(void *)(v11 + 96) = v3;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

uint64_t Google_Protobuf_Api.syntax.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t result = swift_beginAccess();
  char v5 = *(unsigned char *)(v3 + 112);
  *(void *)a1 = *(void *)(v3 + 104);
  *(unsigned char *)(a1 + 8) = v5;
  return result;
}

uint64_t sub_1C8CC7324(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  char v4 = *((unsigned char *)a1 + 8);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Api._StorageClass();
    swift_allocObject();
    uint64_t v5 = swift_retain();
    uint64_t v6 = sub_1C8CCA59C(v5);
    swift_release();
    *(void *)(a2 + 16) = v6;
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t result = swift_beginAccess();
  *(void *)(v7 + 104) = v3;
  *(unsigned char *)(v7 + 112) = v4;
  return result;
}

uint64_t Google_Protobuf_Api.syntax.setter(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *a1;
  char v4 = *((unsigned char *)a1 + 8);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Api._StorageClass();
    swift_allocObject();
    uint64_t v5 = swift_retain();
    uint64_t v6 = sub_1C8CCA59C(v5);
    swift_release();
    *(void *)(v2 + 16) = v6;
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t result = swift_beginAccess();
  *(void *)(v7 + 104) = v3;
  *(unsigned char *)(v7 + 112) = v4;
  return result;
}

void (*Google_Protobuf_Api.syntax.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  char v5 = *(unsigned char *)(v4 + 112);
  v3[9] = *(void *)(v4 + 104);
  *((unsigned char *)v3 + 80) = v5;
  return sub_1C8CC74FC;
}

void sub_1C8CC74FC(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void *)(*(void *)a1 + 72);
  char v5 = *(unsigned char *)(*(void *)a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v7 = v3[11];
    type metadata accessor for Google_Protobuf_Api._StorageClass();
    swift_allocObject();
    uint64_t v8 = swift_retain();
    uint64_t v9 = sub_1C8CCA59C(v8);
    swift_release();
    *(void *)(v7 + 16) = v9;
    swift_release();
  }
LABEL_4:
  uint64_t v10 = *(void *)(v3[11] + 16);
  swift_beginAccess();
  *(void *)(v10 + 104) = v4;
  *(unsigned char *)(v10 + 112) = v5;
  free(v3);
}

uint64_t Google_Protobuf_Api.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_1C8CA3CF8(v2, v3);
}

uint64_t Google_Protobuf_Api.unknownFields.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C8CA3D5C(*(void *)v1, *(void *)(v1 + 8));
  *(void *)uint64_t v1 = v2;
  *(void *)(v1 + 8) = v3;
  return result;
}

uint64_t (*Google_Protobuf_Api.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Api.init()@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_1C8D8AD80;
  if (qword_1EA565A58 != -1) {
    swift_once();
  }
  *(void *)(a1 + 16) = qword_1EA566180;
  return swift_retain();
}

uint64_t Google_Protobuf_Method.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Google_Protobuf_Method.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Google_Protobuf_Method.name.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Method.requestTypeURL.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Google_Protobuf_Method.requestTypeURL.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*Google_Protobuf_Method.requestTypeURL.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Method.requestStreaming.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t Google_Protobuf_Method.requestStreaming.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 32) = result;
  return result;
}

uint64_t (*Google_Protobuf_Method.requestStreaming.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Method.responseTypeURL.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Google_Protobuf_Method.responseTypeURL.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t (*Google_Protobuf_Method.responseTypeURL.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Method.responseStreaming.getter()
{
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t Google_Protobuf_Method.responseStreaming.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 56) = result;
  return result;
}

uint64_t (*Google_Protobuf_Method.responseStreaming.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Method.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_Method.options.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 64) = a1;
  return result;
}

uint64_t (*Google_Protobuf_Method.options.modify())()
{
  return nullsub_1;
}

void Google_Protobuf_Method.syntax.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 80);
  *(void *)a1 = *(void *)(v1 + 72);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t Google_Protobuf_Method.syntax.setter(uint64_t result)
{
  char v2 = *(unsigned char *)(result + 8);
  *(void *)(v1 + 72) = *(void *)result;
  *(unsigned char *)(v1 + 80) = v2;
  return result;
}

uint64_t (*Google_Protobuf_Method.syntax.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Method.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 88);
  unint64_t v3 = *(void *)(v1 + 96);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C8CA3CF8(v2, v3);
}

uint64_t Google_Protobuf_Method.unknownFields.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C8CA3D5C(*(void *)(v1 + 88), *(void *)(v1 + 96));
  *(void *)(v1 + 88) = v2;
  *(void *)(v1 + 96) = v3;
  return result;
}

uint64_t (*Google_Protobuf_Method.unknownFields.modify())()
{
  return nullsub_1;
}

double Google_Protobuf_Method.init()@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0xE000000000000000;
  *(unsigned char *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0xE000000000000000;
  *(unsigned char *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = MEMORY[0x1E4FBC860];
  *(void *)(a1 + 72) = 0;
  *(unsigned char *)(a1 + 80) = 1;
  double result = 0.0;
  *(_OWORD *)(a1 + 88) = xmmword_1C8D8AD80;
  return result;
}

uint64_t Google_Protobuf_Mixin.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Google_Protobuf_Mixin.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Google_Protobuf_Mixin.name.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Mixin.root.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Google_Protobuf_Mixin.root.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*Google_Protobuf_Mixin.root.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Mixin.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  unint64_t v3 = *(void *)(v1 + 40);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C8CA3CF8(v2, v3);
}

uint64_t Google_Protobuf_Mixin.unknownFields.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C8CA3D5C(*(void *)(v1 + 32), *(void *)(v1 + 40));
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v3;
  return result;
}

uint64_t (*Google_Protobuf_Mixin.unknownFields.modify())()
{
  return nullsub_1;
}

double Google_Protobuf_Mixin.init()@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0xE000000000000000;
  double result = 0.0;
  *(_OWORD *)(a1 + 32) = xmmword_1C8D8AD80;
  return result;
}

unint64_t static Google_Protobuf_Api.protoMessageName.getter()
{
  return 0xD000000000000013;
}

uint64_t sub_1C8CC7B94()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234E358, &qword_1EA566160);
}

uint64_t static Google_Protobuf_Api._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565A50 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA566168;
  uint64_t v3 = qword_1EA566170;
  uint64_t v4 = unk_1EA566178;
  *a1 = qword_1EA566160;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

double sub_1C8CC7C40()
{
  type metadata accessor for Google_Protobuf_Api._StorageClass();
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0xE000000000000000;
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *(void *)(v0 + 32) = MEMORY[0x1E4FBC860];
  *(void *)(v0 + 40) = v1;
  *(void *)(v0 + 48) = 0;
  *(void *)(v0 + 56) = 0xE000000000000000;
  double result = 0.0;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(void *)(v0 + 96) = v1;
  *(void *)(v0 + 104) = 0;
  *(unsigned char *)(v0 + 112) = 1;
  qword_1EA566180 = v0;
  return result;
}

uint64_t sub_1C8CC7C9C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C8CC1EF8(*(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88));
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186488](v0, 113, 7);
}

uint64_t Google_Protobuf_Api.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_Api._StorageClass();
    swift_allocObject();
    uint64_t v8 = swift_retain();
    uint64_t v9 = sub_1C8CCA59C(v8);
    swift_release();
    *(void *)(v4 + 16) = v9;
    swift_release();
  }
  uint64_t v10 = swift_retain();
  sub_1C8CC7DC4(v10, a1, a2, a3);
  return swift_release();
}

uint64_t sub_1C8CC7DC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 16);
  uint64_t result = v8(a3, a4);
  uint64_t v11 = v4;
  if (!v4)
  {
    uint64_t v29 = a1 + 96;
    uint64_t v30 = a1 + 104;
    uint64_t v27 = a1 + 48;
    uint64_t v28 = a1 + 64;
    uint64_t v25 = a1 + 32;
    uint64_t v26 = a1 + 40;
    uint64_t v24 = a1 + 16;
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          uint64_t v17 = v24;
          goto LABEL_13;
        case 2:
          swift_beginAccess();
          uint64_t v12 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 416);
          unint64_t v13 = sub_1C8CCAD88();
          uint64_t v14 = v25;
          uint64_t v15 = &type metadata for Google_Protobuf_Method;
          goto LABEL_5;
        case 3:
          swift_beginAccess();
          uint64_t v12 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 416);
          unint64_t v13 = sub_1C8CC23C8();
          uint64_t v14 = v26;
          uint64_t v15 = &type metadata for Google_Protobuf_Option;
LABEL_5:
          uint64_t v16 = v11;
          v12(v14, v15, v13, a3, a4);
          goto LABEL_6;
        case 4:
          uint64_t v17 = v27;
LABEL_13:
          swift_beginAccess();
          uint64_t v16 = v11;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 336))(v17, a3, a4);
          goto LABEL_6;
        case 5:
          swift_beginAccess();
          uint64_t v18 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 408);
          unint64_t v19 = sub_1C8CC4204();
          uint64_t v16 = v11;
          v18(v28, &type metadata for Google_Protobuf_SourceContext, v19, a3, a4);
          goto LABEL_6;
        case 6:
          swift_beginAccess();
          unint64_t v20 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 416);
          unint64_t v21 = sub_1C8CCAF6C();
          uint64_t v16 = v11;
          v20(v29, &type metadata for Google_Protobuf_Mixin, v21, a3, a4);
          goto LABEL_6;
        case 7:
          swift_beginAccess();
          uint64_t v22 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 384);
          unint64_t v23 = sub_1C8CC41B0();
          uint64_t v16 = v11;
          v22(v30, &type metadata for Google_Protobuf_Syntax, v23, a3, a4);
LABEL_6:
          uint64_t v11 = v16;
          swift_endAccess();
          break;
        default:
          break;
      }
      uint64_t result = v8(a3, a4);
    }
  }
  return result;
}

uint64_t Google_Protobuf_Api.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v7 = swift_retain();
  sub_1C8CC816C(v7, a1, a2, a3);
  uint64_t result = swift_release();
  if (!v3) {
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, (uint64_t)a3);
  }
  return result;
}

uint64_t sub_1C8CC816C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = v4;
  swift_beginAccess();
  uint64_t v9 = *(void *)(a1 + 16);
  unint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0) {
    uint64_t v11 = v9 & 0xFFFFFFFFFFFFLL;
  }
  if (!v11
    || (uint64_t v12 = (void (*)(uint64_t, unint64_t, uint64_t, uint64_t, void *))a4[14],
        swift_bridgeObjectRetain(),
        v12(v9, v10, 1, a3, a4),
        uint64_t result = swift_bridgeObjectRelease(),
        !v5))
  {
    swift_beginAccess();
    if (!*(void *)(*(void *)(a1 + 32) + 16)
      || (uint64_t v14 = (void (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, void *))a4[35],
          unint64_t v15 = sub_1C8CCAD88(),
          uint64_t v16 = swift_bridgeObjectRetain(),
          v14(v16, 2, &type metadata for Google_Protobuf_Method, v15, a3, a4),
          uint64_t result = swift_bridgeObjectRelease(),
          !v5))
    {
      swift_beginAccess();
      if (!*(void *)(*(void *)(a1 + 40) + 16)
        || (uint64_t v17 = (void (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, void *))a4[35],
            unint64_t v18 = sub_1C8CC23C8(),
            uint64_t v19 = swift_bridgeObjectRetain(),
            v17(v19, 3, &type metadata for Google_Protobuf_Option, v18, a3, a4),
            uint64_t result = swift_bridgeObjectRelease(),
            !v5))
      {
        swift_beginAccess();
        uint64_t v20 = *(void *)(a1 + 48);
        unint64_t v21 = *(void *)(a1 + 56);
        uint64_t v22 = HIBYTE(v21) & 0xF;
        if ((v21 & 0x2000000000000000) == 0) {
          uint64_t v22 = v20 & 0xFFFFFFFFFFFFLL;
        }
        if (!v22
          || (unint64_t v23 = (void (*)(uint64_t, unint64_t, uint64_t, uint64_t, void *))a4[14],
              swift_bridgeObjectRetain(),
              v23(v20, v21, 4, a3, a4),
              uint64_t result = swift_bridgeObjectRelease(),
              !v5))
        {
          swift_beginAccess();
          uint64_t v24 = *(void *)(a1 + 72);
          if (!v24
            || (v33[0] = *(void *)(a1 + 64),
                v33[1] = v24,
                long long v34 = *(_OWORD *)(a1 + 80),
                uint64_t v25 = (uint64_t (*)(void *, uint64_t, ValueMetadata *, unint64_t, uint64_t, void *))a4[17],
                unint64_t v26 = sub_1C8CC4204(),
                uint64_t result = v25(v33, 5, &type metadata for Google_Protobuf_SourceContext, v26, a3, a4),
                !v5))
          {
            swift_beginAccess();
            if (!*(void *)(*(void *)(a1 + 96) + 16)
              || (uint64_t v27 = (void (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, void *))a4[35],
                  unint64_t v28 = sub_1C8CCAF6C(),
                  uint64_t v29 = swift_bridgeObjectRetain(),
                  v27(v29, 6, &type metadata for Google_Protobuf_Mixin, v28, a3, a4),
                  uint64_t result = swift_bridgeObjectRelease(),
                  !v5))
            {
              uint64_t result = swift_beginAccess();
              if (*(void *)(a1 + 104))
              {
                char v30 = *(unsigned char *)(a1 + 112);
                uint64_t v35 = *(void *)(a1 + 104);
                char v36 = v30;
                int64_t v31 = (uint64_t (*)(uint64_t *, uint64_t, ValueMetadata *, unint64_t, uint64_t, void *))a4[16];
                unint64_t v32 = sub_1C8CC41B0();
                return v31(&v35, 7, &type metadata for Google_Protobuf_Syntax, v32, a3, a4);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C8CC84CC(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  swift_beginAccess();
  BOOL v6 = v4 == *(void *)(a2 + 16) && v5 == *(void *)(a2 + 24);
  if (v6 || (v7 = sub_1C8D887C0(), uint64_t result = 0, (v7 & 1) != 0))
  {
    swift_beginAccess();
    uint64_t v9 = *(void *)(a1 + 32);
    swift_beginAccess();
    uint64_t v10 = *(void *)(a2 + 32);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v11 = sub_1C8CFDBEC(v9, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0) {
      goto LABEL_29;
    }
    swift_beginAccess();
    uint64_t v12 = *(void *)(a1 + 40);
    swift_beginAccess();
    uint64_t v13 = *(void *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v14 = sub_1C8CF9F50(v12, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0) {
      goto LABEL_29;
    }
    swift_beginAccess();
    uint64_t v15 = *(void *)(a1 + 48);
    uint64_t v16 = *(void *)(a1 + 56);
    swift_beginAccess();
    if ((v15 != *(void *)(a2 + 48) || v16 != *(void *)(a2 + 56)) && (sub_1C8D887C0() & 1) == 0) {
      goto LABEL_29;
    }
    swift_beginAccess();
    uint64_t v18 = *(void *)(a1 + 64);
    uint64_t v17 = *(void *)(a1 + 72);
    uint64_t v20 = *(void *)(a1 + 80);
    unint64_t v19 = *(void *)(a1 + 88);
    swift_beginAccess();
    uint64_t v21 = *(void *)(a2 + 64);
    uint64_t v22 = *(void *)(a2 + 72);
    uint64_t v23 = *(void *)(a2 + 80);
    unint64_t v24 = *(void *)(a2 + 88);
    if (v17)
    {
      if (v22)
      {
        if (v18 == v21 && v17 == v22 || (sub_1C8D887C0() & 1) != 0)
        {
          sub_1C8CC1EAC(v18, v17, v20, v19);
          sub_1C8CC1EAC(v18, v17, v20, v19);
          sub_1C8CC1EAC(v21, v22, v23, v24);
          sub_1C8CA3CF8(v20, v19);
          sub_1C8CA3CF8(v23, v24);
          char v37 = sub_1C8D01FBC(v20, v19, v23, v24);
          sub_1C8CA3D5C(v23, v24);
          sub_1C8CA3D5C(v20, v19);
          sub_1C8CC1EF8(v21, v22, v23, v24);
          swift_bridgeObjectRelease();
          sub_1C8CA3D5C(v20, v19);
          sub_1C8CC1EF8(v18, v17, v20, v19);
          if ((v37 & 1) == 0) {
            goto LABEL_29;
          }
          goto LABEL_19;
        }
        sub_1C8CC1EAC(v18, v17, v20, v19);
        swift_bridgeObjectRetain();
        sub_1C8CA3CF8(v20, v19);
        swift_bridgeObjectRelease();
        sub_1C8CA3D5C(v20, v19);
        uint64_t v33 = v18;
        uint64_t v34 = v17;
        uint64_t v35 = v20;
        unint64_t v36 = v19;
LABEL_28:
        sub_1C8CC1EF8(v33, v34, v35, v36);
        goto LABEL_29;
      }
      swift_bridgeObjectRetain();
      sub_1C8CA3CF8(v20, v19);
      swift_bridgeObjectRetain();
      sub_1C8CA3CF8(v20, v19);
      swift_bridgeObjectRelease();
      sub_1C8CA3D5C(v20, v19);
    }
    else if (!v22)
    {
LABEL_19:
      swift_beginAccess();
      uint64_t v25 = *(void *)(a1 + 96);
      swift_beginAccess();
      uint64_t v26 = *(void *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v27 = sub_1C8CFE4A4(v25, v26);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v27)
      {
        swift_beginAccess();
        uint64_t v28 = *(void *)(a1 + 104);
        int v29 = *(unsigned __int8 *)(a1 + 112);
        swift_release();
        swift_beginAccess();
        uint64_t v30 = *(void *)(a2 + 104);
        int v31 = *(unsigned __int8 *)(a2 + 112);
        swift_release();
        uint64_t v32 = v28 != 0;
        if (!v29) {
          uint64_t v32 = v28;
        }
        if (v31 == 1)
        {
          if (v30)
          {
            if (v32 != 1) {
              return 0;
            }
          }
          else if (v32)
          {
            return 0;
          }
        }
        else if (v32 != v30)
        {
          return 0;
        }
        return 1;
      }
LABEL_29:
      swift_release();
      swift_release();
      return 0;
    }
    sub_1C8CC1EAC(v21, v22, v23, v24);
    sub_1C8CC1EF8(v18, v17, v20, v19);
    uint64_t v33 = v21;
    uint64_t v34 = v22;
    uint64_t v35 = v23;
    unint64_t v36 = v24;
    goto LABEL_28;
  }
  return result;
}

uint64_t Google_Protobuf_Api.hashValue.getter()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  sub_1C8D88840();
  sub_1C8CBC9F8(v5, v1, v2, v3);
  return sub_1C8D888A0();
}

uint64_t sub_1C8CC89FC@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_1C8D8AD80;
  if (qword_1EA565A58 != -1) {
    swift_once();
  }
  *(void *)(a1 + 16) = qword_1EA566180;
  return swift_retain();
}

unint64_t sub_1C8CC8A74()
{
  return 0xD000000000000013;
}

uint64_t sub_1C8CC8A90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_Api.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8CC8AA8(uint64_t a1, uint64_t a2, void *a3)
{
  return Google_Protobuf_Api.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8CC8AC0@<X0>(void *a1@<X8>)
{
  if (qword_1EA565A50 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA566168;
  uint64_t v3 = qword_1EA566170;
  uint64_t v4 = unk_1EA566178;
  *a1 = qword_1EA566160;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CC8B58()
{
  return sub_1C8D6949C(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16));
}

uint64_t sub_1C8CC8B64()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  sub_1C8D88840();
  sub_1C8CBC9F8(v5, v1, v2, v3);
  return sub_1C8D888A0();
}

double sub_1C8CC8BC0(long long *a1)
{
  return sub_1C8CBC9F8(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16));
}

uint64_t sub_1C8CC8BCC()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  sub_1C8D88840();
  sub_1C8CBC9F8(v5, v1, v2, v3);
  return sub_1C8D888A0();
}

unint64_t static Google_Protobuf_Method.protoMessageName.getter()
{
  return 0xD000000000000016;
}

uint64_t sub_1C8CC8C44()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234F140, &qword_1EA566188);
}

uint64_t static Google_Protobuf_Method._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565A60 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA566190;
  uint64_t v3 = qword_1EA566198;
  uint64_t v4 = unk_1EA5661A0;
  *a1 = qword_1EA566188;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_Method.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  uint64_t result = v7(a2, a3);
  if (!v4)
  {
    while ((v9 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 336))(v3, a2, a3);
          break;
        case 2:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 336))(v3 + 16, a2, a3);
          break;
        case 3:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 312))(v3 + 32, a2, a3);
          break;
        case 4:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 336))(v3 + 40, a2, a3);
          break;
        case 5:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 312))(v3 + 56, a2, a3);
          break;
        case 6:
          uint64_t v10 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 416);
          unint64_t v11 = sub_1C8CC23C8();
          v10(v3 + 64, &type metadata for Google_Protobuf_Option, v11, a2, a3);
          break;
        case 7:
          uint64_t v12 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 384);
          unint64_t v13 = sub_1C8CC41B0();
          v12(v3 + 72, &type metadata for Google_Protobuf_Syntax, v13, a2, a3);
          break;
        default:
          break;
      }
      uint64_t result = v7(a2, a3);
    }
  }
  return result;
}

uint64_t sub_1C8CC8F0C()
{
  unint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = *(void *)v0 & 0xFFFFFFFFFFFFLL;
  }
  if (v3)
  {
    sub_1C8D88850();
    sub_1C8D883C0();
  }
  unint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    uint64_t v5 = *(void *)(v0 + 16) & 0xFFFFFFFFFFFFLL;
  }
  if (v5)
  {
    sub_1C8D88850();
    sub_1C8D883C0();
  }
  if (*(unsigned char *)(v0 + 32))
  {
    sub_1C8D88850();
    sub_1C8D88860();
  }
  unint64_t v6 = *(void *)(v0 + 48);
  uint64_t v7 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0) {
    uint64_t v7 = *(void *)(v0 + 40) & 0xFFFFFFFFFFFFLL;
  }
  if (v7)
  {
    sub_1C8D88850();
    sub_1C8D883C0();
  }
  if (*(unsigned char *)(v0 + 56))
  {
    sub_1C8D88850();
    sub_1C8D88860();
  }
  uint64_t v8 = *(void *)(v0 + 64);
  if (!*(void *)(v8 + 16) || (uint64_t result = sub_1C8D19C00(v8), !v1))
  {
    sub_1C8CCB700(v0 + 72, (uint64_t)v12);
    uint64_t result = sub_1C8CCB700((uint64_t)v12, (uint64_t)&v14);
    if (v14)
    {
      sub_1C8D88850();
      sub_1C8CCB700((uint64_t)v12, (uint64_t)&v13);
      uint64_t result = sub_1C8D88850();
    }
    uint64_t v10 = *(void *)(v0 + 88);
    unint64_t v11 = *(void *)(v0 + 96);
    switch(v11 >> 62)
    {
      case 1uLL:
        if ((int)v10 != v10 >> 32) {
          goto LABEL_27;
        }
        break;
      case 2uLL:
        if (*(void *)(v10 + 16) != *(void *)(v10 + 24)) {
          goto LABEL_27;
        }
        break;
      case 3uLL:
        return result;
      default:
        if ((v11 & 0xFF000000000000) != 0) {
LABEL_27:
        }
          uint64_t result = sub_1C8D881D0();
        break;
    }
  }
  return result;
}

uint64_t sub_1C8CC90EC(char **a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *(void *)v3;
  unint64_t v6 = *(void *)(v3 + 8);
  uint64_t v7 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0) {
    uint64_t v7 = *(void *)v3 & 0xFFFFFFFFFFFFLL;
  }
  if (v7)
  {
    sub_1C8CA5968(1uLL);
    sub_1C8CA6060((uint64_t)": ", 2, v8);
    sub_1C8CA6D2C(v5, v6);
    char v9 = *a1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a1 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      char v9 = sub_1C8D5EB50(0, *((void *)v9 + 2) + 1, 1, v9);
      *a1 = v9;
    }
    unint64_t v12 = *((void *)v9 + 2);
    unint64_t v11 = *((void *)v9 + 3);
    if (v12 >= v11 >> 1) {
      char v9 = sub_1C8D5EB50((char *)(v11 > 1), v12 + 1, 1, v9);
    }
    *((void *)v9 + 2) = v12 + 1;
    v9[v12 + 32] = 10;
    *a1 = v9;
  }
  uint64_t v13 = *(void *)(v3 + 16);
  unint64_t v14 = *(void *)(v3 + 24);
  uint64_t v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0) {
    uint64_t v15 = v13 & 0xFFFFFFFFFFFFLL;
  }
  if (v15)
  {
    sub_1C8CA5968(2uLL);
    sub_1C8CA6060((uint64_t)": ", 2, v16);
    sub_1C8CA6D2C(v13, v14);
    uint64_t v17 = *a1;
    char v18 = swift_isUniquelyReferenced_nonNull_native();
    *a1 = v17;
    if ((v18 & 1) == 0)
    {
      uint64_t v17 = sub_1C8D5EB50(0, *((void *)v17 + 2) + 1, 1, v17);
      *a1 = v17;
    }
    unint64_t v20 = *((void *)v17 + 2);
    unint64_t v19 = *((void *)v17 + 3);
    if (v20 >= v19 >> 1) {
      uint64_t v17 = sub_1C8D5EB50((char *)(v19 > 1), v20 + 1, 1, v17);
    }
    *((void *)v17 + 2) = v20 + 1;
    v17[v20 + 32] = 10;
    *a1 = v17;
  }
  if (*(unsigned char *)(v3 + 32) != 1 || (uint64_t result = sub_1C8CAB1C0(1, 3uLL), !v2))
  {
    uint64_t v22 = *(void *)(v3 + 40);
    unint64_t v23 = *(void *)(v3 + 48);
    uint64_t v24 = HIBYTE(v23) & 0xF;
    if ((v23 & 0x2000000000000000) == 0) {
      uint64_t v24 = v22 & 0xFFFFFFFFFFFFLL;
    }
    if (v24)
    {
      sub_1C8CA5968(4uLL);
      sub_1C8CA6060((uint64_t)": ", 2, v25);
      sub_1C8CA6D2C(v22, v23);
      uint64_t v26 = *a1;
      char v27 = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v26;
      if ((v27 & 1) == 0)
      {
        uint64_t v26 = sub_1C8D5EB50(0, *((void *)v26 + 2) + 1, 1, v26);
        *a1 = v26;
      }
      unint64_t v29 = *((void *)v26 + 2);
      unint64_t v28 = *((void *)v26 + 3);
      if (v29 >= v28 >> 1) {
        uint64_t v26 = sub_1C8D5EB50((char *)(v28 > 1), v29 + 1, 1, v26);
      }
      *((void *)v26 + 2) = v29 + 1;
      v26[v29 + 32] = 10;
      *a1 = v26;
    }
    if (*(unsigned char *)(v3 + 56) != 1 || (uint64_t result = sub_1C8CAB1C0(1, 5uLL), !v2))
    {
      uint64_t v30 = *(void *)(v3 + 64);
      if (!*(void *)(v30 + 16) || (uint64_t result = sub_1C8D72DFC(v30, 6uLL), !v2))
      {
        uint64_t v31 = *(void *)(v3 + 72);
        if (v31)
        {
          char v32 = *(unsigned char *)(v3 + 80);
          sub_1C8CA5968(7uLL);
          sub_1C8CA6060((uint64_t)": ", 2, v33);
          sub_1C8D70D50(v31, v32);
          uint64_t v34 = *a1;
          char v35 = swift_isUniquelyReferenced_nonNull_native();
          *a1 = v34;
          if ((v35 & 1) == 0)
          {
            uint64_t v34 = sub_1C8D5EB50(0, *((void *)v34 + 2) + 1, 1, v34);
            *a1 = v34;
          }
          unint64_t v37 = *((void *)v34 + 2);
          unint64_t v36 = *((void *)v34 + 3);
          if (v37 >= v36 >> 1) {
            uint64_t v34 = sub_1C8D5EB50((char *)(v36 > 1), v37 + 1, 1, v34);
          }
          *((void *)v34 + 2) = v37 + 1;
          v34[v37 + 32] = 10;
          *a1 = v34;
        }
        return sub_1C8D2D968((uint64_t)a1, *(void *)(v3 + 88), *(void *)(v3 + 96));
      }
    }
  }
  return result;
}

uint64_t Google_Protobuf_Method.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v8 = *(void *)(v3 + 8);
  uint64_t v10 = *(void *)(v3 + 16);
  unint64_t v9 = *(void *)(v3 + 24);
  int v11 = *(unsigned __int8 *)(v3 + 32);
  uint64_t v12 = *(void *)(v3 + 40);
  unint64_t v13 = *(void *)(v3 + 48);
  int v27 = *(unsigned __int8 *)(v3 + 56);
  uint64_t v25 = *(void *)(v3 + 72);
  uint64_t v26 = *(void *)(v3 + 64);
  char v14 = *(unsigned char *)(v3 + 80);
  long long v23 = *(_OWORD *)(v3 + 88);
  uint64_t v15 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0) {
    uint64_t v15 = *(void *)v3 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v29 = a2;
  char v24 = v14;
  if (!v15 || (uint64_t result = (*(uint64_t (**)(void))(a3 + 112))(), !v4))
  {
    uint64_t v17 = HIBYTE(v9) & 0xF;
    if ((v9 & 0x2000000000000000) == 0) {
      uint64_t v17 = v10 & 0xFFFFFFFFFFFFLL;
    }
    if (!v17
      || (uint64_t result = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(a3 + 112))(v10, v9, 2, v29, a3), !v4))
    {
      if (!v11
        || (uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 104))(1, 3, v29, a3), !v4))
      {
        uint64_t v18 = HIBYTE(v13) & 0xF;
        if ((v13 & 0x2000000000000000) == 0) {
          uint64_t v18 = v12 & 0xFFFFFFFFFFFFLL;
        }
        if (!v18
          || (uint64_t result = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(a3 + 112))(v12, v13, 4, v29, a3), !v4))
        {
          if (!v27
            || (uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 104))(1, 5, v29, a3),
                !v4))
          {
            if (!*(void *)(v26 + 16)
              || (unint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 280),
                  unint64_t v20 = sub_1C8CC23C8(),
                  uint64_t result = v19(v26, 6, &type metadata for Google_Protobuf_Option, v20, v29, a3),
                  !v4))
            {
              if (!v25
                || (*(void *)&long long v28 = v25,
                    BYTE8(v28) = v24,
                    uint64_t v21 = *(uint64_t (**)(long long *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 128),
                    unint64_t v22 = sub_1C8CC41B0(),
                    uint64_t result = v21(&v28, 7, &type metadata for Google_Protobuf_Syntax, v22, v29, a3),
                    !v4))
              {
                long long v28 = v23;
                return UnknownStorage.traverse<A>(visitor:)(a1, v29, a3);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t Google_Protobuf_Method.hashValue.getter()
{
  return sub_1C8D888A0();
}

double sub_1C8CC97DC@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0xE000000000000000;
  *(unsigned char *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0xE000000000000000;
  *(unsigned char *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = MEMORY[0x1E4FBC860];
  *(void *)(a1 + 72) = 0;
  *(unsigned char *)(a1 + 80) = 1;
  double result = 0.0;
  *(_OWORD *)(a1 + 88) = xmmword_1C8D8AD80;
  return result;
}

unint64_t sub_1C8CC9818()
{
  return 0xD000000000000016;
}

uint64_t sub_1C8CC9834@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 88);
  unint64_t v3 = *(void *)(v1 + 96);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C8CA3CF8(v2, v3);
}

uint64_t sub_1C8CC9840(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C8CA3D5C(*(void *)(v1 + 88), *(void *)(v1 + 96));
  *(void *)(v1 + 88) = v2;
  *(void *)(v1 + 96) = v3;
  return result;
}

uint64_t (*sub_1C8CC9874())()
{
  return nullsub_1;
}

uint64_t sub_1C8CC9894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_Method.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8CC98AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_Method.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8CC98C4@<X0>(void *a1@<X8>)
{
  if (qword_1EA565A60 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA566190;
  uint64_t v3 = qword_1EA566198;
  uint64_t v4 = unk_1EA5661A0;
  *a1 = qword_1EA566188;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CC995C()
{
  return sub_1C8D69590();
}

uint64_t sub_1C8CC99A8()
{
  return sub_1C8D888A0();
}

double sub_1C8CC9A5C(long long *a1)
{
  long long v3 = *a1;
  long long v4 = a1[1];
  long long v5 = a1[2];
  long long v6 = a1[3];
  uint64_t v7 = *((void *)a1 + 8);
  sub_1C8CC8F0C();
  *a1 = v3;
  a1[1] = v4;
  double result = *(double *)&v5;
  a1[2] = v5;
  a1[3] = v6;
  *((void *)a1 + 8) = v7;
  return result;
}

uint64_t sub_1C8CC9B00()
{
  return sub_1C8D888A0();
}

unint64_t static Google_Protobuf_Mixin.protoMessageName.getter()
{
  return 0xD000000000000015;
}

uint64_t sub_1C8CC9BD0()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234EF40, &qword_1EA5661A8);
}

uint64_t static Google_Protobuf_Mixin._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565A68 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA5661B0;
  uint64_t v3 = qword_1EA5661B8;
  uint64_t v4 = unk_1EA5661C0;
  *a1 = qword_1EA5661A8;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_Mixin.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  uint64_t result = v7(a2, a3);
  if (!v4)
  {
    while ((v9 & 1) == 0)
    {
      if (result == 2)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 336))(v3 + 16, a2, a3);
      }
      else if (result == 1)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 336))(v3, a2, a3);
      }
      uint64_t result = v7(a2, a3);
    }
  }
  return result;
}

uint64_t sub_1C8CC9D44()
{
  unint64_t v1 = v0[1];
  uint64_t v2 = HIBYTE(v1) & 0xF;
  if ((v1 & 0x2000000000000000) == 0) {
    uint64_t v2 = *v0 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    sub_1C8D88850();
    uint64_t result = sub_1C8D883C0();
  }
  unint64_t v4 = v0[3];
  uint64_t v5 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    uint64_t v5 = v0[2] & 0xFFFFFFFFFFFFLL;
  }
  if (v5)
  {
    sub_1C8D88850();
    uint64_t result = sub_1C8D883C0();
  }
  uint64_t v6 = v0[4];
  unint64_t v7 = v0[5];
  switch(v7 >> 62)
  {
    case 1uLL:
      if ((int)v6 != v6 >> 32) {
        goto LABEL_15;
      }
      break;
    case 2uLL:
      if (*(void *)(v6 + 16) != *(void *)(v6 + 24)) {
        goto LABEL_15;
      }
      break;
    case 3uLL:
      return result;
    default:
      if ((v7 & 0xFF000000000000) != 0) {
LABEL_15:
      }
        uint64_t result = sub_1C8D881D0();
      break;
  }
  return result;
}

uint64_t sub_1C8CC9E4C(char **a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  unint64_t v5 = v2[1];
  uint64_t v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0) {
    uint64_t v6 = *v2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6)
  {
    sub_1C8CA5968(1uLL);
    sub_1C8CA6060((uint64_t)": ", 2, v7);
    sub_1C8CA6D2C(v4, v5);
    unint64_t v8 = *a1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a1 = v8;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v8 = sub_1C8D5EB50(0, *((void *)v8 + 2) + 1, 1, v8);
      *a1 = v8;
    }
    unint64_t v11 = *((void *)v8 + 2);
    unint64_t v10 = *((void *)v8 + 3);
    if (v11 >= v10 >> 1) {
      unint64_t v8 = sub_1C8D5EB50((char *)(v10 > 1), v11 + 1, 1, v8);
    }
    *((void *)v8 + 2) = v11 + 1;
    v8[v11 + 32] = 10;
    *a1 = v8;
  }
  uint64_t v12 = v2[2];
  unint64_t v13 = v2[3];
  uint64_t v14 = HIBYTE(v13) & 0xF;
  if ((v13 & 0x2000000000000000) == 0) {
    uint64_t v14 = v12 & 0xFFFFFFFFFFFFLL;
  }
  if (v14)
  {
    sub_1C8CA5968(2uLL);
    sub_1C8CA6060((uint64_t)": ", 2, v15);
    sub_1C8CA6D2C(v12, v13);
    uint64_t v16 = *a1;
    char v17 = swift_isUniquelyReferenced_nonNull_native();
    *a1 = v16;
    if ((v17 & 1) == 0)
    {
      uint64_t v16 = sub_1C8D5EB50(0, *((void *)v16 + 2) + 1, 1, v16);
      *a1 = v16;
    }
    unint64_t v19 = *((void *)v16 + 2);
    unint64_t v18 = *((void *)v16 + 3);
    if (v19 >= v18 >> 1) {
      uint64_t v16 = sub_1C8D5EB50((char *)(v18 > 1), v19 + 1, 1, v16);
    }
    *((void *)v16 + 2) = v19 + 1;
    v16[v19 + 32] = 10;
    *a1 = v16;
  }
  return sub_1C8D2D968((uint64_t)a1, v2[4], v2[5]);
}

uint64_t Google_Protobuf_Mixin.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v8 = v3[1];
  uint64_t v9 = v3[2];
  unint64_t v10 = v3[3];
  uint64_t v11 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0) {
    uint64_t v11 = *v3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v11 || (uint64_t result = (*(uint64_t (**)(void))(a3 + 112))(), !v4))
  {
    uint64_t v13 = HIBYTE(v10) & 0xF;
    if ((v10 & 0x2000000000000000) == 0) {
      uint64_t v13 = v9 & 0xFFFFFFFFFFFFLL;
    }
    if (!v13) {
      return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
    }
    uint64_t result = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(a3 + 112))(v9, v10, 2, a2, a3);
    if (!v4) {
      return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
    }
  }
  return result;
}

uint64_t Google_Protobuf_Mixin.hashValue.getter()
{
  return sub_1C8D888A0();
}

double sub_1C8CCA198@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0xE000000000000000;
  double result = 0.0;
  *(_OWORD *)(a1 + 32) = xmmword_1C8D8AD80;
  return result;
}

unint64_t sub_1C8CCA1B4()
{
  return 0xD000000000000015;
}

uint64_t sub_1C8CCA1D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_Mixin.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8CCA1E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_Mixin.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8CCA200@<X0>(void *a1@<X8>)
{
  if (qword_1EA565A68 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA5661B0;
  uint64_t v3 = qword_1EA5661B8;
  uint64_t v4 = unk_1EA5661C0;
  *a1 = qword_1EA5661A8;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CCA298()
{
  return sub_1C8D69664();
}

uint64_t sub_1C8CCA2D4()
{
  return sub_1C8D888A0();
}

double sub_1C8CCA378(long long *a1)
{
  long long v3 = *a1;
  long long v4 = a1[1];
  long long v5 = a1[2];
  long long v6 = a1[3];
  uint64_t v7 = *((void *)a1 + 8);
  sub_1C8CC9D44();
  *a1 = v3;
  a1[1] = v4;
  double result = *(double *)&v5;
  a1[2] = v5;
  a1[3] = v6;
  *((void *)a1 + 8) = v7;
  return result;
}

uint64_t sub_1C8CCA404()
{
  return sub_1C8D888A0();
}

uint64_t _s20SiriOntologyProtobuf07Google_C6_MixinV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  unint64_t v5 = a1[5];
  uint64_t v6 = a2[2];
  uint64_t v7 = a2[3];
  uint64_t v8 = a2[4];
  unint64_t v9 = a2[5];
  if ((*a1 != *a2 || a1[1] != a2[1]) && (sub_1C8D887C0() & 1) == 0
    || (v2 != v6 || v4 != v7) && (sub_1C8D887C0() & 1) == 0)
  {
    return 0;
  }
  sub_1C8CA3CF8(v3, v5);
  sub_1C8CA3CF8(v8, v9);
  char v10 = sub_1C8D01FBC(v3, v5, v8, v9);
  sub_1C8CA3D5C(v8, v9);
  sub_1C8CA3D5C(v3, v5);
  return v10 & 1;
}

uint64_t sub_1C8CCA59C(uint64_t a1)
{
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0xE000000000000000;
  uint64_t v3 = MEMORY[0x1E4FBC860];
  *(void *)(v1 + 32) = MEMORY[0x1E4FBC860];
  *(void *)(v1 + 40) = v3;
  *(void *)(v1 + 48) = 0;
  *(void *)(v1 + 56) = 0xE000000000000000;
  *(_OWORD *)(v1 + 80) = 0u;
  *(_OWORD *)(v1 + 64) = 0u;
  *(void *)(v1 + 96) = v3;
  *(void *)(v1 + 104) = 0;
  *(unsigned char *)(v1 + 112) = 1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  swift_beginAccess();
  *(void *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v6 = *(void *)(a1 + 32);
  swift_beginAccess();
  *(void *)(v1 + 32) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v7 = *(void *)(a1 + 40);
  swift_beginAccess();
  *(void *)(v1 + 40) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(a1 + 56);
  swift_beginAccess();
  *(void *)(v1 + 48) = v9;
  *(void *)(v1 + 56) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v11 = *(void *)(a1 + 72);
  uint64_t v12 = *(void *)(a1 + 80);
  unint64_t v13 = *(void *)(a1 + 88);
  swift_beginAccess();
  uint64_t v14 = *(void *)(v1 + 64);
  uint64_t v16 = *(void *)(v1 + 72);
  uint64_t v15 = *(void *)(v1 + 80);
  unint64_t v17 = *(void *)(v1 + 88);
  *(void *)(v1 + 64) = v10;
  *(void *)(v1 + 72) = v11;
  *(void *)(v1 + 80) = v12;
  *(void *)(v1 + 88) = v13;
  sub_1C8CC1EAC(v10, v11, v12, v13);
  sub_1C8CC1EF8(v14, v16, v15, v17);
  swift_beginAccess();
  uint64_t v18 = *(void *)(a1 + 96);
  swift_beginAccess();
  *(void *)(v1 + 96) = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v19 = *(void *)(a1 + 104);
  LOBYTE(a1) = *(unsigned char *)(a1 + 112);
  swift_beginAccess();
  *(void *)(v1 + 104) = v19;
  *(unsigned char *)(v1 + 112) = a1;
  return v1;
}

uint64_t _s20SiriOntologyProtobuf07Google_C7_MethodV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  int v4 = *(unsigned __int8 *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v24 = *(void *)(a1 + 64);
  uint64_t v21 = *(void *)(a1 + 72);
  int v20 = *(unsigned __int8 *)(a1 + 80);
  unint64_t v17 = *(void *)(a1 + 96);
  uint64_t v18 = *(void *)(a1 + 88);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  int v9 = *(unsigned __int8 *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v11 = *(void *)(a2 + 48);
  int v25 = *(unsigned __int8 *)(a2 + 56);
  int v26 = *(unsigned __int8 *)(a1 + 56);
  uint64_t v22 = *(void *)(a2 + 72);
  uint64_t v23 = *(void *)(a2 + 64);
  int v19 = *(unsigned __int8 *)(a2 + 80);
  unint64_t v15 = *(void *)(a2 + 96);
  uint64_t v16 = *(void *)(a2 + 88);
  if ((*(void *)a1 != *(void *)a2 || *(void *)(a1 + 8) != *(void *)(a2 + 8)) && (sub_1C8D887C0() & 1) == 0) {
    return 0;
  }
  if (v2 == v7 && v3 == v8)
  {
    if (v4 != v9) {
      return 0;
    }
  }
  else if (sub_1C8D887C0() & 1) == 0 || ((v4 ^ v9))
  {
    return 0;
  }
  if (v5 == v10 && v6 == v11)
  {
    if (v26 != v25) {
      return 0;
    }
  }
  else if (sub_1C8D887C0() & 1) == 0 || ((v26 ^ v25))
  {
    return 0;
  }
  if ((sub_1C8CF9F50(v24, v23) & 1) == 0) {
    return 0;
  }
  uint64_t v12 = v21 != 0;
  if (!v20) {
    uint64_t v12 = v21;
  }
  if (v19)
  {
    if (v22)
    {
      if (v12 != 1) {
        return 0;
      }
    }
    else if (v12)
    {
      return 0;
    }
  }
  else if (v12 != v22)
  {
    return 0;
  }
  sub_1C8CA3CF8(v18, v17);
  sub_1C8CA3CF8(v16, v15);
  char v14 = sub_1C8D01FBC(v18, v17, v16, v15);
  sub_1C8CA3D5C(v16, v15);
  sub_1C8CA3D5C(v18, v17);
  return v14 & 1;
}

uint64_t _s20SiriOntologyProtobuf07Google_C4_ApiV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = *a2;
  unint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  if (v4 != v7)
  {
    swift_retain();
    swift_retain();
    char v8 = sub_1C8CC84CC(v4, v7);
    swift_release();
    swift_release();
    if ((v8 & 1) == 0) {
      return 0;
    }
  }
  sub_1C8CA3CF8(v2, v3);
  sub_1C8CA3CF8(v5, v6);
  char v9 = sub_1C8D01FBC(v2, v3, v5, v6);
  sub_1C8CA3D5C(v5, v6);
  sub_1C8CA3D5C(v2, v3);
  return v9 & 1;
}

unint64_t sub_1C8CCAB38(uint64_t a1)
{
  unint64_t result = sub_1C8CCAB60();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8CCAB60()
{
  unint64_t result = qword_1EA5661C8;
  if (!qword_1EA5661C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5661C8);
  }
  return result;
}

uint64_t sub_1C8CCABB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CCAF30(a1, a2, a3, (uint64_t (*)(void))sub_1C8CCABE0, (uint64_t (*)(void))sub_1C8CCAC34);
}

unint64_t sub_1C8CCABE0()
{
  unint64_t result = qword_1EA5661D0;
  if (!qword_1EA5661D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5661D0);
  }
  return result;
}

unint64_t sub_1C8CCAC34()
{
  unint64_t result = qword_1EA5661D8;
  if (!qword_1EA5661D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5661D8);
  }
  return result;
}

unint64_t sub_1C8CCAC8C()
{
  unint64_t result = qword_1EA5661E0;
  if (!qword_1EA5661E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5661E0);
  }
  return result;
}

unint64_t sub_1C8CCACE0(uint64_t a1)
{
  unint64_t result = sub_1C8CCAD08();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8CCAD08()
{
  unint64_t result = qword_1EA5661E8;
  if (!qword_1EA5661E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5661E8);
  }
  return result;
}

uint64_t sub_1C8CCAD5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CCAF30(a1, a2, a3, (uint64_t (*)(void))sub_1C8CCAD88, (uint64_t (*)(void))sub_1C8CCADDC);
}

unint64_t sub_1C8CCAD88()
{
  unint64_t result = qword_1EA5661F0;
  if (!qword_1EA5661F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5661F0);
  }
  return result;
}

unint64_t sub_1C8CCADDC()
{
  unint64_t result = qword_1EA5661F8;
  if (!qword_1EA5661F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5661F8);
  }
  return result;
}

unint64_t sub_1C8CCAE34()
{
  unint64_t result = qword_1EA566200;
  if (!qword_1EA566200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566200);
  }
  return result;
}

unint64_t sub_1C8CCAE88(uint64_t a1)
{
  unint64_t result = sub_1C8CCAEB0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8CCAEB0()
{
  unint64_t result = qword_1EA566208;
  if (!qword_1EA566208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566208);
  }
  return result;
}

uint64_t sub_1C8CCAF04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CCAF30(a1, a2, a3, (uint64_t (*)(void))sub_1C8CCAF6C, (uint64_t (*)(void))sub_1C8CCAFC0);
}

uint64_t sub_1C8CCAF30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C8CCAF6C()
{
  unint64_t result = qword_1EA566210;
  if (!qword_1EA566210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566210);
  }
  return result;
}

unint64_t sub_1C8CCAFC0()
{
  unint64_t result = qword_1EA566218;
  if (!qword_1EA566218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566218);
  }
  return result;
}

unint64_t sub_1C8CCB018()
{
  unint64_t result = qword_1EA566220;
  if (!qword_1EA566220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566220);
  }
  return result;
}

uint64_t sub_1C8CCB06C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CCB0BC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  swift_beginAccess();
  *a2 = *(void *)(v3 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CCB10C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  swift_beginAccess();
  *a2 = *(void *)(v3 + 40);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CCB15C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 56);
  *a2 = *(void *)(v3 + 48);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CCB1B4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  swift_beginAccess();
  *a2 = *(void *)(v3 + 96);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CCB204@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t result = swift_beginAccess();
  char v5 = *(unsigned char *)(v3 + 112);
  *(void *)a2 = *(void *)(v3 + 104);
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_Api()
{
  return &type metadata for Google_Protobuf_Api;
}

uint64_t destroy for Google_Protobuf_Method(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 88);
  unint64_t v3 = *(void *)(a1 + 96);
  return sub_1C8CA3D5C(v2, v3);
}

uint64_t initializeWithCopy for Google_Protobuf_Method(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v7 = *(void *)(a2 + 64);
  uint64_t v6 = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 72) = v6;
  uint64_t v8 = *(void *)(a2 + 88);
  unint64_t v9 = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(v8, v9);
  *(void *)(a1 + 88) = v8;
  *(void *)(a1 + 96) = v9;
  return a1;
}

uint64_t assignWithCopy for Google_Protobuf_Method(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = v4;
  uint64_t v6 = *(void *)(a2 + 88);
  unint64_t v5 = *(void *)(a2 + 96);
  sub_1C8CA3CF8(v6, v5);
  uint64_t v7 = *(void *)(a1 + 88);
  unint64_t v8 = *(void *)(a1 + 96);
  *(void *)(a1 + 88) = v6;
  *(void *)(a1 + 96) = v5;
  sub_1C8CA3D5C(v7, v8);
  return a1;
}

__n128 __swift_memcpy104_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for Google_Protobuf_Method(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v7 = *(void *)(a1 + 88);
  unint64_t v8 = *(void *)(a1 + 96);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  sub_1C8CA3D5C(v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for Google_Protobuf_Method(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Google_Protobuf_Method(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_Method()
{
  return &type metadata for Google_Protobuf_Method;
}

void *initializeWithCopy for Google_Protobuf_Mixin(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[4];
  unint64_t v6 = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(v5, v6);
  a1[4] = v5;
  a1[5] = v6;
  return a1;
}

void *assignWithCopy for Google_Protobuf_Mixin(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[4];
  unint64_t v4 = a2[5];
  sub_1C8CA3CF8(v5, v4);
  uint64_t v6 = a1[4];
  unint64_t v7 = a1[5];
  a1[4] = v5;
  a1[5] = v4;
  sub_1C8CA3D5C(v6, v7);
  return a1;
}

void *assignWithTake for Google_Protobuf_Mixin(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a1[4];
  unint64_t v7 = a1[5];
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  sub_1C8CA3D5C(v6, v7);
  return a1;
}

ValueMetadata *type metadata accessor for Google_Protobuf_Mixin()
{
  return &type metadata for Google_Protobuf_Mixin;
}

uint64_t sub_1C8CCB700(uint64_t a1, uint64_t a2)
{
  return a2;
}

BOOL static JSONEncodingError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t JSONEncodingError.hash(into:)()
{
  return sub_1C8D88850();
}

uint64_t JSONEncodingError.hashValue.getter()
{
  return sub_1C8D888A0();
}

BOOL sub_1C8CCB7E4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

unint64_t sub_1C8CCB7FC()
{
  unint64_t result = qword_1EA566228;
  if (!qword_1EA566228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566228);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for JSONEncodingError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for JSONEncodingError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C8CCB9ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

unsigned char *sub_1C8CCB9D4(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for JSONEncodingError()
{
  return &type metadata for JSONEncodingError;
}

uint64_t sub_1C8CCB9EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X8>)
{
  uint64_t v4 = v3;
  if (a2 == 1)
  {
    if (*(unsigned char *)(v3 + 17))
    {
      *(void *)uint64_t v3 = ",";
      *(void *)(v3 + 8) = 1;
      *(_WORD *)(v3 + 16) = 2;
      return sub_1C8D2827C(a1);
    }
    BOOL v7 = (unsigned __int8 *)*(unsigned __int8 *)(v3 + 16);
    if (v7)
    {
      __break(1u);
    }
    else if (*(void *)v3)
    {
      sub_1C8CA6060(*(void *)v3, *(void *)(v3 + 8), v7);
      return sub_1C8D2827C(a1);
    }
    __break(1u);
    goto LABEL_17;
  }
  v3 += 24;
  sub_1C8CA6060((uint64_t)":", 1, a3);
  uint64_t v4 = (int)a1;
  if ((a1 & 0x80000000) != 0)
  {
    a1 = *(void *)v3;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)uint64_t v3 = a1;
    if (isUniquelyReferenced_nonNull_native)
    {
LABEL_11:
      unint64_t v10 = *(void *)(a1 + 16);
      unint64_t v11 = *(void *)(a1 + 24);
      unint64_t v12 = v10 + 1;
      if (v10 >= v11 >> 1)
      {
        unint64_t v16 = v10 + 1;
        unint64_t v13 = (char *)a1;
        unint64_t v14 = *(void *)(a1 + 16);
        unint64_t v15 = sub_1C8D5EB50((char *)(v11 > 1), v10 + 1, 1, v13);
        unint64_t v10 = v14;
        unint64_t v12 = v16;
        a1 = (uint64_t)v15;
      }
      *(void *)(a1 + 16) = v12;
      *(unsigned char *)(a1 + v10 + 32) = 45;
      *(void *)uint64_t v3 = a1;
      unint64_t v6 = -v4;
      return sub_1C8D29538(v6);
    }
LABEL_17:
    a1 = (uint64_t)sub_1C8D5EB50(0, *(void *)(a1 + 16) + 1, 1, (char *)a1);
    *(void *)uint64_t v3 = a1;
    goto LABEL_11;
  }
  unint64_t v6 = (int)a1;
  return sub_1C8D29538(v6);
}

const char *sub_1C8CCBB40@<X0>(const char *result@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X8>)
{
  unint64_t v4 = (unint64_t)result;
  if (a2 != 1)
  {
    unint64_t result = ":";
    uint64_t v5 = 1;
LABEL_8:
    sub_1C8CA6060((uint64_t)result, v5, a3);
    return (const char *)sub_1C8D284C4(v4);
  }
  if (*(unsigned char *)(v3 + 17))
  {
    *(void *)uint64_t v3 = ",";
    *(void *)(v3 + 8) = 1;
    *(_WORD *)(v3 + 16) = 2;
    return (const char *)sub_1C8D284C4(v4);
  }
  a3 = (unsigned __int8 *)*(unsigned __int8 *)(v3 + 16);
  if (a3)
  {
    __break(1u);
  }
  else
  {
    unint64_t result = *(const char **)v3;
    if (*(void *)v3)
    {
      uint64_t v5 = *(void *)(v3 + 8);
      goto LABEL_8;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C8CCBBE4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X8>)
{
  unsigned int v4 = result;
  if (a2 != 1)
  {
    sub_1C8CA6060((uint64_t)":", 1, a3);
    return sub_1C8D29538(v4);
  }
  if ((*(unsigned char *)(v3 + 17) & 1) == 0)
  {
    uint64_t v5 = (unsigned __int8 *)*(unsigned __int8 *)(v3 + 16);
    if (v5)
    {
      __break(1u);
    }
    else
    {
      unint64_t result = *(void *)v3;
      if (*(void *)v3)
      {
        sub_1C8CA6060(result, *(void *)(v3 + 8), v5);
        goto LABEL_8;
      }
    }
    __break(1u);
    return result;
  }
  *(void *)uint64_t v3 = ",";
  *(void *)(v3 + 8) = 1;
  *(_WORD *)(v3 + 16) = 2;
LABEL_8:
  BOOL v7 = (uint64_t *)(v3 + 24);
  unint64_t v6 = *(char **)(v3 + 24);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *BOOL v7 = (uint64_t)v6;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v6 = sub_1C8D5EB50(0, *((void *)v6 + 2) + 1, 1, v6);
    *BOOL v7 = (uint64_t)v6;
  }
  unint64_t v10 = *((void *)v6 + 2);
  unint64_t v9 = *((void *)v6 + 3);
  if (v10 >= v9 >> 1) {
    unint64_t v6 = sub_1C8D5EB50((char *)(v9 > 1), v10 + 1, 1, v6);
  }
  *((void *)v6 + 2) = v10 + 1;
  v6[v10 + 32] = 34;
  *BOOL v7 = (uint64_t)v6;
  sub_1C8D29538(v4);
  uint64_t v11 = *v7;
  unint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *BOOL v7 = v11;
  if ((result & 1) == 0)
  {
    unint64_t result = (uint64_t)sub_1C8D5EB50(0, *(void *)(v11 + 16) + 1, 1, (char *)v11);
    uint64_t v11 = result;
    *BOOL v7 = result;
  }
  unint64_t v13 = *(void *)(v11 + 16);
  unint64_t v12 = *(void *)(v11 + 24);
  if (v13 >= v12 >> 1)
  {
    unint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v12 > 1), v13 + 1, 1, (char *)v11);
    uint64_t v11 = result;
  }
  *(void *)(v11 + 16) = v13 + 1;
  *(unsigned char *)(v11 + v13 + 32) = 34;
  *BOOL v7 = v11;
  return result;
}

uint64_t sub_1C8CCBD94@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X8>)
{
  unint64_t v4 = result;
  if (a2 != 1)
  {
    unint64_t result = (uint64_t)":";
    uint64_t v5 = 1;
LABEL_8:
    sub_1C8CA6060(result, v5, a3);
    goto LABEL_9;
  }
  if ((*(unsigned char *)(v3 + 17) & 1) == 0)
  {
    a3 = (unsigned __int8 *)*(unsigned __int8 *)(v3 + 16);
    if (a3)
    {
      __break(1u);
    }
    else
    {
      unint64_t result = *(void *)v3;
      if (*(void *)v3)
      {
        uint64_t v5 = *(void *)(v3 + 8);
        goto LABEL_8;
      }
    }
    __break(1u);
    return result;
  }
  *(void *)uint64_t v3 = ",";
  *(void *)(v3 + 8) = 1;
  *(_WORD *)(v3 + 16) = 2;
LABEL_9:
  BOOL v7 = (uint64_t *)(v3 + 24);
  unint64_t v6 = *(char **)(v3 + 24);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *BOOL v7 = (uint64_t)v6;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v6 = sub_1C8D5EB50(0, *((void *)v6 + 2) + 1, 1, v6);
    *BOOL v7 = (uint64_t)v6;
  }
  unint64_t v10 = *((void *)v6 + 2);
  unint64_t v9 = *((void *)v6 + 3);
  if (v10 >= v9 >> 1) {
    unint64_t v6 = sub_1C8D5EB50((char *)(v9 > 1), v10 + 1, 1, v6);
  }
  *((void *)v6 + 2) = v10 + 1;
  v6[v10 + 32] = 34;
  *BOOL v7 = (uint64_t)v6;
  sub_1C8D29538(v4);
  uint64_t v11 = *v7;
  unint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *BOOL v7 = v11;
  if ((result & 1) == 0)
  {
    unint64_t result = (uint64_t)sub_1C8D5EB50(0, *(void *)(v11 + 16) + 1, 1, (char *)v11);
    uint64_t v11 = result;
    *BOOL v7 = result;
  }
  unint64_t v13 = *(void *)(v11 + 16);
  unint64_t v12 = *(void *)(v11 + 24);
  if (v13 >= v12 >> 1)
  {
    unint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v12 > 1), v13 + 1, 1, (char *)v11);
    uint64_t v11 = result;
  }
  *(void *)(v11 + 16) = v13 + 1;
  *(unsigned char *)(v11 + v13 + 32) = 34;
  *BOOL v7 = v11;
  return result;
}

uint64_t sub_1C8CCBF38@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X8>)
{
  char v4 = result;
  if (a2 == 1)
  {
    if (*(unsigned char *)(v3 + 17))
    {
      *(void *)uint64_t v3 = ",";
      *(void *)(v3 + 8) = 1;
      *(_WORD *)(v3 + 16) = 2;
      return sub_1C8D28770(v4 & 1);
    }
    int v8 = (unsigned __int8 *)*(unsigned __int8 *)(v3 + 16);
    if (v8)
    {
      __break(1u);
    }
    else
    {
      unint64_t result = *(void *)v3;
      if (*(void *)v3)
      {
        sub_1C8CA6060(result, *(void *)(v3 + 8), v8);
        return sub_1C8D28770(v4 & 1);
      }
    }
    __break(1u);
  }
  else
  {
    sub_1C8CA6060((uint64_t)":", 1, a3);
    if (v4)
    {
      unint64_t v6 = "true";
      uint64_t v7 = 4;
    }
    else
    {
      unint64_t v6 = "false";
      uint64_t v7 = 5;
    }
    return sub_1C8CA6060((uint64_t)v6, v7, v5);
  }
  return result;
}

const char *sub_1C8CCC004@<X0>(const char *result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, unsigned __int8 *a4@<X8>)
{
  uint64_t v6 = (uint64_t)result;
  if (a3 != 1)
  {
    unint64_t result = ":";
    uint64_t v7 = 1;
LABEL_8:
    sub_1C8CA6060((uint64_t)result, v7, a4);
    return (const char *)sub_1C8D288BC(v6, a2);
  }
  if (*(unsigned char *)(v4 + 17))
  {
    *(void *)uint64_t v4 = ",";
    *(void *)(v4 + 8) = 1;
    *(_WORD *)(v4 + 16) = 2;
    return (const char *)sub_1C8D288BC(v6, a2);
  }
  a4 = (unsigned __int8 *)*(unsigned __int8 *)(v4 + 16);
  if (a4)
  {
    __break(1u);
  }
  else
  {
    unint64_t result = *(const char **)v4;
    if (*(void *)v4)
    {
      uint64_t v7 = *(void *)(v4 + 8);
      goto LABEL_8;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C8CCC0B8@<X0>(unsigned __int8 *a1@<X8>)
{
  return sub_1C8CCC44C(a1);
}

uint64_t sub_1C8CCC0D8@<X0>(unsigned __int8 *a1@<X8>, float a2@<S0>)
{
  return sub_1C8D28164(a2);
}

uint64_t sub_1C8CCC124@<X0>(unsigned __int8 *a1@<X8>, double a2@<D0>)
{
  return sub_1C8D281F0(a2);
}

uint64_t sub_1C8CCC170@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X8>)
{
  return sub_1C8CCB9EC(a1, a2, a3);
}

const char *sub_1C8CCC188@<X0>(const char *a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X8>)
{
  return sub_1C8CCBB40(a1, a2, a3);
}

uint64_t sub_1C8CCC1A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X8>)
{
  return sub_1C8CCBBE4(a1, a2, a3);
}

uint64_t sub_1C8CCC1B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X8>)
{
  return sub_1C8CCBD94(a1, a2, a3);
}

uint64_t sub_1C8CCC1D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X8>)
{
  return sub_1C8CCBF38(a1, a2, a3);
}

const char *sub_1C8CCC1E8@<X0>(const char *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, unsigned __int8 *a4@<X8>)
{
  return sub_1C8CCC004(a1, a2, a3, a4);
}

uint64_t sub_1C8CCC200@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned __int8 *a3@<X8>)
{
  return sub_1C8D290C0(a1, a2);
}

uint64_t sub_1C8CCC254@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, unsigned __int8 *a3@<X8>)
{
  return sub_1C8CCC274(a1, a2, a3);
}

uint64_t sub_1C8CCC274@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unsigned __int8 *a3@<X8>)
{
  uint64_t v6 = (char **)(v3 + 24);
  sub_1C8CA6060((uint64_t)":", 1, a3);
  if ((*(unsigned char *)(v3 + 34) & 1) != 0
    || (sub_1C8CB5340(a1, a2, (uint64_t)v17), sub_1C8CCC4E8((uint64_t)v17, (uint64_t)v18), HIBYTE(v19) == 255))
  {
    unint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 40))(a1, a2);
    unint64_t v8 = v7;
    if ((v7 & 0x8000000000000000) != 0)
    {
      unint64_t v9 = *v6;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      const char *v6 = v9;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v9 = sub_1C8D5EB50(0, *((void *)v9 + 2) + 1, 1, v9);
        const char *v6 = v9;
      }
      unint64_t v12 = *((void *)v9 + 2);
      unint64_t v11 = *((void *)v9 + 3);
      if (v12 >= v11 >> 1) {
        unint64_t v9 = sub_1C8D5EB50((char *)(v11 > 1), v12 + 1, 1, v9);
      }
      *((void *)v9 + 2) = v12 + 1;
      v9[v12 + 32] = 45;
      const char *v6 = v9;
      unint64_t v7 = -(uint64_t)v8;
    }
    return sub_1C8D29538(v7);
  }
  else
  {
    long long v20 = v18[0];
    long long v21 = v18[1];
    __int16 v22 = v19;
    sub_1C8CCC550((uint64_t)&v21, (uint64_t)v23);
    sub_1C8CCC550((uint64_t)v23, (uint64_t)v24);
    uint64_t v14 = v24[0];
    if (v25)
    {
      uint64_t v14 = sub_1C8D886A0();
      unint64_t v16 = v15;
      sub_1C8CCC5AC((uint64_t)v17);
    }
    else
    {
      unint64_t v16 = v24[1];
    }
    sub_1C8D288BC(v14, v16);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C8CCC44C@<X0>(unsigned __int8 *a1@<X8>)
{
  sub_1C8CA6060((uint64_t)":", 1, a1);
  char v2 = *(unsigned char *)(v1 + 35);
  v7[0] = *(unsigned char *)(v1 + 34);
  v7[1] = v2;
  uint64_t v3 = v7;
  Swift::String v5 = Message.jsonString(options:)((SiriOntologyProtobuf::JSONEncodingOptions)v3);
  uint64_t result = v5._countAndFlagsBits;
  if (!v6) {
    return sub_1C8CA69C8(v5._countAndFlagsBits, (unint64_t)v5._object);
  }
  return result;
}

uint64_t sub_1C8CCC4E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA566230);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C8CCC550(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C8CCC5AC(uint64_t a1)
{
  return a1;
}

uint64_t destroy for JSONMapEncodingVisitor()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for JSONMapEncodingVisitor(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for JSONMapEncodingVisitor(uint64_t a1, long long *a2)
{
  long long v4 = *a2;
  *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
  *(_OWORD *)a1 = v4;
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 32) = *((_WORD *)a2 + 16);
  *(unsigned char *)(a1 + 34) = *((unsigned char *)a2 + 34);
  *(unsigned char *)(a1 + 35) = *((unsigned char *)a2 + 35);
  return a1;
}

__n128 __swift_memcpy36_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for JSONMapEncodingVisitor(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(unsigned char *)(a1 + 35) = *(unsigned char *)(a2 + 35);
  return a1;
}

uint64_t getEnumTagSinglePayload for JSONMapEncodingVisitor(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 36)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JSONMapEncodingVisitor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 36) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 36) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JSONMapEncodingVisitor()
{
  return &type metadata for JSONMapEncodingVisitor;
}

uint64_t sub_1C8CCC7B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X8>)
{
  return sub_1C8CCC170(a1, a2, a3);
}

BOOL static BinaryDecodingError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t BinaryDecodingError.hash(into:)()
{
  return sub_1C8D88850();
}

uint64_t BinaryDecodingError.hashValue.getter()
{
  return sub_1C8D888A0();
}

unint64_t sub_1C8CCC858()
{
  unint64_t result = qword_1EA566238;
  if (!qword_1EA566238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566238);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for BinaryDecodingError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for BinaryDecodingError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C8CCCA08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BinaryDecodingError()
{
  return &type metadata for BinaryDecodingError;
}

uint64_t static Version.major.getter()
{
  return 1;
}

uint64_t static Version.minor.getter()
{
  return 7;
}

uint64_t static Version.revision.getter()
{
  return 0;
}

uint64_t sub_1C8CCCA58()
{
  uint64_t v2 = sub_1C8D887A0();
  uint64_t v3 = v0;
  sub_1C8D88400();
  sub_1C8D887A0();
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  sub_1C8D88400();
  sub_1C8D887A0();
  sub_1C8D88400();
  uint64_t result = swift_bridgeObjectRelease();
  qword_1EA566240 = v2;
  *(void *)algn_1EA566248 = v3;
  return result;
}

uint64_t static Version.versionString.getter()
{
  if (qword_1EA565A70 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EA566240;
  swift_bridgeObjectRetain();
  return v0;
}

ValueMetadata *type metadata accessor for Version()
{
  return &type metadata for Version;
}

uint64_t BinaryDecodingOptions.messageDepthLimit.getter()
{
  return *(void *)v0;
}

uint64_t BinaryDecodingOptions.messageDepthLimit.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*BinaryDecodingOptions.messageDepthLimit.modify())()
{
  return nullsub_1;
}

uint64_t BinaryDecodingOptions.discardUnknownFields.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t BinaryDecodingOptions.discardUnknownFields.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 8) = result;
  return result;
}

uint64_t (*BinaryDecodingOptions.discardUnknownFields.modify())()
{
  return nullsub_1;
}

uint64_t getEnumTagSinglePayload for BinaryDecodingOptions(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for BinaryDecodingOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

uint64_t Google_Protobuf_Struct.init(dictionaryLiteral:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int v3 = (void *)sub_1C8D845B8(MEMORY[0x1E4FBC860]);
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a2 = v3;
    *(_OWORD *)(a2 + 8) = xmmword_1C8D8AD80;
    return result;
  }
  int v5 = (uint64_t *)(a1 + 64);
  while (1)
  {
    uint64_t v28 = v4;
    uint64_t v8 = *(v5 - 4);
    uint64_t v7 = *(v5 - 3);
    uint64_t v9 = *(v5 - 2);
    unint64_t v10 = *(v5 - 1);
    uint64_t v11 = *v5;
    swift_bridgeObjectRetain();
    sub_1C8CA3CF8(v9, v10);
    swift_retain();
    sub_1C8CA3CF8(v9, v10);
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v14 = sub_1C8CA5C9C(v8, v7);
    uint64_t v15 = v3[2];
    BOOL v16 = (v13 & 1) == 0;
    uint64_t v17 = v15 + v16;
    if (__OFADD__(v15, v16)) {
      break;
    }
    char v18 = v13;
    if (v3[3] >= v17)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v13) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_1C8D86EE0();
        if (v18) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_1C8D855DC(v17, isUniquelyReferenced_nonNull_native);
      unint64_t v19 = sub_1C8CA5C9C(v8, v7);
      if ((v18 & 1) != (v20 & 1)) {
        goto LABEL_19;
      }
      unint64_t v14 = v19;
      if (v18)
      {
LABEL_3:
        unsigned int v6 = (uint64_t *)(v3[7] + 24 * v14);
        sub_1C8CA3D5C(*v6, v6[1]);
        swift_release();
        uint64_t *v6 = v9;
        v6[1] = v10;
        void v6[2] = v11;
        goto LABEL_4;
      }
    }
    v3[(v14 >> 6) + 8] |= 1 << v14;
    long long v21 = (uint64_t *)(v3[6] + 16 * v14);
    uint64_t *v21 = v8;
    v21[1] = v7;
    __int16 v22 = (uint64_t *)(v3[7] + 24 * v14);
    *__int16 v22 = v9;
    v22[1] = v10;
    v22[2] = v11;
    uint64_t v23 = v3[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_18;
    }
    v3[2] = v25;
    swift_bridgeObjectRetain();
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA3D5C(v9, v10);
    swift_release();
    v5 += 5;
    uint64_t v4 = v28 - 1;
    if (v28 == 1) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  uint64_t result = sub_1C8D887E0();
  __break(1u);
  return result;
}

uint64_t sub_1C8CCCEE0(unsigned __int8 *a1)
{
  uint64_t v2 = sub_1C8D88340();
  MEMORY[0x1F4188790](v2 - 8, v3);
  uint64_t v47 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v5) = *a1;
  LODWORD(a1) = a1[1];
  uint64_t v51 = *v1;
  uint64_t v7 = sub_1C8D5EB50(0, 1, 1, MEMORY[0x1E4FBC860]);
  int64_t v9 = *((void *)v7 + 2);
  unint64_t v8 = *((void *)v7 + 3);
  unint64_t v10 = (char **)(v9 + 1);
  if (v9 < v8 >> 1) {
    goto LABEL_2;
  }
LABEL_45:
  uint64_t v7 = sub_1C8D5EB50((char *)(v8 > 1), (int64_t)v10, 1, v7);
LABEL_2:
  *((void *)v7 + 2) = v10;
  v7[v9 + 32] = 123;
  uint64_t v56 = 0;
  uint64_t v57 = 0;
  __int16 v58 = 256;
  unint64_t v10 = &v59;
  __int16 v59 = v7;
  __int16 v60 = 256;
  char v61 = v5;
  char v62 = (char)a1;
  uint64_t v11 = *(void *)(v51 + 64);
  uint64_t v45 = v51 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(v51 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  int64_t v46 = (unint64_t)(v12 + 63) >> 6;
  if (a1) {
    int v15 = 256;
  }
  else {
    int v15 = 0;
  }
  int v49 = v15 | v5;
  swift_bridgeObjectRetain();
  int64_t v9 = 0;
  uint64_t v5 = 0;
  uint64_t v48 = 0;
  unsigned int v50 = 0;
  unint64_t v8 = 1;
  if (v14)
  {
LABEL_8:
    unint64_t v16 = __clz(__rbit64(v14));
    uint64_t v17 = (v14 - 1) & v14;
    unint64_t v18 = v16 | (v9 << 6);
    goto LABEL_20;
  }
  while (1)
  {
    if (__OFADD__(v9++, 1)) {
      goto LABEL_43;
    }
    if (v9 >= v46) {
      goto LABEL_34;
    }
    unint64_t v20 = *(void *)(v45 + 8 * v9);
    if (!v20)
    {
      int64_t v21 = v9 + 1;
      if (v9 + 1 >= v46) {
        goto LABEL_34;
      }
      unint64_t v20 = *(void *)(v45 + 8 * v21);
      if (!v20)
      {
        int64_t v21 = v9 + 2;
        if (v9 + 2 >= v46) {
          goto LABEL_34;
        }
        unint64_t v20 = *(void *)(v45 + 8 * v21);
        if (!v20)
        {
          int64_t v21 = v9 + 3;
          if (v9 + 3 >= v46)
          {
LABEL_34:
            swift_release();
            uint64_t v39 = v59;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v39 = sub_1C8D5EB50(0, *((void *)v39 + 2) + 1, 1, v39);
            }
            unint64_t v41 = *((void *)v39 + 2);
            unint64_t v40 = *((void *)v39 + 3);
            if (v41 >= v40 >> 1) {
              uint64_t v39 = sub_1C8D5EB50((char *)(v40 > 1), v41 + 1, 1, v39);
            }
            *((void *)v39 + 2) = v41 + 1;
            v39[v41 + 32] = 125;
            __int16 v59 = v39;
            __int16 v60 = 44;
            uint64_t v63 = v39;
            swift_bridgeObjectRetain();
            sub_1C8D88330();
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
            sub_1C8CA4790();
            a1 = (unsigned __int8 *)sub_1C8D88310();
            uint64_t v43 = v42;
            uint64_t result = swift_bridgeObjectRelease();
            if (!v43) {
              goto LABEL_47;
            }
            swift_bridgeObjectRelease();
            return (uint64_t)a1;
          }
          unint64_t v20 = *(void *)(v45 + 8 * v21);
          if (!v20)
          {
            while (1)
            {
              int64_t v9 = v21 + 1;
              if (__OFADD__(v21, 1)) {
                break;
              }
              if (v9 >= v46) {
                goto LABEL_34;
              }
              unint64_t v20 = *(void *)(v45 + 8 * v9);
              ++v21;
              if (v20) {
                goto LABEL_19;
              }
            }
LABEL_44:
            __break(1u);
            goto LABEL_45;
          }
        }
      }
      int64_t v9 = v21;
    }
LABEL_19:
    uint64_t v17 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_20:
    uint64_t v22 = *(void *)(v51 + 48) + 16 * v18;
    a1 = *(unsigned __int8 **)v22;
    unint64_t v23 = *(void *)(v22 + 8);
    BOOL v24 = (uint64_t *)(*(void *)(v51 + 56) + 24 * v18);
    uint64_t v25 = *v24;
    unint64_t v26 = v24[1];
    uint64_t v27 = v24[2];
    if (v8)
    {
      uint64_t v5 = (uint64_t)",";
      uint64_t v56 = ",";
      uint64_t v57 = 1;
      unsigned int v50 = 2;
      __int16 v58 = 2;
      swift_bridgeObjectRetain();
      sub_1C8CA3CF8(v25, v26);
      swift_retain();
      uint64_t v48 = 1;
    }
    else
    {
      unint64_t v8 = v50;
      if (v50)
      {
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        goto LABEL_44;
      }
      if (!v5) {
        goto LABEL_42;
      }
      swift_bridgeObjectRetain();
      sub_1C8CA3CF8(v25, v26);
      swift_retain();
      sub_1C8CA6060(v5, v48, v28);
    }
    sub_1C8D288BC((uint64_t)a1, v23);
    swift_bridgeObjectRelease();
    sub_1C8CA6060((uint64_t)":", 1, v29);
    uint64_t v54 = v25;
    uint64_t v30 = v55;
    uint64_t v31 = sub_1C8D60E48(v49, v25, v26, v27);
    uint64_t v55 = v30;
    if (v30)
    {
      swift_release();
      swift_bridgeObjectRelease();
      sub_1C8CA3D5C(v54, v26);
      swift_release();
      return (uint64_t)a1;
    }
    a1 = (unsigned __int8 *)v31;
    unint64_t v33 = v32;
    uint64_t v52 = v5;
    unint64_t v53 = v17;
    int64_t v34 = v9;
    sub_1C8D88330();
    uint64_t result = sub_1C8D88300();
    if (!v36) {
      break;
    }
    uint64_t v37 = result;
    unint64_t v38 = v36;
    sub_1C8CA3D5C((uint64_t)a1, v33);
    sub_1C8CA69C8(v37, v38);
    sub_1C8CA3D5C(v54, v26);
    swift_release();
    unint64_t v8 = 0;
    int64_t v9 = v34;
    uint64_t v5 = v52;
    unint64_t v14 = v53;
    if (v53) {
      goto LABEL_8;
    }
  }
  __break(1u);
LABEL_47:
  __break(1u);
  return result;
}

uint64_t sub_1C8CCD3C0(uint64_t *a1)
{
  uint64_t v3 = v1;
  uint64_t result = sub_1C8CAFD2C(123);
  if (!v2)
  {
    uint64_t v6 = a1[5];
    BOOL v7 = __OFSUB__(v6, 1);
    uint64_t v8 = v6 - 1;
    if (v7)
    {
      __break(1u);
      return result;
    }
    a1[5] = v8;
    if (v8 < 0)
    {
      sub_1C8CAC5B0();
      swift_allocError();
      _OWORD *v13 = xmmword_1C8D8AD70;
    }
    else
    {
      uint64_t result = sub_1C8CAFFD8();
      if (result) {
        return result;
      }
      uint64_t v10 = a1[1];
      uint64_t v9 = a1[2];
      if (v9 == v10)
      {
        uint64_t v11 = 13;
      }
      else
      {
        uint64_t v11 = 13;
        long long v14 = xmmword_1C8D8AD80;
        do
        {
          uint64_t v15 = *a1;
          while (1)
          {
            unsigned int v16 = *(unsigned __int8 *)(v15 + v9);
            BOOL v17 = v16 > 0x20;
            uint64_t v18 = (1 << v16) & 0x100002600;
            if (v17 || v18 == 0) {
              break;
            }
            a1[2] = ++v9;
            if (v10 == v9) {
              goto LABEL_7;
            }
          }
          if (v10 == v9) {
            break;
          }
          if (*(unsigned char *)(*a1 + v9) != 34 || (long long v25 = v14, v20 = sub_1C8CAD9C4(), !v21))
          {
            uint64_t v11 = 5;
            break;
          }
          uint64_t v22 = v21;
          uint64_t v24 = (uint64_t)v20;
          sub_1C8CAFD2C(58);
          type metadata accessor for Google_Protobuf_Value._StorageClass();
          uint64_t inited = swift_initStaticObject();
          sub_1C8D60820(a1);
          sub_1C8CA3CF8(v25, *((unint64_t *)&v25 + 1));
          swift_retain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v27 = *v3;
          *uint64_t v3 = 0x8000000000000000;
          sub_1C8D8633C(v25, *((uint64_t *)&v25 + 1), inited, v24, v22, isUniquelyReferenced_nonNull_native);
          *uint64_t v3 = v27;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (sub_1C8CAFFD8())
          {
            sub_1C8CA3D5C(v25, *((unint64_t *)&v25 + 1));
            return swift_release();
          }
          sub_1C8CAFD2C(44);
          sub_1C8CA3D5C(v25, *((unint64_t *)&v25 + 1));
          swift_release();
          uint64_t v10 = a1[1];
          uint64_t v9 = a1[2];
          long long v14 = v25;
          uint64_t v11 = 13;
        }
        while (v9 != v10);
      }
LABEL_7:
      sub_1C8CAC5B0();
      swift_allocError();
      *uint64_t v12 = 0;
      v12[1] = v11;
    }
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1C8CCD694(unsigned __int8 *a1)
{
  return sub_1C8CCCEE0(a1);
}

uint64_t sub_1C8CCD6AC(uint64_t *a1)
{
  return sub_1C8CCD3C0(a1);
}

double Google_Protobuf_Struct.init(fields:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C8D845B8(MEMORY[0x1E4FBC860]);
  swift_bridgeObjectRelease();
  *(void *)a2 = a1;
  double result = 0.0;
  *(_OWORD *)(a2 + 8) = xmmword_1C8D8AD80;
  return result;
}

uint64_t Google_Protobuf_Struct.subscript.getter@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *v3;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_7;
  }
  uint64_t v7 = result;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1C8CA5C9C(v7, a2);
  if ((v9 & 1) == 0)
  {
    double result = swift_bridgeObjectRelease();
LABEL_7:
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    return result;
  }
  uint64_t v10 = (uint64_t *)(*(void *)(v5 + 56) + 24 * v8);
  uint64_t v11 = *v10;
  unint64_t v12 = v10[1];
  uint64_t v13 = v10[2];
  *a3 = *v10;
  a3[1] = v12;
  a3[2] = v13;
  sub_1C8CA3CF8(v11, v12);
  swift_retain();
  return swift_bridgeObjectRelease();
}

double sub_1C8CCD7B8@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 8);
  unint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(v4, v5);
  Google_Protobuf_Struct.subscript.getter(v6, v7, (uint64_t *)&v10);
  swift_bridgeObjectRelease();
  sub_1C8CA3D5C(v4, v5);
  uint64_t v8 = v11;
  double result = *(double *)&v10;
  *(_OWORD *)a3 = v10;
  *(void *)(a3 + 16) = v8;
  return result;
}

uint64_t sub_1C8CCD858(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = *a3;
  uint64_t v4 = a3[1];
  uint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  uint64_t v7 = a1[2];
  swift_bridgeObjectRetain();
  sub_1C8CC1F8C(v5, v6, v7);
  return sub_1C8CB5F70(v5, v6, v7, v3, v4);
}

uint64_t Google_Protobuf_Struct.subscript.setter(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a1[2];
  if (v6)
  {
    uint64_t v8 = *a1;
    uint64_t v7 = a1[1];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11[0] = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1C8D8633C(v8, v7, v6, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v11[0];
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C8CCDB2C(a2, a3, (uint64_t)v11);
    swift_bridgeObjectRelease();
    return sub_1C8CB6084(v11[0], v11[1], v11[2]);
  }
}

void (*Google_Protobuf_Struct.subscript.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t **a1, char a2)
{
  uint64_t v7 = malloc(0x30uLL);
  *a1 = v7;
  long long v7[4] = a3;
  v7[5] = v3;
  uint64_t v7[3] = a2;
  uint64_t v8 = *v3;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  unint64_t v9 = sub_1C8CA5C9C(a2, a3);
  if ((v10 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *uint64_t v7 = 0;
    v7[1] = 0;
    unsigned char v7[2] = 0;
    return sub_1C8CCDA6C;
  }
  uint64_t v11 = (uint64_t *)(*(void *)(v8 + 56) + 24 * v9);
  uint64_t v12 = *v11;
  unint64_t v13 = v11[1];
  uint64_t v14 = v11[2];
  *uint64_t v7 = *v11;
  v7[1] = v13;
  unsigned char v7[2] = v14;
  sub_1C8CA3CF8(v12, v13);
  swift_retain();
  swift_bridgeObjectRelease();
  return sub_1C8CCDA6C;
}

void sub_1C8CCDA6C(uint64_t **a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = (*a1)[4];
  uint64_t v5 = **a1;
  unint64_t v6 = (*a1)[1];
  uint64_t v7 = (*a1)[2];
  swift_bridgeObjectRetain();
  uint64_t v8 = v3[3];
  if (a2)
  {
    sub_1C8CC1F8C(v5, v6, v7);
    sub_1C8CB5F70(v5, v6, v7, v8, v4);
    sub_1C8CB6084(*v3, v3[1], v3[2]);
  }
  else
  {
    sub_1C8CB5F70(v5, v6, v7, v3[3], v4);
  }
  free(v3);
}

uint64_t sub_1C8CCDB2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1C8CA5C9C(a1, a2);
  LOBYTE(a2) = v9;
  uint64_t result = swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v4;
    uint64_t v15 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1C8D86EE0();
      uint64_t v12 = v15;
    }
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void *)(v12 + 56) + 24 * v8;
    uint64_t v14 = *(void *)(v13 + 16);
    *(_OWORD *)a3 = *(_OWORD *)v13;
    *(void *)(a3 + 16) = v14;
    sub_1C8CCDDE8(v8, v12);
    *uint64_t v4 = v12;
    return swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    *(void *)(a3 + 16) = 0;
  }
  return result;
}

unint64_t sub_1C8CCDC3C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1C8D88650();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v11 = *(void *)(a2 + 48);
        uint64_t v12 = (void *)(v11 + 8 * v6);
        uint64_t result = sub_1C8D88830();
        unint64_t v13 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 >= v8 && v3 >= (uint64_t)v13)
          {
LABEL_16:
            unsigned int v16 = (void *)(v11 + 8 * v3);
            if (v3 != v6 || v16 >= v12 + 1) {
              *unsigned int v16 = *v12;
            }
            uint64_t v17 = *(void *)(a2 + 56);
            unint64_t v18 = v17 + 40 * v3;
            unint64_t v19 = (long long *)(v17 + 40 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v18 >= (unint64_t)v19 + 40))
            {
              long long v9 = *v19;
              long long v10 = v19[1];
              *(void *)(v18 + 32) = *((void *)v19 + 4);
              *(_OWORD *)unint64_t v18 = v9;
              *(_OWORD *)(v18 + 16) = v10;
              int64_t v3 = v6;
            }
          }
        }
        else if (v13 >= v8 || v3 >= (uint64_t)v13)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  uint64_t *v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1C8CCDDE8(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1C8D88650();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1C8D88840();
        swift_bridgeObjectRetain();
        sub_1C8D883C0();
        uint64_t v10 = sub_1C8D888A0();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          unint64_t v13 = (_OWORD *)(v12 + 16 * v3);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            _OWORD *v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          unint64_t v16 = v15 + 24 * v3;
          uint64_t v17 = (long long *)(v15 + 24 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= (unint64_t)v17 + 24))
          {
            long long v9 = *v17;
            *(void *)(v16 + 16) = *((void *)v17 + 2);
            *(_OWORD *)unint64_t v16 = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *unint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1C8CCDFDC()
{
  return 0;
}

uint64_t (*Google_Protobuf_FileDescriptorSet.file.modify())()
{
  return nullsub_1;
}

uint64_t (*Google_Protobuf_FileDescriptorSet.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_FileDescriptorProto.name.setter(uint64_t a1, uint64_t a2)
{
  return sub_1C8CD7F84(a1, a2, (void (*)(void))type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass, 176, (uint64_t (*)(uint64_t))sub_1C8CE32A4);
}

uint64_t type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass()
{
  return self;
}

void (*Google_Protobuf_FileDescriptorProto.name.modify(void *a1))(uint64_t a1, char a2)
{
  int64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  if (*(void *)(v4 + 24))
  {
    uint64_t v5 = *(void *)(v4 + 16);
    unint64_t v6 = *(void *)(v4 + 24);
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C8CCE130;
}

void sub_1C8CCE130(uint64_t a1, char a2)
{
}

Swift::Void __swiftcall Google_Protobuf_FileDescriptorProto.clearName()()
{
}

uint64_t sub_1C8CCE194(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v5 = (void *)swift_retain();
    *(void *)(a2 + 16) = sub_1C8CE32A4(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(a2 + 16);
  swift_beginAccess();
  *(void *)(v6 + 32) = v4;
  *(void *)(v6 + 40) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileDescriptorProto.package.setter(uint64_t a1, uint64_t a2)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v5 = (void *)swift_retain();
    *(void *)(v2 + 16) = sub_1C8CE32A4(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v2 + 16);
  swift_beginAccess();
  *(void *)(v6 + 32) = a1;
  *(void *)(v6 + 40) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_FileDescriptorProto.package.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  if (*(void *)(v4 + 40))
  {
    uint64_t v5 = *(void *)(v4 + 32);
    unint64_t v6 = *(void *)(v4 + 40);
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C8CCE398;
}

void sub_1C8CCE398(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 72);
  uint64_t v4 = *(void *)(*(void *)a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = v2[11];
      type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
      swift_allocObject();
      unint64_t v6 = (void *)swift_retain();
      *(void *)(v5 + 16) = sub_1C8CE32A4(v6);
      swift_release();
    }
    uint64_t v7 = *(void *)(v2[11] + 16);
    swift_beginAccess();
    *(void *)(v7 + 32) = v3;
    *(void *)(v7 + 40) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v8 = v2[11];
      type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
      swift_allocObject();
      long long v9 = (void *)swift_retain();
      *(void *)(v8 + 16) = sub_1C8CE32A4(v9);
      swift_release();
    }
    uint64_t v10 = *(void *)(v2[11] + 16);
    swift_beginAccess();
    *(void *)(v10 + 32) = v3;
    *(void *)(v10 + 40) = v4;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

BOOL Google_Protobuf_FileDescriptorProto.hasPackage.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  return *(void *)(v1 + 40) != 0;
}

Swift::Void __swiftcall Google_Protobuf_FileDescriptorProto.clearPackage()()
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v1 = (void *)swift_retain();
    *(void *)(v0 + 16) = sub_1C8CE32A4(v1);
    swift_release();
  }
  uint64_t v2 = *(void *)(v0 + 16);
  swift_beginAccess();
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileDescriptorProto.dependency.setter(uint64_t a1)
{
  return sub_1C8CD0758(a1, (void (*)(void))type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass, 176, (uint64_t (*)(uint64_t))sub_1C8CE32A4);
}

void (*Google_Protobuf_FileDescriptorProto.dependency.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(void *)(v4 + 48);
  swift_bridgeObjectRetain();
  return sub_1C8CCE68C;
}

void sub_1C8CCE68C(uint64_t a1, char a2)
{
}

uint64_t Google_Protobuf_FileDescriptorProto.publicDependency.setter(uint64_t a1)
{
  return sub_1C8CD0B6C(a1, (void (*)(void))type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass, 176, (uint64_t (*)(uint64_t))sub_1C8CE32A4);
}

void (*Google_Protobuf_FileDescriptorProto.publicDependency.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(void *)(v4 + 56);
  swift_bridgeObjectRetain();
  return sub_1C8CCE770;
}

void sub_1C8CCE770(uint64_t a1, char a2)
{
}

uint64_t Google_Protobuf_FileDescriptorProto.weakDependency.setter(uint64_t a1)
{
  return sub_1C8CD0F80(a1, (void (*)(void))type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass, 176, (uint64_t (*)(uint64_t))sub_1C8CE32A4);
}

void (*Google_Protobuf_FileDescriptorProto.weakDependency.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(void *)(v4 + 64);
  swift_bridgeObjectRetain();
  return sub_1C8CCE854;
}

void sub_1C8CCE854(uint64_t a1, char a2)
{
}

uint64_t Google_Protobuf_FileDescriptorProto.messageType.setter(uint64_t a1)
{
  return sub_1C8CD1394(a1, (void (*)(void))type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass, 176, (uint64_t (*)(uint64_t))sub_1C8CE32A4);
}

void (*Google_Protobuf_FileDescriptorProto.messageType.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(void *)(v4 + 72);
  swift_bridgeObjectRetain();
  return sub_1C8CCE938;
}

void sub_1C8CCE938(uint64_t a1, char a2)
{
}

uint64_t Google_Protobuf_FileDescriptorProto.enumType.setter(uint64_t a1)
{
  return sub_1C8CD6F80(a1, (void (*)(void))type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass, 176, (uint64_t (*)(uint64_t))sub_1C8CE32A4);
}

void (*Google_Protobuf_FileDescriptorProto.enumType.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(void *)(v4 + 80);
  swift_bridgeObjectRetain();
  return sub_1C8CCEA1C;
}

void sub_1C8CCEA1C(uint64_t a1, char a2)
{
}

uint64_t Google_Protobuf_FileDescriptorProto.service.setter(uint64_t a1)
{
  return sub_1C8CD7394(a1, (void (*)(void))type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass, 176, (uint64_t (*)(uint64_t))sub_1C8CE32A4);
}

void (*Google_Protobuf_FileDescriptorProto.service.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(void *)(v4 + 88);
  swift_bridgeObjectRetain();
  return sub_1C8CCEB00;
}

void sub_1C8CCEB00(uint64_t a1, char a2)
{
}

uint64_t Google_Protobuf_FileDescriptorProto.extension.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CCEB74(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v4 = (void *)swift_retain();
    *(void *)(a2 + 16) = sub_1C8CE32A4(v4);
    swift_release();
  }
  uint64_t v5 = *(void *)(a2 + 16);
  swift_beginAccess();
  *(void *)(v5 + 96) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileDescriptorProto.extension.setter(uint64_t a1)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v3 = (void *)swift_retain();
    *(void *)(v1 + 16) = sub_1C8CE32A4(v3);
    swift_release();
  }
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  *(void *)(v4 + 96) = a1;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_FileDescriptorProto.extension.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(void *)(v4 + 96);
  swift_bridgeObjectRetain();
  return sub_1C8CCED3C;
}

void sub_1C8CCED3C(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 72);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v4 = v2[10];
      type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
      swift_allocObject();
      uint64_t v5 = (void *)swift_retain();
      *(void *)(v4 + 16) = sub_1C8CE32A4(v5);
      swift_release();
    }
    uint64_t v6 = *(void *)(v2[10] + 16);
    swift_beginAccess();
    *(void *)(v6 + 96) = v3;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v7 = v2[10];
      type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
      swift_allocObject();
      uint64_t v8 = (void *)swift_retain();
      *(void *)(v7 + 16) = sub_1C8CE32A4(v8);
      swift_release();
    }
    uint64_t v9 = *(void *)(v2[10] + 16);
    swift_beginAccess();
    *(void *)(v9 + 96) = v3;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

uint64_t Google_Protobuf_FileDescriptorProto.options.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + 16);
  swift_beginAccess();
  uint64_t v4 = v3[13];
  unint64_t v5 = v3[14];
  uint64_t v6 = v3[15];
  uint64_t v7 = v3[16];
  if (v6)
  {
    *a1 = v4;
    a1[1] = v5;
    a1[2] = v6;
    a1[3] = v7;
  }
  else
  {
    *(_OWORD *)a1 = xmmword_1C8D8AD80;
    a1[2] = MEMORY[0x1E4FBC868];
    if (qword_1EA565B38 != -1) {
      swift_once();
    }
    a1[3] = qword_1EA5664A8;
    swift_retain();
  }
  return sub_1C8CEF560(v4, v5, v6);
}

uint64_t sub_1C8CCEF64@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  unint64_t v5 = (void *)a1[2];
  swift_beginAccess();
  uint64_t v7 = v5[13];
  unint64_t v6 = v5[14];
  uint64_t v8 = v5[15];
  uint64_t v9 = v5[16];
  if (v8)
  {
    sub_1C8CA3CF8(v3, v4);
    swift_retain();
    uint64_t v10 = v9;
    uint64_t v11 = v8;
    unint64_t v15 = v6;
    uint64_t v16 = v7;
  }
  else
  {
    uint64_t v14 = v3;
    sub_1C8CA3CF8(v3, v4);
    uint64_t v12 = qword_1EA565B38;
    swift_retain();
    if (v12 != -1) {
      swift_once();
    }
    uint64_t v10 = qword_1EA5664A8;
    swift_retain();
    unint64_t v15 = 0xC000000000000000;
    uint64_t v16 = 0;
    uint64_t v11 = MEMORY[0x1E4FBC868];
    uint64_t v3 = v14;
  }
  sub_1C8CEF560(v7, v6, v8);
  sub_1C8CA3D5C(v3, v4);
  uint64_t result = swift_release();
  *a2 = v16;
  a2[1] = v15;
  a2[2] = v11;
  a2[3] = v10;
  return result;
}

uint64_t sub_1C8CCF09C(uint64_t *a1)
{
  unint64_t v1 = a1[1];
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  v5[0] = *a1;
  v5[1] = v1;
  v5[2] = v2;
  v5[3] = v3;
  sub_1C8CA3CF8(v5[0], v1);
  swift_bridgeObjectRetain();
  swift_retain();
  return Google_Protobuf_FileDescriptorProto.options.setter(v5);
}

uint64_t Google_Protobuf_FileDescriptorProto.options.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
    swift_allocObject();
    unint64_t v6 = (void *)swift_retain();
    *(void *)(v1 + 16) = sub_1C8CE32A4(v6);
    swift_release();
  }
  uint64_t v7 = *(void **)(v1 + 16);
  swift_beginAccess();
  uint64_t v8 = v7[13];
  unint64_t v9 = v7[14];
  uint64_t v10 = v7[15];
  v7[13] = v2;
  v7[14] = v3;
  v7[15] = v4;
  v7[16] = v5;
  return sub_1C8CEF5AC(v8, v9, v10);
}

uint64_t Google_Protobuf_FileOptions.init()@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_1C8D8AD80;
  *(void *)(a1 + 16) = MEMORY[0x1E4FBC868];
  if (qword_1EA565B38 != -1) {
    swift_once();
  }
  *(void *)(a1 + 24) = qword_1EA5664A8;
  return swift_retain();
}

void (*Google_Protobuf_FileDescriptorProto.options.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x70uLL);
  *a1 = v3;
  v3[13] = v1;
  uint64_t v4 = *(void **)(v1 + 16);
  swift_beginAccess();
  uint64_t v5 = v4[13];
  unint64_t v6 = v4[14];
  uint64_t v7 = v4[15];
  uint64_t v8 = v4[16];
  if (v7)
  {
    *uint64_t v3 = v5;
    v3[1] = v6;
    v3[2] = v7;
    v3[3] = v8;
  }
  else
  {
    *(_OWORD *)uint64_t v3 = xmmword_1C8D8AD80;
    v3[2] = MEMORY[0x1E4FBC868];
    if (qword_1EA565B38 != -1) {
      swift_once();
    }
    v3[3] = qword_1EA5664A8;
    swift_retain();
  }
  sub_1C8CEF560(v5, v6, v7);
  return sub_1C8CCF340;
}

void sub_1C8CCF340(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v4 = **a1;
  unint64_t v3 = (*a1)[1];
  uint64_t v6 = (*a1)[2];
  uint64_t v5 = (*a1)[3];
  if (a2)
  {
    sub_1C8CA3CF8(**a1, v3);
    swift_bridgeObjectRetain();
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v7 = v2[13];
      type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
      swift_allocObject();
      uint64_t v8 = (void *)swift_retain();
      *(void *)(v7 + 16) = sub_1C8CE32A4(v8);
      swift_release();
    }
    unint64_t v9 = *(void **)(v2[13] + 16);
    swift_beginAccess();
    uint64_t v10 = v9[13];
    unint64_t v11 = v9[14];
    uint64_t v12 = v9[15];
    v9[13] = v4;
    v9[14] = v3;
    v9[15] = v6;
    v9[16] = v5;
    sub_1C8CEF5AC(v10, v11, v12);
    sub_1C8CA3D5C(*v2, v2[1]);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v13 = v2[13];
      type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
      swift_allocObject();
      uint64_t v14 = (void *)swift_retain();
      *(void *)(v13 + 16) = sub_1C8CE32A4(v14);
      swift_release();
    }
    unint64_t v15 = *(void **)(v2[13] + 16);
    swift_beginAccess();
    uint64_t v16 = v15[13];
    unint64_t v17 = v15[14];
    uint64_t v18 = v15[15];
    v15[13] = v4;
    v15[14] = v3;
    v15[15] = v6;
    v15[16] = v5;
    sub_1C8CEF5AC(v16, v17, v18);
  }
  free(v2);
}

BOOL Google_Protobuf_FileDescriptorProto.hasOptions.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  return *(void *)(v1 + 120) != 0;
}

Swift::Void __swiftcall Google_Protobuf_FileDescriptorProto.clearOptions()()
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v1 = (void *)swift_retain();
    *(void *)(v0 + 16) = sub_1C8CE32A4(v1);
    swift_release();
  }
  uint64_t v2 = *(void **)(v0 + 16);
  swift_beginAccess();
  uint64_t v3 = v2[13];
  unint64_t v4 = v2[14];
  uint64_t v5 = v2[15];
  *(_OWORD *)(v2 + 13) = 0u;
  *(_OWORD *)(v2 + 15) = 0u;
  sub_1C8CEF5AC(v3, v4, v5);
}

uint64_t Google_Protobuf_FileDescriptorProto.sourceCodeInfo.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + 16);
  swift_beginAccess();
  uint64_t v4 = v3[17];
  uint64_t v5 = v3[18];
  unint64_t v6 = v3[19];
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v7 = v3[17];
    uint64_t v8 = v3[18];
  }
  else
  {
    uint64_t v8 = 0;
  }
  unint64_t v9 = 0xC000000000000000;
  if (v4) {
    unint64_t v9 = v3[19];
  }
  *a1 = v7;
  a1[1] = v8;
  a1[2] = v9;
  return sub_1C8CEF5F8(v4, v5, v6);
}

uint64_t sub_1C8CCF640@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void **)(a1 + 16);
  swift_beginAccess();
  uint64_t v4 = v3[17];
  uint64_t v5 = v3[18];
  unint64_t v6 = v3[19];
  if (v4) {
    uint64_t v7 = v3[18];
  }
  else {
    uint64_t v7 = 0;
  }
  unint64_t v8 = 0xC000000000000000;
  if (v4) {
    unint64_t v8 = v3[19];
  }
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (v4) {
    uint64_t v9 = v3[17];
  }
  *a2 = v9;
  a2[1] = v7;
  a2[2] = v8;
  return sub_1C8CEF5F8(v4, v5, v6);
}

uint64_t sub_1C8CCF6B0(uint64_t *a1)
{
  uint64_t v1 = a1[1];
  unint64_t v2 = a1[2];
  v4[0] = *a1;
  v4[1] = v1;
  v4[2] = v2;
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(v1, v2);
  return Google_Protobuf_FileDescriptorProto.sourceCodeInfo.setter(v4);
}

uint64_t Google_Protobuf_FileDescriptorProto.sourceCodeInfo.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v5 = (void *)swift_retain();
    *(void *)(v1 + 16) = sub_1C8CE32A4(v5);
    swift_release();
  }
  unint64_t v6 = *(void **)(v1 + 16);
  swift_beginAccess();
  uint64_t v7 = v6[17];
  uint64_t v8 = v6[18];
  unint64_t v9 = v6[19];
  v6[17] = v2;
  v6[18] = v3;
  v6[19] = v4;
  return sub_1C8CEF640(v7, v8, v9);
}

double Google_Protobuf_SourceCodeInfo.init()@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = MEMORY[0x1E4FBC860];
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C8D8AD80;
  return result;
}

void (*Google_Protobuf_FileDescriptorProto.sourceCodeInfo.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[12] = v1;
  uint64_t v4 = *(void **)(v1 + 16);
  swift_beginAccess();
  uint64_t v5 = v4[17];
  uint64_t v6 = v4[18];
  unint64_t v7 = v4[19];
  uint64_t v8 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v8 = v4[17];
    uint64_t v9 = v4[18];
  }
  else
  {
    uint64_t v9 = 0;
  }
  unint64_t v10 = 0xC000000000000000;
  if (v5) {
    unint64_t v10 = v4[19];
  }
  *uint64_t v3 = v8;
  v3[1] = v9;
  v3[2] = v10;
  sub_1C8CEF5F8(v5, v6, v7);
  return sub_1C8CCF87C;
}

void sub_1C8CCF87C(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v4 = **a1;
  uint64_t v3 = (*a1)[1];
  unint64_t v5 = (*a1)[2];
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1C8CA3CF8(v3, v5);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v6 = v2[12];
      type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
      swift_allocObject();
      unint64_t v7 = (void *)swift_retain();
      *(void *)(v6 + 16) = sub_1C8CE32A4(v7);
      swift_release();
    }
    uint64_t v8 = *(void **)(v2[12] + 16);
    swift_beginAccess();
    uint64_t v9 = v8[17];
    uint64_t v10 = v8[18];
    unint64_t v11 = v8[19];
    v8[17] = v4;
    v8[18] = v3;
    v8[19] = v5;
    sub_1C8CEF640(v9, v10, v11);
    uint64_t v12 = v2[1];
    unint64_t v13 = v2[2];
    swift_bridgeObjectRelease();
    sub_1C8CA3D5C(v12, v13);
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v14 = v2[12];
      type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
      swift_allocObject();
      unint64_t v15 = (void *)swift_retain();
      *(void *)(v14 + 16) = sub_1C8CE32A4(v15);
      swift_release();
    }
    uint64_t v16 = *(void **)(v2[12] + 16);
    swift_beginAccess();
    uint64_t v17 = v16[17];
    uint64_t v18 = v16[18];
    unint64_t v19 = v16[19];
    v16[17] = v4;
    v16[18] = v3;
    v16[19] = v5;
    sub_1C8CEF640(v17, v18, v19);
  }
  free(v2);
}

BOOL Google_Protobuf_FileDescriptorProto.hasSourceCodeInfo.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  return *(void *)(v1 + 136) != 0;
}

Swift::Void __swiftcall Google_Protobuf_FileDescriptorProto.clearSourceCodeInfo()()
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v1 = (void *)swift_retain();
    *(void *)(v0 + 16) = sub_1C8CE32A4(v1);
    swift_release();
  }
  uint64_t v2 = *(void **)(v0 + 16);
  swift_beginAccess();
  uint64_t v3 = v2[17];
  uint64_t v4 = v2[18];
  unint64_t v5 = v2[19];
  v2[18] = 0;
  v2[19] = 0;
  v2[17] = 0;
  sub_1C8CEF640(v3, v4, v5);
}

uint64_t Google_Protobuf_FileDescriptorProto.syntax.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  if (*(void *)(v1 + 168)) {
    uint64_t v2 = *(void *)(v1 + 160);
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C8CCFB5C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  swift_beginAccess();
  if (*(void *)(v3 + 168))
  {
    uint64_t v4 = *(void *)(v3 + 160);
    unint64_t v5 = *(void *)(v3 + 168);
  }
  else
  {
    uint64_t v4 = 0;
    unint64_t v5 = 0xE000000000000000;
  }
  *a2 = v4;
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CCFBCC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
    swift_allocObject();
    unint64_t v5 = (void *)swift_retain();
    *(void *)(a2 + 16) = sub_1C8CE32A4(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(a2 + 16);
  swift_beginAccess();
  *(void *)(v6 + 160) = v4;
  *(void *)(v6 + 168) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileDescriptorProto.syntax.setter(uint64_t a1, uint64_t a2)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
    swift_allocObject();
    unint64_t v5 = (void *)swift_retain();
    *(void *)(v2 + 16) = sub_1C8CE32A4(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v2 + 16);
  swift_beginAccess();
  *(void *)(v6 + 160) = a1;
  *(void *)(v6 + 168) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_FileDescriptorProto.syntax.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  if (*(void *)(v4 + 168))
  {
    uint64_t v5 = *(void *)(v4 + 160);
    unint64_t v6 = *(void *)(v4 + 168);
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C8CCFDD0;
}

void sub_1C8CCFDD0(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 72);
  uint64_t v4 = *(void *)(*(void *)a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = v2[11];
      type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
      swift_allocObject();
      unint64_t v6 = (void *)swift_retain();
      *(void *)(v5 + 16) = sub_1C8CE32A4(v6);
      swift_release();
    }
    uint64_t v7 = *(void *)(v2[11] + 16);
    swift_beginAccess();
    *(void *)(v7 + 160) = v3;
    *(void *)(v7 + 168) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v8 = v2[11];
      type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
      swift_allocObject();
      uint64_t v9 = (void *)swift_retain();
      *(void *)(v8 + 16) = sub_1C8CE32A4(v9);
      swift_release();
    }
    uint64_t v10 = *(void *)(v2[11] + 16);
    swift_beginAccess();
    *(void *)(v10 + 160) = v3;
    *(void *)(v10 + 168) = v4;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

BOOL Google_Protobuf_FileDescriptorProto.hasSyntax.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  return *(void *)(v1 + 168) != 0;
}

Swift::Void __swiftcall Google_Protobuf_FileDescriptorProto.clearSyntax()()
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v1 = (void *)swift_retain();
    *(void *)(v0 + 16) = sub_1C8CE32A4(v1);
    swift_release();
  }
  uint64_t v2 = *(void *)(v0 + 16);
  swift_beginAccess();
  *(void *)(v2 + 160) = 0;
  *(void *)(v2 + 168) = 0;
  swift_bridgeObjectRelease();
}

uint64_t (*Google_Protobuf_FileDescriptorProto.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_FileDescriptorProto.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_1C8CBACE8(&qword_1EA565A88, &qword_1EA566290, a1);
}

uint64_t Google_Protobuf_DescriptorProto.name.setter(uint64_t a1, uint64_t a2)
{
  return sub_1C8CD7F84(a1, a2, (void (*)(void))type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass, 136, sub_1C8CE52A8);
}

void (*Google_Protobuf_DescriptorProto.name.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  if (*(void *)(v4 + 24))
  {
    uint64_t v5 = *(void *)(v4 + 16);
    unint64_t v6 = *(void *)(v4 + 24);
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C8CD0134;
}

void sub_1C8CD0134(uint64_t a1, char a2)
{
}

BOOL Google_Protobuf_DescriptorProto.hasName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  return *(void *)(v1 + 24) != 0;
}

Swift::Void __swiftcall Google_Protobuf_DescriptorProto.clearName()()
{
}

uint64_t Google_Protobuf_DescriptorProto.field.setter(uint64_t a1)
{
  return sub_1C8CD8478(a1, (void (*)(void))type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass, 136, sub_1C8CE52A8);
}

void (*Google_Protobuf_DescriptorProto.field.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(void *)(v4 + 32);
  swift_bridgeObjectRetain();
  return sub_1C8CD0290;
}

void sub_1C8CD0290(uint64_t a1, char a2)
{
}

uint64_t Google_Protobuf_DescriptorProto.extension.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CD0304(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v4 = swift_retain();
    *(void *)(a2 + 16) = sub_1C8CE52A8(v4);
    swift_release();
  }
  uint64_t v5 = *(void *)(a2 + 16);
  swift_beginAccess();
  *(void *)(v5 + 40) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_DescriptorProto.extension.setter(uint64_t a1)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v3 = swift_retain();
    *(void *)(v1 + 16) = sub_1C8CE52A8(v3);
    swift_release();
  }
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  *(void *)(v4 + 40) = a1;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_DescriptorProto.extension.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(void *)(v4 + 40);
  swift_bridgeObjectRetain();
  return sub_1C8CD04CC;
}

void sub_1C8CD04CC(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 72);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v4 = v2[10];
      type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass();
      swift_allocObject();
      uint64_t v5 = swift_retain();
      *(void *)(v4 + 16) = sub_1C8CE52A8(v5);
      swift_release();
    }
    uint64_t v6 = *(void *)(v2[10] + 16);
    swift_beginAccess();
    *(void *)(v6 + 40) = v3;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v7 = v2[10];
      type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass();
      swift_allocObject();
      uint64_t v8 = swift_retain();
      *(void *)(v7 + 16) = sub_1C8CE52A8(v8);
      swift_release();
    }
    uint64_t v9 = *(void *)(v2[10] + 16);
    swift_beginAccess();
    *(void *)(v9 + 40) = v3;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

uint64_t _s20SiriOntologyProtobuf07Google_C20_FileDescriptorProtoV10dependencySaySSGvg_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CD0668(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v10 = *a1;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a5(0);
    swift_allocObject();
    uint64_t v11 = swift_retain();
    *(void *)(a2 + 16) = a7(v11);
    swift_release();
  }
  uint64_t v12 = *(void *)(a2 + 16);
  swift_beginAccess();
  *(void *)(v12 + 48) = v10;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_DescriptorProto.nestedType.setter(uint64_t a1)
{
  return sub_1C8CD0758(a1, (void (*)(void))type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass, 136, sub_1C8CE52A8);
}

uint64_t sub_1C8CD0758(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t (*a4)(uint64_t))
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a2(0);
    swift_allocObject();
    uint64_t v8 = swift_retain();
    *(void *)(v4 + 16) = a4(v8);
    swift_release();
  }
  uint64_t v9 = *(void *)(v4 + 16);
  swift_beginAccess();
  *(void *)(v9 + 48) = a1;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_DescriptorProto.nestedType.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(void *)(v4 + 48);
  swift_bridgeObjectRetain();
  return sub_1C8CD0894;
}

void sub_1C8CD0894(uint64_t a1, char a2)
{
}

void sub_1C8CD08C4(uint64_t a1, char a2, void (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v7 = *(void **)a1;
  uint64_t v8 = *(void *)(*(void *)a1 + 72);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = v7[10];
      a3(0);
      swift_allocObject();
      uint64_t v10 = swift_retain();
      *(void *)(v9 + 16) = a5(v10);
      swift_release();
    }
    uint64_t v11 = *(void *)(v7[10] + 16);
    swift_beginAccess();
    *(void *)(v11 + 48) = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v12 = v7[10];
      a3(0);
      swift_allocObject();
      uint64_t v13 = swift_retain();
      *(void *)(v12 + 16) = a5(v13);
      swift_release();
    }
    uint64_t v14 = *(void *)(v7[10] + 16);
    swift_beginAccess();
    *(void *)(v14 + 48) = v8;
  }
  swift_bridgeObjectRelease();
  free(v7);
}

uint64_t _s20SiriOntologyProtobuf07Google_C20_FileDescriptorProtoV16publicDependencySays5Int32VGvg_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CD0A7C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v10 = *a1;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a5(0);
    swift_allocObject();
    uint64_t v11 = swift_retain();
    *(void *)(a2 + 16) = a7(v11);
    swift_release();
  }
  uint64_t v12 = *(void *)(a2 + 16);
  swift_beginAccess();
  *(void *)(v12 + 56) = v10;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_DescriptorProto.enumType.setter(uint64_t a1)
{
  return sub_1C8CD0B6C(a1, (void (*)(void))type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass, 136, sub_1C8CE52A8);
}

uint64_t sub_1C8CD0B6C(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t (*a4)(uint64_t))
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a2(0);
    swift_allocObject();
    uint64_t v8 = swift_retain();
    *(void *)(v4 + 16) = a4(v8);
    swift_release();
  }
  uint64_t v9 = *(void *)(v4 + 16);
  swift_beginAccess();
  *(void *)(v9 + 56) = a1;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_DescriptorProto.enumType.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(void *)(v4 + 56);
  swift_bridgeObjectRetain();
  return sub_1C8CD0CA8;
}

void sub_1C8CD0CA8(uint64_t a1, char a2)
{
}

void sub_1C8CD0CD8(uint64_t a1, char a2, void (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v7 = *(void **)a1;
  uint64_t v8 = *(void *)(*(void *)a1 + 72);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = v7[10];
      a3(0);
      swift_allocObject();
      uint64_t v10 = swift_retain();
      *(void *)(v9 + 16) = a5(v10);
      swift_release();
    }
    uint64_t v11 = *(void *)(v7[10] + 16);
    swift_beginAccess();
    *(void *)(v11 + 56) = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v12 = v7[10];
      a3(0);
      swift_allocObject();
      uint64_t v13 = swift_retain();
      *(void *)(v12 + 16) = a5(v13);
      swift_release();
    }
    uint64_t v14 = *(void *)(v7[10] + 16);
    swift_beginAccess();
    *(void *)(v14 + 56) = v8;
  }
  swift_bridgeObjectRelease();
  free(v7);
}

uint64_t _s20SiriOntologyProtobuf07Google_C20_FileDescriptorProtoV14weakDependencySays5Int32VGvg_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CD0E90(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v10 = *a1;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a5(0);
    swift_allocObject();
    uint64_t v11 = swift_retain();
    *(void *)(a2 + 16) = a7(v11);
    swift_release();
  }
  uint64_t v12 = *(void *)(a2 + 16);
  swift_beginAccess();
  *(void *)(v12 + 64) = v10;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_DescriptorProto.extensionRange.setter(uint64_t a1)
{
  return sub_1C8CD0F80(a1, (void (*)(void))type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass, 136, sub_1C8CE52A8);
}

uint64_t sub_1C8CD0F80(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t (*a4)(uint64_t))
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a2(0);
    swift_allocObject();
    uint64_t v8 = swift_retain();
    *(void *)(v4 + 16) = a4(v8);
    swift_release();
  }
  uint64_t v9 = *(void *)(v4 + 16);
  swift_beginAccess();
  *(void *)(v9 + 64) = a1;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_DescriptorProto.extensionRange.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(void *)(v4 + 64);
  swift_bridgeObjectRetain();
  return sub_1C8CD10BC;
}

void sub_1C8CD10BC(uint64_t a1, char a2)
{
}

void sub_1C8CD10EC(uint64_t a1, char a2, void (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v7 = *(void **)a1;
  uint64_t v8 = *(void *)(*(void *)a1 + 72);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = v7[10];
      a3(0);
      swift_allocObject();
      uint64_t v10 = swift_retain();
      *(void *)(v9 + 16) = a5(v10);
      swift_release();
    }
    uint64_t v11 = *(void *)(v7[10] + 16);
    swift_beginAccess();
    *(void *)(v11 + 64) = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v12 = v7[10];
      a3(0);
      swift_allocObject();
      uint64_t v13 = swift_retain();
      *(void *)(v12 + 16) = a5(v13);
      swift_release();
    }
    uint64_t v14 = *(void *)(v7[10] + 16);
    swift_beginAccess();
    *(void *)(v14 + 64) = v8;
  }
  swift_bridgeObjectRelease();
  free(v7);
}

uint64_t _s20SiriOntologyProtobuf07Google_C20_FileDescriptorProtoV11messageTypeSayAA0d1_c1_fG0VGvg_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CD12A4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v10 = *a1;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a5(0);
    swift_allocObject();
    uint64_t v11 = swift_retain();
    *(void *)(a2 + 16) = a7(v11);
    swift_release();
  }
  uint64_t v12 = *(void *)(a2 + 16);
  swift_beginAccess();
  *(void *)(v12 + 72) = v10;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_DescriptorProto.oneofDecl.setter(uint64_t a1)
{
  return sub_1C8CD1394(a1, (void (*)(void))type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass, 136, sub_1C8CE52A8);
}

uint64_t sub_1C8CD1394(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t (*a4)(uint64_t))
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a2(0);
    swift_allocObject();
    uint64_t v8 = swift_retain();
    *(void *)(v4 + 16) = a4(v8);
    swift_release();
  }
  uint64_t v9 = *(void *)(v4 + 16);
  swift_beginAccess();
  *(void *)(v9 + 72) = a1;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_DescriptorProto.oneofDecl.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(void *)(v4 + 72);
  swift_bridgeObjectRetain();
  return sub_1C8CD14D0;
}

void sub_1C8CD14D0(uint64_t a1, char a2)
{
}

void sub_1C8CD1500(uint64_t a1, char a2, void (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v7 = *(void **)a1;
  uint64_t v8 = *(void *)(*(void *)a1 + 72);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = v7[10];
      a3(0);
      swift_allocObject();
      uint64_t v10 = swift_retain();
      *(void *)(v9 + 16) = a5(v10);
      swift_release();
    }
    uint64_t v11 = *(void *)(v7[10] + 16);
    swift_beginAccess();
    *(void *)(v11 + 72) = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v12 = v7[10];
      a3(0);
      swift_allocObject();
      uint64_t v13 = swift_retain();
      *(void *)(v12 + 16) = a5(v13);
      swift_release();
    }
    uint64_t v14 = *(void *)(v7[10] + 16);
    swift_beginAccess();
    *(void *)(v14 + 72) = v8;
  }
  swift_bridgeObjectRelease();
  free(v7);
}

uint64_t Google_Protobuf_DescriptorProto.options.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 88);
  unint64_t v6 = *(void *)(v3 + 96);
  unsigned int v7 = *(_DWORD *)(v3 + 112);
  uint64_t v8 = MEMORY[0x1E4FBC868];
  unint64_t v9 = 0xC000000000000000;
  uint64_t v10 = MEMORY[0x1E4FBC860];
  unsigned int v11 = v7 >> 8;
  unsigned int v12 = HIWORD(v7);
  if (v4)
  {
    uint64_t v10 = *(void *)(v3 + 80);
    uint64_t v13 = *(void *)(v3 + 88);
  }
  else
  {
    uint64_t v13 = 0;
  }
  if (v4)
  {
    unint64_t v9 = *(void *)(v3 + 96);
    uint64_t v8 = *(void *)(v3 + 104);
    char v14 = *(_DWORD *)(v3 + 112);
  }
  else
  {
    char v14 = 2;
  }
  if (v4)
  {
    char v15 = HIBYTE(*(_DWORD *)(v3 + 112));
  }
  else
  {
    LOBYTE(v11) = 2;
    LOBYTE(v12) = 2;
    char v15 = 2;
  }
  *(void *)a1 = v10;
  *(void *)(a1 + 8) = v13;
  *(void *)(a1 + 16) = v9;
  *(void *)(a1 + 24) = v8;
  *(unsigned char *)(a1 + 32) = v14;
  *(unsigned char *)(a1 + 33) = v11;
  *(unsigned char *)(a1 + 34) = v12;
  *(unsigned char *)(a1 + 35) = v15;
  return sub_1C8CEF6AC(v4, v5, v6);
}

double sub_1C8CD1724@<D0>(uint64_t a1@<X8>)
{
  Google_Protobuf_DescriptorProto.options.getter((uint64_t)&v4);
  uint64_t v2 = v6;
  *(void *)a1 = v4;
  double result = *(double *)&v5;
  *(_OWORD *)(a1 + 8) = v5;
  *(void *)(a1 + 24) = v2;
  *(_DWORD *)(a1 + 32) = v7;
  return result;
}

uint64_t sub_1C8CD1788(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  v5[0] = *(void *)a1;
  v5[1] = v1;
  v5[2] = v2;
  v5[3] = v3;
  int v6 = *(_DWORD *)(a1 + 32);
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(v1, v2);
  swift_bridgeObjectRetain();
  return Google_Protobuf_DescriptorProto.options.setter(v5);
}

uint64_t Google_Protobuf_DescriptorProto.options.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  int v6 = *((_DWORD *)a1 + 8);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v7 = swift_retain();
    *(void *)(v1 + 16) = sub_1C8CE52A8(v7);
    swift_release();
  }
  uint64_t v8 = *(void *)(v1 + 16);
  swift_beginAccess();
  uint64_t v9 = *(void *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 88);
  unint64_t v11 = *(void *)(v8 + 96);
  *(void *)(v8 + 80) = v2;
  *(void *)(v8 + 88) = v3;
  *(void *)(v8 + 96) = v4;
  *(void *)(v8 + 104) = v5;
  *(_DWORD *)(v8 + 112) = v6;
  return sub_1C8CEF708(v9, v10, v11);
}

double Google_Protobuf_MessageOptions.init()@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = MEMORY[0x1E4FBC860];
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C8D8AD80;
  *(void *)(a1 + 24) = MEMORY[0x1E4FBC868];
  *(_DWORD *)(a1 + 32) = 33686018;
  return result;
}

void (*Google_Protobuf_DescriptorProto.options.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x78uLL);
  *a1 = v3;
  v3[14] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 88);
  unint64_t v7 = *(void *)(v4 + 96);
  unsigned int v8 = *(_DWORD *)(v4 + 112);
  uint64_t v9 = MEMORY[0x1E4FBC868];
  unint64_t v10 = 0xC000000000000000;
  uint64_t v11 = MEMORY[0x1E4FBC860];
  unsigned int v12 = v8 >> 8;
  unsigned int v13 = HIWORD(v8);
  if (v5)
  {
    uint64_t v11 = *(void *)(v4 + 80);
    uint64_t v14 = *(void *)(v4 + 88);
  }
  else
  {
    uint64_t v14 = 0;
  }
  if (v5)
  {
    unint64_t v10 = *(void *)(v4 + 96);
    uint64_t v9 = *(void *)(v4 + 104);
    char v15 = *(_DWORD *)(v4 + 112);
  }
  else
  {
    char v15 = 2;
  }
  if (v5)
  {
    char v16 = HIBYTE(*(_DWORD *)(v4 + 112));
  }
  else
  {
    LOBYTE(v12) = 2;
    LOBYTE(v13) = 2;
    char v16 = 2;
  }
  *uint64_t v3 = v11;
  v3[1] = v14;
  v3[2] = v10;
  v3[3] = v9;
  *((unsigned char *)v3 + 32) = v15;
  *((unsigned char *)v3 + 33) = v12;
  *((unsigned char *)v3 + 34) = v13;
  *((unsigned char *)v3 + 35) = v16;
  sub_1C8CEF6AC(v5, v6, v7);
  return sub_1C8CD19D0;
}

void sub_1C8CD19D0(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v4 = **a1;
  uint64_t v3 = (*a1)[1];
  unint64_t v6 = (*a1)[2];
  uint64_t v5 = (*a1)[3];
  int v7 = *((_DWORD *)*a1 + 8);
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1C8CA3CF8(v3, v6);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v8 = v2[14];
      type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass();
      swift_allocObject();
      uint64_t v9 = swift_retain();
      *(void *)(v8 + 16) = sub_1C8CE52A8(v9);
      swift_release();
    }
    uint64_t v10 = *(void *)(v2[14] + 16);
    swift_beginAccess();
    uint64_t v11 = *(void *)(v10 + 80);
    uint64_t v12 = *(void *)(v10 + 88);
    unint64_t v13 = *(void *)(v10 + 96);
    *(void *)(v10 + 80) = v4;
    *(void *)(v10 + 88) = v3;
    *(void *)(v10 + 96) = v6;
    *(void *)(v10 + 104) = v5;
    *(_DWORD *)(v10 + 112) = v7;
    sub_1C8CEF708(v11, v12, v13);
    uint64_t v14 = v2[1];
    unint64_t v15 = v2[2];
    swift_bridgeObjectRelease();
    sub_1C8CA3D5C(v14, v15);
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v16 = v2[14];
      type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass();
      swift_allocObject();
      uint64_t v17 = swift_retain();
      *(void *)(v16 + 16) = sub_1C8CE52A8(v17);
      swift_release();
    }
    uint64_t v18 = *(void *)(v2[14] + 16);
    swift_beginAccess();
    uint64_t v19 = *(void *)(v18 + 80);
    uint64_t v20 = *(void *)(v18 + 88);
    unint64_t v21 = *(void *)(v18 + 96);
    *(void *)(v18 + 80) = v4;
    *(void *)(v18 + 88) = v3;
    *(void *)(v18 + 96) = v6;
    *(void *)(v18 + 104) = v5;
    *(_DWORD *)(v18 + 112) = v7;
    sub_1C8CEF708(v19, v20, v21);
  }
  free(v2);
}

BOOL Google_Protobuf_DescriptorProto.hasOptions.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  return *(void *)(v1 + 80) != 0;
}

Swift::Void __swiftcall Google_Protobuf_DescriptorProto.clearOptions()()
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v1 = swift_retain();
    *(void *)(v0 + 16) = sub_1C8CE52A8(v1);
    swift_release();
  }
  uint64_t v2 = *(void *)(v0 + 16);
  swift_beginAccess();
  uint64_t v3 = *(void *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 88);
  unint64_t v5 = *(void *)(v2 + 96);
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_DWORD *)(v2 + 112) = 0;
  sub_1C8CEF708(v3, v4, v5);
}

uint64_t Google_Protobuf_DescriptorProto.reservedRange.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CD1CC0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v4 = swift_retain();
    *(void *)(a2 + 16) = sub_1C8CE52A8(v4);
    swift_release();
  }
  uint64_t v5 = *(void *)(a2 + 16);
  swift_beginAccess();
  *(void *)(v5 + 120) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_DescriptorProto.reservedRange.setter(uint64_t a1)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v3 = swift_retain();
    *(void *)(v1 + 16) = sub_1C8CE52A8(v3);
    swift_release();
  }
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  *(void *)(v4 + 120) = a1;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_DescriptorProto.reservedRange.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(void *)(v4 + 120);
  swift_bridgeObjectRetain();
  return sub_1C8CD1E88;
}

void sub_1C8CD1E88(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 72);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v4 = v2[10];
      type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass();
      swift_allocObject();
      uint64_t v5 = swift_retain();
      *(void *)(v4 + 16) = sub_1C8CE52A8(v5);
      swift_release();
    }
    uint64_t v6 = *(void *)(v2[10] + 16);
    swift_beginAccess();
    *(void *)(v6 + 120) = v3;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v7 = v2[10];
      type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass();
      swift_allocObject();
      uint64_t v8 = swift_retain();
      *(void *)(v7 + 16) = sub_1C8CE52A8(v8);
      swift_release();
    }
    uint64_t v9 = *(void *)(v2[10] + 16);
    swift_beginAccess();
    *(void *)(v9 + 120) = v3;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

uint64_t Google_Protobuf_DescriptorProto.reservedName.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CD2020(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v4 = swift_retain();
    *(void *)(a2 + 16) = sub_1C8CE52A8(v4);
    swift_release();
  }
  uint64_t v5 = *(void *)(a2 + 16);
  swift_beginAccess();
  *(void *)(v5 + 128) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_DescriptorProto.reservedName.setter(uint64_t a1)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v3 = swift_retain();
    *(void *)(v1 + 16) = sub_1C8CE52A8(v3);
    swift_release();
  }
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  *(void *)(v4 + 128) = a1;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_DescriptorProto.reservedName.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(void *)(v4 + 128);
  swift_bridgeObjectRetain();
  return sub_1C8CD21E8;
}

void sub_1C8CD21E8(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 72);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v4 = v2[10];
      type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass();
      swift_allocObject();
      uint64_t v5 = swift_retain();
      *(void *)(v4 + 16) = sub_1C8CE52A8(v5);
      swift_release();
    }
    uint64_t v6 = *(void *)(v2[10] + 16);
    swift_beginAccess();
    *(void *)(v6 + 128) = v3;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v7 = v2[10];
      type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass();
      swift_allocObject();
      uint64_t v8 = swift_retain();
      *(void *)(v7 + 16) = sub_1C8CE52A8(v8);
      swift_release();
    }
    uint64_t v9 = *(void *)(v2[10] + 16);
    swift_beginAccess();
    *(void *)(v9 + 128) = v3;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

uint64_t Google_Protobuf_DescriptorProto.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_1C8CA3CF8(v2, v3);
}

uint64_t (*Google_Protobuf_DescriptorProto.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_DescriptorProto.ExtensionRange.start.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 20)) {
    return 0;
  }
  else {
    return *(unsigned int *)(v1 + 16);
  }
}

uint64_t sub_1C8CD23B8(int *a1, uint64_t a2)
{
  int v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_DescriptorProto.ExtensionRange._StorageClass();
    swift_allocObject();
    uint64_t v4 = swift_retain();
    *(void *)(a2 + 16) = sub_1C8CE7060(v4);
    swift_release();
  }
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v5 + 16) = v3;
  *(unsigned char *)(v5 + 20) = 0;
  return result;
}

uint64_t Google_Protobuf_DescriptorProto.ExtensionRange.start.setter(int a1)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_DescriptorProto.ExtensionRange._StorageClass();
    swift_allocObject();
    uint64_t v3 = swift_retain();
    *(void *)(v1 + 16) = sub_1C8CE7060(v3);
    swift_release();
  }
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v4 + 16) = a1;
  *(unsigned char *)(v4 + 20) = 0;
  return result;
}

void (*Google_Protobuf_DescriptorProto.ExtensionRange.start.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  int v5 = *(_DWORD *)(v4 + 16);
  if (*(unsigned char *)(v4 + 20)) {
    int v5 = 0;
  }
  *((_DWORD *)v3 + 20) = v5;
  return sub_1C8CD2574;
}

void sub_1C8CD2574(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  int v4 = *(_DWORD *)(*(void *)a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = v3[9];
    type metadata accessor for Google_Protobuf_DescriptorProto.ExtensionRange._StorageClass();
    swift_allocObject();
    uint64_t v7 = swift_retain();
    *(void *)(v6 + 16) = sub_1C8CE7060(v7);
    swift_release();
  }
LABEL_4:
  uint64_t v8 = *(void *)(v3[9] + 16);
  swift_beginAccess();
  *(_DWORD *)(v8 + 16) = v4;
  *(unsigned char *)(v8 + 20) = 0;
  free(v3);
}

BOOL Google_Protobuf_DescriptorProto.ExtensionRange.hasStart.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  return (*(unsigned char *)(v1 + 20) & 1) == 0;
}

Swift::Void __swiftcall Google_Protobuf_DescriptorProto.ExtensionRange.clearStart()()
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_DescriptorProto.ExtensionRange._StorageClass();
    swift_allocObject();
    uint64_t v1 = swift_retain();
    *(void *)(v0 + 16) = sub_1C8CE7060(v1);
    swift_release();
  }
  uint64_t v2 = *(void *)(v0 + 16);
  swift_beginAccess();
  *(_DWORD *)(v2 + 16) = 0;
  *(unsigned char *)(v2 + 20) = 1;
}

uint64_t Google_Protobuf_DescriptorProto.ExtensionRange.end.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 28)) {
    return 0;
  }
  else {
    return *(unsigned int *)(v1 + 24);
  }
}

uint64_t sub_1C8CD277C(int *a1, uint64_t a2)
{
  int v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_DescriptorProto.ExtensionRange._StorageClass();
    swift_allocObject();
    uint64_t v4 = swift_retain();
    *(void *)(a2 + 16) = sub_1C8CE7060(v4);
    swift_release();
  }
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v5 + 24) = v3;
  *(unsigned char *)(v5 + 28) = 0;
  return result;
}

uint64_t Google_Protobuf_DescriptorProto.ExtensionRange.end.setter(int a1)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_DescriptorProto.ExtensionRange._StorageClass();
    swift_allocObject();
    uint64_t v3 = swift_retain();
    *(void *)(v1 + 16) = sub_1C8CE7060(v3);
    swift_release();
  }
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v4 + 24) = a1;
  *(unsigned char *)(v4 + 28) = 0;
  return result;
}

void (*Google_Protobuf_DescriptorProto.ExtensionRange.end.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  int v5 = *(_DWORD *)(v4 + 24);
  if (*(unsigned char *)(v4 + 28)) {
    int v5 = 0;
  }
  *((_DWORD *)v3 + 20) = v5;
  return sub_1C8CD2938;
}

void sub_1C8CD2938(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  int v4 = *(_DWORD *)(*(void *)a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = v3[9];
    type metadata accessor for Google_Protobuf_DescriptorProto.ExtensionRange._StorageClass();
    swift_allocObject();
    uint64_t v7 = swift_retain();
    *(void *)(v6 + 16) = sub_1C8CE7060(v7);
    swift_release();
  }
LABEL_4:
  uint64_t v8 = *(void *)(v3[9] + 16);
  swift_beginAccess();
  *(_DWORD *)(v8 + 24) = v4;
  *(unsigned char *)(v8 + 28) = 0;
  free(v3);
}

BOOL Google_Protobuf_DescriptorProto.ExtensionRange.hasEnd.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  return (*(unsigned char *)(v1 + 28) & 1) == 0;
}

Swift::Void __swiftcall Google_Protobuf_DescriptorProto.ExtensionRange.clearEnd()()
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_DescriptorProto.ExtensionRange._StorageClass();
    swift_allocObject();
    uint64_t v1 = swift_retain();
    *(void *)(v0 + 16) = sub_1C8CE7060(v1);
    swift_release();
  }
  uint64_t v2 = *(void *)(v0 + 16);
  swift_beginAccess();
  *(_DWORD *)(v2 + 24) = 0;
  *(unsigned char *)(v2 + 28) = 1;
}

uint64_t Google_Protobuf_DescriptorProto.ExtensionRange.options.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_DescriptorProto.ExtensionRange._StorageClass();
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v1 + 16) = sub_1C8CE7060(v6);
    swift_release();
  }
  uint64_t v7 = *(void **)(v1 + 16);
  swift_beginAccess();
  uint64_t v8 = v7[4];
  uint64_t v9 = v7[5];
  unint64_t v10 = v7[6];
  long long v7[4] = v2;
  v7[5] = v3;
  v7[6] = v4;
  v7[7] = v5;
  return sub_1C8CEF708(v8, v9, v10);
}

void (*Google_Protobuf_DescriptorProto.ExtensionRange.options.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x70uLL);
  *a1 = v3;
  v3[13] = v1;
  uint64_t v4 = *(void **)(v1 + 16);
  swift_beginAccess();
  uint64_t v5 = v4[4];
  uint64_t v6 = v4[5];
  unint64_t v7 = v4[6];
  uint64_t v8 = MEMORY[0x1E4FBC868];
  unint64_t v9 = 0xC000000000000000;
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v10 = v4[4];
    uint64_t v11 = v4[5];
  }
  else
  {
    uint64_t v11 = 0;
  }
  if (v5)
  {
    unint64_t v9 = v4[6];
    uint64_t v8 = v4[7];
  }
  *uint64_t v3 = v10;
  v3[1] = v11;
  v3[2] = v9;
  v3[3] = v8;
  sub_1C8CEF6AC(v5, v6, v7);
  return sub_1C8CD2C60;
}

void sub_1C8CD2C60(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v4 = **a1;
  uint64_t v3 = (*a1)[1];
  unint64_t v6 = (*a1)[2];
  uint64_t v5 = (*a1)[3];
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1C8CA3CF8(v3, v6);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v7 = v2[13];
      type metadata accessor for Google_Protobuf_DescriptorProto.ExtensionRange._StorageClass();
      swift_allocObject();
      uint64_t v8 = swift_retain();
      *(void *)(v7 + 16) = sub_1C8CE7060(v8);
      swift_release();
    }
    unint64_t v9 = *(void **)(v2[13] + 16);
    swift_beginAccess();
    uint64_t v10 = v9[4];
    uint64_t v11 = v9[5];
    unint64_t v12 = v9[6];
    long long v9[4] = v4;
    v9[5] = v3;
    v9[6] = v6;
    v9[7] = v5;
    sub_1C8CEF708(v10, v11, v12);
    uint64_t v13 = v2[1];
    unint64_t v14 = v2[2];
    swift_bridgeObjectRelease();
    sub_1C8CA3D5C(v13, v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v15 = v2[13];
      type metadata accessor for Google_Protobuf_DescriptorProto.ExtensionRange._StorageClass();
      swift_allocObject();
      uint64_t v16 = swift_retain();
      *(void *)(v15 + 16) = sub_1C8CE7060(v16);
      swift_release();
    }
    uint64_t v17 = *(void **)(v2[13] + 16);
    swift_beginAccess();
    uint64_t v18 = v17[4];
    uint64_t v19 = v17[5];
    unint64_t v20 = v17[6];
    v17[4] = v4;
    v17[5] = v3;
    v17[6] = v6;
    v17[7] = v5;
    sub_1C8CEF708(v18, v19, v20);
  }
  free(v2);
}

BOOL Google_Protobuf_DescriptorProto.ExtensionRange.hasOptions.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  return *(void *)(v1 + 32) != 0;
}

Swift::Void __swiftcall Google_Protobuf_DescriptorProto.ExtensionRange.clearOptions()()
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_DescriptorProto.ExtensionRange._StorageClass();
    swift_allocObject();
    uint64_t v1 = swift_retain();
    *(void *)(v0 + 16) = sub_1C8CE7060(v1);
    swift_release();
  }
  uint64_t v2 = *(void **)(v0 + 16);
  swift_beginAccess();
  uint64_t v3 = v2[4];
  uint64_t v4 = v2[5];
  unint64_t v5 = v2[6];
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  sub_1C8CEF708(v3, v4, v5);
}

uint64_t (*Google_Protobuf_DescriptorProto.ExtensionRange.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_DescriptorProto.ExtensionRange.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_1C8CDAB10((void (*)(void))type metadata accessor for Google_Protobuf_DescriptorProto.ExtensionRange._StorageClass, a1);
}

uint64_t Google_Protobuf_DescriptorProto.ReservedRange.start.getter()
{
  if (*(unsigned char *)(v0 + 20)) {
    return 0;
  }
  else {
    return *(unsigned int *)(v0 + 16);
  }
}

uint64_t Google_Protobuf_DescriptorProto.ReservedRange.start.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 16) = result;
  *(unsigned char *)(v1 + 20) = 0;
  return result;
}

uint64_t *(*Google_Protobuf_DescriptorProto.ReservedRange.start.modify(uint64_t a1))(uint64_t *result)
{
  *(void *)a1 = v1;
  int v2 = *(_DWORD *)(v1 + 16);
  if (*(unsigned char *)(v1 + 20)) {
    int v2 = 0;
  }
  *(_DWORD *)(a1 + 8) = v2;
  return sub_1C8CD2F8C;
}

uint64_t *sub_1C8CD2F8C(uint64_t *result)
{
  uint64_t v1 = *result;
  *(_DWORD *)(v1 + 16) = *((_DWORD *)result + 2);
  *(unsigned char *)(v1 + 20) = 0;
  return result;
}

BOOL Google_Protobuf_DescriptorProto.ReservedRange.hasStart.getter()
{
  return (*(unsigned char *)(v0 + 20) & 1) == 0;
}

Swift::Void __swiftcall Google_Protobuf_DescriptorProto.ReservedRange.clearStart()()
{
  *(_DWORD *)(v0 + 16) = 0;
  *(unsigned char *)(v0 + 20) = 1;
}

uint64_t Google_Protobuf_DescriptorProto.ReservedRange.end.getter()
{
  if (*(unsigned char *)(v0 + 28)) {
    return 0;
  }
  else {
    return *(unsigned int *)(v0 + 24);
  }
}

uint64_t Google_Protobuf_DescriptorProto.ReservedRange.end.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 24) = result;
  *(unsigned char *)(v1 + 28) = 0;
  return result;
}

uint64_t *(*Google_Protobuf_DescriptorProto.ReservedRange.end.modify(uint64_t a1))(uint64_t *result)
{
  *(void *)a1 = v1;
  int v2 = *(_DWORD *)(v1 + 24);
  if (*(unsigned char *)(v1 + 28)) {
    int v2 = 0;
  }
  *(_DWORD *)(a1 + 8) = v2;
  return sub_1C8CD3018;
}

uint64_t *sub_1C8CD3018(uint64_t *result)
{
  uint64_t v1 = *result;
  *(_DWORD *)(v1 + 24) = *((_DWORD *)result + 2);
  *(unsigned char *)(v1 + 28) = 0;
  return result;
}

BOOL Google_Protobuf_DescriptorProto.ReservedRange.hasEnd.getter()
{
  return (*(unsigned char *)(v0 + 28) & 1) == 0;
}

Swift::Void __swiftcall Google_Protobuf_DescriptorProto.ReservedRange.clearEnd()()
{
  *(_DWORD *)(v0 + 24) = 0;
  *(unsigned char *)(v0 + 28) = 1;
}

uint64_t Google_Protobuf_DescriptorProto.ReservedRange.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_1C8CA3CF8(v2, v3);
}

uint64_t (*Google_Protobuf_DescriptorProto.ReservedRange.unknownFields.modify())()
{
  return nullsub_1;
}

double Google_Protobuf_DescriptorProto.ReservedRange.init()@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)a1 = xmmword_1C8D8AD80;
  *(_DWORD *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 20) = 1;
  *(_DWORD *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 28) = 1;
  return result;
}

uint64_t Google_Protobuf_DescriptorProto.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_1C8CBACE8(&qword_1EA565A98, &qword_1EA5662B8, a1);
}

uint64_t (*Google_Protobuf_ExtensionRangeOptions.uninterpretedOption.modify())()
{
  return nullsub_1;
}

uint64_t (*Google_Protobuf_ExtensionRangeOptions.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t (*Google_Protobuf_ExtensionRangeOptions._protobuf_extensionFieldValues.modify())()
{
  return nullsub_1;
}

uint64_t (*sub_1C8CD3128())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_FieldDescriptorProto.name.setter(uint64_t a1, uint64_t a2)
{
  return sub_1C8CD7F84(a1, a2, (void (*)(void))type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass, 150, sub_1C8CE83C4);
}

void (*Google_Protobuf_FieldDescriptorProto.name.modify(void *a1))(uint64_t a1, char a2)
{
  unint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  if (*(void *)(v4 + 24))
  {
    uint64_t v5 = *(void *)(v4 + 16);
    unint64_t v6 = *(void *)(v4 + 24);
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C8CD3224;
}

void sub_1C8CD3224(uint64_t a1, char a2)
{
}

Swift::Void __swiftcall Google_Protobuf_FieldDescriptorProto.clearName()()
{
}

uint64_t Google_Protobuf_FieldDescriptorProto.number.setter(int a1)
{
  return sub_1C8CD79BC(a1, (void (*)(void))type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass, 150, sub_1C8CE83C4);
}

void (*Google_Protobuf_FieldDescriptorProto.number.modify(void *a1))(uint64_t a1, char a2)
{
  unint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  int v5 = *(_DWORD *)(v4 + 32);
  if (*(unsigned char *)(v4 + 36)) {
    int v5 = 0;
  }
  *((_DWORD *)v3 + 20) = v5;
  return sub_1C8CD333C;
}

void sub_1C8CD333C(uint64_t a1, char a2)
{
}

BOOL Google_Protobuf_FieldDescriptorProto.hasNumber.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  return (*(unsigned char *)(v1 + 36) & 1) == 0;
}

Swift::Void __swiftcall Google_Protobuf_FieldDescriptorProto.clearNumber()()
{
}

uint64_t Google_Protobuf_FieldDescriptorProto.label.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t result = swift_beginAccess();
  int v5 = *(unsigned __int8 *)(v3 + 37);
  if (v5 == 3) {
    LOBYTE(v5) = 0;
  }
  *a1 = v5;
  return result;
}

uint64_t sub_1C8CD3434(char *a1, uint64_t a2)
{
  char v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v4 = swift_retain();
    *(void *)(a2 + 16) = sub_1C8CE83C4(v4);
    swift_release();
  }
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v5 + 37) = v3;
  return result;
}

uint64_t Google_Protobuf_FieldDescriptorProto.label.setter(char *a1)
{
  char v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v3 = swift_retain();
    *(void *)(v1 + 16) = sub_1C8CE83C4(v3);
    swift_release();
  }
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v4 + 37) = v2;
  return result;
}

void (*Google_Protobuf_FieldDescriptorProto.label.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  int v5 = *(unsigned __int8 *)(v4 + 37);
  if (v5 == 3) {
    LOBYTE(v5) = 0;
  }
  *((unsigned char *)v3 + 80) = v5;
  return sub_1C8CD35E4;
}

void sub_1C8CD35E4(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  char v4 = *(unsigned char *)(*(void *)a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = v3[9];
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v7 = swift_retain();
    *(void *)(v6 + 16) = sub_1C8CE83C4(v7);
    swift_release();
  }
LABEL_4:
  uint64_t v8 = (unsigned char *)(*(void *)(v3[9] + 16) + 37);
  swift_beginAccess();
  *uint64_t v8 = v4;
  free(v3);
}

BOOL Google_Protobuf_FieldDescriptorProto.hasLabel.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  return *(unsigned char *)(v1 + 37) != 3;
}

Swift::Void __swiftcall Google_Protobuf_FieldDescriptorProto.clearLabel()()
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v1 = swift_retain();
    *(void *)(v0 + 16) = sub_1C8CE83C4(v1);
    swift_release();
  }
  uint64_t v2 = *(void *)(v0 + 16);
  swift_beginAccess();
  *(unsigned char *)(v2 + 37) = 3;
}

uint64_t Google_Protobuf_FieldDescriptorProto.type.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t result = swift_beginAccess();
  int v5 = *(unsigned __int8 *)(v3 + 38);
  if (v5 == 18) {
    LOBYTE(v5) = 0;
  }
  *a1 = v5;
  return result;
}

uint64_t sub_1C8CD37EC(char *a1, uint64_t a2)
{
  char v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v4 = swift_retain();
    *(void *)(a2 + 16) = sub_1C8CE83C4(v4);
    swift_release();
  }
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v5 + 38) = v3;
  return result;
}

uint64_t Google_Protobuf_FieldDescriptorProto.type.setter(char *a1)
{
  char v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v3 = swift_retain();
    *(void *)(v1 + 16) = sub_1C8CE83C4(v3);
    swift_release();
  }
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v4 + 38) = v2;
  return result;
}

void (*Google_Protobuf_FieldDescriptorProto.type.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  int v5 = *(unsigned __int8 *)(v4 + 38);
  if (v5 == 18) {
    LOBYTE(v5) = 0;
  }
  *((unsigned char *)v3 + 80) = v5;
  return sub_1C8CD399C;
}

void sub_1C8CD399C(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  char v4 = *(unsigned char *)(*(void *)a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = v3[9];
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v7 = swift_retain();
    *(void *)(v6 + 16) = sub_1C8CE83C4(v7);
    swift_release();
  }
LABEL_4:
  uint64_t v8 = (unsigned char *)(*(void *)(v3[9] + 16) + 38);
  swift_beginAccess();
  *uint64_t v8 = v4;
  free(v3);
}

BOOL Google_Protobuf_FieldDescriptorProto.hasType.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  return *(unsigned char *)(v1 + 38) != 18;
}

Swift::Void __swiftcall Google_Protobuf_FieldDescriptorProto.clearType()()
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v1 = swift_retain();
    *(void *)(v0 + 16) = sub_1C8CE83C4(v1);
    swift_release();
  }
  uint64_t v2 = *(void *)(v0 + 16);
  swift_beginAccess();
  *(unsigned char *)(v2 + 38) = 18;
}

uint64_t Google_Protobuf_FieldDescriptorProto.typeName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  if (*(void *)(v1 + 48)) {
    uint64_t v2 = *(void *)(v1 + 40);
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C8CD3BBC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  swift_beginAccess();
  if (*(void *)(v3 + 48))
  {
    uint64_t v4 = *(void *)(v3 + 40);
    unint64_t v5 = *(void *)(v3 + 48);
  }
  else
  {
    uint64_t v4 = 0;
    unint64_t v5 = 0xE000000000000000;
  }
  *a2 = v4;
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CD3C2C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(a2 + 16) = sub_1C8CE83C4(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(a2 + 16);
  swift_beginAccess();
  *(void *)(v6 + 40) = v4;
  *(void *)(v6 + 48) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FieldDescriptorProto.typeName.setter(uint64_t a1, uint64_t a2)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v2 + 16) = sub_1C8CE83C4(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v2 + 16);
  swift_beginAccess();
  *(void *)(v6 + 40) = a1;
  *(void *)(v6 + 48) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_FieldDescriptorProto.typeName.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  if (*(void *)(v4 + 48))
  {
    uint64_t v5 = *(void *)(v4 + 40);
    unint64_t v6 = *(void *)(v4 + 48);
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C8CD3E30;
}

void sub_1C8CD3E30(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 72);
  uint64_t v4 = *(void *)(*(void *)a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = v2[11];
      type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
      swift_allocObject();
      uint64_t v6 = swift_retain();
      *(void *)(v5 + 16) = sub_1C8CE83C4(v6);
      swift_release();
    }
    uint64_t v7 = *(void *)(v2[11] + 16);
    swift_beginAccess();
    *(void *)(v7 + 40) = v3;
    *(void *)(v7 + 48) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v8 = v2[11];
      type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
      swift_allocObject();
      uint64_t v9 = swift_retain();
      *(void *)(v8 + 16) = sub_1C8CE83C4(v9);
      swift_release();
    }
    uint64_t v10 = *(void *)(v2[11] + 16);
    swift_beginAccess();
    *(void *)(v10 + 40) = v3;
    *(void *)(v10 + 48) = v4;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

BOOL Google_Protobuf_FieldDescriptorProto.hasTypeName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  return *(void *)(v1 + 48) != 0;
}

Swift::Void __swiftcall Google_Protobuf_FieldDescriptorProto.clearTypeName()()
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v1 = swift_retain();
    *(void *)(v0 + 16) = sub_1C8CE83C4(v1);
    swift_release();
  }
  uint64_t v2 = *(void *)(v0 + 16);
  swift_beginAccess();
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = 0;
  swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FieldDescriptorProto.extendee.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  if (*(void *)(v1 + 64)) {
    uint64_t v2 = *(void *)(v1 + 56);
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C8CD40D8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  swift_beginAccess();
  if (*(void *)(v3 + 64))
  {
    uint64_t v4 = *(void *)(v3 + 56);
    unint64_t v5 = *(void *)(v3 + 64);
  }
  else
  {
    uint64_t v4 = 0;
    unint64_t v5 = 0xE000000000000000;
  }
  *a2 = v4;
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CD4148(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(a2 + 16) = sub_1C8CE83C4(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(a2 + 16);
  swift_beginAccess();
  *(void *)(v6 + 56) = v4;
  *(void *)(v6 + 64) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FieldDescriptorProto.extendee.setter(uint64_t a1, uint64_t a2)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v2 + 16) = sub_1C8CE83C4(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v2 + 16);
  swift_beginAccess();
  *(void *)(v6 + 56) = a1;
  *(void *)(v6 + 64) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_FieldDescriptorProto.extendee.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  if (*(void *)(v4 + 64))
  {
    uint64_t v5 = *(void *)(v4 + 56);
    unint64_t v6 = *(void *)(v4 + 64);
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C8CD434C;
}

void sub_1C8CD434C(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 72);
  uint64_t v4 = *(void *)(*(void *)a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = v2[11];
      type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
      swift_allocObject();
      uint64_t v6 = swift_retain();
      *(void *)(v5 + 16) = sub_1C8CE83C4(v6);
      swift_release();
    }
    uint64_t v7 = *(void *)(v2[11] + 16);
    swift_beginAccess();
    *(void *)(v7 + 56) = v3;
    *(void *)(v7 + 64) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v8 = v2[11];
      type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
      swift_allocObject();
      uint64_t v9 = swift_retain();
      *(void *)(v8 + 16) = sub_1C8CE83C4(v9);
      swift_release();
    }
    uint64_t v10 = *(void *)(v2[11] + 16);
    swift_beginAccess();
    *(void *)(v10 + 56) = v3;
    *(void *)(v10 + 64) = v4;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

BOOL Google_Protobuf_FieldDescriptorProto.hasExtendee.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  return *(void *)(v1 + 64) != 0;
}

Swift::Void __swiftcall Google_Protobuf_FieldDescriptorProto.clearExtendee()()
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v1 = swift_retain();
    *(void *)(v0 + 16) = sub_1C8CE83C4(v1);
    swift_release();
  }
  uint64_t v2 = *(void *)(v0 + 16);
  swift_beginAccess();
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = 0;
  swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FieldDescriptorProto.defaultValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  if (*(void *)(v1 + 80)) {
    uint64_t v2 = *(void *)(v1 + 72);
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C8CD45F4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  swift_beginAccess();
  if (*(void *)(v3 + 80))
  {
    uint64_t v4 = *(void *)(v3 + 72);
    unint64_t v5 = *(void *)(v3 + 80);
  }
  else
  {
    uint64_t v4 = 0;
    unint64_t v5 = 0xE000000000000000;
  }
  *a2 = v4;
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CD4664(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(a2 + 16) = sub_1C8CE83C4(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(a2 + 16);
  swift_beginAccess();
  *(void *)(v6 + 72) = v4;
  *(void *)(v6 + 80) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FieldDescriptorProto.defaultValue.setter(uint64_t a1, uint64_t a2)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v2 + 16) = sub_1C8CE83C4(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v2 + 16);
  swift_beginAccess();
  *(void *)(v6 + 72) = a1;
  *(void *)(v6 + 80) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_FieldDescriptorProto.defaultValue.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  if (*(void *)(v4 + 80))
  {
    uint64_t v5 = *(void *)(v4 + 72);
    unint64_t v6 = *(void *)(v4 + 80);
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C8CD4868;
}

void sub_1C8CD4868(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 72);
  uint64_t v4 = *(void *)(*(void *)a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = v2[11];
      type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
      swift_allocObject();
      uint64_t v6 = swift_retain();
      *(void *)(v5 + 16) = sub_1C8CE83C4(v6);
      swift_release();
    }
    uint64_t v7 = *(void *)(v2[11] + 16);
    swift_beginAccess();
    *(void *)(v7 + 72) = v3;
    *(void *)(v7 + 80) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v8 = v2[11];
      type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
      swift_allocObject();
      uint64_t v9 = swift_retain();
      *(void *)(v8 + 16) = sub_1C8CE83C4(v9);
      swift_release();
    }
    uint64_t v10 = *(void *)(v2[11] + 16);
    swift_beginAccess();
    *(void *)(v10 + 72) = v3;
    *(void *)(v10 + 80) = v4;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

BOOL Google_Protobuf_FieldDescriptorProto.hasDefaultValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  return *(void *)(v1 + 80) != 0;
}

Swift::Void __swiftcall Google_Protobuf_FieldDescriptorProto.clearDefaultValue()()
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v1 = swift_retain();
    *(void *)(v0 + 16) = sub_1C8CE83C4(v1);
    swift_release();
  }
  uint64_t v2 = *(void *)(v0 + 16);
  swift_beginAccess();
  *(void *)(v2 + 72) = 0;
  *(void *)(v2 + 80) = 0;
  swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FieldDescriptorProto.oneofIndex.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 92)) {
    return 0;
  }
  else {
    return *(unsigned int *)(v1 + 88);
  }
}

uint64_t sub_1C8CD4AF4(int *a1, uint64_t a2)
{
  int v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v4 = swift_retain();
    *(void *)(a2 + 16) = sub_1C8CE83C4(v4);
    swift_release();
  }
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v5 + 88) = v3;
  *(unsigned char *)(v5 + 92) = 0;
  return result;
}

uint64_t Google_Protobuf_FieldDescriptorProto.oneofIndex.setter(int a1)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v3 = swift_retain();
    *(void *)(v1 + 16) = sub_1C8CE83C4(v3);
    swift_release();
  }
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v4 + 88) = a1;
  *(unsigned char *)(v4 + 92) = 0;
  return result;
}

void (*Google_Protobuf_FieldDescriptorProto.oneofIndex.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  int v5 = *(_DWORD *)(v4 + 88);
  if (*(unsigned char *)(v4 + 92)) {
    int v5 = 0;
  }
  *((_DWORD *)v3 + 20) = v5;
  return sub_1C8CD4CB0;
}

void sub_1C8CD4CB0(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  int v4 = *(_DWORD *)(*(void *)a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = v3[9];
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v7 = swift_retain();
    *(void *)(v6 + 16) = sub_1C8CE83C4(v7);
    swift_release();
  }
LABEL_4:
  uint64_t v8 = *(void *)(v3[9] + 16);
  swift_beginAccess();
  *(_DWORD *)(v8 + 88) = v4;
  *(unsigned char *)(v8 + 92) = 0;
  free(v3);
}

BOOL Google_Protobuf_FieldDescriptorProto.hasOneofIndex.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  return (*(unsigned char *)(v1 + 92) & 1) == 0;
}

Swift::Void __swiftcall Google_Protobuf_FieldDescriptorProto.clearOneofIndex()()
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v1 = swift_retain();
    *(void *)(v0 + 16) = sub_1C8CE83C4(v1);
    swift_release();
  }
  uint64_t v2 = *(void *)(v0 + 16);
  swift_beginAccess();
  *(_DWORD *)(v2 + 88) = 0;
  *(unsigned char *)(v2 + 92) = 1;
}

uint64_t Google_Protobuf_FieldDescriptorProto.jsonName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  if (*(void *)(v1 + 104)) {
    uint64_t v2 = *(void *)(v1 + 96);
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C8CD4ED4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  swift_beginAccess();
  if (*(void *)(v3 + 104))
  {
    uint64_t v4 = *(void *)(v3 + 96);
    unint64_t v5 = *(void *)(v3 + 104);
  }
  else
  {
    uint64_t v4 = 0;
    unint64_t v5 = 0xE000000000000000;
  }
  *a2 = v4;
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CD4F44(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(a2 + 16) = sub_1C8CE83C4(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(a2 + 16);
  swift_beginAccess();
  *(void *)(v6 + 96) = v4;
  *(void *)(v6 + 104) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FieldDescriptorProto.jsonName.setter(uint64_t a1, uint64_t a2)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v2 + 16) = sub_1C8CE83C4(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v2 + 16);
  swift_beginAccess();
  *(void *)(v6 + 96) = a1;
  *(void *)(v6 + 104) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_FieldDescriptorProto.jsonName.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  if (*(void *)(v4 + 104))
  {
    uint64_t v5 = *(void *)(v4 + 96);
    unint64_t v6 = *(void *)(v4 + 104);
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C8CD5148;
}

void sub_1C8CD5148(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 72);
  uint64_t v4 = *(void *)(*(void *)a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = v2[11];
      type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
      swift_allocObject();
      uint64_t v6 = swift_retain();
      *(void *)(v5 + 16) = sub_1C8CE83C4(v6);
      swift_release();
    }
    uint64_t v7 = *(void *)(v2[11] + 16);
    swift_beginAccess();
    *(void *)(v7 + 96) = v3;
    *(void *)(v7 + 104) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v8 = v2[11];
      type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
      swift_allocObject();
      uint64_t v9 = swift_retain();
      *(void *)(v8 + 16) = sub_1C8CE83C4(v9);
      swift_release();
    }
    uint64_t v10 = *(void *)(v2[11] + 16);
    swift_beginAccess();
    *(void *)(v10 + 96) = v3;
    *(void *)(v10 + 104) = v4;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

BOOL Google_Protobuf_FieldDescriptorProto.hasJsonName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  return *(void *)(v1 + 104) != 0;
}

Swift::Void __swiftcall Google_Protobuf_FieldDescriptorProto.clearJsonName()()
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v1 = swift_retain();
    *(void *)(v0 + 16) = sub_1C8CE83C4(v1);
    swift_release();
  }
  uint64_t v2 = *(void *)(v0 + 16);
  swift_beginAccess();
  *(void *)(v2 + 96) = 0;
  *(void *)(v2 + 104) = 0;
  swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FieldDescriptorProto.options.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v3 + 112);
  uint64_t v6 = *(void *)(v3 + 120);
  unint64_t v7 = *(void *)(v3 + 128);
  if (v5)
  {
    v8.i64[0] = 0xFFFFFFFFFFFFLL;
    v8.i64[1] = 0xFFFFFFFFFFFFLL;
    uint64x2_t v9 = (uint64x2_t)vandq_s8((int8x16_t)vdupq_n_s64(*(unsigned int *)(v3 + 144) | ((unint64_t)*(unsigned __int16 *)(v3 + 148) << 32)), v8);
    char v10 = HIBYTE(*(_WORD *)(v3 + 148));
    int16x8_t v4 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v9, (uint64x2_t)xmmword_1C8D8BED0), (int32x4_t)vshlq_u64(v9, (uint64x2_t)xmmword_1C8D8BEC0));
    uint64_t v11 = *(void *)(v3 + 112);
    *(int16x4_t *)v4.i8 = vmovn_s32((int32x4_t)v4);
    uint64_t v12 = *(void *)(v3 + 120);
    unint64_t v13 = *(void *)(v3 + 128);
    uint64_t v14 = *(void *)(v3 + 136);
    char v15 = *(_DWORD *)(v3 + 144);
  }
  else
  {
    uint64_t v12 = 0;
    v4.i64[0] = 0x2000200030002;
    char v10 = 2;
    char v15 = 3;
    uint64_t v14 = MEMORY[0x1E4FBC868];
    unint64_t v13 = 0xC000000000000000;
    uint64_t v11 = MEMORY[0x1E4FBC860];
  }
  *(void *)a1 = v11;
  *(void *)(a1 + 8) = v12;
  *(void *)(a1 + 16) = v13;
  *(void *)(a1 + 24) = v14;
  *(unsigned char *)(a1 + 32) = v15;
  *(_DWORD *)(a1 + 33) = vmovn_s16(v4).u32[0];
  *(unsigned char *)(a1 + 37) = v10;
  return sub_1C8CEF6AC(v5, v6, v7);
}

double sub_1C8CD546C@<D0>(uint64_t a1@<X8>)
{
  Google_Protobuf_FieldDescriptorProto.options.getter((uint64_t)&v5);
  uint64_t v2 = v7;
  __int16 v3 = v9;
  *(void *)a1 = v5;
  double result = *(double *)&v6;
  *(_OWORD *)(a1 + 8) = v6;
  *(void *)(a1 + 24) = v2;
  *(_DWORD *)(a1 + 32) = v8;
  *(_WORD *)(a1 + 36) = v3;
  return result;
}

uint64_t sub_1C8CD54D8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  __int16 v4 = *(_WORD *)(a1 + 36);
  v6[0] = *(void *)a1;
  v6[1] = v1;
  void v6[2] = v2;
  v6[3] = v3;
  int v7 = *(_DWORD *)(a1 + 32);
  __int16 v8 = v4;
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(v1, v2);
  swift_bridgeObjectRetain();
  return Google_Protobuf_FieldDescriptorProto.options.setter(v6);
}

uint64_t Google_Protobuf_FieldDescriptorProto.options.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  int v6 = *((_DWORD *)a1 + 8);
  uint64_t v7 = *((unsigned __int8 *)a1 + 36);
  uint64_t v8 = *((unsigned __int8 *)a1 + 37);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v9 = swift_retain();
    *(void *)(v1 + 16) = sub_1C8CE83C4(v9);
    swift_release();
  }
  uint64_t v10 = *(void *)(v1 + 16);
  swift_beginAccess();
  uint64_t v11 = *(void *)(v10 + 112);
  uint64_t v12 = *(void *)(v10 + 120);
  unint64_t v13 = *(void *)(v10 + 128);
  *(void *)(v10 + 112) = v2;
  *(void *)(v10 + 120) = v3;
  *(void *)(v10 + 128) = v4;
  *(void *)(v10 + 136) = v5;
  *(_DWORD *)(v10 + 144) = v6;
  *(_WORD *)(v10 + 148) = ((v8 << 40) | (unint64_t)(v7 << 32)) >> 32;
  return sub_1C8CEF708(v11, v12, v13);
}

double Google_Protobuf_FieldOptions.init()@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = MEMORY[0x1E4FBC860];
  *(_OWORD *)(a1 + 8) = xmmword_1C8D8AD80;
  *(void *)(a1 + 24) = MEMORY[0x1E4FBC868];
  *(void *)&double result = 33751555;
  *(_DWORD *)(a1 + 32) = 33751555;
  *(_WORD *)(a1 + 36) = 514;
  return result;
}

void (*Google_Protobuf_FieldDescriptorProto.options.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = (char *)malloc(0x78uLL);
  *a1 = v3;
  *((void *)v3 + 14) = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v4 + 112);
  uint64_t v7 = *(void *)(v4 + 120);
  unint64_t v8 = *(void *)(v4 + 128);
  if (v6)
  {
    v9.i64[0] = 0xFFFFFFFFFFFFLL;
    v9.i64[1] = 0xFFFFFFFFFFFFLL;
    uint64x2_t v10 = (uint64x2_t)vandq_s8((int8x16_t)vdupq_n_s64(*(unsigned int *)(v4 + 144) | ((unint64_t)*(unsigned __int16 *)(v4 + 148) << 32)), v9);
    char v11 = HIBYTE(*(_WORD *)(v4 + 148));
    int16x8_t v5 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v10, (uint64x2_t)xmmword_1C8D8BED0), (int32x4_t)vshlq_u64(v10, (uint64x2_t)xmmword_1C8D8BEC0));
    uint64_t v12 = *(void *)(v4 + 112);
    *(int16x4_t *)v5.i8 = vmovn_s32((int32x4_t)v5);
    uint64_t v13 = *(void *)(v4 + 120);
    unint64_t v14 = *(void *)(v4 + 128);
    uint64_t v15 = *(void *)(v4 + 136);
    char v16 = *(_DWORD *)(v4 + 144);
  }
  else
  {
    uint64_t v13 = 0;
    v5.i64[0] = 0x2000200030002;
    char v11 = 2;
    char v16 = 3;
    uint64_t v15 = MEMORY[0x1E4FBC868];
    unint64_t v14 = 0xC000000000000000;
    uint64_t v12 = MEMORY[0x1E4FBC860];
  }
  *(void *)uint64_t v3 = v12;
  *((void *)v3 + 1) = v13;
  *((void *)v3 + 2) = v14;
  *((void *)v3 + 3) = v15;
  v3[32] = v16;
  *(_DWORD *)(v3 + 33) = vmovn_s16(v5).u32[0];
  v3[37] = v11;
  sub_1C8CEF6AC(v6, v7, v8);
  return sub_1C8CD5798;
}

void sub_1C8CD5798(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v4 = **a1;
  uint64_t v3 = (*a1)[1];
  unint64_t v6 = (*a1)[2];
  uint64_t v5 = (*a1)[3];
  int v7 = *((_DWORD *)*a1 + 8);
  uint64_t v8 = *((unsigned __int8 *)*a1 + 36);
  uint64_t v9 = *((unsigned __int8 *)*a1 + 37);
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1C8CA3CF8(v3, v6);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v24 = v8;
      uint64_t v10 = v2[14];
      type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
      swift_allocObject();
      uint64_t v11 = swift_retain();
      *(void *)(v10 + 16) = sub_1C8CE83C4(v11);
      uint64_t v8 = v24;
      swift_release();
    }
    uint64_t v12 = *(void *)(v2[14] + 16);
    swift_beginAccess();
    uint64_t v13 = *(void *)(v12 + 112);
    uint64_t v14 = *(void *)(v12 + 120);
    unint64_t v15 = *(void *)(v12 + 128);
    *(void *)(v12 + 112) = v4;
    *(void *)(v12 + 120) = v3;
    *(void *)(v12 + 128) = v6;
    *(void *)(v12 + 136) = v5;
    *(_DWORD *)(v12 + 144) = v7;
    *(_WORD *)(v12 + 148) = ((v9 << 40) | (unint64_t)(v8 << 32)) >> 32;
    sub_1C8CEF708(v13, v14, v15);
    uint64_t v16 = v2[1];
    unint64_t v17 = v2[2];
    swift_bridgeObjectRelease();
    sub_1C8CA3D5C(v16, v17);
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v25 = v8;
      uint64_t v18 = v2[14];
      type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
      swift_allocObject();
      uint64_t v19 = swift_retain();
      *(void *)(v18 + 16) = sub_1C8CE83C4(v19);
      uint64_t v8 = v25;
      swift_release();
    }
    uint64_t v20 = *(void *)(v2[14] + 16);
    swift_beginAccess();
    uint64_t v21 = *(void *)(v20 + 112);
    uint64_t v22 = *(void *)(v20 + 120);
    unint64_t v23 = *(void *)(v20 + 128);
    *(void *)(v20 + 112) = v4;
    *(void *)(v20 + 120) = v3;
    *(void *)(v20 + 128) = v6;
    *(void *)(v20 + 136) = v5;
    *(_DWORD *)(v20 + 144) = v7;
    *(_WORD *)(v20 + 148) = ((v9 << 40) | (unint64_t)(v8 << 32)) >> 32;
    sub_1C8CEF708(v21, v22, v23);
  }
  free(v2);
}

BOOL Google_Protobuf_FieldDescriptorProto.hasOptions.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  return *(void *)(v1 + 112) != 0;
}

Swift::Void __swiftcall Google_Protobuf_FieldDescriptorProto.clearOptions()()
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v1 = swift_retain();
    *(void *)(v0 + 16) = sub_1C8CE83C4(v1);
    swift_release();
  }
  uint64_t v2 = *(void **)(v0 + 16);
  swift_beginAccess();
  uint64_t v3 = v2[14];
  uint64_t v4 = v2[15];
  unint64_t v5 = v2[16];
  *((_OWORD *)v2 + 7) = 0u;
  *((_OWORD *)v2 + 8) = 0u;
  *(void *)((char *)v2 + 142) = 0;
  sub_1C8CEF708(v3, v4, v5);
}

uint64_t (*Google_Protobuf_FieldDescriptorProto.unknownFields.modify())()
{
  return nullsub_1;
}

SiriOntologyProtobuf::Google_Protobuf_FieldDescriptorProto::TypeEnum __swiftcall Google_Protobuf_FieldDescriptorProto.TypeEnum.init()()
{
  *uint64_t v0 = 0;
  return result;
}

SiriOntologyProtobuf::Google_Protobuf_FieldDescriptorProto::TypeEnum_optional __swiftcall Google_Protobuf_FieldDescriptorProto.TypeEnum.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = rawValue - 1;
  if ((unint64_t)(rawValue - 1) >= 0x12) {
    char v2 = 18;
  }
  *uint64_t v1 = v2;
  return (SiriOntologyProtobuf::Google_Protobuf_FieldDescriptorProto::TypeEnum_optional)rawValue;
}

void sub_1C8CD5B68(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

SiriOntologyProtobuf::Google_Protobuf_FieldDescriptorProto::TypeEnum_optional sub_1C8CD5B74(Swift::Int *a1)
{
  return Google_Protobuf_FieldDescriptorProto.TypeEnum.init(rawValue:)(*a1);
}

SiriOntologyProtobuf::Google_Protobuf_FieldDescriptorProto::Label __swiftcall Google_Protobuf_FieldDescriptorProto.Label.init()()
{
  *uint64_t v0 = 0;
  return result;
}

uint64_t Google_Protobuf_FieldDescriptorProto.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_1C8CBACE8(&qword_1EA565AD0, &qword_1EA566360, a1);
}

void *static Google_Protobuf_FieldDescriptorProto.TypeEnum.allCases.getter()
{
  return &unk_1F2350350;
}

void sub_1C8CD5BB8(void *a1@<X8>)
{
  *a1 = &unk_1F2350350;
}

void *static Google_Protobuf_FieldDescriptorProto.Label.allCases.getter()
{
  return &unk_1F2350388;
}

void sub_1C8CD5BD4(void *a1@<X8>)
{
  *a1 = &unk_1F23503B0;
}

uint64_t Google_Protobuf_OneofDescriptorProto.name.setter(uint64_t a1, uint64_t a2)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    unint64_t v5 = *(void **)(v2 + 16);
    type metadata accessor for Google_Protobuf_OneofDescriptorProto._StorageClass();
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 48) = 0u;
    *(_OWORD *)(v6 + 32) = 0u;
    *(_OWORD *)(v6 + 16) = 0u;
    swift_beginAccess();
    uint64_t v8 = v5[2];
    uint64_t v7 = v5[3];
    swift_beginAccess();
    *(void *)(v6 + 16) = v8;
    *(void *)(v6 + 24) = v7;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v9 = v5[4];
    uint64_t v10 = v5[5];
    unint64_t v11 = v5[6];
    uint64_t v12 = v5[7];
    sub_1C8CEF6AC(v9, v10, v11);
    swift_release();
    swift_beginAccess();
    uint64_t v13 = *(void *)(v6 + 32);
    uint64_t v14 = *(void *)(v6 + 40);
    unint64_t v15 = *(void *)(v6 + 48);
    *(void *)(v6 + 32) = v9;
    *(void *)(v6 + 40) = v10;
    *(void *)(v6 + 48) = v11;
    *(void *)(v6 + 56) = v12;
    sub_1C8CEF708(v13, v14, v15);
    *(void *)(v2 + 16) = v6;
    swift_release();
  }
  uint64_t v16 = *(void *)(v2 + 16);
  swift_beginAccess();
  *(void *)(v16 + 16) = a1;
  *(void *)(v16 + 24) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_OneofDescriptorProto.name.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  if (*(void *)(v4 + 24))
  {
    uint64_t v5 = *(void *)(v4 + 16);
    unint64_t v6 = *(void *)(v4 + 24);
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  v3[3] = v5;
  v3[4] = v6;
  swift_bridgeObjectRetain();
  return sub_1C8CD5E04;
}

void sub_1C8CD5E04(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 24);
  uint64_t v4 = *(void *)(*(void *)a1 + 32);
  if (a2)
  {
    swift_bridgeObjectRetain();
    Google_Protobuf_OneofDescriptorProto.name.setter(v3, v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    Google_Protobuf_OneofDescriptorProto.name.setter(*(void *)(*(void *)a1 + 24), v4);
  }
  free(v2);
}

Swift::Void __swiftcall Google_Protobuf_OneofDescriptorProto.clearName()()
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v1 = *(void **)(v0 + 16);
    type metadata accessor for Google_Protobuf_OneofDescriptorProto._StorageClass();
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 48) = 0u;
    *(_OWORD *)(v2 + 32) = 0u;
    *(_OWORD *)(v2 + 16) = 0u;
    swift_beginAccess();
    uint64_t v4 = v1[2];
    uint64_t v3 = v1[3];
    swift_beginAccess();
    *(void *)(v2 + 16) = v4;
    *(void *)(v2 + 24) = v3;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v5 = v1[4];
    uint64_t v6 = v1[5];
    unint64_t v7 = v1[6];
    uint64_t v8 = v1[7];
    sub_1C8CEF6AC(v5, v6, v7);
    swift_release();
    swift_beginAccess();
    uint64_t v9 = *(void *)(v2 + 32);
    uint64_t v10 = *(void *)(v2 + 40);
    unint64_t v11 = *(void *)(v2 + 48);
    *(void *)(v2 + 32) = v5;
    *(void *)(v2 + 40) = v6;
    *(void *)(v2 + 48) = v7;
    *(void *)(v2 + 56) = v8;
    sub_1C8CEF708(v9, v10, v11);
    *(void *)(v0 + 16) = v2;
    swift_release();
  }
  uint64_t v12 = *(void *)(v0 + 16);
  swift_beginAccess();
  *(void *)(v12 + 16) = 0;
  *(void *)(v12 + 24) = 0;
  swift_bridgeObjectRelease();
}

uint64_t _s20SiriOntologyProtobuf07Google_C16_DescriptorProtoV14ExtensionRangeV7optionsAA0d1_c1_gH7OptionsVvg_0@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + 16);
  swift_beginAccess();
  uint64_t v4 = v3[4];
  uint64_t v5 = v3[5];
  unint64_t v6 = v3[6];
  uint64_t v7 = MEMORY[0x1E4FBC868];
  unint64_t v8 = 0xC000000000000000;
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v9 = v3[4];
    uint64_t v10 = v3[5];
  }
  else
  {
    uint64_t v10 = 0;
  }
  if (v4)
  {
    unint64_t v8 = v3[6];
    uint64_t v7 = v3[7];
  }
  *a1 = v9;
  a1[1] = v10;
  a1[2] = v8;
  a1[3] = v7;
  return sub_1C8CEF6AC(v4, v5, v6);
}

uint64_t sub_1C8CD6060@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void **)(a1 + 16);
  swift_beginAccess();
  uint64_t v4 = v3[4];
  uint64_t v5 = v3[5];
  unint64_t v6 = v3[6];
  uint64_t v7 = MEMORY[0x1E4FBC860];
  unint64_t v8 = 0xC000000000000000;
  uint64_t v9 = MEMORY[0x1E4FBC868];
  if (v4)
  {
    uint64_t v9 = v3[7];
    uint64_t v10 = v3[5];
  }
  else
  {
    uint64_t v10 = 0;
  }
  if (v4)
  {
    unint64_t v8 = v3[6];
    uint64_t v7 = v3[4];
  }
  *a2 = v7;
  a2[1] = v10;
  a2[2] = v8;
  a2[3] = v9;
  return sub_1C8CEF6AC(v4, v5, v6);
}

uint64_t sub_1C8CD60DC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void *))
{
  uint64_t v6 = a1[1];
  unint64_t v7 = a1[2];
  uint64_t v8 = a1[3];
  v10[0] = *a1;
  v10[1] = v6;
  v10[2] = v7;
  v10[3] = v8;
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(v6, v7);
  swift_bridgeObjectRetain();
  return a5(v10);
}

uint64_t Google_Protobuf_OneofDescriptorProto.options.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v22 = v4;
    uint64_t v6 = *(void **)(v1 + 16);
    type metadata accessor for Google_Protobuf_OneofDescriptorProto._StorageClass();
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 48) = 0u;
    *(_OWORD *)(v7 + 32) = 0u;
    *(_OWORD *)(v7 + 16) = 0u;
    swift_beginAccess();
    uint64_t v9 = v6[2];
    uint64_t v8 = v6[3];
    swift_beginAccess();
    *(void *)(v7 + 16) = v9;
    *(void *)(v7 + 24) = v8;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v10 = v6[4];
    uint64_t v11 = v6[5];
    unint64_t v12 = v6[6];
    uint64_t v13 = v6[7];
    sub_1C8CEF6AC(v10, v11, v12);
    uint64_t v4 = v22;
    swift_release();
    swift_beginAccess();
    uint64_t v14 = *(void *)(v7 + 32);
    uint64_t v15 = *(void *)(v7 + 40);
    unint64_t v16 = *(void *)(v7 + 48);
    *(void *)(v7 + 32) = v10;
    *(void *)(v7 + 40) = v11;
    *(void *)(v7 + 48) = v12;
    *(void *)(v7 + 56) = v13;
    sub_1C8CEF708(v14, v15, v16);
    *(void *)(v1 + 16) = v7;
    swift_release();
  }
  unint64_t v17 = *(void **)(v1 + 16);
  swift_beginAccess();
  uint64_t v18 = v17[4];
  uint64_t v19 = v17[5];
  unint64_t v20 = v17[6];
  v17[4] = v2;
  v17[5] = v3;
  v17[6] = v4;
  v17[7] = v5;
  return sub_1C8CEF708(v18, v19, v20);
}

double Google_Protobuf_OneofOptions.init()@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = MEMORY[0x1E4FBC860];
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C8D8AD80;
  *(void *)(a1 + 24) = MEMORY[0x1E4FBC868];
  return result;
}

void (*Google_Protobuf_OneofDescriptorProto.options.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[7] = v1;
  uint64_t v4 = *(void **)(v1 + 16);
  swift_beginAccess();
  uint64_t v5 = v4[4];
  uint64_t v6 = v4[5];
  unint64_t v7 = v4[6];
  uint64_t v8 = MEMORY[0x1E4FBC868];
  unint64_t v9 = 0xC000000000000000;
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v10 = v4[4];
    uint64_t v11 = v4[5];
  }
  else
  {
    uint64_t v11 = 0;
  }
  if (v5)
  {
    unint64_t v9 = v4[6];
    uint64_t v8 = v4[7];
  }
  *uint64_t v3 = v10;
  v3[1] = v11;
  v3[2] = v9;
  v3[3] = v8;
  sub_1C8CEF6AC(v5, v6, v7);
  return sub_1C8CD63B0;
}

void sub_1C8CD63B0(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (*a1)[1];
  unint64_t v5 = (*a1)[2];
  uint64_t v4 = (*a1)[3];
  v8[0] = **a1;
  v8[1] = v3;
  _OWORD v8[2] = v5;
  v8[3] = v4;
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1C8CA3CF8(v3, v5);
    swift_bridgeObjectRetain();
    Google_Protobuf_OneofDescriptorProto.options.setter(v8);
    uint64_t v6 = v2[1];
    unint64_t v7 = v2[2];
    swift_bridgeObjectRelease();
    sub_1C8CA3D5C(v6, v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    Google_Protobuf_OneofDescriptorProto.options.setter(v8);
  }
  free(v2);
}

Swift::Void __swiftcall Google_Protobuf_OneofDescriptorProto.clearOptions()()
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v1 = *(void **)(v0 + 16);
    type metadata accessor for Google_Protobuf_OneofDescriptorProto._StorageClass();
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 48) = 0u;
    *(_OWORD *)(v2 + 32) = 0u;
    *(_OWORD *)(v2 + 16) = 0u;
    swift_beginAccess();
    uint64_t v4 = v1[2];
    uint64_t v3 = v1[3];
    swift_beginAccess();
    *(void *)(v2 + 16) = v4;
    *(void *)(v2 + 24) = v3;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v5 = v1[4];
    uint64_t v6 = v1[5];
    unint64_t v7 = v1[6];
    uint64_t v8 = v1[7];
    sub_1C8CEF6AC(v5, v6, v7);
    swift_release();
    swift_beginAccess();
    uint64_t v9 = *(void *)(v2 + 32);
    uint64_t v10 = *(void *)(v2 + 40);
    unint64_t v11 = *(void *)(v2 + 48);
    *(void *)(v2 + 32) = v5;
    *(void *)(v2 + 40) = v6;
    *(void *)(v2 + 48) = v7;
    *(void *)(v2 + 56) = v8;
    sub_1C8CEF708(v9, v10, v11);
    *(void *)(v0 + 16) = v2;
    swift_release();
  }
  unint64_t v12 = *(void **)(v0 + 16);
  swift_beginAccess();
  uint64_t v13 = v12[4];
  uint64_t v14 = v12[5];
  unint64_t v15 = v12[6];
  *((_OWORD *)v12 + 2) = 0u;
  *((_OWORD *)v12 + 3) = 0u;
  sub_1C8CEF708(v13, v14, v15);
}

uint64_t (*Google_Protobuf_OneofDescriptorProto.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_OneofDescriptorProto.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_1C8CDAB10((void (*)(void))type metadata accessor for Google_Protobuf_OneofDescriptorProto._StorageClass, a1);
}

uint64_t Google_Protobuf_EnumDescriptorProto.name.setter(uint64_t a1, uint64_t a2)
{
  return sub_1C8CD7F84(a1, a2, (void (*)(void))type metadata accessor for Google_Protobuf_EnumDescriptorProto._StorageClass, 96, sub_1C8CEAC28);
}

void (*Google_Protobuf_EnumDescriptorProto.name.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  if (*(void *)(v4 + 24))
  {
    uint64_t v5 = *(void *)(v4 + 16);
    unint64_t v6 = *(void *)(v4 + 24);
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C8CD66F4;
}

void sub_1C8CD66F4(uint64_t a1, char a2)
{
}

Swift::Void __swiftcall Google_Protobuf_EnumDescriptorProto.clearName()()
{
}

uint64_t Google_Protobuf_EnumDescriptorProto.value.setter(uint64_t a1)
{
  return sub_1C8CD8478(a1, (void (*)(void))type metadata accessor for Google_Protobuf_EnumDescriptorProto._StorageClass, 96, sub_1C8CEAC28);
}

void (*Google_Protobuf_EnumDescriptorProto.value.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(void *)(v4 + 32);
  swift_bridgeObjectRetain();
  return sub_1C8CD6808;
}

void sub_1C8CD6808(uint64_t a1, char a2)
{
}

uint64_t Google_Protobuf_EnumDescriptorProto.options.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 40);
  uint64_t v5 = *(void *)(v3 + 48);
  unint64_t v6 = *(void *)(v3 + 56);
  uint64_t v7 = MEMORY[0x1E4FBC868];
  unint64_t v8 = 0xC000000000000000;
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v9 = *(void *)(v3 + 40);
    uint64_t v10 = *(void *)(v3 + 48);
  }
  else
  {
    uint64_t v10 = 0;
  }
  if (v4)
  {
    unint64_t v8 = *(void *)(v3 + 56);
    uint64_t v7 = *(void *)(v3 + 64);
    char v11 = *(_WORD *)(v3 + 72);
  }
  else
  {
    char v11 = 2;
  }
  if (v4) {
    char v12 = HIBYTE(*(_WORD *)(v3 + 72));
  }
  else {
    char v12 = 2;
  }
  *(void *)a1 = v9;
  *(void *)(a1 + 8) = v10;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v11;
  *(unsigned char *)(a1 + 33) = v12;
  return sub_1C8CEF6AC(v4, v5, v6);
}

uint64_t sub_1C8CD68D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 40);
  uint64_t v5 = *(void *)(v3 + 48);
  unint64_t v6 = *(void *)(v3 + 56);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  unint64_t v8 = 0xC000000000000000;
  uint64_t v9 = MEMORY[0x1E4FBC868];
  int v10 = HIBYTE(*(unsigned __int16 *)(v3 + 72));
  if (v4)
  {
    char v11 = *(_WORD *)(v3 + 72);
  }
  else
  {
    LOBYTE(v10) = 2;
    char v11 = 2;
  }
  if (v4)
  {
    uint64_t v9 = *(void *)(v3 + 64);
    uint64_t v12 = *(void *)(v3 + 48);
  }
  else
  {
    uint64_t v12 = 0;
  }
  if (v4)
  {
    unint64_t v8 = *(void *)(v3 + 56);
    uint64_t v7 = *(void *)(v3 + 40);
  }
  *(void *)a2 = v7;
  *(void *)(a2 + 8) = v12;
  *(void *)(a2 + 16) = v8;
  *(void *)(a2 + 24) = v9;
  *(unsigned char *)(a2 + 32) = v11;
  *(unsigned char *)(a2 + 33) = v10;
  return sub_1C8CEF6AC(v4, v5, v6);
}

uint64_t Google_Protobuf_EnumDescriptorProto.options.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  __int16 v6 = *((unsigned __int8 *)a1 + 32);
  __int16 v7 = *((unsigned __int8 *)a1 + 33);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_EnumDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v8 = swift_retain();
    *(void *)(v1 + 16) = sub_1C8CEAC28(v8);
    swift_release();
  }
  uint64_t v9 = *(void *)(v1 + 16);
  swift_beginAccess();
  uint64_t v10 = *(void *)(v9 + 40);
  uint64_t v11 = *(void *)(v9 + 48);
  unint64_t v12 = *(void *)(v9 + 56);
  *(void *)(v9 + 40) = v2;
  *(void *)(v9 + 48) = v3;
  *(void *)(v9 + 56) = v4;
  *(void *)(v9 + 64) = v5;
  *(_WORD *)(v9 + 72) = v6 | (v7 << 8);
  return sub_1C8CEF708(v10, v11, v12);
}

double Google_Protobuf_EnumOptions.init()@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = MEMORY[0x1E4FBC860];
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C8D8AD80;
  *(void *)(a1 + 24) = MEMORY[0x1E4FBC868];
  *(_WORD *)(a1 + 32) = 514;
  return result;
}

void (*Google_Protobuf_EnumDescriptorProto.options.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x78uLL);
  *a1 = v3;
  v3[14] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 40);
  uint64_t v6 = *(void *)(v4 + 48);
  unint64_t v7 = *(void *)(v4 + 56);
  uint64_t v8 = MEMORY[0x1E4FBC868];
  unint64_t v9 = 0xC000000000000000;
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v10 = *(void *)(v4 + 40);
    uint64_t v11 = *(void *)(v4 + 48);
  }
  else
  {
    uint64_t v11 = 0;
  }
  if (v5)
  {
    unint64_t v9 = *(void *)(v4 + 56);
    uint64_t v8 = *(void *)(v4 + 64);
    char v12 = *(_WORD *)(v4 + 72);
  }
  else
  {
    char v12 = 2;
  }
  if (v5) {
    char v13 = HIBYTE(*(_WORD *)(v4 + 72));
  }
  else {
    char v13 = 2;
  }
  *uint64_t v3 = v10;
  v3[1] = v11;
  v3[2] = v9;
  v3[3] = v8;
  *((unsigned char *)v3 + 32) = v12;
  *((unsigned char *)v3 + 33) = v13;
  sub_1C8CEF6AC(v5, v6, v7);
  return sub_1C8CD6B44;
}

void sub_1C8CD6B44(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v4 = **a1;
  uint64_t v3 = (*a1)[1];
  unint64_t v6 = (*a1)[2];
  uint64_t v5 = (*a1)[3];
  __int16 v7 = *((unsigned __int8 *)*a1 + 32);
  __int16 v8 = *((unsigned __int8 *)*a1 + 33);
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1C8CA3CF8(v3, v6);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = v2[14];
      type metadata accessor for Google_Protobuf_EnumDescriptorProto._StorageClass();
      swift_allocObject();
      uint64_t v10 = swift_retain();
      *(void *)(v9 + 16) = sub_1C8CEAC28(v10);
      swift_release();
    }
    uint64_t v11 = *(void *)(v2[14] + 16);
    swift_beginAccess();
    uint64_t v12 = *(void *)(v11 + 40);
    uint64_t v13 = *(void *)(v11 + 48);
    unint64_t v14 = *(void *)(v11 + 56);
    *(void *)(v11 + 40) = v4;
    *(void *)(v11 + 48) = v3;
    *(void *)(v11 + 56) = v6;
    *(void *)(v11 + 64) = v5;
    *(_WORD *)(v11 + 72) = v7 | (v8 << 8);
    sub_1C8CEF708(v12, v13, v14);
    uint64_t v15 = v2[1];
    unint64_t v16 = v2[2];
    swift_bridgeObjectRelease();
    sub_1C8CA3D5C(v15, v16);
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v17 = v2[14];
      type metadata accessor for Google_Protobuf_EnumDescriptorProto._StorageClass();
      swift_allocObject();
      uint64_t v18 = swift_retain();
      *(void *)(v17 + 16) = sub_1C8CEAC28(v18);
      swift_release();
    }
    uint64_t v19 = *(void *)(v2[14] + 16);
    swift_beginAccess();
    uint64_t v20 = *(void *)(v19 + 40);
    uint64_t v21 = *(void *)(v19 + 48);
    unint64_t v22 = *(void *)(v19 + 56);
    *(void *)(v19 + 40) = v4;
    *(void *)(v19 + 48) = v3;
    *(void *)(v19 + 56) = v6;
    *(void *)(v19 + 64) = v5;
    *(_WORD *)(v19 + 72) = v7 | (v8 << 8);
    sub_1C8CEF708(v20, v21, v22);
  }
  free(v2);
}

BOOL Google_Protobuf_EnumDescriptorProto.hasOptions.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  return *(void *)(v1 + 40) != 0;
}

Swift::Void __swiftcall Google_Protobuf_EnumDescriptorProto.clearOptions()()
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_EnumDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v1 = swift_retain();
    *(void *)(v0 + 16) = sub_1C8CEAC28(v1);
    swift_release();
  }
  uint64_t v2 = *(void *)(v0 + 16);
  swift_beginAccess();
  uint64_t v3 = *(void *)(v2 + 40);
  uint64_t v4 = *(void *)(v2 + 48);
  unint64_t v5 = *(void *)(v2 + 56);
  *(_OWORD *)(v2 + 40) = 0u;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_WORD *)(v2 + 72) = 0;
  sub_1C8CEF708(v3, v4, v5);
}

uint64_t _s20SiriOntologyProtobuf07Google_C20_FileDescriptorProtoV8enumTypeSayAA0d1_c5_EnumfG0VGvg_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CD6E90(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v10 = *a1;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a5(0);
    swift_allocObject();
    uint64_t v11 = swift_retain();
    *(void *)(a2 + 16) = a7(v11);
    swift_release();
  }
  uint64_t v12 = *(void *)(a2 + 16);
  swift_beginAccess();
  *(void *)(v12 + 80) = v10;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_EnumDescriptorProto.reservedRange.setter(uint64_t a1)
{
  return sub_1C8CD6F80(a1, (void (*)(void))type metadata accessor for Google_Protobuf_EnumDescriptorProto._StorageClass, 96, sub_1C8CEAC28);
}

uint64_t sub_1C8CD6F80(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t (*a4)(uint64_t))
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a2(0);
    swift_allocObject();
    uint64_t v8 = swift_retain();
    *(void *)(v4 + 16) = a4(v8);
    swift_release();
  }
  uint64_t v9 = *(void *)(v4 + 16);
  swift_beginAccess();
  *(void *)(v9 + 80) = a1;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_EnumDescriptorProto.reservedRange.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(void *)(v4 + 80);
  swift_bridgeObjectRetain();
  return sub_1C8CD70BC;
}

void sub_1C8CD70BC(uint64_t a1, char a2)
{
}

void sub_1C8CD70EC(uint64_t a1, char a2, void (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t))
{
  __int16 v7 = *(void **)a1;
  uint64_t v8 = *(void *)(*(void *)a1 + 72);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = v7[10];
      a3(0);
      swift_allocObject();
      uint64_t v10 = swift_retain();
      *(void *)(v9 + 16) = a5(v10);
      swift_release();
    }
    uint64_t v11 = *(void *)(v7[10] + 16);
    swift_beginAccess();
    *(void *)(v11 + 80) = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v12 = v7[10];
      a3(0);
      swift_allocObject();
      uint64_t v13 = swift_retain();
      *(void *)(v12 + 16) = a5(v13);
      swift_release();
    }
    uint64_t v14 = *(void *)(v7[10] + 16);
    swift_beginAccess();
    *(void *)(v14 + 80) = v8;
  }
  swift_bridgeObjectRelease();
  free(v7);
}

uint64_t _s20SiriOntologyProtobuf07Google_C20_FileDescriptorProtoV7serviceSayAA0d1_c8_ServicefG0VGvg_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CD72A4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v10 = *a1;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a5(0);
    swift_allocObject();
    uint64_t v11 = swift_retain();
    *(void *)(a2 + 16) = a7(v11);
    swift_release();
  }
  uint64_t v12 = *(void *)(a2 + 16);
  swift_beginAccess();
  *(void *)(v12 + 88) = v10;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_EnumDescriptorProto.reservedName.setter(uint64_t a1)
{
  return sub_1C8CD7394(a1, (void (*)(void))type metadata accessor for Google_Protobuf_EnumDescriptorProto._StorageClass, 96, sub_1C8CEAC28);
}

uint64_t sub_1C8CD7394(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t (*a4)(uint64_t))
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a2(0);
    swift_allocObject();
    uint64_t v8 = swift_retain();
    *(void *)(v4 + 16) = a4(v8);
    swift_release();
  }
  uint64_t v9 = *(void *)(v4 + 16);
  swift_beginAccess();
  *(void *)(v9 + 88) = a1;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_EnumDescriptorProto.reservedName.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(void *)(v4 + 88);
  swift_bridgeObjectRetain();
  return sub_1C8CD74D0;
}

void sub_1C8CD74D0(uint64_t a1, char a2)
{
}

void sub_1C8CD7500(uint64_t a1, char a2, void (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t))
{
  __int16 v7 = *(void **)a1;
  uint64_t v8 = *(void *)(*(void *)a1 + 72);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = v7[10];
      a3(0);
      swift_allocObject();
      uint64_t v10 = swift_retain();
      *(void *)(v9 + 16) = a5(v10);
      swift_release();
    }
    uint64_t v11 = *(void *)(v7[10] + 16);
    swift_beginAccess();
    *(void *)(v11 + 88) = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v12 = v7[10];
      a3(0);
      swift_allocObject();
      uint64_t v13 = swift_retain();
      *(void *)(v12 + 16) = a5(v13);
      swift_release();
    }
    uint64_t v14 = *(void *)(v7[10] + 16);
    swift_beginAccess();
    *(void *)(v14 + 88) = v8;
  }
  swift_bridgeObjectRelease();
  free(v7);
}

uint64_t (*Google_Protobuf_EnumDescriptorProto.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t *(*Google_Protobuf_EnumDescriptorProto.EnumReservedRange.start.modify(uint64_t a1))(uint64_t *result)
{
  *(void *)a1 = v1;
  int v2 = *(_DWORD *)(v1 + 16);
  if (*(unsigned char *)(v1 + 20)) {
    int v2 = 0;
  }
  *(_DWORD *)(a1 + 8) = v2;
  return sub_1C8D0AA70;
}

uint64_t *(*Google_Protobuf_EnumDescriptorProto.EnumReservedRange.end.modify(uint64_t a1))(uint64_t *result)
{
  *(void *)a1 = v1;
  int v2 = *(_DWORD *)(v1 + 24);
  if (*(unsigned char *)(v1 + 28)) {
    int v2 = 0;
  }
  *(_DWORD *)(a1 + 8) = v2;
  return sub_1C8D0AA74;
}

uint64_t (*Google_Protobuf_EnumDescriptorProto.EnumReservedRange.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_EnumDescriptorProto.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_1C8CBACE8(&qword_1EA565AF8, &qword_1EA5663E8, a1);
}

uint64_t Google_Protobuf_EnumValueDescriptorProto.name.setter(uint64_t a1, uint64_t a2)
{
  return sub_1C8CD7F84(a1, a2, (void (*)(void))type metadata accessor for Google_Protobuf_EnumValueDescriptorProto._StorageClass, 73, sub_1C8CEC38C);
}

void (*Google_Protobuf_EnumValueDescriptorProto.name.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  if (*(void *)(v4 + 24))
  {
    uint64_t v5 = *(void *)(v4 + 16);
    unint64_t v6 = *(void *)(v4 + 24);
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C8CD7828;
}

void sub_1C8CD7828(uint64_t a1, char a2)
{
}

Swift::Void __swiftcall Google_Protobuf_EnumValueDescriptorProto.clearName()()
{
}

uint64_t _s20SiriOntologyProtobuf07Google_C21_FieldDescriptorProtoV6numbers5Int32Vvg_0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 36)) {
    return 0;
  }
  else {
    return *(unsigned int *)(v1 + 32);
  }
}

uint64_t sub_1C8CD78D8(int *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6, uint64_t (*a7)(uint64_t))
{
  int v10 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a5(0);
    swift_allocObject();
    uint64_t v11 = swift_retain();
    *(void *)(a2 + 16) = a7(v11);
    swift_release();
  }
  uint64_t v12 = *(void *)(a2 + 16);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v12 + 32) = v10;
  *(unsigned char *)(v12 + 36) = 0;
  return result;
}

uint64_t Google_Protobuf_EnumValueDescriptorProto.number.setter(int a1)
{
  return sub_1C8CD79BC(a1, (void (*)(void))type metadata accessor for Google_Protobuf_EnumValueDescriptorProto._StorageClass, 73, sub_1C8CEC38C);
}

uint64_t sub_1C8CD79BC(int a1, void (*a2)(void), uint64_t a3, uint64_t (*a4)(uint64_t))
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a2(0);
    swift_allocObject();
    uint64_t v8 = swift_retain();
    *(void *)(v4 + 16) = a4(v8);
    swift_release();
  }
  uint64_t v9 = *(void *)(v4 + 16);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v9 + 32) = a1;
  *(unsigned char *)(v9 + 36) = 0;
  return result;
}

void (*Google_Protobuf_EnumValueDescriptorProto.number.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  int v5 = *(_DWORD *)(v4 + 32);
  if (*(unsigned char *)(v4 + 36)) {
    int v5 = 0;
  }
  *((_DWORD *)v3 + 20) = v5;
  return sub_1C8CD7AF8;
}

void sub_1C8CD7AF8(uint64_t a1, char a2)
{
}

void sub_1C8CD7B28(uint64_t a1, char a2, void (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v8 = *(void **)a1;
  int v9 = *(_DWORD *)(*(void *)a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v11 = v8[9];
    a3(0);
    swift_allocObject();
    uint64_t v12 = swift_retain();
    *(void *)(v11 + 16) = a5(v12);
    swift_release();
  }
LABEL_4:
  uint64_t v13 = *(void *)(v8[9] + 16);
  swift_beginAccess();
  *(_DWORD *)(v13 + 32) = v9;
  *(unsigned char *)(v13 + 36) = 0;
  free(v8);
}

Swift::Void __swiftcall Google_Protobuf_EnumValueDescriptorProto.clearNumber()()
{
}

uint64_t sub_1C8CD7C48(void (*a1)(void), uint64_t a2, uint64_t (*a3)(uint64_t))
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a1(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v3 + 16) = a3(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v3 + 16);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v7 + 32) = 0;
  *(unsigned char *)(v7 + 36) = 1;
  return result;
}

uint64_t Google_Protobuf_EnumValueDescriptorProto.options.setter(uint64_t *a1)
{
  return sub_1C8CD8918(a1, (void (*)(void))type metadata accessor for Google_Protobuf_EnumValueDescriptorProto._StorageClass, sub_1C8CEC38C);
}

void (*Google_Protobuf_EnumValueDescriptorProto.options.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x78uLL);
  *a1 = v3;
  v3[14] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 40);
  uint64_t v6 = *(void *)(v4 + 48);
  unint64_t v7 = *(void *)(v4 + 56);
  uint64_t v8 = MEMORY[0x1E4FBC868];
  uint64_t v9 = MEMORY[0x1E4FBC860];
  unint64_t v10 = 0xC000000000000000;
  if (v5)
  {
    uint64_t v9 = *(void *)(v4 + 40);
    uint64_t v11 = *(void *)(v4 + 48);
  }
  else
  {
    uint64_t v11 = 0;
  }
  if (v5)
  {
    unint64_t v10 = *(void *)(v4 + 56);
    uint64_t v8 = *(void *)(v4 + 64);
    char v12 = *(unsigned char *)(v4 + 72);
  }
  else
  {
    char v12 = 2;
  }
  *uint64_t v3 = v9;
  v3[1] = v11;
  v3[2] = v10;
  v3[3] = v8;
  *((unsigned char *)v3 + 32) = v12;
  sub_1C8CEF6AC(v5, v6, v7);
  return sub_1C8CD7DEC;
}

void sub_1C8CD7DEC(uint64_t **a1, char a2)
{
}

Swift::Void __swiftcall Google_Protobuf_EnumValueDescriptorProto.clearOptions()()
{
}

uint64_t (*Google_Protobuf_EnumValueDescriptorProto.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_EnumValueDescriptorProto.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_1C8CDAB10((void (*)(void))type metadata accessor for Google_Protobuf_EnumValueDescriptorProto._StorageClass, a1);
}

uint64_t sub_1C8CD7E8C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v11 = *a1;
  uint64_t v10 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a5(0);
    swift_allocObject();
    uint64_t v12 = swift_retain();
    *(void *)(a2 + 16) = a7(v12);
    swift_release();
  }
  uint64_t v13 = *(void *)(a2 + 16);
  swift_beginAccess();
  *(void *)(v13 + 16) = v11;
  *(void *)(v13 + 24) = v10;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_ServiceDescriptorProto.name.setter(uint64_t a1, uint64_t a2)
{
  return sub_1C8CD7F84(a1, a2, (void (*)(void))type metadata accessor for Google_Protobuf_ServiceDescriptorProto._StorageClass, 73, sub_1C8CED500);
}

uint64_t sub_1C8CD7F84(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t))
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a3(0);
    swift_allocObject();
    uint64_t v10 = swift_retain();
    *(void *)(v5 + 16) = a5(v10);
    swift_release();
  }
  uint64_t v11 = *(void *)(v5 + 16);
  swift_beginAccess();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_ServiceDescriptorProto.name.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  if (*(void *)(v4 + 24))
  {
    uint64_t v5 = *(void *)(v4 + 16);
    unint64_t v6 = *(void *)(v4 + 24);
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C8CD80F4;
}

void sub_1C8CD80F4(uint64_t a1, char a2)
{
}

void sub_1C8CD8124(uint64_t a1, char a2, void (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t))
{
  unint64_t v7 = *(void **)a1;
  uint64_t v8 = *(void *)(*(void *)a1 + 72);
  uint64_t v9 = *(void *)(*(void *)a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v10 = v7[11];
      a3(0);
      swift_allocObject();
      uint64_t v11 = swift_retain();
      *(void *)(v10 + 16) = a5(v11);
      swift_release();
    }
    uint64_t v12 = *(void *)(v7[11] + 16);
    swift_beginAccess();
    *(void *)(v12 + 16) = v8;
    *(void *)(v12 + 24) = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v13 = v7[11];
      a3(0);
      swift_allocObject();
      uint64_t v14 = swift_retain();
      *(void *)(v13 + 16) = a5(v14);
      swift_release();
    }
    uint64_t v15 = *(void *)(v7[11] + 16);
    swift_beginAccess();
    *(void *)(v15 + 16) = v8;
    *(void *)(v15 + 24) = v9;
  }
  swift_bridgeObjectRelease();
  free(v7);
}

Swift::Void __swiftcall Google_Protobuf_ServiceDescriptorProto.clearName()()
{
}

uint64_t sub_1C8CD82CC(void (*a1)(void), uint64_t a2, uint64_t (*a3)(uint64_t))
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a1(0);
    swift_allocObject();
    uint64_t v6 = swift_retain();
    *(void *)(v3 + 16) = a3(v6);
    swift_release();
  }
  uint64_t v7 = *(void *)(v3 + 16);
  swift_beginAccess();
  *(void *)(v7 + 16) = 0;
  *(void *)(v7 + 24) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C8CD8388(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v10 = *a1;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a5(0);
    swift_allocObject();
    uint64_t v11 = swift_retain();
    *(void *)(a2 + 16) = a7(v11);
    swift_release();
  }
  uint64_t v12 = *(void *)(a2 + 16);
  swift_beginAccess();
  *(void *)(v12 + 32) = v10;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_ServiceDescriptorProto.method.setter(uint64_t a1)
{
  return sub_1C8CD8478(a1, (void (*)(void))type metadata accessor for Google_Protobuf_ServiceDescriptorProto._StorageClass, 73, sub_1C8CED500);
}

uint64_t sub_1C8CD8478(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t (*a4)(uint64_t))
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a2(0);
    swift_allocObject();
    uint64_t v8 = swift_retain();
    *(void *)(v4 + 16) = a4(v8);
    swift_release();
  }
  uint64_t v9 = *(void *)(v4 + 16);
  swift_beginAccess();
  *(void *)(v9 + 32) = a1;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_ServiceDescriptorProto.method.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  v3[9] = *(void *)(v4 + 32);
  swift_bridgeObjectRetain();
  return sub_1C8CD85B4;
}

void sub_1C8CD85B4(uint64_t a1, char a2)
{
}

void sub_1C8CD85E4(uint64_t a1, char a2, void (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v7 = *(void **)a1;
  uint64_t v8 = *(void *)(*(void *)a1 + 72);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = v7[10];
      a3(0);
      swift_allocObject();
      uint64_t v10 = swift_retain();
      *(void *)(v9 + 16) = a5(v10);
      swift_release();
    }
    uint64_t v11 = *(void *)(v7[10] + 16);
    swift_beginAccess();
    *(void *)(v11 + 32) = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v12 = v7[10];
      a3(0);
      swift_allocObject();
      uint64_t v13 = swift_retain();
      *(void *)(v12 + 16) = a5(v13);
      swift_release();
    }
    uint64_t v14 = *(void *)(v7[10] + 16);
    swift_beginAccess();
    *(void *)(v14 + 32) = v8;
  }
  swift_bridgeObjectRelease();
  free(v7);
}

uint64_t _s20SiriOntologyProtobuf07Google_C25_EnumValueDescriptorProtoV7optionsAA0d1_c1_eF7OptionsVvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 40);
  uint64_t v5 = *(void *)(v3 + 48);
  unint64_t v6 = *(void *)(v3 + 56);
  uint64_t v7 = MEMORY[0x1E4FBC868];
  uint64_t v8 = MEMORY[0x1E4FBC860];
  unint64_t v9 = 0xC000000000000000;
  if (v4)
  {
    uint64_t v8 = *(void *)(v3 + 40);
    uint64_t v10 = *(void *)(v3 + 48);
  }
  else
  {
    uint64_t v10 = 0;
  }
  if (v4)
  {
    unint64_t v9 = *(void *)(v3 + 56);
    uint64_t v7 = *(void *)(v3 + 64);
    char v11 = *(unsigned char *)(v3 + 72);
  }
  else
  {
    char v11 = 2;
  }
  *(void *)a1 = v8;
  *(void *)(a1 + 8) = v10;
  *(void *)(a1 + 16) = v9;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v11;
  return sub_1C8CEF6AC(v4, v5, v6);
}

uint64_t sub_1C8CD87E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 40);
  uint64_t v5 = *(void *)(v3 + 48);
  unint64_t v6 = *(void *)(v3 + 56);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  unint64_t v8 = 0xC000000000000000;
  uint64_t v9 = MEMORY[0x1E4FBC868];
  if (v4) {
    char v10 = *(unsigned char *)(v3 + 72);
  }
  else {
    char v10 = 2;
  }
  if (v4)
  {
    uint64_t v9 = *(void *)(v3 + 64);
    uint64_t v11 = *(void *)(v3 + 48);
  }
  else
  {
    uint64_t v11 = 0;
  }
  if (v4)
  {
    unint64_t v8 = *(void *)(v3 + 56);
    uint64_t v7 = *(void *)(v3 + 40);
  }
  *(void *)a2 = v7;
  *(void *)(a2 + 8) = v11;
  *(void *)(a2 + 16) = v8;
  *(void *)(a2 + 24) = v9;
  *(unsigned char *)(a2 + 32) = v10;
  return sub_1C8CEF6AC(v4, v5, v6);
}

uint64_t sub_1C8CD8870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void *))
{
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  char v9 = *(unsigned char *)(a1 + 32);
  v11[0] = *(void *)a1;
  v11[1] = v6;
  v11[2] = v7;
  uint64_t v11[3] = v8;
  char v12 = v9;
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(v6, v7);
  swift_bridgeObjectRetain();
  return a5(v11);
}

uint64_t Google_Protobuf_ServiceDescriptorProto.options.setter(uint64_t *a1)
{
  return sub_1C8CD8918(a1, (void (*)(void))type metadata accessor for Google_Protobuf_ServiceDescriptorProto._StorageClass, sub_1C8CED500);
}

uint64_t sub_1C8CD8918(uint64_t *a1, void (*a2)(void), uint64_t (*a3)(uint64_t))
{
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v8 = a1[2];
  uint64_t v9 = a1[3];
  char v10 = *((unsigned char *)a1 + 32);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a2(0);
    swift_allocObject();
    uint64_t v11 = swift_retain();
    *(void *)(v3 + 16) = a3(v11);
    swift_release();
  }
  uint64_t v12 = *(void *)(v3 + 16);
  swift_beginAccess();
  uint64_t v13 = *(void *)(v12 + 40);
  uint64_t v14 = *(void *)(v12 + 48);
  unint64_t v15 = *(void *)(v12 + 56);
  *(void *)(v12 + 40) = v6;
  *(void *)(v12 + 48) = v7;
  *(void *)(v12 + 56) = v8;
  *(void *)(v12 + 64) = v9;
  *(unsigned char *)(v12 + 72) = v10;
  return sub_1C8CEF708(v13, v14, v15);
}

double Google_Protobuf_ServiceOptions.init()@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = MEMORY[0x1E4FBC860];
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C8D8AD80;
  *(void *)(a1 + 24) = MEMORY[0x1E4FBC868];
  *(unsigned char *)(a1 + 32) = 2;
  return result;
}

void (*Google_Protobuf_ServiceDescriptorProto.options.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x78uLL);
  *a1 = v3;
  v3[14] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 40);
  uint64_t v6 = *(void *)(v4 + 48);
  unint64_t v7 = *(void *)(v4 + 56);
  uint64_t v8 = MEMORY[0x1E4FBC868];
  uint64_t v9 = MEMORY[0x1E4FBC860];
  unint64_t v10 = 0xC000000000000000;
  if (v5)
  {
    uint64_t v9 = *(void *)(v4 + 40);
    uint64_t v11 = *(void *)(v4 + 48);
  }
  else
  {
    uint64_t v11 = 0;
  }
  if (v5)
  {
    unint64_t v10 = *(void *)(v4 + 56);
    uint64_t v8 = *(void *)(v4 + 64);
    char v12 = *(unsigned char *)(v4 + 72);
  }
  else
  {
    char v12 = 2;
  }
  *uint64_t v3 = v9;
  v3[1] = v11;
  v3[2] = v10;
  v3[3] = v8;
  *((unsigned char *)v3 + 32) = v12;
  sub_1C8CEF6AC(v5, v6, v7);
  return sub_1C8CD8AE4;
}

void sub_1C8CD8AE4(uint64_t **a1, char a2)
{
}

void sub_1C8CD8B10(uint64_t **a1, char a2, void (*a3)(void), uint64_t (*a4)(uint64_t))
{
  uint64_t v6 = *a1;
  uint64_t v8 = **a1;
  uint64_t v7 = (*a1)[1];
  unint64_t v10 = (*a1)[2];
  uint64_t v9 = (*a1)[3];
  char v11 = *((unsigned char *)*a1 + 32);
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1C8CA3CF8(v7, v10);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      char v26 = v11;
      uint64_t v12 = v6[14];
      a3(0);
      swift_allocObject();
      uint64_t v13 = swift_retain();
      *(void *)(v12 + 16) = a4(v13);
      char v11 = v26;
      swift_release();
    }
    uint64_t v14 = *(void *)(v6[14] + 16);
    swift_beginAccess();
    uint64_t v15 = *(void *)(v14 + 40);
    uint64_t v16 = *(void *)(v14 + 48);
    unint64_t v17 = *(void *)(v14 + 56);
    *(void *)(v14 + 40) = v8;
    *(void *)(v14 + 48) = v7;
    *(void *)(v14 + 56) = v10;
    *(void *)(v14 + 64) = v9;
    *(unsigned char *)(v14 + 72) = v11;
    sub_1C8CEF708(v15, v16, v17);
    uint64_t v18 = v6[1];
    unint64_t v19 = v6[2];
    swift_bridgeObjectRelease();
    sub_1C8CA3D5C(v18, v19);
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      char v27 = v11;
      uint64_t v20 = v6[14];
      a3(0);
      swift_allocObject();
      uint64_t v21 = swift_retain();
      *(void *)(v20 + 16) = a4(v21);
      char v11 = v27;
      swift_release();
    }
    uint64_t v22 = *(void *)(v6[14] + 16);
    swift_beginAccess();
    uint64_t v23 = *(void *)(v22 + 40);
    uint64_t v24 = *(void *)(v22 + 48);
    unint64_t v25 = *(void *)(v22 + 56);
    *(void *)(v22 + 40) = v8;
    *(void *)(v22 + 48) = v7;
    *(void *)(v22 + 56) = v10;
    *(void *)(v22 + 64) = v9;
    *(unsigned char *)(v22 + 72) = v11;
    sub_1C8CEF708(v23, v24, v25);
  }
  free(v6);
}

Swift::Void __swiftcall Google_Protobuf_ServiceDescriptorProto.clearOptions()()
{
}

uint64_t sub_1C8CD8D1C(void (*a1)(void), uint64_t (*a2)(uint64_t))
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a1(0);
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v2 + 16) = a2(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v2 + 16);
  swift_beginAccess();
  uint64_t v7 = *(void *)(v6 + 40);
  uint64_t v8 = *(void *)(v6 + 48);
  unint64_t v9 = *(void *)(v6 + 56);
  *(_OWORD *)(v6 + 40) = 0u;
  *(_OWORD *)(v6 + 56) = 0u;
  *(unsigned char *)(v6 + 72) = 0;
  return sub_1C8CEF708(v7, v8, v9);
}

uint64_t (*Google_Protobuf_ServiceDescriptorProto.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_ServiceDescriptorProto.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_1C8CBACE8(&qword_1EA565B20, &qword_1EA566460, a1);
}

uint64_t _s20SiriOntologyProtobuf07Google_C20_FileDescriptorProtoV4nameSSvg_0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  if (*(void *)(v1 + 24)) {
    uint64_t v2 = *(void *)(v1 + 16);
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C8CD8E90@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  swift_beginAccess();
  if (*(void *)(v3 + 24))
  {
    uint64_t v4 = *(void *)(v3 + 16);
    unint64_t v5 = *(void *)(v3 + 24);
  }
  else
  {
    uint64_t v4 = 0;
    unint64_t v5 = 0xE000000000000000;
  }
  *a2 = v4;
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CD8F00(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v5 = swift_retain();
    uint64_t v6 = sub_1C8D02B4C(v5);
    swift_release();
    *(void *)(a2 + 16) = v6;
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + 16);
  swift_beginAccess();
  *(void *)(v7 + 16) = v4;
  *(void *)(v7 + 24) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_MethodDescriptorProto.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v6 = swift_retain();
    uint64_t v7 = sub_1C8D02B4C(v6);
    swift_release();
    *(void *)(v3 + 16) = v7;
    swift_release();
  }
  uint64_t v8 = *(void *)(v3 + 16);
  swift_beginAccess();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_MethodDescriptorProto.name.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  if (*(void *)(v4 + 24))
  {
    uint64_t v5 = *(void *)(v4 + 16);
    unint64_t v6 = *(void *)(v4 + 24);
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C8CD910C;
}

void sub_1C8CD910C(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 72);
  uint64_t v4 = *(void *)(*(void *)a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = v2[11];
      type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
      swift_allocObject();
      uint64_t v6 = swift_retain();
      uint64_t v7 = sub_1C8D02B4C(v6);
      swift_release();
      *(void *)(v5 + 16) = v7;
      swift_release();
    }
    uint64_t v8 = *(void *)(v2[11] + 16);
    swift_beginAccess();
    *(void *)(v8 + 16) = v3;
    *(void *)(v8 + 24) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = v2[11];
      type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
      swift_allocObject();
      uint64_t v10 = swift_retain();
      uint64_t v11 = sub_1C8D02B4C(v10);
      swift_release();
      *(void *)(v9 + 16) = v11;
      swift_release();
    }
    uint64_t v12 = *(void *)(v2[11] + 16);
    swift_beginAccess();
    *(void *)(v12 + 16) = v3;
    *(void *)(v12 + 24) = v4;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

Swift::Void __swiftcall Google_Protobuf_MethodDescriptorProto.clearName()()
{
  uint64_t v1 = v0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v2 = swift_retain();
    uint64_t v3 = sub_1C8D02B4C(v2);
    swift_release();
    *(void *)(v1 + 16) = v3;
    swift_release();
  }
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  *(void *)(v4 + 16) = 0;
  *(void *)(v4 + 24) = 0;
  swift_bridgeObjectRelease();
}

uint64_t _s20SiriOntologyProtobuf07Google_C20_FileDescriptorProtoV7packageSSvg_0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  if (*(void *)(v1 + 40)) {
    uint64_t v2 = *(void *)(v1 + 32);
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C8CD937C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  swift_beginAccess();
  if (*(void *)(v3 + 40))
  {
    uint64_t v4 = *(void *)(v3 + 32);
    unint64_t v5 = *(void *)(v3 + 40);
  }
  else
  {
    uint64_t v4 = 0;
    unint64_t v5 = 0xE000000000000000;
  }
  *a2 = v4;
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CD93EC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v5 = swift_retain();
    uint64_t v6 = sub_1C8D02B4C(v5);
    swift_release();
    *(void *)(a2 + 16) = v6;
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + 16);
  swift_beginAccess();
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_MethodDescriptorProto.inputType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v6 = swift_retain();
    uint64_t v7 = sub_1C8D02B4C(v6);
    swift_release();
    *(void *)(v3 + 16) = v7;
    swift_release();
  }
  uint64_t v8 = *(void *)(v3 + 16);
  swift_beginAccess();
  *(void *)(v8 + 32) = a1;
  *(void *)(v8 + 40) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_MethodDescriptorProto.inputType.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  if (*(void *)(v4 + 40))
  {
    uint64_t v5 = *(void *)(v4 + 32);
    unint64_t v6 = *(void *)(v4 + 40);
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C8CD95F8;
}

void sub_1C8CD95F8(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 72);
  uint64_t v4 = *(void *)(*(void *)a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = v2[11];
      type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
      swift_allocObject();
      uint64_t v6 = swift_retain();
      uint64_t v7 = sub_1C8D02B4C(v6);
      swift_release();
      *(void *)(v5 + 16) = v7;
      swift_release();
    }
    uint64_t v8 = *(void *)(v2[11] + 16);
    swift_beginAccess();
    *(void *)(v8 + 32) = v3;
    *(void *)(v8 + 40) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = v2[11];
      type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
      swift_allocObject();
      uint64_t v10 = swift_retain();
      uint64_t v11 = sub_1C8D02B4C(v10);
      swift_release();
      *(void *)(v9 + 16) = v11;
      swift_release();
    }
    uint64_t v12 = *(void *)(v2[11] + 16);
    swift_beginAccess();
    *(void *)(v12 + 32) = v3;
    *(void *)(v12 + 40) = v4;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

Swift::Void __swiftcall Google_Protobuf_MethodDescriptorProto.clearInputType()()
{
  uint64_t v1 = v0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v2 = swift_retain();
    uint64_t v3 = sub_1C8D02B4C(v2);
    swift_release();
    *(void *)(v1 + 16) = v3;
    swift_release();
  }
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  *(void *)(v4 + 32) = 0;
  *(void *)(v4 + 40) = 0;
  swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_MethodDescriptorProto.outputType.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  if (*(void *)(v1 + 56)) {
    uint64_t v2 = *(void *)(v1 + 48);
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C8CD9864@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  swift_beginAccess();
  if (*(void *)(v3 + 56))
  {
    uint64_t v4 = *(void *)(v3 + 48);
    unint64_t v5 = *(void *)(v3 + 56);
  }
  else
  {
    uint64_t v4 = 0;
    unint64_t v5 = 0xE000000000000000;
  }
  *a2 = v4;
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CD98D4(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v5 = swift_retain();
    uint64_t v6 = sub_1C8D02B4C(v5);
    swift_release();
    *(void *)(a2 + 16) = v6;
    swift_release();
  }
  uint64_t v7 = *(void *)(a2 + 16);
  swift_beginAccess();
  *(void *)(v7 + 48) = v4;
  *(void *)(v7 + 56) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_MethodDescriptorProto.outputType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v6 = swift_retain();
    uint64_t v7 = sub_1C8D02B4C(v6);
    swift_release();
    *(void *)(v3 + 16) = v7;
    swift_release();
  }
  uint64_t v8 = *(void *)(v3 + 16);
  swift_beginAccess();
  *(void *)(v8 + 48) = a1;
  *(void *)(v8 + 56) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_MethodDescriptorProto.outputType.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  if (*(void *)(v4 + 56))
  {
    uint64_t v5 = *(void *)(v4 + 48);
    unint64_t v6 = *(void *)(v4 + 56);
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C8CD9AE0;
}

void sub_1C8CD9AE0(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 72);
  uint64_t v4 = *(void *)(*(void *)a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = v2[11];
      type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
      swift_allocObject();
      uint64_t v6 = swift_retain();
      uint64_t v7 = sub_1C8D02B4C(v6);
      swift_release();
      *(void *)(v5 + 16) = v7;
      swift_release();
    }
    uint64_t v8 = *(void *)(v2[11] + 16);
    swift_beginAccess();
    *(void *)(v8 + 48) = v3;
    *(void *)(v8 + 56) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = v2[11];
      type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
      swift_allocObject();
      uint64_t v10 = swift_retain();
      uint64_t v11 = sub_1C8D02B4C(v10);
      swift_release();
      *(void *)(v9 + 16) = v11;
      swift_release();
    }
    uint64_t v12 = *(void *)(v2[11] + 16);
    swift_beginAccess();
    *(void *)(v12 + 48) = v3;
    *(void *)(v12 + 56) = v4;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

BOOL Google_Protobuf_MethodDescriptorProto.hasOutputType.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  return *(void *)(v1 + 56) != 0;
}

Swift::Void __swiftcall Google_Protobuf_MethodDescriptorProto.clearOutputType()()
{
  uint64_t v1 = v0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v2 = swift_retain();
    uint64_t v3 = sub_1C8D02B4C(v2);
    swift_release();
    *(void *)(v1 + 16) = v3;
    swift_release();
  }
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  *(void *)(v4 + 48) = 0;
  *(void *)(v4 + 56) = 0;
  swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_MethodDescriptorProto.options.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = *(void *)(v3 + 72);
  unint64_t v6 = *(void *)(v3 + 80);
  uint64_t v7 = MEMORY[0x1E4FBC868];
  unint64_t v8 = 0xC000000000000000;
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v9 = *(void *)(v3 + 64);
    uint64_t v10 = *(void *)(v3 + 72);
  }
  else
  {
    uint64_t v10 = 0;
  }
  if (v4)
  {
    unint64_t v8 = *(void *)(v3 + 80);
    uint64_t v7 = *(void *)(v3 + 88);
    char v11 = *(_WORD *)(v3 + 96);
  }
  else
  {
    char v11 = 2;
  }
  if (v4) {
    char v12 = HIBYTE(*(_WORD *)(v3 + 96));
  }
  else {
    char v12 = 3;
  }
  *(void *)a1 = v9;
  *(void *)(a1 + 8) = v10;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v11;
  *(unsigned char *)(a1 + 33) = v12;
  return sub_1C8CEF6AC(v4, v5, v6);
}

double sub_1C8CD9DCC@<D0>(uint64_t a1@<X8>)
{
  Google_Protobuf_MethodDescriptorProto.options.getter((uint64_t)&v5);
  uint64_t v2 = v7;
  __int16 v3 = v8;
  *(void *)a1 = v5;
  double result = *(double *)&v6;
  *(_OWORD *)(a1 + 8) = v6;
  *(void *)(a1 + 24) = v2;
  *(_WORD *)(a1 + 32) = v3;
  return result;
}

uint64_t sub_1C8CD9E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void *))
{
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  __int16 v9 = *(_WORD *)(a1 + 32);
  v11[0] = *(void *)a1;
  v11[1] = v6;
  v11[2] = v7;
  uint64_t v11[3] = v8;
  __int16 v12 = v9;
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(v6, v7);
  swift_bridgeObjectRetain();
  return a5(v11);
}

uint64_t Google_Protobuf_MethodDescriptorProto.options.setter(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v6 = a1[3];
  __int16 v7 = *((unsigned __int8 *)a1 + 32);
  __int16 v8 = *((unsigned __int8 *)a1 + 33);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v9 = swift_retain();
    uint64_t v10 = sub_1C8D02B4C(v9);
    swift_release();
    *(void *)(v2 + 16) = v10;
    swift_release();
  }
  uint64_t v11 = *(void *)(v2 + 16);
  swift_beginAccess();
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = *(void *)(v11 + 72);
  unint64_t v14 = *(void *)(v11 + 80);
  *(void *)(v11 + 64) = v3;
  *(void *)(v11 + 72) = v4;
  *(void *)(v11 + 80) = v5;
  *(void *)(v11 + 88) = v6;
  *(_WORD *)(v11 + 96) = v7 | (v8 << 8);
  return sub_1C8CEF708(v12, v13, v14);
}

double Google_Protobuf_MethodOptions.init()@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = MEMORY[0x1E4FBC860];
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C8D8AD80;
  *(void *)(a1 + 24) = MEMORY[0x1E4FBC868];
  *(_WORD *)(a1 + 32) = 770;
  return result;
}

void (*Google_Protobuf_MethodDescriptorProto.options.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x78uLL);
  *a1 = v3;
  v3[14] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = *(void *)(v4 + 72);
  unint64_t v7 = *(void *)(v4 + 80);
  uint64_t v8 = MEMORY[0x1E4FBC868];
  unint64_t v9 = 0xC000000000000000;
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v10 = *(void *)(v4 + 64);
    uint64_t v11 = *(void *)(v4 + 72);
  }
  else
  {
    uint64_t v11 = 0;
  }
  if (v5)
  {
    unint64_t v9 = *(void *)(v4 + 80);
    uint64_t v8 = *(void *)(v4 + 88);
    char v12 = *(_WORD *)(v4 + 96);
  }
  else
  {
    char v12 = 2;
  }
  if (v5) {
    char v13 = HIBYTE(*(_WORD *)(v4 + 96));
  }
  else {
    char v13 = 3;
  }
  *uint64_t v3 = v10;
  v3[1] = v11;
  v3[2] = v9;
  v3[3] = v8;
  *((unsigned char *)v3 + 32) = v12;
  *((unsigned char *)v3 + 33) = v13;
  sub_1C8CEF6AC(v5, v6, v7);
  return sub_1C8CDA088;
}

void sub_1C8CDA088(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v4 = **a1;
  uint64_t v3 = (*a1)[1];
  unint64_t v6 = (*a1)[2];
  uint64_t v5 = (*a1)[3];
  __int16 v7 = *((unsigned __int8 *)*a1 + 32);
  __int16 v8 = *((unsigned __int8 *)*a1 + 33);
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1C8CA3CF8(v3, v6);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = v2[14];
      type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
      swift_allocObject();
      uint64_t v10 = swift_retain();
      uint64_t v11 = sub_1C8D02B4C(v10);
      swift_release();
      *(void *)(v9 + 16) = v11;
      swift_release();
    }
    uint64_t v12 = *(void *)(v2[14] + 16);
    swift_beginAccess();
    uint64_t v13 = *(void *)(v12 + 64);
    uint64_t v14 = *(void *)(v12 + 72);
    unint64_t v15 = *(void *)(v12 + 80);
    *(void *)(v12 + 64) = v4;
    *(void *)(v12 + 72) = v3;
    *(void *)(v12 + 80) = v6;
    *(void *)(v12 + 88) = v5;
    *(_WORD *)(v12 + 96) = v7 | (v8 << 8);
    sub_1C8CEF708(v13, v14, v15);
    uint64_t v16 = v2[1];
    unint64_t v17 = v2[2];
    swift_bridgeObjectRelease();
    sub_1C8CA3D5C(v16, v17);
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v18 = v2[14];
      type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
      swift_allocObject();
      uint64_t v19 = swift_retain();
      uint64_t v20 = sub_1C8D02B4C(v19);
      swift_release();
      *(void *)(v18 + 16) = v20;
      swift_release();
    }
    uint64_t v21 = *(void *)(v2[14] + 16);
    swift_beginAccess();
    uint64_t v22 = *(void *)(v21 + 64);
    uint64_t v23 = *(void *)(v21 + 72);
    unint64_t v24 = *(void *)(v21 + 80);
    *(void *)(v21 + 64) = v4;
    *(void *)(v21 + 72) = v3;
    *(void *)(v21 + 80) = v6;
    *(void *)(v21 + 88) = v5;
    *(_WORD *)(v21 + 96) = v7 | (v8 << 8);
    sub_1C8CEF708(v22, v23, v24);
  }
  free(v2);
}

BOOL Google_Protobuf_MethodDescriptorProto.hasOptions.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  return *(void *)(v1 + 64) != 0;
}

Swift::Void __swiftcall Google_Protobuf_MethodDescriptorProto.clearOptions()()
{
  uint64_t v1 = v0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v2 = swift_retain();
    uint64_t v3 = sub_1C8D02B4C(v2);
    swift_release();
    *(void *)(v1 + 16) = v3;
    swift_release();
  }
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = *(void *)(v4 + 72);
  unint64_t v7 = *(void *)(v4 + 80);
  *(_OWORD *)(v4 + 64) = 0u;
  *(_OWORD *)(v4 + 80) = 0u;
  *(_WORD *)(v4 + 96) = 0;
  sub_1C8CEF708(v5, v6, v7);
}

uint64_t Google_Protobuf_MethodDescriptorProto.clientStreaming.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  return *(unsigned char *)(v1 + 98) & 1;
}

uint64_t sub_1C8CDA3A8(char *a1, uint64_t a2)
{
  char v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v4 = swift_retain();
    uint64_t v5 = sub_1C8D02B4C(v4);
    swift_release();
    *(void *)(a2 + 16) = v5;
    swift_release();
  }
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v6 + 98) = v3;
  return result;
}

uint64_t Google_Protobuf_MethodDescriptorProto.clientStreaming.setter(char a1)
{
  uint64_t v2 = v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v4 = swift_retain();
    uint64_t v5 = sub_1C8D02B4C(v4);
    swift_release();
    *(void *)(v2 + 16) = v5;
    swift_release();
  }
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v6 + 98) = a1 & 1;
  return result;
}

void (*Google_Protobuf_MethodDescriptorProto.clientStreaming.modify(void *a1))(uint64_t a1, char a2)
{
  char v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  *((unsigned char *)v3 + 80) = *(unsigned char *)(v4 + 98) & 1;
  return sub_1C8CDA560;
}

void sub_1C8CDA560(uint64_t a1, char a2)
{
  char v3 = *(void **)a1;
  char v4 = *(unsigned char *)(*(void *)a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = v3[9];
    type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v7 = swift_retain();
    uint64_t v8 = sub_1C8D02B4C(v7);
    swift_release();
    *(void *)(v6 + 16) = v8;
    swift_release();
  }
LABEL_4:
  uint64_t v9 = *(void *)(v3[9] + 16);
  swift_beginAccess();
  *(unsigned char *)(v9 + 98) = v4;
  free(v3);
}

BOOL Google_Protobuf_MethodDescriptorProto.hasClientStreaming.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  return *(unsigned char *)(v1 + 98) != 2;
}

Swift::Void __swiftcall Google_Protobuf_MethodDescriptorProto.clearClientStreaming()()
{
  uint64_t v1 = v0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v2 = swift_retain();
    uint64_t v3 = sub_1C8D02B4C(v2);
    swift_release();
    *(void *)(v1 + 16) = v3;
    swift_release();
  }
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  *(unsigned char *)(v4 + 98) = 2;
}

uint64_t Google_Protobuf_MethodDescriptorProto.serverStreaming.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  return *(unsigned char *)(v1 + 99) & 1;
}

uint64_t sub_1C8CDA75C(char *a1, uint64_t a2)
{
  char v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v4 = swift_retain();
    uint64_t v5 = sub_1C8D02B4C(v4);
    swift_release();
    *(void *)(a2 + 16) = v5;
    swift_release();
  }
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v6 + 99) = v3;
  return result;
}

uint64_t Google_Protobuf_MethodDescriptorProto.serverStreaming.setter(char a1)
{
  uint64_t v2 = v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v4 = swift_retain();
    uint64_t v5 = sub_1C8D02B4C(v4);
    swift_release();
    *(void *)(v2 + 16) = v5;
    swift_release();
  }
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v6 + 99) = a1 & 1;
  return result;
}

void (*Google_Protobuf_MethodDescriptorProto.serverStreaming.modify(void *a1))(uint64_t a1, char a2)
{
  char v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  *((unsigned char *)v3 + 80) = *(unsigned char *)(v4 + 99) & 1;
  return sub_1C8CDA914;
}

void sub_1C8CDA914(uint64_t a1, char a2)
{
  char v3 = *(void **)a1;
  char v4 = *(unsigned char *)(*(void *)a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = v3[9];
    type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v7 = swift_retain();
    uint64_t v8 = sub_1C8D02B4C(v7);
    swift_release();
    *(void *)(v6 + 16) = v8;
    swift_release();
  }
LABEL_4:
  uint64_t v9 = *(void *)(v3[9] + 16);
  swift_beginAccess();
  *(unsigned char *)(v9 + 99) = v4;
  free(v3);
}

BOOL Google_Protobuf_MethodDescriptorProto.hasServerStreaming.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  return *(unsigned char *)(v1 + 99) != 2;
}

Swift::Void __swiftcall Google_Protobuf_MethodDescriptorProto.clearServerStreaming()()
{
  uint64_t v1 = v0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v2 = swift_retain();
    uint64_t v3 = sub_1C8D02B4C(v2);
    swift_release();
    *(void *)(v1 + 16) = v3;
    swift_release();
  }
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  *(unsigned char *)(v4 + 99) = 2;
}

uint64_t (*Google_Protobuf_MethodDescriptorProto.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_MethodDescriptorProto.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_1C8CDAB10((void (*)(void))type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass, a1);
}

uint64_t sub_1C8CDAB10@<X0>(void (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  *(_OWORD *)a2 = xmmword_1C8D8AD80;
  a1(0);
  uint64_t result = swift_initStaticObject();
  *(void *)(a2 + 16) = result;
  return result;
}

uint64_t Google_Protobuf_FileOptions.javaPackage.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_beginAccess();
  if (*(void *)(v1 + 24)) {
    uint64_t v2 = *(void *)(v1 + 16);
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C8CDABC4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 24);
  swift_beginAccess();
  if (*(void *)(v3 + 24))
  {
    uint64_t v4 = *(void *)(v3 + 16);
    unint64_t v5 = *(void *)(v3 + 24);
  }
  else
  {
    uint64_t v4 = 0;
    unint64_t v5 = 0xE000000000000000;
  }
  *a2 = v4;
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CDAC34(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(a2 + 24) = sub_1C8CEF860(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(a2 + 24);
  swift_beginAccess();
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileOptions.javaPackage.setter(uint64_t a1, uint64_t a2)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v2 + 24) = sub_1C8CEF860(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v2 + 24);
  swift_beginAccess();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_FileOptions.javaPackage.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(void *)(v1 + 24);
  swift_beginAccess();
  if (*(void *)(v4 + 24))
  {
    uint64_t v5 = *(void *)(v4 + 16);
    unint64_t v6 = *(void *)(v4 + 24);
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C8CDAE38;
}

void sub_1C8CDAE38(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 72);
  uint64_t v4 = *(void *)(*(void *)a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = v2[11];
      type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
      swift_allocObject();
      uint64_t v6 = swift_retain();
      *(void *)(v5 + 24) = sub_1C8CEF860(v6);
      swift_release();
    }
    uint64_t v7 = *(void *)(v2[11] + 24);
    swift_beginAccess();
    *(void *)(v7 + 16) = v3;
    *(void *)(v7 + 24) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v8 = v2[11];
      type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
      swift_allocObject();
      uint64_t v9 = swift_retain();
      *(void *)(v8 + 24) = sub_1C8CEF860(v9);
      swift_release();
    }
    uint64_t v10 = *(void *)(v2[11] + 24);
    swift_beginAccess();
    *(void *)(v10 + 16) = v3;
    *(void *)(v10 + 24) = v4;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

BOOL Google_Protobuf_FileOptions.hasJavaPackage.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_beginAccess();
  return *(void *)(v1 + 24) != 0;
}

Swift::Void __swiftcall Google_Protobuf_FileOptions.clearJavaPackage()()
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v1 = swift_retain();
    *(void *)(v0 + 24) = sub_1C8CEF860(v1);
    swift_release();
  }
  uint64_t v2 = *(void *)(v0 + 24);
  swift_beginAccess();
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = 0;
  swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileOptions.javaOuterClassname.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_beginAccess();
  if (*(void *)(v1 + 40)) {
    uint64_t v2 = *(void *)(v1 + 32);
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C8CDB0E0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 24);
  swift_beginAccess();
  if (*(void *)(v3 + 40))
  {
    uint64_t v4 = *(void *)(v3 + 32);
    unint64_t v5 = *(void *)(v3 + 40);
  }
  else
  {
    uint64_t v4 = 0;
    unint64_t v5 = 0xE000000000000000;
  }
  *a2 = v4;
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CDB150(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(a2 + 24) = sub_1C8CEF860(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(a2 + 24);
  swift_beginAccess();
  *(void *)(v6 + 32) = v4;
  *(void *)(v6 + 40) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileOptions.javaOuterClassname.setter(uint64_t a1, uint64_t a2)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v2 + 24) = sub_1C8CEF860(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v2 + 24);
  swift_beginAccess();
  *(void *)(v6 + 32) = a1;
  *(void *)(v6 + 40) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_FileOptions.javaOuterClassname.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(void *)(v1 + 24);
  swift_beginAccess();
  if (*(void *)(v4 + 40))
  {
    uint64_t v5 = *(void *)(v4 + 32);
    unint64_t v6 = *(void *)(v4 + 40);
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C8CDB354;
}

void sub_1C8CDB354(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 72);
  uint64_t v4 = *(void *)(*(void *)a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = v2[11];
      type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
      swift_allocObject();
      uint64_t v6 = swift_retain();
      *(void *)(v5 + 24) = sub_1C8CEF860(v6);
      swift_release();
    }
    uint64_t v7 = *(void *)(v2[11] + 24);
    swift_beginAccess();
    *(void *)(v7 + 32) = v3;
    *(void *)(v7 + 40) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v8 = v2[11];
      type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
      swift_allocObject();
      uint64_t v9 = swift_retain();
      *(void *)(v8 + 24) = sub_1C8CEF860(v9);
      swift_release();
    }
    uint64_t v10 = *(void *)(v2[11] + 24);
    swift_beginAccess();
    *(void *)(v10 + 32) = v3;
    *(void *)(v10 + 40) = v4;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

BOOL Google_Protobuf_FileOptions.hasJavaOuterClassname.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_beginAccess();
  return *(void *)(v1 + 40) != 0;
}

Swift::Void __swiftcall Google_Protobuf_FileOptions.clearJavaOuterClassname()()
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v1 = swift_retain();
    *(void *)(v0 + 24) = sub_1C8CEF860(v1);
    swift_release();
  }
  uint64_t v2 = *(void *)(v0 + 24);
  swift_beginAccess();
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileOptions.javaMultipleFiles.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_beginAccess();
  return *(unsigned char *)(v1 + 48) & 1;
}

uint64_t sub_1C8CDB5D8(char *a1, uint64_t a2)
{
  char v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v4 = swift_retain();
    *(void *)(a2 + 24) = sub_1C8CEF860(v4);
    swift_release();
  }
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v5 + 48) = v3;
  return result;
}

uint64_t Google_Protobuf_FileOptions.javaMultipleFiles.setter(char a1)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v3 = swift_retain();
    *(void *)(v1 + 24) = sub_1C8CEF860(v3);
    swift_release();
  }
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v4 + 48) = a1 & 1;
  return result;
}

void (*Google_Protobuf_FileOptions.javaMultipleFiles.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(void *)(v1 + 24);
  swift_beginAccess();
  *((unsigned char *)v3 + 80) = *(unsigned char *)(v4 + 48) & 1;
  return sub_1C8CDB788;
}

void sub_1C8CDB788(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  char v4 = *(unsigned char *)(*(void *)a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = v3[9];
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v7 = swift_retain();
    *(void *)(v6 + 24) = sub_1C8CEF860(v7);
    swift_release();
  }
LABEL_4:
  uint64_t v8 = *(void *)(v3[9] + 24);
  swift_beginAccess();
  *(unsigned char *)(v8 + 48) = v4;
  free(v3);
}

BOOL Google_Protobuf_FileOptions.hasJavaMultipleFiles.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_beginAccess();
  return *(unsigned char *)(v1 + 48) != 2;
}

Swift::Void __swiftcall Google_Protobuf_FileOptions.clearJavaMultipleFiles()()
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v1 = swift_retain();
    *(void *)(v0 + 24) = sub_1C8CEF860(v1);
    swift_release();
  }
  uint64_t v2 = *(void *)(v0 + 24);
  swift_beginAccess();
  *(unsigned char *)(v2 + 48) = 2;
}

uint64_t Google_Protobuf_FileOptions.javaGenerateEqualsAndHash.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_beginAccess();
  return *(unsigned char *)(v1 + 49) & 1;
}

uint64_t sub_1C8CDB97C(char *a1, uint64_t a2)
{
  char v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v4 = swift_retain();
    *(void *)(a2 + 24) = sub_1C8CEF860(v4);
    swift_release();
  }
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v5 + 49) = v3;
  return result;
}

uint64_t Google_Protobuf_FileOptions.javaGenerateEqualsAndHash.setter(char a1)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v3 = swift_retain();
    *(void *)(v1 + 24) = sub_1C8CEF860(v3);
    swift_release();
  }
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v4 + 49) = a1 & 1;
  return result;
}

void (*Google_Protobuf_FileOptions.javaGenerateEqualsAndHash.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(void *)(v1 + 24);
  swift_beginAccess();
  *((unsigned char *)v3 + 80) = *(unsigned char *)(v4 + 49) & 1;
  return sub_1C8CDBB2C;
}

void sub_1C8CDBB2C(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  char v4 = *(unsigned char *)(*(void *)a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = v3[9];
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v7 = swift_retain();
    *(void *)(v6 + 24) = sub_1C8CEF860(v7);
    swift_release();
  }
LABEL_4:
  uint64_t v8 = *(void *)(v3[9] + 24);
  swift_beginAccess();
  *(unsigned char *)(v8 + 49) = v4;
  free(v3);
}

BOOL Google_Protobuf_FileOptions.hasJavaGenerateEqualsAndHash.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_beginAccess();
  return *(unsigned char *)(v1 + 49) != 2;
}

Swift::Void __swiftcall Google_Protobuf_FileOptions.clearJavaGenerateEqualsAndHash()()
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v1 = swift_retain();
    *(void *)(v0 + 24) = sub_1C8CEF860(v1);
    swift_release();
  }
  uint64_t v2 = *(void *)(v0 + 24);
  swift_beginAccess();
  *(unsigned char *)(v2 + 49) = 2;
}

uint64_t Google_Protobuf_FileOptions.javaStringCheckUtf8.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_beginAccess();
  return *(unsigned char *)(v1 + 50) & 1;
}

uint64_t sub_1C8CDBD20(char *a1, uint64_t a2)
{
  char v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v4 = swift_retain();
    *(void *)(a2 + 24) = sub_1C8CEF860(v4);
    swift_release();
  }
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v5 + 50) = v3;
  return result;
}

uint64_t Google_Protobuf_FileOptions.javaStringCheckUtf8.setter(char a1)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v3 = swift_retain();
    *(void *)(v1 + 24) = sub_1C8CEF860(v3);
    swift_release();
  }
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v4 + 50) = a1 & 1;
  return result;
}

void (*Google_Protobuf_FileOptions.javaStringCheckUtf8.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(void *)(v1 + 24);
  swift_beginAccess();
  *((unsigned char *)v3 + 80) = *(unsigned char *)(v4 + 50) & 1;
  return sub_1C8CDBED0;
}

void sub_1C8CDBED0(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  char v4 = *(unsigned char *)(*(void *)a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = v3[9];
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v7 = swift_retain();
    *(void *)(v6 + 24) = sub_1C8CEF860(v7);
    swift_release();
  }
LABEL_4:
  uint64_t v8 = *(void *)(v3[9] + 24);
  swift_beginAccess();
  *(unsigned char *)(v8 + 50) = v4;
  free(v3);
}

BOOL Google_Protobuf_FileOptions.hasJavaStringCheckUtf8.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_beginAccess();
  return *(unsigned char *)(v1 + 50) != 2;
}

Swift::Void __swiftcall Google_Protobuf_FileOptions.clearJavaStringCheckUtf8()()
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v1 = swift_retain();
    *(void *)(v0 + 24) = sub_1C8CEF860(v1);
    swift_release();
  }
  uint64_t v2 = *(void *)(v0 + 24);
  swift_beginAccess();
  *(unsigned char *)(v2 + 50) = 2;
}

uint64_t Google_Protobuf_FileOptions.optimizeFor.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t result = swift_beginAccess();
  int v5 = *(unsigned __int8 *)(v3 + 51);
  if (v5 == 3) {
    LOBYTE(v5) = 0;
  }
  *a1 = v5;
  return result;
}

uint64_t sub_1C8CDC0D0(char *a1, uint64_t a2)
{
  char v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v4 = swift_retain();
    *(void *)(a2 + 24) = sub_1C8CEF860(v4);
    swift_release();
  }
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v5 + 51) = v3;
  return result;
}

uint64_t Google_Protobuf_FileOptions.optimizeFor.setter(char *a1)
{
  char v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v3 = swift_retain();
    *(void *)(v1 + 24) = sub_1C8CEF860(v3);
    swift_release();
  }
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v4 + 51) = v2;
  return result;
}

void (*Google_Protobuf_FileOptions.optimizeFor.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(void *)(v1 + 24);
  swift_beginAccess();
  int v5 = *(unsigned __int8 *)(v4 + 51);
  if (v5 == 3) {
    LOBYTE(v5) = 0;
  }
  *((unsigned char *)v3 + 80) = v5;
  return sub_1C8CDC280;
}

void sub_1C8CDC280(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  char v4 = *(unsigned char *)(*(void *)a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = v3[9];
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v7 = swift_retain();
    *(void *)(v6 + 24) = sub_1C8CEF860(v7);
    swift_release();
  }
LABEL_4:
  uint64_t v8 = (unsigned char *)(*(void *)(v3[9] + 24) + 51);
  swift_beginAccess();
  *uint64_t v8 = v4;
  free(v3);
}

BOOL Google_Protobuf_FileOptions.hasOptimizeFor.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_beginAccess();
  return *(unsigned char *)(v1 + 51) != 3;
}

Swift::Void __swiftcall Google_Protobuf_FileOptions.clearOptimizeFor()()
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v1 = swift_retain();
    *(void *)(v0 + 24) = sub_1C8CEF860(v1);
    swift_release();
  }
  uint64_t v2 = *(void *)(v0 + 24);
  swift_beginAccess();
  *(unsigned char *)(v2 + 51) = 3;
}

uint64_t Google_Protobuf_FileOptions.goPackage.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_beginAccess();
  if (*(void *)(v1 + 64)) {
    uint64_t v2 = *(void *)(v1 + 56);
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C8CDC4A0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 24);
  swift_beginAccess();
  if (*(void *)(v3 + 64))
  {
    uint64_t v4 = *(void *)(v3 + 56);
    unint64_t v5 = *(void *)(v3 + 64);
  }
  else
  {
    uint64_t v4 = 0;
    unint64_t v5 = 0xE000000000000000;
  }
  *a2 = v4;
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CDC510(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(a2 + 24) = sub_1C8CEF860(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(a2 + 24);
  swift_beginAccess();
  *(void *)(v6 + 56) = v4;
  *(void *)(v6 + 64) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileOptions.goPackage.setter(uint64_t a1, uint64_t a2)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v2 + 24) = sub_1C8CEF860(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v2 + 24);
  swift_beginAccess();
  *(void *)(v6 + 56) = a1;
  *(void *)(v6 + 64) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_FileOptions.goPackage.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(void *)(v1 + 24);
  swift_beginAccess();
  if (*(void *)(v4 + 64))
  {
    uint64_t v5 = *(void *)(v4 + 56);
    unint64_t v6 = *(void *)(v4 + 64);
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C8CDC714;
}

void sub_1C8CDC714(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 72);
  uint64_t v4 = *(void *)(*(void *)a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = v2[11];
      type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
      swift_allocObject();
      uint64_t v6 = swift_retain();
      *(void *)(v5 + 24) = sub_1C8CEF860(v6);
      swift_release();
    }
    uint64_t v7 = *(void *)(v2[11] + 24);
    swift_beginAccess();
    *(void *)(v7 + 56) = v3;
    *(void *)(v7 + 64) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v8 = v2[11];
      type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
      swift_allocObject();
      uint64_t v9 = swift_retain();
      *(void *)(v8 + 24) = sub_1C8CEF860(v9);
      swift_release();
    }
    uint64_t v10 = *(void *)(v2[11] + 24);
    swift_beginAccess();
    *(void *)(v10 + 56) = v3;
    *(void *)(v10 + 64) = v4;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

BOOL Google_Protobuf_FileOptions.hasGoPackage.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_beginAccess();
  return *(void *)(v1 + 64) != 0;
}

Swift::Void __swiftcall Google_Protobuf_FileOptions.clearGoPackage()()
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v1 = swift_retain();
    *(void *)(v0 + 24) = sub_1C8CEF860(v1);
    swift_release();
  }
  uint64_t v2 = *(void *)(v0 + 24);
  swift_beginAccess();
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = 0;
  swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileOptions.ccGenericServices.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_beginAccess();
  return *(unsigned char *)(v1 + 72) & 1;
}

uint64_t sub_1C8CDC998(char *a1, uint64_t a2)
{
  char v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v4 = swift_retain();
    *(void *)(a2 + 24) = sub_1C8CEF860(v4);
    swift_release();
  }
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v5 + 72) = v3;
  return result;
}

uint64_t Google_Protobuf_FileOptions.ccGenericServices.setter(char a1)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v3 = swift_retain();
    *(void *)(v1 + 24) = sub_1C8CEF860(v3);
    swift_release();
  }
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v4 + 72) = a1 & 1;
  return result;
}

void (*Google_Protobuf_FileOptions.ccGenericServices.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(void *)(v1 + 24);
  swift_beginAccess();
  *((unsigned char *)v3 + 80) = *(unsigned char *)(v4 + 72) & 1;
  return sub_1C8CDCB48;
}

void sub_1C8CDCB48(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  char v4 = *(unsigned char *)(*(void *)a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = v3[9];
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v7 = swift_retain();
    *(void *)(v6 + 24) = sub_1C8CEF860(v7);
    swift_release();
  }
LABEL_4:
  uint64_t v8 = *(void *)(v3[9] + 24);
  swift_beginAccess();
  *(unsigned char *)(v8 + 72) = v4;
  free(v3);
}

BOOL Google_Protobuf_FileOptions.hasCcGenericServices.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_beginAccess();
  return *(unsigned char *)(v1 + 72) != 2;
}

Swift::Void __swiftcall Google_Protobuf_FileOptions.clearCcGenericServices()()
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v1 = swift_retain();
    *(void *)(v0 + 24) = sub_1C8CEF860(v1);
    swift_release();
  }
  uint64_t v2 = *(void *)(v0 + 24);
  swift_beginAccess();
  *(unsigned char *)(v2 + 72) = 2;
}

uint64_t Google_Protobuf_FileOptions.javaGenericServices.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_beginAccess();
  return *(unsigned char *)(v1 + 73) & 1;
}

uint64_t sub_1C8CDCD3C(char *a1, uint64_t a2)
{
  char v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v4 = swift_retain();
    *(void *)(a2 + 24) = sub_1C8CEF860(v4);
    swift_release();
  }
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v5 + 73) = v3;
  return result;
}

uint64_t Google_Protobuf_FileOptions.javaGenericServices.setter(char a1)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v3 = swift_retain();
    *(void *)(v1 + 24) = sub_1C8CEF860(v3);
    swift_release();
  }
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v4 + 73) = a1 & 1;
  return result;
}

void (*Google_Protobuf_FileOptions.javaGenericServices.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(void *)(v1 + 24);
  swift_beginAccess();
  *((unsigned char *)v3 + 80) = *(unsigned char *)(v4 + 73) & 1;
  return sub_1C8CDCEEC;
}

void sub_1C8CDCEEC(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  char v4 = *(unsigned char *)(*(void *)a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = v3[9];
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v7 = swift_retain();
    *(void *)(v6 + 24) = sub_1C8CEF860(v7);
    swift_release();
  }
LABEL_4:
  uint64_t v8 = *(void *)(v3[9] + 24);
  swift_beginAccess();
  *(unsigned char *)(v8 + 73) = v4;
  free(v3);
}

BOOL Google_Protobuf_FileOptions.hasJavaGenericServices.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_beginAccess();
  return *(unsigned char *)(v1 + 73) != 2;
}

Swift::Void __swiftcall Google_Protobuf_FileOptions.clearJavaGenericServices()()
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v1 = swift_retain();
    *(void *)(v0 + 24) = sub_1C8CEF860(v1);
    swift_release();
  }
  uint64_t v2 = *(void *)(v0 + 24);
  swift_beginAccess();
  *(unsigned char *)(v2 + 73) = 2;
}

uint64_t Google_Protobuf_FileOptions.pyGenericServices.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_beginAccess();
  return *(unsigned char *)(v1 + 74) & 1;
}

uint64_t sub_1C8CDD0E0(char *a1, uint64_t a2)
{
  char v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v4 = swift_retain();
    *(void *)(a2 + 24) = sub_1C8CEF860(v4);
    swift_release();
  }
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v5 + 74) = v3;
  return result;
}

uint64_t Google_Protobuf_FileOptions.pyGenericServices.setter(char a1)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v3 = swift_retain();
    *(void *)(v1 + 24) = sub_1C8CEF860(v3);
    swift_release();
  }
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v4 + 74) = a1 & 1;
  return result;
}

void (*Google_Protobuf_FileOptions.pyGenericServices.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(void *)(v1 + 24);
  swift_beginAccess();
  *((unsigned char *)v3 + 80) = *(unsigned char *)(v4 + 74) & 1;
  return sub_1C8CDD290;
}

void sub_1C8CDD290(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  char v4 = *(unsigned char *)(*(void *)a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = v3[9];
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v7 = swift_retain();
    *(void *)(v6 + 24) = sub_1C8CEF860(v7);
    swift_release();
  }
LABEL_4:
  uint64_t v8 = *(void *)(v3[9] + 24);
  swift_beginAccess();
  *(unsigned char *)(v8 + 74) = v4;
  free(v3);
}

BOOL Google_Protobuf_FileOptions.hasPyGenericServices.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_beginAccess();
  return *(unsigned char *)(v1 + 74) != 2;
}

Swift::Void __swiftcall Google_Protobuf_FileOptions.clearPyGenericServices()()
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v1 = swift_retain();
    *(void *)(v0 + 24) = sub_1C8CEF860(v1);
    swift_release();
  }
  uint64_t v2 = *(void *)(v0 + 24);
  swift_beginAccess();
  *(unsigned char *)(v2 + 74) = 2;
}

uint64_t Google_Protobuf_FileOptions.phpGenericServices.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_beginAccess();
  return *(unsigned char *)(v1 + 75) & 1;
}

uint64_t sub_1C8CDD484(char *a1, uint64_t a2)
{
  char v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v4 = swift_retain();
    *(void *)(a2 + 24) = sub_1C8CEF860(v4);
    swift_release();
  }
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v5 + 75) = v3;
  return result;
}

uint64_t Google_Protobuf_FileOptions.phpGenericServices.setter(char a1)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v3 = swift_retain();
    *(void *)(v1 + 24) = sub_1C8CEF860(v3);
    swift_release();
  }
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v4 + 75) = a1 & 1;
  return result;
}

void (*Google_Protobuf_FileOptions.phpGenericServices.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(void *)(v1 + 24);
  swift_beginAccess();
  *((unsigned char *)v3 + 80) = *(unsigned char *)(v4 + 75) & 1;
  return sub_1C8CDD634;
}

void sub_1C8CDD634(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  char v4 = *(unsigned char *)(*(void *)a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = v3[9];
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v7 = swift_retain();
    *(void *)(v6 + 24) = sub_1C8CEF860(v7);
    swift_release();
  }
LABEL_4:
  uint64_t v8 = *(void *)(v3[9] + 24);
  swift_beginAccess();
  *(unsigned char *)(v8 + 75) = v4;
  free(v3);
}

BOOL Google_Protobuf_FileOptions.hasPhpGenericServices.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_beginAccess();
  return *(unsigned char *)(v1 + 75) != 2;
}

Swift::Void __swiftcall Google_Protobuf_FileOptions.clearPhpGenericServices()()
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v1 = swift_retain();
    *(void *)(v0 + 24) = sub_1C8CEF860(v1);
    swift_release();
  }
  uint64_t v2 = *(void *)(v0 + 24);
  swift_beginAccess();
  *(unsigned char *)(v2 + 75) = 2;
}

uint64_t Google_Protobuf_FileOptions.deprecated.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_beginAccess();
  return *(unsigned char *)(v1 + 76) & 1;
}

uint64_t sub_1C8CDD828(char *a1, uint64_t a2)
{
  char v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v4 = swift_retain();
    *(void *)(a2 + 24) = sub_1C8CEF860(v4);
    swift_release();
  }
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v5 + 76) = v3;
  return result;
}

uint64_t Google_Protobuf_FileOptions.deprecated.setter(char a1)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v3 = swift_retain();
    *(void *)(v1 + 24) = sub_1C8CEF860(v3);
    swift_release();
  }
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v4 + 76) = a1 & 1;
  return result;
}

void (*Google_Protobuf_FileOptions.deprecated.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(void *)(v1 + 24);
  swift_beginAccess();
  *((unsigned char *)v3 + 80) = *(unsigned char *)(v4 + 76) & 1;
  return sub_1C8CDD9D8;
}

void sub_1C8CDD9D8(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  char v4 = *(unsigned char *)(*(void *)a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = v3[9];
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v7 = swift_retain();
    *(void *)(v6 + 24) = sub_1C8CEF860(v7);
    swift_release();
  }
LABEL_4:
  uint64_t v8 = *(void *)(v3[9] + 24);
  swift_beginAccess();
  *(unsigned char *)(v8 + 76) = v4;
  free(v3);
}

BOOL Google_Protobuf_FileOptions.hasDeprecated.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_beginAccess();
  return *(unsigned char *)(v1 + 76) != 2;
}

Swift::Void __swiftcall Google_Protobuf_FileOptions.clearDeprecated()()
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v1 = swift_retain();
    *(void *)(v0 + 24) = sub_1C8CEF860(v1);
    swift_release();
  }
  uint64_t v2 = *(void *)(v0 + 24);
  swift_beginAccess();
  *(unsigned char *)(v2 + 76) = 2;
}

uint64_t Google_Protobuf_FileOptions.ccEnableArenas.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_beginAccess();
  return *(unsigned char *)(v1 + 77) & 1;
}

uint64_t sub_1C8CDDBCC(char *a1, uint64_t a2)
{
  char v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v4 = swift_retain();
    *(void *)(a2 + 24) = sub_1C8CEF860(v4);
    swift_release();
  }
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v5 + 77) = v3;
  return result;
}

uint64_t Google_Protobuf_FileOptions.ccEnableArenas.setter(char a1)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v3 = swift_retain();
    *(void *)(v1 + 24) = sub_1C8CEF860(v3);
    swift_release();
  }
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v4 + 77) = a1 & 1;
  return result;
}

void (*Google_Protobuf_FileOptions.ccEnableArenas.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(void *)(v1 + 24);
  swift_beginAccess();
  *((unsigned char *)v3 + 80) = *(unsigned char *)(v4 + 77) & 1;
  return sub_1C8CDDD7C;
}

void sub_1C8CDDD7C(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  char v4 = *(unsigned char *)(*(void *)a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = v3[9];
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v7 = swift_retain();
    *(void *)(v6 + 24) = sub_1C8CEF860(v7);
    swift_release();
  }
LABEL_4:
  uint64_t v8 = *(void *)(v3[9] + 24);
  swift_beginAccess();
  *(unsigned char *)(v8 + 77) = v4;
  free(v3);
}

BOOL Google_Protobuf_FileOptions.hasCcEnableArenas.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_beginAccess();
  return *(unsigned char *)(v1 + 77) != 2;
}

Swift::Void __swiftcall Google_Protobuf_FileOptions.clearCcEnableArenas()()
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v1 = swift_retain();
    *(void *)(v0 + 24) = sub_1C8CEF860(v1);
    swift_release();
  }
  uint64_t v2 = *(void *)(v0 + 24);
  swift_beginAccess();
  *(unsigned char *)(v2 + 77) = 2;
}

uint64_t Google_Protobuf_FileOptions.objcClassPrefix.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_beginAccess();
  if (*(void *)(v1 + 88)) {
    uint64_t v2 = *(void *)(v1 + 80);
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C8CDDF94@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 24);
  swift_beginAccess();
  if (*(void *)(v3 + 88))
  {
    uint64_t v4 = *(void *)(v3 + 80);
    unint64_t v5 = *(void *)(v3 + 88);
  }
  else
  {
    uint64_t v4 = 0;
    unint64_t v5 = 0xE000000000000000;
  }
  *a2 = v4;
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CDE004(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(a2 + 24) = sub_1C8CEF860(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(a2 + 24);
  swift_beginAccess();
  *(void *)(v6 + 80) = v4;
  *(void *)(v6 + 88) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileOptions.objcClassPrefix.setter(uint64_t a1, uint64_t a2)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v2 + 24) = sub_1C8CEF860(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v2 + 24);
  swift_beginAccess();
  *(void *)(v6 + 80) = a1;
  *(void *)(v6 + 88) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_FileOptions.objcClassPrefix.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(void *)(v1 + 24);
  swift_beginAccess();
  if (*(void *)(v4 + 88))
  {
    uint64_t v5 = *(void *)(v4 + 80);
    unint64_t v6 = *(void *)(v4 + 88);
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C8CDE208;
}

void sub_1C8CDE208(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 72);
  uint64_t v4 = *(void *)(*(void *)a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = v2[11];
      type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
      swift_allocObject();
      uint64_t v6 = swift_retain();
      *(void *)(v5 + 24) = sub_1C8CEF860(v6);
      swift_release();
    }
    uint64_t v7 = *(void *)(v2[11] + 24);
    swift_beginAccess();
    *(void *)(v7 + 80) = v3;
    *(void *)(v7 + 88) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v8 = v2[11];
      type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
      swift_allocObject();
      uint64_t v9 = swift_retain();
      *(void *)(v8 + 24) = sub_1C8CEF860(v9);
      swift_release();
    }
    uint64_t v10 = *(void *)(v2[11] + 24);
    swift_beginAccess();
    *(void *)(v10 + 80) = v3;
    *(void *)(v10 + 88) = v4;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

BOOL Google_Protobuf_FileOptions.hasObjcClassPrefix.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_beginAccess();
  return *(void *)(v1 + 88) != 0;
}

Swift::Void __swiftcall Google_Protobuf_FileOptions.clearObjcClassPrefix()()
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v1 = swift_retain();
    *(void *)(v0 + 24) = sub_1C8CEF860(v1);
    swift_release();
  }
  uint64_t v2 = *(void *)(v0 + 24);
  swift_beginAccess();
  *(void *)(v2 + 80) = 0;
  *(void *)(v2 + 88) = 0;
  swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileOptions.csharpNamespace.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_beginAccess();
  if (*(void *)(v1 + 104)) {
    uint64_t v2 = *(void *)(v1 + 96);
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C8CDE4B0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 24);
  swift_beginAccess();
  if (*(void *)(v3 + 104))
  {
    uint64_t v4 = *(void *)(v3 + 96);
    unint64_t v5 = *(void *)(v3 + 104);
  }
  else
  {
    uint64_t v4 = 0;
    unint64_t v5 = 0xE000000000000000;
  }
  *a2 = v4;
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CDE520(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(a2 + 24) = sub_1C8CEF860(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(a2 + 24);
  swift_beginAccess();
  *(void *)(v6 + 96) = v4;
  *(void *)(v6 + 104) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileOptions.csharpNamespace.setter(uint64_t a1, uint64_t a2)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v2 + 24) = sub_1C8CEF860(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v2 + 24);
  swift_beginAccess();
  *(void *)(v6 + 96) = a1;
  *(void *)(v6 + 104) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_FileOptions.csharpNamespace.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(void *)(v1 + 24);
  swift_beginAccess();
  if (*(void *)(v4 + 104))
  {
    uint64_t v5 = *(void *)(v4 + 96);
    unint64_t v6 = *(void *)(v4 + 104);
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C8CDE724;
}

void sub_1C8CDE724(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 72);
  uint64_t v4 = *(void *)(*(void *)a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = v2[11];
      type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
      swift_allocObject();
      uint64_t v6 = swift_retain();
      *(void *)(v5 + 24) = sub_1C8CEF860(v6);
      swift_release();
    }
    uint64_t v7 = *(void *)(v2[11] + 24);
    swift_beginAccess();
    *(void *)(v7 + 96) = v3;
    *(void *)(v7 + 104) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v8 = v2[11];
      type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
      swift_allocObject();
      uint64_t v9 = swift_retain();
      *(void *)(v8 + 24) = sub_1C8CEF860(v9);
      swift_release();
    }
    uint64_t v10 = *(void *)(v2[11] + 24);
    swift_beginAccess();
    *(void *)(v10 + 96) = v3;
    *(void *)(v10 + 104) = v4;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

BOOL Google_Protobuf_FileOptions.hasCsharpNamespace.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_beginAccess();
  return *(void *)(v1 + 104) != 0;
}

Swift::Void __swiftcall Google_Protobuf_FileOptions.clearCsharpNamespace()()
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v1 = swift_retain();
    *(void *)(v0 + 24) = sub_1C8CEF860(v1);
    swift_release();
  }
  uint64_t v2 = *(void *)(v0 + 24);
  swift_beginAccess();
  *(void *)(v2 + 96) = 0;
  *(void *)(v2 + 104) = 0;
  swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileOptions.swiftPrefix.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_beginAccess();
  if (*(void *)(v1 + 120)) {
    uint64_t v2 = *(void *)(v1 + 112);
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C8CDE9CC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 24);
  swift_beginAccess();
  if (*(void *)(v3 + 120))
  {
    uint64_t v4 = *(void *)(v3 + 112);
    unint64_t v5 = *(void *)(v3 + 120);
  }
  else
  {
    uint64_t v4 = 0;
    unint64_t v5 = 0xE000000000000000;
  }
  *a2 = v4;
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CDEA3C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(a2 + 24) = sub_1C8CEF860(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(a2 + 24);
  swift_beginAccess();
  *(void *)(v6 + 112) = v4;
  *(void *)(v6 + 120) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileOptions.swiftPrefix.setter(uint64_t a1, uint64_t a2)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v2 + 24) = sub_1C8CEF860(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v2 + 24);
  swift_beginAccess();
  *(void *)(v6 + 112) = a1;
  *(void *)(v6 + 120) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_FileOptions.swiftPrefix.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(void *)(v1 + 24);
  swift_beginAccess();
  if (*(void *)(v4 + 120))
  {
    uint64_t v5 = *(void *)(v4 + 112);
    unint64_t v6 = *(void *)(v4 + 120);
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C8CDEC40;
}

void sub_1C8CDEC40(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 72);
  uint64_t v4 = *(void *)(*(void *)a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = v2[11];
      type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
      swift_allocObject();
      uint64_t v6 = swift_retain();
      *(void *)(v5 + 24) = sub_1C8CEF860(v6);
      swift_release();
    }
    uint64_t v7 = *(void *)(v2[11] + 24);
    swift_beginAccess();
    *(void *)(v7 + 112) = v3;
    *(void *)(v7 + 120) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v8 = v2[11];
      type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
      swift_allocObject();
      uint64_t v9 = swift_retain();
      *(void *)(v8 + 24) = sub_1C8CEF860(v9);
      swift_release();
    }
    uint64_t v10 = *(void *)(v2[11] + 24);
    swift_beginAccess();
    *(void *)(v10 + 112) = v3;
    *(void *)(v10 + 120) = v4;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

BOOL Google_Protobuf_FileOptions.hasSwiftPrefix.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_beginAccess();
  return *(void *)(v1 + 120) != 0;
}

Swift::Void __swiftcall Google_Protobuf_FileOptions.clearSwiftPrefix()()
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v1 = swift_retain();
    *(void *)(v0 + 24) = sub_1C8CEF860(v1);
    swift_release();
  }
  uint64_t v2 = *(void *)(v0 + 24);
  swift_beginAccess();
  *(void *)(v2 + 112) = 0;
  *(void *)(v2 + 120) = 0;
  swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileOptions.phpClassPrefix.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_beginAccess();
  if (*(void *)(v1 + 136)) {
    uint64_t v2 = *(void *)(v1 + 128);
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C8CDEEE8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 24);
  swift_beginAccess();
  if (*(void *)(v3 + 136))
  {
    uint64_t v4 = *(void *)(v3 + 128);
    unint64_t v5 = *(void *)(v3 + 136);
  }
  else
  {
    uint64_t v4 = 0;
    unint64_t v5 = 0xE000000000000000;
  }
  *a2 = v4;
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CDEF58(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(a2 + 24) = sub_1C8CEF860(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(a2 + 24);
  swift_beginAccess();
  *(void *)(v6 + 128) = v4;
  *(void *)(v6 + 136) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileOptions.phpClassPrefix.setter(uint64_t a1, uint64_t a2)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v2 + 24) = sub_1C8CEF860(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v2 + 24);
  swift_beginAccess();
  *(void *)(v6 + 128) = a1;
  *(void *)(v6 + 136) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_FileOptions.phpClassPrefix.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(void *)(v1 + 24);
  swift_beginAccess();
  if (*(void *)(v4 + 136))
  {
    uint64_t v5 = *(void *)(v4 + 128);
    unint64_t v6 = *(void *)(v4 + 136);
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C8CDF15C;
}

void sub_1C8CDF15C(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 72);
  uint64_t v4 = *(void *)(*(void *)a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = v2[11];
      type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
      swift_allocObject();
      uint64_t v6 = swift_retain();
      *(void *)(v5 + 24) = sub_1C8CEF860(v6);
      swift_release();
    }
    uint64_t v7 = *(void *)(v2[11] + 24);
    swift_beginAccess();
    *(void *)(v7 + 128) = v3;
    *(void *)(v7 + 136) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v8 = v2[11];
      type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
      swift_allocObject();
      uint64_t v9 = swift_retain();
      *(void *)(v8 + 24) = sub_1C8CEF860(v9);
      swift_release();
    }
    uint64_t v10 = *(void *)(v2[11] + 24);
    swift_beginAccess();
    *(void *)(v10 + 128) = v3;
    *(void *)(v10 + 136) = v4;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

BOOL Google_Protobuf_FileOptions.hasPhpClassPrefix.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_beginAccess();
  return *(void *)(v1 + 136) != 0;
}

Swift::Void __swiftcall Google_Protobuf_FileOptions.clearPhpClassPrefix()()
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v1 = swift_retain();
    *(void *)(v0 + 24) = sub_1C8CEF860(v1);
    swift_release();
  }
  uint64_t v2 = *(void *)(v0 + 24);
  swift_beginAccess();
  *(void *)(v2 + 128) = 0;
  *(void *)(v2 + 136) = 0;
  swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileOptions.phpNamespace.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_beginAccess();
  if (*(void *)(v1 + 152)) {
    uint64_t v2 = *(void *)(v1 + 144);
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C8CDF404@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 24);
  swift_beginAccess();
  if (*(void *)(v3 + 152))
  {
    uint64_t v4 = *(void *)(v3 + 144);
    unint64_t v5 = *(void *)(v3 + 152);
  }
  else
  {
    uint64_t v4 = 0;
    unint64_t v5 = 0xE000000000000000;
  }
  *a2 = v4;
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CDF474(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(a2 + 24) = sub_1C8CEF860(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(a2 + 24);
  swift_beginAccess();
  *(void *)(v6 + 144) = v4;
  *(void *)(v6 + 152) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileOptions.phpNamespace.setter(uint64_t a1, uint64_t a2)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v2 + 24) = sub_1C8CEF860(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v2 + 24);
  swift_beginAccess();
  *(void *)(v6 + 144) = a1;
  *(void *)(v6 + 152) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_FileOptions.phpNamespace.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(void *)(v1 + 24);
  swift_beginAccess();
  if (*(void *)(v4 + 152))
  {
    uint64_t v5 = *(void *)(v4 + 144);
    unint64_t v6 = *(void *)(v4 + 152);
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C8CDF678;
}

void sub_1C8CDF678(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 72);
  uint64_t v4 = *(void *)(*(void *)a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = v2[11];
      type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
      swift_allocObject();
      uint64_t v6 = swift_retain();
      *(void *)(v5 + 24) = sub_1C8CEF860(v6);
      swift_release();
    }
    uint64_t v7 = *(void *)(v2[11] + 24);
    swift_beginAccess();
    *(void *)(v7 + 144) = v3;
    *(void *)(v7 + 152) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v8 = v2[11];
      type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
      swift_allocObject();
      uint64_t v9 = swift_retain();
      *(void *)(v8 + 24) = sub_1C8CEF860(v9);
      swift_release();
    }
    uint64_t v10 = *(void *)(v2[11] + 24);
    swift_beginAccess();
    *(void *)(v10 + 144) = v3;
    *(void *)(v10 + 152) = v4;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

BOOL Google_Protobuf_FileOptions.hasPhpNamespace.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_beginAccess();
  return *(void *)(v1 + 152) != 0;
}

Swift::Void __swiftcall Google_Protobuf_FileOptions.clearPhpNamespace()()
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v1 = swift_retain();
    *(void *)(v0 + 24) = sub_1C8CEF860(v1);
    swift_release();
  }
  uint64_t v2 = *(void *)(v0 + 24);
  swift_beginAccess();
  *(void *)(v2 + 144) = 0;
  *(void *)(v2 + 152) = 0;
  swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileOptions.phpMetadataNamespace.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_beginAccess();
  if (*(void *)(v1 + 168)) {
    uint64_t v2 = *(void *)(v1 + 160);
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C8CDF920@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 24);
  swift_beginAccess();
  if (*(void *)(v3 + 168))
  {
    uint64_t v4 = *(void *)(v3 + 160);
    unint64_t v5 = *(void *)(v3 + 168);
  }
  else
  {
    uint64_t v4 = 0;
    unint64_t v5 = 0xE000000000000000;
  }
  *a2 = v4;
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CDF990(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(a2 + 24) = sub_1C8CEF860(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(a2 + 24);
  swift_beginAccess();
  *(void *)(v6 + 160) = v4;
  *(void *)(v6 + 168) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileOptions.phpMetadataNamespace.setter(uint64_t a1, uint64_t a2)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v2 + 24) = sub_1C8CEF860(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v2 + 24);
  swift_beginAccess();
  *(void *)(v6 + 160) = a1;
  *(void *)(v6 + 168) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_FileOptions.phpMetadataNamespace.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(void *)(v1 + 24);
  swift_beginAccess();
  if (*(void *)(v4 + 168))
  {
    uint64_t v5 = *(void *)(v4 + 160);
    unint64_t v6 = *(void *)(v4 + 168);
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C8CDFB94;
}

void sub_1C8CDFB94(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 72);
  uint64_t v4 = *(void *)(*(void *)a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = v2[11];
      type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
      swift_allocObject();
      uint64_t v6 = swift_retain();
      *(void *)(v5 + 24) = sub_1C8CEF860(v6);
      swift_release();
    }
    uint64_t v7 = *(void *)(v2[11] + 24);
    swift_beginAccess();
    *(void *)(v7 + 160) = v3;
    *(void *)(v7 + 168) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v8 = v2[11];
      type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
      swift_allocObject();
      uint64_t v9 = swift_retain();
      *(void *)(v8 + 24) = sub_1C8CEF860(v9);
      swift_release();
    }
    uint64_t v10 = *(void *)(v2[11] + 24);
    swift_beginAccess();
    *(void *)(v10 + 160) = v3;
    *(void *)(v10 + 168) = v4;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

BOOL Google_Protobuf_FileOptions.hasPhpMetadataNamespace.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_beginAccess();
  return *(void *)(v1 + 168) != 0;
}

Swift::Void __swiftcall Google_Protobuf_FileOptions.clearPhpMetadataNamespace()()
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v1 = swift_retain();
    *(void *)(v0 + 24) = sub_1C8CEF860(v1);
    swift_release();
  }
  uint64_t v2 = *(void *)(v0 + 24);
  swift_beginAccess();
  *(void *)(v2 + 160) = 0;
  *(void *)(v2 + 168) = 0;
  swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileOptions.rubyPackage.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_beginAccess();
  if (*(void *)(v1 + 184)) {
    uint64_t v2 = *(void *)(v1 + 176);
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C8CDFE3C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 24);
  swift_beginAccess();
  if (*(void *)(v3 + 184))
  {
    uint64_t v4 = *(void *)(v3 + 176);
    unint64_t v5 = *(void *)(v3 + 184);
  }
  else
  {
    uint64_t v4 = 0;
    unint64_t v5 = 0xE000000000000000;
  }
  *a2 = v4;
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CDFEAC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(a2 + 24) = sub_1C8CEF860(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(a2 + 24);
  swift_beginAccess();
  *(void *)(v6 + 176) = v4;
  *(void *)(v6 + 184) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileOptions.rubyPackage.setter(uint64_t a1, uint64_t a2)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v2 + 24) = sub_1C8CEF860(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v2 + 24);
  swift_beginAccess();
  *(void *)(v6 + 176) = a1;
  *(void *)(v6 + 184) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_FileOptions.rubyPackage.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(void *)(v1 + 24);
  swift_beginAccess();
  if (*(void *)(v4 + 184))
  {
    uint64_t v5 = *(void *)(v4 + 176);
    unint64_t v6 = *(void *)(v4 + 184);
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  v3[9] = v5;
  v3[10] = v6;
  swift_bridgeObjectRetain();
  return sub_1C8CE00B0;
}

void sub_1C8CE00B0(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 72);
  uint64_t v4 = *(void *)(*(void *)a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = v2[11];
      type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
      swift_allocObject();
      uint64_t v6 = swift_retain();
      *(void *)(v5 + 24) = sub_1C8CEF860(v6);
      swift_release();
    }
    uint64_t v7 = *(void *)(v2[11] + 24);
    swift_beginAccess();
    *(void *)(v7 + 176) = v3;
    *(void *)(v7 + 184) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v8 = v2[11];
      type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
      swift_allocObject();
      uint64_t v9 = swift_retain();
      *(void *)(v8 + 24) = sub_1C8CEF860(v9);
      swift_release();
    }
    uint64_t v10 = *(void *)(v2[11] + 24);
    swift_beginAccess();
    *(void *)(v10 + 176) = v3;
    *(void *)(v10 + 184) = v4;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

BOOL Google_Protobuf_FileOptions.hasRubyPackage.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_beginAccess();
  return *(void *)(v1 + 184) != 0;
}

Swift::Void __swiftcall Google_Protobuf_FileOptions.clearRubyPackage()()
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v1 = swift_retain();
    *(void *)(v0 + 24) = sub_1C8CEF860(v1);
    swift_release();
  }
  uint64_t v2 = *(void *)(v0 + 24);
  swift_beginAccess();
  *(void *)(v2 + 176) = 0;
  *(void *)(v2 + 184) = 0;
  swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileOptions.uninterpretedOption.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CE0334(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v4 = swift_retain();
    *(void *)(a2 + 24) = sub_1C8CEF860(v4);
    swift_release();
  }
  uint64_t v5 = *(void *)(a2 + 24);
  swift_beginAccess();
  *(void *)(v5 + 192) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_FileOptions.uninterpretedOption.setter(uint64_t a1)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v3 = swift_retain();
    *(void *)(v1 + 24) = sub_1C8CEF860(v3);
    swift_release();
  }
  uint64_t v4 = *(void *)(v1 + 24);
  swift_beginAccess();
  *(void *)(v4 + 192) = a1;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_FileOptions.uninterpretedOption.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(void *)(v1 + 24);
  swift_beginAccess();
  v3[9] = *(void *)(v4 + 192);
  swift_bridgeObjectRetain();
  return sub_1C8CE04FC;
}

void sub_1C8CE04FC(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 72);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v4 = v2[10];
      type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
      swift_allocObject();
      uint64_t v5 = swift_retain();
      *(void *)(v4 + 24) = sub_1C8CEF860(v5);
      swift_release();
    }
    uint64_t v6 = *(void *)(v2[10] + 24);
    swift_beginAccess();
    *(void *)(v6 + 192) = v3;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v7 = v2[10];
      type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
      swift_allocObject();
      uint64_t v8 = swift_retain();
      *(void *)(v7 + 24) = sub_1C8CEF860(v8);
      swift_release();
    }
    uint64_t v9 = *(void *)(v2[10] + 24);
    swift_beginAccess();
    *(void *)(v9 + 192) = v3;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

uint64_t Google_Protobuf_FileOptions.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_1C8CA3CF8(v2, v3);
}

uint64_t Google_Protobuf_FileOptions.unknownFields.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C8CA3D5C(*(void *)v1, *(void *)(v1 + 8));
  *(void *)uint64_t v1 = v2;
  *(void *)(v1 + 8) = v3;
  return result;
}

uint64_t (*Google_Protobuf_FileOptions.unknownFields.modify())()
{
  return nullsub_1;
}

SiriOntologyProtobuf::Google_Protobuf_FileOptions::OptimizeMode __swiftcall Google_Protobuf_FileOptions.OptimizeMode.init()()
{
  *uint64_t v0 = 0;
  return result;
}

SiriOntologyProtobuf::Google_Protobuf_FileOptions::OptimizeMode_optional __swiftcall Google_Protobuf_FileOptions.OptimizeMode.init(rawValue:)(Swift::Int rawValue)
{
  unsigned int v2 = 0x2010003u >> (8 * rawValue);
  if ((unint64_t)rawValue >= 4) {
    LOBYTE(v2) = 3;
  }
  *uint64_t v1 = v2;
  return (SiriOntologyProtobuf::Google_Protobuf_FileOptions::OptimizeMode_optional)rawValue;
}

uint64_t Google_Protobuf_FileOptions.OptimizeMode.rawValue.getter()
{
  return *v0 + 1;
}

uint64_t sub_1C8CE06E8()
{
  return sub_1C8D888A0();
}

uint64_t sub_1C8CE0730()
{
  return sub_1C8D88850();
}

uint64_t sub_1C8CE0760()
{
  return sub_1C8D888A0();
}

uint64_t sub_1C8CE07A4()
{
  return *v0 + 1;
}

SiriOntologyProtobuf::Google_Protobuf_FileOptions::OptimizeMode_optional sub_1C8CE07B0(Swift::Int *a1)
{
  return Google_Protobuf_FileOptions.OptimizeMode.init(rawValue:)(*a1);
}

void sub_1C8CE07B8(void *a1@<X8>)
{
  *a1 = *v1 + 1;
}

uint64_t Google_Protobuf_FileOptions._protobuf_extensionFieldValues.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_FileOptions._protobuf_extensionFieldValues.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = v2;
  return result;
}

uint64_t (*Google_Protobuf_FileOptions._protobuf_extensionFieldValues.modify())()
{
  return nullsub_1;
}

uint64_t sub_1C8CE0820@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CE082C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = v2;
  return result;
}

uint64_t (*sub_1C8CE0858())()
{
  return nullsub_1;
}

void *static Google_Protobuf_FileOptions.OptimizeMode.allCases.getter()
{
  return &unk_1F23503D8;
}

void sub_1C8CE0884(void *a1@<X8>)
{
  *a1 = &unk_1F2350400;
}

uint64_t Google_Protobuf_MessageOptions.messageSetWireFormat.getter()
{
  return *(unsigned char *)(v0 + 32) & 1;
}

uint64_t Google_Protobuf_MessageOptions.messageSetWireFormat.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 32) = result;
  return result;
}

uint64_t (*Google_Protobuf_MessageOptions.messageSetWireFormat.modify(uint64_t a1))()
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(v1 + 32) & 1;
  return sub_1C8D0AA4C;
}

BOOL Google_Protobuf_MessageOptions.hasMessageSetWireFormat.getter()
{
  return *(unsigned char *)(v0 + 32) != 2;
}

Swift::Void __swiftcall Google_Protobuf_MessageOptions.clearMessageSetWireFormat()()
{
  *(unsigned char *)(v0 + 32) = 2;
}

uint64_t Google_Protobuf_MessageOptions.noStandardDescriptorAccessor.getter()
{
  return *(unsigned char *)(v0 + 33) & 1;
}

uint64_t Google_Protobuf_MessageOptions.noStandardDescriptorAccessor.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 33) = result;
  return result;
}

uint64_t (*Google_Protobuf_MessageOptions.noStandardDescriptorAccessor.modify(uint64_t a1))()
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(v1 + 33) & 1;
  return sub_1C8D0AA44;
}

BOOL Google_Protobuf_MessageOptions.hasNoStandardDescriptorAccessor.getter()
{
  return *(unsigned char *)(v0 + 33) != 2;
}

Swift::Void __swiftcall Google_Protobuf_MessageOptions.clearNoStandardDescriptorAccessor()()
{
  *(unsigned char *)(v0 + 33) = 2;
}

uint64_t Google_Protobuf_MessageOptions.deprecated.getter()
{
  return *(unsigned char *)(v0 + 34) & 1;
}

uint64_t Google_Protobuf_MessageOptions.deprecated.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 34) = result;
  return result;
}

unsigned char *(*Google_Protobuf_MessageOptions.deprecated.modify(uint64_t a1))(unsigned char *result)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(v1 + 34) & 1;
  return sub_1C8CE0998;
}

unsigned char *sub_1C8CE0998(unsigned char *result)
{
  *(unsigned char *)(*(void *)result + 34) = result[8];
  return result;
}

BOOL Google_Protobuf_MessageOptions.hasDeprecated.getter()
{
  return *(unsigned char *)(v0 + 34) != 2;
}

Swift::Void __swiftcall Google_Protobuf_MessageOptions.clearDeprecated()()
{
  *(unsigned char *)(v0 + 34) = 2;
}

uint64_t Google_Protobuf_MessageOptions.mapEntry.getter()
{
  return *(unsigned char *)(v0 + 35) & 1;
}

uint64_t Google_Protobuf_MessageOptions.mapEntry.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 35) = result;
  return result;
}

uint64_t (*Google_Protobuf_MessageOptions.mapEntry.modify(uint64_t a1))()
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(v1 + 35) & 1;
  return sub_1C8D0AA48;
}

BOOL Google_Protobuf_MessageOptions.hasMapEntry.getter()
{
  return *(unsigned char *)(v0 + 35) != 2;
}

Swift::Void __swiftcall Google_Protobuf_MessageOptions.clearMapEntry()()
{
  *(unsigned char *)(v0 + 35) = 2;
}

uint64_t Google_Protobuf_MessageOptions.uninterpretedOption.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_MessageOptions.uninterpretedOption.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*Google_Protobuf_MessageOptions.uninterpretedOption.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_MessageOptions.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  unint64_t v3 = *(void *)(v1 + 16);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C8CA3CF8(v2, v3);
}

uint64_t Google_Protobuf_MessageOptions.unknownFields.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C8CA3D5C(*(void *)(v1 + 8), *(void *)(v1 + 16));
  *(void *)(v1 + 8) = v2;
  *(void *)(v1 + 16) = v3;
  return result;
}

uint64_t (*Google_Protobuf_MessageOptions.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_MessageOptions._protobuf_extensionFieldValues.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_MessageOptions._protobuf_extensionFieldValues.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = v2;
  return result;
}

uint64_t (*Google_Protobuf_MessageOptions._protobuf_extensionFieldValues.modify())()
{
  return nullsub_1;
}

uint64_t sub_1C8CE0B30@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CE0B3C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = v2;
  return result;
}

void Google_Protobuf_FieldOptions.ctype.getter(unsigned char *a1@<X8>)
{
  int v2 = *(unsigned __int8 *)(v1 + 32);
  if (v2 == 3) {
    LOBYTE(v2) = 0;
  }
  *a1 = v2;
}

unsigned char *Google_Protobuf_FieldOptions.ctype.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 32) = *result;
  return result;
}

unsigned char *(*Google_Protobuf_FieldOptions.ctype.modify(uint64_t a1))(unsigned char *result)
{
  *(void *)a1 = v1;
  int v2 = *(unsigned __int8 *)(v1 + 32);
  if (v2 == 3) {
    LOBYTE(v2) = 0;
  }
  *(unsigned char *)(a1 + 8) = v2;
  return sub_1C8CE0BBC;
}

unsigned char *sub_1C8CE0BBC(unsigned char *result)
{
  *(unsigned char *)(*(void *)result + 32) = result[8];
  return result;
}

BOOL Google_Protobuf_FieldOptions.hasCtype.getter()
{
  return *(unsigned char *)(v0 + 32) != 3;
}

Swift::Void __swiftcall Google_Protobuf_FieldOptions.clearCtype()()
{
  *(unsigned char *)(v0 + 32) = 3;
}

uint64_t Google_Protobuf_FieldOptions.packed.getter()
{
  return *(unsigned char *)(v0 + 33) & 1;
}

uint64_t Google_Protobuf_FieldOptions.packed.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 33) = result;
  return result;
}

uint64_t (*Google_Protobuf_FieldOptions.packed.modify(uint64_t a1))()
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(v1 + 33) & 1;
  return sub_1C8D0AA44;
}

BOOL Google_Protobuf_FieldOptions.hasPacked.getter()
{
  return *(unsigned char *)(v0 + 33) != 2;
}

Swift::Void __swiftcall Google_Protobuf_FieldOptions.clearPacked()()
{
  *(unsigned char *)(v0 + 33) = 2;
}

void Google_Protobuf_FieldOptions.jstype.getter(unsigned char *a1@<X8>)
{
  int v2 = *(unsigned __int8 *)(v1 + 34);
  if (v2 == 3) {
    LOBYTE(v2) = 0;
  }
  *a1 = v2;
}

unsigned char *Google_Protobuf_FieldOptions.jstype.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 34) = *result;
  return result;
}

unsigned char *(*Google_Protobuf_FieldOptions.jstype.modify(uint64_t a1))(unsigned char *result)
{
  *(void *)a1 = v1;
  int v2 = *(unsigned __int8 *)(v1 + 34);
  if (v2 == 3) {
    LOBYTE(v2) = 0;
  }
  *(unsigned char *)(a1 + 8) = v2;
  return sub_1C8CE0998;
}

BOOL Google_Protobuf_FieldOptions.hasJstype.getter()
{
  return *(unsigned char *)(v0 + 34) != 3;
}

Swift::Void __swiftcall Google_Protobuf_FieldOptions.clearJstype()()
{
  *(unsigned char *)(v0 + 34) = 3;
}

uint64_t Google_Protobuf_FieldOptions.lazy.getter()
{
  return *(unsigned char *)(v0 + 35) & 1;
}

uint64_t Google_Protobuf_FieldOptions.lazy.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 35) = result;
  return result;
}

unsigned char *(*Google_Protobuf_FieldOptions.lazy.modify(uint64_t a1))(unsigned char *result)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(v1 + 35) & 1;
  return sub_1C8CE0CFC;
}

unsigned char *sub_1C8CE0CFC(unsigned char *result)
{
  *(unsigned char *)(*(void *)result + 35) = result[8];
  return result;
}

BOOL Google_Protobuf_FieldOptions.hasLazy.getter()
{
  return *(unsigned char *)(v0 + 35) != 2;
}

Swift::Void __swiftcall Google_Protobuf_FieldOptions.clearLazy()()
{
  *(unsigned char *)(v0 + 35) = 2;
}

uint64_t Google_Protobuf_FieldOptions.deprecated.getter()
{
  return *(unsigned char *)(v0 + 36) & 1;
}

uint64_t Google_Protobuf_FieldOptions.deprecated.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 36) = result;
  return result;
}

unsigned char *(*Google_Protobuf_FieldOptions.deprecated.modify(uint64_t a1))(unsigned char *result)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(v1 + 36) & 1;
  return sub_1C8CE0D6C;
}

unsigned char *sub_1C8CE0D6C(unsigned char *result)
{
  *(unsigned char *)(*(void *)result + 36) = result[8];
  return result;
}

BOOL Google_Protobuf_FieldOptions.hasDeprecated.getter()
{
  return *(unsigned char *)(v0 + 36) != 2;
}

Swift::Void __swiftcall Google_Protobuf_FieldOptions.clearDeprecated()()
{
  *(unsigned char *)(v0 + 36) = 2;
}

uint64_t Google_Protobuf_FieldOptions.weak.getter()
{
  return *(unsigned char *)(v0 + 37) & 1;
}

uint64_t Google_Protobuf_FieldOptions.weak.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 37) = result;
  return result;
}

unsigned char *(*Google_Protobuf_FieldOptions.weak.modify(uint64_t a1))(unsigned char *result)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(v1 + 37) & 1;
  return sub_1C8CE0DDC;
}

unsigned char *sub_1C8CE0DDC(unsigned char *result)
{
  *(unsigned char *)(*(void *)result + 37) = result[8];
  return result;
}

BOOL Google_Protobuf_FieldOptions.hasWeak.getter()
{
  return *(unsigned char *)(v0 + 37) != 2;
}

Swift::Void __swiftcall Google_Protobuf_FieldOptions.clearWeak()()
{
  *(unsigned char *)(v0 + 37) = 2;
}

uint64_t Google_Protobuf_FieldOptions.uninterpretedOption.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_FieldOptions.uninterpretedOption.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*Google_Protobuf_FieldOptions.uninterpretedOption.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_FieldOptions.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  unint64_t v3 = *(void *)(v1 + 16);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C8CA3CF8(v2, v3);
}

uint64_t Google_Protobuf_FieldOptions.unknownFields.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C8CA3D5C(*(void *)(v1 + 8), *(void *)(v1 + 16));
  *(void *)(v1 + 8) = v2;
  *(void *)(v1 + 16) = v3;
  return result;
}

uint64_t (*Google_Protobuf_FieldOptions.unknownFields.modify())()
{
  return nullsub_1;
}

SiriOntologyProtobuf::Google_Protobuf_FieldOptions::CType __swiftcall Google_Protobuf_FieldOptions.CType.init()()
{
  *uint64_t v0 = 0;
  return result;
}

SiriOntologyProtobuf::Google_Protobuf_FieldOptions::CType_optional __swiftcall Google_Protobuf_FieldOptions.CType.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 3;
  if ((unint64_t)rawValue < 3) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (SiriOntologyProtobuf::Google_Protobuf_FieldOptions::CType_optional)rawValue;
}

uint64_t Google_Protobuf_FieldOptions.CType.rawValue.getter()
{
  return *v0;
}

uint64_t sub_1C8CE0EEC()
{
  return *v0;
}

SiriOntologyProtobuf::Google_Protobuf_FieldOptions::CType_optional sub_1C8CE0EF4(Swift::Int *a1)
{
  return Google_Protobuf_FieldOptions.CType.init(rawValue:)(*a1);
}

void sub_1C8CE0EFC(void *a1@<X8>)
{
  *a1 = *v1;
}

SiriOntologyProtobuf::Google_Protobuf_FieldOptions::JSType __swiftcall Google_Protobuf_FieldOptions.JSType.init()()
{
  *uint64_t v0 = 0;
  return result;
}

uint64_t Google_Protobuf_FieldOptions._protobuf_extensionFieldValues.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_FieldOptions._protobuf_extensionFieldValues.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = v2;
  return result;
}

uint64_t (*Google_Protobuf_FieldOptions._protobuf_extensionFieldValues.modify())()
{
  return nullsub_1;
}

void *static Google_Protobuf_FieldOptions.CType.allCases.getter()
{
  return &unk_1F2350428;
}

void sub_1C8CE0F74(void *a1@<X8>)
{
  *a1 = &unk_1F2350450;
}

void *static Google_Protobuf_FieldOptions.JSType.allCases.getter()
{
  return &unk_1F2350478;
}

void sub_1C8CE0F90(void *a1@<X8>)
{
  *a1 = &unk_1F23504A0;
}

uint64_t Google_Protobuf_OneofOptions.uninterpretedOption.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_OneofOptions.uninterpretedOption.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*Google_Protobuf_OneofOptions.uninterpretedOption.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_OneofOptions.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  unint64_t v3 = *(void *)(v1 + 16);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C8CA3CF8(v2, v3);
}

uint64_t _s20SiriOntologyProtobuf07Google_C18_FileDescriptorSetV13unknownFieldsAA14UnknownStorageVvs_0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C8CA3D5C(*(void *)(v1 + 8), *(void *)(v1 + 16));
  *(void *)(v1 + 8) = v2;
  *(void *)(v1 + 16) = v3;
  return result;
}

uint64_t (*Google_Protobuf_OneofOptions.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_OneofOptions._protobuf_extensionFieldValues.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_OneofOptions._protobuf_extensionFieldValues.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = v2;
  return result;
}

uint64_t (*Google_Protobuf_OneofOptions._protobuf_extensionFieldValues.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_EnumOptions.allowAlias.getter()
{
  return *(unsigned char *)(v0 + 32) & 1;
}

uint64_t Google_Protobuf_EnumOptions.allowAlias.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 32) = result;
  return result;
}

unsigned char *(*Google_Protobuf_EnumOptions.allowAlias.modify(uint64_t a1))(unsigned char *result)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(v1 + 32) & 1;
  return sub_1C8CE0BBC;
}

BOOL Google_Protobuf_EnumOptions.hasAllowAlias.getter()
{
  return *(unsigned char *)(v0 + 32) != 2;
}

Swift::Void __swiftcall Google_Protobuf_EnumOptions.clearAllowAlias()()
{
  *(unsigned char *)(v0 + 32) = 2;
}

uint64_t Google_Protobuf_EnumOptions.deprecated.getter()
{
  return *(unsigned char *)(v0 + 33) & 1;
}

uint64_t Google_Protobuf_EnumOptions.deprecated.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 33) = result;
  return result;
}

unsigned char *(*Google_Protobuf_EnumOptions.deprecated.modify(uint64_t a1))(unsigned char *result)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(v1 + 33) & 1;
  return sub_1C8CE1154;
}

unsigned char *sub_1C8CE1154(unsigned char *result)
{
  *(unsigned char *)(*(void *)result + 33) = result[8];
  return result;
}

BOOL Google_Protobuf_EnumOptions.hasDeprecated.getter()
{
  return *(unsigned char *)(v0 + 33) != 2;
}

Swift::Void __swiftcall Google_Protobuf_EnumOptions.clearDeprecated()()
{
  *(unsigned char *)(v0 + 33) = 2;
}

uint64_t Google_Protobuf_EnumOptions.uninterpretedOption.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_EnumOptions.uninterpretedOption.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*Google_Protobuf_EnumOptions.uninterpretedOption.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_EnumOptions.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  unint64_t v3 = *(void *)(v1 + 16);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C8CA3CF8(v2, v3);
}

uint64_t (*Google_Protobuf_EnumOptions.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_EnumOptions._protobuf_extensionFieldValues.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_EnumOptions._protobuf_extensionFieldValues.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = v2;
  return result;
}

uint64_t (*Google_Protobuf_EnumOptions._protobuf_extensionFieldValues.modify())()
{
  return nullsub_1;
}

uint64_t (*Google_Protobuf_EnumValueOptions.deprecated.modify(uint64_t a1))()
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(v1 + 32) & 1;
  return sub_1C8D0AA4C;
}

uint64_t (*Google_Protobuf_EnumValueOptions.uninterpretedOption.modify())()
{
  return nullsub_1;
}

uint64_t (*Google_Protobuf_EnumValueOptions.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t (*Google_Protobuf_EnumValueOptions._protobuf_extensionFieldValues.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_ServiceOptions.deprecated.getter()
{
  return *(unsigned char *)(v0 + 32) & 1;
}

uint64_t Google_Protobuf_ServiceOptions.deprecated.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 32) = result;
  return result;
}

uint64_t (*Google_Protobuf_ServiceOptions.deprecated.modify(uint64_t a1))()
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(v1 + 32) & 1;
  return sub_1C8D0AA4C;
}

BOOL Google_Protobuf_ServiceOptions.hasDeprecated.getter()
{
  return *(unsigned char *)(v0 + 32) != 2;
}

Swift::Void __swiftcall Google_Protobuf_ServiceOptions.clearDeprecated()()
{
  *(unsigned char *)(v0 + 32) = 2;
}

uint64_t Google_Protobuf_ServiceOptions.uninterpretedOption.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_ServiceOptions.uninterpretedOption.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*Google_Protobuf_ServiceOptions.uninterpretedOption.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_ServiceOptions.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  unint64_t v3 = *(void *)(v1 + 16);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C8CA3CF8(v2, v3);
}

uint64_t (*Google_Protobuf_ServiceOptions.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_ServiceOptions._protobuf_extensionFieldValues.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_ServiceOptions._protobuf_extensionFieldValues.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = v2;
  return result;
}

uint64_t (*Google_Protobuf_ServiceOptions._protobuf_extensionFieldValues.modify())()
{
  return nullsub_1;
}

uint64_t (*Google_Protobuf_MethodOptions.deprecated.modify(uint64_t a1))()
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(v1 + 32) & 1;
  return sub_1C8D0AA4C;
}

void Google_Protobuf_MethodOptions.idempotencyLevel.getter(unsigned char *a1@<X8>)
{
  int v2 = *(unsigned __int8 *)(v1 + 33);
  if (v2 == 3) {
    LOBYTE(v2) = 0;
  }
  *a1 = v2;
}

unsigned char *Google_Protobuf_MethodOptions.idempotencyLevel.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 33) = *result;
  return result;
}

unsigned char *(*Google_Protobuf_MethodOptions.idempotencyLevel.modify(uint64_t a1))(unsigned char *result)
{
  *(void *)a1 = v1;
  int v2 = *(unsigned __int8 *)(v1 + 33);
  if (v2 == 3) {
    LOBYTE(v2) = 0;
  }
  *(unsigned char *)(a1 + 8) = v2;
  return sub_1C8CE1154;
}

BOOL Google_Protobuf_MethodOptions.hasIdempotencyLevel.getter()
{
  return *(unsigned char *)(v0 + 33) != 3;
}

Swift::Void __swiftcall Google_Protobuf_MethodOptions.clearIdempotencyLevel()()
{
  *(unsigned char *)(v0 + 33) = 3;
}

uint64_t (*Google_Protobuf_MethodOptions.uninterpretedOption.modify())()
{
  return nullsub_1;
}

uint64_t (*Google_Protobuf_MethodOptions.unknownFields.modify())()
{
  return nullsub_1;
}

SiriOntologyProtobuf::Google_Protobuf_MethodOptions::IdempotencyLevel __swiftcall Google_Protobuf_MethodOptions.IdempotencyLevel.init()()
{
  *uint64_t v0 = 0;
  return result;
}

uint64_t (*Google_Protobuf_MethodOptions._protobuf_extensionFieldValues.modify())()
{
  return nullsub_1;
}

void *static Google_Protobuf_MethodOptions.IdempotencyLevel.allCases.getter()
{
  return &unk_1F23504C8;
}

void sub_1C8CE1544(void *a1@<X8>)
{
  *a1 = &unk_1F23504F0;
}

uint64_t Google_Protobuf_UninterpretedOption.name.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_UninterpretedOption.name.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*Google_Protobuf_UninterpretedOption.name.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_UninterpretedOption.identifierValue.getter()
{
  if (*(void *)(v0 + 32)) {
    uint64_t v1 = *(void *)(v0 + 24);
  }
  else {
    uint64_t v1 = 0;
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Google_Protobuf_UninterpretedOption.identifierValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*Google_Protobuf_UninterpretedOption.identifierValue.modify(void *a1))()
{
  a1[2] = v1;
  if (*(void *)(v1 + 32))
  {
    uint64_t v2 = *(void *)(v1 + 24);
    unint64_t v3 = *(void *)(v1 + 32);
  }
  else
  {
    uint64_t v2 = 0;
    unint64_t v3 = 0xE000000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return sub_1C8CE168C;
}

BOOL Google_Protobuf_UninterpretedOption.hasIdentifierValue.getter()
{
  return *(void *)(v0 + 32) != 0;
}

Swift::Void __swiftcall Google_Protobuf_UninterpretedOption.clearIdentifierValue()()
{
  swift_bridgeObjectRelease();
  *(void *)(v0 + 24) = 0;
  *(void *)(v0 + 32) = 0;
}

uint64_t Google_Protobuf_UninterpretedOption.positiveIntValue.getter()
{
  if (*(unsigned char *)(v0 + 48)) {
    return 0;
  }
  else {
    return *(void *)(v0 + 40);
  }
}

uint64_t Google_Protobuf_UninterpretedOption.positiveIntValue.setter(uint64_t result)
{
  *(void *)(v1 + 40) = result;
  *(unsigned char *)(v1 + 48) = 0;
  return result;
}

void *(*Google_Protobuf_UninterpretedOption.positiveIntValue.modify(void *a1))(void *result)
{
  uint64_t v2 = *(void *)(v1 + 40);
  if (*(unsigned char *)(v1 + 48)) {
    uint64_t v2 = 0;
  }
  *a1 = v2;
  a1[1] = v1;
  return sub_1C8CE1714;
}

void *sub_1C8CE1714(void *result)
{
  uint64_t v1 = result[1];
  *(void *)(v1 + 40) = *result;
  *(unsigned char *)(v1 + 48) = 0;
  return result;
}

BOOL Google_Protobuf_UninterpretedOption.hasPositiveIntValue.getter()
{
  return (*(unsigned char *)(v0 + 48) & 1) == 0;
}

Swift::Void __swiftcall Google_Protobuf_UninterpretedOption.clearPositiveIntValue()()
{
  *(void *)(v0 + 40) = 0;
  *(unsigned char *)(v0 + 48) = 1;
}

uint64_t Google_Protobuf_UninterpretedOption.negativeIntValue.getter()
{
  if (*(unsigned char *)(v0 + 64)) {
    return 0;
  }
  else {
    return *(void *)(v0 + 56);
  }
}

uint64_t Google_Protobuf_UninterpretedOption.negativeIntValue.setter(uint64_t result)
{
  *(void *)(v1 + 56) = result;
  *(unsigned char *)(v1 + 64) = 0;
  return result;
}

void *(*Google_Protobuf_UninterpretedOption.negativeIntValue.modify(void *a1))(void *result)
{
  uint64_t v2 = *(void *)(v1 + 56);
  if (*(unsigned char *)(v1 + 64)) {
    uint64_t v2 = 0;
  }
  *a1 = v2;
  a1[1] = v1;
  return sub_1C8CE1798;
}

void *sub_1C8CE1798(void *result)
{
  uint64_t v1 = result[1];
  *(void *)(v1 + 56) = *result;
  *(unsigned char *)(v1 + 64) = 0;
  return result;
}

BOOL Google_Protobuf_UninterpretedOption.hasNegativeIntValue.getter()
{
  return (*(unsigned char *)(v0 + 64) & 1) == 0;
}

Swift::Void __swiftcall Google_Protobuf_UninterpretedOption.clearNegativeIntValue()()
{
  *(void *)(v0 + 56) = 0;
  *(unsigned char *)(v0 + 64) = 1;
}

double Google_Protobuf_UninterpretedOption.doubleValue.getter()
{
  double result = *(double *)(v0 + 72);
  if (*(unsigned char *)(v0 + 80)) {
    return 0.0;
  }
  return result;
}

void Google_Protobuf_UninterpretedOption.doubleValue.setter(double a1)
{
  *(double *)(v1 + 72) = a1;
  *(unsigned char *)(v1 + 80) = 0;
}

void *(*Google_Protobuf_UninterpretedOption.doubleValue.modify(uint64_t a1))(void *result)
{
  *(void *)(a1 + 8) = v1;
  double v2 = *(double *)(v1 + 72);
  if (*(unsigned char *)(v1 + 80)) {
    double v2 = 0.0;
  }
  *(double *)a1 = v2;
  return sub_1C8CE1828;
}

void *sub_1C8CE1828(void *result)
{
  uint64_t v1 = result[1];
  *(void *)(v1 + 72) = *result;
  *(unsigned char *)(v1 + 80) = 0;
  return result;
}

BOOL Google_Protobuf_UninterpretedOption.hasDoubleValue.getter()
{
  return (*(unsigned char *)(v0 + 80) & 1) == 0;
}

Swift::Void __swiftcall Google_Protobuf_UninterpretedOption.clearDoubleValue()()
{
  *(void *)(v0 + 72) = 0;
  *(unsigned char *)(v0 + 80) = 1;
}

uint64_t Google_Protobuf_UninterpretedOption.stringValue.getter()
{
  unint64_t v1 = *(void *)(v0 + 96);
  if (v1 >> 60 == 15) {
    uint64_t v2 = 0;
  }
  else {
    uint64_t v2 = *(void *)(v0 + 88);
  }
  sub_1C8D02DB8(*(void *)(v0 + 88), v1);
  return v2;
}

uint64_t Google_Protobuf_UninterpretedOption.stringValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C8CAA9F0(*(void *)(v2 + 88), *(void *)(v2 + 96));
  *(void *)(v2 + 88) = a1;
  *(void *)(v2 + 96) = a2;
  return result;
}

uint64_t (*Google_Protobuf_UninterpretedOption.stringValue.modify(void *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  uint64_t v3 = *(void *)(v1 + 88);
  unint64_t v4 = *(void *)(v1 + 96);
  if (v4 >> 60 == 15) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = *(void *)(v1 + 88);
  }
  unint64_t v6 = 0xC000000000000000;
  if (v4 >> 60 != 15) {
    unint64_t v6 = *(void *)(v1 + 96);
  }
  *a1 = v5;
  a1[1] = v6;
  sub_1C8D02DB8(v3, v4);
  return sub_1C8CE1930;
}

uint64_t sub_1C8CE1930(uint64_t *a1, char a2)
{
  unint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = *a1;
  uint64_t v5 = *(void *)(v3 + 88);
  unint64_t v6 = *(void *)(v3 + 96);
  if (a2)
  {
    sub_1C8CA3CF8(*a1, v2);
    sub_1C8CAA9F0(v5, v6);
    *(void *)(v3 + 88) = v4;
    *(void *)(v3 + 96) = v2;
    return sub_1C8CA3D5C(v4, v2);
  }
  else
  {
    uint64_t result = sub_1C8CAA9F0(*(void *)(v3 + 88), *(void *)(v3 + 96));
    *(void *)(v3 + 88) = v4;
    *(void *)(v3 + 96) = v2;
  }
  return result;
}

BOOL Google_Protobuf_UninterpretedOption.hasStringValue.getter()
{
  return *(void *)(v0 + 96) >> 60 != 15;
}

Swift::Void __swiftcall Google_Protobuf_UninterpretedOption.clearStringValue()()
{
  sub_1C8CAA9F0(*(void *)(v0 + 88), *(void *)(v0 + 96));
  *(_OWORD *)(v0 + 88) = xmmword_1C8D8BEE0;
}

uint64_t Google_Protobuf_UninterpretedOption.aggregateValue.getter()
{
  if (*(void *)(v0 + 112)) {
    uint64_t v1 = *(void *)(v0 + 104);
  }
  else {
    uint64_t v1 = 0;
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Google_Protobuf_UninterpretedOption.aggregateValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 104) = a1;
  *(void *)(v2 + 112) = a2;
  return result;
}

uint64_t (*Google_Protobuf_UninterpretedOption.aggregateValue.modify(void *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  if (*(void *)(v1 + 112))
  {
    uint64_t v2 = *(void *)(v1 + 104);
    unint64_t v3 = *(void *)(v1 + 112);
  }
  else
  {
    uint64_t v2 = 0;
    unint64_t v3 = 0xE000000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return sub_1C8CE1AE4;
}

uint64_t sub_1C8CE1AE4(uint64_t *a1, char a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = *a1;
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v3 + 104) = v4;
    *(void *)(v3 + 112) = v2;
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(v3 + 104) = v4;
    *(void *)(v3 + 112) = v2;
  }
  return result;
}

BOOL Google_Protobuf_UninterpretedOption.hasAggregateValue.getter()
{
  return *(void *)(v0 + 112) != 0;
}

Swift::Void __swiftcall Google_Protobuf_UninterpretedOption.clearAggregateValue()()
{
  swift_bridgeObjectRelease();
  *(void *)(v0 + 104) = 0;
  *(void *)(v0 + 112) = 0;
}

uint64_t Google_Protobuf_UninterpretedOption.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  unint64_t v3 = *(void *)(v1 + 16);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C8CA3CF8(v2, v3);
}

uint64_t Google_Protobuf_UninterpretedOption.unknownFields.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C8CA3D5C(*(void *)(v1 + 8), *(void *)(v1 + 16));
  *(void *)(v1 + 8) = v2;
  *(void *)(v1 + 16) = v3;
  return result;
}

uint64_t (*Google_Protobuf_UninterpretedOption.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_UninterpretedOption.NamePart.namePart.getter()
{
  if (*(void *)(v0 + 24)) {
    uint64_t v1 = *(void *)(v0 + 16);
  }
  else {
    uint64_t v1 = 0;
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Google_Protobuf_UninterpretedOption.NamePart.namePart.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*Google_Protobuf_UninterpretedOption.NamePart.namePart.modify(void *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  if (*(void *)(v1 + 24))
  {
    uint64_t v2 = *(void *)(v1 + 16);
    unint64_t v3 = *(void *)(v1 + 24);
  }
  else
  {
    uint64_t v2 = 0;
    unint64_t v3 = 0xE000000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return sub_1C8CE1CD0;
}

uint64_t sub_1C8CE1CD0(uint64_t *a1, char a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = *a1;
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v3 + 16) = v4;
    *(void *)(v3 + 24) = v2;
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(v3 + 16) = v4;
    *(void *)(v3 + 24) = v2;
  }
  return result;
}

BOOL Google_Protobuf_UninterpretedOption.NamePart.hasNamePart.getter()
{
  return *(void *)(v0 + 24) != 0;
}

Swift::Void __swiftcall Google_Protobuf_UninterpretedOption.NamePart.clearNamePart()()
{
  swift_bridgeObjectRelease();
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
}

uint64_t (*Google_Protobuf_UninterpretedOption.NamePart.isExtension.modify(uint64_t a1))()
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(v1 + 32) & 1;
  return sub_1C8D0AA4C;
}

uint64_t Google_Protobuf_UninterpretedOption.NamePart.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_1C8CA3CF8(v2, v3);
}

uint64_t Google_Protobuf_UninterpretedOption.NamePart.unknownFields.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C8CA3D5C(*(void *)v1, *(void *)(v1 + 8));
  *(void *)uint64_t v1 = v2;
  *(void *)(v1 + 8) = v3;
  return result;
}

uint64_t (*Google_Protobuf_UninterpretedOption.NamePart.unknownFields.modify())()
{
  return nullsub_1;
}

double Google_Protobuf_UninterpretedOption.NamePart.init()@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)a1 = xmmword_1C8D8AD80;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 32) = 2;
  return result;
}

double Google_Protobuf_UninterpretedOption.init()@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = MEMORY[0x1E4FBC860];
  *(_OWORD *)(a1 + 8) = xmmword_1C8D8AD80;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 48) = 1;
  *(void *)(a1 + 56) = 0;
  *(unsigned char *)(a1 + 64) = 1;
  *(void *)(a1 + 72) = 0;
  *(unsigned char *)(a1 + 80) = 1;
  double result = 0.0;
  *(_OWORD *)(a1 + 88) = xmmword_1C8D8BEE0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  return result;
}

uint64_t Google_Protobuf_SourceCodeInfo.location.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_SourceCodeInfo.location.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*Google_Protobuf_SourceCodeInfo.location.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_SourceCodeInfo.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  unint64_t v3 = *(void *)(v1 + 16);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C8CA3CF8(v2, v3);
}

uint64_t (*Google_Protobuf_SourceCodeInfo.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_SourceCodeInfo.Location.path.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_SourceCodeInfo.Location.path.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*Google_Protobuf_SourceCodeInfo.Location.path.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_SourceCodeInfo.Location.span.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_SourceCodeInfo.Location.span.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*Google_Protobuf_SourceCodeInfo.Location.span.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_SourceCodeInfo.Location.leadingComments.getter()
{
  if (*(void *)(v0 + 48)) {
    uint64_t v1 = *(void *)(v0 + 40);
  }
  else {
    uint64_t v1 = 0;
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Google_Protobuf_SourceCodeInfo.Location.leadingComments.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t (*Google_Protobuf_SourceCodeInfo.Location.leadingComments.modify(void *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  if (*(void *)(v1 + 48))
  {
    uint64_t v2 = *(void *)(v1 + 40);
    unint64_t v3 = *(void *)(v1 + 48);
  }
  else
  {
    uint64_t v2 = 0;
    unint64_t v3 = 0xE000000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return sub_1C8CE2080;
}

uint64_t sub_1C8CE2080(uint64_t *a1, char a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = *a1;
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v3 + 40) = v4;
    *(void *)(v3 + 48) = v2;
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(v3 + 40) = v4;
    *(void *)(v3 + 48) = v2;
  }
  return result;
}

BOOL Google_Protobuf_SourceCodeInfo.Location.hasLeadingComments.getter()
{
  return *(void *)(v0 + 48) != 0;
}

Swift::Void __swiftcall Google_Protobuf_SourceCodeInfo.Location.clearLeadingComments()()
{
  swift_bridgeObjectRelease();
  *(void *)(v0 + 40) = 0;
  *(void *)(v0 + 48) = 0;
}

uint64_t Google_Protobuf_SourceCodeInfo.Location.trailingComments.getter()
{
  if (*(void *)(v0 + 64)) {
    uint64_t v1 = *(void *)(v0 + 56);
  }
  else {
    uint64_t v1 = 0;
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Google_Protobuf_SourceCodeInfo.Location.trailingComments.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  return result;
}

uint64_t (*Google_Protobuf_SourceCodeInfo.Location.trailingComments.modify(void *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  if (*(void *)(v1 + 64))
  {
    uint64_t v2 = *(void *)(v1 + 56);
    unint64_t v3 = *(void *)(v1 + 64);
  }
  else
  {
    uint64_t v2 = 0;
    unint64_t v3 = 0xE000000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return sub_1C8CE220C;
}

uint64_t sub_1C8CE220C(uint64_t *a1, char a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = *a1;
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v3 + 56) = v4;
    *(void *)(v3 + 64) = v2;
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(v3 + 56) = v4;
    *(void *)(v3 + 64) = v2;
  }
  return result;
}

BOOL Google_Protobuf_SourceCodeInfo.Location.hasTrailingComments.getter()
{
  return *(void *)(v0 + 64) != 0;
}

Swift::Void __swiftcall Google_Protobuf_SourceCodeInfo.Location.clearTrailingComments()()
{
  swift_bridgeObjectRelease();
  *(void *)(v0 + 56) = 0;
  *(void *)(v0 + 64) = 0;
}

uint64_t Google_Protobuf_SourceCodeInfo.Location.leadingDetachedComments.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_SourceCodeInfo.Location.leadingDetachedComments.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*Google_Protobuf_SourceCodeInfo.Location.leadingDetachedComments.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_SourceCodeInfo.Location.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  unint64_t v3 = *(void *)(v1 + 32);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C8CA3CF8(v2, v3);
}

uint64_t Google_Protobuf_SourceCodeInfo.Location.unknownFields.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C8CA3D5C(*(void *)(v1 + 24), *(void *)(v1 + 32));
  *(void *)(v1 + 24) = v2;
  *(void *)(v1 + 32) = v3;
  return result;
}

uint64_t (*Google_Protobuf_SourceCodeInfo.Location.unknownFields.modify())()
{
  return nullsub_1;
}

double Google_Protobuf_SourceCodeInfo.Location.init()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *(void *)a1 = MEMORY[0x1E4FBC860];
  *(void *)(a1 + 8) = v1;
  *(void *)(a1 + 16) = v1;
  *(_OWORD *)(a1 + 24) = xmmword_1C8D8AD80;
  double result = 0.0;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  return result;
}

uint64_t (*Google_Protobuf_GeneratedCodeInfo.annotation.modify())()
{
  return nullsub_1;
}

uint64_t (*Google_Protobuf_GeneratedCodeInfo.unknownFields.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_GeneratedCodeInfo.Annotation.path.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_GeneratedCodeInfo.Annotation.path.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*Google_Protobuf_GeneratedCodeInfo.Annotation.path.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_GeneratedCodeInfo.Annotation.sourceFile.getter()
{
  if (*(void *)(v0 + 32)) {
    uint64_t v1 = *(void *)(v0 + 24);
  }
  else {
    uint64_t v1 = 0;
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Google_Protobuf_GeneratedCodeInfo.Annotation.sourceFile.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*Google_Protobuf_GeneratedCodeInfo.Annotation.sourceFile.modify(void *a1))()
{
  a1[2] = v1;
  if (*(void *)(v1 + 32))
  {
    uint64_t v2 = *(void *)(v1 + 24);
    unint64_t v3 = *(void *)(v1 + 32);
  }
  else
  {
    uint64_t v2 = 0;
    unint64_t v3 = 0xE000000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return sub_1C8CE168C;
}

uint64_t sub_1C8CE2510(uint64_t *a1, char a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = *a1;
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v3 + 24) = v4;
    *(void *)(v3 + 32) = v2;
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(v3 + 24) = v4;
    *(void *)(v3 + 32) = v2;
  }
  return result;
}

BOOL Google_Protobuf_GeneratedCodeInfo.Annotation.hasSourceFile.getter()
{
  return *(void *)(v0 + 32) != 0;
}

Swift::Void __swiftcall Google_Protobuf_GeneratedCodeInfo.Annotation.clearSourceFile()()
{
  swift_bridgeObjectRelease();
  *(void *)(v0 + 24) = 0;
  *(void *)(v0 + 32) = 0;
}

uint64_t Google_Protobuf_GeneratedCodeInfo.Annotation.begin.getter()
{
  if (*(unsigned char *)(v0 + 44)) {
    return 0;
  }
  else {
    return *(unsigned int *)(v0 + 40);
  }
}

uint64_t Google_Protobuf_GeneratedCodeInfo.Annotation.begin.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 40) = result;
  *(unsigned char *)(v1 + 44) = 0;
  return result;
}

uint64_t *(*Google_Protobuf_GeneratedCodeInfo.Annotation.begin.modify(uint64_t a1))(uint64_t *result)
{
  *(void *)a1 = v1;
  int v2 = *(_DWORD *)(v1 + 40);
  if (*(unsigned char *)(v1 + 44)) {
    int v2 = 0;
  }
  *(_DWORD *)(a1 + 8) = v2;
  return sub_1C8CE2610;
}

uint64_t *sub_1C8CE2610(uint64_t *result)
{
  uint64_t v1 = *result;
  *(_DWORD *)(v1 + 40) = *((_DWORD *)result + 2);
  *(unsigned char *)(v1 + 44) = 0;
  return result;
}

BOOL Google_Protobuf_GeneratedCodeInfo.Annotation.hasBegin.getter()
{
  return (*(unsigned char *)(v0 + 44) & 1) == 0;
}

Swift::Void __swiftcall Google_Protobuf_GeneratedCodeInfo.Annotation.clearBegin()()
{
  *(_DWORD *)(v0 + 40) = 0;
  *(unsigned char *)(v0 + 44) = 1;
}

uint64_t Google_Protobuf_GeneratedCodeInfo.Annotation.end.getter()
{
  if (*(unsigned char *)(v0 + 52)) {
    return 0;
  }
  else {
    return *(unsigned int *)(v0 + 48);
  }
}

uint64_t Google_Protobuf_GeneratedCodeInfo.Annotation.end.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 48) = result;
  *(unsigned char *)(v1 + 52) = 0;
  return result;
}

uint64_t *(*Google_Protobuf_GeneratedCodeInfo.Annotation.end.modify(uint64_t a1))(uint64_t *result)
{
  *(void *)a1 = v1;
  int v2 = *(_DWORD *)(v1 + 48);
  if (*(unsigned char *)(v1 + 52)) {
    int v2 = 0;
  }
  *(_DWORD *)(a1 + 8) = v2;
  return sub_1C8CE269C;
}

uint64_t *sub_1C8CE269C(uint64_t *result)
{
  uint64_t v1 = *result;
  *(_DWORD *)(v1 + 48) = *((_DWORD *)result + 2);
  *(unsigned char *)(v1 + 52) = 0;
  return result;
}

BOOL Google_Protobuf_GeneratedCodeInfo.Annotation.hasEnd.getter()
{
  return (*(unsigned char *)(v0 + 52) & 1) == 0;
}

Swift::Void __swiftcall Google_Protobuf_GeneratedCodeInfo.Annotation.clearEnd()()
{
  *(_DWORD *)(v0 + 48) = 0;
  *(unsigned char *)(v0 + 52) = 1;
}

uint64_t Google_Protobuf_GeneratedCodeInfo.Annotation.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  unint64_t v3 = *(void *)(v1 + 16);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C8CA3CF8(v2, v3);
}

uint64_t Google_Protobuf_GeneratedCodeInfo.Annotation.unknownFields.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C8CA3D5C(*(void *)(v1 + 8), *(void *)(v1 + 16));
  *(void *)(v1 + 8) = v2;
  *(void *)(v1 + 16) = v3;
  return result;
}

uint64_t (*Google_Protobuf_GeneratedCodeInfo.Annotation.unknownFields.modify())()
{
  return nullsub_1;
}

double Google_Protobuf_GeneratedCodeInfo.Annotation.init()@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = MEMORY[0x1E4FBC860];
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C8D8AD80;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 44) = 1;
  *(_DWORD *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 52) = 1;
  return result;
}

unint64_t static Google_Protobuf_FileDescriptorSet.protoMessageName.getter()
{
  return 0xD000000000000021;
}

uint64_t sub_1C8CE2780()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234CF48, &qword_1EA566250);
}

uint64_t static Google_Protobuf_FileDescriptorSet._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565A78 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA566258;
  uint64_t v3 = qword_1EA566260;
  uint64_t v4 = unk_1EA566268;
  *a1 = qword_1EA566250;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_FileDescriptorSet.isInitialized.getter()
{
  uint64_t v1 = sub_1C8CE2BDC(*v0);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = (void *)(v1 + 32);
    uint64_t v4 = v2 - 1;
    do
    {
      uint64_t v5 = v3[3];
      uint64_t v6 = v3[4];
      __swift_project_boxed_opaque_existential_1(v3, v5);
      char v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 32))(v5, v6);
      char v8 = v7;
      BOOL v10 = v4-- != 0;
      if ((v7 & 1) == 0) {
        break;
      }
      v3 += 5;
    }
    while (v10);
  }
  else
  {
    char v8 = 1;
  }
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C8CE28D0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v29 = MEMORY[0x1E4FBC860];
    sub_1C8CB75C4(0, v1, 0);
    uint64_t v2 = v29;
    uint64_t v4 = (uint64_t *)(a1 + 72);
    do
    {
      uint64_t v5 = *(v4 - 4);
      unint64_t v6 = *(v4 - 3);
      uint64_t v7 = *(v4 - 1);
      uint64_t v21 = *v4;
      uint64_t v22 = *(v4 - 2);
      char v20 = *((unsigned char *)v4 + 8);
      uint64_t v19 = v4[2];
      char v18 = *((unsigned char *)v4 + 24);
      uint64_t v17 = v4[4];
      char v16 = *((unsigned char *)v4 + 40);
      uint64_t v8 = v4[6];
      unint64_t v9 = v4[7];
      uint64_t v10 = v4[9];
      uint64_t v15 = v4[8];
      uint64_t v24 = *(v4 - 5);
      swift_bridgeObjectRetain();
      uint64_t v23 = v5;
      sub_1C8CA3CF8(v5, v6);
      swift_bridgeObjectRetain();
      sub_1C8D02DB8(v8, v9);
      uint64_t v29 = v2;
      unint64_t v11 = *(void *)(v2 + 16);
      unint64_t v12 = *(void *)(v2 + 24);
      int64_t v25 = v11 + 1;
      swift_bridgeObjectRetain();
      if (v11 >= v12 >> 1)
      {
        sub_1C8CB75C4((void *)(v12 > 1), v25, 1);
        uint64_t v2 = v29;
      }
      char v27 = &type metadata for Google_Protobuf_UninterpretedOption;
      unint64_t v28 = sub_1C8D02F58();
      uint64_t v13 = swift_allocObject();
      *(void *)&long long v26 = v13;
      *(void *)(v13 + 16) = v24;
      *(void *)(v13 + 24) = v23;
      *(void *)(v13 + 32) = v6;
      *(void *)(v13 + 40) = v22;
      *(void *)(v13 + 48) = v7;
      *(void *)(v13 + 56) = v21;
      *(unsigned char *)(v13 + 64) = v20;
      *(void *)(v13 + 72) = v19;
      *(unsigned char *)(v13 + 80) = v18;
      *(void *)(v13 + 88) = v17;
      *(unsigned char *)(v13 + 96) = v16;
      *(void *)(v13 + 104) = v8;
      *(void *)(v13 + 112) = v9;
      *(void *)(v13 + 120) = v15;
      *(void *)(v13 + 128) = v10;
      *(void *)(v2 + 16) = v25;
      sub_1C8CA4528(&v26, v2 + 40 * v11 + 32);
      v4 += 15;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C8CE2AA4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
    sub_1C8CB75C4(0, v1, 0);
    uint64_t v2 = v17;
    uint64_t v4 = (unsigned char *)(a1 + 64);
    do
    {
      uint64_t v5 = *((void *)v4 - 4);
      unint64_t v6 = *((void *)v4 - 3);
      uint64_t v7 = *((void *)v4 - 1);
      uint64_t v13 = *((void *)v4 - 2);
      char v8 = *v4;
      sub_1C8CA3CF8(v5, v6);
      uint64_t v17 = v2;
      unint64_t v9 = *(void *)(v2 + 16);
      unint64_t v10 = *(void *)(v2 + 24);
      swift_bridgeObjectRetain();
      if (v9 >= v10 >> 1)
      {
        sub_1C8CB75C4((void *)(v10 > 1), v9 + 1, 1);
        uint64_t v2 = v17;
      }
      v4 += 40;
      uint64_t v15 = &type metadata for Google_Protobuf_UninterpretedOption.NamePart;
      unint64_t v16 = sub_1C8D03BB4();
      uint64_t v11 = swift_allocObject();
      *(void *)&long long v14 = v11;
      *(void *)(v11 + 16) = v5;
      *(void *)(v11 + 24) = v6;
      *(void *)(v11 + 32) = v13;
      *(void *)(v11 + 40) = v7;
      *(unsigned char *)(v11 + 48) = v8;
      *(void *)(v2 + 16) = v9 + 1;
      sub_1C8CA4528(&v14, v2 + 40 * v9 + 32);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C8CE2BDC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v16 = MEMORY[0x1E4FBC860];
    sub_1C8CB75C4(0, v1, 0);
    uint64_t v2 = v16;
    uint64_t v4 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v5 = *(v4 - 2);
      unint64_t v6 = *(v4 - 1);
      uint64_t v7 = *v4;
      sub_1C8CA3CF8(v5, v6);
      uint64_t v16 = v2;
      unint64_t v9 = *(void *)(v2 + 16);
      unint64_t v8 = *(void *)(v2 + 24);
      swift_retain();
      if (v9 >= v8 >> 1)
      {
        sub_1C8CB75C4((void *)(v8 > 1), v9 + 1, 1);
        uint64_t v2 = v16;
      }
      long long v14 = &type metadata for Google_Protobuf_FileDescriptorProto;
      unint64_t v10 = sub_1C8D02DCC();
      *(void *)&long long v12 = v5;
      *((void *)&v12 + 1) = v6;
      unint64_t v15 = v10;
      uint64_t v13 = v7;
      *(void *)(v2 + 16) = v9 + 1;
      sub_1C8CA4528(&v12, v2 + 40 * v9 + 32);
      v4 += 3;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C8CE2CEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v20 = MEMORY[0x1E4FBC860];
    sub_1C8CB75C4(0, v3, 0);
    uint64_t v4 = v20;
    uint64_t v7 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v8 = *(v7 - 2);
      unint64_t v9 = *(v7 - 1);
      uint64_t v10 = *v7;
      sub_1C8CA3CF8(v8, v9);
      uint64_t v20 = v4;
      unint64_t v12 = *(void *)(v4 + 16);
      unint64_t v11 = *(void *)(v4 + 24);
      swift_retain();
      if (v12 >= v11 >> 1)
      {
        sub_1C8CB75C4((void *)(v11 > 1), v12 + 1, 1);
        uint64_t v4 = v20;
      }
      uint64_t v18 = a2;
      uint64_t v13 = a3();
      *(void *)&long long v16 = v8;
      *((void *)&v16 + 1) = v9;
      uint64_t v19 = v13;
      uint64_t v17 = v10;
      *(void *)(v4 + 16) = v12 + 1;
      sub_1C8CA4528(&v16, v4 + 40 * v12 + 32);
      v7 += 3;
      --v3;
    }
    while (v3);
  }
  return v4;
}

uint64_t Google_Protobuf_FileDescriptorSet.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CF8E6C(a1, a2, a3, (uint64_t (*)(void))sub_1C8D02DCC, (uint64_t)&type metadata for Google_Protobuf_FileDescriptorProto);
}

uint64_t Google_Protobuf_FileDescriptorSet.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CF8FA4(a1, a2, a3, (uint64_t (*)(void))sub_1C8D02DCC, (uint64_t)&type metadata for Google_Protobuf_FileDescriptorProto);
}

uint64_t static Google_Protobuf_FileDescriptorSet.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  unint64_t v3 = a1[2];
  uint64_t v4 = a2[1];
  unint64_t v5 = a2[2];
  if ((sub_1C8D010E8(*a1, *a2, (uint64_t (*)(uint64_t, uint64_t))sub_1C8CE4814) & 1) == 0) {
    return 0;
  }
  sub_1C8CA3CF8(v2, v3);
  sub_1C8CA3CF8(v4, v5);
  char v6 = sub_1C8D01FBC(v2, v3, v4, v5);
  sub_1C8CA3D5C(v4, v5);
  sub_1C8CA3D5C(v2, v3);
  return v6 & 1;
}

uint64_t Google_Protobuf_FileDescriptorSet.hashValue.getter()
{
  return sub_1C8CF90AC((void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_1C8CBD40C);
}

unint64_t sub_1C8CE2F38()
{
  return 0xD000000000000021;
}

uint64_t sub_1C8CE2F54()
{
  sub_1C8CE2BDC(*v0);
  char v1 = static Internal.areAllInitialized(_:)();
  swift_bridgeObjectRelease();
  return v1 & 1;
}

uint64_t (*sub_1C8CE2F94())()
{
  return nullsub_1;
}

uint64_t sub_1C8CE2FB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_FileDescriptorSet.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8CE2FCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_FileDescriptorSet.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8CE2FE4@<X0>(void *a1@<X8>)
{
  if (qword_1EA565A78 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA566258;
  uint64_t v3 = qword_1EA566260;
  uint64_t v4 = unk_1EA566268;
  *a1 = qword_1EA566250;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CE307C()
{
  return sub_1C8D6975C(*v0, v0[1], v0[2]);
}

uint64_t sub_1C8CE3088(uint64_t a1, uint64_t a2)
{
  return sub_1C8CF9218(a1, a2, (void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_1C8CBD40C);
}

double sub_1C8CE30A0(long long *a1)
{
  return sub_1C8CBD40C(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16));
}

uint64_t sub_1C8CE30AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CF92A0(a1, a2, a3, (void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_1C8CBD40C);
}

uint64_t sub_1C8CE30C4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  unint64_t v3 = a1[2];
  uint64_t v4 = a2[1];
  unint64_t v5 = a2[2];
  if ((sub_1C8D010E8(*a1, *a2, (uint64_t (*)(uint64_t, uint64_t))sub_1C8CE4814) & 1) == 0) {
    return 0;
  }
  sub_1C8CA3CF8(v2, v3);
  sub_1C8CA3CF8(v4, v5);
  char v6 = sub_1C8D01FBC(v2, v3, v4, v5);
  sub_1C8CA3D5C(v4, v5);
  sub_1C8CA3D5C(v2, v3);
  return v6 & 1;
}

unint64_t static Google_Protobuf_FileDescriptorProto.protoMessageName.getter()
{
  return 0xD000000000000023;
}

uint64_t sub_1C8CE3194()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234D2C0, &qword_1EA566270);
}

uint64_t static Google_Protobuf_FileDescriptorProto._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565A80 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA566278;
  uint64_t v3 = qword_1EA566280;
  uint64_t v4 = unk_1EA566288;
  *a1 = qword_1EA566270;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

double sub_1C8CE3240()
{
  type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass();
  uint64_t v0 = swift_allocObject();
  double result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  uint64_t v2 = MEMORY[0x1E4FBC860];
  *(void *)(v0 + 48) = MEMORY[0x1E4FBC860];
  *(void *)(v0 + 56) = v2;
  *(void *)(v0 + 64) = v2;
  *(void *)(v0 + 72) = v2;
  *(void *)(v0 + 80) = v2;
  *(void *)(v0 + 88) = v2;
  *(void *)(v0 + 96) = v2;
  *(_OWORD *)(v0 + 104) = 0u;
  *(_OWORD *)(v0 + 120) = 0u;
  *(_OWORD *)(v0 + 136) = 0u;
  *(_OWORD *)(v0 + 152) = 0u;
  *(void *)(v0 + 168) = 0;
  qword_1EA566290 = v0;
  return result;
}

uint64_t sub_1C8CE32A4(void *a1)
{
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 16) = 0u;
  uint64_t v3 = MEMORY[0x1E4FBC860];
  *(void *)(v1 + 48) = MEMORY[0x1E4FBC860];
  *(void *)(v1 + 56) = v3;
  *(void *)(v1 + 64) = v3;
  *(void *)(v1 + 72) = v3;
  *(void *)(v1 + 80) = v3;
  *(void *)(v1 + 88) = v3;
  *(void *)(v1 + 96) = v3;
  *(_OWORD *)(v1 + 120) = 0u;
  *(_OWORD *)(v1 + 152) = 0u;
  *(void *)(v1 + 168) = 0;
  *(_OWORD *)(v1 + 136) = 0u;
  *(_OWORD *)(v1 + 104) = 0u;
  swift_beginAccess();
  uint64_t v5 = a1[2];
  uint64_t v4 = a1[3];
  swift_beginAccess();
  *(void *)(v1 + 16) = v5;
  *(void *)(v1 + 24) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v7 = a1[4];
  uint64_t v6 = a1[5];
  swift_beginAccess();
  *(void *)(v1 + 32) = v7;
  *(void *)(v1 + 40) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v8 = a1[6];
  swift_beginAccess();
  *(void *)(v1 + 48) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v9 = a1[7];
  swift_beginAccess();
  *(void *)(v1 + 56) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v10 = a1[8];
  swift_beginAccess();
  *(void *)(v1 + 64) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v11 = a1[9];
  swift_beginAccess();
  *(void *)(v1 + 72) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v12 = a1[10];
  swift_beginAccess();
  *(void *)(v1 + 80) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v13 = a1[11];
  swift_beginAccess();
  *(void *)(v1 + 88) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v14 = a1[12];
  swift_beginAccess();
  *(void *)(v1 + 96) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v15 = a1[13];
  unint64_t v16 = a1[14];
  uint64_t v17 = a1[15];
  uint64_t v18 = a1[16];
  swift_beginAccess();
  uint64_t v19 = *(void *)(v1 + 104);
  unint64_t v20 = *(void *)(v1 + 112);
  uint64_t v21 = *(void *)(v1 + 120);
  *(void *)(v1 + 104) = v15;
  *(void *)(v1 + 112) = v16;
  *(void *)(v1 + 120) = v17;
  *(void *)(v1 + 128) = v18;
  sub_1C8CEF560(v15, v16, v17);
  sub_1C8CEF5AC(v19, v20, v21);
  swift_beginAccess();
  uint64_t v22 = a1[17];
  uint64_t v23 = a1[18];
  unint64_t v24 = a1[19];
  swift_beginAccess();
  uint64_t v25 = *(void *)(v1 + 136);
  uint64_t v26 = *(void *)(v1 + 144);
  unint64_t v27 = *(void *)(v1 + 152);
  *(void *)(v1 + 136) = v22;
  *(void *)(v1 + 144) = v23;
  *(void *)(v1 + 152) = v24;
  sub_1C8CEF5F8(v22, v23, v24);
  sub_1C8CEF640(v25, v26, v27);
  swift_beginAccess();
  uint64_t v29 = a1[20];
  uint64_t v28 = a1[21];
  swift_bridgeObjectRetain();
  swift_release();
  swift_beginAccess();
  *(void *)(v1 + 160) = v29;
  *(void *)(v1 + 168) = v28;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C8CE371C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C8CEF5AC(*(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120));
  sub_1C8CEF640(*(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 152));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C8CE379C()
{
  uint64_t v0 = sub_1C8CE371C();
  return MEMORY[0x1F4186488](v0, 176, 7);
}

uint64_t Google_Protobuf_FileDescriptorProto.isInitialized.getter()
{
  return sub_1C8CED6E0((uint64_t (*)(uint64_t))sub_1C8CE37E4);
}

uint64_t sub_1C8CE37E4(void *a1)
{
  swift_beginAccess();
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C8CE2CEC(v2, (uint64_t)&type metadata for Google_Protobuf_DescriptorProto, (uint64_t (*)(void))sub_1C8D04A08);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = (void *)(v3 + 32);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v6 = v5[3];
      uint64_t v7 = v5[4];
      __swift_project_boxed_opaque_existential_1(v5, v6);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v7 + 32))(v6, v7) & 1) == 0) {
        goto LABEL_30;
      }
      v5 += 5;
      if (!--v4)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_1C8CE2CEC(v8, (uint64_t)&type metadata for Google_Protobuf_EnumDescriptorProto, (uint64_t (*)(void))sub_1C8D053A4);
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    uint64_t v11 = (void *)(v9 + 32);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v12 = v11[3];
      uint64_t v13 = v11[4];
      __swift_project_boxed_opaque_existential_1(v11, v12);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v13 + 32))(v12, v13) & 1) == 0) {
        goto LABEL_30;
      }
      v11 += 5;
      if (!--v10)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v14 = swift_bridgeObjectRetain();
  uint64_t v15 = sub_1C8CE2CEC(v14, (uint64_t)&type metadata for Google_Protobuf_ServiceDescriptorProto, (uint64_t (*)(void))sub_1C8D0589C);
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(v15 + 16);
  if (v16)
  {
    uint64_t v17 = (void *)(v15 + 32);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v18 = v17[3];
      uint64_t v19 = v17[4];
      __swift_project_boxed_opaque_existential_1(v17, v18);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v19 + 32))(v18, v19) & 1) == 0) {
        goto LABEL_30;
      }
      v17 += 5;
      if (!--v16)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v20 = swift_bridgeObjectRetain();
  uint64_t v21 = sub_1C8CE2CEC(v20, (uint64_t)&type metadata for Google_Protobuf_FieldDescriptorProto, (uint64_t (*)(void))sub_1C8D05054);
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)(v21 + 16);
  if (!v22)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v26 = a1[15];
    if (v26)
    {
      uint64_t v28 = a1[13];
      unint64_t v27 = a1[14];
      sub_1C8CA3CF8(v28, v27);
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1C8CA3CF8(v28, v27);
      swift_bridgeObjectRetain();
      swift_retain();
      if ((ExtensionFieldValueSet.isInitialized.getter() & 1) == 0)
      {
LABEL_34:
        sub_1C8CEF5AC(v28, v27, v26);
        sub_1C8CEF5AC(v28, v27, v26);
        return 0;
      }
      swift_beginAccess();
      swift_retain();
      uint64_t v29 = swift_bridgeObjectRetain();
      uint64_t v30 = sub_1C8CE28D0(v29);
      swift_bridgeObjectRelease();
      uint64_t v31 = *(void *)(v30 + 16);
      if (v31)
      {
        unint64_t v32 = (void *)(v30 + 32);
        swift_bridgeObjectRetain();
        while (1)
        {
          uint64_t v33 = v32[3];
          uint64_t v34 = v32[4];
          __swift_project_boxed_opaque_existential_1(v32, v33);
          if (((*(uint64_t (**)(uint64_t, uint64_t))(v34 + 32))(v33, v34) & 1) == 0) {
            break;
          }
          v32 += 5;
          if (!--v31)
          {
            swift_bridgeObjectRelease();
            goto LABEL_28;
          }
        }
        swift_release();
        swift_bridgeObjectRelease_n();
        goto LABEL_34;
      }
LABEL_28:
      swift_bridgeObjectRelease();
      swift_release();
      sub_1C8CEF5AC(v28, v27, v26);
      sub_1C8CEF5AC(v28, v27, v26);
    }
    return 1;
  }
  uint64_t v23 = (void *)(v21 + 32);
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v24 = v23[3];
    uint64_t v25 = v23[4];
    __swift_project_boxed_opaque_existential_1(v23, v24);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v25 + 32))(v24, v25) & 1) == 0) {
      break;
    }
    v23 += 5;
    if (!--v22)
    {
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
  }
LABEL_30:
  swift_bridgeObjectRelease_n();
  return 0;
}

uint64_t Google_Protobuf_FileOptions.isInitialized.getter()
{
  if (ExtensionFieldValueSet.isInitialized.getter())
  {
    swift_beginAccess();
    swift_retain();
    uint64_t v0 = swift_bridgeObjectRetain();
    uint64_t v1 = sub_1C8CE28D0(v0);
    swift_bridgeObjectRelease();
    uint64_t v2 = *(void *)(v1 + 16);
    if (v2)
    {
      uint64_t v3 = (void *)(v1 + 32);
      swift_bridgeObjectRetain();
      uint64_t v4 = v2 - 1;
      do
      {
        uint64_t v5 = v3[3];
        uint64_t v6 = v3[4];
        __swift_project_boxed_opaque_existential_1(v3, v5);
        char v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 32))(v5, v6);
        char v8 = v7;
        BOOL v10 = v4-- != 0;
        if ((v7 & 1) == 0) {
          break;
        }
        v3 += 5;
      }
      while (v10);
      swift_bridgeObjectRelease();
    }
    else
    {
      char v8 = 1;
    }
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    char v8 = 0;
  }
  return v8 & 1;
}

uint64_t Google_Protobuf_FileDescriptorProto.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CED9F4(a1, a2, a3, (void (*)(void))type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass, 176, (uint64_t (*)(uint64_t))sub_1C8CE32A4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C8CE3DE8);
}

uint64_t sub_1C8CE3DE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = a4 + 16;
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 16);
  uint64_t result = v9(a3, a4);
  uint64_t v12 = v4;
  if (!v4)
  {
    uint64_t v41 = a1 + 64;
    uint64_t v42 = a1 + 160;
    uint64_t v39 = a1 + 136;
    uint64_t v40 = a1 + 56;
    uint64_t v13 = a1 + 96;
    uint64_t v37 = a1 + 88;
    uint64_t v38 = a1 + 104;
    uint64_t v35 = a1 + 72;
    uint64_t v36 = a1 + 80;
    uint64_t v33 = a1 + 32;
    uint64_t v34 = a1 + 48;
    uint64_t v32 = a1 + 16;
    while ((v11 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          uint64_t v19 = v32;
          goto LABEL_12;
        case 2:
          uint64_t v19 = v33;
LABEL_12:
          swift_beginAccess();
          uint64_t v18 = v12;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 344))(v19, a3, a4);
          goto LABEL_6;
        case 3:
          swift_beginAccess();
          uint64_t v18 = v12;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 352))(v34, a3, a4);
          goto LABEL_6;
        case 4:
          swift_beginAccess();
          uint64_t v14 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 416);
          unint64_t v15 = sub_1C8D04A08();
          uint64_t v16 = v35;
          uint64_t v17 = &type metadata for Google_Protobuf_DescriptorProto;
          goto LABEL_5;
        case 5:
          swift_beginAccess();
          uint64_t v14 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 416);
          unint64_t v15 = sub_1C8D053A4();
          uint64_t v16 = v36;
          uint64_t v17 = &type metadata for Google_Protobuf_EnumDescriptorProto;
LABEL_5:
          uint64_t v18 = v12;
          v14(v16, v17, v15, a3, a4);
LABEL_6:
          uint64_t v12 = v18;
          swift_endAccess();
          break;
        case 6:
          swift_beginAccess();
          uint64_t v20 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 416);
          unint64_t v21 = sub_1C8D0589C();
          uint64_t v22 = v37;
          uint64_t v23 = &type metadata for Google_Protobuf_ServiceDescriptorProto;
          goto LABEL_17;
        case 7:
          swift_beginAccess();
          uint64_t v20 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 416);
          unint64_t v21 = sub_1C8D05054();
          uint64_t v22 = v13;
          uint64_t v23 = &type metadata for Google_Protobuf_FieldDescriptorProto;
LABEL_17:
          v20(v22, v23, v21, a3, a4);
          goto LABEL_24;
        case 8:
          swift_beginAccess();
          uint64_t v24 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 408);
          unint64_t v25 = sub_1C8D040D4();
          v24(v38, &type metadata for Google_Protobuf_FileOptions, v25, a3, a4);
          goto LABEL_24;
        case 9:
          uint64_t v26 = v8;
          unint64_t v27 = v9;
          uint64_t v28 = v13;
          swift_beginAccess();
          uint64_t v29 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 408);
          unint64_t v30 = sub_1C8D06934();
          v29(v39, &type metadata for Google_Protobuf_SourceCodeInfo, v30, a3, a4);
          swift_endAccess();
          uint64_t v13 = v28;
          uint64_t v9 = v27;
          uint64_t v8 = v26;
          uint64_t result = v9(a3, a4);
          continue;
        case 10:
          uint64_t v31 = v40;
          goto LABEL_22;
        case 11:
          uint64_t v31 = v41;
LABEL_22:
          swift_beginAccess();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 88))(v31, a3, a4);
          goto LABEL_24;
        case 12:
          swift_beginAccess();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 344))(v42, a3, a4);
LABEL_24:
          swift_endAccess();
          break;
        default:
          break;
      }
      uint64_t result = v9(a3, a4);
    }
  }
  return result;
}

uint64_t Google_Protobuf_FileDescriptorProto.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CEEA54(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C8CE42A4);
}

uint64_t sub_1C8CE42A4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  uint64_t v10 = *(void *)(a1 + 24);
  if (v10)
  {
    uint64_t v11 = *v9;
    uint64_t v12 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, void *))a4[14];
    swift_bridgeObjectRetain();
    v12(v11, v10, 1, a3, a4);
    if (v5) {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t v13 = *(void *)(a1 + 40);
  if (v13)
  {
    uint64_t v14 = *(void *)(a1 + 32);
    unint64_t v15 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, void *))a4[14];
    swift_bridgeObjectRetain();
    v15(v14, v13, 2, a3, a4);
    if (v5) {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (!*(void *)(*(void *)(a1 + 48) + 16)) {
    goto LABEL_10;
  }
  uint64_t v16 = (void (*)(uint64_t, uint64_t, uint64_t, void *))a4[32];
  uint64_t v17 = swift_bridgeObjectRetain();
  v16(v17, 3, a3, a4);
  if (v5) {
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
LABEL_10:
  swift_beginAccess();
  if (*(void *)(*(void *)(a1 + 72) + 16))
  {
    uint64_t v18 = (void (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, void *))a4[35];
    unint64_t v19 = sub_1C8D04A08();
    uint64_t v20 = swift_bridgeObjectRetain();
    v18(v20, 4, &type metadata for Google_Protobuf_DescriptorProto, v19, a3, a4);
    if (v5) {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (!*(void *)(*(void *)(a1 + 80) + 16)
    || (uint64_t v22 = (void (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, void *))a4[35],
        unint64_t v23 = sub_1C8D053A4(),
        uint64_t v24 = swift_bridgeObjectRetain(),
        v22(v24, 5, &type metadata for Google_Protobuf_EnumDescriptorProto, v23, a3, a4),
        uint64_t result = swift_bridgeObjectRelease(),
        !v5))
  {
    swift_beginAccess();
    if (!*(void *)(*(void *)(a1 + 88) + 16)
      || (unint64_t v25 = (void (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, void *))a4[35],
          unint64_t v26 = sub_1C8D0589C(),
          uint64_t v27 = swift_bridgeObjectRetain(),
          v25(v27, 6, &type metadata for Google_Protobuf_ServiceDescriptorProto, v26, a3, a4),
          uint64_t result = swift_bridgeObjectRelease(),
          !v5))
    {
      swift_beginAccess();
      if (!*(void *)(*(void *)(a1 + 96) + 16)
        || (uint64_t v28 = (void (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, void *))a4[35],
            unint64_t v29 = sub_1C8D05054(),
            uint64_t v30 = swift_bridgeObjectRetain(),
            v28(v30, 7, &type metadata for Google_Protobuf_FieldDescriptorProto, v29, a3, a4),
            uint64_t result = swift_bridgeObjectRelease(),
            !v5))
      {
        swift_beginAccess();
        uint64_t v31 = *(void *)(a1 + 120);
        if (!v31
          || (uint64_t v32 = *(void *)(a1 + 128),
              long long v45 = *(_OWORD *)(a1 + 104),
              uint64_t v46 = v31,
              uint64_t v47 = v32,
              uint64_t v33 = (uint64_t (*)(long long *, uint64_t, ValueMetadata *, unint64_t, uint64_t, void *))a4[17],
              unint64_t v34 = sub_1C8D040D4(),
              uint64_t result = v33(&v45, 8, &type metadata for Google_Protobuf_FileOptions, v34, a3, a4),
              !v5))
        {
          swift_beginAccess();
          if (!*(void *)(a1 + 136)
            || (uint64_t v48 = *(void *)(a1 + 136),
                long long v49 = *(_OWORD *)(a1 + 144),
                uint64_t v35 = (uint64_t (*)(uint64_t *, uint64_t, ValueMetadata *, unint64_t, uint64_t, void *))a4[17],
                unint64_t v36 = sub_1C8D06934(),
                uint64_t result = v35(&v48, 9, &type metadata for Google_Protobuf_SourceCodeInfo, v36, a3, a4),
                !v5))
          {
            swift_beginAccess();
            if (!*(void *)(*(void *)(a1 + 56) + 16)
              || (uint64_t v37 = (void (*)(uint64_t, uint64_t, uint64_t, void *))a4[21],
                  uint64_t v38 = swift_bridgeObjectRetain(),
                  v37(v38, 10, a3, a4),
                  uint64_t result = swift_bridgeObjectRelease(),
                  !v5))
            {
              swift_beginAccess();
              if (!*(void *)(*(void *)(a1 + 64) + 16)
                || (uint64_t v39 = (void (*)(uint64_t, uint64_t, uint64_t, void *))a4[21],
                    uint64_t v40 = swift_bridgeObjectRetain(),
                    v39(v40, 11, a3, a4),
                    uint64_t result = swift_bridgeObjectRelease(),
                    !v5))
              {
                uint64_t v41 = (uint64_t *)(a1 + 160);
                uint64_t result = swift_beginAccess();
                uint64_t v42 = *(void *)(a1 + 168);
                if (v42)
                {
                  uint64_t v43 = *v41;
                  uint64_t v44 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, void *))a4[14];
                  swift_bridgeObjectRetain();
                  v44(v43, v42, 12, a3, a4);
                  return swift_bridgeObjectRelease();
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t static Google_Protobuf_FileDescriptorProto.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1C8D02E28(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1C8CE4814) & 1;
}

uint64_t sub_1C8CE4814(void *a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  swift_beginAccess();
  uint64_t v6 = *(void *)(a2 + 24);
  if (!v5)
  {
    if (v6) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v6) {
    return 0;
  }
  BOOL v7 = v4 == *(void *)(a2 + 16) && v5 == v6;
  if (v7 || (v8 = sub_1C8D887C0(), uint64_t result = 0, (v8 & 1) != 0))
  {
LABEL_10:
    swift_beginAccess();
    uint64_t v10 = a1[4];
    uint64_t v11 = a1[5];
    swift_beginAccess();
    uint64_t v12 = *(void *)(a2 + 40);
    if (v11)
    {
      if (v12)
      {
        if (v10 != *(void *)(a2 + 32) || v11 != v12)
        {
          char v13 = sub_1C8D887C0();
          uint64_t result = 0;
          if ((v13 & 1) == 0) {
            return result;
          }
        }
LABEL_17:
        swift_beginAccess();
        uint64_t v14 = (void *)a1[6];
        swift_beginAccess();
        if ((sub_1C8CFBFEC(v14, *(void **)(a2 + 48)) & 1) == 0) {
          return 0;
        }
        swift_beginAccess();
        uint64_t v15 = a1[7];
        swift_beginAccess();
        if (!sub_1C8CFB550(v15, *(void *)(a2 + 56))) {
          return 0;
        }
        swift_beginAccess();
        uint64_t v16 = a1[8];
        swift_beginAccess();
        if (!sub_1C8CFB550(v16, *(void *)(a2 + 64))) {
          return 0;
        }
        swift_beginAccess();
        uint64_t v17 = a1[9];
        swift_beginAccess();
        uint64_t v18 = *(void *)(a2 + 72);
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v19 = sub_1C8D010E8(v17, v18, sub_1C8CE673C);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v19 & 1) == 0) {
          goto LABEL_46;
        }
        swift_beginAccess();
        uint64_t v20 = a1[10];
        swift_beginAccess();
        uint64_t v21 = *(void *)(a2 + 80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v22 = sub_1C8D010E8(v20, v21, sub_1C8CEB6F0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v22 & 1) == 0) {
          goto LABEL_46;
        }
        swift_beginAccess();
        uint64_t v23 = a1[11];
        swift_beginAccess();
        uint64_t v24 = *(void *)(a2 + 88);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v25 = sub_1C8D010E8(v23, v24, (uint64_t (*)(uint64_t, uint64_t))sub_1C8CEDEA0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v25 & 1) == 0) {
          goto LABEL_46;
        }
        swift_beginAccess();
        uint64_t v26 = a1[12];
        swift_beginAccess();
        uint64_t v27 = *(void *)(a2 + 96);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v28 = sub_1C8D010E8(v26, v27, (uint64_t (*)(uint64_t, uint64_t))sub_1C8CE92EC);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v28 & 1) == 0) {
          goto LABEL_46;
        }
        swift_beginAccess();
        uint64_t v30 = a1[13];
        unint64_t v29 = a1[14];
        uint64_t v32 = a1[15];
        uint64_t v31 = a1[16];
        swift_beginAccess();
        uint64_t v34 = *(void *)(a2 + 104);
        unint64_t v33 = *(void *)(a2 + 112);
        uint64_t v36 = *(void *)(a2 + 120);
        uint64_t v35 = *(void *)(a2 + 128);
        if (v32)
        {
          uint64_t v53 = v30;
          unint64_t v54 = v29;
          uint64_t v55 = v32;
          uint64_t v56 = v31;
          if (v36)
          {
            v52[0] = v34;
            v52[1] = v33;
            v52[2] = v36;
            v52[3] = v35;
            sub_1C8CA3CF8(v30, v29);
            swift_bridgeObjectRetain();
            swift_retain();
            sub_1C8CA3CF8(v30, v29);
            swift_bridgeObjectRetain();
            swift_retain();
            char v37 = _s20SiriOntologyProtobuf07Google_C12_FileOptionsV2eeoiySbAC_ACtFZ_0(&v53, v52);
            sub_1C8CA3D5C(v53, v54);
            swift_release();
            swift_bridgeObjectRelease();
            sub_1C8CEF5AC(v30, v29, v32);
            if ((v37 & 1) == 0) {
              goto LABEL_46;
            }
LABEL_29:
            swift_beginAccess();
            uint64_t v39 = a1[17];
            uint64_t v38 = a1[18];
            unint64_t v40 = a1[19];
            swift_beginAccess();
            uint64_t v42 = *(void *)(a2 + 136);
            uint64_t v41 = *(void *)(a2 + 144);
            unint64_t v43 = *(void *)(a2 + 152);
            if (v39)
            {
              if (v42)
              {
                sub_1C8CEF5F8(v39, v38, v40);
                sub_1C8CEF5F8(v39, v38, v40);
                sub_1C8CEF5F8(v42, v41, v43);
                if (sub_1C8CFB628(v39, v42))
                {
                  sub_1C8CA3CF8(v38, v40);
                  sub_1C8CA3CF8(v41, v43);
                  char v44 = sub_1C8D01FBC(v38, v40, v41, v43);
                  sub_1C8CA3D5C(v41, v43);
                  sub_1C8CA3D5C(v38, v40);
                  sub_1C8CEF640(v42, v41, v43);
                  swift_bridgeObjectRelease();
                  sub_1C8CA3D5C(v38, v40);
                  sub_1C8CEF640(v39, v38, v40);
                  if ((v44 & 1) == 0) {
                    goto LABEL_46;
                  }
                  goto LABEL_37;
                }
                sub_1C8CEF640(v42, v41, v43);
                swift_bridgeObjectRelease();
                sub_1C8CA3D5C(v38, v40);
                uint64_t v48 = v39;
                uint64_t v49 = v38;
                unint64_t v50 = v40;
LABEL_45:
                sub_1C8CEF640(v48, v49, v50);
                goto LABEL_46;
              }
              swift_bridgeObjectRetain();
              sub_1C8CA3CF8(v38, v40);
              swift_bridgeObjectRetain();
              sub_1C8CA3CF8(v38, v40);
              swift_bridgeObjectRelease();
              sub_1C8CA3D5C(v38, v40);
            }
            else if (!v42)
            {
LABEL_37:
              swift_beginAccess();
              uint64_t v45 = a1[20];
              uint64_t v46 = a1[21];
              swift_beginAccess();
              uint64_t v47 = *(void *)(a2 + 168);
              if (!v46)
              {
                swift_bridgeObjectRetain();
                swift_release();
                swift_release();
                if (v47)
                {
                  swift_bridgeObjectRelease();
                  return 0;
                }
                return 1;
              }
              if (v47)
              {
                if (v45 == *(void *)(a2 + 160) && v46 == v47)
                {
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  swift_release();
                  swift_release();
                }
                else
                {
                  char v51 = sub_1C8D887C0();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  swift_release();
                  swift_release();
                  uint64_t result = 0;
                  if ((v51 & 1) == 0) {
                    return result;
                  }
                }
                return 1;
              }
LABEL_46:
              swift_release();
              swift_release();
              return 0;
            }
            sub_1C8CEF5F8(v42, v41, v43);
            sub_1C8CEF640(v39, v38, v40);
            uint64_t v48 = v42;
            uint64_t v49 = v41;
            unint64_t v50 = v43;
            goto LABEL_45;
          }
          sub_1C8CA3CF8(v30, v29);
          swift_bridgeObjectRetain();
          swift_retain();
          sub_1C8CA3CF8(v30, v29);
          swift_bridgeObjectRetain();
          swift_retain();
          sub_1C8CA3D5C(v30, v29);
          swift_release();
          swift_bridgeObjectRelease();
        }
        else if (!v36)
        {
          goto LABEL_29;
        }
        sub_1C8CEF560(v34, v33, v36);
        sub_1C8CEF5AC(v30, v29, v32);
        sub_1C8CEF5AC(v34, v33, v36);
        goto LABEL_46;
      }
    }
    else if (!v12)
    {
      goto LABEL_17;
    }
    return 0;
  }
  return result;
}

uint64_t Google_Protobuf_FileDescriptorProto.hashValue.getter()
{
  return sub_1C8CF90AC((void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_1C8CBCBEC);
}

uint64_t sub_1C8CE4FF0@<X0>(uint64_t a1@<X8>)
{
  return sub_1C8CC0424(&qword_1EA565A88, &qword_1EA566290, a1);
}

unint64_t sub_1C8CE5014()
{
  return 0xD000000000000023;
}

uint64_t sub_1C8CE5030(uint64_t a1, uint64_t a2)
{
  return sub_1C8CEE28C(a1, a2, (uint64_t (*)(uint64_t))sub_1C8CE37E4);
}

uint64_t sub_1C8CE5048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_FileDescriptorProto.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8CE5060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_FileDescriptorProto.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8CE5078@<X0>(void *a1@<X8>)
{
  if (qword_1EA565A80 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA566278;
  uint64_t v3 = qword_1EA566280;
  uint64_t v4 = unk_1EA566288;
  *a1 = qword_1EA566270;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CE5110()
{
  return sub_1C8D69784(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16));
}

uint64_t sub_1C8CE511C(uint64_t a1, uint64_t a2)
{
  return sub_1C8CF9218(a1, a2, (void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_1C8CBCBEC);
}

double sub_1C8CE5134(long long *a1)
{
  return sub_1C8CBCBEC(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16));
}

uint64_t sub_1C8CE5140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CF92A0(a1, a2, a3, (void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_1C8CBCBEC);
}

uint64_t sub_1C8CE5158(uint64_t *a1, uint64_t *a2)
{
  return sub_1C8D02E28(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1C8CE4814) & 1;
}

unint64_t static Google_Protobuf_DescriptorProto.protoMessageName.getter()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_1C8CE51A4()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234CC68, &qword_1EA566298);
}

uint64_t static Google_Protobuf_DescriptorProto._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565A90 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA5662A0;
  uint64_t v3 = qword_1EA5662A8;
  uint64_t v4 = unk_1EA5662B0;
  *a1 = qword_1EA566298;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

double sub_1C8CE5250()
{
  type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass();
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *(void *)(v0 + 32) = MEMORY[0x1E4FBC860];
  *(void *)(v0 + 40) = v1;
  *(void *)(v0 + 48) = v1;
  *(void *)(v0 + 56) = v1;
  *(void *)(v0 + 64) = v1;
  *(void *)(v0 + 72) = v1;
  double result = 0.0;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_DWORD *)(v0 + 112) = 0;
  *(void *)(v0 + 120) = v1;
  *(void *)(v0 + 128) = v1;
  qword_1EA5662B8 = v0;
  return result;
}

uint64_t sub_1C8CE52A8(uint64_t a1)
{
  uint64_t v2 = v1;
  *(void *)(v1 + 24) = 0;
  *(void *)(v1 + 16) = 0;
  uint64_t v4 = MEMORY[0x1E4FBC860];
  *(void *)(v1 + 32) = MEMORY[0x1E4FBC860];
  *(void *)(v1 + 40) = v4;
  *(void *)(v1 + 48) = v4;
  *(void *)(v1 + 56) = v4;
  *(void *)(v1 + 64) = v4;
  *(void *)(v1 + 72) = v4;
  *(_OWORD *)(v1 + 96) = 0u;
  *(_DWORD *)(v1 + 112) = 0;
  *(void *)(v1 + 120) = v4;
  *(void *)(v1 + 128) = v4;
  *(_OWORD *)(v1 + 80) = 0u;
  swift_beginAccess();
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  swift_beginAccess();
  *(void *)(v1 + 16) = v6;
  *(void *)(v1 + 24) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v7 = *(void *)(a1 + 32);
  swift_beginAccess();
  *(void *)(v2 + 32) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v8 = *(void *)(a1 + 40);
  swift_beginAccess();
  *(void *)(v2 + 40) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v9 = *(void *)(a1 + 48);
  swift_beginAccess();
  *(void *)(v2 + 48) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v10 = *(void *)(a1 + 56);
  swift_beginAccess();
  *(void *)(v2 + 56) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v11 = *(void *)(a1 + 64);
  swift_beginAccess();
  *(void *)(v2 + 64) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v12 = *(void *)(a1 + 72);
  swift_beginAccess();
  *(void *)(v2 + 72) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v13 = *(void *)(a1 + 80);
  uint64_t v14 = *(void *)(a1 + 88);
  unint64_t v15 = *(void *)(a1 + 96);
  uint64_t v16 = *(void *)(a1 + 104);
  LODWORD(v6) = *(_DWORD *)(a1 + 112);
  swift_beginAccess();
  uint64_t v17 = *(void *)(v2 + 80);
  uint64_t v18 = *(void *)(v2 + 88);
  unint64_t v19 = *(void *)(v2 + 96);
  *(void *)(v2 + 80) = v13;
  *(void *)(v2 + 88) = v14;
  *(void *)(v2 + 96) = v15;
  *(void *)(v2 + 104) = v16;
  *(_DWORD *)(v2 + 112) = v6;
  sub_1C8CEF6AC(v13, v14, v15);
  sub_1C8CEF708(v17, v18, v19);
  swift_beginAccess();
  uint64_t v20 = *(void *)(a1 + 120);
  swift_beginAccess();
  *(void *)(v2 + 120) = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v21 = *(void *)(a1 + 128);
  swift_bridgeObjectRetain();
  swift_release();
  swift_beginAccess();
  *(void *)(v2 + 128) = v21;
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1C8CE5680()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C8CEF708(*(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C8CE56F0()
{
  uint64_t v0 = sub_1C8CE5680();
  return MEMORY[0x1F4186488](v0, 136, 7);
}

uint64_t Google_Protobuf_DescriptorProto.isInitialized.getter()
{
  return sub_1C8CED6E0((uint64_t (*)(uint64_t))sub_1C8CE5738);
}

uint64_t sub_1C8CE5738(void *a1)
{
  swift_beginAccess();
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C8CE2CEC(v2, (uint64_t)&type metadata for Google_Protobuf_FieldDescriptorProto, (uint64_t (*)(void))sub_1C8D05054);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = (void *)(v3 + 32);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v6 = v5[3];
      uint64_t v7 = v5[4];
      __swift_project_boxed_opaque_existential_1(v5, v6);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v7 + 32))(v6, v7) & 1) == 0) {
        goto LABEL_38;
      }
      v5 += 5;
      if (!--v4)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_1C8CE2CEC(v8, (uint64_t)&type metadata for Google_Protobuf_FieldDescriptorProto, (uint64_t (*)(void))sub_1C8D05054);
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    uint64_t v11 = (void *)(v9 + 32);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v12 = v11[3];
      uint64_t v13 = v11[4];
      __swift_project_boxed_opaque_existential_1(v11, v12);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v13 + 32))(v12, v13) & 1) == 0) {
        goto LABEL_38;
      }
      v11 += 5;
      if (!--v10)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v14 = swift_bridgeObjectRetain();
  uint64_t v15 = sub_1C8CE2CEC(v14, (uint64_t)&type metadata for Google_Protobuf_DescriptorProto, (uint64_t (*)(void))sub_1C8D04A08);
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(v15 + 16);
  if (v16)
  {
    uint64_t v17 = (void *)(v15 + 32);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v18 = v17[3];
      uint64_t v19 = v17[4];
      __swift_project_boxed_opaque_existential_1(v17, v18);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v19 + 32))(v18, v19) & 1) == 0) {
        goto LABEL_38;
      }
      v17 += 5;
      if (!--v16)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v20 = swift_bridgeObjectRetain();
  uint64_t v21 = sub_1C8CE2CEC(v20, (uint64_t)&type metadata for Google_Protobuf_EnumDescriptorProto, (uint64_t (*)(void))sub_1C8D053A4);
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)(v21 + 16);
  if (v22)
  {
    uint64_t v23 = (void *)(v21 + 32);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v24 = v23[3];
      uint64_t v25 = v23[4];
      __swift_project_boxed_opaque_existential_1(v23, v24);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v25 + 32))(v24, v25) & 1) == 0) {
        goto LABEL_38;
      }
      v23 += 5;
      if (!--v22)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v26 = swift_bridgeObjectRetain();
  uint64_t v27 = sub_1C8CE2CEC(v26, (uint64_t)&type metadata for Google_Protobuf_DescriptorProto.ExtensionRange, (uint64_t (*)(void))sub_1C8D04BB0);
  swift_bridgeObjectRelease();
  uint64_t v28 = *(void *)(v27 + 16);
  if (v28)
  {
    unint64_t v29 = (void *)(v27 + 32);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v30 = v29[3];
      uint64_t v31 = v29[4];
      __swift_project_boxed_opaque_existential_1(v29, v30);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v31 + 32))(v30, v31) & 1) == 0) {
        goto LABEL_38;
      }
      v29 += 5;
      if (!--v28)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v32 = swift_bridgeObjectRetain();
  uint64_t v33 = sub_1C8CE2CEC(v32, (uint64_t)&type metadata for Google_Protobuf_OneofDescriptorProto, (uint64_t (*)(void))sub_1C8D051FC);
  swift_bridgeObjectRelease();
  uint64_t v34 = *(void *)(v33 + 16);
  if (v34)
  {
    uint64_t v35 = (void *)(v33 + 32);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v36 = v35[3];
      uint64_t v37 = v35[4];
      __swift_project_boxed_opaque_existential_1(v35, v36);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v37 + 32))(v36, v37) & 1) == 0) {
        break;
      }
      v35 += 5;
      if (!--v34)
      {
        swift_bridgeObjectRelease();
        goto LABEL_31;
      }
    }
LABEL_38:
    swift_bridgeObjectRelease_n();
    return 0;
  }
LABEL_31:
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v38 = a1[10];
  if (v38)
  {
    uint64_t v40 = a1[11];
    unint64_t v39 = a1[12];
    swift_bridgeObjectRetain();
    sub_1C8CA3CF8(v40, v39);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C8CA3CF8(v40, v39);
    swift_bridgeObjectRetain();
    if (ExtensionFieldValueSet.isInitialized.getter())
    {
      uint64_t v41 = sub_1C8CE28D0(v38);
      uint64_t v42 = *(void *)(v41 + 16);
      if (!v42)
      {
LABEL_37:
        swift_bridgeObjectRelease();
        sub_1C8CEF708(v38, v40, v39);
        sub_1C8CEF708(v38, v40, v39);
        return 1;
      }
      unint64_t v43 = (void *)(v41 + 32);
      while (1)
      {
        uint64_t v44 = v43[3];
        uint64_t v45 = v43[4];
        __swift_project_boxed_opaque_existential_1(v43, v44);
        if (((*(uint64_t (**)(uint64_t, uint64_t))(v45 + 32))(v44, v45) & 1) == 0) {
          break;
        }
        v43 += 5;
        if (!--v42) {
          goto LABEL_37;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v47 = v38;
      uint64_t v48 = v40;
      unint64_t v49 = v39;
    }
    else
    {
      uint64_t v47 = v38;
      uint64_t v48 = v40;
      unint64_t v49 = v39;
    }
    sub_1C8CEF708(v47, v48, v49);
    sub_1C8CEF708(v38, v40, v39);
    return 0;
  }
  return 1;
}

uint64_t Google_Protobuf_MessageOptions.isInitialized.getter()
{
  uint64_t v1 = *v0;
  if (ExtensionFieldValueSet.isInitialized.getter())
  {
    uint64_t v2 = sub_1C8CE28D0(v1);
    uint64_t v3 = *(void *)(v2 + 16);
    if (v3)
    {
      uint64_t v4 = (void *)(v2 + 32);
      uint64_t v5 = v3 - 1;
      do
      {
        uint64_t v6 = v4[3];
        uint64_t v7 = v4[4];
        __swift_project_boxed_opaque_existential_1(v4, v6);
        char v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 32))(v6, v7);
        char v9 = v8;
        BOOL v11 = v5-- != 0;
        if ((v8 & 1) == 0) {
          break;
        }
        v4 += 5;
      }
      while (v11);
    }
    else
    {
      char v9 = 1;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = 0;
  }
  return v9 & 1;
}

uint64_t Google_Protobuf_DescriptorProto.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CED9F4(a1, a2, a3, (void (*)(void))type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass, 136, sub_1C8CE52A8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C8CE5E40);
}

uint64_t sub_1C8CE5E40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v8 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 16);
  uint64_t result = v8(a3, a4);
  uint64_t v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          swift_beginAccess();
          uint64_t v16 = v11;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 344))(a1 + 16, a3, a4);
          goto LABEL_6;
        case 2:
          swift_beginAccess();
          uint64_t v12 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 416);
          unint64_t v13 = sub_1C8D05054();
          uint64_t v14 = a1 + 32;
          uint64_t v15 = &type metadata for Google_Protobuf_FieldDescriptorProto;
          goto LABEL_5;
        case 3:
          swift_beginAccess();
          uint64_t v12 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 416);
          unint64_t v13 = sub_1C8D04A08();
          uint64_t v14 = a1 + 48;
          uint64_t v15 = &type metadata for Google_Protobuf_DescriptorProto;
          goto LABEL_5;
        case 4:
          swift_beginAccess();
          uint64_t v12 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 416);
          unint64_t v13 = sub_1C8D053A4();
          uint64_t v14 = a1 + 56;
          uint64_t v15 = &type metadata for Google_Protobuf_EnumDescriptorProto;
          goto LABEL_5;
        case 5:
          swift_beginAccess();
          uint64_t v12 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 416);
          unint64_t v13 = sub_1C8D04BB0();
          uint64_t v14 = a1 + 64;
          uint64_t v15 = &type metadata for Google_Protobuf_DescriptorProto.ExtensionRange;
          goto LABEL_5;
        case 6:
          swift_beginAccess();
          uint64_t v12 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 416);
          unint64_t v13 = sub_1C8D05054();
          uint64_t v14 = a1 + 40;
          uint64_t v15 = &type metadata for Google_Protobuf_FieldDescriptorProto;
          goto LABEL_5;
        case 7:
          swift_beginAccess();
          uint64_t v17 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 408);
          unint64_t v18 = sub_1C8D03738();
          uint64_t v16 = v11;
          v17(a1 + 80, &type metadata for Google_Protobuf_MessageOptions, v18, a3, a4);
          goto LABEL_6;
        case 8:
          swift_beginAccess();
          uint64_t v12 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 416);
          unint64_t v13 = sub_1C8D051FC();
          uint64_t v14 = a1 + 72;
          uint64_t v15 = &type metadata for Google_Protobuf_OneofDescriptorProto;
          goto LABEL_5;
        case 9:
          swift_beginAccess();
          uint64_t v12 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 416);
          unint64_t v13 = sub_1C8D04D58();
          uint64_t v14 = a1 + 120;
          uint64_t v15 = &type metadata for Google_Protobuf_DescriptorProto.ReservedRange;
LABEL_5:
          uint64_t v16 = v11;
          v12(v14, v15, v13, a3, a4);
          goto LABEL_6;
        case 10:
          swift_beginAccess();
          uint64_t v16 = v11;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 352))(a1 + 128, a3, a4);
LABEL_6:
          uint64_t v11 = v16;
          swift_endAccess();
          break;
        default:
          break;
      }
      uint64_t result = v8(a3, a4);
    }
  }
  return result;
}

uint64_t Google_Protobuf_DescriptorProto.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CEEA54(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C8CE6248);
}

uint64_t sub_1C8CE6248(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = v4;
  char v9 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  uint64_t v10 = *(void *)(a1 + 24);
  if (v10)
  {
    uint64_t v11 = *v9;
    uint64_t v12 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, void *))a4[14];
    swift_bridgeObjectRetain();
    v12(v11, v10, 1, a3, a4);
    if (v5) {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*(void *)(*(void *)(a1 + 32) + 16))
  {
    unint64_t v13 = (void (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, void *))a4[35];
    unint64_t v14 = sub_1C8D05054();
    uint64_t v15 = swift_bridgeObjectRetain();
    v13(v15, 2, &type metadata for Google_Protobuf_FieldDescriptorProto, v14, a3, a4);
    if (v5) {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (!*(void *)(*(void *)(a1 + 48) + 16)
    || (uint64_t v17 = (void (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, void *))a4[35],
        unint64_t v18 = sub_1C8D04A08(),
        uint64_t v19 = swift_bridgeObjectRetain(),
        v17(v19, 3, &type metadata for Google_Protobuf_DescriptorProto, v18, a3, a4),
        uint64_t result = swift_bridgeObjectRelease(),
        !v5))
  {
    swift_beginAccess();
    if (!*(void *)(*(void *)(a1 + 56) + 16)
      || (uint64_t v20 = (void (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, void *))a4[35],
          unint64_t v21 = sub_1C8D053A4(),
          uint64_t v22 = swift_bridgeObjectRetain(),
          v20(v22, 4, &type metadata for Google_Protobuf_EnumDescriptorProto, v21, a3, a4),
          uint64_t result = swift_bridgeObjectRelease(),
          !v5))
    {
      swift_beginAccess();
      if (!*(void *)(*(void *)(a1 + 64) + 16)
        || (uint64_t v23 = (void (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, void *))a4[35],
            unint64_t v24 = sub_1C8D04BB0(),
            uint64_t v25 = swift_bridgeObjectRetain(),
            v23(v25, 5, &type metadata for Google_Protobuf_DescriptorProto.ExtensionRange, v24, a3, a4),
            uint64_t result = swift_bridgeObjectRelease(),
            !v5))
      {
        swift_beginAccess();
        if (!*(void *)(*(void *)(a1 + 40) + 16)
          || (uint64_t v26 = (void (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, void *))a4[35],
              unint64_t v27 = sub_1C8D05054(),
              uint64_t v28 = swift_bridgeObjectRetain(),
              v26(v28, 6, &type metadata for Google_Protobuf_FieldDescriptorProto, v27, a3, a4),
              uint64_t result = swift_bridgeObjectRelease(),
              !v5))
        {
          swift_beginAccess();
          if (!*(void *)(a1 + 80)) {
            goto LABEL_27;
          }
          int v29 = *(_DWORD *)(a1 + 112);
          uint64_t v30 = *(void *)(a1 + 104);
          uint64_t v41 = *(void *)(a1 + 80);
          long long v42 = *(_OWORD *)(a1 + 88);
          uint64_t v43 = v30;
          int v44 = v29;
          uint64_t v31 = (uint64_t (*)(uint64_t *, uint64_t, ValueMetadata *, unint64_t, uint64_t, void *))a4[17];
          unint64_t v32 = sub_1C8D03738();
          uint64_t result = v31(&v41, 7, &type metadata for Google_Protobuf_MessageOptions, v32, a3, a4);
          if (!v5)
          {
LABEL_27:
            swift_beginAccess();
            if (!*(void *)(*(void *)(a1 + 72) + 16)
              || (uint64_t v33 = (void (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, void *))a4[35],
                  unint64_t v34 = sub_1C8D051FC(),
                  uint64_t v35 = swift_bridgeObjectRetain(),
                  v33(v35, 8, &type metadata for Google_Protobuf_OneofDescriptorProto, v34, a3, a4),
                  uint64_t result = swift_bridgeObjectRelease(),
                  !v5))
            {
              swift_beginAccess();
              if (!*(void *)(*(void *)(a1 + 120) + 16)
                || (uint64_t v36 = (void (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, void *))a4[35],
                    unint64_t v37 = sub_1C8D04D58(),
                    uint64_t v38 = swift_bridgeObjectRetain(),
                    v36(v38, 9, &type metadata for Google_Protobuf_DescriptorProto.ReservedRange, v37, a3, a4),
                    uint64_t result = swift_bridgeObjectRelease(),
                    !v5))
              {
                uint64_t result = swift_beginAccess();
                if (*(void *)(*(void *)(a1 + 128) + 16))
                {
                  unint64_t v39 = (void (*)(uint64_t, uint64_t, uint64_t, void *))a4[32];
                  uint64_t v40 = swift_bridgeObjectRetain();
                  v39(v40, 10, a3, a4);
                  return swift_bridgeObjectRelease();
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t static Google_Protobuf_DescriptorProto.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1C8D02E28(a1, a2, sub_1C8CE673C) & 1;
}

uint64_t sub_1C8CE673C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  swift_beginAccess();
  uint64_t v6 = *(void *)(a2 + 24);
  if (!v5)
  {
    if (!v6) {
      goto LABEL_11;
    }
LABEL_10:
    char v8 = 0;
    return v8 & 1;
  }
  if (!v6) {
    goto LABEL_10;
  }
  BOOL v7 = v4 == *(void *)(a2 + 16) && v5 == v6;
  if (v7 || (char v8 = 0, (sub_1C8D887C0() & 1) != 0))
  {
LABEL_11:
    swift_beginAccess();
    uint64_t v9 = *(void *)(a1 + 32);
    swift_beginAccess();
    uint64_t v10 = *(void *)(a2 + 32);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v11 = sub_1C8D010E8(v9, v10, (uint64_t (*)(uint64_t, uint64_t))sub_1C8CE92EC);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0) {
      goto LABEL_26;
    }
    swift_beginAccess();
    uint64_t v12 = *(void *)(a1 + 40);
    swift_beginAccess();
    uint64_t v13 = *(void *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v14 = sub_1C8D010E8(v12, v13, (uint64_t (*)(uint64_t, uint64_t))sub_1C8CE92EC);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0) {
      goto LABEL_26;
    }
    swift_beginAccess();
    uint64_t v15 = *(void *)(a1 + 48);
    swift_beginAccess();
    uint64_t v16 = *(void *)(a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v17 = sub_1C8D010E8(v15, v16, (uint64_t (*)(uint64_t, uint64_t))sub_1C8CE673C);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0) {
      goto LABEL_26;
    }
    swift_beginAccess();
    uint64_t v18 = *(void *)(a1 + 56);
    swift_beginAccess();
    uint64_t v19 = *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v20 = sub_1C8D010E8(v18, v19, sub_1C8CEB6F0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0) {
      goto LABEL_26;
    }
    swift_beginAccess();
    uint64_t v21 = *(void *)(a1 + 64);
    swift_beginAccess();
    uint64_t v22 = *(void *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v23 = sub_1C8D010E8(v21, v22, (uint64_t (*)(uint64_t, uint64_t))sub_1C8CE7900);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0) {
      goto LABEL_26;
    }
    swift_beginAccess();
    uint64_t v24 = *(void *)(a1 + 72);
    swift_beginAccess();
    uint64_t v25 = *(void *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v26 = sub_1C8CFF1B0(v24, v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v26 & 1) == 0) {
      goto LABEL_26;
    }
    swift_beginAccess();
    uint64_t v27 = *(void *)(a1 + 80);
    uint64_t v28 = *(void *)(a1 + 88);
    unint64_t v30 = *(void *)(a1 + 96);
    uint64_t v29 = *(void *)(a1 + 104);
    int v31 = *(_DWORD *)(a1 + 112);
    swift_beginAccess();
    uint64_t v32 = v27;
    uint64_t v34 = *(void *)(a2 + 80);
    uint64_t v33 = *(void *)(a2 + 88);
    unint64_t v36 = *(void *)(a2 + 96);
    uint64_t v35 = *(void *)(a2 + 104);
    int v37 = *(_DWORD *)(a2 + 112);
    if (v32)
    {
      uint64_t v55 = v32;
      uint64_t v56 = v28;
      unint64_t v57 = v30;
      uint64_t v58 = v29;
      int v59 = v31;
      if (v34)
      {
        v53[0] = v34;
        v53[1] = v33;
        v53[2] = v36;
        v53[3] = v35;
        int v54 = v37;
        uint64_t v38 = v32;
        uint64_t v39 = v28;
        sub_1C8CEF6AC(v32, v28, v30);
        uint64_t v40 = v38;
        swift_bridgeObjectRetain();
        sub_1C8CA3CF8(v39, v30);
        swift_bridgeObjectRetain();
        char v52 = _s20SiriOntologyProtobuf07Google_C15_MessageOptionsV2eeoiySbAC_ACtFZ_0((uint64_t)&v55, (uint64_t)v53);
        uint64_t v41 = v56;
        unint64_t v42 = v57;
        swift_bridgeObjectRelease();
        sub_1C8CA3D5C(v41, v42);
        swift_bridgeObjectRelease();
        sub_1C8CEF708(v40, v39, v30);
        if ((v52 & 1) == 0) {
          goto LABEL_26;
        }
        goto LABEL_22;
      }
      uint64_t v47 = v32;
      sub_1C8CEF6AC(v32, v28, v30);
      swift_bridgeObjectRetain();
      sub_1C8CA3CF8(v28, v30);
      swift_bridgeObjectRetain();
      uint64_t v49 = v47;
      swift_bridgeObjectRelease();
      uint64_t v50 = v28;
      unint64_t v51 = v30;
      sub_1C8CA3D5C(v28, v30);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v49 = 0;
      uint64_t v50 = v28;
      unint64_t v51 = v30;
      if (!v34)
      {
LABEL_22:
        swift_beginAccess();
        uint64_t v43 = *(void *)(a1 + 120);
        swift_beginAccess();
        uint64_t v44 = *(void *)(a2 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v45 = sub_1C8D00678(v43, v44);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v45)
        {
          swift_beginAccess();
          uint64_t v46 = *(void **)(a1 + 128);
          swift_beginAccess();
          char v8 = sub_1C8CFBFEC(v46, *(void **)(a2 + 128));
LABEL_27:
          swift_release();
          swift_release();
          return v8 & 1;
        }
LABEL_26:
        char v8 = 0;
        goto LABEL_27;
      }
    }
    sub_1C8CEF6AC(v34, v33, v36);
    sub_1C8CEF708(v49, v50, v51);
    sub_1C8CEF708(v34, v33, v36);
    goto LABEL_26;
  }
  return v8 & 1;
}

uint64_t Google_Protobuf_DescriptorProto.hashValue.getter()
{
  return sub_1C8CF90AC((void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_1C8CBD184);
}

uint64_t sub_1C8CE6D7C@<X0>(uint64_t a1@<X8>)
{
  return sub_1C8CC0424(&qword_1EA565A98, &qword_1EA5662B8, a1);
}

unint64_t sub_1C8CE6DA0()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_1C8CE6DBC(uint64_t a1, uint64_t a2)
{
  return sub_1C8CEE28C(a1, a2, (uint64_t (*)(uint64_t))sub_1C8CE5738);
}

uint64_t sub_1C8CE6DD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_DescriptorProto.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8CE6DEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_DescriptorProto.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8CE6E04@<X0>(void *a1@<X8>)
{
  if (qword_1EA565A90 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA5662A0;
  uint64_t v3 = qword_1EA5662A8;
  uint64_t v4 = unk_1EA5662B0;
  *a1 = qword_1EA566298;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CE6E9C()
{
  return sub_1C8D69878(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16));
}

uint64_t sub_1C8CE6EA8(uint64_t a1, uint64_t a2)
{
  return sub_1C8CF9218(a1, a2, (void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_1C8CBD184);
}

double sub_1C8CE6EC0(long long *a1)
{
  return sub_1C8CBD184(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16));
}

uint64_t sub_1C8CE6ECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CF92A0(a1, a2, a3, (void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_1C8CBD184);
}

uint64_t sub_1C8CE6EE4(uint64_t *a1, uint64_t *a2)
{
  return sub_1C8D02E28(a1, a2, sub_1C8CE673C) & 1;
}

uint64_t sub_1C8CE6F14()
{
  uint64_t result = sub_1C8D88400();
  qword_1EA5662C0 = 0xD00000000000001FLL;
  *(void *)algn_1EA5662C8 = 0x80000001C8D899E0;
  return result;
}

uint64_t static Google_Protobuf_DescriptorProto.ExtensionRange.protoMessageName.getter()
{
  return sub_1C8CF93B4(&qword_1EA565AA0, &qword_1EA5662C0);
}

uint64_t sub_1C8CE6FB4()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234CBA0, &qword_1EA5662D0);
}

uint64_t static Google_Protobuf_DescriptorProto.ExtensionRange._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565AA8 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA5662D8;
  uint64_t v3 = qword_1EA5662E0;
  uint64_t v4 = unk_1EA5662E8;
  *a1 = qword_1EA5662D0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CE7060(uint64_t a1)
{
  *(_DWORD *)(v1 + 16) = 0;
  *(unsigned char *)(v1 + 20) = 1;
  *(_DWORD *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 28) = 1;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  swift_beginAccess();
  int v3 = *(_DWORD *)(a1 + 16);
  char v4 = *(unsigned char *)(a1 + 20);
  swift_beginAccess();
  *(_DWORD *)(v1 + 16) = v3;
  *(unsigned char *)(v1 + 20) = v4;
  swift_beginAccess();
  int v5 = *(_DWORD *)(a1 + 24);
  LOBYTE(v3) = *(unsigned char *)(a1 + 28);
  swift_beginAccess();
  *(_DWORD *)(v1 + 24) = v5;
  *(unsigned char *)(v1 + 28) = v3;
  swift_beginAccess();
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  unint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(a1 + 56);
  sub_1C8CEF6AC(v6, v7, v8);
  swift_release();
  swift_beginAccess();
  uint64_t v10 = *(void *)(v1 + 32);
  uint64_t v11 = *(void *)(v1 + 40);
  unint64_t v12 = *(void *)(v1 + 48);
  *(void *)(v1 + 32) = v6;
  *(void *)(v1 + 40) = v7;
  *(void *)(v1 + 48) = v8;
  *(void *)(v1 + 56) = v9;
  sub_1C8CEF708(v10, v11, v12);
  return v1;
}

uint64_t sub_1C8CE71A8()
{
  sub_1C8CEF708(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
  return MEMORY[0x1F4186488](v0, 64, 7);
}

uint64_t Google_Protobuf_DescriptorProto.ExtensionRange.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CED9F4(a1, a2, a3, (void (*)(void))type metadata accessor for Google_Protobuf_DescriptorProto.ExtensionRange._StorageClass, 64, sub_1C8CE7060, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C8CE7244);
}

uint64_t sub_1C8CE7244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 16);
  uint64_t result = v8(a3, a4);
  uint64_t v11 = v4;
  if (!v4)
  {
    uint64_t v17 = a1 + 16;
    uint64_t v18 = a1 + 24;
    uint64_t v12 = a1 + 32;
    while (1)
    {
      if (v10) {
        return result;
      }
      if (result == 3) {
        break;
      }
      if (result == 2)
      {
        uint64_t v16 = v18;
LABEL_13:
        swift_beginAccess();
        uint64_t v15 = v11;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 80))(v16, a3, a4);
LABEL_5:
        uint64_t v11 = v15;
        swift_endAccess();
        goto LABEL_6;
      }
      if (result == 1)
      {
        uint64_t v16 = v17;
        goto LABEL_13;
      }
LABEL_6:
      uint64_t result = v8(a3, a4);
    }
    swift_beginAccess();
    uint64_t v13 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 408);
    unint64_t v14 = sub_1C8D02F04();
    uint64_t v15 = v11;
    v13(v12, &type metadata for Google_Protobuf_ExtensionRangeOptions, v14, a3, a4);
    goto LABEL_5;
  }
  return result;
}

uint64_t sub_1C8CE73C4(long long *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  if ((*(unsigned char *)(a4 + 20) & 1) == 0)
  {
    sub_1C8D88850();
    sub_1C8D88880();
  }
  swift_beginAccess();
  if ((*(unsigned char *)(a4 + 28) & 1) == 0)
  {
    sub_1C8D88850();
    sub_1C8D88880();
  }
  swift_beginAccess();
  uint64_t v9 = *(void *)(a4 + 32);
  if (v9)
  {
    uint64_t v10 = *(void *)(a4 + 40);
    unint64_t v11 = *(void *)(a4 + 48);
    uint64_t v12 = *(void *)(a4 + 56);
    sub_1C8D88850();
    uint64_t v13 = *((void *)a1 + 8);
    long long v14 = a1[1];
    long long v20 = *a1;
    long long v21 = v14;
    long long v15 = a1[3];
    long long v22 = a1[2];
    long long v23 = v15;
    uint64_t v24 = v13;
    swift_retain();
    sub_1C8CEF6AC(v9, v10, v11);
    sub_1C8CF3B3C((uint64_t)&v20, v9, v10, v11, v12);
    if (v4) {
      MEMORY[0x1CB7736A0](v4);
    }
    sub_1C8CEF708(v9, v10, v11);
    uint64_t v16 = v24;
    long long v17 = v21;
    *a1 = v20;
    a1[1] = v17;
    long long v18 = v23;
    a1[2] = v22;
    a1[3] = v18;
    *((void *)a1 + 8) = v16;
  }
  else
  {
    swift_retain();
  }
  uint64_t result = swift_release();
  switch(a3 >> 62)
  {
    case 1uLL:
      if ((int)a2 != a2 >> 32) {
        goto LABEL_16;
      }
      break;
    case 2uLL:
      if (*(void *)(a2 + 16) != *(void *)(a2 + 24)) {
        goto LABEL_16;
      }
      break;
    case 3uLL:
      return result;
    default:
      if ((a3 & 0xFF000000000000) != 0) {
LABEL_16:
      }
        uint64_t result = sub_1C8D881D0();
      break;
  }
  return result;
}

uint64_t sub_1C8CE75C8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  swift_beginAccess();
  if (*(unsigned char *)(a4 + 20))
  {
    swift_retain();
  }
  else
  {
    int v10 = *(_DWORD *)(a4 + 16);
    swift_retain();
    sub_1C8D3BACC(v10, 1uLL);
    if (v5) {
      return swift_release();
    }
  }
  swift_beginAccess();
  if ((*(unsigned char *)(a4 + 28) & 1) == 0)
  {
    sub_1C8D3BACC(*(_DWORD *)(a4 + 24), 2uLL);
    if (v5) {
      return swift_release();
    }
  }
  swift_beginAccess();
  uint64_t v11 = *(void *)(a4 + 32);
  if (v11)
  {
    unint64_t v13 = *(void *)(a4 + 48);
    uint64_t v12 = *(void *)(a4 + 56);
    uint64_t v14 = *(void *)(a4 + 40);
    swift_bridgeObjectRetain();
    sub_1C8CA3CF8(v14, v13);
    swift_bridgeObjectRetain();
    sub_1C8D725DC(v11, v14, v13, v12, 3uLL);
    sub_1C8CEF708(v11, v14, v13);
    if (v5) {
      return swift_release();
    }
  }
  swift_release();
  return sub_1C8D2D968(a1, a2, a3);
}

uint64_t Google_Protobuf_DescriptorProto.ExtensionRange.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CEEA54(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C8CE7778);
}

uint64_t sub_1C8CE7778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = (unsigned int *)(a1 + 16);
  swift_beginAccess();
  if ((*(unsigned char *)(a1 + 20) & 1) != 0
    || (uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(a4 + 24))(*v8, 1, a3, a4), !v4))
  {
    swift_beginAccess();
    if ((*(unsigned char *)(a1 + 28) & 1) != 0
      || (uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(a4 + 24))(*(unsigned int *)(a1 + 24), 2, a3, a4), !v4))
    {
      uint64_t result = swift_beginAccess();
      if (*(void *)(a1 + 32))
      {
        uint64_t v10 = *(void *)(a1 + 56);
        uint64_t v13 = *(void *)(a1 + 32);
        long long v14 = *(_OWORD *)(a1 + 40);
        uint64_t v15 = v10;
        uint64_t v11 = *(uint64_t (**)(uint64_t *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 136);
        unint64_t v12 = sub_1C8D02F04();
        return v11(&v13, 3, &type metadata for Google_Protobuf_ExtensionRangeOptions, v12, a3, a4);
      }
    }
  }
  return result;
}

uint64_t static Google_Protobuf_DescriptorProto.ExtensionRange.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1C8D02E28(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1C8CE7900) & 1;
}

BOOL sub_1C8CE7900(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  int v4 = *(_DWORD *)(a1 + 16);
  char v5 = *(unsigned char *)(a1 + 20);
  swift_beginAccess();
  char v6 = *(unsigned char *)(a2 + 20);
  if (v5)
  {
    if (!*(unsigned char *)(a2 + 20)) {
      return 0;
    }
  }
  else
  {
    if (v4 != *(_DWORD *)(a2 + 16)) {
      char v6 = 1;
    }
    if (v6) {
      return 0;
    }
  }
  swift_beginAccess();
  int v7 = *(_DWORD *)(a1 + 24);
  char v8 = *(unsigned char *)(a1 + 28);
  swift_beginAccess();
  char v9 = *(unsigned char *)(a2 + 28);
  if (v8)
  {
    if (!*(unsigned char *)(a2 + 28)) {
      return 0;
    }
  }
  else
  {
    if (v7 != *(_DWORD *)(a2 + 24)) {
      char v9 = 1;
    }
    if (v9) {
      return 0;
    }
  }
  swift_beginAccess();
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  unint64_t v13 = *(void *)(a1 + 48);
  uint64_t v12 = *(void *)(a1 + 56);
  swift_beginAccess();
  uint64_t v15 = *(void *)(a2 + 32);
  uint64_t v14 = *(void *)(a2 + 40);
  unint64_t v17 = *(void *)(a2 + 48);
  uint64_t v16 = *(void *)(a2 + 56);
  if (v10)
  {
    uint64_t v23 = v10;
    uint64_t v24 = v11;
    unint64_t v25 = v13;
    uint64_t v26 = v12;
    if (v15)
    {
      v22[0] = v15;
      v22[1] = v14;
      v22[2] = v17;
      v22[3] = v16;
      sub_1C8CEF6AC(v10, v11, v13);
      sub_1C8CEF6AC(v10, v11, v13);
      char v18 = sub_1C8D0337C(&v23, v22);
      uint64_t v19 = v24;
      unint64_t v20 = v25;
      swift_bridgeObjectRelease();
      sub_1C8CA3D5C(v19, v20);
      swift_bridgeObjectRelease();
      sub_1C8CEF708(v10, v11, v13);
      return (v18 & 1) != 0;
    }
    sub_1C8CEF6AC(v10, v11, v13);
    swift_bridgeObjectRetain();
    sub_1C8CA3CF8(v11, v13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1C8CA3D5C(v11, v13);
    swift_bridgeObjectRelease();
  }
  else if (!v15)
  {
    return 1;
  }
  sub_1C8CEF6AC(v15, v14, v17);
  sub_1C8CEF708(v10, v11, v13);
  sub_1C8CEF708(v15, v14, v17);
  return 0;
}

uint64_t Google_Protobuf_DescriptorProto.ExtensionRange.hashValue.getter()
{
  return sub_1C8CECFBC((void (*)(long long *, uint64_t, uint64_t, uint64_t))sub_1C8CE73C4);
}

uint64_t sub_1C8CE7B68@<X0>(uint64_t a1@<X8>)
{
  return sub_1C8CEF280((void (*)(void))type metadata accessor for Google_Protobuf_DescriptorProto.ExtensionRange._StorageClass, a1);
}

uint64_t sub_1C8CE7B88(uint64_t a1, uint64_t a2)
{
  return sub_1C8CF9C00(a1, a2, &qword_1EA565AA0, &qword_1EA5662C0);
}

uint64_t sub_1C8CE7BB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_DescriptorProto.ExtensionRange.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8CE7BCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_DescriptorProto.ExtensionRange.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8CE7BE4@<X0>(void *a1@<X8>)
{
  if (qword_1EA565AA8 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA5662D8;
  uint64_t v3 = qword_1EA5662E0;
  uint64_t v4 = unk_1EA5662E8;
  *a1 = qword_1EA5662D0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CE7C7C()
{
  return sub_1C8D6996C(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16));
}

uint64_t sub_1C8CE7C88(uint64_t a1, uint64_t a2)
{
  return sub_1C8CED19C(a1, a2, (void (*)(long long *, uint64_t, uint64_t, uint64_t))sub_1C8CE73C4);
}

double sub_1C8CE7CA0(long long *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CED268(a1, a2, a3, (void (*)(long long *, uint64_t, uint64_t, uint64_t))sub_1C8CE73C4);
}

uint64_t sub_1C8CE7CB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CED308(a1, a2, a3, (void (*)(long long *, uint64_t, uint64_t, uint64_t))sub_1C8CE73C4);
}

uint64_t sub_1C8CE7CD0(uint64_t *a1, uint64_t *a2)
{
  return sub_1C8D02E28(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1C8CE7900) & 1;
}

uint64_t sub_1C8CE7D00()
{
  uint64_t result = sub_1C8D88400();
  qword_1EA5662F0 = 0xD00000000000001FLL;
  *(void *)algn_1EA5662F8 = 0x80000001C8D899E0;
  return result;
}

uint64_t static Google_Protobuf_DescriptorProto.ReservedRange.protoMessageName.getter()
{
  return sub_1C8CF93B4(&qword_1EA565AB0, &qword_1EA5662F0);
}

uint64_t sub_1C8CE7DA0()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234CB10, &qword_1EA566300);
}

uint64_t static Google_Protobuf_DescriptorProto.ReservedRange._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565AB8 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA566308;
  uint64_t v3 = qword_1EA566310;
  uint64_t v4 = unk_1EA566318;
  *a1 = qword_1EA566300;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_DescriptorProto.ReservedRange.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CEBDCC(a1, a2, a3);
}

uint64_t Google_Protobuf_DescriptorProto.ReservedRange.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CEBEB0(a1, a2, a3);
}

uint64_t static Google_Protobuf_DescriptorProto.ReservedRange.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1C8D0283C(a1, a2) & 1;
}

uint64_t Google_Protobuf_DescriptorProto.ReservedRange.hashValue.getter()
{
  return sub_1C8CEBFB4((void (*)(unsigned char *, uint64_t, uint64_t, unint64_t, unint64_t))sub_1C8CBD180);
}

double sub_1C8CE7EB0@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)a1 = xmmword_1C8D8AD80;
  *(_DWORD *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 20) = 1;
  *(_DWORD *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 28) = 1;
  return result;
}

uint64_t sub_1C8CE7ED4(uint64_t a1, uint64_t a2)
{
  return sub_1C8CF9C00(a1, a2, &qword_1EA565AB0, &qword_1EA5662F0);
}

uint64_t sub_1C8CE7EFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_DescriptorProto.ReservedRange.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8CE7F14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_DescriptorProto.ReservedRange.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8CE7F2C@<X0>(void *a1@<X8>)
{
  if (qword_1EA565AB8 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA566308;
  uint64_t v3 = qword_1EA566310;
  uint64_t v4 = unk_1EA566318;
  *a1 = qword_1EA566300;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CE7FC4(uint64_t a1, uint64_t a2)
{
  return sub_1C8CEC120(a1, a2, (uint64_t (*)(void, void, unint64_t, unint64_t))sub_1C8D69A60);
}

uint64_t sub_1C8CE7FDC(uint64_t a1, uint64_t a2)
{
  return sub_1C8CEC160(a1, a2, (void (*)(unsigned char *, uint64_t, uint64_t, unint64_t, unint64_t))sub_1C8CBD180);
}

uint64_t sub_1C8CE7FF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CEC1F4(a1, a2, a3, (uint64_t (*)(uint64_t, void, void, unint64_t, unint64_t))sub_1C8CBD180);
}

uint64_t sub_1C8CE800C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CEC234(a1, a2, a3, (void (*)(unsigned char *, uint64_t, uint64_t, unint64_t, unint64_t))sub_1C8CBD180);
}

uint64_t sub_1C8CE8024(uint64_t a1, uint64_t a2)
{
  return sub_1C8D0283C(a1, a2) & 1;
}

unint64_t static Google_Protobuf_ExtensionRangeOptions.protoMessageName.getter()
{
  return 0xD000000000000025;
}

uint64_t sub_1C8CE805C()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234DF70, &qword_1EA566320);
}

uint64_t static Google_Protobuf_ExtensionRangeOptions._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565AC0 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA566328;
  uint64_t v3 = qword_1EA566330;
  uint64_t v4 = unk_1EA566338;
  *a1 = qword_1EA566320;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_ExtensionRangeOptions.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CF39D8(a1, a2, a3, (uint64_t (*)(void))sub_1C8D02F04, (uint64_t)&type metadata for Google_Protobuf_ExtensionRangeOptions);
}

uint64_t sub_1C8CE813C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  return sub_1C8CF3B3C(a1, a2, a3, a4, a5);
}

uint64_t Google_Protobuf_ExtensionRangeOptions.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CF3C48(a1, a2, a3);
}

uint64_t static Google_Protobuf_ExtensionRangeOptions.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1C8D0337C(a1, a2) & 1;
}

unint64_t sub_1C8CE818C()
{
  return 0xD000000000000025;
}

uint64_t sub_1C8CE81AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_ExtensionRangeOptions.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8CE81C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_OneofOptions.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8CE81DC@<X0>(void *a1@<X8>)
{
  if (qword_1EA565AC0 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA566328;
  uint64_t v3 = qword_1EA566330;
  uint64_t v4 = unk_1EA566338;
  *a1 = qword_1EA566320;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CE8274()
{
  return sub_1C8D69A90(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t static Google_Protobuf_FieldDescriptorProto.protoMessageName.getter()
{
  return 0xD000000000000024;
}

uint64_t sub_1C8CE82AC()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234DC90, &qword_1EA566340);
}

uint64_t static Google_Protobuf_FieldDescriptorProto._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565AC8 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA566348;
  uint64_t v3 = qword_1EA566350;
  uint64_t v4 = unk_1EA566358;
  *a1 = qword_1EA566340;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

double sub_1C8CE8358()
{
  type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass();
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  *(_DWORD *)(v0 + 32) = 0;
  *(unsigned char *)(v0 + 36) = 1;
  *(_WORD *)(v0 + 37) = 4611;
  double result = 0.0;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_DWORD *)(v0 + 88) = 0;
  *(unsigned char *)(v0 + 92) = 1;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 128) = 0u;
  *(void *)(v0 + 142) = 0;
  qword_1EA566360 = v0;
  return result;
}

uint64_t sub_1C8CE83C4(uint64_t a1)
{
  *(void *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 32) = 0;
  *(void *)(v1 + 16) = 0;
  *(unsigned char *)(v1 + 36) = 1;
  *(_WORD *)(v1 + 37) = 4611;
  *(_DWORD *)(v1 + 88) = 0;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(unsigned char *)(v1 + 92) = 1;
  *(_OWORD *)(v1 + 128) = 0u;
  *(void *)(v1 + 142) = 0;
  *(_OWORD *)(v1 + 112) = 0u;
  *(_OWORD *)(v1 + 96) = 0u;
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  swift_beginAccess();
  *(void *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  int v5 = *(_DWORD *)(a1 + 32);
  LOBYTE(v3) = *(unsigned char *)(a1 + 36);
  swift_beginAccess();
  *(_DWORD *)(v1 + 32) = v5;
  *(unsigned char *)(v1 + 36) = v3;
  swift_beginAccess();
  LOBYTE(v5) = *(unsigned char *)(a1 + 37);
  swift_beginAccess();
  *(unsigned char *)(v1 + 37) = v5;
  swift_beginAccess();
  LOBYTE(v5) = *(unsigned char *)(a1 + 38);
  swift_beginAccess();
  *(unsigned char *)(v1 + 38) = v5;
  swift_beginAccess();
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  swift_beginAccess();
  *(void *)(v1 + 40) = v7;
  *(void *)(v1 + 48) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v9 = *(void *)(a1 + 56);
  uint64_t v8 = *(void *)(a1 + 64);
  swift_beginAccess();
  *(void *)(v1 + 56) = v9;
  *(void *)(v1 + 64) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v11 = *(void *)(a1 + 72);
  uint64_t v10 = *(void *)(a1 + 80);
  swift_beginAccess();
  *(void *)(v1 + 72) = v11;
  *(void *)(v1 + 80) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  LODWORD(v10) = *(_DWORD *)(a1 + 88);
  LOBYTE(v3) = *(unsigned char *)(a1 + 92);
  swift_beginAccess();
  *(_DWORD *)(v1 + 88) = v10;
  *(unsigned char *)(v1 + 92) = v3;
  swift_beginAccess();
  uint64_t v13 = *(void *)(a1 + 96);
  uint64_t v12 = *(void *)(a1 + 104);
  swift_beginAccess();
  *(void *)(v1 + 96) = v13;
  *(void *)(v1 + 104) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v14 = *(void *)(a1 + 112);
  uint64_t v15 = *(void *)(a1 + 120);
  unint64_t v16 = *(void *)(a1 + 128);
  uint64_t v17 = *(void *)(a1 + 136);
  __int16 v18 = *(_WORD *)(a1 + 148);
  int v19 = *(_DWORD *)(a1 + 144);
  sub_1C8CEF6AC(v14, v15, v16);
  swift_release();
  swift_beginAccess();
  uint64_t v20 = *(void *)(v1 + 112);
  uint64_t v21 = *(void *)(v1 + 120);
  unint64_t v22 = *(void *)(v1 + 128);
  *(void *)(v1 + 112) = v14;
  *(void *)(v1 + 120) = v15;
  *(void *)(v1 + 128) = v16;
  *(void *)(v1 + 136) = v17;
  *(_DWORD *)(v1 + 144) = v19;
  *(_WORD *)(v1 + 148) = v18;
  sub_1C8CEF708(v20, v21, v22);
  return v1;
}

uint64_t sub_1C8CE8760()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C8CEF708(*(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128));
  return MEMORY[0x1F4186488](v0, 150, 7);
}

uint64_t Google_Protobuf_FieldDescriptorProto.isInitialized.getter()
{
  uint64_t v1 = *(void **)(v0 + 16);
  swift_beginAccess();
  uint64_t v2 = v1[14];
  if (v2)
  {
    uint64_t v3 = v1[15];
    unint64_t v4 = v1[16];
    swift_retain();
    sub_1C8CEF6AC(v2, v3, v4);
    if ((ExtensionFieldValueSet.isInitialized.getter() & 1) == 0)
    {
      uint64_t v13 = v2;
      uint64_t v14 = v3;
      unint64_t v15 = v4;
LABEL_14:
      sub_1C8CEF708(v13, v14, v15);
      uint64_t v16 = 0;
      goto LABEL_15;
    }
    uint64_t v5 = sub_1C8CE28D0(v2);
    uint64_t v6 = *(void *)(v5 + 16);
    if (v6)
    {
      unint64_t v18 = v4;
      uint64_t v7 = (void *)(v5 + 32);
      while (1)
      {
        uint64_t v9 = v7[3];
        uint64_t v8 = v7[4];
        __swift_project_boxed_opaque_existential_1(v7, v9);
        if (((*(uint64_t (**)(uint64_t, uint64_t))(v8 + 32))(v9, v8) & 1) == 0) {
          break;
        }
        v7 += 5;
        if (!--v6)
        {
          swift_bridgeObjectRelease();
          uint64_t v10 = v2;
          uint64_t v11 = v3;
          unint64_t v12 = v18;
          goto LABEL_11;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v13 = v2;
      uint64_t v14 = v3;
      unint64_t v15 = v18;
      goto LABEL_14;
    }
    swift_bridgeObjectRelease();
    uint64_t v10 = v2;
    uint64_t v11 = v3;
    unint64_t v12 = v4;
LABEL_11:
    sub_1C8CEF708(v10, v11, v12);
  }
  else
  {
    swift_retain();
  }
  uint64_t v16 = 1;
LABEL_15:
  swift_release();
  return v16;
}

uint64_t Google_Protobuf_FieldOptions.isInitialized.getter()
{
  uint64_t v1 = *v0;
  if (ExtensionFieldValueSet.isInitialized.getter())
  {
    uint64_t v2 = sub_1C8CE28D0(v1);
    uint64_t v3 = *(void *)(v2 + 16);
    if (v3)
    {
      unint64_t v4 = (void *)(v2 + 32);
      uint64_t v5 = v3 - 1;
      do
      {
        uint64_t v6 = v4[3];
        uint64_t v7 = v4[4];
        __swift_project_boxed_opaque_existential_1(v4, v6);
        char v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 32))(v6, v7);
        char v9 = v8;
        BOOL v11 = v5-- != 0;
        if ((v8 & 1) == 0) {
          break;
        }
        v4 += 5;
      }
      while (v11);
    }
    else
    {
      char v9 = 1;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = 0;
  }
  return v9 & 1;
}

uint64_t Google_Protobuf_FieldDescriptorProto.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CED9F4(a1, a2, a3, (void (*)(void))type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass, 150, sub_1C8CE83C4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C8CE8A8C);
}

uint64_t sub_1C8CE8A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v8 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 16);
  uint64_t result = v8(a3, a4);
  uint64_t v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          uint64_t v17 = a1 + 16;
          goto LABEL_12;
        case 2:
          uint64_t v17 = a1 + 56;
LABEL_12:
          swift_beginAccess();
          uint64_t v16 = v11;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 344))(v17, a3, a4);
          goto LABEL_6;
        case 3:
          swift_beginAccess();
          uint64_t v16 = v11;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 80))(a1 + 32, a3, a4);
          goto LABEL_6;
        case 4:
          swift_beginAccess();
          unint64_t v12 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 392);
          unint64_t v13 = sub_1C8D0A964();
          uint64_t v14 = a1 + 37;
          unint64_t v15 = &type metadata for Google_Protobuf_FieldDescriptorProto.Label;
          goto LABEL_5;
        case 5:
          swift_beginAccess();
          unint64_t v12 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 392);
          unint64_t v13 = sub_1C8D0A910();
          uint64_t v14 = a1 + 38;
          unint64_t v15 = &type metadata for Google_Protobuf_FieldDescriptorProto.TypeEnum;
LABEL_5:
          uint64_t v16 = v11;
          v12(v14, v15, v13, a3, a4);
          goto LABEL_6;
        case 6:
          uint64_t v18 = a1 + 40;
          goto LABEL_20;
        case 7:
          uint64_t v18 = a1 + 72;
          goto LABEL_20;
        case 8:
          swift_beginAccess();
          int v19 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 408);
          unint64_t v20 = sub_1C8D0378C();
          uint64_t v16 = v11;
          v19(a1 + 112, &type metadata for Google_Protobuf_FieldOptions, v20, a3, a4);
          goto LABEL_6;
        case 9:
          swift_beginAccess();
          uint64_t v16 = v11;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 80))(a1 + 88, a3, a4);
          goto LABEL_6;
        case 10:
          uint64_t v18 = a1 + 96;
LABEL_20:
          swift_beginAccess();
          uint64_t v16 = v11;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 344))(v18, a3, a4);
LABEL_6:
          uint64_t v11 = v16;
          swift_endAccess();
          break;
        default:
          break;
      }
      uint64_t result = v8(a3, a4);
    }
  }
  return result;
}

uint64_t Google_Protobuf_FieldDescriptorProto.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CEEA54(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C8CE8E1C);
}

uint64_t sub_1C8CE8E1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  char v9 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  uint64_t v10 = *(void *)(a1 + 24);
  if (v10)
  {
    uint64_t v11 = *v9;
    unint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 112);
    swift_bridgeObjectRetain();
    v12(v11, v10, 1, a3, a4);
    if (v5) {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t v14 = *(void *)(a1 + 64);
  if (!v14
    || (uint64_t v15 = *(void *)(a1 + 56),
        uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 112),
        swift_bridgeObjectRetain(),
        v16(v15, v14, 2, a3, a4),
        uint64_t result = swift_bridgeObjectRelease(),
        !v5))
  {
    swift_beginAccess();
    if ((*(unsigned char *)(a1 + 36) & 1) != 0
      || (uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(a4 + 24))(*(unsigned int *)(a1 + 32), 3, a3, a4), !v5))
    {
      swift_beginAccess();
      if (*(unsigned char *)(a1 + 37) == 3
        || (LOBYTE(v39) = *(unsigned char *)(a1 + 37),
            uint64_t v17 = *(uint64_t (**)(uint64_t *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 128),
            unint64_t v18 = sub_1C8D0A964(),
            uint64_t result = v17(&v39, 4, &type metadata for Google_Protobuf_FieldDescriptorProto.Label, v18, a3, a4),
            !v5))
      {
        swift_beginAccess();
        if (*(unsigned char *)(a1 + 38) == 18
          || (LOBYTE(v39) = *(unsigned char *)(a1 + 38),
              int v19 = *(uint64_t (**)(uint64_t *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 128),
              unint64_t v20 = sub_1C8D0A910(),
              uint64_t result = v19(&v39, 5, &type metadata for Google_Protobuf_FieldDescriptorProto.TypeEnum, v20, a3, a4),
              !v5))
        {
          swift_beginAccess();
          uint64_t v21 = *(void *)(a1 + 48);
          if (!v21
            || (uint64_t v22 = *(void *)(a1 + 40),
                uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 112),
                swift_bridgeObjectRetain(),
                v23(v22, v21, 6, a3, a4),
                uint64_t result = swift_bridgeObjectRelease(),
                !v5))
          {
            swift_beginAccess();
            uint64_t v24 = *(void *)(a1 + 80);
            if (!v24
              || (uint64_t v25 = *(void *)(a1 + 72),
                  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 112),
                  swift_bridgeObjectRetain(),
                  v26(v25, v24, 7, a3, a4),
                  uint64_t result = swift_bridgeObjectRelease(),
                  !v5))
            {
              swift_beginAccess();
              if (!*(void *)(a1 + 112)) {
                goto LABEL_25;
              }
              uint64_t v27 = *(unsigned __int16 *)(a1 + 148);
              uint64_t v28 = *(unsigned int *)(a1 + 144);
              uint64_t v29 = *(void *)(a1 + 136);
              uint64_t v39 = *(void *)(a1 + 112);
              long long v40 = *(_OWORD *)(a1 + 120);
              uint64_t v41 = v29;
              char v42 = v28;
              v30.i64[0] = 0xFFFFFFFFFFFFLL;
              v30.i64[1] = 0xFFFFFFFFFFFFLL;
              uint64x2_t v31 = (uint64x2_t)vandq_s8((int8x16_t)vdupq_n_s64(v28 | (unint64_t)(v27 << 32)), v30);
              int16x8_t v32 = (int16x8_t)vshlq_u64(v31, (uint64x2_t)xmmword_1C8D8BED0);
              *(int32x2_t *)v31.i8 = vmovn_s64((int64x2_t)vshlq_u64(v31, (uint64x2_t)xmmword_1C8D8BEC0));
              *(int32x2_t *)v32.i8 = vmovn_s64((int64x2_t)v32);
              v32.i16[1] = v32.i16[2];
              v32.i16[2] = v31.i16[0];
              v32.i16[3] = v31.i16[2];
              unsigned __int32 v43 = vmovn_s16(v32).u32[0];
              char v44 = BYTE1(v27);
              uint64_t v33 = *(uint64_t (**)(uint64_t *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 136);
              unint64_t v34 = sub_1C8D0378C();
              uint64_t result = v33(&v39, 8, &type metadata for Google_Protobuf_FieldOptions, v34, a3, a4);
              if (!v5)
              {
LABEL_25:
                swift_beginAccess();
                if ((*(unsigned char *)(a1 + 92) & 1) != 0
                  || (uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(a4 + 24))(*(unsigned int *)(a1 + 88), 9, a3, a4), !v5))
                {
                  uint64_t v35 = (uint64_t *)(a1 + 96);
                  uint64_t result = swift_beginAccess();
                  uint64_t v36 = *(void *)(a1 + 104);
                  if (v36)
                  {
                    uint64_t v37 = *v35;
                    uint64_t v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 112);
                    swift_bridgeObjectRetain();
                    v38(v37, v36, 10, a3, a4);
                    return swift_bridgeObjectRelease();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t static Google_Protobuf_FieldDescriptorProto.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1C8D02E28(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1C8CE92EC) & 1;
}

BOOL sub_1C8CE92EC(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  swift_beginAccess();
  uint64_t v6 = *(void *)(a2 + 24);
  if (!v5)
  {
    if (v6) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v6) {
    return 0;
  }
  BOOL v7 = v4 == *(void *)(a2 + 16) && v5 == v6;
  if (v7 || (v8 = sub_1C8D887C0(), BOOL result = 0, (v8 & 1) != 0))
  {
LABEL_10:
    swift_beginAccess();
    int v10 = *(_DWORD *)(a1 + 32);
    char v11 = *(unsigned char *)(a1 + 36);
    swift_beginAccess();
    char v12 = *(unsigned char *)(a2 + 36);
    if (v11)
    {
      if (!*(unsigned char *)(a2 + 36)) {
        return 0;
      }
    }
    else
    {
      if (v10 != *(_DWORD *)(a2 + 32)) {
        char v12 = 1;
      }
      if (v12) {
        return 0;
      }
    }
    swift_beginAccess();
    int v13 = *(unsigned __int8 *)(a1 + 37);
    swift_beginAccess();
    int v14 = *(unsigned __int8 *)(a2 + 37);
    if (v13 == 3)
    {
      if (v14 != 3) {
        return 0;
      }
    }
    else
    {
      BOOL result = 0;
      if (v14 == 3 || v13 != v14) {
        return result;
      }
    }
    swift_beginAccess();
    int v15 = *(unsigned __int8 *)(a1 + 38);
    swift_beginAccess();
    int v16 = *(unsigned __int8 *)(a2 + 38);
    if (v15 == 18)
    {
      if (v16 != 18) {
        return 0;
      }
    }
    else
    {
      BOOL result = 0;
      if (v16 == 18 || v15 != v16) {
        return result;
      }
    }
    swift_beginAccess();
    uint64_t v17 = *(void *)(a1 + 40);
    uint64_t v18 = *(void *)(a1 + 48);
    swift_beginAccess();
    uint64_t v19 = *(void *)(a2 + 48);
    if (v18)
    {
      if (!v19) {
        return 0;
      }
      if (v17 != *(void *)(a2 + 40) || v18 != v19)
      {
        char v20 = sub_1C8D887C0();
        BOOL result = 0;
        if ((v20 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v19)
    {
      return 0;
    }
    swift_beginAccess();
    uint64_t v21 = *(void *)(a1 + 56);
    uint64_t v22 = *(void *)(a1 + 64);
    swift_beginAccess();
    uint64_t v23 = *(void *)(a2 + 64);
    if (v22)
    {
      if (!v23) {
        return 0;
      }
      if (v21 != *(void *)(a2 + 56) || v22 != v23)
      {
        char v24 = sub_1C8D887C0();
        BOOL result = 0;
        if ((v24 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v23)
    {
      return 0;
    }
    swift_beginAccess();
    uint64_t v25 = *(void *)(a1 + 72);
    uint64_t v26 = *(void *)(a1 + 80);
    swift_beginAccess();
    uint64_t v27 = *(void *)(a2 + 80);
    if (v26)
    {
      if (!v27) {
        return 0;
      }
      if (v25 != *(void *)(a2 + 72) || v26 != v27)
      {
        char v28 = sub_1C8D887C0();
        BOOL result = 0;
        if ((v28 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v27)
    {
      return 0;
    }
    swift_beginAccess();
    int v29 = *(_DWORD *)(a1 + 88);
    char v30 = *(unsigned char *)(a1 + 92);
    swift_beginAccess();
    char v31 = *(unsigned char *)(a2 + 92);
    if (v30)
    {
      if (!*(unsigned char *)(a2 + 92)) {
        return 0;
      }
    }
    else
    {
      if (v29 != *(_DWORD *)(a2 + 88)) {
        char v31 = 1;
      }
      if (v31) {
        return 0;
      }
    }
    swift_beginAccess();
    uint64_t v32 = *(void *)(a1 + 96);
    uint64_t v33 = *(void *)(a1 + 104);
    swift_beginAccess();
    uint64_t v34 = *(void *)(a2 + 104);
    if (v33)
    {
      if (!v34) {
        return 0;
      }
      if (v32 != *(void *)(a2 + 96) || v33 != v34)
      {
        char v35 = sub_1C8D887C0();
        BOOL result = 0;
        if ((v35 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v34)
    {
      return 0;
    }
    swift_beginAccess();
    uint64_t v36 = *(void *)(a1 + 112);
    uint64_t v37 = *(void *)(a1 + 120);
    unint64_t v39 = *(void *)(a1 + 128);
    uint64_t v38 = *(void *)(a1 + 136);
    unint64_t v40 = *(unsigned int *)(a1 + 144) | ((unint64_t)*(unsigned __int16 *)(a1 + 148) << 32);
    swift_beginAccess();
    uint64_t v42 = *(void *)(a2 + 112);
    uint64_t v41 = *(void *)(a2 + 120);
    unint64_t v44 = *(void *)(a2 + 128);
    uint64_t v43 = *(void *)(a2 + 136);
    unint64_t v45 = *(unsigned int *)(a2 + 144) | ((unint64_t)*(unsigned __int16 *)(a2 + 148) << 32);
    if (v36)
    {
      uint64_t v56 = v36;
      uint64_t v57 = v37;
      unint64_t v58 = v39;
      uint64_t v59 = v38;
      int v60 = v40;
      __int16 v61 = WORD2(v40);
      if (v42)
      {
        v46.i64[0] = 0xFFFFFFFFFFFFLL;
        v46.i64[1] = 0xFFFFFFFFFFFFLL;
        uint64x2_t v47 = (uint64x2_t)vandq_s8((int8x16_t)vdupq_n_s64(v45), v46);
        int16x8_t v48 = (int16x8_t)vshlq_u64(v47, (uint64x2_t)xmmword_1C8D8BED0);
        v52[0] = v42;
        v52[1] = v41;
        v52[2] = v44;
        v52[3] = v43;
        char v53 = v45;
        *(int32x2_t *)v47.i8 = vmovn_s64((int64x2_t)vshlq_u64(v47, (uint64x2_t)xmmword_1C8D8BEC0));
        *(int32x2_t *)v48.i8 = vmovn_s64((int64x2_t)v48);
        v48.i16[1] = v48.i16[2];
        v48.i16[2] = v47.i16[0];
        v48.i16[3] = v47.i16[2];
        unsigned __int32 v54 = vmovn_s16(v48).u32[0];
        char v55 = BYTE5(v45);
        swift_bridgeObjectRetain();
        sub_1C8CA3CF8(v37, v39);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1C8CA3CF8(v37, v39);
        swift_bridgeObjectRetain();
        char v49 = _s20SiriOntologyProtobuf07Google_C13_FieldOptionsV2eeoiySbAC_ACtFZ_0((uint64_t)&v56, (uint64_t)v52);
        uint64_t v50 = v57;
        unint64_t v51 = v58;
        swift_bridgeObjectRelease();
        sub_1C8CA3D5C(v50, v51);
        swift_bridgeObjectRelease();
        sub_1C8CEF708(v36, v37, v39);
        return (v49 & 1) != 0;
      }
      sub_1C8CEF6AC(v36, v37, v39);
      swift_bridgeObjectRetain();
      sub_1C8CA3CF8(v37, v39);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_1C8CA3D5C(v37, v39);
      swift_bridgeObjectRelease();
    }
    else if (!v42)
    {
      return 1;
    }
    sub_1C8CEF6AC(v42, v41, v44);
    sub_1C8CEF708(v36, v37, v39);
    sub_1C8CEF708(v42, v41, v44);
    return 0;
  }
  return result;
}

uint64_t Google_Protobuf_FieldDescriptorProto.hashValue.getter()
{
  return sub_1C8CF90AC((void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_1C8CBCBD4);
}

uint64_t sub_1C8CE98CC@<X0>(uint64_t a1@<X8>)
{
  return sub_1C8CC0424(&qword_1EA565AD0, &qword_1EA566360, a1);
}

unint64_t sub_1C8CE98F0()
{
  return 0xD000000000000024;
}

uint64_t sub_1C8CE9910(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_FieldDescriptorProto.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8CE9928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_FieldDescriptorProto.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8CE9940@<X0>(void *a1@<X8>)
{
  if (qword_1EA565AC8 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA566348;
  uint64_t v3 = qword_1EA566350;
  uint64_t v4 = unk_1EA566358;
  *a1 = qword_1EA566340;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CE99D8()
{
  return sub_1C8D69AC0(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16));
}

uint64_t sub_1C8CE99E4(uint64_t a1, uint64_t a2)
{
  return sub_1C8CF9218(a1, a2, (void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_1C8CBCBD4);
}

double sub_1C8CE99FC(long long *a1)
{
  return sub_1C8CBCBD4(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16));
}

uint64_t sub_1C8CE9A08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CF92A0(a1, a2, a3, (void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_1C8CBCBD4);
}

uint64_t sub_1C8CE9A20(uint64_t *a1, uint64_t *a2)
{
  return sub_1C8D02E28(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1C8CE92EC) & 1;
}

uint64_t sub_1C8CE9A50()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234D880, &qword_1EA566368);
}

uint64_t static Google_Protobuf_FieldDescriptorProto.TypeEnum._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565AD8 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA566370;
  uint64_t v3 = qword_1EA566378;
  uint64_t v4 = unk_1EA566380;
  *a1 = qword_1EA566368;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CE9AFC@<X0>(void *a1@<X8>)
{
  if (qword_1EA565AD8 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA566370;
  uint64_t v3 = qword_1EA566378;
  uint64_t v4 = unk_1EA566380;
  *a1 = qword_1EA566368;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CE9B94()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234D7B8, &qword_1EA566388);
}

uint64_t static Google_Protobuf_FieldDescriptorProto.Label._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565AE0 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA566390;
  uint64_t v3 = qword_1EA566398;
  uint64_t v4 = unk_1EA5663A0;
  *a1 = qword_1EA566388;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CE9C40@<X0>(void *a1@<X8>)
{
  if (qword_1EA565AE0 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA566390;
  uint64_t v3 = qword_1EA566398;
  uint64_t v4 = unk_1EA5663A0;
  *a1 = qword_1EA566388;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

unint64_t static Google_Protobuf_OneofDescriptorProto.protoMessageName.getter()
{
  return 0xD000000000000024;
}

uint64_t sub_1C8CE9CF4()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234DEE0, &qword_1EA5663A8);
}

uint64_t static Google_Protobuf_OneofDescriptorProto._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565AE8 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA5663B0;
  uint64_t v3 = qword_1EA5663B8;
  uint64_t v4 = unk_1EA5663C0;
  *a1 = qword_1EA5663A8;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CE9DA0()
{
  swift_bridgeObjectRelease();
  sub_1C8CEF708(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
  return MEMORY[0x1F4186488](v0, 64, 7);
}

uint64_t _s20SiriOntologyProtobuf07Google_C16_DescriptorProtoV14ExtensionRangeV13isInitializedSbvg_0()
{
  uint64_t v1 = *(void **)(v0 + 16);
  swift_beginAccess();
  uint64_t v2 = v1[4];
  if (v2)
  {
    uint64_t v3 = v1[5];
    unint64_t v4 = v1[6];
    swift_retain();
    sub_1C8CEF6AC(v2, v3, v4);
    if ((ExtensionFieldValueSet.isInitialized.getter() & 1) == 0)
    {
      uint64_t v13 = v2;
      uint64_t v14 = v3;
      unint64_t v15 = v4;
LABEL_14:
      sub_1C8CEF708(v13, v14, v15);
      uint64_t v16 = 0;
      goto LABEL_15;
    }
    uint64_t v5 = sub_1C8CE28D0(v2);
    uint64_t v6 = *(void *)(v5 + 16);
    if (v6)
    {
      unint64_t v18 = v4;
      BOOL v7 = (void *)(v5 + 32);
      while (1)
      {
        uint64_t v8 = v7[3];
        uint64_t v9 = v7[4];
        __swift_project_boxed_opaque_existential_1(v7, v8);
        if (((*(uint64_t (**)(uint64_t, uint64_t))(v9 + 32))(v8, v9) & 1) == 0) {
          break;
        }
        v7 += 5;
        if (!--v6)
        {
          swift_bridgeObjectRelease();
          uint64_t v10 = v2;
          uint64_t v11 = v3;
          unint64_t v12 = v18;
          goto LABEL_11;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v13 = v2;
      uint64_t v14 = v3;
      unint64_t v15 = v18;
      goto LABEL_14;
    }
    swift_bridgeObjectRelease();
    uint64_t v10 = v2;
    uint64_t v11 = v3;
    unint64_t v12 = v4;
LABEL_11:
    sub_1C8CEF708(v10, v11, v12);
  }
  else
  {
    swift_retain();
  }
  uint64_t v16 = 1;
LABEL_15:
  swift_release();
  return v16;
}

uint64_t _s20SiriOntologyProtobuf07Google_C22_ExtensionRangeOptionsV13isInitializedSbvg_0()
{
  uint64_t v1 = *v0;
  if (ExtensionFieldValueSet.isInitialized.getter())
  {
    uint64_t v2 = sub_1C8CE28D0(v1);
    uint64_t v3 = *(void *)(v2 + 16);
    if (v3)
    {
      unint64_t v4 = (void *)(v2 + 32);
      uint64_t v5 = v3 - 1;
      do
      {
        uint64_t v6 = v4[3];
        uint64_t v7 = v4[4];
        __swift_project_boxed_opaque_existential_1(v4, v6);
        char v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 32))(v6, v7);
        char v9 = v8;
        BOOL v11 = v5-- != 0;
        if ((v8 & 1) == 0) {
          break;
        }
        v4 += 5;
      }
      while (v11);
    }
    else
    {
      char v9 = 1;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = 0;
  }
  return v9 & 1;
}

uint64_t Google_Protobuf_OneofDescriptorProto.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C8D02A08();
  uint64_t v6 = swift_retain();
  sub_1C8CEA0A0(v6, a1, a2, a3);
  return swift_release();
}

uint64_t sub_1C8CEA0A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v8 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 16);
  uint64_t result = v8(a3, a4);
  uint64_t v11 = v4;
  if (!v4)
  {
    uint64_t v12 = a1 + 32;
    uint64_t v13 = a1 + 16;
    while (1)
    {
      if (v10) {
        return result;
      }
      if (result == 2) {
        break;
      }
      if (result == 1)
      {
        swift_beginAccess();
        uint64_t v16 = v11;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 344))(v13, a3, a4);
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = v8(a3, a4);
    }
    swift_beginAccess();
    uint64_t v14 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 408);
    unint64_t v15 = sub_1C8D03888();
    uint64_t v16 = v11;
    v14(v12, &type metadata for Google_Protobuf_OneofOptions, v15, a3, a4);
LABEL_5:
    uint64_t v11 = v16;
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_1C8CEA200(long long *a1, uint64_t a2, unint64_t a3, void *a4)
{
  swift_beginAccess();
  if (a4[3])
  {
    sub_1C8D88850();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1C8D883C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
  }
  swift_beginAccess();
  uint64_t v9 = a4[4];
  if (v9)
  {
    uint64_t v10 = a4[5];
    unint64_t v11 = a4[6];
    uint64_t v12 = a4[7];
    sub_1C8D88850();
    uint64_t v13 = *((void *)a1 + 8);
    long long v14 = a1[1];
    long long v20 = *a1;
    long long v21 = v14;
    long long v15 = a1[3];
    long long v22 = a1[2];
    long long v23 = v15;
    uint64_t v24 = v13;
    swift_bridgeObjectRetain();
    sub_1C8CA3CF8(v10, v11);
    swift_bridgeObjectRetain();
    sub_1C8CF3B3C((uint64_t)&v20, v9, v10, v11, v12);
    if (v4) {
      MEMORY[0x1CB7736A0](v4);
    }
    sub_1C8CEF708(v9, v10, v11);
    uint64_t v16 = v24;
    long long v17 = v21;
    *a1 = v20;
    a1[1] = v17;
    long long v18 = v23;
    a1[2] = v22;
    a1[3] = v18;
    *((void *)a1 + 8) = v16;
  }
  uint64_t result = swift_release();
  switch(a3 >> 62)
  {
    case 1uLL:
      if ((int)a2 != a2 >> 32) {
        goto LABEL_14;
      }
      break;
    case 2uLL:
      if (*(void *)(a2 + 16) != *(void *)(a2 + 24)) {
        goto LABEL_14;
      }
      break;
    case 3uLL:
      return result;
    default:
      if ((a3 & 0xFF000000000000) != 0) {
LABEL_14:
      }
        uint64_t result = sub_1C8D881D0();
      break;
  }
  return result;
}

uint64_t sub_1C8CEA3EC(char **a1, uint64_t a2, unint64_t a3, void *a4)
{
  swift_beginAccess();
  unint64_t v9 = a4[3];
  if (v9)
  {
    uint64_t v10 = a4[2];
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1C8CA5968(1uLL);
    sub_1C8CA6060((uint64_t)": ", 2, v11);
    sub_1C8CA6D2C(v10, v9);
    uint64_t v12 = *a1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a1 = v12;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v12 = sub_1C8D5EB50(0, *((void *)v12 + 2) + 1, 1, v12);
      *a1 = v12;
    }
    unint64_t v15 = *((void *)v12 + 2);
    unint64_t v14 = *((void *)v12 + 3);
    if (v15 >= v14 >> 1)
    {
      uint64_t v12 = sub_1C8D5EB50((char *)(v14 > 1), v15 + 1, 1, v12);
      *a1 = v12;
    }
    *((void *)v12 + 2) = v15 + 1;
    v12[v15 + 32] = 10;
    swift_bridgeObjectRelease();
    *a1 = v12;
  }
  else
  {
    swift_retain();
  }
  swift_beginAccess();
  uint64_t v16 = a4[4];
  if (v16)
  {
    unint64_t v18 = a4[6];
    uint64_t v17 = a4[7];
    uint64_t v19 = a4[5];
    swift_bridgeObjectRetain();
    sub_1C8CA3CF8(v19, v18);
    swift_bridgeObjectRetain();
    sub_1C8D72258(v16, v19, v18, v17, 2uLL);
    sub_1C8CEF708(v16, v19, v18);
    if (v4) {
      return swift_release();
    }
  }
  swift_release();
  return sub_1C8D2D968((uint64_t)a1, a2, a3);
}

uint64_t Google_Protobuf_OneofDescriptorProto.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CEEA54(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C8CEA600);
}

uint64_t sub_1C8CEA600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  unint64_t v9 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  uint64_t v10 = *(void *)(a1 + 24);
  if (!v10
    || (uint64_t v11 = *v9,
        uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 112),
        swift_bridgeObjectRetain(),
        v12(v11, v10, 1, a3, a4),
        uint64_t result = swift_bridgeObjectRelease(),
        !v5))
  {
    uint64_t result = swift_beginAccess();
    if (*(void *)(a1 + 32))
    {
      uint64_t v14 = *(void *)(a1 + 56);
      uint64_t v17 = *(void *)(a1 + 32);
      long long v18 = *(_OWORD *)(a1 + 40);
      uint64_t v19 = v14;
      unint64_t v15 = *(uint64_t (**)(uint64_t *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 136);
      unint64_t v16 = sub_1C8D03888();
      return v15(&v17, 2, &type metadata for Google_Protobuf_OneofOptions, v16, a3, a4);
    }
  }
  return result;
}

uint64_t static Google_Protobuf_OneofDescriptorProto.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1C8D02E28(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1C8CEA758) & 1;
}

BOOL sub_1C8CEA758(void *a1, void *a2)
{
  swift_beginAccess();
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  swift_beginAccess();
  uint64_t v6 = a2[3];
  if (!v5)
  {
    if (v6) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v6) {
    return 0;
  }
  BOOL v7 = v4 == a2[2] && v5 == v6;
  if (v7 || (v8 = sub_1C8D887C0(), BOOL result = 0, (v8 & 1) != 0))
  {
LABEL_10:
    swift_beginAccess();
    uint64_t v10 = a1[4];
    uint64_t v11 = a1[5];
    unint64_t v13 = a1[6];
    uint64_t v12 = a1[7];
    swift_beginAccess();
    uint64_t v15 = a2[4];
    uint64_t v14 = a2[5];
    unint64_t v17 = a2[6];
    uint64_t v16 = a2[7];
    if (v10)
    {
      uint64_t v22 = v10;
      uint64_t v23 = v11;
      unint64_t v24 = v13;
      uint64_t v25 = v12;
      if (v15)
      {
        v21[0] = v15;
        v21[1] = v14;
        v21[2] = v17;
        v21[3] = v16;
        sub_1C8CEF6AC(v10, v11, v13);
        swift_bridgeObjectRetain();
        sub_1C8CA3CF8(v11, v13);
        swift_bridgeObjectRetain();
        char v18 = sub_1C8D0337C(&v22, v21);
        uint64_t v19 = v23;
        unint64_t v20 = v24;
        swift_bridgeObjectRelease();
        sub_1C8CA3D5C(v19, v20);
        swift_bridgeObjectRelease();
        sub_1C8CEF708(v10, v11, v13);
        return (v18 & 1) != 0;
      }
      sub_1C8CEF6AC(v10, v11, v13);
      swift_bridgeObjectRetain();
      sub_1C8CA3CF8(v11, v13);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_1C8CA3D5C(v11, v13);
      swift_bridgeObjectRelease();
    }
    else if (!v15)
    {
      return 1;
    }
    sub_1C8CEF6AC(v15, v14, v17);
    sub_1C8CEF708(v10, v11, v13);
    sub_1C8CEF708(v15, v14, v17);
    return 0;
  }
  return result;
}

uint64_t Google_Protobuf_OneofDescriptorProto.hashValue.getter()
{
  return sub_1C8CECFBC((void (*)(long long *, uint64_t, uint64_t, uint64_t))sub_1C8CEA200);
}

uint64_t sub_1C8CEA984@<X0>(uint64_t a1@<X8>)
{
  return sub_1C8CEF280((void (*)(void))type metadata accessor for Google_Protobuf_OneofDescriptorProto._StorageClass, a1);
}

unint64_t sub_1C8CEA9A4()
{
  return 0xD000000000000024;
}

uint64_t sub_1C8CEA9C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_OneofDescriptorProto.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8CEA9D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_OneofDescriptorProto.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8CEA9F0@<X0>(void *a1@<X8>)
{
  if (qword_1EA565AE8 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA5663B0;
  uint64_t v3 = qword_1EA5663B8;
  uint64_t v4 = unk_1EA5663C0;
  *a1 = qword_1EA5663A8;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CEAA88()
{
  return sub_1C8D69BB4(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16));
}

uint64_t sub_1C8CEAA94(uint64_t a1, uint64_t a2)
{
  return sub_1C8CED19C(a1, a2, (void (*)(long long *, uint64_t, uint64_t, uint64_t))sub_1C8CEA200);
}

double sub_1C8CEAAAC(long long *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CED268(a1, a2, a3, (void (*)(long long *, uint64_t, uint64_t, uint64_t))sub_1C8CEA200);
}

uint64_t sub_1C8CEAAC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CED308(a1, a2, a3, (void (*)(long long *, uint64_t, uint64_t, uint64_t))sub_1C8CEA200);
}

uint64_t sub_1C8CEAADC(uint64_t *a1, uint64_t *a2)
{
  return sub_1C8D02E28(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1C8CEA758) & 1;
}

unint64_t static Google_Protobuf_EnumDescriptorProto.protoMessageName.getter()
{
  return 0xD000000000000023;
}

uint64_t sub_1C8CEAB28()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234D188, &qword_1EA5663C8);
}

uint64_t static Google_Protobuf_EnumDescriptorProto._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565AF0 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA5663D0;
  uint64_t v3 = qword_1EA5663D8;
  uint64_t v4 = unk_1EA5663E0;
  *a1 = qword_1EA5663C8;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

double sub_1C8CEABD4()
{
  type metadata accessor for Google_Protobuf_EnumDescriptorProto._StorageClass();
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *(void *)(v0 + 32) = MEMORY[0x1E4FBC860];
  double result = 0.0;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_WORD *)(v0 + 72) = 0;
  *(void *)(v0 + 80) = v1;
  *(void *)(v0 + 88) = v1;
  qword_1EA5663E8 = v0;
  return result;
}

uint64_t sub_1C8CEAC28(uint64_t a1)
{
  *(void *)(v1 + 24) = 0;
  *(void *)(v1 + 16) = 0;
  uint64_t v3 = MEMORY[0x1E4FBC860];
  *(void *)(v1 + 32) = MEMORY[0x1E4FBC860];
  *(_OWORD *)(v1 + 56) = 0u;
  *(_WORD *)(v1 + 72) = 0;
  *(_OWORD *)(v1 + 40) = 0u;
  *(void *)(v1 + 80) = v3;
  *(void *)(v1 + 88) = v3;
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  swift_beginAccess();
  *(void *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v6 = *(void *)(a1 + 32);
  swift_beginAccess();
  *(void *)(v1 + 32) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);
  unint64_t v9 = *(void *)(a1 + 56);
  uint64_t v10 = *(void *)(a1 + 64);
  __int16 v11 = *(_WORD *)(a1 + 72);
  swift_beginAccess();
  uint64_t v12 = *(void *)(v1 + 40);
  uint64_t v13 = *(void *)(v1 + 48);
  unint64_t v17 = *(void *)(v1 + 56);
  *(void *)(v1 + 40) = v7;
  *(void *)(v1 + 48) = v8;
  *(void *)(v1 + 56) = v9;
  *(void *)(v1 + 64) = v10;
  *(_WORD *)(v1 + 72) = v11;
  sub_1C8CEF6AC(v7, v8, v9);
  sub_1C8CEF708(v12, v13, v17);
  swift_beginAccess();
  uint64_t v14 = *(void *)(a1 + 80);
  swift_beginAccess();
  *(void *)(v1 + 80) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v15 = *(void *)(a1 + 88);
  swift_bridgeObjectRetain();
  swift_release();
  swift_beginAccess();
  *(void *)(v1 + 88) = v15;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C8CEAE60()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C8CEF708(*(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186488](v0, 96, 7);
}

uint64_t Google_Protobuf_EnumDescriptorProto.isInitialized.getter()
{
  return sub_1C8CED6E0((uint64_t (*)(uint64_t))sub_1C8CEAED8);
}

uint64_t sub_1C8CEAED8(void *a1)
{
  swift_beginAccess();
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C8CE2CEC(v2, (uint64_t)&type metadata for Google_Protobuf_EnumValueDescriptorProto, (uint64_t (*)(void))sub_1C8D056F4);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = (void *)(v3 + 32);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v6 = v5[3];
      uint64_t v7 = v5[4];
      __swift_project_boxed_opaque_existential_1(v5, v6);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v7 + 32))(v6, v7) & 1) == 0) {
        break;
      }
      v5 += 5;
      if (!--v4)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
LABEL_6:
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v8 = a1[5];
    if (!v8) {
      return 1;
    }
    uint64_t v10 = a1[6];
    unint64_t v9 = a1[7];
    swift_bridgeObjectRetain();
    sub_1C8CA3CF8(v10, v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C8CA3CF8(v10, v9);
    swift_bridgeObjectRetain();
    if (ExtensionFieldValueSet.isInitialized.getter())
    {
      uint64_t v11 = sub_1C8CE28D0(v8);
      uint64_t v12 = *(void *)(v11 + 16);
      if (!v12)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        sub_1C8CEF708(v8, v10, v9);
        sub_1C8CEF708(v8, v10, v9);
        return 1;
      }
      uint64_t v13 = (void *)(v11 + 32);
      while (1)
      {
        uint64_t v14 = v13[3];
        uint64_t v15 = v13[4];
        __swift_project_boxed_opaque_existential_1(v13, v14);
        if (((*(uint64_t (**)(uint64_t, uint64_t))(v15 + 32))(v14, v15) & 1) == 0) {
          break;
        }
        v13 += 5;
        if (!--v12) {
          goto LABEL_12;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v17 = v8;
      uint64_t v18 = v10;
      unint64_t v19 = v9;
    }
    else
    {
      uint64_t v17 = v8;
      uint64_t v18 = v10;
      unint64_t v19 = v9;
    }
    sub_1C8CEF708(v17, v18, v19);
    sub_1C8CEF708(v8, v10, v9);
  }
  return 0;
}

uint64_t Google_Protobuf_EnumDescriptorProto.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CED9F4(a1, a2, a3, (void (*)(void))type metadata accessor for Google_Protobuf_EnumDescriptorProto._StorageClass, 96, sub_1C8CEAC28, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C8CEB1A8);
}

uint64_t sub_1C8CEB1A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 16);
  uint64_t result = v8(a3, a4);
  uint64_t v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          swift_beginAccess();
          uint64_t v16 = v11;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 344))(a1 + 16, a3, a4);
          goto LABEL_6;
        case 2:
          swift_beginAccess();
          uint64_t v12 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 416);
          unint64_t v13 = sub_1C8D056F4();
          uint64_t v14 = a1 + 32;
          uint64_t v15 = &type metadata for Google_Protobuf_EnumValueDescriptorProto;
          goto LABEL_5;
        case 3:
          swift_beginAccess();
          uint64_t v17 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 408);
          unint64_t v18 = sub_1C8D038DC();
          uint64_t v16 = v11;
          v17(a1 + 40, &type metadata for Google_Protobuf_EnumOptions, v18, a3, a4);
          goto LABEL_6;
        case 4:
          swift_beginAccess();
          uint64_t v12 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 416);
          unint64_t v13 = sub_1C8D0554C();
          uint64_t v14 = a1 + 80;
          uint64_t v15 = &type metadata for Google_Protobuf_EnumDescriptorProto.EnumReservedRange;
LABEL_5:
          uint64_t v16 = v11;
          v12(v14, v15, v13, a3, a4);
          goto LABEL_6;
        case 5:
          swift_beginAccess();
          uint64_t v16 = v11;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 352))(a1 + 88, a3, a4);
LABEL_6:
          uint64_t v11 = v16;
          swift_endAccess();
          break;
        default:
          break;
      }
      uint64_t result = v8(a3, a4);
    }
  }
  return result;
}

uint64_t Google_Protobuf_EnumDescriptorProto.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CEEA54(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C8CEB44C);
}

uint64_t sub_1C8CEB44C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = v4;
  unint64_t v9 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  uint64_t v10 = *(void *)(a1 + 24);
  if (!v10
    || (uint64_t v11 = *v9,
        uint64_t v12 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, void *))a4[14],
        swift_bridgeObjectRetain(),
        v12(v11, v10, 1, a3, a4),
        uint64_t result = swift_bridgeObjectRelease(),
        !v5))
  {
    swift_beginAccess();
    if (!*(void *)(*(void *)(a1 + 32) + 16)
      || (uint64_t v14 = (void (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, void *))a4[35],
          unint64_t v15 = sub_1C8D056F4(),
          uint64_t v16 = swift_bridgeObjectRetain(),
          v14(v16, 2, &type metadata for Google_Protobuf_EnumValueDescriptorProto, v15, a3, a4),
          uint64_t result = swift_bridgeObjectRelease(),
          !v5))
    {
      swift_beginAccess();
      if (!*(void *)(a1 + 40)) {
        goto LABEL_7;
      }
      __int16 v17 = *(_WORD *)(a1 + 72);
      uint64_t v18 = *(void *)(a1 + 64);
      uint64_t v26 = *(void *)(a1 + 40);
      long long v27 = *(_OWORD *)(a1 + 48);
      uint64_t v28 = v18;
      __int16 v29 = v17;
      unint64_t v19 = (uint64_t (*)(uint64_t *, uint64_t, ValueMetadata *, unint64_t, uint64_t, void *))a4[17];
      unint64_t v20 = sub_1C8D038DC();
      uint64_t result = v19(&v26, 3, &type metadata for Google_Protobuf_EnumOptions, v20, a3, a4);
      if (!v5)
      {
LABEL_7:
        swift_beginAccess();
        if (!*(void *)(*(void *)(a1 + 80) + 16)
          || (long long v21 = (void (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, void *))a4[35],
              unint64_t v22 = sub_1C8D0554C(),
              uint64_t v23 = swift_bridgeObjectRetain(),
              v21(v23, 4, &type metadata for Google_Protobuf_EnumDescriptorProto.EnumReservedRange, v22, a3, a4),
              uint64_t result = swift_bridgeObjectRelease(),
              !v5))
        {
          uint64_t result = swift_beginAccess();
          if (*(void *)(*(void *)(a1 + 88) + 16))
          {
            unint64_t v24 = (void (*)(uint64_t, uint64_t, uint64_t, void *))a4[32];
            uint64_t v25 = swift_bridgeObjectRetain();
            v24(v25, 5, a3, a4);
            return swift_bridgeObjectRelease();
          }
        }
      }
    }
  }
  return result;
}

uint64_t static Google_Protobuf_EnumDescriptorProto.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1C8D02E28(a1, a2, sub_1C8CEB6F0) & 1;
}

uint64_t sub_1C8CEB6F0(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  swift_beginAccess();
  uint64_t v6 = *(void *)(a2 + 24);
  if (!v5)
  {
    if (!v6) {
      goto LABEL_11;
    }
LABEL_10:
    char v8 = 0;
    return v8 & 1;
  }
  if (!v6) {
    goto LABEL_10;
  }
  BOOL v7 = v4 == *(void *)(a2 + 16) && v5 == v6;
  if (v7 || (char v8 = 0, (sub_1C8D887C0() & 1) != 0))
  {
LABEL_11:
    swift_beginAccess();
    uint64_t v9 = *(void *)(a1 + 32);
    swift_beginAccess();
    uint64_t v10 = *(void *)(a2 + 32);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v11 = sub_1C8D010E8(v9, v10, (uint64_t (*)(uint64_t, uint64_t))sub_1C8CECD10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0) {
      goto LABEL_21;
    }
    swift_beginAccess();
    uint64_t v12 = *(void *)(a1 + 40);
    uint64_t v13 = *(void *)(a1 + 48);
    unint64_t v15 = *(void *)(a1 + 56);
    uint64_t v14 = *(void *)(a1 + 64);
    __int16 v16 = *(_WORD *)(a1 + 72);
    swift_beginAccess();
    uint64_t v18 = *(void *)(a2 + 40);
    uint64_t v17 = *(void *)(a2 + 48);
    unint64_t v20 = *(void *)(a2 + 56);
    uint64_t v19 = *(void *)(a2 + 64);
    __int16 v21 = *(_WORD *)(a2 + 72);
    if (v12)
    {
      uint64_t v36 = v12;
      uint64_t v37 = v13;
      unint64_t v38 = v15;
      uint64_t v39 = v14;
      __int16 v40 = v16;
      if (v18)
      {
        v34[0] = v18;
        v34[1] = v17;
        v34[2] = v20;
        v34[3] = v19;
        __int16 v35 = v21;
        unint64_t v22 = v15;
        sub_1C8CEF6AC(v12, v13, v15);
        swift_bridgeObjectRetain();
        uint64_t v23 = v13;
        sub_1C8CA3CF8(v13, v22);
        swift_bridgeObjectRetain();
        char v33 = _s20SiriOntologyProtobuf07Google_C12_EnumOptionsV2eeoiySbAC_ACtFZ_0((uint64_t)&v36, (uint64_t)v34);
        uint64_t v24 = v37;
        unint64_t v25 = v38;
        swift_bridgeObjectRelease();
        sub_1C8CA3D5C(v24, v25);
        swift_bridgeObjectRelease();
        sub_1C8CEF708(v12, v23, v22);
        if ((v33 & 1) == 0) {
          goto LABEL_21;
        }
        goto LABEL_17;
      }
      sub_1C8CEF6AC(v12, v13, v15);
      swift_bridgeObjectRetain();
      sub_1C8CA3CF8(v13, v15);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v31 = v13;
      unint64_t v32 = v15;
      sub_1C8CA3D5C(v13, v15);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v31 = v13;
      unint64_t v32 = v15;
      if (!v18)
      {
LABEL_17:
        swift_beginAccess();
        uint64_t v26 = *(void *)(a1 + 80);
        swift_beginAccess();
        uint64_t v27 = *(void *)(a2 + 80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v28 = sub_1C8D00678(v26, v27);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v28)
        {
          swift_beginAccess();
          __int16 v29 = *(void **)(a1 + 88);
          swift_beginAccess();
          char v8 = sub_1C8CFBFEC(v29, *(void **)(a2 + 88));
LABEL_22:
          swift_release();
          swift_release();
          return v8 & 1;
        }
LABEL_21:
        char v8 = 0;
        goto LABEL_22;
      }
    }
    sub_1C8CEF6AC(v18, v17, v20);
    sub_1C8CEF708(v12, v31, v32);
    sub_1C8CEF708(v18, v17, v20);
    goto LABEL_21;
  }
  return v8 & 1;
}

uint64_t Google_Protobuf_EnumDescriptorProto.hashValue.getter()
{
  return sub_1C8CF90AC((void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_1C8CBD168);
}

uint64_t sub_1C8CEBAD4@<X0>(uint64_t a1@<X8>)
{
  return sub_1C8CC0424(&qword_1EA565AF8, &qword_1EA5663E8, a1);
}

unint64_t sub_1C8CEBAF8()
{
  return 0xD000000000000023;
}

uint64_t sub_1C8CEBB14(uint64_t a1, uint64_t a2)
{
  return sub_1C8CEE28C(a1, a2, (uint64_t (*)(uint64_t))sub_1C8CEAED8);
}

uint64_t sub_1C8CEBB2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_EnumDescriptorProto.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8CEBB44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_EnumDescriptorProto.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8CEBB5C@<X0>(void *a1@<X8>)
{
  if (qword_1EA565AF0 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA5663D0;
  uint64_t v3 = qword_1EA5663D8;
  uint64_t v4 = unk_1EA5663E0;
  *a1 = qword_1EA5663C8;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CEBBF4()
{
  return sub_1C8D69CA8(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16));
}

uint64_t sub_1C8CEBC00(uint64_t a1, uint64_t a2)
{
  return sub_1C8CF9218(a1, a2, (void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_1C8CBD168);
}

double sub_1C8CEBC18(long long *a1)
{
  return sub_1C8CBD168(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16));
}

uint64_t sub_1C8CEBC24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CF92A0(a1, a2, a3, (void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_1C8CBD168);
}

uint64_t sub_1C8CEBC3C(uint64_t *a1, uint64_t *a2)
{
  return sub_1C8D02E28(a1, a2, sub_1C8CEB6F0) & 1;
}

uint64_t sub_1C8CEBC6C()
{
  uint64_t result = sub_1C8D88400();
  qword_1EA5663F0 = 0xD000000000000023;
  *(void *)algn_1EA5663F8 = 0x80000001C8D89A90;
  return result;
}

uint64_t static Google_Protobuf_EnumDescriptorProto.EnumReservedRange.protoMessageName.getter()
{
  return sub_1C8CF93B4(&qword_1EA565B00, &qword_1EA5663F0);
}

uint64_t sub_1C8CEBD08()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234D0F8, &qword_1EA566400);
}

uint64_t static Google_Protobuf_EnumDescriptorProto.EnumReservedRange._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565B08 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA566408;
  uint64_t v3 = qword_1EA566410;
  uint64_t v4 = unk_1EA566418;
  *a1 = qword_1EA566400;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_EnumDescriptorProto.EnumReservedRange.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CEBDCC(a1, a2, a3);
}

uint64_t sub_1C8CEBDCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  uint64_t result = v7(a2, a3);
  if (!v4)
  {
    while ((v9 & 1) == 0)
    {
      if (result == 2)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 80))(v3 + 24, a2, a3);
      }
      else if (result == 1)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 80))(v3 + 16, a2, a3);
      }
      uint64_t result = v7(a2, a3);
    }
  }
  return result;
}

uint64_t Google_Protobuf_EnumDescriptorProto.EnumReservedRange.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CEBEB0(a1, a2, a3);
}

uint64_t sub_1C8CEBEB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(unsigned int *)(v3 + 24);
  char v9 = *(unsigned char *)(v3 + 28);
  if ((*(unsigned char *)(v3 + 20) & 1) != 0
    || (uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(a3 + 24))(*(unsigned int *)(v3 + 16), 1, a2, a3), !v4))
  {
    if (v9) {
      return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
    }
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 24))(v8, 2, a2, a3);
    if (!v4) {
      return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
    }
  }
  return result;
}

uint64_t static Google_Protobuf_EnumDescriptorProto.EnumReservedRange.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1C8D0283C(a1, a2) & 1;
}

uint64_t Google_Protobuf_EnumDescriptorProto.EnumReservedRange.hashValue.getter()
{
  return sub_1C8CEBFB4((void (*)(unsigned char *, uint64_t, uint64_t, unint64_t, unint64_t))sub_1C8CBD180);
}

uint64_t sub_1C8CEBFB4(void (*a1)(unsigned char *, uint64_t, uint64_t, unint64_t, unint64_t))
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v5 = *((unsigned int *)v1 + 4);
  unsigned __int8 v6 = *((unsigned char *)v1 + 20);
  uint64_t v7 = *((unsigned int *)v1 + 6);
  unsigned __int8 v8 = *((unsigned char *)v1 + 28);
  sub_1C8D88840();
  a1(v10, v3, v4, v5 | ((unint64_t)v6 << 32), v7 | ((unint64_t)v8 << 32));
  return sub_1C8D888A0();
}

uint64_t sub_1C8CEC048(uint64_t a1, uint64_t a2)
{
  return sub_1C8CF9C00(a1, a2, &qword_1EA565B00, &qword_1EA5663F0);
}

uint64_t sub_1C8CEC070@<X0>(void *a1@<X8>)
{
  if (qword_1EA565B08 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA566408;
  uint64_t v3 = qword_1EA566410;
  uint64_t v4 = unk_1EA566418;
  *a1 = qword_1EA566400;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CEC108(uint64_t a1, uint64_t a2)
{
  return sub_1C8CEC120(a1, a2, (uint64_t (*)(void, void, unint64_t, unint64_t))sub_1C8D69D9C);
}

uint64_t sub_1C8CEC120(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void, unint64_t, unint64_t))
{
  return a3(*(void *)v3, *(void *)(v3 + 8), *(unsigned int *)(v3 + 16) | ((unint64_t)*(unsigned __int8 *)(v3 + 20) << 32), *(unsigned int *)(v3 + 24) | ((unint64_t)*(unsigned __int8 *)(v3 + 28) << 32));
}

uint64_t sub_1C8CEC160(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, uint64_t, uint64_t, unint64_t, unint64_t))
{
  uint64_t v5 = *v3;
  uint64_t v6 = v3[1];
  uint64_t v7 = *((unsigned int *)v3 + 4);
  unsigned __int8 v8 = *((unsigned char *)v3 + 20);
  uint64_t v9 = *((unsigned int *)v3 + 6);
  unsigned __int8 v10 = *((unsigned char *)v3 + 28);
  sub_1C8D88840();
  a3(v12, v5, v6, v7 | ((unint64_t)v8 << 32), v9 | ((unint64_t)v10 << 32));
  return sub_1C8D888A0();
}

uint64_t sub_1C8CEC1F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, void, void, unint64_t, unint64_t))
{
  return a4(a1, *(void *)v4, *(void *)(v4 + 8), *(unsigned int *)(v4 + 16) | ((unint64_t)*(unsigned __int8 *)(v4 + 20) << 32), *(unsigned int *)(v4 + 24) | ((unint64_t)*(unsigned __int8 *)(v4 + 28) << 32));
}

uint64_t sub_1C8CEC234(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *, uint64_t, uint64_t, unint64_t, unint64_t))
{
  uint64_t v6 = *v4;
  uint64_t v7 = v4[1];
  uint64_t v8 = *((unsigned int *)v4 + 4);
  unsigned __int8 v9 = *((unsigned char *)v4 + 20);
  uint64_t v10 = *((unsigned int *)v4 + 6);
  unsigned __int8 v11 = *((unsigned char *)v4 + 28);
  sub_1C8D88840();
  a4(v13, v6, v7, v8 | ((unint64_t)v9 << 32), v10 | ((unint64_t)v11 << 32));
  return sub_1C8D888A0();
}

unint64_t static Google_Protobuf_EnumValueDescriptorProto.protoMessageName.getter()
{
  return 0xD000000000000028;
}

uint64_t sub_1C8CEC2E0()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234E200, &qword_1EA566420);
}

uint64_t static Google_Protobuf_EnumValueDescriptorProto._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565B10 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA566428;
  uint64_t v3 = qword_1EA566430;
  uint64_t v4 = unk_1EA566438;
  *a1 = qword_1EA566420;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CEC38C(uint64_t a1)
{
  *(void *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 32) = 0;
  *(void *)(v1 + 16) = 0;
  *(unsigned char *)(v1 + 36) = 1;
  *(_OWORD *)(v1 + 56) = 0u;
  *(unsigned char *)(v1 + 72) = 0;
  *(_OWORD *)(v1 + 40) = 0u;
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  swift_beginAccess();
  *(void *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  int v5 = *(_DWORD *)(a1 + 32);
  LOBYTE(v3) = *(unsigned char *)(a1 + 36);
  swift_beginAccess();
  *(_DWORD *)(v1 + 32) = v5;
  *(unsigned char *)(v1 + 36) = v3;
  swift_beginAccess();
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v7 = *(void *)(a1 + 48);
  unint64_t v8 = *(void *)(a1 + 56);
  uint64_t v9 = *(void *)(a1 + 64);
  LOBYTE(v4) = *(unsigned char *)(a1 + 72);
  sub_1C8CEF6AC(v6, v7, v8);
  swift_release();
  swift_beginAccess();
  uint64_t v10 = *(void *)(v1 + 40);
  uint64_t v11 = *(void *)(v1 + 48);
  unint64_t v12 = *(void *)(v1 + 56);
  *(void *)(v1 + 40) = v6;
  *(void *)(v1 + 48) = v7;
  *(void *)(v1 + 56) = v8;
  *(void *)(v1 + 64) = v9;
  *(unsigned char *)(v1 + 72) = v4;
  sub_1C8CEF708(v10, v11, v12);
  return v1;
}

uint64_t sub_1C8CEC4F8()
{
  swift_bridgeObjectRelease();
  sub_1C8CEF708(*(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
  return MEMORY[0x1F4186488](v0, 73, 7);
}

uint64_t Google_Protobuf_EnumValueDescriptorProto.isInitialized.getter()
{
  uint64_t v1 = *(void **)(v0 + 16);
  swift_beginAccess();
  uint64_t v2 = v1[5];
  if (v2)
  {
    uint64_t v3 = v1[6];
    unint64_t v4 = v1[7];
    swift_retain();
    sub_1C8CEF6AC(v2, v3, v4);
    if ((ExtensionFieldValueSet.isInitialized.getter() & 1) == 0)
    {
      uint64_t v13 = v2;
      uint64_t v14 = v3;
      unint64_t v15 = v4;
LABEL_14:
      sub_1C8CEF708(v13, v14, v15);
      uint64_t v16 = 0;
      goto LABEL_15;
    }
    uint64_t v5 = sub_1C8CE28D0(v2);
    uint64_t v6 = *(void *)(v5 + 16);
    if (v6)
    {
      unint64_t v18 = v4;
      uint64_t v7 = (void *)(v5 + 32);
      while (1)
      {
        uint64_t v9 = v7[3];
        uint64_t v8 = v7[4];
        __swift_project_boxed_opaque_existential_1(v7, v9);
        if (((*(uint64_t (**)(uint64_t, uint64_t))(v8 + 32))(v9, v8) & 1) == 0) {
          break;
        }
        v7 += 5;
        if (!--v6)
        {
          swift_bridgeObjectRelease();
          uint64_t v10 = v2;
          uint64_t v11 = v3;
          unint64_t v12 = v18;
          goto LABEL_11;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v13 = v2;
      uint64_t v14 = v3;
      unint64_t v15 = v18;
      goto LABEL_14;
    }
    swift_bridgeObjectRelease();
    uint64_t v10 = v2;
    uint64_t v11 = v3;
    unint64_t v12 = v4;
LABEL_11:
    sub_1C8CEF708(v10, v11, v12);
  }
  else
  {
    swift_retain();
  }
  uint64_t v16 = 1;
LABEL_15:
  swift_release();
  return v16;
}

uint64_t Google_Protobuf_EnumValueDescriptorProto.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CED9F4(a1, a2, a3, (void (*)(void))type metadata accessor for Google_Protobuf_EnumValueDescriptorProto._StorageClass, 73, sub_1C8CEC38C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C8CEC738);
}

uint64_t sub_1C8CEC738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 16);
  uint64_t result = v8(a3, a4);
  uint64_t v11 = v4;
  if (!v4)
  {
    uint64_t v18 = a1 + 40;
    uint64_t v12 = a1 + 32;
    uint64_t v13 = a1 + 16;
    uint64_t v17 = v12;
    while (1)
    {
      if (v10) {
        return result;
      }
      if (result == 3) {
        break;
      }
      if (result == 2)
      {
        swift_beginAccess();
        uint64_t v16 = v11;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 80))(v17, a3, a4);
        goto LABEL_5;
      }
      if (result == 1)
      {
        swift_beginAccess();
        uint64_t v16 = v11;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 344))(v13, a3, a4);
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = v8(a3, a4);
    }
    swift_beginAccess();
    uint64_t v14 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 408);
    unint64_t v15 = sub_1C8D03A64();
    uint64_t v16 = v11;
    v14(v18, &type metadata for Google_Protobuf_EnumValueOptions, v15, a3, a4);
LABEL_5:
    uint64_t v11 = v16;
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_1C8CEC8F0(long long *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  if (*(void *)(a4 + 24))
  {
    sub_1C8D88850();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1C8D883C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
  }
  swift_beginAccess();
  if ((*(unsigned char *)(a4 + 36) & 1) == 0)
  {
    sub_1C8D88850();
    sub_1C8D88880();
  }
  swift_beginAccess();
  uint64_t v9 = *(void *)(a4 + 40);
  if (v9)
  {
    uint64_t v21 = a2;
    unint64_t v32 = a3;
    uint64_t v10 = *(void *)(a4 + 48);
    unint64_t v11 = *(void *)(a4 + 56);
    uint64_t v12 = *(void *)(a4 + 64);
    char v13 = *(unsigned char *)(a4 + 72);
    uint64_t v27 = v9;
    uint64_t v28 = v10;
    unint64_t v29 = v11;
    uint64_t v30 = v12;
    char v31 = v13;
    sub_1C8D88850();
    uint64_t v14 = *((void *)a1 + 8);
    long long v15 = a1[1];
    long long v22 = *a1;
    long long v23 = v15;
    long long v16 = a1[3];
    long long v24 = a1[2];
    long long v25 = v16;
    uint64_t v26 = v14;
    swift_bridgeObjectRetain();
    sub_1C8CA3CF8(v10, v11);
    swift_bridgeObjectRetain();
    sub_1C8CF49EC((uint64_t)&v22);
    if (v4) {
      MEMORY[0x1CB7736A0](v4);
    }
    sub_1C8CEF708(v9, v10, v11);
    uint64_t v17 = v26;
    long long v18 = v23;
    *a1 = v22;
    a1[1] = v18;
    long long v19 = v25;
    a1[2] = v24;
    a1[3] = v19;
    *((void *)a1 + 8) = v17;
    a3 = v32;
    a2 = v21;
  }
  uint64_t result = swift_release();
  switch(a3 >> 62)
  {
    case 1uLL:
      if ((int)a2 != a2 >> 32) {
        goto LABEL_16;
      }
      break;
    case 2uLL:
      if (*(void *)(a2 + 16) != *(void *)(a2 + 24)) {
        goto LABEL_16;
      }
      break;
    case 3uLL:
      return result;
    default:
      if ((a3 & 0xFF000000000000) != 0) {
LABEL_16:
      }
        uint64_t result = sub_1C8D881D0();
      break;
  }
  return result;
}

uint64_t Google_Protobuf_EnumValueDescriptorProto.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CEEA54(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C8CECB60);
}

uint64_t sub_1C8CECB60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  uint64_t v10 = *(void *)(a1 + 24);
  if (!v10
    || (uint64_t v11 = *v9,
        uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 112),
        swift_bridgeObjectRetain(),
        v12(v11, v10, 1, a3, a4),
        uint64_t result = swift_bridgeObjectRelease(),
        !v5))
  {
    swift_beginAccess();
    if ((*(unsigned char *)(a1 + 36) & 1) != 0
      || (uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(a4 + 24))(*(unsigned int *)(a1 + 32), 2, a3, a4), !v5))
    {
      uint64_t result = swift_beginAccess();
      if (*(void *)(a1 + 40))
      {
        char v14 = *(unsigned char *)(a1 + 72);
        uint64_t v15 = *(void *)(a1 + 64);
        uint64_t v18 = *(void *)(a1 + 40);
        long long v19 = *(_OWORD *)(a1 + 48);
        uint64_t v20 = v15;
        char v21 = v14;
        long long v16 = *(uint64_t (**)(uint64_t *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 136);
        unint64_t v17 = sub_1C8D03A64();
        return v16(&v18, 3, &type metadata for Google_Protobuf_EnumValueOptions, v17, a3, a4);
      }
    }
  }
  return result;
}

uint64_t static Google_Protobuf_EnumValueDescriptorProto.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1C8D02E28(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1C8CECD10) & 1;
}

BOOL sub_1C8CECD10(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  swift_beginAccess();
  uint64_t v6 = *(void *)(a2 + 24);
  if (!v5)
  {
    if (v6) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v6) {
    return 0;
  }
  BOOL v7 = v4 == *(void *)(a2 + 16) && v5 == v6;
  if (v7 || (v8 = sub_1C8D887C0(), BOOL result = 0, (v8 & 1) != 0))
  {
LABEL_10:
    swift_beginAccess();
    int v10 = *(_DWORD *)(a1 + 32);
    char v11 = *(unsigned char *)(a1 + 36);
    swift_beginAccess();
    char v12 = *(unsigned char *)(a2 + 36);
    if (v11)
    {
      if (!*(unsigned char *)(a2 + 36)) {
        return 0;
      }
    }
    else
    {
      if (v10 != *(_DWORD *)(a2 + 32)) {
        char v12 = 1;
      }
      if (v12) {
        return 0;
      }
    }
    swift_beginAccess();
    uint64_t v13 = *(void *)(a1 + 40);
    uint64_t v14 = *(void *)(a1 + 48);
    unint64_t v16 = *(void *)(a1 + 56);
    uint64_t v15 = *(void *)(a1 + 64);
    char v17 = *(unsigned char *)(a1 + 72);
    swift_beginAccess();
    uint64_t v19 = *(void *)(a2 + 40);
    uint64_t v18 = *(void *)(a2 + 48);
    unint64_t v21 = *(void *)(a2 + 56);
    uint64_t v20 = *(void *)(a2 + 64);
    char v22 = *(unsigned char *)(a2 + 72);
    if (v13)
    {
      uint64_t v28 = v13;
      uint64_t v29 = v14;
      unint64_t v30 = v16;
      uint64_t v31 = v15;
      char v32 = v17;
      if (v19)
      {
        v26[0] = v19;
        v26[1] = v18;
        void v26[2] = v21;
        v26[3] = v20;
        char v27 = v22;
        sub_1C8CEF6AC(v13, v14, v16);
        sub_1C8CEF6AC(v13, v14, v16);
        char v23 = sub_1C8D02FAC((uint64_t)&v28, (uint64_t)v26);
        uint64_t v24 = v29;
        unint64_t v25 = v30;
        swift_bridgeObjectRelease();
        sub_1C8CA3D5C(v24, v25);
        swift_bridgeObjectRelease();
        sub_1C8CEF708(v13, v14, v16);
        return (v23 & 1) != 0;
      }
      sub_1C8CEF6AC(v13, v14, v16);
      swift_bridgeObjectRetain();
      sub_1C8CA3CF8(v14, v16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_1C8CA3D5C(v14, v16);
      swift_bridgeObjectRelease();
    }
    else if (!v19)
    {
      return 1;
    }
    sub_1C8CEF6AC(v19, v18, v21);
    sub_1C8CEF708(v13, v14, v16);
    sub_1C8CEF708(v19, v18, v21);
    return 0;
  }
  return result;
}

uint64_t Google_Protobuf_EnumValueDescriptorProto.hashValue.getter()
{
  return sub_1C8CECFBC((void (*)(long long *, uint64_t, uint64_t, uint64_t))sub_1C8CEC8F0);
}

uint64_t sub_1C8CECFBC(void (*a1)(long long *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v5 = v1[2];
  sub_1C8D88840();
  long long v7 = v17;
  long long v8 = v18;
  long long v9 = v19;
  long long v10 = v20;
  uint64_t v11 = v21;
  a1(&v7, v3, v4, v5);
  long long v12 = v7;
  long long v13 = v8;
  long long v14 = v9;
  long long v15 = v10;
  uint64_t v16 = v11;
  return sub_1C8D888A0();
}

uint64_t sub_1C8CED070@<X0>(uint64_t a1@<X8>)
{
  return sub_1C8CEF280((void (*)(void))type metadata accessor for Google_Protobuf_EnumValueDescriptorProto._StorageClass, a1);
}

unint64_t sub_1C8CED090()
{
  return 0xD000000000000028;
}

uint64_t sub_1C8CED0B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_EnumValueDescriptorProto.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8CED0C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_EnumValueDescriptorProto.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8CED0E0@<X0>(void *a1@<X8>)
{
  if (qword_1EA565B10 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA566428;
  uint64_t v3 = qword_1EA566430;
  uint64_t v4 = unk_1EA566438;
  *a1 = qword_1EA566420;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CED178()
{
  return sub_1C8D69ED4(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16));
}

uint64_t sub_1C8CED184(uint64_t a1, uint64_t a2)
{
  return sub_1C8CED19C(a1, a2, (void (*)(long long *, uint64_t, uint64_t, uint64_t))sub_1C8CEC8F0);
}

uint64_t sub_1C8CED19C(uint64_t a1, uint64_t a2, void (*a3)(long long *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *v3;
  uint64_t v6 = v3[1];
  uint64_t v7 = v3[2];
  sub_1C8D88840();
  long long v9 = v19;
  long long v10 = v20;
  long long v11 = v21;
  long long v12 = v22;
  uint64_t v13 = v23;
  a3(&v9, v5, v6, v7);
  long long v14 = v9;
  long long v15 = v10;
  long long v16 = v11;
  long long v17 = v12;
  uint64_t v18 = v13;
  return sub_1C8D888A0();
}

double sub_1C8CED250(long long *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CED268(a1, a2, a3, (void (*)(long long *, uint64_t, uint64_t, uint64_t))sub_1C8CEC8F0);
}

double sub_1C8CED268(long long *a1, uint64_t a2, uint64_t a3, void (*a4)(long long *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *v4;
  uint64_t v8 = v4[1];
  uint64_t v9 = v4[2];
  uint64_t v10 = *((void *)a1 + 8);
  long long v11 = a1[1];
  long long v17 = *a1;
  long long v18 = v11;
  long long v12 = a1[3];
  long long v19 = a1[2];
  long long v20 = v12;
  uint64_t v21 = v10;
  a4(&v17, v7, v8, v9);
  uint64_t v13 = v21;
  long long v14 = v18;
  *a1 = v17;
  a1[1] = v14;
  double result = *(double *)&v19;
  long long v16 = v20;
  a1[2] = v19;
  a1[3] = v16;
  *((void *)a1 + 8) = v13;
  return result;
}

uint64_t sub_1C8CED2F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CED308(a1, a2, a3, (void (*)(long long *, uint64_t, uint64_t, uint64_t))sub_1C8CEC8F0);
}

uint64_t sub_1C8CED308(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(long long *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *v4;
  uint64_t v7 = v4[1];
  uint64_t v8 = v4[2];
  sub_1C8D88840();
  long long v10 = v20;
  long long v11 = v21;
  long long v12 = v22;
  long long v13 = v23;
  uint64_t v14 = v24;
  a4(&v10, v6, v7, v8);
  long long v15 = v10;
  long long v16 = v11;
  long long v17 = v12;
  long long v18 = v13;
  uint64_t v19 = v14;
  return sub_1C8D888A0();
}

uint64_t sub_1C8CED3B8(uint64_t *a1, uint64_t *a2)
{
  return sub_1C8D02E28(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1C8CECD10) & 1;
}

unint64_t static Google_Protobuf_ServiceDescriptorProto.protoMessageName.getter()
{
  return 0xD000000000000026;
}

uint64_t sub_1C8CED404()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234E138, &qword_1EA566440);
}

uint64_t static Google_Protobuf_ServiceDescriptorProto._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565B18 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA566448;
  uint64_t v3 = qword_1EA566450;
  uint64_t v4 = unk_1EA566458;
  *a1 = qword_1EA566440;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

double sub_1C8CED4B0()
{
  type metadata accessor for Google_Protobuf_ServiceDescriptorProto._StorageClass();
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  *(void *)(v0 + 32) = MEMORY[0x1E4FBC860];
  double result = 0.0;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(unsigned char *)(v0 + 72) = 0;
  qword_1EA566460 = v0;
  return result;
}

uint64_t sub_1C8CED500(uint64_t a1)
{
  *(void *)(v1 + 24) = 0;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 32) = MEMORY[0x1E4FBC860];
  *(_OWORD *)(v1 + 56) = 0u;
  *(unsigned char *)(v1 + 72) = 0;
  *(_OWORD *)(v1 + 40) = 0u;
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  swift_beginAccess();
  *(void *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v5 = *(void *)(a1 + 32);
  swift_beginAccess();
  *(void *)(v1 + 32) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v7 = *(void *)(a1 + 48);
  unint64_t v8 = *(void *)(a1 + 56);
  uint64_t v9 = *(void *)(a1 + 64);
  LOBYTE(v4) = *(unsigned char *)(a1 + 72);
  sub_1C8CEF6AC(v6, v7, v8);
  swift_release();
  swift_beginAccess();
  uint64_t v10 = *(void *)(v1 + 40);
  uint64_t v11 = *(void *)(v1 + 48);
  unint64_t v12 = *(void *)(v1 + 56);
  *(void *)(v1 + 40) = v6;
  *(void *)(v1 + 48) = v7;
  *(void *)(v1 + 56) = v8;
  *(void *)(v1 + 64) = v9;
  *(unsigned char *)(v1 + 72) = v4;
  sub_1C8CEF708(v10, v11, v12);
  return v1;
}

uint64_t sub_1C8CED678()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C8CEF708(*(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
  return MEMORY[0x1F4186488](v0, 73, 7);
}

uint64_t Google_Protobuf_ServiceDescriptorProto.isInitialized.getter()
{
  return sub_1C8CED6E0((uint64_t (*)(uint64_t))sub_1C8CED724);
}

uint64_t sub_1C8CED6E0(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = swift_retain();
  LOBYTE(a1) = a1(v2);
  swift_release();
  return a1 & 1;
}

uint64_t sub_1C8CED724(void *a1)
{
  swift_beginAccess();
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C8CE2CEC(v2, (uint64_t)&type metadata for Google_Protobuf_MethodDescriptorProto, (uint64_t (*)(void))sub_1C8D05A44);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = (void *)(v3 + 32);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v6 = v5[3];
      uint64_t v7 = v5[4];
      __swift_project_boxed_opaque_existential_1(v5, v6);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v7 + 32))(v6, v7) & 1) == 0) {
        break;
      }
      v5 += 5;
      if (!--v4)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
LABEL_6:
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v8 = a1[5];
    if (!v8) {
      return 1;
    }
    uint64_t v10 = a1[6];
    unint64_t v9 = a1[7];
    swift_bridgeObjectRetain();
    sub_1C8CA3CF8(v10, v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C8CA3CF8(v10, v9);
    swift_bridgeObjectRetain();
    if (ExtensionFieldValueSet.isInitialized.getter())
    {
      uint64_t v11 = sub_1C8CE28D0(v8);
      uint64_t v12 = *(void *)(v11 + 16);
      if (!v12)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        sub_1C8CEF708(v8, v10, v9);
        sub_1C8CEF708(v8, v10, v9);
        return 1;
      }
      long long v13 = (void *)(v11 + 32);
      while (1)
      {
        uint64_t v14 = v13[3];
        uint64_t v15 = v13[4];
        __swift_project_boxed_opaque_existential_1(v13, v14);
        if (((*(uint64_t (**)(uint64_t, uint64_t))(v15 + 32))(v14, v15) & 1) == 0) {
          break;
        }
        v13 += 5;
        if (!--v12) {
          goto LABEL_12;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v17 = v8;
      uint64_t v18 = v10;
      unint64_t v19 = v9;
    }
    else
    {
      uint64_t v17 = v8;
      uint64_t v18 = v10;
      unint64_t v19 = v9;
    }
    sub_1C8CEF708(v17, v18, v19);
    sub_1C8CEF708(v8, v10, v9);
  }
  return 0;
}

uint64_t Google_Protobuf_ServiceDescriptorProto.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CED9F4(a1, a2, a3, (void (*)(void))type metadata accessor for Google_Protobuf_ServiceDescriptorProto._StorageClass, 73, sub_1C8CED500, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C8CEDADC);
}

uint64_t sub_1C8CED9F4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t (*a6)(uint64_t), void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a4(0);
    swift_allocObject();
    uint64_t v13 = swift_retain();
    *(void *)(v7 + 16) = a6(v13);
    swift_release();
  }
  uint64_t v14 = swift_retain();
  a7(v14, a1, a2, a3);
  return swift_release();
}

uint64_t sub_1C8CEDADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 16);
  uint64_t result = v8(a3, a4);
  uint64_t v11 = v4;
  if (!v4)
  {
    uint64_t v20 = a1 + 40;
    uint64_t v12 = a1 + 32;
    uint64_t v13 = a1 + 16;
    uint64_t v19 = v12;
    while (1)
    {
      if (v10) {
        return result;
      }
      if (result == 3) {
        break;
      }
      if (result == 2)
      {
        swift_beginAccess();
        uint64_t v17 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 416);
        unint64_t v18 = sub_1C8D05A44();
        uint64_t v16 = v11;
        v17(v19, &type metadata for Google_Protobuf_MethodDescriptorProto, v18, a3, a4);
        goto LABEL_5;
      }
      if (result == 1)
      {
        swift_beginAccess();
        uint64_t v16 = v11;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 344))(v13, a3, a4);
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = v8(a3, a4);
    }
    swift_beginAccess();
    uint64_t v14 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 408);
    unint64_t v15 = sub_1C8D03AB8();
    uint64_t v16 = v11;
    v14(v20, &type metadata for Google_Protobuf_ServiceOptions, v15, a3, a4);
LABEL_5:
    uint64_t v11 = v16;
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

uint64_t Google_Protobuf_ServiceDescriptorProto.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CEEA54(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C8CEDCD0);
}

uint64_t sub_1C8CEDCD0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = v4;
  unint64_t v9 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  uint64_t v10 = *(void *)(a1 + 24);
  if (!v10
    || (uint64_t v11 = *v9,
        uint64_t v12 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, void *))a4[14],
        swift_bridgeObjectRetain(),
        v12(v11, v10, 1, a3, a4),
        uint64_t result = swift_bridgeObjectRelease(),
        !v5))
  {
    swift_beginAccess();
    if (!*(void *)(*(void *)(a1 + 32) + 16)
      || (uint64_t v14 = (void (*)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, void *))a4[35],
          unint64_t v15 = sub_1C8D05A44(),
          uint64_t v16 = swift_bridgeObjectRetain(),
          v14(v16, 2, &type metadata for Google_Protobuf_MethodDescriptorProto, v15, a3, a4),
          uint64_t result = swift_bridgeObjectRelease(),
          !v5))
    {
      uint64_t result = swift_beginAccess();
      if (*(void *)(a1 + 40))
      {
        char v17 = *(unsigned char *)(a1 + 72);
        uint64_t v18 = *(void *)(a1 + 64);
        uint64_t v21 = *(void *)(a1 + 40);
        long long v22 = *(_OWORD *)(a1 + 48);
        uint64_t v23 = v18;
        char v24 = v17;
        uint64_t v19 = (uint64_t (*)(uint64_t *, uint64_t, ValueMetadata *, unint64_t, uint64_t, void *))a4[17];
        unint64_t v20 = sub_1C8D03AB8();
        return v19(&v21, 3, &type metadata for Google_Protobuf_ServiceOptions, v20, a3, a4);
      }
    }
  }
  return result;
}

uint64_t static Google_Protobuf_ServiceDescriptorProto.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1C8D02E28(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1C8CEDEA0) & 1;
}

BOOL sub_1C8CEDEA0(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  swift_beginAccess();
  uint64_t v6 = *(void *)(a2 + 24);
  if (!v5)
  {
    if (v6) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v6) {
    return 0;
  }
  BOOL v7 = v4 == *(void *)(a2 + 16) && v5 == v6;
  if (v7 || (v8 = sub_1C8D887C0(), BOOL result = 0, (v8 & 1) != 0))
  {
LABEL_10:
    swift_beginAccess();
    uint64_t v10 = *(void *)(a1 + 32);
    swift_beginAccess();
    uint64_t v11 = *(void *)(a2 + 32);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v12 = sub_1C8D010E8(v10, v11, sub_1C8CEEDD0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v12)
    {
      swift_beginAccess();
      uint64_t v13 = *(void *)(a1 + 40);
      uint64_t v14 = *(void *)(a1 + 48);
      unint64_t v16 = *(void *)(a1 + 56);
      uint64_t v15 = *(void *)(a1 + 64);
      char v17 = *(unsigned char *)(a1 + 72);
      swift_beginAccess();
      uint64_t v19 = *(void *)(a2 + 40);
      uint64_t v18 = *(void *)(a2 + 48);
      unint64_t v21 = *(void *)(a2 + 56);
      uint64_t v20 = *(void *)(a2 + 64);
      char v22 = *(unsigned char *)(a2 + 72);
      if (v13)
      {
        uint64_t v28 = v13;
        uint64_t v29 = v14;
        unint64_t v30 = v16;
        uint64_t v31 = v15;
        char v32 = v17;
        if (v19)
        {
          v26[0] = v19;
          v26[1] = v18;
          void v26[2] = v21;
          v26[3] = v20;
          char v27 = v22;
          sub_1C8CEF6AC(v13, v14, v16);
          sub_1C8CEF6AC(v19, v18, v21);
          sub_1C8CEF6AC(v13, v14, v16);
          char v25 = sub_1C8D02FAC((uint64_t)&v28, (uint64_t)v26);
          swift_release();
          swift_release();
          sub_1C8CEF708(v19, v18, v21);
          uint64_t v23 = v29;
          unint64_t v24 = v30;
          swift_bridgeObjectRelease();
          sub_1C8CA3D5C(v23, v24);
          swift_bridgeObjectRelease();
          sub_1C8CEF708(v13, v14, v16);
          return (v25 & 1) != 0;
        }
        swift_bridgeObjectRetain();
        sub_1C8CA3CF8(v14, v16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1C8CA3CF8(v14, v16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        sub_1C8CA3D5C(v14, v16);
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1C8CEF6AC(v19, v18, v21);
        swift_release();
        swift_release();
        if (!v19) {
          return 1;
        }
      }
      sub_1C8CEF708(v13, v14, v16);
      sub_1C8CEF708(v19, v18, v21);
    }
    else
    {
      swift_release();
      swift_release();
    }
    return 0;
  }
  return result;
}

uint64_t Google_Protobuf_ServiceDescriptorProto.hashValue.getter()
{
  return sub_1C8CF90AC((void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_1C8CBCBA4);
}

uint64_t sub_1C8CEE234@<X0>(uint64_t a1@<X8>)
{
  return sub_1C8CC0424(&qword_1EA565B20, &qword_1EA566460, a1);
}

unint64_t sub_1C8CEE258()
{
  return 0xD000000000000026;
}

uint64_t sub_1C8CEE274(uint64_t a1, uint64_t a2)
{
  return sub_1C8CEE28C(a1, a2, (uint64_t (*)(uint64_t))sub_1C8CED724);
}

uint64_t sub_1C8CEE28C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = swift_retain();
  LOBYTE(a3) = a3(v4);
  swift_release();
  return a3 & 1;
}

uint64_t sub_1C8CEE2D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_ServiceDescriptorProto.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8CEE2E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_ServiceDescriptorProto.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8CEE300@<X0>(void *a1@<X8>)
{
  if (qword_1EA565B18 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA566448;
  uint64_t v3 = qword_1EA566450;
  uint64_t v4 = unk_1EA566458;
  *a1 = qword_1EA566440;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CEE398()
{
  return sub_1C8D69FC8(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16));
}

uint64_t sub_1C8CEE3A4(uint64_t a1, uint64_t a2)
{
  return sub_1C8CF9218(a1, a2, (void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_1C8CBCBA4);
}

double sub_1C8CEE3BC(long long *a1)
{
  return sub_1C8CBCBA4(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16));
}

uint64_t sub_1C8CEE3C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CF92A0(a1, a2, a3, (void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_1C8CBCBA4);
}

uint64_t sub_1C8CEE3E0(uint64_t *a1, uint64_t *a2)
{
  return sub_1C8D02E28(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1C8CEDEA0) & 1;
}

unint64_t static Google_Protobuf_MethodDescriptorProto.protoMessageName.getter()
{
  return 0xD000000000000025;
}

uint64_t sub_1C8CEE42C()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234DFC8, &qword_1EA566468);
}

uint64_t static Google_Protobuf_MethodDescriptorProto._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565B28 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA566470;
  uint64_t v3 = qword_1EA566478;
  uint64_t v4 = unk_1EA566480;
  *a1 = qword_1EA566468;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CEE4D8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C8CEF708(*(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80));
  return MEMORY[0x1F4186488](v0, 100, 7);
}

uint64_t Google_Protobuf_MethodDescriptorProto.isInitialized.getter()
{
  uint64_t v1 = *(void **)(v0 + 16);
  swift_beginAccess();
  uint64_t v2 = v1[8];
  if (v2)
  {
    uint64_t v3 = v1[9];
    unint64_t v4 = v1[10];
    swift_retain();
    sub_1C8CEF6AC(v2, v3, v4);
    if ((ExtensionFieldValueSet.isInitialized.getter() & 1) == 0)
    {
      uint64_t v13 = v2;
      uint64_t v14 = v3;
      unint64_t v15 = v4;
LABEL_14:
      sub_1C8CEF708(v13, v14, v15);
      uint64_t v16 = 0;
      goto LABEL_15;
    }
    uint64_t v5 = sub_1C8CE28D0(v2);
    uint64_t v6 = *(void *)(v5 + 16);
    if (v6)
    {
      unint64_t v18 = v4;
      BOOL v7 = (void *)(v5 + 32);
      while (1)
      {
        uint64_t v9 = v7[3];
        uint64_t v8 = v7[4];
        __swift_project_boxed_opaque_existential_1(v7, v9);
        if (((*(uint64_t (**)(uint64_t, uint64_t))(v8 + 32))(v9, v8) & 1) == 0) {
          break;
        }
        v7 += 5;
        if (!--v6)
        {
          swift_bridgeObjectRelease();
          uint64_t v10 = v2;
          uint64_t v11 = v3;
          unint64_t v12 = v18;
          goto LABEL_11;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v13 = v2;
      uint64_t v14 = v3;
      unint64_t v15 = v18;
      goto LABEL_14;
    }
    swift_bridgeObjectRelease();
    uint64_t v10 = v2;
    uint64_t v11 = v3;
    unint64_t v12 = v4;
LABEL_11:
    sub_1C8CEF708(v10, v11, v12);
  }
  else
  {
    swift_retain();
  }
  uint64_t v16 = 1;
LABEL_15:
  swift_release();
  return v16;
}

uint64_t Google_Protobuf_MethodDescriptorProto.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass();
    swift_allocObject();
    uint64_t v8 = swift_retain();
    uint64_t v9 = sub_1C8D02B4C(v8);
    swift_release();
    *(void *)(v4 + 16) = v9;
    swift_release();
  }
  uint64_t v10 = swift_retain();
  sub_1C8CEE794(v10, a1, a2, a3);
  return swift_release();
}

uint64_t sub_1C8CEE794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 16);
  uint64_t result = v8(a3, a4);
  uint64_t v11 = v4;
  if (!v4)
  {
    uint64_t v19 = a1 + 98;
    uint64_t v20 = a1 + 99;
    uint64_t v17 = a1 + 48;
    uint64_t v18 = a1 + 64;
    uint64_t v15 = a1 + 16;
    uint64_t v16 = a1 + 32;
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          uint64_t v12 = v15;
          goto LABEL_5;
        case 2:
          uint64_t v12 = v16;
          goto LABEL_5;
        case 3:
          uint64_t v12 = v17;
LABEL_5:
          swift_beginAccess();
          uint64_t v13 = v11;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 344))(v12, a3, a4);
          goto LABEL_6;
        case 4:
          swift_beginAccess();
          unint64_t v21 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 408);
          unint64_t v14 = sub_1C8D03B0C();
          v21(v18, &type metadata for Google_Protobuf_MethodOptions, v14, a3, a4);
          swift_endAccess();
          uint64_t result = v8(a3, a4);
          continue;
        case 5:
          swift_beginAccess();
          uint64_t v13 = v11;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 320))(v19, a3, a4);
LABEL_6:
          uint64_t v11 = v13;
          swift_endAccess();
          break;
        case 6:
          swift_beginAccess();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 320))(v20, a3, a4);
          swift_endAccess();
          break;
        default:
          break;
      }
      uint64_t result = v8(a3, a4);
    }
  }
  return result;
}

uint64_t Google_Protobuf_MethodDescriptorProto.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CEEA54(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C8CEEAF8);
}

uint64_t sub_1C8CEEA54(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9 = swift_retain();
  a4(v9, a1, a2, a3);
  uint64_t result = swift_release();
  if (!v4) {
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_1C8CEEAF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  uint64_t v10 = *(void *)(a1 + 24);
  if (!v10
    || (uint64_t v11 = *v9,
        uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 112),
        swift_bridgeObjectRetain(),
        v12(v11, v10, 1, a3, a4),
        uint64_t result = swift_bridgeObjectRelease(),
        !v5))
  {
    swift_beginAccess();
    uint64_t v14 = *(void *)(a1 + 40);
    if (!v14
      || (uint64_t v15 = *(void *)(a1 + 32),
          uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 112),
          swift_bridgeObjectRetain(),
          v16(v15, v14, 2, a3, a4),
          uint64_t result = swift_bridgeObjectRelease(),
          !v5))
    {
      swift_beginAccess();
      uint64_t v17 = *(void *)(a1 + 56);
      if (!v17
        || (uint64_t v18 = *(void *)(a1 + 48),
            uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 112),
            swift_bridgeObjectRetain(),
            v19(v18, v17, 3, a3, a4),
            uint64_t result = swift_bridgeObjectRelease(),
            !v5))
      {
        swift_beginAccess();
        if (!*(void *)(a1 + 64)) {
          goto LABEL_9;
        }
        __int16 v20 = *(_WORD *)(a1 + 96);
        uint64_t v21 = *(void *)(a1 + 88);
        uint64_t v26 = *(void *)(a1 + 64);
        long long v27 = *(_OWORD *)(a1 + 72);
        uint64_t v28 = v21;
        __int16 v29 = v20;
        char v22 = *(uint64_t (**)(uint64_t *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 136);
        unint64_t v23 = sub_1C8D03B0C();
        uint64_t result = v22(&v26, 4, &type metadata for Google_Protobuf_MethodOptions, v23, a3, a4);
        if (!v5)
        {
LABEL_9:
          swift_beginAccess();
          int v24 = *(unsigned __int8 *)(a1 + 98);
          if (v24 == 2
            || (uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(a4 + 104))(v24 & 1, 5, a3, a4),
                !v5))
          {
            uint64_t result = swift_beginAccess();
            int v25 = *(unsigned __int8 *)(a1 + 99);
            if (v25 != 2) {
              return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(a4 + 104))(v25 & 1, 6, a3, a4);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t static Google_Protobuf_MethodDescriptorProto.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1C8D02E28(a1, a2, sub_1C8CEEDD0) & 1;
}

uint64_t sub_1C8CEEDD0(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  swift_beginAccess();
  uint64_t v6 = *(void *)(a2 + 24);
  if (!v5)
  {
    if (v6) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v6) {
    return 0;
  }
  BOOL v7 = v4 == *(void *)(a2 + 16) && v5 == v6;
  if (v7 || (v8 = sub_1C8D887C0(), uint64_t result = 0, (v8 & 1) != 0))
  {
LABEL_10:
    swift_beginAccess();
    uint64_t v10 = *(void *)(a1 + 32);
    uint64_t v11 = *(void *)(a1 + 40);
    swift_beginAccess();
    uint64_t v12 = *(void *)(a2 + 40);
    if (v11)
    {
      if (!v12) {
        return 0;
      }
      if (v10 != *(void *)(a2 + 32) || v11 != v12)
      {
        char v13 = sub_1C8D887C0();
        uint64_t result = 0;
        if ((v13 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v12)
    {
      return 0;
    }
    swift_beginAccess();
    uint64_t v14 = *(void *)(a1 + 48);
    uint64_t v15 = *(void *)(a1 + 56);
    swift_beginAccess();
    uint64_t v16 = *(void *)(a2 + 56);
    if (v15)
    {
      if (v16)
      {
        if (v14 != *(void *)(a2 + 48) || v15 != v16)
        {
          char v17 = sub_1C8D887C0();
          uint64_t result = 0;
          if ((v17 & 1) == 0) {
            return result;
          }
        }
LABEL_24:
        swift_beginAccess();
        uint64_t v18 = *(void *)(a1 + 64);
        uint64_t v19 = *(void *)(a1 + 72);
        unint64_t v21 = *(void *)(a1 + 80);
        uint64_t v20 = *(void *)(a1 + 88);
        __int16 v22 = *(_WORD *)(a1 + 96);
        swift_beginAccess();
        uint64_t v24 = *(void *)(a2 + 64);
        uint64_t v23 = *(void *)(a2 + 72);
        unint64_t v25 = *(void *)(a2 + 80);
        uint64_t v26 = *(void *)(a2 + 88);
        __int16 v27 = *(_WORD *)(a2 + 96);
        if (v18)
        {
          uint64_t v41 = v18;
          uint64_t v42 = v19;
          unint64_t v43 = v21;
          uint64_t v44 = v20;
          __int16 v45 = v22;
          if (v24)
          {
            v39[0] = v24;
            v39[1] = v23;
            v39[2] = v25;
            void v39[3] = v26;
            __int16 v40 = v27;
            sub_1C8CEF6AC(v18, v19, v21);
            sub_1C8CEF6AC(v18, v19, v21);
            swift_retain();
            swift_retain();
            char v38 = _s20SiriOntologyProtobuf07Google_C14_MethodOptionsV2eeoiySbAC_ACtFZ_0((uint64_t)&v41, (uint64_t)v39);
            uint64_t v28 = v42;
            unint64_t v29 = v43;
            swift_bridgeObjectRelease();
            sub_1C8CA3D5C(v28, v29);
            swift_bridgeObjectRelease();
            sub_1C8CEF708(v18, v19, v21);
            if ((v38 & 1) == 0) {
              goto LABEL_34;
            }
            goto LABEL_29;
          }
          uint64_t v34 = v23;
          unint64_t v35 = v25;
          sub_1C8CEF6AC(v18, v19, v21);
          sub_1C8CEF6AC(v18, v19, v21);
          swift_retain();
          swift_retain();
          swift_bridgeObjectRelease();
          uint64_t v36 = v19;
          unint64_t v37 = v21;
          sub_1C8CA3D5C(v19, v21);
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v34 = *(void *)(a2 + 72);
          uint64_t v36 = v19;
          unint64_t v37 = v21;
          unint64_t v35 = *(void *)(a2 + 80);
          swift_retain();
          swift_retain();
          if (!v24)
          {
LABEL_29:
            swift_beginAccess();
            int v30 = *(unsigned __int8 *)(a1 + 98);
            swift_beginAccess();
            int v31 = *(unsigned __int8 *)(a2 + 98);
            if (v30 != 2)
            {
              if (v31 == 2 || ((((v31 & 1) == 0) ^ v30) & 1) == 0) {
                goto LABEL_34;
              }
LABEL_38:
              swift_beginAccess();
              int v32 = *(unsigned __int8 *)(a1 + 99);
              swift_release();
              swift_beginAccess();
              int v33 = *(unsigned __int8 *)(a2 + 99);
              swift_release();
              if (v32 == 2)
              {
                if (v33 != 2) {
                  return 0;
                }
              }
              else if (v33 == 2 || ((((v33 & 1) == 0) ^ v32) & 1) == 0)
              {
                return 0;
              }
              return 1;
            }
            if (v31 == 2) {
              goto LABEL_38;
            }
LABEL_34:
            swift_release();
            swift_release();
            return 0;
          }
        }
        sub_1C8CEF6AC(v24, v34, v35);
        sub_1C8CEF708(v18, v36, v37);
        sub_1C8CEF708(v24, v34, v35);
        goto LABEL_34;
      }
    }
    else if (!v16)
    {
      goto LABEL_24;
    }
    return 0;
  }
  return result;
}

uint64_t Google_Protobuf_MethodDescriptorProto.hashValue.getter()
{
  return sub_1C8CF90AC((void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_1C8CBCBBC);
}

uint64_t sub_1C8CEF260@<X0>(uint64_t a1@<X8>)
{
  return sub_1C8CEF280((void (*)(void))type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass, a1);
}

uint64_t sub_1C8CEF280@<X0>(void (*a1)(void)@<X2>, uint64_t a2@<X8>)
{
  *(_OWORD *)a2 = xmmword_1C8D8AD80;
  a1(0);
  uint64_t result = swift_initStaticObject();
  *(void *)(a2 + 16) = result;
  return result;
}

unint64_t sub_1C8CEF2C8()
{
  return 0xD000000000000025;
}

uint64_t sub_1C8CEF2E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_MethodDescriptorProto.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8CEF300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_MethodDescriptorProto.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8CEF318@<X0>(void *a1@<X8>)
{
  if (qword_1EA565B28 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA566470;
  uint64_t v3 = qword_1EA566478;
  uint64_t v4 = unk_1EA566480;
  *a1 = qword_1EA566468;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CEF3B0()
{
  return sub_1C8D6A0BC(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16));
}

uint64_t sub_1C8CEF3BC(uint64_t a1, uint64_t a2)
{
  return sub_1C8CF9218(a1, a2, (void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_1C8CBCBBC);
}

double sub_1C8CEF3D4(long long *a1)
{
  return sub_1C8CBCBBC(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16));
}

uint64_t sub_1C8CEF3E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CF92A0(a1, a2, a3, (void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_1C8CBCBBC);
}

uint64_t sub_1C8CEF3F8(uint64_t *a1, uint64_t *a2)
{
  return sub_1C8D02E28(a1, a2, sub_1C8CEEDD0) & 1;
}

unint64_t static Google_Protobuf_FileOptions.protoMessageName.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1C8CEF444()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234BC80, &qword_1EA566488);
}

uint64_t static Google_Protobuf_FileOptions._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565B30 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA566490;
  uint64_t v3 = qword_1EA566498;
  uint64_t v4 = unk_1EA5664A0;
  *a1 = qword_1EA566488;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

double sub_1C8CEF4F0()
{
  type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
  uint64_t v0 = swift_allocObject();
  double result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_DWORD *)(v0 + 48) = 50463234;
  *(void *)(v0 + 56) = 0;
  *(void *)(v0 + 64) = 0;
  *(_DWORD *)(v0 + 72) = 33686018;
  *(_WORD *)(v0 + 76) = 514;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 128) = 0u;
  *(_OWORD *)(v0 + 144) = 0u;
  *(_OWORD *)(v0 + 160) = 0u;
  *(_OWORD *)(v0 + 176) = 0u;
  *(void *)(v0 + 192) = MEMORY[0x1E4FBC860];
  qword_1EA5664A8 = v0;
  return result;
}

uint64_t sub_1C8CEF560(uint64_t result, unint64_t a2, uint64_t a3)
{
  if (a3)
  {
    sub_1C8CA3CF8(result, a2);
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1C8CEF5AC(uint64_t result, unint64_t a2, uint64_t a3)
{
  if (a3)
  {
    sub_1C8CA3D5C(result, a2);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C8CEF5F8(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return sub_1C8CA3CF8(a2, a3);
  }
  return result;
}

uint64_t sub_1C8CEF640(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return sub_1C8CA3D5C(a2, a3);
  }
  return result;
}

uint64_t type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass()
{
  return self;
}

uint64_t sub_1C8CEF6AC(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    sub_1C8CA3CF8(a2, a3);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C8CEF708(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    sub_1C8CA3D5C(a2, a3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for Google_Protobuf_DescriptorProto.ExtensionRange._StorageClass()
{
  return self;
}

uint64_t type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass()
{
  return self;
}

uint64_t type metadata accessor for Google_Protobuf_OneofDescriptorProto._StorageClass()
{
  return self;
}

uint64_t type metadata accessor for Google_Protobuf_EnumDescriptorProto._StorageClass()
{
  return self;
}

uint64_t type metadata accessor for Google_Protobuf_EnumValueDescriptorProto._StorageClass()
{
  return self;
}

uint64_t type metadata accessor for Google_Protobuf_ServiceDescriptorProto._StorageClass()
{
  return self;
}

uint64_t type metadata accessor for Google_Protobuf_MethodDescriptorProto._StorageClass()
{
  return self;
}

uint64_t sub_1C8CEF860(uint64_t a1)
{
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_DWORD *)(v1 + 48) = 50463234;
  *(void *)(v1 + 64) = 0;
  *(void *)(v1 + 56) = 0;
  *(_WORD *)(v1 + 76) = 514;
  *(_DWORD *)(v1 + 72) = 33686018;
  *(_OWORD *)(v1 + 176) = 0u;
  *(_OWORD *)(v1 + 160) = 0u;
  *(_OWORD *)(v1 + 144) = 0u;
  *(_OWORD *)(v1 + 128) = 0u;
  *(_OWORD *)(v1 + 112) = 0u;
  *(_OWORD *)(v1 + 96) = 0u;
  *(_OWORD *)(v1 + 80) = 0u;
  *(void *)(v1 + 192) = MEMORY[0x1E4FBC860];
  swift_beginAccess();
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  swift_beginAccess();
  *(void *)(v1 + 16) = v3;
  *(void *)(v1 + 24) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  swift_beginAccess();
  *(void *)(v1 + 32) = v5;
  *(void *)(v1 + 40) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  char v7 = *(unsigned char *)(a1 + 48);
  swift_beginAccess();
  *(unsigned char *)(v1 + 48) = v7;
  swift_beginAccess();
  char v8 = *(unsigned char *)(a1 + 49);
  swift_beginAccess();
  *(unsigned char *)(v1 + 49) = v8;
  swift_beginAccess();
  char v9 = *(unsigned char *)(a1 + 50);
  swift_beginAccess();
  *(unsigned char *)(v1 + 50) = v9;
  swift_beginAccess();
  char v10 = *(unsigned char *)(a1 + 51);
  swift_beginAccess();
  *(unsigned char *)(v1 + 51) = v10;
  swift_beginAccess();
  uint64_t v12 = *(void *)(a1 + 56);
  uint64_t v11 = *(void *)(a1 + 64);
  swift_beginAccess();
  *(void *)(v1 + 56) = v12;
  *(void *)(v1 + 64) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  LOBYTE(v11) = *(unsigned char *)(a1 + 72);
  swift_beginAccess();
  *(unsigned char *)(v1 + 72) = v11;
  swift_beginAccess();
  LOBYTE(v11) = *(unsigned char *)(a1 + 73);
  swift_beginAccess();
  *(unsigned char *)(v1 + 73) = v11;
  swift_beginAccess();
  LOBYTE(v11) = *(unsigned char *)(a1 + 74);
  swift_beginAccess();
  *(unsigned char *)(v1 + 74) = v11;
  swift_beginAccess();
  LOBYTE(v11) = *(unsigned char *)(a1 + 75);
  swift_beginAccess();
  *(unsigned char *)(v1 + 75) = v11;
  swift_beginAccess();
  LOBYTE(v11) = *(unsigned char *)(a1 + 76);
  swift_beginAccess();
  *(unsigned char *)(v1 + 76) = v11;
  swift_beginAccess();
  LOBYTE(v11) = *(unsigned char *)(a1 + 77);
  swift_beginAccess();
  *(unsigned char *)(v1 + 77) = v11;
  swift_beginAccess();
  uint64_t v14 = *(void *)(a1 + 80);
  uint64_t v13 = *(void *)(a1 + 88);
  swift_beginAccess();
  *(void *)(v1 + 80) = v14;
  *(void *)(v1 + 88) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v16 = *(void *)(a1 + 96);
  uint64_t v15 = *(void *)(a1 + 104);
  swift_beginAccess();
  *(void *)(v1 + 96) = v16;
  *(void *)(v1 + 104) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v18 = *(void *)(a1 + 112);
  uint64_t v17 = *(void *)(a1 + 120);
  swift_beginAccess();
  *(void *)(v1 + 112) = v18;
  *(void *)(v1 + 120) = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v20 = *(void *)(a1 + 128);
  uint64_t v19 = *(void *)(a1 + 136);
  swift_beginAccess();
  *(void *)(v1 + 128) = v20;
  *(void *)(v1 + 136) = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v22 = *(void *)(a1 + 144);
  uint64_t v21 = *(void *)(a1 + 152);
  swift_beginAccess();
  *(void *)(v1 + 144) = v22;
  *(void *)(v1 + 152) = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v24 = *(void *)(a1 + 160);
  uint64_t v23 = *(void *)(a1 + 168);
  swift_beginAccess();
  *(void *)(v1 + 160) = v24;
  *(void *)(v1 + 168) = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v26 = *(void *)(a1 + 176);
  uint64_t v25 = *(void *)(a1 + 184);
  swift_beginAccess();
  *(void *)(v1 + 176) = v26;
  *(void *)(v1 + 184) = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v27 = *(void *)(a1 + 192);
  swift_bridgeObjectRetain();
  swift_release();
  swift_beginAccess();
  *(void *)(v1 + 192) = v27;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C8CEFEA8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C8CEFF18()
{
  uint64_t v0 = sub_1C8CEFEA8();
  return MEMORY[0x1F4186488](v0, 200, 7);
}

uint64_t Google_Protobuf_FileOptions.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Google_Protobuf_FileOptions._StorageClass();
    swift_allocObject();
    uint64_t v7 = swift_retain();
    *(void *)(v3 + 24) = sub_1C8CEF860(v7);
    swift_release();
  }
  uint64_t v8 = swift_retain();
  sub_1C8CF0004(v8, a1, v3, a2, a3);
  return swift_release();
}

uint64_t sub_1C8CF0004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = a5 + 16;
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 16);
  uint64_t result = v11(a4, a5);
  uint64_t v14 = v5;
  if (!v5)
  {
    uint64_t v15 = result;
    uint64_t v32 = a1 + 192;
    uint64_t v52 = a1 + 176;
    uint64_t v50 = a1 + 75;
    uint64_t v51 = a1 + 160;
    uint64_t v48 = a1 + 128;
    uint64_t v49 = a1 + 144;
    uint64_t v47 = a1 + 112;
    uint64_t v45 = a1 + 80;
    uint64_t v46 = a1 + 96;
    uint64_t v43 = a1 + 50;
    uint64_t v44 = a1 + 77;
    uint64_t v41 = a1 + 49;
    uint64_t v42 = a1 + 76;
    uint64_t v39 = a1 + 73;
    uint64_t v40 = a1 + 74;
    uint64_t v37 = a1 + 56;
    uint64_t v38 = a1 + 72;
    uint64_t v35 = a1 + 51;
    uint64_t v36 = a1 + 48;
    uint64_t v33 = a1 + 16;
    uint64_t v34 = a1 + 32;
    uint64_t v16 = a5 + 344;
    uint64_t v31 = a3 + 16;
    uint64_t v17 = a5 + 320;
    while ((v13 & 1) == 0)
    {
      switch(v15)
      {
        case 1:
          uint64_t v23 = v33;
          goto LABEL_17;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 12:
        case 13:
        case 14:
        case 15:
        case 19:
        case 21:
        case 22:
        case 24:
        case 25:
        case 26:
        case 28:
        case 29:
        case 30:
        case 32:
        case 33:
        case 34:
        case 35:
        case 38:
        case 43:
          goto LABEL_12;
        case 8:
          uint64_t v23 = v34;
          goto LABEL_17;
        case 9:
          uint64_t v18 = v10;
          uint64_t v19 = v11;
          uint64_t v20 = v16;
          uint64_t v21 = v17;
          swift_beginAccess();
          unint64_t v29 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a5 + 392);
          unint64_t v22 = sub_1C8D0A8BC();
          v29(v35, &type metadata for Google_Protobuf_FileOptions.OptimizeMode, v22, a4, a5);
          swift_endAccess();
          goto LABEL_5;
        case 10:
          swift_beginAccess();
          uint64_t v26 = v14;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a5 + 320))(v36, a4, a5);
          goto LABEL_18;
        case 11:
          uint64_t v23 = v37;
LABEL_17:
          swift_beginAccess();
          uint64_t v26 = v14;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a5 + 344))(v23, a4, a5);
LABEL_18:
          uint64_t v14 = v26;
          swift_endAccess();
          break;
        case 16:
          uint64_t v27 = v38;
          goto LABEL_32;
        case 17:
          uint64_t v27 = v39;
          goto LABEL_32;
        case 18:
          uint64_t v27 = v40;
          goto LABEL_32;
        case 20:
          uint64_t v27 = v41;
          goto LABEL_32;
        case 23:
          uint64_t v27 = v42;
          goto LABEL_32;
        case 27:
          uint64_t v27 = v43;
          goto LABEL_32;
        case 31:
          uint64_t v27 = v44;
          goto LABEL_32;
        case 36:
          uint64_t v28 = v45;
          goto LABEL_35;
        case 37:
          uint64_t v28 = v46;
          goto LABEL_35;
        case 39:
          uint64_t v28 = v47;
          goto LABEL_35;
        case 40:
          uint64_t v28 = v48;
          goto LABEL_35;
        case 41:
          uint64_t v28 = v49;
          goto LABEL_35;
        case 42:
          uint64_t v27 = v50;
LABEL_32:
          swift_beginAccess();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a5 + 320))(v27, a4, a5);
          goto LABEL_36;
        case 44:
          uint64_t v28 = v51;
          goto LABEL_35;
        case 45:
          uint64_t v28 = v52;
LABEL_35:
          swift_beginAccess();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a5 + 344))(v28, a4, a5);
LABEL_36:
          swift_endAccess();
          break;
        default:
          if (v15 == 999)
          {
            uint64_t v18 = v10;
            uint64_t v19 = v11;
            uint64_t v20 = v16;
            uint64_t v21 = v17;
            swift_beginAccess();
            int v30 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a5 + 416);
            unint64_t v24 = sub_1C8D02F58();
            v30(v32, &type metadata for Google_Protobuf_UninterpretedOption, v24, a4, a5);
            swift_endAccess();
LABEL_5:
            uint64_t v17 = v21;
            uint64_t v16 = v20;
            uint64_t v11 = v19;
            uint64_t v10 = v18;
          }
          else
          {
LABEL_12:
            if ((unint64_t)(v15 - 1000) <= 0x1FFFFC17)
            {
              unint64_t v25 = sub_1C8D040D4();
              (*(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t, uint64_t))(a5 + 464))(v31, &type metadata for Google_Protobuf_FileOptions, v25, v15, a4, a5);
            }
          }
          break;
      }
      uint64_t result = v11(a4, a5);
      uint64_t v15 = result;
    }
  }
  return result;
}

uint64_t Google_Protobuf_FileOptions.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = *v3;
  uint64_t v8 = v3[1];
  uint64_t v11 = v3[2];
  uint64_t v10 = v3[3];
  uint64_t v12 = swift_retain();
  sub_1C8CF061C(v12, a1, v9, v8, v11, v10, a2, a3);
  uint64_t result = swift_release();
  if (!v4) {
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_1C8CF061C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  uint64_t v14 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  uint64_t v15 = *(void *)(a1 + 24);
  if (v15)
  {
    uint64_t v16 = *v14;
    uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 112);
    swift_bridgeObjectRetain();
    v17(v16, v15, 1, a7, a8);
    if (v9) {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t v18 = *(void *)(a1 + 40);
  if (!v18) {
    goto LABEL_7;
  }
  uint64_t v19 = *(void *)(a1 + 32);
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 112);
  swift_bridgeObjectRetain();
  v20(v19, v18, 8, a7, a8);
  if (v9) {
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
LABEL_7:
  swift_beginAccess();
  if (*(unsigned char *)(a1 + 51) == 3
    || (v60[0] = *(unsigned char *)(a1 + 51),
        uint64_t v21 = *(uint64_t (**)(unsigned char *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a8 + 128),
        unint64_t v22 = sub_1C8D0A8BC(),
        uint64_t result = v21(v60, 9, &type metadata for Google_Protobuf_FileOptions.OptimizeMode, v22, a7, a8),
        !v9))
  {
    swift_beginAccess();
    int v24 = *(unsigned __int8 *)(a1 + 48);
    if (v24 == 2
      || (uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(a8 + 104))(v24 & 1, 10, a7, a8), !v9))
    {
      swift_beginAccess();
      uint64_t v25 = *(void *)(a1 + 64);
      if (v25)
      {
        uint64_t v26 = *(void *)(a1 + 56);
        uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 112);
        swift_bridgeObjectRetain();
        v27(v26, v25, 11, a7, a8);
        if (v9) {
          return swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      int v28 = *(unsigned __int8 *)(a1 + 72);
      if (v28 == 2
        || (uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(a8 + 104))(v28 & 1, 16, a7, a8),
            !v9))
      {
        swift_beginAccess();
        int v29 = *(unsigned __int8 *)(a1 + 73);
        if (v29 == 2
          || (uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(a8 + 104))(v29 & 1, 17, a7, a8),
              !v9))
        {
          swift_beginAccess();
          int v30 = *(unsigned __int8 *)(a1 + 74);
          if (v30 == 2
            || (uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(a8 + 104))(v30 & 1, 18, a7, a8), !v9))
          {
            swift_beginAccess();
            int v31 = *(unsigned __int8 *)(a1 + 49);
            if (v31 == 2
              || (uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(a8 + 104))(v31 & 1, 20, a7, a8), !v9))
            {
              swift_beginAccess();
              int v32 = *(unsigned __int8 *)(a1 + 76);
              if (v32 == 2
                || (uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(a8 + 104))(v32 & 1, 23, a7, a8), !v9))
              {
                swift_beginAccess();
                int v33 = *(unsigned __int8 *)(a1 + 50);
                if (v33 == 2
                  || (uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(a8 + 104))(v33 & 1, 27, a7, a8), !v9))
                {
                  swift_beginAccess();
                  int v34 = *(unsigned __int8 *)(a1 + 77);
                  if (v34 == 2
                    || (uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(a8 + 104))(v34 & 1, 31, a7, a8), !v9))
                  {
                    swift_beginAccess();
                    uint64_t v35 = *(void *)(a1 + 88);
                    if (v35)
                    {
                      uint64_t v36 = *(void *)(a1 + 80);
                      uint64_t v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 112);
                      swift_bridgeObjectRetain();
                      v37(v36, v35, 36, a7, a8);
                      if (v9) {
                        return swift_bridgeObjectRelease();
                      }
                      swift_bridgeObjectRelease();
                    }
                    swift_beginAccess();
                    uint64_t v38 = *(void *)(a1 + 104);
                    if (!v38
                      || (uint64_t v39 = *(void *)(a1 + 96),
                          uint64_t v40 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 112),
                          swift_bridgeObjectRetain(),
                          v40(v39, v38, 37, a7, a8),
                          uint64_t result = swift_bridgeObjectRelease(),
                          !v9))
                    {
                      swift_beginAccess();
                      uint64_t v41 = *(void *)(a1 + 120);
                      if (!v41
                        || (uint64_t v42 = *(void *)(a1 + 112),
                            uint64_t v43 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 112),
                            swift_bridgeObjectRetain(),
                            v43(v42, v41, 39, a7, a8),
                            uint64_t result = swift_bridgeObjectRelease(),
                            !v9))
                      {
                        swift_beginAccess();
                        uint64_t v44 = *(void *)(a1 + 136);
                        if (!v44
                          || (uint64_t v45 = *(void *)(a1 + 128),
                              uint64_t v46 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 112),
                              swift_bridgeObjectRetain(),
                              v46(v45, v44, 40, a7, a8),
                              uint64_t result = swift_bridgeObjectRelease(),
                              !v9))
                        {
                          swift_beginAccess();
                          uint64_t v47 = *(void *)(a1 + 152);
                          if (!v47
                            || (uint64_t v48 = *(void *)(a1 + 144),
                                uint64_t v49 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 112),
                                swift_bridgeObjectRetain(),
                                v49(v48, v47, 41, a7, a8),
                                uint64_t result = swift_bridgeObjectRelease(),
                                !v9))
                          {
                            swift_beginAccess();
                            int v50 = *(unsigned __int8 *)(a1 + 75);
                            if (v50 == 2
                              || (uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(a8 + 104))(v50 & 1, 42, a7, a8), !v9))
                            {
                              swift_beginAccess();
                              uint64_t v51 = *(void *)(a1 + 168);
                              if (!v51
                                || (uint64_t v52 = *(void *)(a1 + 160),
                                    char v53 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 112),
                                    swift_bridgeObjectRetain(),
                                    v53(v52, v51, 44, a7, a8),
                                    uint64_t result = swift_bridgeObjectRelease(),
                                    !v9))
                              {
                                swift_beginAccess();
                                uint64_t v54 = *(void *)(a1 + 184);
                                if (!v54
                                  || (uint64_t v55 = *(void *)(a1 + 176),
                                      uint64_t v56 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 112),
                                      swift_bridgeObjectRetain(),
                                      v56(v55, v54, 45, a7, a8),
                                      uint64_t result = swift_bridgeObjectRelease(),
                                      !v9))
                                {
                                  swift_beginAccess();
                                  if (!*(void *)(*(void *)(a1 + 192) + 16)
                                    || (uint64_t v57 = *(void (**)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a8 + 280),
                                        unint64_t v58 = sub_1C8D02F58(),
                                        uint64_t v59 = swift_bridgeObjectRetain(),
                                        v57(v59, 999, &type metadata for Google_Protobuf_UninterpretedOption, v58, a7, a8), uint64_t result = swift_bridgeObjectRelease(), !v9))
                                  {
                                    uint64_t v61 = a5;
                                    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 432))(&v61, 1000, 0x20000000, a7, a8);
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C8CF0E74(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  swift_beginAccess();
  uint64_t v6 = *(void *)(a2 + 24);
  if (!v5)
  {
    if (v6) {
      goto LABEL_123;
    }
    goto LABEL_10;
  }
  if (!v6) {
    goto LABEL_123;
  }
  BOOL v7 = v4 == *(void *)(a2 + 16) && v5 == v6;
  if (v7 || (char v8 = 0, (sub_1C8D887C0() & 1) != 0))
  {
LABEL_10:
    swift_beginAccess();
    uint64_t v9 = *(void *)(a1 + 32);
    uint64_t v10 = *(void *)(a1 + 40);
    swift_beginAccess();
    uint64_t v11 = *(void *)(a2 + 40);
    if (v10)
    {
      if (!v11) {
        goto LABEL_123;
      }
      if (v9 != *(void *)(a2 + 32) || v10 != v11)
      {
        char v8 = 0;
        if ((sub_1C8D887C0() & 1) == 0) {
          return v8 & 1;
        }
      }
    }
    else if (v11)
    {
      goto LABEL_123;
    }
    swift_beginAccess();
    int v12 = *(unsigned __int8 *)(a1 + 48);
    swift_beginAccess();
    int v13 = *(unsigned __int8 *)(a2 + 48);
    if (v12 == 2)
    {
      if (v13 != 2) {
        goto LABEL_123;
      }
    }
    else if (v13 == 2 || ((((v13 & 1) == 0) ^ v12) & 1) == 0)
    {
      goto LABEL_123;
    }
    swift_beginAccess();
    int v14 = *(unsigned __int8 *)(a1 + 49);
    swift_beginAccess();
    int v15 = *(unsigned __int8 *)(a2 + 49);
    if (v14 == 2)
    {
      if (v15 != 2) {
        goto LABEL_123;
      }
    }
    else if (v15 == 2 || ((((v15 & 1) == 0) ^ v14) & 1) == 0)
    {
      goto LABEL_123;
    }
    swift_beginAccess();
    int v16 = *(unsigned __int8 *)(a1 + 50);
    swift_beginAccess();
    int v17 = *(unsigned __int8 *)(a2 + 50);
    if (v16 == 2)
    {
      if (v17 != 2) {
        goto LABEL_123;
      }
    }
    else if (v17 == 2 || ((((v17 & 1) == 0) ^ v16) & 1) == 0)
    {
      goto LABEL_123;
    }
    swift_beginAccess();
    int v18 = *(unsigned __int8 *)(a1 + 51);
    swift_beginAccess();
    int v19 = *(unsigned __int8 *)(a2 + 51);
    if (v18 == 3)
    {
      if (v19 != 3) {
        goto LABEL_123;
      }
    }
    else
    {
      char v8 = 0;
      if (v19 == 3 || v18 != v19) {
        return v8 & 1;
      }
    }
    swift_beginAccess();
    uint64_t v20 = *(void *)(a1 + 56);
    uint64_t v21 = *(void *)(a1 + 64);
    swift_beginAccess();
    uint64_t v22 = *(void *)(a2 + 64);
    if (v21)
    {
      if (!v22) {
        goto LABEL_123;
      }
      if (v20 != *(void *)(a2 + 56) || v21 != v22)
      {
        char v8 = 0;
        if ((sub_1C8D887C0() & 1) == 0) {
          return v8 & 1;
        }
      }
    }
    else if (v22)
    {
      goto LABEL_123;
    }
    swift_beginAccess();
    int v23 = *(unsigned __int8 *)(a1 + 72);
    swift_beginAccess();
    int v24 = *(unsigned __int8 *)(a2 + 72);
    if (v23 == 2)
    {
      if (v24 != 2) {
        goto LABEL_123;
      }
    }
    else if (v24 == 2 || ((((v24 & 1) == 0) ^ v23) & 1) == 0)
    {
      goto LABEL_123;
    }
    swift_beginAccess();
    int v25 = *(unsigned __int8 *)(a1 + 73);
    swift_beginAccess();
    int v26 = *(unsigned __int8 *)(a2 + 73);
    if (v25 == 2)
    {
      if (v26 != 2) {
        goto LABEL_123;
      }
    }
    else if (v26 == 2 || ((((v26 & 1) == 0) ^ v25) & 1) == 0)
    {
      goto LABEL_123;
    }
    swift_beginAccess();
    int v27 = *(unsigned __int8 *)(a1 + 74);
    swift_beginAccess();
    int v28 = *(unsigned __int8 *)(a2 + 74);
    if (v27 == 2)
    {
      if (v28 != 2) {
        goto LABEL_123;
      }
    }
    else if (v28 == 2 || ((((v28 & 1) == 0) ^ v27) & 1) == 0)
    {
      goto LABEL_123;
    }
    swift_beginAccess();
    int v29 = *(unsigned __int8 *)(a1 + 75);
    swift_beginAccess();
    int v30 = *(unsigned __int8 *)(a2 + 75);
    if (v29 == 2)
    {
      if (v30 != 2) {
        goto LABEL_123;
      }
    }
    else if (v30 == 2 || ((((v30 & 1) == 0) ^ v29) & 1) == 0)
    {
      goto LABEL_123;
    }
    swift_beginAccess();
    int v31 = *(unsigned __int8 *)(a1 + 76);
    swift_beginAccess();
    int v32 = *(unsigned __int8 *)(a2 + 76);
    if (v31 == 2)
    {
      if (v32 != 2) {
        goto LABEL_123;
      }
    }
    else if (v32 == 2 || ((((v32 & 1) == 0) ^ v31) & 1) == 0)
    {
      goto LABEL_123;
    }
    swift_beginAccess();
    int v33 = *(unsigned __int8 *)(a1 + 77);
    swift_beginAccess();
    int v34 = *(unsigned __int8 *)(a2 + 77);
    if (v33 == 2)
    {
      if (v34 != 2) {
        goto LABEL_123;
      }
    }
    else if (v34 == 2 || ((((v34 & 1) == 0) ^ v33) & 1) == 0)
    {
      goto LABEL_123;
    }
    swift_beginAccess();
    uint64_t v35 = *(void *)(a1 + 80);
    uint64_t v36 = *(void *)(a1 + 88);
    swift_beginAccess();
    uint64_t v37 = *(void *)(a2 + 88);
    if (v36)
    {
      if (!v37) {
        goto LABEL_123;
      }
      if (v35 != *(void *)(a2 + 80) || v36 != v37)
      {
        char v8 = 0;
        if ((sub_1C8D887C0() & 1) == 0) {
          return v8 & 1;
        }
      }
    }
    else if (v37)
    {
      goto LABEL_123;
    }
    swift_beginAccess();
    uint64_t v38 = *(void *)(a1 + 96);
    uint64_t v39 = *(void *)(a1 + 104);
    swift_beginAccess();
    uint64_t v40 = *(void *)(a2 + 104);
    if (v39)
    {
      if (!v40) {
        goto LABEL_123;
      }
      if (v38 != *(void *)(a2 + 96) || v39 != v40)
      {
        char v8 = 0;
        if ((sub_1C8D887C0() & 1) == 0) {
          return v8 & 1;
        }
      }
    }
    else if (v40)
    {
      goto LABEL_123;
    }
    swift_beginAccess();
    uint64_t v41 = *(void *)(a1 + 112);
    uint64_t v42 = *(void *)(a1 + 120);
    swift_beginAccess();
    uint64_t v43 = *(void *)(a2 + 120);
    if (v42)
    {
      if (!v43) {
        goto LABEL_123;
      }
      if (v41 != *(void *)(a2 + 112) || v42 != v43)
      {
        char v8 = 0;
        if ((sub_1C8D887C0() & 1) == 0) {
          return v8 & 1;
        }
      }
    }
    else if (v43)
    {
      goto LABEL_123;
    }
    swift_beginAccess();
    uint64_t v44 = *(void *)(a1 + 128);
    uint64_t v45 = *(void *)(a1 + 136);
    swift_beginAccess();
    uint64_t v46 = *(void *)(a2 + 136);
    if (v45)
    {
      if (!v46) {
        goto LABEL_123;
      }
      if (v44 != *(void *)(a2 + 128) || v45 != v46)
      {
        char v8 = 0;
        if ((sub_1C8D887C0() & 1) == 0) {
          return v8 & 1;
        }
      }
    }
    else if (v46)
    {
      goto LABEL_123;
    }
    swift_beginAccess();
    uint64_t v47 = *(void *)(a1 + 144);
    uint64_t v48 = *(void *)(a1 + 152);
    swift_beginAccess();
    uint64_t v49 = *(void *)(a2 + 152);
    if (v48)
    {
      if (!v49) {
        goto LABEL_123;
      }
      if (v47 != *(void *)(a2 + 144) || v48 != v49)
      {
        char v8 = 0;
        if ((sub_1C8D887C0() & 1) == 0) {
          return v8 & 1;
        }
      }
    }
    else if (v49)
    {
      goto LABEL_123;
    }
    swift_beginAccess();
    uint64_t v50 = *(void *)(a1 + 160);
    uint64_t v51 = *(void *)(a1 + 168);
    swift_beginAccess();
    uint64_t v52 = *(void *)(a2 + 168);
    if (v51)
    {
      if (!v52) {
        goto LABEL_123;
      }
      if (v50 != *(void *)(a2 + 160) || v51 != v52)
      {
        char v8 = 0;
        if ((sub_1C8D887C0() & 1) == 0) {
          return v8 & 1;
        }
      }
    }
    else if (v52)
    {
      goto LABEL_123;
    }
    swift_beginAccess();
    uint64_t v53 = *(void *)(a1 + 176);
    uint64_t v54 = *(void *)(a1 + 184);
    swift_beginAccess();
    uint64_t v55 = *(void *)(a2 + 184);
    if (v54)
    {
      if (v55)
      {
        if (v53 != *(void *)(a2 + 176) || v54 != v55)
        {
          char v8 = 0;
          if ((sub_1C8D887C0() & 1) == 0) {
            return v8 & 1;
          }
        }
LABEL_125:
        swift_beginAccess();
        uint64_t v57 = *(void *)(a1 + 192);
        swift_beginAccess();
        uint64_t v58 = *(void *)(a2 + 192);
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v8 = sub_1C8CF9FBC(v57, v58);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        return v8 & 1;
      }
    }
    else if (!v55)
    {
      goto LABEL_125;
    }
LABEL_123:
    char v8 = 0;
  }
  return v8 & 1;
}

uint64_t Google_Protobuf_FileOptions.hashValue.getter()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  sub_1C8D88840();
  sub_1C8CBD040(v6, v1, v2, v4, v3);
  return sub_1C8D888A0();
}

uint64_t sub_1C8CF1764@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_1C8D8AD80;
  *(void *)(a1 + 16) = MEMORY[0x1E4FBC868];
  if (qword_1EA565B38 != -1) {
    swift_once();
  }
  *(void *)(a1 + 24) = qword_1EA5664A8;
  return swift_retain();
}

unint64_t sub_1C8CF17E8()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1C8CF1808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_FileOptions.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8CF1820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_FileOptions.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8CF1838@<X0>(void *a1@<X8>)
{
  if (qword_1EA565B30 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA566490;
  uint64_t v3 = qword_1EA566498;
  uint64_t v4 = unk_1EA5664A0;
  *a1 = qword_1EA566488;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CF18D0()
{
  return sub_1C8D6A1B0(*v0, v0[1], v0[2], v0[3]);
}

uint64_t sub_1C8CF18DC()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  sub_1C8D88840();
  sub_1C8CBD040(v6, v1, v2, v4, v3);
  return sub_1C8D888A0();
}

double sub_1C8CF193C(long long *a1)
{
  return sub_1C8CBD040(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C8CF1948()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  sub_1C8D88840();
  sub_1C8CBD040(v6, v1, v2, v4, v3);
  return sub_1C8D888A0();
}

uint64_t sub_1C8CF19A8()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234BBB8, &qword_1EA5664B0);
}

uint64_t static Google_Protobuf_FileOptions.OptimizeMode._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565B40 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA5664B8;
  uint64_t v3 = qword_1EA5664C0;
  uint64_t v4 = unk_1EA5664C8;
  *a1 = qword_1EA5664B0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CF1A54@<X0>(void *a1@<X8>)
{
  if (qword_1EA565B40 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA5664B8;
  uint64_t v3 = qword_1EA5664C0;
  uint64_t v4 = unk_1EA5664C8;
  *a1 = qword_1EA5664B0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

unint64_t static Google_Protobuf_MessageOptions.protoMessageName.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_1C8CF1B08()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234C7B8, &qword_1EA5664D0);
}

uint64_t static Google_Protobuf_MessageOptions._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565B48 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA5664D8;
  uint64_t v3 = qword_1EA5664E0;
  uint64_t v4 = unk_1EA5664E8;
  *a1 = qword_1EA5664D0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_MessageOptions.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  uint64_t result = v7(a2, a3);
  uint64_t v10 = v4;
  if (!v4)
  {
    uint64_t v11 = result;
    while ((v9 & 1) == 0)
    {
      switch(v11)
      {
        case 1:
          int v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 320);
          uint64_t v13 = v3 + 32;
          goto LABEL_14;
        case 2:
          int v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 320);
          uint64_t v13 = v3 + 33;
          goto LABEL_14;
        case 3:
          int v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 320);
          uint64_t v13 = v3 + 34;
          goto LABEL_14;
        case 4:
        case 5:
        case 6:
          goto LABEL_9;
        case 7:
          int v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 320);
          uint64_t v13 = v3 + 35;
LABEL_14:
          uint64_t v16 = v10;
          v12(v13, a2, a3);
          goto LABEL_15;
        default:
          if (v11 == 999)
          {
            int v14 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 416);
            unint64_t v15 = sub_1C8D02F58();
            uint64_t v16 = v10;
            v14(v3, &type metadata for Google_Protobuf_UninterpretedOption, v15, a2, a3);
          }
          else
          {
LABEL_9:
            if ((unint64_t)(v11 - 1000) > 0x1FFFFC17) {
              goto LABEL_16;
            }
            unint64_t v17 = sub_1C8D03738();
            uint64_t v16 = v10;
            (*(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t, uint64_t))(a3 + 464))(v3 + 24, &type metadata for Google_Protobuf_MessageOptions, v17, v11, a2, a3);
          }
LABEL_15:
          uint64_t v10 = v16;
LABEL_16:
          uint64_t result = v7(a2, a3);
          uint64_t v11 = result;
          break;
      }
    }
  }
  return result;
}

uint64_t sub_1C8CF1DB0(uint64_t a1)
{
  uint64_t v3 = v1;
  sub_1C8CC4098((uint64_t)(v3 + 4), (uint64_t)&v11, &qword_1EA566138);
  sub_1C8CC4098((uint64_t)&v11, (uint64_t)&v12, &qword_1EA566138);
  if (v12 != 2)
  {
    sub_1C8D88850();
    sub_1C8D88860();
  }
  sub_1C8CC4098((uint64_t)v3 + 33, (uint64_t)&v10, &qword_1EA566138);
  sub_1C8CC4098((uint64_t)&v10, (uint64_t)&v13, &qword_1EA566138);
  if (v13 != 2)
  {
    sub_1C8D88850();
    sub_1C8D88860();
  }
  sub_1C8CC4098((uint64_t)v3 + 34, (uint64_t)&v9, &qword_1EA566138);
  sub_1C8CC4098((uint64_t)&v9, (uint64_t)&v14, &qword_1EA566138);
  if (v14 != 2)
  {
    sub_1C8D88850();
    sub_1C8D88860();
  }
  sub_1C8CC4098((uint64_t)v3 + 35, (uint64_t)&v8, &qword_1EA566138);
  sub_1C8CC4098((uint64_t)&v8, (uint64_t)&v15, &qword_1EA566138);
  if (v15 != 2)
  {
    sub_1C8D88850();
    sub_1C8D88860();
  }
  if (!*(void *)(*v3 + 16) || (uint64_t result = sub_1C8D1A5FC(*v3), !v2))
  {
    uint64_t result = sub_1C8D3D3BC(a1, 1000, 0x20000000, v3[3]);
    if (!v2)
    {
      uint64_t v6 = v3[1];
      unint64_t v7 = v3[2];
      switch(v7 >> 62)
      {
        case 1uLL:
          if ((int)v6 != v6 >> 32) {
            goto LABEL_18;
          }
          break;
        case 2uLL:
          if (*(void *)(v6 + 16) != *(void *)(v6 + 24)) {
            goto LABEL_18;
          }
          break;
        case 3uLL:
          return result;
        default:
          if ((v7 & 0xFF000000000000) != 0) {
LABEL_18:
          }
            uint64_t result = sub_1C8D881D0();
          break;
      }
    }
  }
  return result;
}

uint64_t Google_Protobuf_MessageOptions.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *v3;
  long long v16 = *(_OWORD *)(v3 + 1);
  uint64_t v18 = v3[3];
  int v9 = *((unsigned __int8 *)v3 + 32);
  int v10 = *((unsigned __int8 *)v3 + 33);
  int v11 = *((unsigned __int8 *)v3 + 34);
  int v12 = *((unsigned __int8 *)v3 + 35);
  if (v9 == 2
    || (uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(a3 + 104))(v9 & 1, 1, a2, a3), !v4))
  {
    if (v10 == 2
      || (uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(a3 + 104))(v10 & 1, 2, a2, a3), !v4))
    {
      if (v11 == 2
        || (uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(a3 + 104))(v11 & 1, 3, a2, a3), !v4))
      {
        if (v12 == 2
          || (uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(a3 + 104))(v12 & 1, 7, a2, a3),
              !v4))
        {
          if (!*(void *)(v8 + 16)
            || (char v14 = *(uint64_t (**)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 280),
                unint64_t v15 = sub_1C8D02F58(),
                uint64_t result = v14(v8, 999, &type metadata for Google_Protobuf_UninterpretedOption, v15, a2, a3),
                !v4))
          {
            *(void *)&long long v17 = v18;
            uint64_t result = (*(uint64_t (**)(long long *, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 432))(&v17, 1000, 0x20000000, a2, a3);
            if (!v4)
            {
              long long v17 = v16;
              return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t Google_Protobuf_MessageOptions.hashValue.getter()
{
  long long v1 = v0[1];
  long long v18 = *v0;
  long long v19 = v1;
  int v20 = *((_DWORD *)v0 + 8);
  sub_1C8D88840();
  long long v3 = v13;
  long long v4 = v14;
  long long v5 = v15;
  long long v6 = v16;
  uint64_t v7 = v17;
  sub_1C8CF1DB0((uint64_t)&v3);
  long long v8 = v3;
  long long v9 = v4;
  long long v10 = v5;
  long long v11 = v6;
  uint64_t v12 = v7;
  return sub_1C8D888A0();
}

double sub_1C8CF2268@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = MEMORY[0x1E4FBC860];
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C8D8AD80;
  *(void *)(a1 + 24) = MEMORY[0x1E4FBC868];
  *(_DWORD *)(a1 + 32) = 33686018;
  return result;
}

unint64_t sub_1C8CF2298()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_1C8CF22B4()
{
  uint64_t v1 = *v0;
  if ((ExtensionFieldValueSet.isInitialized.getter() & 1) == 0) {
    return 0;
  }
  sub_1C8CE28D0(v1);
  char v2 = static Internal.areAllInitialized(_:)();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1C8CF2318@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  unint64_t v3 = *(void *)(v1 + 16);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C8CA3CF8(v2, v3);
}

uint64_t sub_1C8CF2324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_MessageOptions.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8CF233C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_MessageOptions.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8CF2354@<X0>(void *a1@<X8>)
{
  if (qword_1EA565B48 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA5664D8;
  uint64_t v3 = qword_1EA5664E0;
  uint64_t v4 = unk_1EA5664E8;
  *a1 = qword_1EA5664D0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CF23EC()
{
  return sub_1C8D6A1D8();
}

uint64_t sub_1C8CF2428()
{
  long long v1 = v0[1];
  long long v18 = *v0;
  long long v19 = v1;
  int v20 = *((_DWORD *)v0 + 8);
  sub_1C8D88840();
  long long v3 = v13;
  long long v4 = v14;
  long long v5 = v15;
  long long v6 = v16;
  uint64_t v7 = v17;
  sub_1C8CF1DB0((uint64_t)&v3);
  long long v8 = v3;
  long long v9 = v4;
  long long v10 = v5;
  long long v11 = v6;
  uint64_t v12 = v7;
  return sub_1C8D888A0();
}

double sub_1C8CF24CC(long long *a1)
{
  long long v3 = v1[1];
  long long v16 = *v1;
  long long v17 = v3;
  int v18 = *((_DWORD *)v1 + 8);
  uint64_t v4 = *((void *)a1 + 8);
  long long v5 = a1[1];
  long long v11 = *a1;
  long long v12 = v5;
  long long v6 = a1[3];
  long long v13 = a1[2];
  long long v14 = v6;
  uint64_t v15 = v4;
  sub_1C8CF1DB0((uint64_t)&v11);
  uint64_t v7 = v15;
  long long v8 = v12;
  *a1 = v11;
  a1[1] = v8;
  double result = *(double *)&v13;
  long long v10 = v14;
  a1[2] = v13;
  a1[3] = v10;
  *((void *)a1 + 8) = v7;
  return result;
}

uint64_t sub_1C8CF2558()
{
  long long v1 = v0[1];
  long long v18 = *v0;
  long long v19 = v1;
  int v20 = *((_DWORD *)v0 + 8);
  sub_1C8D88840();
  long long v3 = v13;
  long long v4 = v14;
  long long v5 = v15;
  long long v6 = v16;
  uint64_t v7 = v17;
  sub_1C8CF1DB0((uint64_t)&v3);
  long long v8 = v3;
  long long v9 = v4;
  long long v10 = v5;
  long long v11 = v6;
  uint64_t v12 = v7;
  return sub_1C8D888A0();
}

unint64_t static Google_Protobuf_FieldOptions.protoMessageName.getter()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_1C8CF2618()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234C3D0, &qword_1EA5664F0);
}

uint64_t static Google_Protobuf_FieldOptions._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565B50 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA5664F8;
  uint64_t v3 = qword_1EA566500;
  uint64_t v4 = unk_1EA566508;
  *a1 = qword_1EA5664F0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_FieldOptions.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  uint64_t result = v7(a2, a3);
  uint64_t v10 = v4;
  if (!v4)
  {
    uint64_t v11 = result;
    while ((v9 & 1) == 0)
    {
      switch(v11)
      {
        case 1:
          uint64_t v12 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 392);
          unint64_t v13 = sub_1C8D03834();
          uint64_t v14 = v3 + 32;
          long long v15 = &type metadata for Google_Protobuf_FieldOptions.CType;
          goto LABEL_15;
        case 2:
          int v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 320);
          uint64_t v21 = v3 + 33;
          goto LABEL_17;
        case 3:
          int v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 320);
          uint64_t v21 = v3 + 36;
          goto LABEL_17;
        case 4:
        case 7:
        case 8:
        case 9:
          goto LABEL_9;
        case 5:
          int v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 320);
          uint64_t v21 = v3 + 35;
          goto LABEL_17;
        case 6:
          uint64_t v12 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 392);
          unint64_t v13 = sub_1C8D037E0();
          uint64_t v14 = v3 + 34;
          long long v15 = &type metadata for Google_Protobuf_FieldOptions.JSType;
LABEL_15:
          uint64_t v18 = v10;
          v12(v14, v15, v13, a2, a3);
          goto LABEL_18;
        case 10:
          int v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 320);
          uint64_t v21 = v3 + 37;
LABEL_17:
          uint64_t v18 = v10;
          v20(v21, a2, a3);
          goto LABEL_18;
        default:
          if (v11 == 999)
          {
            long long v16 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 416);
            unint64_t v17 = sub_1C8D02F58();
            uint64_t v18 = v10;
            v16(v3, &type metadata for Google_Protobuf_UninterpretedOption, v17, a2, a3);
          }
          else
          {
LABEL_9:
            if ((unint64_t)(v11 - 1000) > 0x1FFFFC17) {
              goto LABEL_19;
            }
            unint64_t v19 = sub_1C8D0378C();
            uint64_t v18 = v10;
            (*(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t, uint64_t))(a3 + 464))(v3 + 24, &type metadata for Google_Protobuf_FieldOptions, v19, v11, a2, a3);
          }
LABEL_18:
          uint64_t v10 = v18;
LABEL_19:
          uint64_t result = v7(a2, a3);
          uint64_t v11 = result;
          break;
      }
    }
  }
  return result;
}

uint64_t sub_1C8CF2934(uint64_t a1)
{
  uint64_t v3 = v1;
  sub_1C8CC4098((uint64_t)(v3 + 4), (uint64_t)&v13, &qword_1EA566B90);
  sub_1C8CC4098((uint64_t)&v13, (uint64_t)&v14, &qword_1EA566B90);
  if (v14 != 3)
  {
    sub_1C8D88850();
    sub_1C8D88850();
  }
  sub_1C8CC4098((uint64_t)v3 + 33, (uint64_t)&v12, &qword_1EA566138);
  sub_1C8CC4098((uint64_t)&v12, (uint64_t)&v15, &qword_1EA566138);
  if (v15 != 2)
  {
    sub_1C8D88850();
    sub_1C8D88860();
  }
  sub_1C8CC4098((uint64_t)v3 + 36, (uint64_t)&v11, &qword_1EA566138);
  sub_1C8CC4098((uint64_t)&v11, (uint64_t)&v16, &qword_1EA566138);
  if (v16 != 2)
  {
    sub_1C8D88850();
    sub_1C8D88860();
  }
  sub_1C8CC4098((uint64_t)v3 + 35, (uint64_t)&v10, &qword_1EA566138);
  sub_1C8CC4098((uint64_t)&v10, (uint64_t)&v17, &qword_1EA566138);
  if (v17 != 2)
  {
    sub_1C8D88850();
    sub_1C8D88860();
  }
  sub_1C8CC4098((uint64_t)v3 + 34, (uint64_t)&v9, &qword_1EA566B98);
  sub_1C8CC4098((uint64_t)&v9, (uint64_t)&v18, &qword_1EA566B98);
  if (v18 != 3)
  {
    sub_1C8D88850();
    sub_1C8D88850();
  }
  sub_1C8CC4098((uint64_t)v3 + 37, (uint64_t)&v8, &qword_1EA566138);
  sub_1C8CC4098((uint64_t)&v8, (uint64_t)&v19, &qword_1EA566138);
  if (v19 != 2)
  {
    sub_1C8D88850();
    sub_1C8D88860();
  }
  if (!*(void *)(*v3 + 16) || (uint64_t result = sub_1C8D1A5FC(*v3), !v2))
  {
    uint64_t result = sub_1C8D3D3BC(a1, 1000, 0x20000000, v3[3]);
    if (!v2)
    {
      uint64_t v6 = v3[1];
      unint64_t v7 = v3[2];
      switch(v7 >> 62)
      {
        case 1uLL:
          if ((int)v6 != v6 >> 32) {
            goto LABEL_22;
          }
          break;
        case 2uLL:
          if (*(void *)(v6 + 16) != *(void *)(v6 + 24)) {
            goto LABEL_22;
          }
          break;
        case 3uLL:
          return result;
        default:
          if ((v7 & 0xFF000000000000) != 0) {
LABEL_22:
          }
            uint64_t result = sub_1C8D881D0();
          break;
      }
    }
  }
  return result;
}

uint64_t sub_1C8CF2BB4(char **a1)
{
  uint64_t v3 = v1;
  sub_1C8CC4098((uint64_t)(v3 + 4), (uint64_t)&v23, &qword_1EA566B90);
  sub_1C8CC4098((uint64_t)&v23, (uint64_t)&v24, &qword_1EA566B90);
  unsigned __int8 v5 = v24;
  if (v24 != 3)
  {
    sub_1C8CA5968(1uLL);
    sub_1C8CA6060((uint64_t)": ", 2, v6);
    sub_1C8D70FD4(v5);
    unint64_t v7 = *a1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a1 = v7;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v7 = sub_1C8D5EB50(0, *((void *)v7 + 2) + 1, 1, v7);
      *a1 = v7;
    }
    unint64_t v10 = *((void *)v7 + 2);
    unint64_t v9 = *((void *)v7 + 3);
    if (v10 >= v9 >> 1) {
      unint64_t v7 = sub_1C8D5EB50((char *)(v9 > 1), v10 + 1, 1, v7);
    }
    *((void *)v7 + 2) = v10 + 1;
    v7[v10 + 32] = 10;
    *a1 = v7;
  }
  sub_1C8CC4098((uint64_t)v3 + 33, (uint64_t)&v22, &qword_1EA566138);
  sub_1C8CC4098((uint64_t)&v22, (uint64_t)&v25, &qword_1EA566138);
  if (v25 == 2 || (uint64_t result = sub_1C8CAB1C0(v25 & 1, 2uLL), !v2))
  {
    sub_1C8CC4098((uint64_t)v3 + 36, (uint64_t)&v21, &qword_1EA566138);
    sub_1C8CC4098((uint64_t)&v21, (uint64_t)&v26, &qword_1EA566138);
    if (v26 == 2 || (uint64_t result = sub_1C8CAB1C0(v26 & 1, 3uLL), !v2))
    {
      sub_1C8CC4098((uint64_t)v3 + 35, (uint64_t)&v20, &qword_1EA566138);
      sub_1C8CC4098((uint64_t)&v20, (uint64_t)&v27, &qword_1EA566138);
      if (v27 == 2 || (uint64_t result = sub_1C8CAB1C0(v27 & 1, 5uLL), !v2))
      {
        sub_1C8CC4098((uint64_t)v3 + 34, (uint64_t)&v19, &qword_1EA566B98);
        sub_1C8CC4098((uint64_t)&v19, (uint64_t)&v28, &qword_1EA566B98);
        unsigned __int8 v12 = v28;
        if (v28 != 3)
        {
          sub_1C8CA5968(6uLL);
          sub_1C8CA6060((uint64_t)": ", 2, v13);
          sub_1C8D70FBC(v12);
          char v14 = *a1;
          char v15 = swift_isUniquelyReferenced_nonNull_native();
          *a1 = v14;
          if ((v15 & 1) == 0)
          {
            char v14 = sub_1C8D5EB50(0, *((void *)v14 + 2) + 1, 1, v14);
            *a1 = v14;
          }
          unint64_t v17 = *((void *)v14 + 2);
          unint64_t v16 = *((void *)v14 + 3);
          if (v17 >= v16 >> 1) {
            char v14 = sub_1C8D5EB50((char *)(v16 > 1), v17 + 1, 1, v14);
          }
          *((void *)v14 + 2) = v17 + 1;
          v14[v17 + 32] = 10;
          *a1 = v14;
        }
        sub_1C8CC4098((uint64_t)v3 + 37, (uint64_t)&v18, &qword_1EA566138);
        sub_1C8CC4098((uint64_t)&v18, (uint64_t)&v29, &qword_1EA566138);
        if (v29 == 2 || (uint64_t result = sub_1C8CAB1C0(v29 & 1, 0xAuLL), !v2))
        {
          if (!*(void *)(*v3 + 16) || (uint64_t result = sub_1C8D73974(*v3, 0x3E7uLL), !v2))
          {
            uint64_t result = sub_1C8D3CD9C((uint64_t)a1, 1000, 0x20000000, v3[3]);
            if (!v2) {
              return sub_1C8D2D968((uint64_t)a1, v3[1], v3[2]);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t Google_Protobuf_FieldOptions.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  long long v26 = *(_OWORD *)(v3 + 1);
  uint64_t v27 = v3[3];
  uint64_t v28 = *v3;
  int v8 = *((unsigned __int8 *)v3 + 32);
  int v9 = *((unsigned __int8 *)v3 + 33);
  int v10 = *((unsigned __int8 *)v3 + 34);
  int v11 = *((unsigned __int8 *)v3 + 35);
  int v12 = *((unsigned __int8 *)v3 + 36);
  int v31 = *((unsigned __int8 *)v3 + 37);
  if (v8 == 3) {
    goto LABEL_19;
  }
  LOBYTE(v29) = v8;
  int v30 = v12;
  int v13 = v11;
  int v14 = v10;
  unint64_t v17 = *(uint64_t (**)(long long *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 128);
  unint64_t v18 = sub_1C8D03834();
  uint64_t result = v17(&v29, 1, &type metadata for Google_Protobuf_FieldOptions.CType, v18, a2, a3);
  uint64_t v7 = a1;
  uint64_t v6 = a2;
  int v10 = v14;
  int v11 = v13;
  int v12 = v30;
  if (!v4)
  {
LABEL_19:
    if (v9 == 2
      || (uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(a3 + 104))(v9 & 1, 2, v6, a3), !v4))
    {
      if (v12 == 2
        || (uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(a3 + 104))(v12 & 1, 3, v6, a3), !v4))
      {
        if (v11 == 2
          || (uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(a3 + 104))(v11 & 1, 5, v6, a3),
              !v4))
        {
          if (v10 == 3
            || (LOBYTE(v29) = v10,
                uint64_t v20 = v7,
                char v21 = *(uint64_t (**)(long long *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 128),
                unint64_t v22 = sub_1C8D037E0(),
                uint64_t result = v21(&v29, 6, &type metadata for Google_Protobuf_FieldOptions.JSType, v22, v6, a3),
                uint64_t v7 = v20,
                !v4))
          {
            if (v31 == 2
              || (uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(a3 + 104))(v31 & 1, 10, v6, a3), !v4))
            {
              if (!*(void *)(v28 + 16)
                || (uint64_t v23 = v7,
                    unsigned __int8 v24 = *(uint64_t (**)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 280),
                    unint64_t v25 = sub_1C8D02F58(),
                    uint64_t result = v24(v28, 999, &type metadata for Google_Protobuf_UninterpretedOption, v25, v6, a3),
                    uint64_t v7 = v23,
                    !v4))
              {
                *(void *)&long long v29 = v27;
                uint64_t result = (*(uint64_t (**)(long long *, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 432))(&v29, 1000, 0x20000000, v6, a3);
                if (!v4)
                {
                  long long v29 = v26;
                  return UnknownStorage.traverse<A>(visitor:)(v7, v6, a3);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t Google_Protobuf_FieldOptions.hashValue.getter()
{
  long long v1 = v0[1];
  long long v18 = *v0;
  v19[0] = v1;
  *(void *)((char *)v19 + 14) = *(void *)((char *)v0 + 30);
  sub_1C8D88840();
  long long v3 = v13;
  long long v4 = v14;
  long long v5 = v15;
  long long v6 = v16;
  uint64_t v7 = v17;
  sub_1C8CF2934((uint64_t)&v3);
  long long v8 = v3;
  long long v9 = v4;
  long long v10 = v5;
  long long v11 = v6;
  uint64_t v12 = v7;
  return sub_1C8D888A0();
}

double sub_1C8CF32C0@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = MEMORY[0x1E4FBC860];
  *(_OWORD *)(a1 + 8) = xmmword_1C8D8AD80;
  *(void *)(a1 + 24) = MEMORY[0x1E4FBC868];
  *(void *)&double result = 33751555;
  *(_DWORD *)(a1 + 32) = 33751555;
  *(_WORD *)(a1 + 36) = 514;
  return result;
}

unint64_t sub_1C8CF32FC()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_1C8CF3318()
{
  uint64_t v1 = *v0;
  if ((ExtensionFieldValueSet.isInitialized.getter() & 1) == 0) {
    return 0;
  }
  uint64_t v2 = sub_1C8CE28D0(v1);
  char v3 = _s20SiriOntologyProtobuf8InternalO17areAllInitializedySbSayAA7Message_pGFZ_0(v2);
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1C8CF337C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_FieldOptions.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8CF3394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_FieldOptions.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8CF33AC@<X0>(void *a1@<X8>)
{
  if (qword_1EA565B50 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA5664F8;
  uint64_t v3 = qword_1EA566500;
  uint64_t v4 = unk_1EA566508;
  *a1 = qword_1EA5664F0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CF3444()
{
  return sub_1C8D6A29C();
}

uint64_t sub_1C8CF3480()
{
  long long v1 = v0[1];
  long long v18 = *v0;
  v19[0] = v1;
  *(void *)((char *)v19 + 14) = *(void *)((char *)v0 + 30);
  sub_1C8D88840();
  long long v3 = v13;
  long long v4 = v14;
  long long v5 = v15;
  long long v6 = v16;
  uint64_t v7 = v17;
  sub_1C8CF2934((uint64_t)&v3);
  long long v8 = v3;
  long long v9 = v4;
  long long v10 = v5;
  long long v11 = v6;
  uint64_t v12 = v7;
  return sub_1C8D888A0();
}

double sub_1C8CF3524(long long *a1)
{
  long long v3 = v1[1];
  long long v16 = *v1;
  v17[0] = v3;
  *(void *)((char *)v17 + 14) = *(void *)((char *)v1 + 30);
  uint64_t v4 = *((void *)a1 + 8);
  long long v5 = a1[1];
  long long v11 = *a1;
  long long v12 = v5;
  long long v6 = a1[3];
  long long v13 = a1[2];
  long long v14 = v6;
  uint64_t v15 = v4;
  sub_1C8CF2934((uint64_t)&v11);
  uint64_t v7 = v15;
  long long v8 = v12;
  *a1 = v11;
  a1[1] = v8;
  double result = *(double *)&v13;
  long long v10 = v14;
  a1[2] = v13;
  a1[3] = v10;
  *((void *)a1 + 8) = v7;
  return result;
}

uint64_t sub_1C8CF35B0()
{
  long long v1 = v0[1];
  long long v18 = *v0;
  v19[0] = v1;
  *(void *)((char *)v19 + 14) = *(void *)((char *)v0 + 30);
  sub_1C8D88840();
  long long v3 = v13;
  long long v4 = v14;
  long long v5 = v15;
  long long v6 = v16;
  uint64_t v7 = v17;
  sub_1C8CF2934((uint64_t)&v3);
  long long v8 = v3;
  long long v9 = v4;
  long long v10 = v5;
  long long v11 = v6;
  uint64_t v12 = v7;
  return sub_1C8D888A0();
}

uint64_t sub_1C8CF3654()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234C240, &qword_1EA566510);
}

uint64_t static Google_Protobuf_FieldOptions.CType._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565B58 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA566518;
  uint64_t v3 = qword_1EA566520;
  uint64_t v4 = unk_1EA566528;
  *a1 = qword_1EA566510;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CF3700@<X0>(void *a1@<X8>)
{
  if (qword_1EA565B58 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA566518;
  uint64_t v3 = qword_1EA566520;
  uint64_t v4 = unk_1EA566528;
  *a1 = qword_1EA566510;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CF3798()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234C308, &qword_1EA566530);
}

uint64_t static Google_Protobuf_FieldOptions.JSType._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565B60 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA566538;
  uint64_t v3 = qword_1EA566540;
  uint64_t v4 = unk_1EA566548;
  *a1 = qword_1EA566530;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CF3844@<X0>(void *a1@<X8>)
{
  if (qword_1EA565B60 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA566538;
  uint64_t v3 = qword_1EA566540;
  uint64_t v4 = unk_1EA566548;
  *a1 = qword_1EA566530;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

unint64_t static Google_Protobuf_OneofOptions.protoMessageName.getter()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_1C8CF38F8()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234C578, &qword_1EA566550);
}

uint64_t static Google_Protobuf_OneofOptions._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565B68 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA566558;
  uint64_t v3 = qword_1EA566560;
  uint64_t v4 = unk_1EA566568;
  *a1 = qword_1EA566550;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_OneofOptions.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CF39D8(a1, a2, a3, (uint64_t (*)(void))sub_1C8D03888, (uint64_t)&type metadata for Google_Protobuf_OneofOptions);
}

uint64_t sub_1C8CF39D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v8 = v5;
  long long v11 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  uint64_t result = v11(a2, a3);
  uint64_t v14 = v6;
  if (!v6)
  {
    uint64_t v15 = result;
    while (1)
    {
      if (v13) {
        return result;
      }
      if (v15 == 999) {
        break;
      }
      if ((unint64_t)(v15 - 1000) < 0x1FFFFC18)
      {
        uint64_t v19 = a4();
        uint64_t v18 = v14;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 464))(v5 + 24, a5, v19, v15, a2, a3);
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = v11(a2, a3);
      uint64_t v15 = result;
      uint64_t v8 = v5;
    }
    long long v16 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 416);
    unint64_t v17 = sub_1C8D02F58();
    uint64_t v18 = v14;
    v16(v8, &type metadata for Google_Protobuf_UninterpretedOption, v17, a2, a3);
LABEL_5:
    uint64_t v14 = v18;
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_1C8CF3B3C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  if (!*(void *)(a2 + 16) || (uint64_t result = sub_1C8D1A5FC(a2), !v5))
  {
    uint64_t result = sub_1C8D3D3BC(a1, 1000, 0x20000000, a5);
    if (!v5)
    {
      switch(a4 >> 62)
      {
        case 1uLL:
          if ((int)a3 != a3 >> 32) {
            goto LABEL_10;
          }
          break;
        case 2uLL:
          if (*(void *)(a3 + 16) != *(void *)(a3 + 24)) {
            goto LABEL_10;
          }
          break;
        case 3uLL:
          return result;
        default:
          if ((a4 & 0xFF000000000000) != 0) {
LABEL_10:
          }
            uint64_t result = sub_1C8D881D0();
          break;
      }
    }
  }
  return result;
}

uint64_t Google_Protobuf_OneofOptions.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CF3C48(a1, a2, a3);
}

uint64_t sub_1C8CF3C48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *v3;
  uint64_t v9 = v3[3];
  long long v13 = *(_OWORD *)(v3 + 1);
  if (!*(void *)(*v3 + 16)
    || (long long v10 = *(uint64_t (**)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 280),
        unint64_t v11 = sub_1C8D02F58(),
        uint64_t result = v10(v8, 999, &type metadata for Google_Protobuf_UninterpretedOption, v11, a2, a3),
        !v4))
  {
    *(void *)&long long v14 = v9;
    uint64_t result = (*(uint64_t (**)(long long *, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 432))(&v14, 1000, 0x20000000, a2, a3);
    if (!v4)
    {
      long long v14 = v13;
      return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
    }
  }
  return result;
}

uint64_t static Google_Protobuf_OneofOptions.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1C8D0337C(a1, a2) & 1;
}

uint64_t _s20SiriOntologyProtobuf07Google_C22_ExtensionRangeOptionsV9hashValueSivg_0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  unint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  sub_1C8D88840();
  long long v6 = v16;
  long long v7 = v17;
  long long v8 = v18;
  long long v9 = v19;
  uint64_t v10 = v20;
  sub_1C8CF3B3C((uint64_t)&v6, v1, v2, v4, v3);
  long long v11 = v6;
  long long v12 = v7;
  long long v13 = v8;
  long long v14 = v9;
  uint64_t v15 = v10;
  return sub_1C8D888A0();
}

double sub_1C8CF3E2C@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = MEMORY[0x1E4FBC860];
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C8D8AD80;
  *(void *)(a1 + 24) = MEMORY[0x1E4FBC868];
  return result;
}

unint64_t sub_1C8CF3E54()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_1C8CF3E70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_OneofOptions.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8CF3E88@<X0>(void *a1@<X8>)
{
  if (qword_1EA565B68 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA566558;
  uint64_t v3 = qword_1EA566560;
  uint64_t v4 = unk_1EA566568;
  *a1 = qword_1EA566550;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CF3F20()
{
  return sub_1C8D6A360(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16), *(void *)(v0 + 24));
}

double sub_1C8CF3F2C(long long *a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  unint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = *((void *)a1 + 8);
  long long v8 = a1[1];
  long long v14 = *a1;
  long long v15 = v8;
  long long v9 = a1[3];
  long long v16 = a1[2];
  long long v17 = v9;
  uint64_t v18 = v7;
  sub_1C8CF3B3C((uint64_t)&v14, v3, v4, v5, v6);
  uint64_t v10 = v18;
  long long v11 = v15;
  *a1 = v14;
  a1[1] = v11;
  double result = *(double *)&v16;
  long long v13 = v17;
  a1[2] = v16;
  a1[3] = v13;
  *((void *)a1 + 8) = v10;
  return result;
}

uint64_t sub_1C8CF3FAC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  unint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  sub_1C8D88840();
  long long v6 = v16;
  long long v7 = v17;
  long long v8 = v18;
  long long v9 = v19;
  uint64_t v10 = v20;
  sub_1C8CF3B3C((uint64_t)&v6, v1, v2, v4, v3);
  long long v11 = v6;
  long long v12 = v7;
  long long v13 = v8;
  long long v14 = v9;
  uint64_t v15 = v10;
  return sub_1C8D888A0();
}

uint64_t sub_1C8CF4058(uint64_t *a1, uint64_t *a2)
{
  return sub_1C8D0337C(a1, a2) & 1;
}

unint64_t static Google_Protobuf_EnumOptions.protoMessageName.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1C8CF4090()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234BAF0, &qword_1EA566570);
}

uint64_t static Google_Protobuf_EnumOptions._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565B70 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA566578;
  uint64_t v3 = qword_1EA566580;
  uint64_t v4 = unk_1EA566588;
  *a1 = qword_1EA566570;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_EnumOptions.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  uint64_t result = v7(a2, a3);
  uint64_t v10 = v4;
  if (!v4)
  {
    for (uint64_t i = result; ; uint64_t i = result)
    {
      if (v9) {
        return result;
      }
      switch(i)
      {
        case 999:
          long long v14 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 416);
          unint64_t v15 = sub_1C8D02F58();
          uint64_t v16 = v10;
          v14(v3, &type metadata for Google_Protobuf_UninterpretedOption, v15, a2, a3);
          break;
        case 3:
          long long v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 320);
          uint64_t v13 = v3 + 33;
          goto LABEL_11;
        case 2:
          long long v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 320);
          uint64_t v13 = v3 + 32;
LABEL_11:
          uint64_t v16 = v10;
          v12(v13, a2, a3);
          break;
        default:
          if ((unint64_t)(i - 1000) >= 0x1FFFFC18) {
            goto LABEL_15;
          }
          unint64_t v17 = sub_1C8D038DC();
          uint64_t v16 = v10;
          (*(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t, uint64_t))(a3 + 464))(v3 + 24, &type metadata for Google_Protobuf_EnumOptions, v17, i, a2, a3);
          break;
      }
      uint64_t v10 = v16;
LABEL_15:
      uint64_t result = v7(a2, a3);
    }
  }
  return result;
}

uint64_t sub_1C8CF42DC(uint64_t a1)
{
  uint64_t v3 = v1;
  sub_1C8CC4098((uint64_t)(v3 + 4), (uint64_t)&v9, &qword_1EA566138);
  sub_1C8CC4098((uint64_t)&v9, (uint64_t)&v10, &qword_1EA566138);
  if (v10 != 2)
  {
    sub_1C8D88850();
    sub_1C8D88860();
  }
  sub_1C8CC4098((uint64_t)v3 + 33, (uint64_t)&v8, &qword_1EA566138);
  sub_1C8CC4098((uint64_t)&v8, (uint64_t)&v11, &qword_1EA566138);
  if (v11 != 2)
  {
    sub_1C8D88850();
    sub_1C8D88860();
  }
  if (!*(void *)(*v3 + 16) || (uint64_t result = sub_1C8D1A5FC(*v3), !v2))
  {
    uint64_t result = sub_1C8D3D3BC(a1, 1000, 0x20000000, v3[3]);
    if (!v2)
    {
      uint64_t v6 = v3[1];
      unint64_t v7 = v3[2];
      switch(v7 >> 62)
      {
        case 1uLL:
          if ((int)v6 != v6 >> 32) {
            goto LABEL_14;
          }
          break;
        case 2uLL:
          if (*(void *)(v6 + 16) != *(void *)(v6 + 24)) {
            goto LABEL_14;
          }
          break;
        case 3uLL:
          return result;
        default:
          if ((v7 & 0xFF000000000000) != 0) {
LABEL_14:
          }
            uint64_t result = sub_1C8D881D0();
          break;
      }
    }
  }
  return result;
}

uint64_t Google_Protobuf_EnumOptions.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *v3;
  long long v15 = *(_OWORD *)(v3 + 1);
  uint64_t v9 = v3[3];
  int v10 = *((unsigned __int8 *)v3 + 32);
  int v11 = *((unsigned __int8 *)v3 + 33);
  if (v10 == 2
    || (uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(a3 + 104))(v10 & 1, 2, a2, a3), !v4))
  {
    if (v11 == 2
      || (uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(a3 + 104))(v11 & 1, 3, a2, a3), !v4))
    {
      if (!*(void *)(v8 + 16)
        || (uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 280),
            unint64_t v14 = sub_1C8D02F58(),
            uint64_t result = v13(v8, 999, &type metadata for Google_Protobuf_UninterpretedOption, v14, a2, a3),
            !v4))
      {
        *(void *)&long long v16 = v9;
        uint64_t result = (*(uint64_t (**)(long long *, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 432))(&v16, 1000, 0x20000000, a2, a3);
        if (!v4)
        {
          long long v16 = v15;
          return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
        }
      }
    }
  }
  return result;
}

uint64_t Google_Protobuf_EnumOptions.hashValue.getter()
{
  return sub_1C8CF5DD0((void (*)(long long *))sub_1C8CF42DC);
}

double sub_1C8CF45FC@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = MEMORY[0x1E4FBC860];
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C8D8AD80;
  *(void *)(a1 + 24) = MEMORY[0x1E4FBC868];
  *(_WORD *)(a1 + 32) = 514;
  return result;
}

unint64_t sub_1C8CF462C()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1C8CF464C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_EnumOptions.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8CF4664(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_EnumOptions.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8CF467C@<X0>(void *a1@<X8>)
{
  if (qword_1EA565B70 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA566578;
  uint64_t v3 = qword_1EA566580;
  uint64_t v4 = unk_1EA566588;
  *a1 = qword_1EA566570;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CF4714()
{
  return sub_1C8D6A47C();
}

uint64_t sub_1C8CF4750(uint64_t a1, uint64_t a2)
{
  return sub_1C8CF5FEC(a1, a2, (void (*)(long long *))sub_1C8CF42DC);
}

double sub_1C8CF4768(long long *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CF60B8(a1, a2, a3, (void (*)(long long *))sub_1C8CF42DC);
}

uint64_t sub_1C8CF4780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CF6160(a1, a2, a3, (void (*)(long long *))sub_1C8CF42DC);
}

unint64_t static Google_Protobuf_EnumValueOptions.protoMessageName.getter()
{
  return 0xD000000000000020;
}

uint64_t sub_1C8CF47B8()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234CEB8, &qword_1EA566590);
}

uint64_t static Google_Protobuf_EnumValueOptions._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565B78 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA566598;
  uint64_t v3 = qword_1EA5665A0;
  uint64_t v4 = unk_1EA5665A8;
  *a1 = qword_1EA566590;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_EnumValueOptions.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  uint64_t result = v7(a2, a3);
  uint64_t v10 = v4;
  if (!v4)
  {
    for (uint64_t i = result; ; uint64_t i = result)
    {
      if (v9) {
        return result;
      }
      if (i == 999) {
        break;
      }
      if (i == 1)
      {
        uint64_t v14 = v10;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 320))(v3 + 32, a2, a3);
        goto LABEL_5;
      }
      if ((unint64_t)(i - 1000) <= 0x1FFFFC17)
      {
        unint64_t v15 = sub_1C8D03A64();
        uint64_t v14 = v10;
        (*(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t, uint64_t))(a3 + 464))(v3 + 24, &type metadata for Google_Protobuf_EnumValueOptions, v15, i, a2, a3);
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = v7(a2, a3);
    }
    long long v12 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 416);
    unint64_t v13 = sub_1C8D02F58();
    uint64_t v14 = v10;
    v12(v3, &type metadata for Google_Protobuf_UninterpretedOption, v13, a2, a3);
LABEL_5:
    uint64_t v10 = v14;
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_1C8CF49EC(uint64_t a1)
{
  uint64_t v3 = v1;
  sub_1C8CC4098((uint64_t)(v3 + 4), (uint64_t)&v8, &qword_1EA566138);
  sub_1C8CC4098((uint64_t)&v8, (uint64_t)&v9, &qword_1EA566138);
  if (v9 != 2)
  {
    sub_1C8D88850();
    sub_1C8D88860();
  }
  if (!*(void *)(*v3 + 16) || (uint64_t result = sub_1C8D1A5FC(*v3), !v2))
  {
    uint64_t result = sub_1C8D3D3BC(a1, 1000, 0x20000000, v3[3]);
    if (!v2)
    {
      uint64_t v6 = v3[1];
      unint64_t v7 = v3[2];
      switch(v7 >> 62)
      {
        case 1uLL:
          if ((int)v6 != v6 >> 32) {
            goto LABEL_12;
          }
          break;
        case 2uLL:
          if (*(void *)(v6 + 16) != *(void *)(v6 + 24)) {
            goto LABEL_12;
          }
          break;
        case 3uLL:
          return result;
        default:
          if ((v7 & 0xFF000000000000) != 0) {
LABEL_12:
          }
            uint64_t result = sub_1C8D881D0();
          break;
      }
    }
  }
  return result;
}

uint64_t Google_Protobuf_EnumValueOptions.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CF506C(a1, a2, a3, 1);
}

uint64_t static Google_Protobuf_EnumValueOptions.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1C8D02FAC(a1, a2) & 1;
}

uint64_t Google_Protobuf_EnumValueOptions.hashValue.getter()
{
  return sub_1C8CF51F4((void (*)(long long *))sub_1C8CF49EC);
}

unint64_t sub_1C8CF4B68()
{
  return 0xD000000000000020;
}

uint64_t sub_1C8CF4B84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_EnumValueOptions.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8CF4B9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_EnumValueOptions.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8CF4BB4@<X0>(void *a1@<X8>)
{
  if (qword_1EA565B78 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA566598;
  uint64_t v3 = qword_1EA5665A0;
  uint64_t v4 = unk_1EA5665A8;
  *a1 = qword_1EA566590;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CF4C4C()
{
  return sub_1C8D6A4A4();
}

uint64_t sub_1C8CF4C88(uint64_t a1, uint64_t a2)
{
  return sub_1C8CF5410(a1, a2, (void (*)(long long *))sub_1C8CF49EC);
}

double sub_1C8CF4CA0(long long *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CF54DC(a1, a2, a3, (void (*)(long long *))sub_1C8CF49EC);
}

uint64_t sub_1C8CF4CB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CF5584(a1, a2, a3, (void (*)(long long *))sub_1C8CF49EC);
}

unint64_t static Google_Protobuf_ServiceOptions.protoMessageName.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_1C8CF4CF0()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234C8F0, &qword_1EA5665B0);
}

uint64_t static Google_Protobuf_ServiceOptions._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565B80 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA5665B8;
  uint64_t v3 = qword_1EA5665C0;
  uint64_t v4 = unk_1EA5665C8;
  *a1 = qword_1EA5665B0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_ServiceOptions.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  uint64_t result = v7(a2, a3);
  uint64_t v10 = v4;
  if (!v4)
  {
    for (uint64_t i = result; ; uint64_t i = result)
    {
      if (v9) {
        return result;
      }
      if (i == 999) {
        break;
      }
      if (i == 33)
      {
        uint64_t v14 = v10;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 320))(v3 + 32, a2, a3);
        goto LABEL_5;
      }
      if ((unint64_t)(i - 1000) <= 0x1FFFFC17)
      {
        unint64_t v15 = sub_1C8D03AB8();
        uint64_t v14 = v10;
        (*(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t, uint64_t))(a3 + 464))(v3 + 24, &type metadata for Google_Protobuf_ServiceOptions, v15, i, a2, a3);
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = v7(a2, a3);
    }
    long long v12 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 416);
    unint64_t v13 = sub_1C8D02F58();
    uint64_t v14 = v10;
    v12(v3, &type metadata for Google_Protobuf_UninterpretedOption, v13, a2, a3);
LABEL_5:
    uint64_t v10 = v14;
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_1C8CF4F24(uint64_t a1)
{
  uint64_t v3 = v1;
  sub_1C8CC4098((uint64_t)(v3 + 4), (uint64_t)&v8, &qword_1EA566138);
  sub_1C8CC4098((uint64_t)&v8, (uint64_t)&v9, &qword_1EA566138);
  if (v9 != 2)
  {
    sub_1C8D88850();
    sub_1C8D88860();
  }
  if (!*(void *)(*v3 + 16) || (uint64_t result = sub_1C8D1A5FC(*v3), !v2))
  {
    uint64_t result = sub_1C8D3D3BC(a1, 1000, 0x20000000, v3[3]);
    if (!v2)
    {
      uint64_t v6 = v3[1];
      unint64_t v7 = v3[2];
      switch(v7 >> 62)
      {
        case 1uLL:
          if ((int)v6 != v6 >> 32) {
            goto LABEL_12;
          }
          break;
        case 2uLL:
          if (*(void *)(v6 + 16) != *(void *)(v6 + 24)) {
            goto LABEL_12;
          }
          break;
        case 3uLL:
          return result;
        default:
          if ((v7 & 0xFF000000000000) != 0) {
LABEL_12:
          }
            uint64_t result = sub_1C8D881D0();
          break;
      }
    }
  }
  return result;
}

uint64_t Google_Protobuf_ServiceOptions.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CF506C(a1, a2, a3, 33);
}

uint64_t sub_1C8CF506C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *v4;
  long long v15 = *(_OWORD *)(v4 + 1);
  uint64_t v10 = v4[3];
  int v11 = *((unsigned __int8 *)v4 + 32);
  if (v11 == 2
    || (uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(a3 + 104))(v11 & 1, a4, a2, a3), !v5))
  {
    if (!*(void *)(v9 + 16)
      || (unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 280),
          unint64_t v14 = sub_1C8D02F58(),
          uint64_t result = v13(v9, 999, &type metadata for Google_Protobuf_UninterpretedOption, v14, a2, a3),
          !v5))
    {
      *(void *)&long long v16 = v10;
      uint64_t result = (*(uint64_t (**)(long long *, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 432))(&v16, 1000, 0x20000000, a2, a3);
      if (!v5)
      {
        long long v16 = v15;
        return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
      }
    }
  }
  return result;
}

uint64_t static Google_Protobuf_ServiceOptions.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1C8D02FAC(a1, a2) & 1;
}

uint64_t Google_Protobuf_ServiceOptions.hashValue.getter()
{
  return sub_1C8CF51F4((void (*)(long long *))sub_1C8CF4F24);
}

uint64_t sub_1C8CF51F4(void (*a1)(long long *))
{
  long long v3 = v1[1];
  long long v20 = *v1;
  long long v21 = v3;
  char v22 = *((unsigned char *)v1 + 32);
  sub_1C8D88840();
  long long v5 = v15;
  long long v6 = v16;
  long long v7 = v17;
  long long v8 = v18;
  uint64_t v9 = v19;
  a1(&v5);
  long long v10 = v5;
  long long v11 = v6;
  long long v12 = v7;
  long long v13 = v8;
  uint64_t v14 = v9;
  return sub_1C8D888A0();
}

double sub_1C8CF52A8@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = MEMORY[0x1E4FBC860];
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C8D8AD80;
  *(void *)(a1 + 24) = MEMORY[0x1E4FBC868];
  *(unsigned char *)(a1 + 32) = 2;
  return result;
}

unint64_t sub_1C8CF52D8()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_1C8CF52F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_ServiceOptions.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8CF530C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_ServiceOptions.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8CF5324@<X0>(void *a1@<X8>)
{
  if (qword_1EA565B80 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA5665B8;
  uint64_t v3 = qword_1EA5665C0;
  uint64_t v4 = unk_1EA5665C8;
  *a1 = qword_1EA5665B0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CF53BC()
{
  return sub_1C8D6A58C();
}

uint64_t sub_1C8CF53F8(uint64_t a1, uint64_t a2)
{
  return sub_1C8CF5410(a1, a2, (void (*)(long long *))sub_1C8CF4F24);
}

uint64_t sub_1C8CF5410(uint64_t a1, uint64_t a2, void (*a3)(long long *))
{
  long long v5 = v3[1];
  long long v22 = *v3;
  long long v23 = v5;
  char v24 = *((unsigned char *)v3 + 32);
  sub_1C8D88840();
  long long v7 = v17;
  long long v8 = v18;
  long long v9 = v19;
  long long v10 = v20;
  uint64_t v11 = v21;
  a3(&v7);
  long long v12 = v7;
  long long v13 = v8;
  long long v14 = v9;
  long long v15 = v10;
  uint64_t v16 = v11;
  return sub_1C8D888A0();
}

double sub_1C8CF54C4(long long *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CF54DC(a1, a2, a3, (void (*)(long long *))sub_1C8CF4F24);
}

double sub_1C8CF54DC(long long *a1, uint64_t a2, uint64_t a3, void (*a4)(long long *))
{
  long long v6 = v4[1];
  long long v19 = *v4;
  long long v20 = v6;
  char v21 = *((unsigned char *)v4 + 32);
  uint64_t v7 = *((void *)a1 + 8);
  long long v8 = a1[1];
  long long v14 = *a1;
  long long v15 = v8;
  long long v9 = a1[3];
  long long v16 = a1[2];
  long long v17 = v9;
  uint64_t v18 = v7;
  a4(&v14);
  uint64_t v10 = v18;
  long long v11 = v15;
  *a1 = v14;
  a1[1] = v11;
  double result = *(double *)&v16;
  long long v13 = v17;
  a1[2] = v16;
  a1[3] = v13;
  *((void *)a1 + 8) = v10;
  return result;
}

uint64_t sub_1C8CF556C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CF5584(a1, a2, a3, (void (*)(long long *))sub_1C8CF4F24);
}

uint64_t sub_1C8CF5584(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(long long *))
{
  long long v6 = v4[1];
  long long v23 = *v4;
  long long v24 = v6;
  char v25 = *((unsigned char *)v4 + 32);
  sub_1C8D88840();
  long long v8 = v18;
  long long v9 = v19;
  long long v10 = v20;
  long long v11 = v21;
  uint64_t v12 = v22;
  a4(&v8);
  long long v13 = v8;
  long long v14 = v9;
  long long v15 = v10;
  long long v16 = v11;
  uint64_t v17 = v12;
  return sub_1C8D888A0();
}

uint64_t sub_1C8CF5634(uint64_t a1, uint64_t a2)
{
  return sub_1C8D02FAC(a1, a2) & 1;
}

unint64_t static Google_Protobuf_MethodOptions.protoMessageName.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_1C8CF566C()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234C698, &qword_1EA5665D0);
}

uint64_t static Google_Protobuf_MethodOptions._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565B88 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA5665D8;
  uint64_t v3 = qword_1EA5665E0;
  uint64_t v4 = unk_1EA5665E8;
  *a1 = qword_1EA5665D0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_MethodOptions.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  uint64_t result = v7(a2, a3);
  uint64_t v10 = v4;
  if (!v4)
  {
    for (uint64_t i = result; ; uint64_t i = result)
    {
      if (v9) {
        return result;
      }
      switch(i)
      {
        case 999:
          long long v13 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 416);
          unint64_t v14 = sub_1C8D02F58();
          uint64_t v12 = v10;
          v13(v3, &type metadata for Google_Protobuf_UninterpretedOption, v14, a2, a3);
          break;
        case 34:
          long long v15 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 392);
          unint64_t v16 = sub_1C8D03B60();
          uint64_t v12 = v10;
          v15(v3 + 33, &type metadata for Google_Protobuf_MethodOptions.IdempotencyLevel, v16, a2, a3);
          break;
        case 33:
          uint64_t v12 = v10;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 320))(v3 + 32, a2, a3);
          break;
        default:
          if ((unint64_t)(i - 1000) >= 0x1FFFFC18) {
            goto LABEL_14;
          }
          unint64_t v17 = sub_1C8D03B0C();
          uint64_t v12 = v10;
          (*(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t, uint64_t))(a3 + 464))(v3 + 24, &type metadata for Google_Protobuf_MethodOptions, v17, i, a2, a3);
          break;
      }
      uint64_t v10 = v12;
LABEL_14:
      uint64_t result = v7(a2, a3);
    }
  }
  return result;
}

uint64_t sub_1C8CF58E8(uint64_t a1)
{
  uint64_t v3 = v1;
  sub_1C8CC4098((uint64_t)(v3 + 4), (uint64_t)&v9, &qword_1EA566138);
  sub_1C8CC4098((uint64_t)&v9, (uint64_t)&v10, &qword_1EA566138);
  if (v10 != 2)
  {
    sub_1C8D88850();
    sub_1C8D88860();
  }
  sub_1C8CC4098((uint64_t)v3 + 33, (uint64_t)&v8, &qword_1EA566B88);
  sub_1C8CC4098((uint64_t)&v8, (uint64_t)&v11, &qword_1EA566B88);
  if (v11 != 3)
  {
    sub_1C8D88850();
    sub_1C8D88850();
  }
  if (!*(void *)(*v3 + 16) || (uint64_t result = sub_1C8D1A5FC(*v3), !v2))
  {
    uint64_t result = sub_1C8D3D3BC(a1, 1000, 0x20000000, v3[3]);
    if (!v2)
    {
      uint64_t v6 = v3[1];
      unint64_t v7 = v3[2];
      switch(v7 >> 62)
      {
        case 1uLL:
          if ((int)v6 != v6 >> 32) {
            goto LABEL_14;
          }
          break;
        case 2uLL:
          if (*(void *)(v6 + 16) != *(void *)(v6 + 24)) {
            goto LABEL_14;
          }
          break;
        case 3uLL:
          return result;
        default:
          if ((v7 & 0xFF000000000000) != 0) {
LABEL_14:
          }
            uint64_t result = sub_1C8D881D0();
          break;
      }
    }
  }
  return result;
}

uint64_t sub_1C8CF5A58(char **a1)
{
  uint64_t v3 = v1;
  sub_1C8CC4098((uint64_t)(v3 + 4), (uint64_t)&v13, &qword_1EA566138);
  sub_1C8CC4098((uint64_t)&v13, (uint64_t)&v14, &qword_1EA566138);
  if (v14 == 2 || (uint64_t result = sub_1C8CAB1C0(v14 & 1, 0x21uLL), !v2))
  {
    sub_1C8CC4098((uint64_t)v3 + 33, (uint64_t)&v12, &qword_1EA566B88);
    sub_1C8CC4098((uint64_t)&v12, (uint64_t)&v15, &qword_1EA566B88);
    unsigned __int8 v6 = v15;
    if (v15 != 3)
    {
      sub_1C8CA5968(0x22uLL);
      sub_1C8CA6060((uint64_t)": ", 2, v7);
      sub_1C8D710D0(v6);
      char v8 = *a1;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v8;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        char v8 = sub_1C8D5EB50(0, *((void *)v8 + 2) + 1, 1, v8);
        *a1 = v8;
      }
      unint64_t v11 = *((void *)v8 + 2);
      unint64_t v10 = *((void *)v8 + 3);
      if (v11 >= v10 >> 1) {
        char v8 = sub_1C8D5EB50((char *)(v10 > 1), v11 + 1, 1, v8);
      }
      *((void *)v8 + 2) = v11 + 1;
      v8[v11 + 32] = 10;
      *a1 = v8;
    }
    if (!*(void *)(*v3 + 16) || (uint64_t result = sub_1C8D73974(*v3, 0x3E7uLL), !v2))
    {
      uint64_t result = sub_1C8D3CD9C((uint64_t)a1, 1000, 0x20000000, v3[3]);
      if (!v2) {
        return sub_1C8D2D968((uint64_t)a1, v3[1], v3[2]);
      }
    }
  }
  return result;
}

uint64_t Google_Protobuf_MethodOptions.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *v3;
  long long v17 = *(_OWORD *)(v3 + 1);
  uint64_t v9 = v3[3];
  int v10 = *((unsigned __int8 *)v3 + 32);
  int v11 = *((unsigned __int8 *)v3 + 33);
  if (v10 == 2
    || (uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(a3 + 104))(v10 & 1, 33, a2, a3), !v4))
  {
    if (v11 == 3
      || (LOBYTE(v18) = v11,
          char v13 = *(uint64_t (**)(long long *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 128),
          unint64_t v14 = sub_1C8D03B60(),
          uint64_t result = v13(&v18, 34, &type metadata for Google_Protobuf_MethodOptions.IdempotencyLevel, v14, a2, a3),
          !v4))
    {
      if (!*(void *)(v8 + 16)
        || (unsigned __int8 v15 = *(uint64_t (**)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 280),
            unint64_t v16 = sub_1C8D02F58(),
            uint64_t result = v15(v8, 999, &type metadata for Google_Protobuf_UninterpretedOption, v16, a2, a3),
            !v4))
      {
        *(void *)&long long v18 = v9;
        uint64_t result = (*(uint64_t (**)(long long *, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 432))(&v18, 1000, 0x20000000, a2, a3);
        if (!v4)
        {
          long long v18 = v17;
          return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
        }
      }
    }
  }
  return result;
}

uint64_t Google_Protobuf_MethodOptions.hashValue.getter()
{
  return sub_1C8CF5DD0((void (*)(long long *))sub_1C8CF58E8);
}

uint64_t sub_1C8CF5DD0(void (*a1)(long long *))
{
  long long v3 = v1[1];
  long long v20 = *v1;
  long long v21 = v3;
  __int16 v22 = *((_WORD *)v1 + 16);
  sub_1C8D88840();
  long long v5 = v15;
  long long v6 = v16;
  long long v7 = v17;
  long long v8 = v18;
  uint64_t v9 = v19;
  a1(&v5);
  long long v10 = v5;
  long long v11 = v6;
  long long v12 = v7;
  long long v13 = v8;
  uint64_t v14 = v9;
  return sub_1C8D888A0();
}

double sub_1C8CF5E84@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = MEMORY[0x1E4FBC860];
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C8D8AD80;
  *(void *)(a1 + 24) = MEMORY[0x1E4FBC868];
  *(_WORD *)(a1 + 32) = 770;
  return result;
}

unint64_t sub_1C8CF5EB4()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_1C8CF5ED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_MethodOptions.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8CF5EE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_MethodOptions.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8CF5F00@<X0>(void *a1@<X8>)
{
  if (qword_1EA565B88 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA5665D8;
  uint64_t v3 = qword_1EA5665E0;
  uint64_t v4 = unk_1EA5665E8;
  *a1 = qword_1EA5665D0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CF5F98()
{
  return sub_1C8D6A674();
}

uint64_t sub_1C8CF5FD4(uint64_t a1, uint64_t a2)
{
  return sub_1C8CF5FEC(a1, a2, (void (*)(long long *))sub_1C8CF58E8);
}

uint64_t sub_1C8CF5FEC(uint64_t a1, uint64_t a2, void (*a3)(long long *))
{
  long long v5 = v3[1];
  long long v22 = *v3;
  long long v23 = v5;
  __int16 v24 = *((_WORD *)v3 + 16);
  sub_1C8D88840();
  long long v7 = v17;
  long long v8 = v18;
  long long v9 = v19;
  long long v10 = v20;
  uint64_t v11 = v21;
  a3(&v7);
  long long v12 = v7;
  long long v13 = v8;
  long long v14 = v9;
  long long v15 = v10;
  uint64_t v16 = v11;
  return sub_1C8D888A0();
}

double sub_1C8CF60A0(long long *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CF60B8(a1, a2, a3, (void (*)(long long *))sub_1C8CF58E8);
}

double sub_1C8CF60B8(long long *a1, uint64_t a2, uint64_t a3, void (*a4)(long long *))
{
  long long v6 = v4[1];
  long long v19 = *v4;
  long long v20 = v6;
  __int16 v21 = *((_WORD *)v4 + 16);
  uint64_t v7 = *((void *)a1 + 8);
  long long v8 = a1[1];
  long long v14 = *a1;
  long long v15 = v8;
  long long v9 = a1[3];
  long long v16 = a1[2];
  long long v17 = v9;
  uint64_t v18 = v7;
  a4(&v14);
  uint64_t v10 = v18;
  long long v11 = v15;
  *a1 = v14;
  a1[1] = v11;
  double result = *(double *)&v16;
  long long v13 = v17;
  a1[2] = v16;
  a1[3] = v13;
  *((void *)a1 + 8) = v10;
  return result;
}

uint64_t sub_1C8CF6148(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CF6160(a1, a2, a3, (void (*)(long long *))sub_1C8CF58E8);
}

uint64_t sub_1C8CF6160(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(long long *))
{
  long long v6 = v4[1];
  long long v23 = *v4;
  long long v24 = v6;
  __int16 v25 = *((_WORD *)v4 + 16);
  sub_1C8D88840();
  long long v8 = v18;
  long long v9 = v19;
  long long v10 = v20;
  long long v11 = v21;
  uint64_t v12 = v22;
  a4(&v8);
  long long v13 = v8;
  long long v14 = v9;
  long long v15 = v10;
  long long v16 = v11;
  uint64_t v17 = v12;
  return sub_1C8D888A0();
}

uint64_t sub_1C8CF6214()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234C5D0, &qword_1EA5665F0);
}

uint64_t static Google_Protobuf_MethodOptions.IdempotencyLevel._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565B90 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA5665F8;
  uint64_t v3 = qword_1EA566600;
  uint64_t v4 = unk_1EA566608;
  *a1 = qword_1EA5665F0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CF62C0@<X0>(void *a1@<X8>)
{
  if (qword_1EA565B90 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA5665F8;
  uint64_t v3 = qword_1EA566600;
  uint64_t v4 = unk_1EA566608;
  *a1 = qword_1EA5665F0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

unint64_t static Google_Protobuf_UninterpretedOption.protoMessageName.getter()
{
  return 0xD000000000000023;
}

uint64_t sub_1C8CF6374()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234D610, &qword_1EA566610);
}

uint64_t static Google_Protobuf_UninterpretedOption._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565B98 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA566618;
  uint64_t v3 = qword_1EA566620;
  uint64_t v4 = unk_1EA566628;
  *a1 = qword_1EA566610;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_UninterpretedOption.isInitialized.getter()
{
  uint64_t v1 = sub_1C8CE2AA4(*v0);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = (void *)(v1 + 32);
    uint64_t v4 = v2 - 1;
    do
    {
      uint64_t v5 = v3[3];
      uint64_t v6 = v3[4];
      __swift_project_boxed_opaque_existential_1(v3, v5);
      char v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 32))(v5, v6);
      char v8 = v7;
      BOOL v10 = v4-- != 0;
      if ((v7 & 1) == 0) {
        break;
      }
      v3 += 5;
    }
    while (v10);
  }
  else
  {
    char v8 = 1;
  }
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t Google_Protobuf_UninterpretedOption.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  uint64_t result = v7(a2, a3);
  uint64_t v10 = v4;
  if (!v4)
  {
    while ((v9 & 1) == 0)
    {
      switch(result)
      {
        case 2:
          long long v11 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 416);
          unint64_t v12 = sub_1C8D03BB4();
          uint64_t v13 = v10;
          v11(v3, &type metadata for Google_Protobuf_UninterpretedOption.NamePart, v12, a2, a3);
          goto LABEL_13;
        case 3:
          long long v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 344);
          uint64_t v15 = v3 + 24;
          goto LABEL_12;
        case 4:
          uint64_t v13 = v10;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 152))(v3 + 40, a2, a3);
          goto LABEL_13;
        case 5:
          uint64_t v13 = v10;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 104))(v3 + 56, a2, a3);
          goto LABEL_13;
        case 6:
          uint64_t v13 = v10;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 56))(v3 + 72, a2, a3);
          goto LABEL_13;
        case 7:
          uint64_t v13 = v10;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 368))(v3 + 88, a2, a3);
          goto LABEL_13;
        case 8:
          long long v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 344);
          uint64_t v15 = v3 + 104;
LABEL_12:
          uint64_t v13 = v10;
          v14(v15, a2, a3);
LABEL_13:
          uint64_t v10 = v13;
          break;
        default:
          break;
      }
      uint64_t result = v7(a2, a3);
    }
  }
  return result;
}

uint64_t sub_1C8CF66F4()
{
  if (!*(void *)(*v0 + 16) || (uint64_t result = sub_1C8D1ABD0(*v0), !v1))
  {
    sub_1C8CC4098((uint64_t)(v0 + 3), (uint64_t)v11, &qword_1EA566130);
    sub_1C8CC4098((uint64_t)v11, (uint64_t)v12, &qword_1EA566130);
    if (v12[1])
    {
      sub_1C8D88850();
      sub_1C8D883C0();
    }
    sub_1C8CC4098((uint64_t)(v0 + 5), (uint64_t)v10, &qword_1EA566B70);
    sub_1C8CC4098((uint64_t)v10, (uint64_t)&v13, &qword_1EA566B70);
    if ((v14 & 1) == 0)
    {
      sub_1C8D88850();
      sub_1C8D88880();
    }
    sub_1C8CC4098((uint64_t)(v0 + 7), (uint64_t)v9, &qword_1EA566B78);
    sub_1C8CC4098((uint64_t)v9, (uint64_t)&v15, &qword_1EA566B78);
    if ((v16 & 1) == 0)
    {
      sub_1C8D88850();
      sub_1C8D88880();
    }
    sub_1C8CC4098((uint64_t)(v0 + 9), (uint64_t)v8, &qword_1EA566B80);
    sub_1C8CC4098((uint64_t)v8, (uint64_t)&v17, &qword_1EA566B80);
    if ((v18 & 1) == 0)
    {
      sub_1C8D88850();
      sub_1C8D88880();
    }
    unint64_t v3 = v0[12];
    if (v3 >> 60 != 15)
    {
      uint64_t v4 = v0[11];
      sub_1C8D88850();
      sub_1C8CA3CF8(v4, v3);
      sub_1C8D881D0();
      sub_1C8CAA9F0(v4, v3);
    }
    sub_1C8CC4098((uint64_t)(v0 + 13), (uint64_t)v7, &qword_1EA566130);
    uint64_t result = sub_1C8CC4098((uint64_t)v7, (uint64_t)v19, &qword_1EA566130);
    if (v19[1])
    {
      sub_1C8D88850();
      uint64_t result = sub_1C8D883C0();
    }
    uint64_t v5 = v0[1];
    unint64_t v6 = v0[2];
    switch(v6 >> 62)
    {
      case 1uLL:
        if ((int)v5 != v5 >> 32) {
          goto LABEL_21;
        }
        break;
      case 2uLL:
        if (*(void *)(v5 + 16) != *(void *)(v5 + 24)) {
          goto LABEL_21;
        }
        break;
      case 3uLL:
        return result;
      default:
        if ((v6 & 0xFF000000000000) != 0) {
LABEL_21:
        }
          uint64_t result = sub_1C8D881D0();
        break;
    }
  }
  return result;
}

uint64_t sub_1C8CF6970(char **a1)
{
  unint64_t v3 = v1;
  if (!*(void *)(*v3 + 16) || (uint64_t result = sub_1C8D73BCC(*v3, 2uLL), !v2))
  {
    sub_1C8CC4098((uint64_t)(v3 + 3), (uint64_t)v53, &qword_1EA566130);
    sub_1C8CC4098((uint64_t)v53, (uint64_t)&v54, &qword_1EA566130);
    unint64_t v6 = v55;
    if (v55)
    {
      uint64_t v7 = v54;
      sub_1C8CA5968(3uLL);
      sub_1C8CA6060((uint64_t)": ", 2, v8);
      sub_1C8CA6D2C(v7, v6);
      char v9 = *a1;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v9;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        char v9 = sub_1C8D5EB50(0, *((void *)v9 + 2) + 1, 1, v9);
        *a1 = v9;
      }
      unint64_t v12 = *((void *)v9 + 2);
      unint64_t v11 = *((void *)v9 + 3);
      if (v12 >= v11 >> 1) {
        char v9 = sub_1C8D5EB50((char *)(v11 > 1), v12 + 1, 1, v9);
      }
      *((void *)v9 + 2) = v12 + 1;
      v9[v12 + 32] = 10;
      *a1 = v9;
    }
    sub_1C8CC4098((uint64_t)(v3 + 5), (uint64_t)v52, &qword_1EA566B70);
    sub_1C8CC4098((uint64_t)v52, (uint64_t)&v56, &qword_1EA566B70);
    if ((v57 & 1) == 0)
    {
      unint64_t v13 = v56;
      sub_1C8CA5968(4uLL);
      sub_1C8CA6060((uint64_t)": ", 2, v14);
      sub_1C8D5C98C(v13);
      uint64_t v15 = *a1;
      char v16 = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v15;
      if ((v16 & 1) == 0)
      {
        uint64_t v15 = sub_1C8D5EB50(0, *((void *)v15 + 2) + 1, 1, v15);
        *a1 = v15;
      }
      unint64_t v18 = *((void *)v15 + 2);
      unint64_t v17 = *((void *)v15 + 3);
      if (v18 >= v17 >> 1) {
        uint64_t v15 = sub_1C8D5EB50((char *)(v17 > 1), v18 + 1, 1, v15);
      }
      *((void *)v15 + 2) = v18 + 1;
      v15[v18 + 32] = 10;
      *a1 = v15;
    }
    sub_1C8CC4098((uint64_t)(v3 + 7), (uint64_t)v51, &qword_1EA566B78);
    sub_1C8CC4098((uint64_t)v51, (uint64_t)&v58, &qword_1EA566B78);
    if ((v59 & 1) == 0)
    {
      unint64_t v19 = v58;
      sub_1C8CA5968(5uLL);
      sub_1C8CA6060((uint64_t)": ", 2, v20);
      if ((v19 & 0x8000000000000000) != 0)
      {
        long long v21 = *a1;
        char v22 = swift_isUniquelyReferenced_nonNull_native();
        *a1 = v21;
        if ((v22 & 1) == 0)
        {
          long long v21 = sub_1C8D5EB50(0, *((void *)v21 + 2) + 1, 1, v21);
          *a1 = v21;
        }
        unint64_t v24 = *((void *)v21 + 2);
        unint64_t v23 = *((void *)v21 + 3);
        if (v24 >= v23 >> 1) {
          long long v21 = sub_1C8D5EB50((char *)(v23 > 1), v24 + 1, 1, v21);
        }
        *((void *)v21 + 2) = v24 + 1;
        v21[v24 + 32] = 45;
        *a1 = v21;
        unint64_t v19 = -(uint64_t)v19;
      }
      sub_1C8D5C98C(v19);
      __int16 v25 = *a1;
      char v26 = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v25;
      if ((v26 & 1) == 0)
      {
        __int16 v25 = sub_1C8D5EB50(0, *((void *)v25 + 2) + 1, 1, v25);
        *a1 = v25;
      }
      unint64_t v28 = *((void *)v25 + 2);
      unint64_t v27 = *((void *)v25 + 3);
      if (v28 >= v27 >> 1) {
        __int16 v25 = sub_1C8D5EB50((char *)(v27 > 1), v28 + 1, 1, v25);
      }
      *((void *)v25 + 2) = v28 + 1;
      v25[v28 + 32] = 10;
      *a1 = v25;
    }
    sub_1C8CC4098((uint64_t)(v3 + 9), (uint64_t)v50, &qword_1EA566B80);
    sub_1C8CC4098((uint64_t)v50, (uint64_t)&v60, &qword_1EA566B80);
    if ((v61 & 1) == 0)
    {
      double v29 = v60;
      sub_1C8CA5968(6uLL);
      sub_1C8CA6060((uint64_t)": ", 2, v30);
      sub_1C8D5C698(v29);
      int v31 = *a1;
      char v32 = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v31;
      if ((v32 & 1) == 0)
      {
        int v31 = sub_1C8D5EB50(0, *((void *)v31 + 2) + 1, 1, v31);
        *a1 = v31;
      }
      unint64_t v34 = *((void *)v31 + 2);
      unint64_t v33 = *((void *)v31 + 3);
      if (v34 >= v33 >> 1) {
        int v31 = sub_1C8D5EB50((char *)(v33 > 1), v34 + 1, 1, v31);
      }
      *((void *)v31 + 2) = v34 + 1;
      v31[v34 + 32] = 10;
      *a1 = v31;
    }
    unint64_t v35 = v3[12];
    if (v35 >> 60 != 15)
    {
      uint64_t v36 = v3[11];
      sub_1C8CA3CF8(v36, v3[12]);
      sub_1C8CA5968(7uLL);
      sub_1C8CA6060((uint64_t)": ", 2, v37);
      sub_1C8D5C358(v36, v35);
      uint64_t v38 = *a1;
      char v39 = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v38;
      if ((v39 & 1) == 0)
      {
        uint64_t v38 = sub_1C8D5EB50(0, *((void *)v38 + 2) + 1, 1, v38);
        *a1 = v38;
      }
      unint64_t v41 = *((void *)v38 + 2);
      unint64_t v40 = *((void *)v38 + 3);
      if (v41 >= v40 >> 1)
      {
        uint64_t v38 = sub_1C8D5EB50((char *)(v40 > 1), v41 + 1, 1, v38);
        *a1 = v38;
      }
      *((void *)v38 + 2) = v41 + 1;
      v38[v41 + 32] = 10;
      sub_1C8CAA9F0(v36, v35);
      *a1 = v38;
    }
    sub_1C8CC4098((uint64_t)(v3 + 13), (uint64_t)v49, &qword_1EA566130);
    sub_1C8CC4098((uint64_t)v49, (uint64_t)&v62, &qword_1EA566130);
    unint64_t v42 = v63;
    if (v63)
    {
      uint64_t v43 = v62;
      sub_1C8CA5968(8uLL);
      sub_1C8CA6060((uint64_t)": ", 2, v44);
      sub_1C8CA6D2C(v43, v42);
      uint64_t v45 = *a1;
      char v46 = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v45;
      if ((v46 & 1) == 0)
      {
        uint64_t v45 = sub_1C8D5EB50(0, *((void *)v45 + 2) + 1, 1, v45);
        *a1 = v45;
      }
      unint64_t v48 = *((void *)v45 + 2);
      unint64_t v47 = *((void *)v45 + 3);
      if (v48 >= v47 >> 1) {
        uint64_t v45 = sub_1C8D5EB50((char *)(v47 > 1), v48 + 1, 1, v45);
      }
      *((void *)v45 + 2) = v48 + 1;
      v45[v48 + 32] = 10;
      *a1 = v45;
    }
    return sub_1C8D2D968((uint64_t)a1, v3[1], v3[2]);
  }
  return result;
}

uint64_t Google_Protobuf_UninterpretedOption.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = a1;
  uint64_t v8 = *v3;
  uint64_t v10 = v3[3];
  uint64_t v9 = v3[4];
  char v11 = *((unsigned char *)v3 + 48);
  char v12 = *((unsigned char *)v3 + 64);
  double v13 = *((double *)v3 + 9);
  char v26 = *((unsigned char *)v3 + 80);
  unint64_t v24 = v3[12];
  uint64_t v25 = v3[7];
  uint64_t v22 = v3[11];
  uint64_t v23 = v3[14];
  uint64_t v21 = v3[13];
  uint64_t v27 = v3[5];
  if (*(void *)(*v3 + 16))
  {
    char v28 = *((unsigned char *)v3 + 48);
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 280);
    uint64_t v16 = v9;
    unint64_t v17 = sub_1C8D03BB4();
    uint64_t result = v15(v8, 2, &type metadata for Google_Protobuf_UninterpretedOption.NamePart, v17, a2, a3);
    uint64_t v9 = v16;
    char v11 = v28;
    uint64_t v7 = a1;
    uint64_t v19 = a2;
    if (v4) {
      return result;
    }
    if (!v9) {
      goto LABEL_7;
    }
LABEL_6:
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 112))(v10, v9, 3, v19, a3);
    if (v4) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t v19 = a2;
  if (v9) {
    goto LABEL_6;
  }
LABEL_7:
  if ((v11 & 1) != 0
    || (uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 48))(v27, 4, v19, a3), !v4))
  {
    if ((v12 & 1) != 0
      || (uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 32))(v25, 5, v19, a3), !v4))
    {
      if ((v26 & 1) != 0
        || (uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, double))(a3 + 16))(6, v19, a3, v13), !v4))
      {
        if (v24 >> 60 == 15
          || (long long v20 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(a3 + 120),
              sub_1C8CA3CF8(v22, v24),
              v20(v22, v24, 7, v19, a3),
              uint64_t result = sub_1C8CAA9F0(v22, v24),
              !v4))
        {
          if (!v23) {
            return UnknownStorage.traverse<A>(visitor:)(v7, v19, a3);
          }
          uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 112))(v21, v23, 8, v19, a3);
          if (!v4) {
            return UnknownStorage.traverse<A>(visitor:)(v7, v19, a3);
          }
        }
      }
    }
  }
  return result;
}

uint64_t Google_Protobuf_UninterpretedOption.hashValue.getter()
{
  return sub_1C8D888A0();
}

double sub_1C8CF72E0@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = MEMORY[0x1E4FBC860];
  *(_OWORD *)(a1 + 8) = xmmword_1C8D8AD80;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 48) = 1;
  *(void *)(a1 + 56) = 0;
  *(unsigned char *)(a1 + 64) = 1;
  *(void *)(a1 + 72) = 0;
  *(unsigned char *)(a1 + 80) = 1;
  double result = 0.0;
  *(_OWORD *)(a1 + 88) = xmmword_1C8D8BEE0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  return result;
}

unint64_t sub_1C8CF732C()
{
  return 0xD000000000000023;
}

uint64_t sub_1C8CF7348()
{
  sub_1C8CE2AA4(*v0);
  char v1 = static Internal.areAllInitialized(_:)();
  swift_bridgeObjectRelease();
  return v1 & 1;
}

uint64_t sub_1C8CF7384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_UninterpretedOption.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8CF739C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_UninterpretedOption.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8CF73B4@<X0>(void *a1@<X8>)
{
  if (qword_1EA565B98 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA566618;
  uint64_t v3 = qword_1EA566620;
  uint64_t v4 = unk_1EA566628;
  *a1 = qword_1EA566610;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CF744C()
{
  return sub_1C8D6A75C();
}

uint64_t sub_1C8CF74A0()
{
  return sub_1C8D888A0();
}

double sub_1C8CF755C(long long *a1)
{
  long long v3 = *a1;
  long long v4 = a1[1];
  long long v5 = a1[2];
  long long v6 = a1[3];
  uint64_t v7 = *((void *)a1 + 8);
  sub_1C8CF66F4();
  *a1 = v3;
  a1[1] = v4;
  double result = *(double *)&v5;
  a1[2] = v5;
  a1[3] = v6;
  *((void *)a1 + 8) = v7;
  return result;
}

uint64_t sub_1C8CF7604()
{
  return sub_1C8D888A0();
}

uint64_t sub_1C8CF76C0()
{
  uint64_t result = sub_1C8D88400();
  qword_1EA566630 = 0xD000000000000023;
  *(void *)algn_1EA566638 = 0x80000001C8D89C60;
  return result;
}

uint64_t static Google_Protobuf_UninterpretedOption.NamePart.protoMessageName.getter()
{
  return sub_1C8CF93B4(&qword_1EA565BA0, &qword_1EA566630);
}

uint64_t sub_1C8CF7758()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234D580, &qword_1EA566640);
}

uint64_t static Google_Protobuf_UninterpretedOption.NamePart._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565BA8 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA566648;
  uint64_t v3 = qword_1EA566650;
  uint64_t v4 = unk_1EA566658;
  *a1 = qword_1EA566640;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

BOOL Google_Protobuf_UninterpretedOption.NamePart.isInitialized.getter()
{
  if (*(void *)(v0 + 24)) {
    BOOL v1 = *(unsigned char *)(v0 + 32) == 2;
  }
  else {
    BOOL v1 = 1;
  }
  return !v1;
}

uint64_t Google_Protobuf_UninterpretedOption.NamePart.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  uint64_t result = v7(a2, a3);
  if (!v4)
  {
    while ((v9 & 1) == 0)
    {
      if (result == 2)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 320))(v3 + 32, a2, a3);
      }
      else if (result == 1)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 344))(v3 + 16, a2, a3);
      }
      uint64_t result = v7(a2, a3);
    }
  }
  return result;
}

uint64_t Google_Protobuf_UninterpretedOption.NamePart.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(void *)(v3 + 24);
  int v9 = *(unsigned __int8 *)(v3 + 32);
  if (!v8
    || (uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 112))(*(void *)(v3 + 16), v8, 1, a2, a3), !v4))
  {
    if (v9 == 2) {
      return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
    }
    uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(a3 + 104))(v9 & 1, 2, a2, a3);
    if (!v4) {
      return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
    }
  }
  return result;
}

uint64_t Google_Protobuf_UninterpretedOption.NamePart.hashValue.getter()
{
  long long v1 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)&v3[9] = *(_OWORD *)v0;
  *(_OWORD *)&v3[11] = v1;
  char v4 = *(unsigned char *)(v0 + 32);
  sub_1C8D88840();
  sub_1C8CBCA10((long long *)v3);
  return sub_1C8D888A0();
}

double sub_1C8CF7A34@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)a1 = xmmword_1C8D8AD80;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 32) = 2;
  return result;
}

uint64_t sub_1C8CF7A50(uint64_t a1, uint64_t a2)
{
  return sub_1C8CF9C00(a1, a2, &qword_1EA565BA0, &qword_1EA566630);
}

BOOL sub_1C8CF7A78()
{
  if (*(void *)(v0 + 24)) {
    BOOL v1 = *(unsigned char *)(v0 + 32) == 2;
  }
  else {
    BOOL v1 = 1;
  }
  return !v1;
}

uint64_t sub_1C8CF7A90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_UninterpretedOption.NamePart.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8CF7AA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_UninterpretedOption.NamePart.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8CF7AC0@<X0>(void *a1@<X8>)
{
  if (qword_1EA565BA8 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA566648;
  uint64_t v3 = qword_1EA566650;
  uint64_t v4 = unk_1EA566658;
  *a1 = qword_1EA566640;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CF7B58()
{
  return sub_1C8D6A838();
}

uint64_t sub_1C8CF7B94()
{
  long long v1 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)&v3[9] = *(_OWORD *)v0;
  *(_OWORD *)&v3[11] = v1;
  char v4 = *(unsigned char *)(v0 + 32);
  sub_1C8D88840();
  sub_1C8CBCA10((long long *)v3);
  return sub_1C8D888A0();
}

double sub_1C8CF7BE8(long long *a1)
{
  return sub_1C8CBCA10(a1);
}

uint64_t sub_1C8CF7C24()
{
  long long v1 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)&v3[9] = *(_OWORD *)v0;
  *(_OWORD *)&v3[11] = v1;
  char v4 = *(unsigned char *)(v0 + 32);
  sub_1C8D88840();
  sub_1C8CBCA10((long long *)v3);
  return sub_1C8D888A0();
}

unint64_t static Google_Protobuf_SourceCodeInfo.protoMessageName.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_1C8CF7C94()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234CAB8, &qword_1EA566660);
}

uint64_t static Google_Protobuf_SourceCodeInfo._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565BB0 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA566668;
  uint64_t v3 = qword_1EA566670;
  uint64_t v4 = unk_1EA566678;
  *a1 = qword_1EA566660;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_SourceCodeInfo.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CF8E6C(a1, a2, a3, (uint64_t (*)(void))sub_1C8D03C08, (uint64_t)&type metadata for Google_Protobuf_SourceCodeInfo.Location);
}

uint64_t Google_Protobuf_SourceCodeInfo.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CF8FA4(a1, a2, a3, (uint64_t (*)(void))sub_1C8D03C08, (uint64_t)&type metadata for Google_Protobuf_SourceCodeInfo.Location);
}

uint64_t static Google_Protobuf_SourceCodeInfo.== infix(_:_:)(void *a1, void *a2)
{
  return sub_1C8CF7DC0(a1, a2, sub_1C8CFB628);
}

uint64_t sub_1C8CF7DC0(void *a1, void *a2, uint64_t (*a3)(void, void))
{
  uint64_t v3 = a1[1];
  unint64_t v4 = a1[2];
  uint64_t v5 = a2[1];
  unint64_t v6 = a2[2];
  if ((a3(*a1, *a2) & 1) == 0) {
    return 0;
  }
  sub_1C8CA3CF8(v3, v4);
  sub_1C8CA3CF8(v5, v6);
  char v7 = sub_1C8D01FBC(v3, v4, v5, v6);
  sub_1C8CA3D5C(v5, v6);
  sub_1C8CA3D5C(v3, v4);
  return v7 & 1;
}

uint64_t Google_Protobuf_SourceCodeInfo.hashValue.getter()
{
  return sub_1C8CF90AC((void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_1C8CBCC04);
}

double sub_1C8CF7E7C@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = MEMORY[0x1E4FBC860];
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C8D8AD80;
  return result;
}

unint64_t sub_1C8CF7E98()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_1C8CF7EB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_SourceCodeInfo.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8CF7ECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_SourceCodeInfo.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8CF7EE4@<X0>(void *a1@<X8>)
{
  if (qword_1EA565BB0 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA566668;
  uint64_t v3 = qword_1EA566670;
  uint64_t v4 = unk_1EA566678;
  *a1 = qword_1EA566660;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CF7F7C()
{
  return sub_1C8D6A8FC(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16));
}

uint64_t sub_1C8CF7F88(uint64_t a1, uint64_t a2)
{
  return sub_1C8CF9218(a1, a2, (void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_1C8CBCC04);
}

void *sub_1C8CF7FA0(void *a1)
{
  return sub_1C8CBCC04(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16));
}

uint64_t sub_1C8CF7FAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CF92A0(a1, a2, a3, (void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_1C8CBCC04);
}

uint64_t sub_1C8CF7FC4(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CF7FDC(a1, a2, a3, a4, sub_1C8CFB628);
}

uint64_t sub_1C8CF7FDC(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, void))
{
  uint64_t v5 = a1[1];
  unint64_t v6 = a1[2];
  uint64_t v7 = a2[1];
  unint64_t v8 = a2[2];
  if ((a5(*a1, *a2) & 1) == 0) {
    return 0;
  }
  sub_1C8CA3CF8(v5, v6);
  sub_1C8CA3CF8(v7, v8);
  char v9 = sub_1C8D01FBC(v5, v6, v7, v8);
  sub_1C8CA3D5C(v7, v8);
  sub_1C8CA3D5C(v5, v6);
  return v9 & 1;
}

uint64_t sub_1C8CF8080()
{
  uint64_t result = sub_1C8D88400();
  qword_1EA566680 = 0xD00000000000001ELL;
  *(void *)algn_1EA566688 = 0x80000001C8D89C90;
  return result;
}

uint64_t static Google_Protobuf_SourceCodeInfo.Location.protoMessageName.getter()
{
  return sub_1C8CF93B4(&qword_1EA565BB8, &qword_1EA566680);
}

uint64_t sub_1C8CF8118()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234C980, &qword_1EA566690);
}

uint64_t static Google_Protobuf_SourceCodeInfo.Location._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565BC0 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA566698;
  uint64_t v3 = qword_1EA5666A0;
  uint64_t v4 = unk_1EA5666A8;
  *a1 = qword_1EA566690;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_SourceCodeInfo.Location.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  uint64_t result = v7(a2, a3);
  if (!v4)
  {
    while ((v9 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 88))(v3, a2, a3);
          break;
        case 2:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 88))(v3 + 8, a2, a3);
          break;
        case 3:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 344))(v3 + 40, a2, a3);
          break;
        case 4:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 344))(v3 + 56, a2, a3);
          break;
        case 6:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 352))(v3 + 16, a2, a3);
          break;
        default:
          break;
      }
      uint64_t result = v7(a2, a3);
    }
  }
  return result;
}

uint64_t sub_1C8CF8348()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 16);
  if (v2)
  {
    sub_1C8D88850();
    sub_1C8D88850();
    uint64_t v3 = v1 + 32;
    do
    {
      v3 += 4;
      sub_1C8D88870();
      --v2;
    }
    while (v2);
  }
  uint64_t v4 = v0[1];
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    sub_1C8D88850();
    sub_1C8D88850();
    uint64_t v6 = v4 + 32;
    do
    {
      v6 += 4;
      sub_1C8D88870();
      --v5;
    }
    while (v5);
  }
  sub_1C8CC4098((uint64_t)(v0 + 5), (uint64_t)v14, &qword_1EA566130);
  sub_1C8CC4098((uint64_t)v14, (uint64_t)v15, &qword_1EA566130);
  if (v15[1])
  {
    sub_1C8D88850();
    sub_1C8D883C0();
  }
  sub_1C8CC4098((uint64_t)(v0 + 7), (uint64_t)v13, &qword_1EA566130);
  uint64_t result = sub_1C8CC4098((uint64_t)v13, (uint64_t)v16, &qword_1EA566130);
  if (v16[1])
  {
    sub_1C8D88850();
    uint64_t result = sub_1C8D883C0();
  }
  uint64_t v8 = v0[2];
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    sub_1C8D88850();
    sub_1C8D88850();
    uint64_t v10 = v8 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1C8D883C0();
      uint64_t result = swift_bridgeObjectRelease();
      v10 += 16;
      --v9;
    }
    while (v9);
  }
  uint64_t v11 = v0[3];
  unint64_t v12 = v0[4];
  switch(v12 >> 62)
  {
    case 1uLL:
      if ((int)v11 != v11 >> 32) {
        goto LABEL_20;
      }
      break;
    case 2uLL:
      if (*(void *)(v11 + 16) != *(void *)(v11 + 24)) {
        goto LABEL_20;
      }
      break;
    case 3uLL:
      return result;
    default:
      if ((v12 & 0xFF000000000000) != 0) {
LABEL_20:
      }
        uint64_t result = sub_1C8D881D0();
      break;
  }
  return result;
}

uint64_t sub_1C8CF8540(char **a1)
{
  uint64_t v3 = v1;
  if (!*(void *)(*v3 + 16) || (uint64_t result = sub_1C8D302E8(*v3, 1uLL), !v2))
  {
    uint64_t v6 = v3[1];
    if (!*(void *)(v6 + 16) || (uint64_t result = sub_1C8D302E8(v6, 2uLL), !v2))
    {
      sub_1C8CC4098((uint64_t)(v3 + 5), (uint64_t)v27, &qword_1EA566130);
      sub_1C8CC4098((uint64_t)v27, (uint64_t)&v28, &qword_1EA566130);
      unint64_t v7 = v29;
      if (v29)
      {
        uint64_t v8 = v28;
        sub_1C8CA5968(3uLL);
        sub_1C8CA6060((uint64_t)": ", 2, v9);
        sub_1C8CA6D2C(v8, v7);
        uint64_t v10 = *a1;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a1 = v10;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v10 = sub_1C8D5EB50(0, *((void *)v10 + 2) + 1, 1, v10);
          *a1 = v10;
        }
        unint64_t v13 = *((void *)v10 + 2);
        unint64_t v12 = *((void *)v10 + 3);
        unint64_t v14 = v13 + 1;
        if (v13 >= v12 >> 1)
        {
          unint64_t v32 = v13 + 1;
          unint64_t v24 = sub_1C8D5EB50((char *)(v12 > 1), v13 + 1, 1, v10);
          unint64_t v14 = v32;
          uint64_t v10 = v24;
        }
        *((void *)v10 + 2) = v14;
        v10[v13 + 32] = 10;
        *a1 = v10;
      }
      sub_1C8CC4098((uint64_t)(v3 + 7), (uint64_t)v26, &qword_1EA566130);
      sub_1C8CC4098((uint64_t)v26, (uint64_t)&v30, &qword_1EA566130);
      unint64_t v15 = v31;
      if (v31)
      {
        uint64_t v16 = v30;
        sub_1C8CA5968(4uLL);
        sub_1C8CA6060((uint64_t)": ", 2, v17);
        sub_1C8CA6D2C(v16, v15);
        unint64_t v18 = *a1;
        char v19 = swift_isUniquelyReferenced_nonNull_native();
        *a1 = v18;
        if ((v19 & 1) == 0)
        {
          unint64_t v18 = sub_1C8D5EB50(0, *((void *)v18 + 2) + 1, 1, v18);
          *a1 = v18;
        }
        unint64_t v21 = *((void *)v18 + 2);
        unint64_t v20 = *((void *)v18 + 3);
        unint64_t v22 = v21 + 1;
        if (v21 >= v20 >> 1)
        {
          unint64_t v32 = v21 + 1;
          uint64_t v25 = sub_1C8D5EB50((char *)(v20 > 1), v21 + 1, 1, v18);
          unint64_t v22 = v32;
          unint64_t v18 = v25;
        }
        *((void *)v18 + 2) = v22;
        v18[v21 + 32] = 10;
        *a1 = v18;
      }
      uint64_t v23 = v3[2];
      if (!*(void *)(v23 + 16)) {
        return sub_1C8D2D968((uint64_t)a1, v3[3], v3[4]);
      }
      uint64_t result = sub_1C8CA7564(v23, 6uLL);
      if (!v2) {
        return sub_1C8D2D968((uint64_t)a1, v3[3], v3[4]);
      }
    }
  }
  return result;
}

uint64_t Google_Protobuf_SourceCodeInfo.Location.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = v3[1];
  uint64_t v14 = v3[2];
  uint64_t v9 = v3[5];
  uint64_t v10 = v3[6];
  uint64_t v11 = v3[7];
  uint64_t v12 = v3[8];
  if (!*(void *)(*v3 + 16) || (uint64_t result = (*(uint64_t (**)(void))(a3 + 312))(), !v4))
  {
    if (!*(void *)(v8 + 16)
      || (uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 312))(v8, 2, a2, a3), !v4))
    {
      if (!v10
        || (uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 112))(v9, v10, 3, a2, a3), !v4))
      {
        if (!v12
          || (uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 112))(v11, v12, 4, a2, a3), !v4))
        {
          if (!*(void *)(v14 + 16)) {
            return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
          }
          uint64_t result = (*(uint64_t (**)(void))(a3 + 256))();
          if (!v4) {
            return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
          }
        }
      }
    }
  }
  return result;
}

uint64_t Google_Protobuf_SourceCodeInfo.Location.hashValue.getter()
{
  return sub_1C8D888A0();
}

double sub_1C8CF89E4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *(void *)a1 = MEMORY[0x1E4FBC860];
  *(void *)(a1 + 8) = v1;
  *(void *)(a1 + 16) = v1;
  *(_OWORD *)(a1 + 24) = xmmword_1C8D8AD80;
  double result = 0.0;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  return result;
}

uint64_t sub_1C8CF8A10(uint64_t a1, uint64_t a2)
{
  return sub_1C8CF9C00(a1, a2, &qword_1EA565BB8, &qword_1EA566680);
}

uint64_t sub_1C8CF8A38@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  unint64_t v3 = *(void *)(v1 + 32);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C8CA3CF8(v2, v3);
}

uint64_t sub_1C8CF8A44(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C8CA3D5C(*(void *)(v1 + 24), *(void *)(v1 + 32));
  *(void *)(v1 + 24) = v2;
  *(void *)(v1 + 32) = v3;
  return result;
}

uint64_t sub_1C8CF8A78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_SourceCodeInfo.Location.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8CF8A90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_SourceCodeInfo.Location.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8CF8AA8@<X0>(void *a1@<X8>)
{
  if (qword_1EA565BC0 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA566698;
  uint64_t v3 = qword_1EA5666A0;
  uint64_t v4 = unk_1EA5666A8;
  *a1 = qword_1EA566690;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CF8B40()
{
  return sub_1C8D6A9F0();
}

uint64_t sub_1C8CF8B84()
{
  return sub_1C8D888A0();
}

double sub_1C8CF8C30(long long *a1)
{
  long long v3 = *a1;
  long long v4 = a1[1];
  long long v5 = a1[2];
  long long v6 = a1[3];
  uint64_t v7 = *((void *)a1 + 8);
  sub_1C8CF8348();
  *a1 = v3;
  a1[1] = v4;
  double result = *(double *)&v5;
  a1[2] = v5;
  a1[3] = v6;
  *((void *)a1 + 8) = v7;
  return result;
}

uint64_t sub_1C8CF8CC4()
{
  return sub_1C8D888A0();
}

unint64_t static Google_Protobuf_GeneratedCodeInfo.protoMessageName.getter()
{
  return 0xD000000000000021;
}

uint64_t sub_1C8CF8D8C()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234D0A0, &qword_1EA5666B0);
}

uint64_t static Google_Protobuf_GeneratedCodeInfo._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565BC8 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA5666B8;
  uint64_t v3 = qword_1EA5666C0;
  uint64_t v4 = unk_1EA5666C8;
  *a1 = qword_1EA5666B0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_GeneratedCodeInfo.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CF8E6C(a1, a2, a3, (uint64_t (*)(void))sub_1C8D03C5C, (uint64_t)&type metadata for Google_Protobuf_GeneratedCodeInfo.Annotation);
}

uint64_t sub_1C8CF8E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  uint64_t result = v11(a2, a3);
  if (!v6)
  {
    uint64_t v16 = a4;
    while ((v13 & 1) == 0)
    {
      if (result == 1)
      {
        uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 416);
        uint64_t v15 = v16();
        v14(v5, a5, v15, a2, a3);
      }
      uint64_t result = v11(a2, a3);
    }
  }
  return result;
}

uint64_t Google_Protobuf_GeneratedCodeInfo.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CF8FA4(a1, a2, a3, (uint64_t (*)(void))sub_1C8D03C5C, (uint64_t)&type metadata for Google_Protobuf_GeneratedCodeInfo.Annotation);
}

uint64_t sub_1C8CF8FA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v10 = *v5;
  if (!*(void *)(*v5 + 16)) {
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 280);
  uint64_t v13 = a4();
  uint64_t result = v12(v10, 1, a5, v13, a2, a3);
  if (!v6) {
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t static Google_Protobuf_GeneratedCodeInfo.== infix(_:_:)(void *a1, void *a2)
{
  return sub_1C8CF7DC0(a1, a2, sub_1C8CFAD6C);
}

uint64_t Google_Protobuf_GeneratedCodeInfo.hashValue.getter()
{
  return sub_1C8CF90AC((void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_1C8CBD3F4);
}

uint64_t sub_1C8CF90AC(void (*a1)(unsigned char *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v5 = v1[2];
  sub_1C8D88840();
  a1(v7, v3, v4, v5);
  return sub_1C8D888A0();
}

unint64_t sub_1C8CF9110()
{
  return 0xD000000000000021;
}

uint64_t sub_1C8CF912C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_GeneratedCodeInfo.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8CF9144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_GeneratedCodeInfo.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8CF915C@<X0>(void *a1@<X8>)
{
  if (qword_1EA565BC8 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA5666B8;
  uint64_t v3 = qword_1EA5666C0;
  uint64_t v4 = unk_1EA5666C8;
  *a1 = qword_1EA5666B0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CF91F4()
{
  return sub_1C8D6AABC(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16));
}

uint64_t sub_1C8CF9200(uint64_t a1, uint64_t a2)
{
  return sub_1C8CF9218(a1, a2, (void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_1C8CBD3F4);
}

uint64_t sub_1C8CF9218(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *v3;
  uint64_t v6 = v3[1];
  uint64_t v7 = v3[2];
  sub_1C8D88840();
  a3(v9, v5, v6, v7);
  return sub_1C8D888A0();
}

double sub_1C8CF927C(long long *a1)
{
  return sub_1C8CBD3F4(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16));
}

uint64_t sub_1C8CF9288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8CF92A0(a1, a2, a3, (void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_1C8CBD3F4);
}

uint64_t sub_1C8CF92A0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *v4;
  uint64_t v7 = v4[1];
  uint64_t v8 = v4[2];
  sub_1C8D88840();
  a4(v10, v6, v7, v8);
  return sub_1C8D888A0();
}

uint64_t sub_1C8CF9300(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CF7FDC(a1, a2, a3, a4, sub_1C8CFAD6C);
}

uint64_t sub_1C8CF9318()
{
  uint64_t result = sub_1C8D88400();
  qword_1EA5666D0 = 0xD000000000000021;
  *(void *)algn_1EA5666D8 = 0x80000001C8D89CB0;
  return result;
}

uint64_t static Google_Protobuf_GeneratedCodeInfo.Annotation.protoMessageName.getter()
{
  return sub_1C8CF93B4(&qword_1EA565BD0, &qword_1EA5666D0);
}

uint64_t sub_1C8CF93B4(void *a1, uint64_t *a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = *a2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_1C8CF9408()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234CFA0, &qword_1EA5666E0);
}

uint64_t static Google_Protobuf_GeneratedCodeInfo.Annotation._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565BD8 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA5666E8;
  uint64_t v3 = qword_1EA5666F0;
  uint64_t v4 = unk_1EA5666F8;
  *a1 = qword_1EA5666E0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_GeneratedCodeInfo.Annotation.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  uint64_t result = v7(a2, a3);
  if (!v4)
  {
    while ((v9 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 88))(v3, a2, a3);
          break;
        case 2:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 344))(v3 + 24, a2, a3);
          break;
        case 3:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 80))(v3 + 40, a2, a3);
          break;
        case 4:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 80))(v3 + 48, a2, a3);
          break;
        default:
          break;
      }
      uint64_t result = v7(a2, a3);
    }
  }
  return result;
}

uint64_t sub_1C8CF9618()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 16);
  if (v2)
  {
    sub_1C8D88850();
    sub_1C8D88850();
    uint64_t v3 = v1 + 32;
    do
    {
      v3 += 4;
      sub_1C8D88870();
      --v2;
    }
    while (v2);
  }
  sub_1C8CC4098((uint64_t)(v0 + 3), (uint64_t)v9, &qword_1EA566130);
  sub_1C8CC4098((uint64_t)v9, (uint64_t)v10, &qword_1EA566130);
  if (v10[1])
  {
    sub_1C8D88850();
    sub_1C8D883C0();
  }
  sub_1C8CC4098((uint64_t)(v0 + 5), (uint64_t)v8, &qword_1EA566B68);
  sub_1C8CC4098((uint64_t)v8, (uint64_t)&v11, &qword_1EA566B68);
  if ((v12 & 1) == 0)
  {
    sub_1C8D88850();
    sub_1C8D88880();
  }
  sub_1C8CC4098((uint64_t)(v0 + 6), (uint64_t)v7, &qword_1EA566B68);
  uint64_t result = sub_1C8CC4098((uint64_t)v7, (uint64_t)&v13, &qword_1EA566B68);
  if ((v14 & 1) == 0)
  {
    sub_1C8D88850();
    uint64_t result = sub_1C8D88880();
  }
  uint64_t v5 = v0[1];
  unint64_t v6 = v0[2];
  switch(v6 >> 62)
  {
    case 1uLL:
      if ((int)v5 != v5 >> 32) {
        goto LABEL_16;
      }
      break;
    case 2uLL:
      if (*(void *)(v5 + 16) != *(void *)(v5 + 24)) {
        goto LABEL_16;
      }
      break;
    case 3uLL:
      return result;
    default:
      if ((v6 & 0xFF000000000000) != 0) {
LABEL_16:
      }
        uint64_t result = sub_1C8D881D0();
      break;
  }
  return result;
}

uint64_t sub_1C8CF97CC(char **a1)
{
  uint64_t v3 = v1;
  if (!*(void *)(*v3 + 16) || (uint64_t result = sub_1C8D302E8(*v3, 1uLL), !v2))
  {
    sub_1C8CC4098((uint64_t)(v3 + 3), (uint64_t)v15, &qword_1EA566130);
    sub_1C8CC4098((uint64_t)v15, (uint64_t)&v16, &qword_1EA566130);
    unint64_t v6 = v17;
    if (v17)
    {
      uint64_t v7 = v16;
      sub_1C8CA5968(2uLL);
      sub_1C8CA6060((uint64_t)": ", 2, v8);
      sub_1C8CA6D2C(v7, v6);
      char v9 = *a1;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v9;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        char v9 = sub_1C8D5EB50(0, *((void *)v9 + 2) + 1, 1, v9);
        *a1 = v9;
      }
      unint64_t v12 = *((void *)v9 + 2);
      unint64_t v11 = *((void *)v9 + 3);
      if (v12 >= v11 >> 1) {
        char v9 = sub_1C8D5EB50((char *)(v11 > 1), v12 + 1, 1, v9);
      }
      *((void *)v9 + 2) = v12 + 1;
      v9[v12 + 32] = 10;
      *a1 = v9;
    }
    sub_1C8CC4098((uint64_t)(v3 + 5), (uint64_t)v14, &qword_1EA566B68);
    sub_1C8CC4098((uint64_t)v14, (uint64_t)&v18, &qword_1EA566B68);
    if ((v19 & 1) != 0 || (uint64_t result = sub_1C8D3BACC(v18, 3uLL), !v2))
    {
      sub_1C8CC4098((uint64_t)(v3 + 6), (uint64_t)&v13, &qword_1EA566B68);
      sub_1C8CC4098((uint64_t)&v13, (uint64_t)&v20, &qword_1EA566B68);
      if (v21) {
        return sub_1C8D2D968((uint64_t)a1, v3[1], v3[2]);
      }
      uint64_t result = sub_1C8D3BACC(v20, 4uLL);
      if (!v2) {
        return sub_1C8D2D968((uint64_t)a1, v3[1], v3[2]);
      }
    }
  }
  return result;
}

uint64_t Google_Protobuf_GeneratedCodeInfo.Annotation.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(void *)(v3 + 24);
  uint64_t v9 = *(void *)(v3 + 32);
  uint64_t v10 = *(unsigned int *)(v3 + 40);
  char v11 = *(unsigned char *)(v3 + 44);
  unsigned int v14 = *(_DWORD *)(v3 + 48);
  char v12 = *(unsigned char *)(v3 + 52);
  if (!*(void *)(*(void *)v3 + 16) || (uint64_t result = (*(uint64_t (**)(void))(a3 + 312))(), !v4))
  {
    if (!v9
      || (uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 112))(v8, v9, 2, a2, a3), !v4))
    {
      if ((v11 & 1) != 0
        || (uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 24))(v10, 3, a2, a3), !v4))
      {
        if (v12) {
          return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
        }
        uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(a3 + 24))(v14, 4, a2, a3);
        if (!v4) {
          return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
        }
      }
    }
  }
  return result;
}

uint64_t Google_Protobuf_GeneratedCodeInfo.Annotation.hashValue.getter()
{
  return sub_1C8D888A0();
}

double sub_1C8CF9BA4@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = MEMORY[0x1E4FBC860];
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C8D8AD80;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 44) = 1;
  *(_DWORD *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 52) = 1;
  return result;
}

uint64_t sub_1C8CF9BD8(uint64_t a1, uint64_t a2)
{
  return sub_1C8CF9C00(a1, a2, &qword_1EA565BD0, &qword_1EA5666D0);
}

uint64_t sub_1C8CF9C00(uint64_t a1, uint64_t a2, void *a3, uint64_t *a4)
{
  if (*a3 != -1) {
    swift_once();
  }
  uint64_t v5 = *a4;
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_1C8CF9C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_GeneratedCodeInfo.Annotation.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8CF9C70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_GeneratedCodeInfo.Annotation.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8CF9C88@<X0>(void *a1@<X8>)
{
  if (qword_1EA565BD8 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA5666E8;
  uint64_t v3 = qword_1EA5666F0;
  uint64_t v4 = unk_1EA5666F8;
  *a1 = qword_1EA5666E0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8CF9D20()
{
  return sub_1C8D6ABB0();
}

uint64_t sub_1C8CF9D64()
{
  return sub_1C8D888A0();
}

double sub_1C8CF9E10(long long *a1)
{
  long long v3 = *a1;
  long long v4 = a1[1];
  long long v5 = a1[2];
  long long v6 = a1[3];
  uint64_t v7 = *((void *)a1 + 8);
  sub_1C8CF9618();
  *a1 = v3;
  a1[1] = v4;
  double result = *(double *)&v5;
  a1[2] = v5;
  a1[3] = v6;
  *((void *)a1 + 8) = v7;
  return result;
}

uint64_t sub_1C8CF9EA4()
{
  return sub_1C8D888A0();
}

uint64_t sub_1C8CF9F50(uint64_t a1, uint64_t a2)
{
  return sub_1C8D010E8(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1C8CC15D4);
}

uint64_t sub_1C8CF9FBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v20 = 1;
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = v2 - 1;
      do
      {
        uint64_t v7 = *(void *)(a1 + v5 + 32);
        uint64_t v8 = *(void *)(a1 + v5 + 72);
        char v9 = *(unsigned char *)(a1 + v5 + 80);
        uint64_t v10 = *(void *)(a1 + v5 + 88);
        char v11 = *(unsigned char *)(a1 + v5 + 96);
        uint64_t v12 = *(void *)(a1 + v5 + 104);
        char v13 = *(unsigned char *)(a1 + v5 + 112);
        long long v36 = *(_OWORD *)(a1 + v5 + 40);
        long long v37 = *(_OWORD *)(a1 + v5 + 56);
        uint64_t v35 = v7;
        uint64_t v38 = v8;
        char v39 = v9;
        uint64_t v40 = v10;
        char v41 = v11;
        uint64_t v42 = v12;
        char v43 = v13;
        long long v44 = *(_OWORD *)(a1 + v5 + 120);
        long long v45 = *(_OWORD *)(a1 + v5 + 136);
        uint64_t v14 = *(void *)(a2 + v5 + 72);
        char v15 = *(unsigned char *)(a2 + v5 + 80);
        uint64_t v16 = *(void *)(a2 + v5 + 88);
        char v17 = *(unsigned char *)(a2 + v5 + 96);
        uint64_t v18 = *(void *)(a2 + v5 + 104);
        char v19 = *(unsigned char *)(a2 + v5 + 112);
        uint64_t v24 = *(void *)(a2 + v5 + 32);
        long long v25 = *(_OWORD *)(a2 + v5 + 40);
        long long v26 = *(_OWORD *)(a2 + v5 + 56);
        uint64_t v27 = v14;
        char v28 = v15;
        uint64_t v29 = v16;
        char v30 = v17;
        uint64_t v31 = v18;
        char v32 = v19;
        long long v33 = *(_OWORD *)(a2 + v5 + 120);
        long long v34 = *(_OWORD *)(a2 + v5 + 136);
        char v20 = _s20SiriOntologyProtobuf07Google_C20_UninterpretedOptionV2eeoiySbAC_ACtFZ_0((uint64_t)&v35, (uint64_t)&v24);
        BOOL v22 = v6-- != 0;
        if ((v20 & 1) == 0) {
          break;
        }
        v5 += 120;
      }
      while (v22);
    }
  }
  else
  {
    char v20 = 0;
  }
  return v20 & 1;
}

uint64_t sub_1C8CFA10C(uint64_t a1, uint64_t a2)
{
  __s1[2] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    long long v3 = (unsigned __int8 *)(a1 + 64);
    long long v4 = (unsigned __int8 *)(a2 + 64);
    while (1)
    {
      uint64_t v6 = *((void *)v3 - 4);
      unint64_t v5 = *((void *)v3 - 3);
      uint64_t v7 = *((void *)v3 - 1);
      int v8 = *v3;
      uint64_t v10 = *((void *)v4 - 4);
      unint64_t v9 = *((void *)v4 - 3);
      uint64_t v11 = *((void *)v4 - 1);
      int v12 = *v4;
      if (v7)
      {
        if (!v11) {
          return 0;
        }
        if (*((void *)v3 - 2) != *((void *)v4 - 2) || v7 != v11)
        {
          unint64_t v14 = *((void *)v3 - 3);
          char v15 = sub_1C8D887C0();
          unint64_t v5 = v14;
          if ((v15 & 1) == 0) {
            return 0;
          }
        }
      }
      else if (v11)
      {
        return 0;
      }
      if (v8 == 2)
      {
        if (v12 != 2) {
          return 0;
        }
      }
      else if (v12 == 2 || ((((v12 & 1) == 0) ^ v8) & 1) == 0)
      {
        return 0;
      }
      v3 += 40;
      v4 += 40;
      unint64_t v16 = v5 >> 62;
      uint64_t v17 = 0;
      switch(v5 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v6), v6))
          {
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
LABEL_156:
            __break(1u);
LABEL_157:
            __break(1u);
LABEL_158:
            __break(1u);
          }
          uint64_t v17 = HIDWORD(v6) - (int)v6;
LABEL_27:
          unint64_t v20 = v5;
          sub_1C8CA3CF8(v6, v5);
          unint64_t v5 = v20;
          break;
        case 2uLL:
          uint64_t v19 = *(void *)(v6 + 16);
          uint64_t v18 = *(void *)(v6 + 24);
          uint64_t v17 = v18 - v19;
          if (!__OFSUB__(v18, v19)) {
            goto LABEL_27;
          }
          goto LABEL_137;
        case 3uLL:
          break;
        default:
          uint64_t v17 = BYTE6(v5);
          break;
      }
      unint64_t v21 = v9 >> 62;
      switch(v9 >> 62)
      {
        case 1uLL:
          LODWORD(v22) = HIDWORD(v10) - v10;
          if (__OFSUB__(HIDWORD(v10), v10)) {
            goto LABEL_138;
          }
          uint64_t v22 = (int)v22;
LABEL_33:
          if (v17 != v22)
          {
LABEL_134:
            sub_1C8CA3D5C(v6, v5);
            return 0;
          }
          if (v17 < 1)
          {
LABEL_6:
            sub_1C8CA3D5C(v6, v5);
          }
          else
          {
            switch((int)v16)
            {
              case 1:
                if ((int)v6 > v6 >> 32) {
                  goto LABEL_140;
                }
                unint64_t v86 = v5;
                sub_1C8CA3CF8(v6, v5);
                swift_bridgeObjectRetain();
                sub_1C8CA3CF8(v10, v9);
                swift_bridgeObjectRetain();
                sub_1C8CA3CF8(v10, v9);
                uint64_t v31 = sub_1C8D88110();
                if (v31)
                {
                  uint64_t v32 = v31;
                  uint64_t v33 = sub_1C8D88140();
                  if (__OFSUB__((int)v6, v33)) {
                    goto LABEL_142;
                  }
                  long long v34 = (const void *)(v32 + (int)v6 - v33);
                }
                else
                {
                  long long v34 = 0;
                }
                sub_1C8D88130();
                if (!v21)
                {
                  __s1[0] = v10;
                  LOWORD(__s1[1]) = v9;
                  BYTE2(__s1[1]) = BYTE2(v9);
                  BYTE3(__s1[1]) = BYTE3(v9);
                  BYTE4(__s1[1]) = BYTE4(v9);
                  BYTE5(__s1[1]) = BYTE5(v9);
                  if (!v34) {
                    goto LABEL_169;
                  }
                  int v43 = memcmp(v34, __s1, BYTE6(v9));
LABEL_118:
                  sub_1C8CA3D5C(v10, v9);
                  sub_1C8CA3D5C(v6, v86);
                  sub_1C8CA3D5C(v10, v9);
                  swift_bridgeObjectRelease();
                  sub_1C8CA3D5C(v6, v86);
                  goto LABEL_119;
                }
                uint64_t v85 = v34;
                if (v21 == 1)
                {
                  if (v10 >> 32 < (int)v10) {
                    goto LABEL_151;
                  }
                  swift_retain();
                  uint64_t v49 = (char *)sub_1C8D88110();
                  if (v49)
                  {
                    uint64_t v50 = sub_1C8D88140();
                    if (__OFSUB__((int)v10, v50)) {
                      goto LABEL_158;
                    }
                    v49 += (int)v10 - v50;
                  }
                  uint64_t v51 = sub_1C8D88130();
                  if (v51 >= (v10 >> 32) - (int)v10) {
                    size_t v52 = (v10 >> 32) - (int)v10;
                  }
                  else {
                    size_t v52 = v51;
                  }
                  if (!v34) {
                    goto LABEL_163;
                  }
                  if (!v49) {
                    goto LABEL_164;
                  }
                  int v43 = memcmp(v34, v49, v52);
                  sub_1C8CA3D5C(v10, v9);
                  goto LABEL_118;
                }
                uint64_t v75 = *(void *)(v10 + 16);
                uint64_t v74 = *(void *)(v10 + 24);
                swift_retain();
                swift_retain();
                uint64_t v76 = sub_1C8D88110();
                if (v76)
                {
                  uint64_t v77 = sub_1C8D88140();
                  if (__OFSUB__(v75, v77)) {
                    goto LABEL_157;
                  }
                  v76 += v75 - v77;
                }
                BOOL v25 = __OFSUB__(v74, v75);
                uint64_t v78 = v74 - v75;
                if (v25) {
                  goto LABEL_152;
                }
                uint64_t v79 = sub_1C8D88130();
                if (v79 >= v78) {
                  size_t v80 = v78;
                }
                else {
                  size_t v80 = v79;
                }
                if (!v85) {
                  goto LABEL_170;
                }
                if (!v76) {
                  goto LABEL_171;
                }
                size_t v62 = v80;
                unint64_t v63 = v85;
                uint64_t v64 = (const void *)v76;
LABEL_131:
                int v81 = memcmp(v63, v64, v62);
                swift_release();
                swift_release();
                sub_1C8CA3D5C(v10, v9);
                sub_1C8CA3D5C(v6, v86);
                sub_1C8CA3D5C(v10, v9);
                swift_bridgeObjectRelease();
                sub_1C8CA3D5C(v6, v86);
                swift_bridgeObjectRelease();
                if (v81) {
                  return 0;
                }
                break;
              case 2:
                uint64_t v35 = *(void *)(v6 + 16);
                unint64_t v87 = v5;
                sub_1C8CA3CF8(v6, v5);
                swift_bridgeObjectRetain();
                sub_1C8CA3CF8(v10, v9);
                swift_bridgeObjectRetain();
                sub_1C8CA3CF8(v10, v9);
                swift_retain();
                swift_retain();
                uint64_t v36 = sub_1C8D88110();
                if (v36)
                {
                  uint64_t v37 = v36;
                  uint64_t v38 = sub_1C8D88140();
                  if (__OFSUB__(v35, v38)) {
                    goto LABEL_141;
                  }
                  uint64_t v84 = (void *)(v37 + v35 - v38);
                }
                else
                {
                  uint64_t v84 = 0;
                }
                sub_1C8D88130();
                if (!v21)
                {
                  __s1[0] = v10;
                  LOWORD(__s1[1]) = v9;
                  BYTE2(__s1[1]) = BYTE2(v9);
                  BYTE3(__s1[1]) = BYTE3(v9);
                  BYTE4(__s1[1]) = BYTE4(v9);
                  BYTE5(__s1[1]) = BYTE5(v9);
                  if (!v84) {
                    goto LABEL_166;
                  }
                  int v65 = memcmp(v84, __s1, BYTE6(v9));
                  swift_release();
                  swift_release();
                  sub_1C8CA3D5C(v10, v9);
                  sub_1C8CA3D5C(v6, v87);
                  sub_1C8CA3D5C(v10, v9);
                  swift_bridgeObjectRelease();
                  uint64_t v66 = v6;
                  unint64_t v67 = v87;
LABEL_114:
                  sub_1C8CA3D5C(v66, v67);
                  swift_bridgeObjectRelease();
                  if (v65) {
                    return 0;
                  }
                  break;
                }
                if (v21 != 1)
                {
                  uint64_t v68 = *(void *)(v10 + 16);
                  uint64_t v83 = *(void *)(v10 + 24);
                  swift_retain();
                  swift_retain();
                  unint64_t v69 = (char *)sub_1C8D88110();
                  if (v69)
                  {
                    uint64_t v70 = sub_1C8D88140();
                    if (__OFSUB__(v68, v70)) {
                      goto LABEL_155;
                    }
                    v69 += v68 - v70;
                  }
                  BOOL v25 = __OFSUB__(v83, v68);
                  int64_t v71 = v83 - v68;
                  if (v25) {
                    goto LABEL_150;
                  }
                  uint64_t v72 = sub_1C8D88130();
                  if (v72 >= v71) {
                    size_t v73 = v71;
                  }
                  else {
                    size_t v73 = v72;
                  }
                  if (!v84) {
                    goto LABEL_167;
                  }
                  if (!v69) {
                    goto LABEL_168;
                  }
                  int v65 = memcmp(v84, v69, v73);
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  sub_1C8CA3D5C(v10, v9);
                  sub_1C8CA3D5C(v6, v87);
                  sub_1C8CA3D5C(v10, v9);
                  swift_bridgeObjectRelease();
                  uint64_t v66 = v6;
                  unint64_t v67 = v87;
                  goto LABEL_114;
                }
                if (v10 >> 32 < (int)v10) {
                  goto LABEL_147;
                }
                swift_retain();
                long long v45 = (char *)sub_1C8D88110();
                if (v45)
                {
                  uint64_t v46 = sub_1C8D88140();
                  if (__OFSUB__((int)v10, v46)) {
                    goto LABEL_156;
                  }
                  v45 += (int)v10 - v46;
                }
                uint64_t v47 = sub_1C8D88130();
                if (v47 >= (v10 >> 32) - (int)v10) {
                  size_t v48 = (v10 >> 32) - (int)v10;
                }
                else {
                  size_t v48 = v47;
                }
                if (!v84) {
                  goto LABEL_161;
                }
                if (!v45) {
                  goto LABEL_162;
                }
                int v43 = memcmp(v84, v45, v48);
                sub_1C8CA3D5C(v10, v9);
                swift_release();
                swift_release();
                sub_1C8CA3D5C(v10, v9);
                unint64_t v44 = v87;
                sub_1C8CA3D5C(v6, v87);
                sub_1C8CA3D5C(v10, v9);
LABEL_73:
                swift_bridgeObjectRelease();
                sub_1C8CA3D5C(v6, v44);
LABEL_119:
                swift_bridgeObjectRelease();
                if (v43) {
                  return 0;
                }
                break;
              case 3:
                memset(__s1, 0, 14);
                if (!v21) {
                  goto LABEL_59;
                }
                unint64_t v86 = v5;
                if (v21 == 1)
                {
                  uint64_t v26 = (v10 >> 32) - (int)v10;
                  if (v10 >> 32 < (int)v10) {
                    goto LABEL_144;
                  }
                  sub_1C8CA3CF8(v6, v5);
                  swift_bridgeObjectRetain();
                  sub_1C8CA3CF8(v10, v9);
                  swift_bridgeObjectRetain();
                  sub_1C8CA3CF8(v10, v9);
                  uint64_t v39 = sub_1C8D88110();
                  if (!v39) {
                    goto LABEL_160;
                  }
                  uint64_t v28 = v39;
                  uint64_t v40 = sub_1C8D88140();
                  uint64_t v30 = (int)v10 - v40;
                  if (__OFSUB__((int)v10, v40)) {
                    goto LABEL_146;
                  }
LABEL_55:
                  uint64_t v41 = sub_1C8D88130();
                  if (v41 >= v26) {
                    size_t v42 = v26;
                  }
                  else {
                    size_t v42 = v41;
                  }
                  int v43 = memcmp(__s1, (const void *)(v28 + v30), v42);
                  sub_1C8CA3D5C(v10, v9);
                  sub_1C8CA3D5C(v6, v86);
                  sub_1C8CA3D5C(v10, v9);
                  swift_bridgeObjectRelease();
                  sub_1C8CA3D5C(v6, v86);
                  goto LABEL_119;
                }
                uint64_t v59 = *(void *)(v10 + 16);
                uint64_t v60 = *(void *)(v10 + 24);
                sub_1C8CA3CF8(v6, v5);
                swift_bridgeObjectRetain();
                sub_1C8CA3CF8(v10, v9);
                swift_bridgeObjectRetain();
                sub_1C8CA3CF8(v10, v9);
                swift_retain();
                swift_retain();
                uint64_t v55 = sub_1C8D88110();
                if (v55)
                {
                  uint64_t v61 = sub_1C8D88140();
                  if (__OFSUB__(v59, v61)) {
                    goto LABEL_154;
                  }
                  v55 += v59 - v61;
                }
                BOOL v25 = __OFSUB__(v60, v59);
                int64_t v57 = v60 - v59;
                if (v25) {
                  goto LABEL_149;
                }
                uint64_t v58 = sub_1C8D88130();
                if (!v55) {
                  goto LABEL_172;
                }
LABEL_98:
                if (v58 >= v57) {
                  size_t v62 = v57;
                }
                else {
                  size_t v62 = v58;
                }
                unint64_t v63 = __s1;
                uint64_t v64 = (const void *)v55;
                goto LABEL_131;
              default:
                __s1[0] = v6;
                LOWORD(__s1[1]) = v5;
                BYTE2(__s1[1]) = BYTE2(v5);
                BYTE3(__s1[1]) = BYTE3(v5);
                BYTE4(__s1[1]) = BYTE4(v5);
                BYTE5(__s1[1]) = BYTE5(v5);
                if (!v21)
                {
LABEL_59:
                  uint64_t __s2 = v10;
                  __int16 v89 = v9;
                  char v90 = BYTE2(v9);
                  char v91 = BYTE3(v9);
                  char v92 = BYTE4(v9);
                  char v93 = BYTE5(v9);
                  unint64_t v44 = v5;
                  sub_1C8CA3CF8(v6, v5);
                  swift_bridgeObjectRetain();
                  sub_1C8CA3CF8(v10, v9);
                  swift_bridgeObjectRetain();
                  int v43 = memcmp(__s1, &__s2, BYTE6(v9));
                  sub_1C8CA3D5C(v6, v44);
                  sub_1C8CA3D5C(v10, v9);
                  goto LABEL_73;
                }
                unint64_t v86 = v5;
                if (v21 == 1)
                {
                  uint64_t v26 = (v10 >> 32) - (int)v10;
                  if (v10 >> 32 < (int)v10) {
                    goto LABEL_143;
                  }
                  sub_1C8CA3CF8(v6, v5);
                  swift_bridgeObjectRetain();
                  sub_1C8CA3CF8(v10, v9);
                  swift_bridgeObjectRetain();
                  sub_1C8CA3CF8(v10, v9);
                  uint64_t v27 = sub_1C8D88110();
                  if (!v27)
                  {
                    sub_1C8D88130();
                    __break(1u);
LABEL_160:
                    sub_1C8D88130();
                    __break(1u);
LABEL_161:
                    __break(1u);
LABEL_162:
                    __break(1u);
LABEL_163:
                    __break(1u);
LABEL_164:
                    __break(1u);
LABEL_165:
                    __break(1u);
LABEL_166:
                    __break(1u);
LABEL_167:
                    __break(1u);
LABEL_168:
                    __break(1u);
LABEL_169:
                    __break(1u);
LABEL_170:
                    __break(1u);
LABEL_171:
                    __break(1u);
LABEL_172:
                    __break(1u);
                    JUMPOUT(0x1C8CFAD3CLL);
                  }
                  uint64_t v28 = v27;
                  uint64_t v29 = sub_1C8D88140();
                  uint64_t v30 = (int)v10 - v29;
                  if (__OFSUB__((int)v10, v29)) {
                    goto LABEL_145;
                  }
                  goto LABEL_55;
                }
                uint64_t v53 = *(void *)(v10 + 16);
                uint64_t v54 = *(void *)(v10 + 24);
                sub_1C8CA3CF8(v6, v5);
                swift_bridgeObjectRetain();
                sub_1C8CA3CF8(v10, v9);
                swift_bridgeObjectRetain();
                sub_1C8CA3CF8(v10, v9);
                swift_retain();
                swift_retain();
                uint64_t v55 = sub_1C8D88110();
                if (v55)
                {
                  uint64_t v56 = sub_1C8D88140();
                  if (__OFSUB__(v53, v56)) {
                    goto LABEL_153;
                  }
                  v55 += v53 - v56;
                }
                BOOL v25 = __OFSUB__(v54, v53);
                int64_t v57 = v54 - v53;
                if (v25) {
                  goto LABEL_148;
                }
                uint64_t v58 = sub_1C8D88130();
                if (!v55) {
                  goto LABEL_165;
                }
                goto LABEL_98;
            }
          }
          if (!--v2) {
            return 1;
          }
          break;
        case 2uLL:
          uint64_t v24 = *(void *)(v10 + 16);
          uint64_t v23 = *(void *)(v10 + 24);
          BOOL v25 = __OFSUB__(v23, v24);
          uint64_t v22 = v23 - v24;
          if (!v25) {
            goto LABEL_33;
          }
          goto LABEL_139;
        case 3uLL:
          if (!v17) {
            goto LABEL_6;
          }
          goto LABEL_134;
        default:
          uint64_t v22 = BYTE6(v9);
          goto LABEL_33;
      }
    }
  }
  return 1;
}

uint64_t sub_1C8CFAD6C(uint64_t a1, uint64_t a2)
{
  void __s1[3] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = 0;
    uint64_t v4 = a1 + 32;
    uint64_t v5 = a2 + 32;
    uint64_t v53 = a1 + 32;
    uint64_t v54 = *(void *)(a1 + 16);
    uint64_t v52 = a2 + 32;
    while (1)
    {
      uint64_t v6 = (uint64_t *)(v4 + 56 * v3);
      uint64_t v7 = *v6;
      int v8 = (uint64_t *)(v5 + 56 * v3);
      uint64_t v9 = *v8;
      uint64_t v10 = *(void *)(*v6 + 16);
      if (v10 != *(void *)(*v8 + 16)) {
        return 0;
      }
      uint64_t v58 = v6[1];
      uint64_t v11 = v6[3];
      uint64_t v56 = v3;
      unint64_t v57 = v6[2];
      uint64_t v12 = v6[4];
      int v13 = *((_DWORD *)v6 + 10);
      char v14 = *((unsigned char *)v6 + 44);
      int v15 = *((_DWORD *)v6 + 12);
      char v16 = *((unsigned char *)v6 + 52);
      unint64_t v17 = v8[2];
      uint64_t v59 = v8[1];
      uint64_t v18 = v8[3];
      uint64_t v19 = v8[4];
      int v20 = *((_DWORD *)v8 + 10);
      int v21 = *((unsigned __int8 *)v8 + 44);
      int v22 = *((_DWORD *)v8 + 12);
      if (v10) {
        BOOL v23 = v7 == v9;
      }
      else {
        BOOL v23 = 1;
      }
      int v24 = *((unsigned __int8 *)v8 + 52);
      if (!v23)
      {
        if (*(_DWORD *)(v7 + 32) != *(_DWORD *)(v9 + 32)) {
          return 0;
        }
        uint64_t v27 = (int *)(v7 + 36);
        uint64_t v28 = (int *)(v9 + 36);
        for (uint64_t i = v10 - 1; i; --i)
        {
          int v31 = *v27++;
          int v30 = v31;
          int v32 = *v28++;
          if (v30 != v32) {
            return 0;
          }
        }
      }
      if (v12)
      {
        if (!v19) {
          return 0;
        }
        if (v11 != v18 || v12 != v19)
        {
          int v55 = v24;
          char v51 = v14;
          int v25 = v22;
          char v26 = sub_1C8D887C0();
          int v22 = v25;
          char v14 = v51;
          int v24 = v55;
          if ((v26 & 1) == 0) {
            return 0;
          }
        }
      }
      else if (v19)
      {
        return 0;
      }
      if (v14)
      {
        if (!v21) {
          return 0;
        }
      }
      else
      {
        if (v13 == v20) {
          char v33 = v21;
        }
        else {
          char v33 = 1;
        }
        if (v33) {
          return 0;
        }
      }
      if (v16)
      {
        if (!v24) {
          return 0;
        }
      }
      else
      {
        if (v15 == v22) {
          char v34 = v24;
        }
        else {
          char v34 = 1;
        }
        if (v34) {
          return 0;
        }
      }
      uint64_t v3 = v56 + 1;
      uint64_t v35 = 0;
      switch(v57 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v58), v58))
          {
            __break(1u);
LABEL_75:
            __break(1u);
LABEL_76:
            __break(1u);
LABEL_77:
            __break(1u);
LABEL_78:
            __break(1u);
LABEL_79:
            __break(1u);
LABEL_80:
            __break(1u);
LABEL_81:
            __break(1u);
          }
          unint64_t v36 = v17;
          uint64_t v35 = HIDWORD(v58) - (int)v58;
          break;
        case 2uLL:
          uint64_t v38 = *(void *)(v58 + 16);
          uint64_t v37 = *(void *)(v58 + 24);
          uint64_t v35 = v37 - v38;
          if (__OFSUB__(v37, v38)) {
            goto LABEL_75;
          }
          unint64_t v36 = v17;
          break;
        case 3uLL:
          goto LABEL_44;
        default:
          uint64_t v35 = BYTE6(v57);
          goto LABEL_44;
      }
      sub_1C8CA3CF8(v58, v57);
      unint64_t v17 = v36;
LABEL_44:
      switch(v17 >> 62)
      {
        case 1uLL:
          LODWORD(v39) = HIDWORD(v59) - v59;
          if (__OFSUB__(HIDWORD(v59), v59)) {
            goto LABEL_76;
          }
          uint64_t v39 = (int)v39;
LABEL_49:
          if (v35 != v39)
          {
LABEL_72:
            sub_1C8CA3D5C(v58, v57);
            return 0;
          }
          if (v35 >= 1)
          {
            switch(v57 >> 62)
            {
              case 1uLL:
                if (v58 >> 32 < (int)v58) {
                  goto LABEL_78;
                }
                sub_1C8CA3CF8(v58, v57);
                swift_bridgeObjectRetain();
                sub_1C8CA3CF8(v58, v57);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_1C8CA3CF8(v59, v17);
                swift_bridgeObjectRetain();
                sub_1C8CA3CF8(v59, v17);
                uint64_t v43 = sub_1C8D88110();
                if (!v43) {
                  goto LABEL_59;
                }
                uint64_t v44 = sub_1C8D88140();
                if (__OFSUB__((int)v58, v44)) {
                  goto LABEL_80;
                }
                v43 += (int)v58 - v44;
LABEL_59:
                sub_1C8D88130();
                sub_1C8D01BB8(v43, v59, v17, (char *)__s1);
                sub_1C8CA3D5C(v58, v57);
                sub_1C8CA3D5C(v59, v17);
                sub_1C8CA3D5C(v58, v57);
                swift_bridgeObjectRelease();
                sub_1C8CA3D5C(v59, v17);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_1C8CA3D5C(v58, v57);
                swift_bridgeObjectRelease();
                if ((__s1[0] & 1) == 0) {
                  return 0;
                }
                goto LABEL_69;
              case 2uLL:
                uint64_t v45 = *(void *)(v58 + 16);
                uint64_t v46 = *(void *)(v58 + 24);
                swift_bridgeObjectRetain();
                sub_1C8CA3CF8(v58, v57);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_1C8CA3CF8(v59, v17);
                swift_bridgeObjectRetain();
                sub_1C8CA3CF8(v59, v17);
                swift_retain();
                swift_retain();
                uint64_t v47 = sub_1C8D88110();
                if (!v47) {
                  goto LABEL_64;
                }
                uint64_t v48 = sub_1C8D88140();
                if (__OFSUB__(v45, v48)) {
                  goto LABEL_81;
                }
                v47 += v45 - v48;
LABEL_64:
                if (__OFSUB__(v46, v45)) {
                  goto LABEL_79;
                }
                sub_1C8D88130();
                sub_1C8D01BB8(v47, v59, v17, (char *)__s1);
                swift_release();
                swift_release();
                sub_1C8CA3D5C(v59, v17);
                sub_1C8CA3D5C(v58, v57);
                swift_bridgeObjectRelease();
                sub_1C8CA3D5C(v59, v17);
                swift_bridgeObjectRelease();
                char v49 = __s1[0];
                swift_bridgeObjectRelease();
                sub_1C8CA3D5C(v58, v57);
                swift_bridgeObjectRelease();
                if ((v49 & 1) == 0) {
                  return 0;
                }
                goto LABEL_69;
              case 3uLL:
                memset(__s1, 0, 14);
                swift_bridgeObjectRetain();
                sub_1C8CA3CF8(v58, v57);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_1C8CA3CF8(v59, v17);
                swift_bridgeObjectRetain();
                sub_1C8CA3CF8(v59, v17);
                sub_1C8D01BB8((uint64_t)__s1, v59, v17, &v60);
                sub_1C8CA3D5C(v59, v17);
                sub_1C8CA3D5C(v58, v57);
                swift_bridgeObjectRelease();
                sub_1C8CA3D5C(v59, v17);
                goto LABEL_68;
              default:
                __s1[0] = v58;
                LODWORD(__s1[1]) = v57;
                WORD2(__s1[1]) = WORD2(v57);
                swift_bridgeObjectRetain();
                sub_1C8CA3CF8(v58, v57);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_1C8CA3CF8(v59, v17);
                swift_bridgeObjectRetain();
                sub_1C8CA3CF8(v59, v17);
                sub_1C8D01BB8((uint64_t)__s1, v59, v17, &v60);
                sub_1C8CA3D5C(v59, v17);
                sub_1C8CA3D5C(v58, v57);
                swift_bridgeObjectRelease();
                sub_1C8CA3D5C(v59, v17);
LABEL_68:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_1C8CA3D5C(v58, v57);
                swift_bridgeObjectRelease();
                if (v60) {
                  goto LABEL_69;
                }
                return 0;
            }
          }
LABEL_54:
          sub_1C8CA3D5C(v58, v57);
LABEL_69:
          uint64_t result = 1;
          uint64_t v4 = v53;
          uint64_t v5 = v52;
          if (v3 == v54) {
            return result;
          }
          break;
        case 2uLL:
          uint64_t v41 = *(void *)(v59 + 16);
          uint64_t v40 = *(void *)(v59 + 24);
          BOOL v42 = __OFSUB__(v40, v41);
          uint64_t v39 = v40 - v41;
          if (!v42) {
            goto LABEL_49;
          }
          goto LABEL_77;
        case 3uLL:
          if (!v35) {
            goto LABEL_54;
          }
          goto LABEL_72;
        default:
          uint64_t v39 = BYTE6(v17);
          goto LABEL_49;
      }
    }
  }
  return 1;
}

BOOL sub_1C8CFB550(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(_DWORD *)(a1 + 32) != *(_DWORD *)(a2 + 32)) {
    return 0;
  }
  uint64_t v3 = (int *)(a1 + 36);
  uint64_t v4 = (int *)(a2 + 36);
  uint64_t v5 = v2 - 1;
  do
  {
    BOOL result = v5 == 0;
    if (!v5) {
      break;
    }
    int v8 = *v3++;
    int v7 = v8;
    int v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_1C8CFB5BC(uint64_t a1, uint64_t a2)
{
  return sub_1C8D010E8(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1C8CE4814);
}

uint64_t sub_1C8CFB628(uint64_t a1, uint64_t a2)
{
  void __s1[3] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2) {
      return 1;
    }
    uint64_t v3 = 0;
    uint64_t v62 = 0;
    uint64_t v4 = a1 + 32;
    uint64_t v5 = a2 + 32;
    uint64_t v64 = a2 + 32;
    while (1)
    {
      uint64_t v6 = (void *)(v4 + 72 * v3);
      uint64_t v7 = *v6;
      int v8 = (void *)(v5 + 72 * v3);
      uint64_t v9 = *v8;
      uint64_t v10 = *(void *)(*v6 + 16);
      if (v10 != *(void *)(*v8 + 16)) {
        return 0;
      }
      uint64_t v11 = v3;
      uint64_t v12 = v6[1];
      unint64_t v69 = (void *)v6[2];
      uint64_t v13 = v6[3];
      unint64_t v67 = v6[4];
      uint64_t v14 = v6[5];
      uint64_t v15 = v6[7];
      uint64_t v71 = v6[8];
      uint64_t v17 = v8[1];
      char v16 = (void *)v8[2];
      uint64_t v66 = v8[3];
      uint64_t v18 = v8[5];
      unint64_t v68 = v8[4];
      uint64_t v19 = v8[7];
      uint64_t v72 = v8[6];
      uint64_t v73 = v6[6];
      if (v10) {
        BOOL v20 = v7 == v9;
      }
      else {
        BOOL v20 = 1;
      }
      uint64_t v70 = v8[8];
      if (!v20)
      {
        if (*(_DWORD *)(v7 + 32) != *(_DWORD *)(v9 + 32)) {
          return 0;
        }
        int v24 = (int *)(v7 + 36);
        int v25 = (int *)(v9 + 36);
        for (uint64_t i = v10 - 1; i; --i)
        {
          int v28 = *v24++;
          int v27 = v28;
          int v29 = *v25++;
          if (v27 != v29) {
            return 0;
          }
        }
      }
      uint64_t v21 = *(void *)(v12 + 16);
      if (v21 != *(void *)(v17 + 16)) {
        return 0;
      }
      if (v21) {
        BOOL v22 = v12 == v17;
      }
      else {
        BOOL v22 = 1;
      }
      if (!v22)
      {
        if (*(_DWORD *)(v12 + 32) != *(_DWORD *)(v17 + 32)) {
          return 0;
        }
        int v30 = (int *)(v12 + 36);
        int v31 = (int *)(v17 + 36);
        for (uint64_t j = v21 - 1; j; --j)
        {
          int v34 = *v30++;
          int v33 = v34;
          int v35 = *v31++;
          if (v33 != v35) {
            return 0;
          }
        }
      }
      int v65 = v16;
      if (v73)
      {
        if (!v72) {
          return 0;
        }
        if (v14 != v18 || v73 != v72)
        {
          char v23 = sub_1C8D887C0();
          char v16 = v65;
          if ((v23 & 1) == 0) {
            return 0;
          }
        }
      }
      else if (v72)
      {
        return 0;
      }
      if (v71)
      {
        if (!v70) {
          return 0;
        }
        if (v15 != v19 || v71 != v70)
        {
          char v36 = sub_1C8D887C0();
          char v16 = v65;
          if ((v36 & 1) == 0) {
            return 0;
          }
        }
      }
      else if (v70)
      {
        return 0;
      }
      uint64_t v37 = v69[2];
      if (v37 != v16[2]) {
        return 0;
      }
      uint64_t v63 = v4;
      if (v37)
      {
        if (v69 != v16)
        {
          if (v69[4] != v16[4] || v69[5] != v16[5])
          {
            char v38 = sub_1C8D887C0();
            char v16 = v65;
            if ((v38 & 1) == 0) {
              return 0;
            }
          }
          uint64_t v39 = v37 - 1;
          if (v39) {
            break;
          }
        }
      }
LABEL_48:
      uint64_t v3 = v11 + 1;
      uint64_t v40 = 0;
      switch(v67 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v13), v13))
          {
            __break(1u);
LABEL_93:
            __break(1u);
LABEL_94:
            __break(1u);
LABEL_95:
            __break(1u);
LABEL_96:
            __break(1u);
LABEL_97:
            __break(1u);
LABEL_98:
            __break(1u);
LABEL_99:
            __break(1u);
          }
          uint64_t v40 = HIDWORD(v13) - (int)v13;
LABEL_53:
          sub_1C8CA3CF8(v13, v67);
          break;
        case 2uLL:
          uint64_t v42 = *(void *)(v13 + 16);
          uint64_t v41 = *(void *)(v13 + 24);
          uint64_t v40 = v41 - v42;
          if (!__OFSUB__(v41, v42)) {
            goto LABEL_53;
          }
          goto LABEL_93;
        case 3uLL:
          break;
        default:
          uint64_t v40 = BYTE6(v67);
          break;
      }
      switch(v68 >> 62)
      {
        case 1uLL:
          LODWORD(v43) = HIDWORD(v66) - v66;
          if (__OFSUB__(HIDWORD(v66), v66)) {
            goto LABEL_94;
          }
          uint64_t v43 = (int)v43;
LABEL_59:
          if (v40 != v43)
          {
LABEL_90:
            sub_1C8CA3D5C(v13, v67);
            return 0;
          }
          if (v40 < 1)
          {
LABEL_64:
            sub_1C8CA3D5C(v13, v67);
          }
          else
          {
            switch(v67 >> 62)
            {
              case 1uLL:
                uint64_t v61 = v11 + 1;
                if (v13 >> 32 < (int)v13) {
                  goto LABEL_96;
                }
                sub_1C8CA3CF8(v13, v67);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_1C8CA3CF8(v13, v67);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_1C8CA3CF8(v66, v68);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_1C8CA3CF8(v66, v68);
                uint64_t v52 = sub_1C8D88110();
                if (!v52) {
                  goto LABEL_77;
                }
                uint64_t v53 = sub_1C8D88140();
                if (__OFSUB__((int)v13, v53)) {
                  goto LABEL_98;
                }
                v52 += (int)v13 - v53;
LABEL_77:
                uint64_t v54 = v62;
                sub_1C8D88130();
                sub_1C8D01BB8(v52, v66, v68, (char *)__s1);
                sub_1C8CA3D5C(v13, v67);
                sub_1C8CA3D5C(v66, v68);
                sub_1C8CA3D5C(v13, v67);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_1C8CA3D5C(v66, v68);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_1C8CA3D5C(v13, v67);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if ((__s1[0] & 1) == 0) {
                  return 0;
                }
                goto LABEL_84;
              case 2uLL:
                uint64_t v55 = *(void *)(v13 + 16);
                uint64_t v60 = *(void *)(v13 + 24);
                uint64_t v61 = v11 + 1;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_1C8CA3CF8(v13, v67);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_1C8CA3CF8(v66, v68);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_1C8CA3CF8(v66, v68);
                swift_retain();
                swift_retain();
                uint64_t v56 = sub_1C8D88110();
                if (!v56) {
                  goto LABEL_82;
                }
                uint64_t v57 = sub_1C8D88140();
                if (__OFSUB__(v55, v57)) {
                  goto LABEL_99;
                }
                v56 += v55 - v57;
LABEL_82:
                if (__OFSUB__(v60, v55)) {
                  goto LABEL_97;
                }
                sub_1C8D88130();
                uint64_t v54 = v62;
                sub_1C8D01BB8(v56, v66, v68, (char *)__s1);
                swift_release();
                swift_release();
                sub_1C8CA3D5C(v66, v68);
                sub_1C8CA3D5C(v13, v67);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_1C8CA3D5C(v66, v68);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                char v58 = __s1[0];
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_1C8CA3D5C(v13, v67);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if ((v58 & 1) == 0) {
                  return 0;
                }
LABEL_84:
                uint64_t v62 = v54;
                uint64_t v3 = v61;
                break;
              case 3uLL:
                memset(__s1, 0, 14);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_1C8CA3CF8(v13, v67);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                uint64_t v47 = v66;
                unint64_t v48 = v68;
                sub_1C8CA3CF8(v66, v68);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_1C8CA3CF8(v66, v68);
                goto LABEL_86;
              default:
                __s1[0] = v13;
                LODWORD(__s1[1]) = v67;
                WORD2(__s1[1]) = WORD2(v67);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_1C8CA3CF8(v13, v67);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                uint64_t v47 = v66;
                unint64_t v48 = v68;
                sub_1C8CA3CF8(v66, v68);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_1C8CA3CF8(v66, v68);
LABEL_86:
                sub_1C8D01BB8((uint64_t)__s1, v47, v48, &v74);
                sub_1C8CA3D5C(v47, v48);
                sub_1C8CA3D5C(v13, v67);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_1C8CA3D5C(v47, v48);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_1C8CA3D5C(v13, v67);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v74) {
                  break;
                }
                return 0;
            }
          }
          uint64_t result = 1;
          uint64_t v4 = v63;
          uint64_t v5 = v64;
          if (v3 == v2) {
            return result;
          }
          break;
        case 2uLL:
          uint64_t v45 = *(void *)(v66 + 16);
          uint64_t v44 = *(void *)(v66 + 24);
          BOOL v46 = __OFSUB__(v44, v45);
          uint64_t v43 = v44 - v45;
          if (!v46) {
            goto LABEL_59;
          }
          goto LABEL_95;
        case 3uLL:
          if (!v40) {
            goto LABEL_64;
          }
          goto LABEL_90;
        default:
          uint64_t v43 = BYTE6(v68);
          goto LABEL_59;
      }
    }
    char v49 = v16 + 7;
    uint64_t v50 = v69 + 7;
    while (1)
    {
      BOOL v51 = *(v50 - 1) == *(v49 - 1) && *v50 == *v49;
      if (!v51 && (sub_1C8D887C0() & 1) == 0) {
        break;
      }
      v49 += 2;
      v50 += 2;
      if (!--v39) {
        goto LABEL_48;
      }
    }
  }
  return 0;
}

uint64_t sub_1C8CFBFEC(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_1C8D887C0(), uint64_t result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a2 + 7;
    for (uint64_t i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_1C8D887C0() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_1C8CFC0B4(uint64_t a1, uint64_t a2)
{
  uint64_t v112 = *MEMORY[0x1E4F143B8];
  uint64_t v103 = *(void *)(a1 + 16);
  if (v103 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v103 || a1 == a2) {
    return 1;
  }
  uint64_t v2 = (uint64_t *)(a2 + 48);
  uint64_t v3 = (void *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v3 - 2);
    unint64_t v4 = *(v3 - 1);
    uint64_t v6 = *v3;
    uint64_t v7 = *(v2 - 2);
    unint64_t v104 = *(v2 - 1);
    uint64_t v8 = *v2;
    uint64_t v102 = v5;
    if (*v3 == *v2)
    {
      sub_1C8CA3CF8(v5, v4);
      swift_retain();
      sub_1C8CA3CF8(v7, v104);
      swift_retain();
      goto LABEL_19;
    }
    v99 = v3;
    uint64_t v9 = *(void *)(v6 + 16);
    uint64_t v10 = *(void *)(v6 + 24);
    int v101 = *(unsigned __int8 *)(v6 + 40);
    uint64_t v12 = *(void *)(v8 + 16);
    uint64_t v11 = *(void *)(v8 + 24);
    unint64_t v13 = *(void *)(v8 + 32);
    int v14 = *(unsigned __int8 *)(v8 + 40);
    unint64_t v97 = *(void *)(v6 + 32);
    if ((~v97 & 0x3000000000000000) == 0 && v101 == 255)
    {
      uint64_t v90 = *(void *)(v8 + 16);
      uint64_t v91 = *(void *)(v8 + 24);
      uint64_t v93 = *(void *)(v6 + 16);
      uint64_t v94 = *(void *)(v6 + 24);
      unint64_t v92 = *(void *)(v8 + 32);
      uint64_t v15 = ~v13 & 0x3000000000000000;
      sub_1C8CA3CF8(v102, v4);
      swift_retain();
      sub_1C8CA3CF8(v7, v104);
      swift_retain_n();
      swift_retain();
      if (v15 || v14 != 255) {
        goto LABEL_133;
      }
      goto LABEL_18;
    }
    *(void *)&long long __s1 = *(void *)(v6 + 16);
    *((void *)&__s1 + 1) = v10;
    unint64_t v110 = v97;
    char v111 = v101;
    if ((~v13 & 0x3000000000000000) == 0 && v14 == 255) {
      break;
    }
    uint64_t __s2 = v12;
    uint64_t v106 = v11;
    unint64_t v107 = v13;
    char v108 = v14 & 1;
    sub_1C8CC5580(v9, v10, v97, v101);
    sub_1C8CA3CF8(v102, v4);
    swift_retain();
    sub_1C8CA3CF8(v7, v104);
    swift_retain();
    sub_1C8CC5580(v9, v10, v97, v101);
    swift_retain();
    swift_retain();
    char v16 = _s20SiriOntologyProtobuf07Google_C6_ValueV10OneOf_KindO2eeoiySbAE_AEtFZ_0(&__s1, &__s2);
    sub_1C8CC5664(__s1, *((uint64_t *)&__s1 + 1), v110, v111);
    sub_1C8CC5640(v9, v10, v97, v101);
    if ((v16 & 1) == 0) {
      goto LABEL_134;
    }
LABEL_18:
    swift_release();
    swift_release();
    uint64_t v3 = v99;
    uint64_t v5 = v102;
LABEL_19:
    uint64_t v17 = 0;
    switch(v4 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v5), v5))
        {
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
        }
        uint64_t v17 = HIDWORD(v5) - (int)v5;
LABEL_24:
        sub_1C8CA3CF8(v5, v4);
        break;
      case 2uLL:
        uint64_t v19 = *(void *)(v5 + 16);
        uint64_t v18 = *(void *)(v5 + 24);
        uint64_t v17 = v18 - v19;
        if (!__OFSUB__(v18, v19)) {
          goto LABEL_24;
        }
        goto LABEL_138;
      case 3uLL:
        break;
      default:
        uint64_t v17 = BYTE6(v4);
        break;
    }
    unint64_t v20 = v104 >> 62;
    switch(v104 >> 62)
    {
      case 1uLL:
        LODWORD(v21) = HIDWORD(v7) - v7;
        if (__OFSUB__(HIDWORD(v7), v7)) {
          goto LABEL_139;
        }
        uint64_t v21 = (int)v21;
LABEL_30:
        if (v17 != v21)
        {
LABEL_131:
          sub_1C8CA3D5C(v5, v4);
          sub_1C8CA3D5C(v7, v104);
          swift_release();
          uint64_t v89 = v5;
          goto LABEL_135;
        }
        if (v17 < 1)
        {
LABEL_6:
          sub_1C8CA3D5C(v5, v4);
          sub_1C8CA3D5C(v7, v104);
          swift_release();
          sub_1C8CA3D5C(v5, v4);
          swift_release();
        }
        else
        {
          switch(v4 >> 62)
          {
            case 1uLL:
              uint64_t v98 = v7;
              unint64_t v30 = v4;
              if ((int)v5 > v5 >> 32) {
                goto LABEL_141;
              }
              sub_1C8CA3CF8(v98, v104);
              uint64_t v31 = sub_1C8D88110();
              if (v31)
              {
                uint64_t v32 = v31;
                uint64_t v33 = sub_1C8D88140();
                if (__OFSUB__((int)v5, v33)) {
                  goto LABEL_143;
                }
                int v34 = (const void *)(v32 + (int)v5 - v33);
              }
              else
              {
                int v34 = 0;
              }
              unint64_t v45 = v4;
              sub_1C8D88130();
              if (!v20)
              {
                *(void *)&long long __s1 = v98;
                DWORD2(__s1) = v104;
                WORD6(__s1) = WORD2(v104);
                if (!v34) {
                  goto LABEL_166;
                }
                int v44 = memcmp(v34, &__s1, BYTE6(v104));
                sub_1C8CA3D5C(v98, v104);
                sub_1C8CA3D5C(v5, v4);
                sub_1C8CA3D5C(v98, v104);
                swift_release();
                uint64_t v46 = v5;
LABEL_98:
                unint64_t v47 = v45;
                goto LABEL_99;
              }
              if (v20 == 1)
              {
                if (v98 >> 32 < (int)v98) {
                  goto LABEL_152;
                }
                swift_retain();
                uint64_t v55 = (char *)sub_1C8D88110();
                if (v55)
                {
                  uint64_t v56 = sub_1C8D88140();
                  if (__OFSUB__((int)v98, v56)) {
                    goto LABEL_159;
                  }
                  v55 += (int)v98 - v56;
                }
                uint64_t v57 = sub_1C8D88130();
                if (v57 >= (v98 >> 32) - (int)v98) {
                  size_t v58 = (v98 >> 32) - (int)v98;
                }
                else {
                  size_t v58 = v57;
                }
                if (!v34) {
                  goto LABEL_173;
                }
                if (!v55) {
                  goto LABEL_164;
                }
                int v44 = memcmp(v34, v55, v58);
                sub_1C8CA3D5C(v98, v104);
                sub_1C8CA3D5C(v98, v104);
                sub_1C8CA3D5C(v102, v4);
                sub_1C8CA3D5C(v98, v104);
                swift_release();
                uint64_t v46 = v102;
                unint64_t v47 = v4;
LABEL_99:
                sub_1C8CA3D5C(v46, v47);
                swift_release();
                if (v44) {
                  return 0;
                }
                break;
              }
              uint64_t v70 = *(void *)(v98 + 16);
              uint64_t v71 = *(void *)(v98 + 24);
              swift_retain();
              swift_retain();
              uint64_t v72 = (char *)sub_1C8D88110();
              if (v72)
              {
                uint64_t v73 = sub_1C8D88140();
                if (__OFSUB__(v70, v73)) {
                  goto LABEL_158;
                }
                v72 += v70 - v73;
              }
              BOOL v24 = __OFSUB__(v71, v70);
              int64_t v85 = v71 - v70;
              if (v24) {
                goto LABEL_153;
              }
              uint64_t v86 = sub_1C8D88130();
              if (v86 >= v85) {
                size_t v87 = v85;
              }
              else {
                size_t v87 = v86;
              }
              if (!v34) {
                goto LABEL_171;
              }
              if (!v72) {
                goto LABEL_172;
              }
              int v78 = memcmp(v34, v72, v87);
              swift_release();
              swift_release();
              sub_1C8CA3D5C(v98, v104);
              sub_1C8CA3D5C(v102, v30);
              sub_1C8CA3D5C(v98, v104);
              swift_release();
              uint64_t v79 = v102;
              unint64_t v80 = v30;
LABEL_128:
              sub_1C8CA3D5C(v79, v80);
              swift_release();
              if (v78) {
                return 0;
              }
              break;
            case 2uLL:
              unint64_t v96 = v4;
              uint64_t v35 = *(void *)(v5 + 16);
              sub_1C8CA3CF8(v7, v104);
              swift_retain();
              swift_retain();
              uint64_t v36 = sub_1C8D88110();
              v100 = v3;
              if (v36)
              {
                uint64_t v37 = v36;
                uint64_t v38 = sub_1C8D88140();
                if (__OFSUB__(v35, v38)) {
                  goto LABEL_142;
                }
                uint64_t v39 = (const void *)(v37 + v35 - v38);
              }
              else
              {
                uint64_t v39 = 0;
              }
              sub_1C8D88130();
              if (!v20)
              {
                *(void *)&long long __s1 = v7;
                DWORD2(__s1) = v104;
                WORD6(__s1) = WORD2(v104);
                if (!v39) {
                  goto LABEL_165;
                }
                int v52 = memcmp(v39, &__s1, BYTE6(v104));
                swift_release();
                swift_release();
                sub_1C8CA3D5C(v7, v104);
                sub_1C8CA3D5C(v5, v96);
                sub_1C8CA3D5C(v7, v104);
                swift_release();
                uint64_t v53 = v5;
                unint64_t v54 = v96;
LABEL_91:
                sub_1C8CA3D5C(v53, v54);
                swift_release();
                uint64_t v3 = v100;
                if (v52) {
                  return 0;
                }
                break;
              }
              if (v20 == 1)
              {
                if (v7 >> 32 < (int)v7) {
                  goto LABEL_146;
                }
                swift_retain();
                unint64_t v48 = (char *)sub_1C8D88110();
                if (v48)
                {
                  uint64_t v49 = sub_1C8D88140();
                  if (__OFSUB__((int)v7, v49)) {
                    goto LABEL_157;
                  }
                  v48 += (int)v7 - v49;
                }
                uint64_t v50 = sub_1C8D88130();
                if (v50 >= (v7 >> 32) - (int)v7) {
                  size_t v51 = (v7 >> 32) - (int)v7;
                }
                else {
                  size_t v51 = v50;
                }
                if (!v39) {
                  goto LABEL_162;
                }
                if (!v48) {
                  goto LABEL_163;
                }
                int v52 = memcmp(v39, v48, v51);
                sub_1C8CA3D5C(v7, v104);
                swift_release();
                swift_release();
                sub_1C8CA3D5C(v7, v104);
                sub_1C8CA3D5C(v102, v96);
                sub_1C8CA3D5C(v7, v104);
                swift_release();
                uint64_t v53 = v102;
                unint64_t v54 = v96;
                goto LABEL_91;
              }
              uint64_t v66 = *(void *)(v7 + 16);
              uint64_t v67 = *(void *)(v7 + 24);
              swift_retain();
              swift_retain();
              unint64_t v68 = (char *)sub_1C8D88110();
              if (v68)
              {
                uint64_t v69 = sub_1C8D88140();
                if (__OFSUB__(v66, v69)) {
                  goto LABEL_156;
                }
                v68 += v66 - v69;
              }
              BOOL v24 = __OFSUB__(v67, v66);
              int64_t v81 = v67 - v66;
              if (v24) {
                goto LABEL_151;
              }
              uint64_t v82 = sub_1C8D88130();
              if (v82 >= v81) {
                size_t v83 = v81;
              }
              else {
                size_t v83 = v82;
              }
              if (!v39) {
                goto LABEL_169;
              }
              if (!v68) {
                goto LABEL_170;
              }
              int v84 = memcmp(v39, v68, v83);
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              sub_1C8CA3D5C(v7, v104);
              sub_1C8CA3D5C(v102, v96);
              sub_1C8CA3D5C(v7, v104);
              swift_release();
              sub_1C8CA3D5C(v102, v96);
              swift_release();
              uint64_t v3 = v100;
              if (v84) {
                return 0;
              }
              break;
            case 3uLL:
              *(void *)((char *)&__s1 + 6) = 0;
              *(void *)&long long __s1 = 0;
              if (!v20) {
                goto LABEL_56;
              }
              unint64_t v95 = v4;
              if (v20 == 1)
              {
                uint64_t v25 = (v7 >> 32) - (int)v7;
                if (v7 >> 32 < (int)v7) {
                  goto LABEL_145;
                }
                sub_1C8CA3CF8(v7, v104);
                uint64_t v40 = sub_1C8D88110();
                if (!v40) {
                  goto LABEL_161;
                }
                uint64_t v27 = v40;
                uint64_t v41 = sub_1C8D88140();
                uint64_t v29 = (int)v7 - v41;
                if (__OFSUB__((int)v7, v41)) {
                  goto LABEL_150;
                }
LABEL_52:
                uint64_t v42 = sub_1C8D88130();
                if (v42 >= v25) {
                  size_t v43 = v25;
                }
                else {
                  size_t v43 = v42;
                }
                int v44 = memcmp(&__s1, (const void *)(v27 + v29), v43);
                sub_1C8CA3D5C(v7, v104);
                unint64_t v45 = v95;
                sub_1C8CA3D5C(v102, v95);
                sub_1C8CA3D5C(v7, v104);
                swift_release();
                uint64_t v46 = v102;
                goto LABEL_98;
              }
              uint64_t v63 = *(void *)(v7 + 16);
              uint64_t v64 = *(void *)(v7 + 24);
              sub_1C8CA3CF8(v7, v104);
              swift_retain();
              swift_retain();
              uint64_t v61 = (char *)sub_1C8D88110();
              if (v61)
              {
                uint64_t v65 = sub_1C8D88140();
                if (__OFSUB__(v63, v65)) {
                  goto LABEL_155;
                }
                v61 += v63 - v65;
              }
              BOOL v24 = __OFSUB__(v64, v63);
              int64_t v74 = v64 - v63;
              if (v24) {
                goto LABEL_148;
              }
              uint64_t v75 = sub_1C8D88130();
              uint64_t v76 = v102;
              if (!v61) {
                goto LABEL_168;
              }
LABEL_109:
              if (v75 >= v74) {
                size_t v77 = v74;
              }
              else {
                size_t v77 = v75;
              }
              int v78 = memcmp(&__s1, v61, v77);
              swift_release();
              swift_release();
              sub_1C8CA3D5C(v7, v104);
              sub_1C8CA3D5C(v76, v95);
              sub_1C8CA3D5C(v7, v104);
              swift_release();
              uint64_t v79 = v76;
              unint64_t v80 = v95;
              goto LABEL_128;
            default:
              *(void *)&long long __s1 = v5;
              WORD4(__s1) = v4;
              BYTE10(__s1) = BYTE2(v4);
              BYTE11(__s1) = BYTE3(v4);
              BYTE12(__s1) = BYTE4(v4);
              BYTE13(__s1) = BYTE5(v4);
              if (!v20)
              {
LABEL_56:
                uint64_t __s2 = v7;
                LODWORD(v106) = v104;
                WORD2(v106) = WORD2(v104);
                int v44 = memcmp(&__s1, &__s2, BYTE6(v104));
                sub_1C8CA3D5C(v5, v4);
                sub_1C8CA3D5C(v7, v104);
                swift_release();
                uint64_t v46 = v5;
                unint64_t v47 = v4;
                goto LABEL_99;
              }
              unint64_t v95 = v4;
              if (v20 == 1)
              {
                uint64_t v25 = (v7 >> 32) - (int)v7;
                if (v7 >> 32 < (int)v7) {
                  goto LABEL_144;
                }
                sub_1C8CA3CF8(v7, v104);
                uint64_t v26 = sub_1C8D88110();
                if (!v26)
                {
                  sub_1C8D88130();
                  __break(1u);
LABEL_161:
                  sub_1C8D88130();
                  __break(1u);
LABEL_162:
                  __break(1u);
LABEL_163:
                  __break(1u);
LABEL_164:
                  __break(1u);
LABEL_165:
                  __break(1u);
LABEL_166:
                  __break(1u);
LABEL_167:
                  __break(1u);
LABEL_168:
                  __break(1u);
LABEL_169:
                  __break(1u);
LABEL_170:
                  __break(1u);
LABEL_171:
                  __break(1u);
LABEL_172:
                  __break(1u);
LABEL_173:
                  __break(1u);
                  JUMPOUT(0x1C8CFCF90);
                }
                uint64_t v27 = v26;
                uint64_t v28 = sub_1C8D88140();
                uint64_t v29 = (int)v7 - v28;
                if (__OFSUB__((int)v7, v28)) {
                  goto LABEL_149;
                }
                goto LABEL_52;
              }
              uint64_t v59 = *(void *)(v7 + 16);
              uint64_t v60 = *(void *)(v7 + 24);
              sub_1C8CA3CF8(v7, v104);
              swift_retain();
              swift_retain();
              uint64_t v61 = (char *)sub_1C8D88110();
              if (v61)
              {
                uint64_t v62 = sub_1C8D88140();
                if (__OFSUB__(v59, v62)) {
                  goto LABEL_154;
                }
                v61 += v59 - v62;
              }
              BOOL v24 = __OFSUB__(v60, v59);
              int64_t v74 = v60 - v59;
              if (v24) {
                goto LABEL_147;
              }
              uint64_t v75 = sub_1C8D88130();
              uint64_t v76 = v102;
              if (!v61) {
                goto LABEL_167;
              }
              goto LABEL_109;
          }
        }
        v2 += 3;
        v3 += 3;
        if (!--v103) {
          return 1;
        }
        break;
      case 2uLL:
        uint64_t v23 = *(void *)(v7 + 16);
        uint64_t v22 = *(void *)(v7 + 24);
        BOOL v24 = __OFSUB__(v22, v23);
        uint64_t v21 = v22 - v23;
        if (!v24) {
          goto LABEL_30;
        }
        goto LABEL_140;
      case 3uLL:
        if (!v17) {
          goto LABEL_6;
        }
        goto LABEL_131;
      default:
        uint64_t v21 = BYTE6(v104);
        goto LABEL_30;
    }
  }
  uint64_t v90 = v12;
  uint64_t v91 = v11;
  unint64_t v92 = v13;
  sub_1C8CC5580(v9, v10, v97, v101);
  sub_1C8CA3CF8(v102, v4);
  swift_retain();
  sub_1C8CA3CF8(v7, v104);
  swift_retain();
  sub_1C8CC5580(v9, v10, v97, v101);
  swift_retain();
  swift_retain();
  uint64_t v93 = v9;
  uint64_t v94 = v10;
  sub_1C8CC5664(v9, v10, v97, v101 & 1);
LABEL_133:
  sub_1C8CC5580(v90, v91, v92, v14);
  sub_1C8CC5640(v93, v94, v97, v101);
  sub_1C8CC5640(v90, v91, v92, v14);
LABEL_134:
  swift_release();
  swift_release();
  sub_1C8CA3D5C(v7, v104);
  swift_release();
  uint64_t v89 = v102;
LABEL_135:
  sub_1C8CA3D5C(v89, v4);
  swift_release();
  return 0;
}

uint64_t sub_1C8CFCFC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v15 = 1;
    }
    else
    {
      uint64_t v3 = (_OWORD *)(a1 + 32);
      unint64_t v4 = (_OWORD *)(a2 + 32);
      uint64_t v5 = v2 - 1;
      do
      {
        uint64_t v6 = v5;
        long long v7 = v3[5];
        v18[4] = v3[4];
        v18[5] = v7;
        long long v8 = v3[7];
        v18[6] = v3[6];
        v18[7] = v8;
        long long v9 = v3[1];
        v18[0] = *v3;
        v18[1] = v9;
        long long v10 = v3[3];
        _OWORD v18[2] = v3[2];
        v18[3] = v10;
        long long v11 = v4[5];
        v17[4] = v4[4];
        v17[5] = v11;
        long long v12 = v4[7];
        v17[6] = v4[6];
        v17[7] = v12;
        long long v13 = v4[1];
        v17[0] = *v4;
        v17[1] = v13;
        long long v14 = v4[3];
        _OWORD v17[2] = v4[2];
        v17[3] = v14;
        char v15 = _s20SiriOntologyProtobuf07Google_C6_FieldV2eeoiySbAC_ACtFZ_0((uint64_t)v18, (uint64_t)v17);
        if ((v15 & 1) == 0) {
          break;
        }
        uint64_t v5 = v6 - 1;
        v4 += 8;
        v3 += 8;
      }
      while (v6);
    }
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_1C8CFD08C(uint64_t a1, uint64_t a2)
{
  __s1[2] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = a2 + 40;
  uint64_t v4 = a1 + 40;
  while (2)
  {
    int v5 = *(_DWORD *)(v4 + 8);
    uint64_t v6 = *(void *)(v4 + 24);
    unint64_t v7 = *(void *)(v4 + 32);
    int v8 = *(_DWORD *)(v3 + 8);
    uint64_t v9 = *(void *)(v3 + 24);
    uint64_t v78 = *(void *)(v3 + 16);
    unint64_t v10 = *(void *)(v3 + 32);
    uint64_t v79 = *(void *)(v4 + 16);
    if (*(void *)(v4 - 8) == *(void *)(v3 - 8) && *(void *)v4 == *(void *)v3)
    {
      if (v5 != v8) {
        return 0;
      }
    }
    else
    {
      char v11 = sub_1C8D887C0();
      uint64_t result = 0;
      if ((v11 & 1) == 0 || v5 != v8) {
        return result;
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C8CA3CF8(v6, v7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C8CA3CF8(v9, v10);
    if ((sub_1C8D010E8(v79, v78, (uint64_t (*)(uint64_t, uint64_t))sub_1C8CC15D4) & 1) == 0) {
      goto LABEL_130;
    }
    unint64_t v13 = v10 >> 62;
    uint64_t v14 = 0;
    switch(v7 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v6), v6))
        {
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
        }
        uint64_t v14 = HIDWORD(v6) - (int)v6;
LABEL_20:
        sub_1C8CA3CF8(v6, v7);
        break;
      case 2uLL:
        uint64_t v16 = *(void *)(v6 + 16);
        uint64_t v15 = *(void *)(v6 + 24);
        uint64_t v14 = v15 - v16;
        if (!__OFSUB__(v15, v16)) {
          goto LABEL_20;
        }
        goto LABEL_134;
      case 3uLL:
        break;
      default:
        uint64_t v14 = BYTE6(v7);
        break;
    }
    switch((int)v13)
    {
      case 1:
        LODWORD(v17) = HIDWORD(v9) - v9;
        if (__OFSUB__(HIDWORD(v9), v9)) {
          goto LABEL_135;
        }
        uint64_t v17 = (int)v17;
LABEL_26:
        if (v14 == v17)
        {
          if (v14 < 1)
          {
LABEL_6:
            sub_1C8CA3D5C(v6, v7);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1C8CA3D5C(v9, v10);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1C8CA3D5C(v6, v7);
          }
          else
          {
            switch(v7 >> 62)
            {
              case 1uLL:
                unint64_t v77 = v7;
                if ((int)v6 > v6 >> 32) {
                  goto LABEL_137;
                }
                sub_1C8CA3CF8(v9, v10);
                uint64_t v25 = sub_1C8D88110();
                if (v25)
                {
                  uint64_t v26 = v25;
                  uint64_t v27 = sub_1C8D88140();
                  if (__OFSUB__((int)v6, v27)) {
                    goto LABEL_139;
                  }
                  uint64_t v73 = (void *)(v26 + (int)v6 - v27);
                }
                else
                {
                  uint64_t v73 = 0;
                }
                sub_1C8D88130();
                if (!v13)
                {
                  __s1[0] = v9;
                  LOWORD(__s1[1]) = v10;
                  BYTE2(__s1[1]) = BYTE2(v10);
                  BYTE3(__s1[1]) = BYTE3(v10);
                  BYTE4(__s1[1]) = BYTE4(v10);
                  BYTE5(__s1[1]) = BYTE5(v10);
                  if (!v73) {
                    goto LABEL_165;
                  }
                  int v35 = memcmp(v73, __s1, BYTE6(v10));
LABEL_102:
                  sub_1C8CA3D5C(v9, v10);
                  sub_1C8CA3D5C(v6, v7);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  sub_1C8CA3D5C(v9, v10);
                  swift_bridgeObjectRelease();
LABEL_126:
                  swift_bridgeObjectRelease();
                  sub_1C8CA3D5C(v6, v7);
                  if (v35) {
                    return 0;
                  }
                  break;
                }
                if (v13 == 1)
                {
                  if (v9 >> 32 < (int)v9) {
                    goto LABEL_148;
                  }
                  swift_retain();
                  uint64_t v40 = (char *)sub_1C8D88110();
                  if (v40)
                  {
                    uint64_t v41 = sub_1C8D88140();
                    if (__OFSUB__((int)v9, v41)) {
                      goto LABEL_155;
                    }
                    v40 += (int)v9 - v41;
                  }
                  uint64_t v42 = sub_1C8D88130();
                  if (v42 >= (v9 >> 32) - (int)v9) {
                    size_t v43 = (v9 >> 32) - (int)v9;
                  }
                  else {
                    size_t v43 = v42;
                  }
                  if (!v73) {
                    goto LABEL_158;
                  }
                  if (!v40) {
                    goto LABEL_159;
                  }
                  int v35 = memcmp(v73, v40, v43);
                  sub_1C8CA3D5C(v9, v10);
LABEL_123:
                  sub_1C8CA3D5C(v9, v10);
LABEL_124:
                  uint64_t v36 = v6;
LABEL_125:
                  sub_1C8CA3D5C(v36, v7);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  sub_1C8CA3D5C(v9, v10);
                  swift_bridgeObjectRelease();
                  goto LABEL_126;
                }
                uint64_t v60 = *(void *)(v9 + 16);
                uint64_t v59 = *(void *)(v9 + 24);
                swift_retain();
                swift_retain();
                uint64_t v61 = (char *)sub_1C8D88110();
                if (v61)
                {
                  uint64_t v62 = sub_1C8D88140();
                  if (__OFSUB__(v60, v62)) {
                    goto LABEL_154;
                  }
                  v61 += v60 - v62;
                }
                BOOL v20 = __OFSUB__(v59, v60);
                int64_t v63 = v59 - v60;
                if (v20) {
                  goto LABEL_149;
                }
                uint64_t v64 = sub_1C8D88130();
                if (v64 >= v63) {
                  size_t v65 = v63;
                }
                else {
                  size_t v65 = v64;
                }
                if (!v73) {
                  goto LABEL_166;
                }
                unint64_t v7 = v77;
                if (!v61) {
                  goto LABEL_167;
                }
                int v52 = memcmp(v73, v61, v65);
LABEL_113:
                swift_release();
                swift_release();
                sub_1C8CA3D5C(v9, v10);
                uint64_t v53 = v6;
LABEL_114:
                sub_1C8CA3D5C(v53, v7);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_1C8CA3D5C(v9, v10);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_1C8CA3D5C(v6, v7);
                if (v52) {
                  return 0;
                }
                break;
              case 2uLL:
                uint64_t v70 = *(char **)(v6 + 16);
                sub_1C8CA3CF8(v9, v10);
                swift_retain();
                swift_retain();
                uint64_t v28 = sub_1C8D88110();
                if (v28)
                {
                  uint64_t v29 = v28;
                  uint64_t v30 = sub_1C8D88140();
                  if (__OFSUB__(v70, v30)) {
                    goto LABEL_138;
                  }
                  uint64_t v71 = &v70[v29 - v30];
                }
                else
                {
                  uint64_t v71 = 0;
                }
                sub_1C8D88130();
                if (!v13)
                {
                  __s1[0] = v9;
                  LOWORD(__s1[1]) = v10;
                  BYTE2(__s1[1]) = BYTE2(v10);
                  BYTE3(__s1[1]) = BYTE3(v10);
                  BYTE4(__s1[1]) = BYTE4(v10);
                  BYTE5(__s1[1]) = BYTE5(v10);
                  if (!v71) {
                    goto LABEL_162;
                  }
                  int v35 = memcmp(v71, __s1, BYTE6(v10));
                  swift_release();
                  swift_release();
                  goto LABEL_102;
                }
                if (v13 == 1)
                {
                  if (v9 >> 32 < (int)v9) {
                    goto LABEL_144;
                  }
                  swift_retain();
                  uint64_t v37 = sub_1C8D88110();
                  if (v37)
                  {
                    uint64_t v68 = v37;
                    uint64_t v38 = sub_1C8D88140();
                    if (__OFSUB__((int)v9, v38)) {
                      goto LABEL_153;
                    }
                    uint64_t v39 = (const void *)(v68 + (int)v9 - v38);
                  }
                  else
                  {
                    uint64_t v39 = 0;
                  }
                  uint64_t v66 = sub_1C8D88130();
                  if (v66 >= (v9 >> 32) - (int)v9) {
                    size_t v67 = (v9 >> 32) - (int)v9;
                  }
                  else {
                    size_t v67 = v66;
                  }
                  if (!v71) {
                    goto LABEL_168;
                  }
                  if (!v39) {
                    goto LABEL_169;
                  }
                  int v35 = memcmp(v71, v39, v67);
                  sub_1C8CA3D5C(v9, v10);
                  swift_release();
                  swift_release();
                  goto LABEL_123;
                }
                uint64_t v54 = *(void *)(v9 + 16);
                uint64_t v69 = *(void *)(v9 + 24);
                swift_retain();
                swift_retain();
                uint64_t v55 = (char *)sub_1C8D88110();
                if (v55)
                {
                  uint64_t v56 = sub_1C8D88140();
                  if (__OFSUB__(v54, v56)) {
                    goto LABEL_152;
                  }
                  v55 += v54 - v56;
                }
                if (__OFSUB__(v69, v54)) {
                  goto LABEL_147;
                }
                uint64_t v57 = sub_1C8D88130();
                if (v57 >= v69 - v54) {
                  size_t v58 = v69 - v54;
                }
                else {
                  size_t v58 = v57;
                }
                if (!v71) {
                  goto LABEL_163;
                }
                if (!v55) {
                  goto LABEL_164;
                }
                int v52 = memcmp(v71, v55, v58);
                swift_release();
                swift_release();
                goto LABEL_113;
              case 3uLL:
                memset(__s1, 0, 14);
                if (!v13) {
                  goto LABEL_52;
                }
                unint64_t v76 = v7;
                if (v13 == 1)
                {
                  uint64_t v72 = (void *)((v9 >> 32) - (int)v9);
                  if (v9 >> 32 < (int)v9) {
                    goto LABEL_141;
                  }
                  sub_1C8CA3CF8(v9, v10);
                  uint64_t v31 = sub_1C8D88110();
                  if (!v31) {
                    goto LABEL_157;
                  }
                  uint64_t v22 = v31;
                  uint64_t v32 = sub_1C8D88140();
                  uint64_t v24 = (int)v9 - v32;
                  if (__OFSUB__((int)v9, v32)) {
                    goto LABEL_143;
                  }
LABEL_48:
                  uint64_t v33 = sub_1C8D88130();
                  if (v33 >= (uint64_t)v72) {
                    size_t v34 = (size_t)v72;
                  }
                  else {
                    size_t v34 = v33;
                  }
                  int v35 = memcmp(__s1, (const void *)(v22 + v24), v34);
                  sub_1C8CA3D5C(v9, v10);
                  uint64_t v36 = v6;
                  unint64_t v7 = v76;
                  goto LABEL_125;
                }
                uint64_t v49 = *(void *)(v9 + 16);
                uint64_t v75 = *(char **)(v9 + 24);
                sub_1C8CA3CF8(v9, v10);
                swift_retain();
                swift_retain();
                unint64_t v45 = (char *)sub_1C8D88110();
                if (v45)
                {
                  uint64_t v50 = sub_1C8D88140();
                  if (__OFSUB__(v49, v50)) {
                    goto LABEL_151;
                  }
                  v45 += v49 - v50;
                }
                unint64_t v47 = &v75[-v49];
                if (__OFSUB__(v75, v49)) {
                  goto LABEL_146;
                }
                uint64_t v48 = sub_1C8D88130();
                if (!v45) {
                  goto LABEL_161;
                }
LABEL_84:
                if (v48 >= (uint64_t)v47) {
                  size_t v51 = (size_t)v47;
                }
                else {
                  size_t v51 = v48;
                }
                int v52 = memcmp(__s1, v45, v51);
                swift_release();
                swift_release();
                sub_1C8CA3D5C(v9, v10);
                uint64_t v53 = v6;
                unint64_t v7 = v76;
                goto LABEL_114;
              default:
                __s1[0] = v6;
                LOWORD(__s1[1]) = v7;
                BYTE2(__s1[1]) = BYTE2(v7);
                BYTE3(__s1[1]) = BYTE3(v7);
                BYTE4(__s1[1]) = BYTE4(v7);
                BYTE5(__s1[1]) = BYTE5(v7);
                if (!v13)
                {
LABEL_52:
                  uint64_t __s2 = v9;
                  __int16 v81 = v10;
                  char v82 = BYTE2(v10);
                  char v83 = BYTE3(v10);
                  char v84 = BYTE4(v10);
                  char v85 = BYTE5(v10);
                  int v35 = memcmp(__s1, &__s2, BYTE6(v10));
                  goto LABEL_124;
                }
                unint64_t v76 = v7;
                if (v13 == 1)
                {
                  uint64_t v72 = (void *)((v9 >> 32) - (int)v9);
                  if (v9 >> 32 < (int)v9) {
                    goto LABEL_140;
                  }
                  sub_1C8CA3CF8(v9, v10);
                  uint64_t v21 = sub_1C8D88110();
                  if (!v21)
                  {
                    sub_1C8D88130();
                    __break(1u);
LABEL_157:
                    sub_1C8D88130();
                    __break(1u);
LABEL_158:
                    __break(1u);
LABEL_159:
                    __break(1u);
LABEL_160:
                    __break(1u);
LABEL_161:
                    __break(1u);
LABEL_162:
                    __break(1u);
LABEL_163:
                    __break(1u);
LABEL_164:
                    __break(1u);
LABEL_165:
                    __break(1u);
LABEL_166:
                    __break(1u);
LABEL_167:
                    __break(1u);
LABEL_168:
                    __break(1u);
LABEL_169:
                    __break(1u);
                    JUMPOUT(0x1C8CFDBBCLL);
                  }
                  uint64_t v22 = v21;
                  uint64_t v23 = sub_1C8D88140();
                  uint64_t v24 = (int)v9 - v23;
                  if (__OFSUB__((int)v9, v23)) {
                    goto LABEL_142;
                  }
                  goto LABEL_48;
                }
                uint64_t v44 = *(void *)(v9 + 16);
                int64_t v74 = *(char **)(v9 + 24);
                sub_1C8CA3CF8(v9, v10);
                swift_retain();
                swift_retain();
                unint64_t v45 = (char *)sub_1C8D88110();
                if (v45)
                {
                  uint64_t v46 = sub_1C8D88140();
                  if (__OFSUB__(v44, v46)) {
                    goto LABEL_150;
                  }
                  v45 += v44 - v46;
                }
                unint64_t v47 = &v74[-v44];
                if (__OFSUB__(v74, v44)) {
                  goto LABEL_145;
                }
                uint64_t v48 = sub_1C8D88130();
                if (!v45) {
                  goto LABEL_160;
                }
                goto LABEL_84;
            }
          }
          v3 += 48;
          v4 += 48;
          if (!--v2) {
            return 1;
          }
          continue;
        }
LABEL_129:
        sub_1C8CA3D5C(v6, v7);
LABEL_130:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C8CA3D5C(v9, v10);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C8CA3D5C(v6, v7);
        return 0;
      case 2:
        uint64_t v19 = *(void *)(v9 + 16);
        uint64_t v18 = *(void *)(v9 + 24);
        BOOL v20 = __OFSUB__(v18, v19);
        uint64_t v17 = v18 - v19;
        if (!v20) {
          goto LABEL_26;
        }
        goto LABEL_136;
      case 3:
        if (!v14) {
          goto LABEL_6;
        }
        goto LABEL_129;
      default:
        uint64_t v17 = BYTE6(v10);
        goto LABEL_26;
    }
  }
}

uint64_t sub_1C8CFDBEC(uint64_t a1, uint64_t a2)
{
  void __s1[3] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2) {
    return 1;
  }
  uint64_t v3 = a2;
  uint64_t v4 = a1;
  if (a1 == a2) {
    return 1;
  }
  uint64_t v52 = *(void *)(a1 + 16);
  uint64_t v5 = 0;
  uint64_t v50 = 0;
  while (2)
  {
    uint64_t v7 = *(void *)(v4 + v5 + 32);
    uint64_t v8 = *(void *)(v4 + v5 + 40);
    uint64_t v9 = *(void *)(v4 + v5 + 48);
    uint64_t v66 = *(void *)(v4 + v5 + 56);
    uint64_t v10 = *(void *)(v4 + v5 + 72);
    uint64_t v61 = *(void *)(v4 + v5 + 80);
    int v58 = *(unsigned __int8 *)(v4 + v5 + 88);
    int v59 = *(unsigned __int8 *)(v4 + v5 + 64);
    uint64_t v60 = *(void *)(v4 + v5 + 96);
    uint64_t v56 = *(void *)(v4 + v5 + 104);
    int v55 = *(unsigned __int8 *)(v4 + v5 + 112);
    uint64_t v11 = *(void *)(v4 + v5 + 120);
    unint64_t v12 = *(void *)(v4 + v5 + 128);
    uint64_t v13 = v3;
    uint64_t v14 = v5;
    uint64_t v15 = v3 + v5;
    uint64_t v16 = *(void *)(v3 + v5 + 32);
    uint64_t v17 = *(void *)(v3 + v5 + 40);
    uint64_t v18 = *(void *)(v3 + v5 + 48);
    uint64_t v65 = *(void *)(v15 + 56);
    int v19 = *(unsigned __int8 *)(v15 + 64);
    uint64_t v20 = *(void *)(v15 + 72);
    int v57 = *(unsigned __int8 *)(v15 + 88);
    uint64_t v62 = *(void *)(v15 + 80);
    uint64_t v63 = *(void *)(v15 + 96);
    uint64_t v54 = *(void *)(v15 + 104);
    int v53 = *(unsigned __int8 *)(v15 + 112);
    uint64_t v64 = *(void *)(v15 + 120);
    unint64_t v67 = *(void *)(v15 + 128);
    if ((v7 != v16 || v8 != v17) && (sub_1C8D887C0() & 1) == 0) {
      return 0;
    }
    if (v9 == v18 && v66 == v65)
    {
      BOOL v21 = v59 == v19;
      uint64_t v3 = v13;
      uint64_t v4 = a1;
      uint64_t v22 = v14;
      unint64_t v23 = v12;
      uint64_t v24 = v11;
      uint64_t v25 = v61;
      uint64_t v26 = v62;
      if (!v21) {
        return 0;
      }
    }
    else
    {
      char v27 = sub_1C8D887C0();
      uint64_t result = 0;
      if ((v27 & 1) == 0) {
        return result;
      }
      char v28 = v59 ^ v19;
      uint64_t v3 = v13;
      uint64_t v4 = a1;
      uint64_t v22 = v14;
      unint64_t v23 = v12;
      uint64_t v24 = v11;
      uint64_t v25 = v61;
      uint64_t v26 = v62;
      if (v28) {
        return result;
      }
    }
    if (v10 == v20 && v25 == v26)
    {
      if (v58 != v57) {
        return 0;
      }
    }
    else
    {
      char v29 = sub_1C8D887C0();
      uint64_t result = 0;
      if (v29 & 1) == 0 || ((v58 ^ v57)) {
        return result;
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C8CA3CF8(v24, v23);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C8CA3CF8(v64, v67);
    if ((sub_1C8D010E8(v60, v63, (uint64_t (*)(uint64_t, uint64_t))sub_1C8CC15D4) & 1) == 0) {
      goto LABEL_65;
    }
    uint64_t v30 = v56 != 0;
    if (!v55) {
      uint64_t v30 = v56;
    }
    if (v53)
    {
      if (v54)
      {
        if (v30 != 1) {
          goto LABEL_65;
        }
      }
      else if (v30)
      {
        goto LABEL_65;
      }
    }
    else if (v30 != v54)
    {
      goto LABEL_65;
    }
    uint64_t v31 = 0;
    switch(v23 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v24), v24))
        {
          __break(1u);
LABEL_69:
          __break(1u);
LABEL_70:
          __break(1u);
LABEL_71:
          __break(1u);
LABEL_72:
          __break(1u);
LABEL_73:
          __break(1u);
LABEL_74:
          __break(1u);
LABEL_75:
          __break(1u);
        }
        uint64_t v31 = HIDWORD(v24) - (int)v24;
LABEL_39:
        sub_1C8CA3CF8(v24, v23);
        break;
      case 2uLL:
        uint64_t v33 = *(void *)(v24 + 16);
        uint64_t v32 = *(void *)(v24 + 24);
        uint64_t v31 = v32 - v33;
        if (!__OFSUB__(v32, v33)) {
          goto LABEL_39;
        }
        goto LABEL_69;
      case 3uLL:
        break;
      default:
        uint64_t v31 = BYTE6(v23);
        break;
    }
    switch(v67 >> 62)
    {
      case 1uLL:
        LODWORD(v34) = HIDWORD(v64) - v64;
        if (__OFSUB__(HIDWORD(v64), v64)) {
          goto LABEL_70;
        }
        uint64_t v34 = (int)v34;
LABEL_45:
        if (v31 == v34)
        {
          if (v31 < 1)
          {
LABEL_7:
            sub_1C8CA3D5C(v24, v23);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1C8CA3D5C(v64, v67);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1C8CA3D5C(v24, v23);
          }
          else
          {
            uint64_t v38 = v50;
            switch(v23 >> 62)
            {
              case 1uLL:
                if (v24 >> 32 < (int)v24) {
                  goto LABEL_72;
                }
                sub_1C8CA3CF8(v24, v23);
                sub_1C8CA3CF8(v64, v67);
                uint64_t v43 = sub_1C8D88110();
                if (!v43) {
                  goto LABEL_53;
                }
                uint64_t v44 = sub_1C8D88140();
                if (__OFSUB__((int)v24, v44)) {
                  goto LABEL_74;
                }
                v43 += (int)v24 - v44;
LABEL_53:
                sub_1C8D88130();
                sub_1C8D01BB8(v43, v64, v67, (char *)__s1);
                sub_1C8CA3D5C(v24, v23);
                sub_1C8CA3D5C(v64, v67);
                sub_1C8CA3D5C(v24, v23);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_1C8CA3D5C(v64, v67);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_1C8CA3D5C(v24, v23);
                if ((__s1[0] & 1) == 0) {
                  return 0;
                }
                goto LABEL_63;
              case 2uLL:
                uint64_t v45 = *(void *)(v24 + 16);
                uint64_t v46 = *(void *)(v24 + 24);
                sub_1C8CA3CF8(v64, v67);
                swift_retain();
                swift_retain();
                uint64_t v47 = sub_1C8D88110();
                if (!v47) {
                  goto LABEL_58;
                }
                uint64_t v48 = sub_1C8D88140();
                if (__OFSUB__(v45, v48)) {
                  goto LABEL_75;
                }
                v47 += v45 - v48;
LABEL_58:
                if (__OFSUB__(v46, v45)) {
                  goto LABEL_73;
                }
                sub_1C8D88130();
                sub_1C8D01BB8(v47, v64, v67, (char *)__s1);
                swift_release();
                swift_release();
                sub_1C8CA3D5C(v64, v67);
                sub_1C8CA3D5C(v24, v23);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_1C8CA3D5C(v64, v67);
                char v49 = __s1[0];
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_1C8CA3D5C(v24, v23);
                if ((v49 & 1) == 0) {
                  return 0;
                }
LABEL_63:
                uint64_t v50 = v38;
                break;
              case 3uLL:
                memset(__s1, 0, 14);
                uint64_t v39 = v64;
                unint64_t v40 = v67;
                sub_1C8CA3CF8(v64, v67);
                uint64_t v41 = v64;
                unint64_t v42 = v67;
                goto LABEL_62;
              default:
                __s1[0] = v24;
                LOWORD(__s1[1]) = v23;
                BYTE2(__s1[1]) = BYTE2(v23);
                BYTE3(__s1[1]) = BYTE3(v23);
                BYTE4(__s1[1]) = BYTE4(v23);
                BYTE5(__s1[1]) = BYTE5(v23);
                uint64_t v39 = v64;
                unint64_t v40 = v67;
                sub_1C8CA3CF8(v64, v67);
                uint64_t v41 = v64;
                unint64_t v42 = v67;
                uint64_t v38 = v50;
LABEL_62:
                sub_1C8D01BB8((uint64_t)__s1, v41, v42, &v68);
                sub_1C8CA3D5C(v39, v40);
                sub_1C8CA3D5C(v24, v23);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_1C8CA3D5C(v39, v40);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_1C8CA3D5C(v24, v23);
                if (v68) {
                  goto LABEL_63;
                }
                return 0;
            }
          }
          uint64_t v5 = v22 + 104;
          uint64_t result = 1;
          if (!--v52) {
            return result;
          }
          continue;
        }
LABEL_64:
        sub_1C8CA3D5C(v24, v23);
LABEL_65:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C8CA3D5C(v64, v67);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C8CA3D5C(v24, v23);
        return 0;
      case 2uLL:
        uint64_t v36 = *(void *)(v64 + 16);
        uint64_t v35 = *(void *)(v64 + 24);
        BOOL v37 = __OFSUB__(v35, v36);
        uint64_t v34 = v35 - v36;
        if (!v37) {
          goto LABEL_45;
        }
        goto LABEL_71;
      case 3uLL:
        if (!v31) {
          goto LABEL_7;
        }
        goto LABEL_64;
      default:
        uint64_t v34 = BYTE6(v67);
        goto LABEL_45;
    }
  }
}

uint64_t sub_1C8CFE4A4(uint64_t a1, uint64_t a2)
{
  __s1[2] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (void *)(a2 + 40);
    uint64_t v4 = (void *)(a1 + 40);
    while (1)
    {
      uint64_t v5 = v4[1];
      uint64_t v6 = v4[3];
      unint64_t v83 = v4[4];
      uint64_t v84 = v4[2];
      uint64_t v8 = v3[1];
      uint64_t v7 = v3[2];
      uint64_t v10 = v3[3];
      unint64_t v9 = v3[4];
      if (*(v4 - 1) != *(v3 - 1) || *v4 != *v3)
      {
        uint64_t v7 = v3[2];
        if ((sub_1C8D887C0() & 1) == 0) {
          return 0;
        }
      }
      if ((v5 != v8 || v84 != v7) && (sub_1C8D887C0() & 1) == 0) {
        return 0;
      }
      unint64_t v11 = v83;
      uint64_t v12 = 0;
      switch(v83 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v6), v6))
          {
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
          }
          uint64_t v12 = HIDWORD(v6) - (int)v6;
LABEL_19:
          sub_1C8CA3CF8(v6, v83);
          unint64_t v11 = v83;
          break;
        case 2uLL:
          uint64_t v14 = *(void *)(v6 + 16);
          uint64_t v13 = *(void *)(v6 + 24);
          uint64_t v12 = v13 - v14;
          if (!__OFSUB__(v13, v14)) {
            goto LABEL_19;
          }
          goto LABEL_129;
        case 3uLL:
          break;
        default:
          uint64_t v12 = BYTE6(v83);
          break;
      }
      unint64_t v15 = v9 >> 62;
      switch(v9 >> 62)
      {
        case 1uLL:
          LODWORD(v16) = HIDWORD(v10) - v10;
          if (__OFSUB__(HIDWORD(v10), v10)) {
            goto LABEL_130;
          }
          uint64_t v16 = (int)v16;
LABEL_25:
          if (v12 != v16)
          {
LABEL_126:
            sub_1C8CA3D5C(v6, v11);
            return 0;
          }
          if (v12 < 1)
          {
LABEL_6:
            sub_1C8CA3D5C(v6, v11);
          }
          else
          {
            switch(v83 >> 62)
            {
              case 1uLL:
                if ((int)v6 > v6 >> 32) {
                  goto LABEL_132;
                }
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_1C8CA3CF8(v6, v83);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_1C8CA3CF8(v10, v9);
                sub_1C8CA3CF8(v10, v9);
                uint64_t v24 = sub_1C8D88110();
                if (v24)
                {
                  uint64_t v25 = v24;
                  uint64_t v26 = sub_1C8D88140();
                  if (__OFSUB__((int)v6, v26)) {
                    goto LABEL_134;
                  }
                  __na = (const void *)(v25 + (int)v6 - v26);
                }
                else
                {
                  __na = 0;
                }
                unint64_t v36 = v83;
                sub_1C8D88130();
                if (!v15)
                {
                  __s1[0] = v10;
                  LOWORD(__s1[1]) = v9;
                  BYTE2(__s1[1]) = BYTE2(v9);
                  BYTE3(__s1[1]) = BYTE3(v9);
                  BYTE4(__s1[1]) = BYTE4(v9);
                  BYTE5(__s1[1]) = BYTE5(v9);
                  if (!__na) {
                    goto LABEL_161;
                  }
                  int v35 = memcmp(__na, __s1, BYTE6(v9));
LABEL_108:
                  sub_1C8CA3D5C(v10, v9);
                  sub_1C8CA3D5C(v6, v36);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  sub_1C8CA3D5C(v10, v9);
                  swift_bridgeObjectRelease();
LABEL_109:
                  swift_bridgeObjectRelease();
                  uint64_t v59 = v6;
                  unint64_t v60 = v36;
LABEL_110:
                  sub_1C8CA3D5C(v59, v60);
                  if (v35) {
                    return 0;
                  }
                  break;
                }
                if (v15 == 1)
                {
                  if (v10 >> 32 < (int)v10) {
                    goto LABEL_143;
                  }
                  swift_retain();
                  unint64_t v42 = (char *)sub_1C8D88110();
                  if (v42)
                  {
                    uint64_t v43 = sub_1C8D88140();
                    if (__OFSUB__((int)v10, v43)) {
                      goto LABEL_150;
                    }
                    v42 += (int)v10 - v43;
                  }
                  uint64_t v44 = sub_1C8D88130();
                  if (v44 >= (v10 >> 32) - (int)v10) {
                    size_t v45 = (v10 >> 32) - (int)v10;
                  }
                  else {
                    size_t v45 = v44;
                  }
                  if (!__na) {
                    goto LABEL_164;
                  }
                  unint64_t v36 = v83;
                  if (!v42) {
                    goto LABEL_155;
                  }
                  int v35 = memcmp(__na, v42, v45);
                  sub_1C8CA3D5C(v10, v9);
                  goto LABEL_108;
                }
                uint64_t v68 = *(void *)(v10 + 16);
                unint64_t v77 = *(char **)(v10 + 24);
                swift_retain();
                swift_retain();
                uint64_t v69 = (char *)sub_1C8D88110();
                if (v69)
                {
                  uint64_t v70 = sub_1C8D88140();
                  if (__OFSUB__(v68, v70)) {
                    goto LABEL_149;
                  }
                  v69 += v68 - v70;
                }
                BOOL v19 = __OFSUB__(v77, v68);
                uint64_t v71 = &v77[-v68];
                if (v19) {
                  goto LABEL_144;
                }
                uint64_t v72 = sub_1C8D88130();
                if (v72 >= (uint64_t)v71) {
                  size_t v73 = (size_t)v71;
                }
                else {
                  size_t v73 = v72;
                }
                if (!__na) {
                  goto LABEL_162;
                }
                unint64_t v58 = v83;
                if (!v69) {
                  goto LABEL_163;
                }
                int v56 = memcmp(__na, v69, v73);
LABEL_122:
                swift_release();
                swift_release();
                sub_1C8CA3D5C(v10, v9);
                uint64_t v57 = v6;
LABEL_123:
                sub_1C8CA3D5C(v57, v58);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_1C8CA3D5C(v10, v9);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_1C8CA3D5C(v6, v58);
                if (v56) {
                  return 0;
                }
                break;
              case 2uLL:
                uint64_t v75 = *(char **)(v6 + 16);
                unint64_t v27 = v11;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_1C8CA3CF8(v6, v27);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_1C8CA3CF8(v10, v9);
                sub_1C8CA3CF8(v10, v9);
                swift_retain();
                swift_retain();
                uint64_t v28 = sub_1C8D88110();
                if (v28)
                {
                  uint64_t v29 = v28;
                  uint64_t v30 = sub_1C8D88140();
                  if (__OFSUB__(v75, v30)) {
                    goto LABEL_133;
                  }
                  unint64_t v76 = &v75[v29 - v30];
                }
                else
                {
                  unint64_t v76 = 0;
                }
                sub_1C8D88130();
                if (!v15)
                {
                  __s1[0] = v10;
                  LOWORD(__s1[1]) = v9;
                  BYTE2(__s1[1]) = BYTE2(v9);
                  BYTE3(__s1[1]) = BYTE3(v9);
                  BYTE4(__s1[1]) = BYTE4(v9);
                  BYTE5(__s1[1]) = BYTE5(v9);
                  if (!v76) {
                    goto LABEL_158;
                  }
                  int v35 = memcmp(v76, __s1, BYTE6(v9));
                  swift_release();
                  swift_release();
                  sub_1C8CA3D5C(v10, v9);
                  sub_1C8CA3D5C(v6, v83);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  sub_1C8CA3D5C(v10, v9);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t v59 = v6;
                  unint64_t v60 = v83;
                  goto LABEL_110;
                }
                if (v15 == 1)
                {
                  if (v10 >> 32 < (int)v10) {
                    goto LABEL_137;
                  }
                  swift_retain();
                  uint64_t v38 = (char *)sub_1C8D88110();
                  if (v38)
                  {
                    uint64_t v39 = sub_1C8D88140();
                    if (__OFSUB__((int)v10, v39)) {
                      goto LABEL_148;
                    }
                    v38 += (int)v10 - v39;
                  }
                  uint64_t v40 = sub_1C8D88130();
                  if (v40 >= (v10 >> 32) - (int)v10) {
                    size_t v41 = (v10 >> 32) - (int)v10;
                  }
                  else {
                    size_t v41 = v40;
                  }
                  if (!v76) {
                    goto LABEL_153;
                  }
                  unint64_t v36 = v83;
                  if (!v38) {
                    goto LABEL_154;
                  }
                  int v35 = memcmp(v76, v38, v41);
                  sub_1C8CA3D5C(v10, v9);
                  swift_release();
                  swift_release();
                  goto LABEL_108;
                }
                uint64_t v61 = *(void *)(v10 + 16);
                uint64_t v62 = *(void *)(v10 + 24);
                swift_retain();
                swift_retain();
                uint64_t v63 = (char *)sub_1C8D88110();
                if (v63)
                {
                  uint64_t v64 = sub_1C8D88140();
                  if (__OFSUB__(v61, v64)) {
                    goto LABEL_147;
                  }
                  v63 += v61 - v64;
                }
                BOOL v19 = __OFSUB__(v62, v61);
                int64_t v65 = v62 - v61;
                if (v19) {
                  goto LABEL_142;
                }
                uint64_t v66 = sub_1C8D88130();
                if (v66 >= v65) {
                  size_t v67 = v65;
                }
                else {
                  size_t v67 = v66;
                }
                if (!v76) {
                  goto LABEL_159;
                }
                unint64_t v58 = v83;
                if (!v63) {
                  goto LABEL_160;
                }
                int v56 = memcmp(v76, v63, v67);
                swift_release();
                swift_release();
                goto LABEL_122;
              case 3uLL:
                memset(__s1, 0, 14);
                if (!v15) {
                  goto LABEL_51;
                }
                if (v15 == 1)
                {
                  int64_t __n = (v10 >> 32) - (int)v10;
                  if (v10 >> 32 < (int)v10) {
                    goto LABEL_136;
                  }
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  sub_1C8CA3CF8(v6, v83);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  sub_1C8CA3CF8(v10, v9);
                  sub_1C8CA3CF8(v10, v9);
                  uint64_t v31 = sub_1C8D88110();
                  if (!v31) {
                    goto LABEL_152;
                  }
                  uint64_t v21 = v31;
                  uint64_t v32 = sub_1C8D88140();
                  uint64_t v23 = (int)v10 - v32;
                  if (__OFSUB__((int)v10, v32)) {
                    goto LABEL_141;
                  }
LABEL_47:
                  uint64_t v33 = sub_1C8D88130();
                  if (v33 >= __n) {
                    size_t v34 = __n;
                  }
                  else {
                    size_t v34 = v33;
                  }
                  int v35 = memcmp(__s1, (const void *)(v21 + v23), v34);
                  sub_1C8CA3D5C(v10, v9);
                  unint64_t v36 = v83;
                  sub_1C8CA3D5C(v6, v83);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  sub_1C8CA3D5C(v10, v9);
                  swift_bridgeObjectRelease();
                  goto LABEL_109;
                }
                uint64_t v52 = *(void *)(v10 + 16);
                size_t __nc = *(void *)(v10 + 24);
                unint64_t v53 = v11;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_1C8CA3CF8(v6, v53);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_1C8CA3CF8(v10, v9);
                sub_1C8CA3CF8(v10, v9);
                swift_retain();
                swift_retain();
                uint64_t v48 = (char *)sub_1C8D88110();
                if (v48)
                {
                  uint64_t v54 = sub_1C8D88140();
                  if (__OFSUB__(v52, v54)) {
                    goto LABEL_146;
                  }
                  v48 += v52 - v54;
                }
                int64_t v50 = __nc - v52;
                if (__OFSUB__(__nc, v52)) {
                  goto LABEL_139;
                }
                uint64_t v51 = sub_1C8D88130();
                if (!v48) {
                  goto LABEL_157;
                }
LABEL_90:
                if (v51 >= v50) {
                  size_t v55 = v50;
                }
                else {
                  size_t v55 = v51;
                }
                int v56 = memcmp(__s1, v48, v55);
                swift_release();
                swift_release();
                sub_1C8CA3D5C(v10, v9);
                uint64_t v57 = v6;
                unint64_t v58 = v83;
                goto LABEL_123;
              default:
                __s1[0] = v6;
                LOWORD(__s1[1]) = v11;
                BYTE2(__s1[1]) = BYTE2(v11);
                BYTE3(__s1[1]) = BYTE3(v11);
                BYTE4(__s1[1]) = BYTE4(v11);
                BYTE5(__s1[1]) = BYTE5(v11);
                if (!v15)
                {
LABEL_51:
                  uint64_t __s2 = v10;
                  __int16 v86 = v9;
                  char v87 = BYTE2(v9);
                  char v88 = BYTE3(v9);
                  char v89 = BYTE4(v9);
                  char v90 = BYTE5(v9);
                  unint64_t v37 = v11;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  sub_1C8CA3CF8(v6, v37);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  sub_1C8CA3CF8(v10, v9);
                  int __nd = memcmp(__s1, &__s2, BYTE6(v9));
                  sub_1C8CA3D5C(v6, v37);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  sub_1C8CA3D5C(v10, v9);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  sub_1C8CA3D5C(v6, v37);
                  if (__nd) {
                    return 0;
                  }
                  break;
                }
                if (v15 == 1)
                {
                  int64_t __n = (v10 >> 32) - (int)v10;
                  if (v10 >> 32 < (int)v10) {
                    goto LABEL_135;
                  }
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  sub_1C8CA3CF8(v6, v83);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  sub_1C8CA3CF8(v10, v9);
                  sub_1C8CA3CF8(v10, v9);
                  uint64_t v20 = sub_1C8D88110();
                  if (!v20)
                  {
                    sub_1C8D88130();
                    __break(1u);
LABEL_152:
                    sub_1C8D88130();
                    __break(1u);
LABEL_153:
                    __break(1u);
LABEL_154:
                    __break(1u);
LABEL_155:
                    __break(1u);
LABEL_156:
                    __break(1u);
LABEL_157:
                    __break(1u);
LABEL_158:
                    __break(1u);
LABEL_159:
                    __break(1u);
LABEL_160:
                    __break(1u);
LABEL_161:
                    __break(1u);
LABEL_162:
                    __break(1u);
LABEL_163:
                    __break(1u);
LABEL_164:
                    __break(1u);
                    JUMPOUT(0x1C8CFF180);
                  }
                  uint64_t v21 = v20;
                  uint64_t v22 = sub_1C8D88140();
                  uint64_t v23 = (int)v10 - v22;
                  if (__OFSUB__((int)v10, v22)) {
                    goto LABEL_140;
                  }
                  goto LABEL_47;
                }
                uint64_t v46 = *(void *)(v10 + 16);
                size_t __nb = *(void *)(v10 + 24);
                unint64_t v47 = v11;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_1C8CA3CF8(v6, v47);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_1C8CA3CF8(v10, v9);
                sub_1C8CA3CF8(v10, v9);
                swift_retain();
                swift_retain();
                uint64_t v48 = (char *)sub_1C8D88110();
                if (v48)
                {
                  uint64_t v49 = sub_1C8D88140();
                  if (__OFSUB__(v46, v49)) {
                    goto LABEL_145;
                  }
                  v48 += v46 - v49;
                }
                int64_t v50 = __nb - v46;
                if (__OFSUB__(__nb, v46)) {
                  goto LABEL_138;
                }
                uint64_t v51 = sub_1C8D88130();
                if (!v48) {
                  goto LABEL_156;
                }
                goto LABEL_90;
            }
          }
          v3 += 6;
          v4 += 6;
          if (!--v2) {
            return 1;
          }
          break;
        case 2uLL:
          uint64_t v18 = *(void *)(v10 + 16);
          uint64_t v17 = *(void *)(v10 + 24);
          BOOL v19 = __OFSUB__(v17, v18);
          uint64_t v16 = v17 - v18;
          if (!v19) {
            goto LABEL_25;
          }
          goto LABEL_131;
        case 3uLL:
          if (!v12) {
            goto LABEL_6;
          }
          goto LABEL_126;
        default:
          uint64_t v16 = BYTE6(v9);
          goto LABEL_25;
      }
    }
  }
  return 1;
}

uint64_t sub_1C8CFF1B0(uint64_t a1, uint64_t a2)
{
  uint64_t v160 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = 0;
  uint64_t v129 = a2 + 32;
  uint64_t v130 = a1 + 32;
  uint64_t v128 = *(void *)(a1 + 16);
  while (1)
  {
    uint64_t v5 = (uint64_t *)(v130 + 24 * v3);
    uint64_t v7 = *v5;
    unint64_t v6 = v5[1];
    uint64_t v8 = (void *)v5[2];
    unint64_t v9 = (uint64_t *)(v129 + 24 * v3);
    uint64_t v10 = *v9;
    unint64_t v11 = v9[1];
    uint64_t v12 = (void *)v9[2];
    uint64_t v137 = *v9;
    unint64_t v138 = v11;
    if (v8 == v12)
    {
      sub_1C8CA3CF8(v7, v6);
      swift_retain();
      sub_1C8CA3CF8(v10, v11);
      swift_retain();
      goto LABEL_65;
    }
    uint64_t v132 = v3;
    swift_beginAccess();
    uint64_t v13 = v8[2];
    uint64_t v14 = v8[3];
    swift_beginAccess();
    uint64_t v15 = v12[3];
    if (v14)
    {
      if (!v15) {
        return 0;
      }
      BOOL v16 = v13 == v12[2] && v14 == v15;
      if (!v16 && (sub_1C8D887C0() & 1) == 0) {
        return 0;
      }
    }
    else if (v15)
    {
      return 0;
    }
    uint64_t v134 = v7;
    swift_beginAccess();
    uint64_t v17 = v8[4];
    uint64_t v18 = v8[5];
    unint64_t v19 = v8[6];
    uint64_t v131 = v8[7];
    swift_beginAccess();
    uint64_t v20 = v12[4];
    uint64_t v127 = v12[5];
    unint64_t v21 = v12[6];
    if (v17) {
      break;
    }
    sub_1C8CA3CF8(v134, v6);
    swift_retain();
    sub_1C8CA3CF8(v10, v138);
    swift_retain_n();
    swift_retain();
    if (v20) {
      goto LABEL_179;
    }
LABEL_64:
    swift_release();
    swift_release();
    uint64_t v3 = v132;
    uint64_t v7 = v134;
    uint64_t v2 = v128;
    unint64_t v11 = v138;
LABEL_65:
    ++v3;
    uint64_t v53 = 0;
    switch(v6 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v7), v7))
        {
          __break(1u);
LABEL_188:
          __break(1u);
LABEL_189:
          __break(1u);
LABEL_190:
          __break(1u);
LABEL_191:
          __break(1u);
LABEL_192:
          __break(1u);
LABEL_193:
          __break(1u);
LABEL_194:
          __break(1u);
LABEL_195:
          __break(1u);
LABEL_196:
          __break(1u);
LABEL_197:
          __break(1u);
LABEL_198:
          __break(1u);
LABEL_199:
          __break(1u);
LABEL_200:
          __break(1u);
LABEL_201:
          __break(1u);
LABEL_202:
          __break(1u);
LABEL_203:
          __break(1u);
LABEL_204:
          __break(1u);
LABEL_205:
          __break(1u);
LABEL_206:
          __break(1u);
LABEL_207:
          __break(1u);
LABEL_208:
          __break(1u);
LABEL_209:
          __break(1u);
LABEL_210:
          __break(1u);
LABEL_211:
          __break(1u);
LABEL_212:
          __break(1u);
LABEL_213:
          __break(1u);
LABEL_214:
          __break(1u);
LABEL_215:
          __break(1u);
LABEL_216:
          __break(1u);
LABEL_217:
          __break(1u);
        }
        uint64_t v53 = HIDWORD(v7) - (int)v7;
LABEL_70:
        sub_1C8CA3CF8(v7, v6);
        break;
      case 2uLL:
        uint64_t v55 = *(void *)(v7 + 16);
        uint64_t v54 = *(void *)(v7 + 24);
        uint64_t v53 = v54 - v55;
        if (!__OFSUB__(v54, v55)) {
          goto LABEL_70;
        }
        goto LABEL_188;
      case 3uLL:
        break;
      default:
        uint64_t v53 = BYTE6(v6);
        break;
    }
    unint64_t v56 = v11 >> 62;
    switch(v56)
    {
      case 1uLL:
        LODWORD(v57) = HIDWORD(v137) - v137;
        if (__OFSUB__(HIDWORD(v137), v137)) {
          goto LABEL_189;
        }
        uint64_t v57 = (int)v57;
LABEL_76:
        if (v53 != v57)
        {
LABEL_177:
          sub_1C8CA3D5C(v7, v6);
          uint64_t v10 = v137;
          goto LABEL_184;
        }
        if (v53 < 1)
        {
LABEL_7:
          sub_1C8CA3D5C(v7, v6);
          sub_1C8CA3D5C(v137, v138);
          swift_release();
          sub_1C8CA3D5C(v7, v6);
          swift_release();
        }
        else
        {
          switch(v6 >> 62)
          {
            case 1uLL:
              uint64_t v133 = v3;
              if ((int)v7 > v7 >> 32) {
                goto LABEL_191;
              }
              sub_1C8CA3CF8(v137, v138);
              uint64_t v68 = sub_1C8D88110();
              if (v68)
              {
                uint64_t v69 = v68;
                uint64_t v70 = sub_1C8D88140();
                if (__OFSUB__((int)v7, v70)) {
                  goto LABEL_197;
                }
                uint64_t v71 = (const void *)(v69 + (int)v7 - v70);
              }
              else
              {
                uint64_t v71 = 0;
              }
              sub_1C8D88130();
              if (!v56)
              {
                *(void *)long long __s1 = v137;
                *(_DWORD *)&__s1[8] = v138;
                *(_WORD *)&__s1[12] = WORD2(v138);
                if (!v71) {
                  goto LABEL_231;
                }
                int v82 = memcmp(v71, __s1, BYTE6(v138));
                sub_1C8CA3D5C(v137, v138);
                sub_1C8CA3D5C(v7, v6);
                sub_1C8CA3D5C(v137, v138);
                swift_release();
                sub_1C8CA3D5C(v7, v6);
                swift_release();
LABEL_148:
                uint64_t v3 = v133;
                if (v82) {
                  return 0;
                }
                break;
              }
              unint64_t v90 = v6;
              if (v56 == 1)
              {
                if (v137 >> 32 < (int)v137) {
                  goto LABEL_206;
                }
                swift_retain();
                uint64_t v91 = (char *)sub_1C8D88110();
                if (v91)
                {
                  uint64_t v92 = sub_1C8D88140();
                  if (__OFSUB__((int)v137, v92)) {
                    goto LABEL_215;
                  }
                  v91 += (int)v137 - v92;
                }
                uint64_t v93 = sub_1C8D88130();
                if (v93 >= (v137 >> 32) - (int)v137) {
                  size_t v94 = (v137 >> 32) - (int)v137;
                }
                else {
                  size_t v94 = v93;
                }
                if (!v71) {
                  goto LABEL_222;
                }
                if (!v91) {
                  goto LABEL_223;
                }
                int v82 = memcmp(v71, v91, v94);
                sub_1C8CA3D5C(v137, v138);
                sub_1C8CA3D5C(v137, v138);
                sub_1C8CA3D5C(v7, v6);
                sub_1C8CA3D5C(v137, v138);
                swift_release();
                uint64_t v83 = v7;
                unint64_t v84 = v6;
LABEL_147:
                sub_1C8CA3D5C(v83, v84);
                swift_release();
                uint64_t v2 = v128;
                goto LABEL_148;
              }
              uint64_t v136 = v7;
              uint64_t v113 = *(void *)(v137 + 16);
              uint64_t v114 = *(void *)(v137 + 24);
              swift_retain();
              swift_retain();
              uint64_t v115 = sub_1C8D88110();
              if (v115)
              {
                uint64_t v116 = v115;
                uint64_t v117 = sub_1C8D88140();
                if (__OFSUB__(v113, v117)) {
                  goto LABEL_214;
                }
                v118 = (const void *)(v116 + v113 - v117);
              }
              else
              {
                v118 = 0;
              }
              if (__OFSUB__(v114, v113)) {
                goto LABEL_207;
              }
              uint64_t v123 = sub_1C8D88130();
              if (v123 >= v114 - v113) {
                size_t v124 = v114 - v113;
              }
              else {
                size_t v124 = v123;
              }
              if (!v71) {
                goto LABEL_229;
              }
              unint64_t v121 = v90;
              uint64_t v2 = v128;
              if (!v118) {
                goto LABEL_230;
              }
              int v106 = memcmp(v71, v118, v124);
              swift_release();
              swift_release();
              sub_1C8CA3D5C(v137, v138);
              sub_1C8CA3D5C(v136, v121);
              sub_1C8CA3D5C(v137, v138);
              swift_release();
              uint64_t v122 = v136;
LABEL_174:
              sub_1C8CA3D5C(v122, v121);
              swift_release();
LABEL_175:
              uint64_t v3 = v133;
              if (v106) {
                return 0;
              }
              break;
            case 2uLL:
              uint64_t v133 = v3;
              unint64_t v72 = v6;
              uint64_t v73 = *(void *)(v7 + 16);
              sub_1C8CA3CF8(v137, v138);
              swift_retain();
              swift_retain();
              uint64_t v74 = sub_1C8D88110();
              uint64_t v135 = v7;
              if (v74)
              {
                uint64_t v75 = v74;
                uint64_t v76 = sub_1C8D88140();
                if (__OFSUB__(v73, v76)) {
                  goto LABEL_196;
                }
                unint64_t v77 = (const void *)(v75 + v73 - v76);
              }
              else
              {
                unint64_t v77 = 0;
              }
              sub_1C8D88130();
              if (!v56)
              {
                *(void *)long long __s1 = v137;
                *(_DWORD *)&__s1[8] = v138;
                *(_WORD *)&__s1[12] = WORD2(v138);
                if (!v77) {
                  goto LABEL_226;
                }
                int v82 = memcmp(v77, __s1, BYTE6(v138));
                swift_release();
                swift_release();
                sub_1C8CA3D5C(v137, v138);
                sub_1C8CA3D5C(v135, v72);
                sub_1C8CA3D5C(v137, v138);
                swift_release();
                uint64_t v83 = v135;
                unint64_t v84 = v72;
                goto LABEL_147;
              }
              if (v56 == 1)
              {
                if (v137 >> 32 < (int)v137) {
                  goto LABEL_200;
                }
                swift_retain();
                __int16 v86 = (char *)sub_1C8D88110();
                if (v86)
                {
                  uint64_t v87 = sub_1C8D88140();
                  if (__OFSUB__((int)v137, v87)) {
                    goto LABEL_213;
                  }
                  v86 += (int)v137 - v87;
                }
                uint64_t v88 = sub_1C8D88130();
                if (v88 >= (v137 >> 32) - (int)v137) {
                  size_t v89 = (v137 >> 32) - (int)v137;
                }
                else {
                  size_t v89 = v88;
                }
                if (!v77) {
                  goto LABEL_220;
                }
                if (!v86) {
                  goto LABEL_221;
                }
                int v82 = memcmp(v77, v86, v89);
                sub_1C8CA3D5C(v137, v138);
                swift_release();
                swift_release();
                sub_1C8CA3D5C(v137, v138);
                sub_1C8CA3D5C(v135, v72);
                sub_1C8CA3D5C(v137, v138);
                swift_release();
                uint64_t v83 = v135;
                unint64_t v84 = v72;
                goto LABEL_147;
              }
              uint64_t v107 = *(void *)(v137 + 16);
              uint64_t v108 = *(void *)(v137 + 24);
              swift_retain();
              swift_retain();
              uint64_t v109 = sub_1C8D88110();
              if (v109)
              {
                uint64_t v110 = v109;
                uint64_t v111 = sub_1C8D88140();
                if (__OFSUB__(v107, v111)) {
                  goto LABEL_212;
                }
                uint64_t v112 = (const void *)(v110 + v107 - v111);
              }
              else
              {
                uint64_t v112 = 0;
              }
              if (__OFSUB__(v108, v107)) {
                goto LABEL_205;
              }
              uint64_t v119 = sub_1C8D88130();
              if (v119 >= v108 - v107) {
                size_t v120 = v108 - v107;
              }
              else {
                size_t v120 = v119;
              }
              if (!v77) {
                goto LABEL_227;
              }
              unint64_t v121 = v72;
              uint64_t v2 = v128;
              if (!v112) {
                goto LABEL_228;
              }
              int v106 = memcmp(v77, v112, v120);
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              sub_1C8CA3D5C(v137, v138);
              sub_1C8CA3D5C(v135, v121);
              sub_1C8CA3D5C(v137, v138);
              swift_release();
              uint64_t v122 = v135;
              goto LABEL_174;
            case 3uLL:
              *(void *)&__s1[6] = 0;
              *(void *)long long __s1 = 0;
              if (!v56) {
                goto LABEL_102;
              }
              uint64_t v133 = v3;
              uint64_t v60 = v7;
              unint64_t v61 = v6;
              if (v56 == 1)
              {
                uint64_t v62 = (v137 >> 32) - (int)v137;
                unint64_t v63 = v138;
                if (v137 >> 32 < (int)v137) {
                  goto LABEL_199;
                }
                sub_1C8CA3CF8(v137, v138);
                uint64_t v78 = sub_1C8D88110();
                if (!v78) {
                  goto LABEL_219;
                }
                uint64_t v65 = v78;
                uint64_t v79 = sub_1C8D88140();
                uint64_t v67 = (int)v137 - v79;
                if (__OFSUB__((int)v137, v79)) {
                  goto LABEL_204;
                }
LABEL_98:
                uint64_t v80 = sub_1C8D88130();
                if (v80 >= v62) {
                  size_t v81 = v62;
                }
                else {
                  size_t v81 = v80;
                }
                int v82 = memcmp(__s1, (const void *)(v65 + v67), v81);
                sub_1C8CA3D5C(v137, v63);
                sub_1C8CA3D5C(v60, v61);
                sub_1C8CA3D5C(v137, v63);
                swift_release();
                uint64_t v83 = v60;
                unint64_t v84 = v61;
                goto LABEL_147;
              }
              unint64_t v95 = v138;
              uint64_t v102 = *(void *)(v137 + 16);
              uint64_t v103 = *(void *)(v137 + 24);
              sub_1C8CA3CF8(v137, v138);
              swift_retain();
              swift_retain();
              uint64_t v98 = (char *)sub_1C8D88110();
              if (v98)
              {
                uint64_t v104 = sub_1C8D88140();
                if (__OFSUB__(v102, v104)) {
                  goto LABEL_211;
                }
                v98 += v102 - v104;
              }
              BOOL v43 = __OFSUB__(v103, v102);
              int64_t v100 = v103 - v102;
              if (v43) {
                goto LABEL_202;
              }
              uint64_t v101 = sub_1C8D88130();
              if (!v98) {
                goto LABEL_225;
              }
LABEL_141:
              if (v101 >= v100) {
                size_t v105 = v100;
              }
              else {
                size_t v105 = v101;
              }
              int v106 = memcmp(__s1, v98, v105);
              swift_release();
              swift_release();
              sub_1C8CA3D5C(v137, v95);
              sub_1C8CA3D5C(v60, v61);
              sub_1C8CA3D5C(v137, v95);
              swift_release();
              sub_1C8CA3D5C(v60, v61);
              swift_release();
              uint64_t v2 = v128;
              goto LABEL_175;
            default:
              *(void *)long long __s1 = v7;
              *(_WORD *)&__s1[8] = v6;
              __s1[10] = BYTE2(v6);
              __s1[11] = BYTE3(v6);
              __s1[12] = BYTE4(v6);
              __s1[13] = BYTE5(v6);
              if (!v56)
              {
LABEL_102:
                uint64_t __s2 = v137;
                LODWORD(v140) = v138;
                WORD2(v140) = WORD2(v138);
                int v85 = memcmp(__s1, &__s2, BYTE6(v138));
                sub_1C8CA3D5C(v7, v6);
                sub_1C8CA3D5C(v137, v138);
                swift_release();
                sub_1C8CA3D5C(v7, v6);
                swift_release();
                if (v85) {
                  return 0;
                }
                break;
              }
              uint64_t v133 = v3;
              uint64_t v60 = v7;
              unint64_t v61 = v6;
              if (v56 == 1)
              {
                uint64_t v62 = (v137 >> 32) - (int)v137;
                unint64_t v63 = v138;
                if (v137 >> 32 < (int)v137) {
                  goto LABEL_198;
                }
                sub_1C8CA3CF8(v137, v138);
                uint64_t v64 = sub_1C8D88110();
                if (!v64)
                {
                  sub_1C8D88130();
                  __break(1u);
LABEL_219:
                  sub_1C8D88130();
                  __break(1u);
LABEL_220:
                  __break(1u);
LABEL_221:
                  __break(1u);
LABEL_222:
                  __break(1u);
LABEL_223:
                  __break(1u);
LABEL_224:
                  __break(1u);
LABEL_225:
                  __break(1u);
LABEL_226:
                  __break(1u);
LABEL_227:
                  __break(1u);
LABEL_228:
                  __break(1u);
LABEL_229:
                  __break(1u);
LABEL_230:
                  __break(1u);
LABEL_231:
                  __break(1u);
                  JUMPOUT(0x1C8D00618);
                }
                uint64_t v65 = v64;
                uint64_t v66 = sub_1C8D88140();
                uint64_t v67 = (int)v137 - v66;
                if (__OFSUB__((int)v137, v66)) {
                  goto LABEL_203;
                }
                goto LABEL_98;
              }
              unint64_t v95 = v138;
              uint64_t v96 = *(void *)(v137 + 16);
              uint64_t v97 = *(void *)(v137 + 24);
              sub_1C8CA3CF8(v137, v138);
              swift_retain();
              swift_retain();
              uint64_t v98 = (char *)sub_1C8D88110();
              if (v98)
              {
                uint64_t v99 = sub_1C8D88140();
                if (__OFSUB__(v96, v99)) {
                  goto LABEL_210;
                }
                v98 += v96 - v99;
              }
              BOOL v43 = __OFSUB__(v97, v96);
              int64_t v100 = v97 - v96;
              if (v43) {
                goto LABEL_201;
              }
              uint64_t v101 = sub_1C8D88130();
              if (!v98) {
                goto LABEL_224;
              }
              goto LABEL_141;
          }
        }
        uint64_t result = 1;
        if (v3 == v2) {
          return result;
        }
        break;
      case 2uLL:
        uint64_t v59 = *(void *)(v137 + 16);
        uint64_t v58 = *(void *)(v137 + 24);
        BOOL v43 = __OFSUB__(v58, v59);
        uint64_t v57 = v58 - v59;
        if (!v43) {
          goto LABEL_76;
        }
        goto LABEL_190;
      case 3uLL:
        if (!v53) {
          goto LABEL_7;
        }
        goto LABEL_177;
      default:
        uint64_t v57 = BYTE6(v138);
        goto LABEL_76;
    }
  }
  if (!v20)
  {
    sub_1C8CEF6AC(v17, v18, v19);
    sub_1C8CA3CF8(v134, v6);
    swift_retain();
    sub_1C8CA3CF8(v10, v138);
    swift_retain();
    sub_1C8CEF6AC(v17, v18, v19);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    sub_1C8CA3D5C(v18, v19);
    swift_bridgeObjectRelease();
    uint64_t v20 = 0;
LABEL_179:
    sub_1C8CEF6AC(v20, v127, v21);
    sub_1C8CEF708(v17, v18, v19);
    sub_1C8CEF708(v20, v127, v21);
    goto LABEL_183;
  }
  uint64_t v22 = *(void *)(v17 + 16);
  unint64_t v126 = v6;
  if (v22 != *(void *)(v20 + 16))
  {
    sub_1C8CEF6AC(v17, v18, v19);
    sub_1C8CA3CF8(v134, v6);
    swift_retain();
    sub_1C8CA3CF8(v137, v138);
    swift_retain();
    sub_1C8CEF6AC(v17, v18, v19);
    swift_retain();
    swift_retain();
    goto LABEL_182;
  }
  uint64_t v125 = v12[7];
  if (!v22)
  {
    sub_1C8CEF6AC(v17, v18, v19);
    sub_1C8CA3CF8(v134, v6);
    swift_retain();
    sub_1C8CA3CF8(v137, v138);
    swift_retain();
    sub_1C8CEF6AC(v17, v18, v19);
    swift_retain();
    swift_retain();
    unint64_t v23 = v21;
    goto LABEL_32;
  }
  sub_1C8CEF6AC(v17, v18, v19);
  sub_1C8CA3CF8(v134, v6);
  swift_retain();
  sub_1C8CA3CF8(v137, v138);
  swift_retain();
  sub_1C8CEF6AC(v17, v18, v19);
  swift_retain();
  swift_retain();
  unint64_t v23 = v21;
  if (v17 == v20)
  {
LABEL_32:
    uint64_t v37 = 0;
    switch(v19 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v18), v18)) {
          goto LABEL_192;
        }
        uint64_t v37 = HIDWORD(v18) - (int)v18;
LABEL_37:
        sub_1C8CA3CF8(v18, v19);
        break;
      case 2uLL:
        uint64_t v39 = *(void *)(v18 + 16);
        uint64_t v38 = *(void *)(v18 + 24);
        uint64_t v37 = v38 - v39;
        if (!__OFSUB__(v38, v39)) {
          goto LABEL_37;
        }
        goto LABEL_193;
      case 3uLL:
        break;
      default:
        uint64_t v37 = BYTE6(v19);
        break;
    }
    switch(v23 >> 62)
    {
      case 1uLL:
        LODWORD(v40) = HIDWORD(v127) - v127;
        if (__OFSUB__(HIDWORD(v127), v127)) {
          goto LABEL_194;
        }
        uint64_t v40 = (int)v40;
LABEL_43:
        if (v37 != v40)
        {
LABEL_181:
          sub_1C8CA3D5C(v18, v19);
          goto LABEL_182;
        }
        if (v37 < 1)
        {
LABEL_48:
          sub_1C8CA3D5C(v18, v19);
        }
        else
        {
          switch(v19 >> 62)
          {
            case 1uLL:
              if (v18 >> 32 < (int)v18) {
                goto LABEL_208;
              }
              sub_1C8CA3CF8(v18, v19);
              sub_1C8CA3CF8(v127, v23);
              uint64_t v45 = sub_1C8D88110();
              if (!v45) {
                goto LABEL_53;
              }
              uint64_t v46 = sub_1C8D88140();
              if (__OFSUB__((int)v18, v46)) {
                goto LABEL_217;
              }
              v45 += (int)v18 - v46;
LABEL_53:
              sub_1C8D88130();
              sub_1C8D01BB8(v45, v127, v23, __s1);
              sub_1C8CA3D5C(v18, v19);
              uint64_t v47 = v127;
              break;
            case 2uLL:
              uint64_t v48 = *(void *)(v18 + 16);
              uint64_t v49 = *(void *)(v18 + 24);
              sub_1C8CA3CF8(v127, v23);
              swift_retain();
              swift_retain();
              uint64_t v50 = sub_1C8D88110();
              if (!v50) {
                goto LABEL_57;
              }
              uint64_t v51 = sub_1C8D88140();
              if (__OFSUB__(v48, v51)) {
                goto LABEL_216;
              }
              v50 += v48 - v51;
LABEL_57:
              if (__OFSUB__(v49, v48)) {
                goto LABEL_209;
              }
              sub_1C8D88130();
              sub_1C8D01BB8(v50, v127, v23, __s1);
              swift_release();
              swift_release();
              uint64_t v47 = v127;
              break;
            case 3uLL:
              *(void *)&__s1[6] = 0;
              *(void *)long long __s1 = 0;
              sub_1C8CA3CF8(v127, v23);
              sub_1C8D01BB8((uint64_t)__s1, v127, v23, (char *)&__s2);
              uint64_t v44 = v127;
              goto LABEL_62;
            default:
              *(void *)long long __s1 = v18;
              *(_WORD *)&__s1[8] = v19;
              __s1[10] = BYTE2(v19);
              __s1[11] = BYTE3(v19);
              __s1[12] = BYTE4(v19);
              __s1[13] = BYTE5(v19);
              sub_1C8CA3CF8(v127, v23);
              sub_1C8D01BB8((uint64_t)__s1, v127, v23, (char *)&__s2);
              uint64_t v44 = v127;
LABEL_62:
              sub_1C8CA3D5C(v44, v23);
              sub_1C8CA3D5C(v18, v19);
              if (__s2) {
                goto LABEL_63;
              }
              goto LABEL_182;
          }
          sub_1C8CA3D5C(v47, v23);
          sub_1C8CA3D5C(v18, v19);
          if ((__s1[0] & 1) == 0) {
            goto LABEL_182;
          }
        }
LABEL_63:
        *(void *)long long __s1 = v131;
        uint64_t __s2 = v125;
        char v52 = static ExtensionFieldValueSet.== infix(_:_:)(__s1, &__s2);
        swift_bridgeObjectRelease();
        sub_1C8CA3D5C(v18, v19);
        swift_bridgeObjectRelease();
        sub_1C8CEF708(v17, v18, v19);
        unint64_t v6 = v126;
        uint64_t v10 = v137;
        if ((v52 & 1) == 0) {
          goto LABEL_183;
        }
        break;
      case 2uLL:
        uint64_t v42 = *(void *)(v127 + 16);
        uint64_t v41 = *(void *)(v127 + 24);
        BOOL v43 = __OFSUB__(v41, v42);
        uint64_t v40 = v41 - v42;
        if (!v43) {
          goto LABEL_43;
        }
        goto LABEL_195;
      case 3uLL:
        if (!v37) {
          goto LABEL_48;
        }
        goto LABEL_181;
      default:
        uint64_t v40 = BYTE6(v23);
        goto LABEL_43;
    }
    goto LABEL_64;
  }
  uint64_t v24 = 0;
  while (1)
  {
    uint64_t v25 = *(void *)(v17 + v24 + 72);
    char v26 = *(unsigned char *)(v17 + v24 + 80);
    uint64_t v27 = *(void *)(v17 + v24 + 88);
    char v28 = *(unsigned char *)(v17 + v24 + 96);
    uint64_t v29 = *(void *)(v17 + v24 + 104);
    char v30 = *(unsigned char *)(v17 + v24 + 112);
    *(void *)long long __s1 = *(void *)(v17 + v24 + 32);
    *(_OWORD *)&__s1[8] = *(_OWORD *)(v17 + v24 + 40);
    long long v151 = *(_OWORD *)(v17 + v24 + 56);
    uint64_t v152 = v25;
    char v153 = v26;
    uint64_t v154 = v27;
    char v155 = v28;
    uint64_t v156 = v29;
    char v157 = v30;
    long long v158 = *(_OWORD *)(v17 + v24 + 120);
    long long v159 = *(_OWORD *)(v17 + v24 + 136);
    uint64_t v31 = *(void *)(v20 + v24 + 72);
    char v32 = *(unsigned char *)(v20 + v24 + 80);
    uint64_t v33 = *(void *)(v20 + v24 + 88);
    char v34 = *(unsigned char *)(v20 + v24 + 96);
    uint64_t v35 = *(void *)(v20 + v24 + 104);
    char v36 = *(unsigned char *)(v20 + v24 + 112);
    uint64_t __s2 = *(void *)(v20 + v24 + 32);
    long long v140 = *(_OWORD *)(v20 + v24 + 40);
    long long v141 = *(_OWORD *)(v20 + v24 + 56);
    uint64_t v142 = v31;
    char v143 = v32;
    uint64_t v144 = v33;
    char v145 = v34;
    uint64_t v146 = v35;
    char v147 = v36;
    long long v148 = *(_OWORD *)(v20 + v24 + 120);
    long long v149 = *(_OWORD *)(v20 + v24 + 136);
    if ((_s20SiriOntologyProtobuf07Google_C20_UninterpretedOptionV2eeoiySbAC_ACtFZ_0((uint64_t)__s1, (uint64_t)&__s2) & 1) == 0) {
      break;
    }
    v24 += 120;
    if (!--v22) {
      goto LABEL_32;
    }
  }
LABEL_182:
  swift_bridgeObjectRelease();
  sub_1C8CA3D5C(v18, v19);
  swift_bridgeObjectRelease();
  sub_1C8CEF708(v17, v18, v19);
  unint64_t v6 = v126;
  uint64_t v10 = v137;
LABEL_183:
  swift_release();
  swift_release();
  uint64_t v7 = v134;
LABEL_184:
  sub_1C8CA3D5C(v10, v138);
  swift_release();
  sub_1C8CA3D5C(v7, v6);
  swift_release();
  return 0;
}

uint64_t sub_1C8D00678(uint64_t a1, uint64_t a2)
{
  __s1[2] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2)
  {
    uint64_t v3 = a2;
    uint64_t v4 = a1;
    if (a1 != a2)
    {
      uint64_t v5 = 0;
      while (1)
      {
        uint64_t v7 = *(void *)(v4 + v5 + 32);
        unint64_t v6 = *(void *)(v4 + v5 + 40);
        uint64_t v9 = *(void *)(v3 + v5 + 32);
        unint64_t v8 = *(void *)(v3 + v5 + 40);
        if (*(unsigned char *)(v4 + v5 + 52))
        {
          if (!*(unsigned char *)(v3 + v5 + 52)) {
            return 0;
          }
        }
        else
        {
          if (*(_DWORD *)(v4 + v5 + 48) == *(_DWORD *)(v3 + v5 + 48)) {
            char v10 = *(unsigned char *)(v3 + v5 + 52);
          }
          else {
            char v10 = 1;
          }
          if (v10) {
            return 0;
          }
        }
        if (*(unsigned char *)(v4 + v5 + 60))
        {
          if (!*(unsigned char *)(v3 + v5 + 60)) {
            return 0;
          }
        }
        else
        {
          if (*(_DWORD *)(v4 + v5 + 56) == *(_DWORD *)(v3 + v5 + 56)) {
            char v11 = *(unsigned char *)(v3 + v5 + 60);
          }
          else {
            char v11 = 1;
          }
          if (v11) {
            return 0;
          }
        }
        uint64_t v12 = 0;
        switch(v6 >> 62)
        {
          case 1uLL:
            if (__OFSUB__(HIDWORD(v7), v7))
            {
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
LABEL_148:
              __break(1u);
LABEL_149:
              __break(1u);
LABEL_150:
              __break(1u);
LABEL_151:
              __break(1u);
LABEL_152:
              __break(1u);
LABEL_153:
              __break(1u);
LABEL_154:
              __break(1u);
LABEL_155:
              __break(1u);
LABEL_156:
              __break(1u);
LABEL_157:
              __break(1u);
            }
            uint64_t v12 = HIDWORD(v7) - (int)v7;
LABEL_27:
            sub_1C8CA3CF8(*(void *)(v4 + v5 + 32), *(void *)(v4 + v5 + 40));
            break;
          case 2uLL:
            uint64_t v14 = *(void *)(v7 + 16);
            uint64_t v13 = *(void *)(v7 + 24);
            uint64_t v12 = v13 - v14;
            if (!__OFSUB__(v13, v14)) {
              goto LABEL_27;
            }
            goto LABEL_136;
          case 3uLL:
            break;
          default:
            uint64_t v12 = BYTE6(v6);
            break;
        }
        unint64_t v15 = v8 >> 62;
        switch(v8 >> 62)
        {
          case 1uLL:
            LODWORD(v16) = HIDWORD(v9) - v9;
            if (__OFSUB__(HIDWORD(v9), v9)) {
              goto LABEL_137;
            }
            uint64_t v16 = (int)v16;
LABEL_33:
            if (v12 != v16)
            {
LABEL_133:
              sub_1C8CA3D5C(v7, v6);
              return 0;
            }
            if (v12 < 1)
            {
LABEL_6:
              sub_1C8CA3D5C(v7, v6);
            }
            else
            {
              switch(v6 >> 62)
              {
                case 1uLL:
                  if ((int)v7 > v7 >> 32) {
                    goto LABEL_139;
                  }
                  sub_1C8CA3CF8(v9, v8);
                  sub_1C8CA3CF8(v7, v6);
                  sub_1C8CA3CF8(v9, v8);
                  uint64_t v25 = (char *)sub_1C8D88110();
                  if (!v25) {
                    goto LABEL_47;
                  }
                  uint64_t v26 = sub_1C8D88140();
                  if (__OFSUB__((int)v7, v26)) {
                    goto LABEL_141;
                  }
                  v25 += (int)v7 - v26;
LABEL_47:
                  uint64_t v3 = a2;
                  sub_1C8D88130();
                  if (!v15)
                  {
                    __s1[0] = v9;
                    LOWORD(__s1[1]) = v8;
                    BYTE2(__s1[1]) = BYTE2(v8);
                    BYTE3(__s1[1]) = BYTE3(v8);
                    BYTE4(__s1[1]) = BYTE4(v8);
                    BYTE5(__s1[1]) = BYTE5(v8);
                    if (!v25) {
                      goto LABEL_169;
                    }
                    int v31 = memcmp(v25, __s1, BYTE6(v8));
                    goto LABEL_116;
                  }
                  if (v15 == 1)
                  {
                    if (v9 >> 32 < (int)v9) {
                      goto LABEL_149;
                    }
                    swift_retain();
                    uint64_t v27 = (char *)sub_1C8D88110();
                    if (v27)
                    {
                      uint64_t v28 = sub_1C8D88140();
                      if (__OFSUB__((int)v9, v28)) {
                        goto LABEL_157;
                      }
                      v27 += (int)v9 - v28;
                    }
                    uint64_t v29 = sub_1C8D88130();
                    if (v29 >= (v9 >> 32) - (int)v9) {
                      size_t v30 = (v9 >> 32) - (int)v9;
                    }
                    else {
                      size_t v30 = v29;
                    }
                    if (!v25) {
                      goto LABEL_159;
                    }
                    uint64_t v3 = a2;
                    if (!v27) {
                      goto LABEL_160;
                    }
                    int v31 = memcmp(v25, v27, v30);
                    sub_1C8CA3D5C(v9, v8);
                    goto LABEL_116;
                  }
                  uint64_t v64 = *(void *)(v9 + 16);
                  uint64_t v71 = *(void **)(v9 + 24);
                  swift_retain();
                  swift_retain();
                  uint64_t v65 = (char *)sub_1C8D88110();
                  if (v65)
                  {
                    uint64_t v66 = sub_1C8D88140();
                    if (__OFSUB__(v64, v66)) {
                      goto LABEL_156;
                    }
                    v65 += v64 - v66;
                  }
                  if (__OFSUB__(v71, v64)) {
                    goto LABEL_151;
                  }
                  uint64_t v67 = sub_1C8D88130();
                  if (v67 >= (uint64_t)v71 - v64) {
                    size_t v68 = (size_t)v71 - v64;
                  }
                  else {
                    size_t v68 = v67;
                  }
                  uint64_t v3 = a2;
                  if (!v25) {
                    goto LABEL_170;
                  }
                  if (!v65) {
                    goto LABEL_171;
                  }
                  int v55 = memcmp(v25, v65, v68);
                  swift_release();
                  goto LABEL_129;
                case 2uLL:
                  uint64_t v32 = *(void *)(v7 + 16);
                  sub_1C8CA3CF8(v9, v8);
                  sub_1C8CA3CF8(v7, v6);
                  sub_1C8CA3CF8(v9, v8);
                  swift_retain();
                  swift_retain();
                  uint64_t v33 = sub_1C8D88110();
                  if (v33)
                  {
                    uint64_t v34 = v33;
                    uint64_t v35 = sub_1C8D88140();
                    if (__OFSUB__(v32, v35)) {
                      goto LABEL_140;
                    }
                    uint64_t v70 = (void *)(v34 + v32 - v35);
                  }
                  else
                  {
                    uint64_t v70 = 0;
                  }
                  sub_1C8D88130();
                  uint64_t v3 = a2;
                  if (v15)
                  {
                    if (v15 == 1)
                    {
                      if (v9 >> 32 < (int)v9) {
                        goto LABEL_144;
                      }
                      swift_retain();
                      uint64_t v41 = (char *)sub_1C8D88110();
                      if (v41)
                      {
                        uint64_t v42 = sub_1C8D88140();
                        if (__OFSUB__((int)v9, v42)) {
                          goto LABEL_155;
                        }
                        v41 += (int)v9 - v42;
                      }
                      uint64_t v43 = sub_1C8D88130();
                      if (v43 >= (v9 >> 32) - (int)v9) {
                        size_t v44 = (v9 >> 32) - (int)v9;
                      }
                      else {
                        size_t v44 = v43;
                      }
                      if (!v70) {
                        goto LABEL_162;
                      }
                      uint64_t v3 = a2;
                      if (!v41) {
                        goto LABEL_163;
                      }
                      int v31 = memcmp(v70, v41, v44);
                      sub_1C8CA3D5C(v9, v8);
                      swift_release();
                      swift_release();
LABEL_116:
                      sub_1C8CA3D5C(v9, v8);
                      sub_1C8CA3D5C(v7, v6);
                      sub_1C8CA3D5C(v9, v8);
LABEL_117:
                      sub_1C8CA3D5C(v7, v6);
                      if (v31) {
                        return 0;
                      }
                    }
                    else
                    {
                      uint64_t v56 = *(void *)(v9 + 16);
                      uint64_t v57 = *(void *)(v9 + 24);
                      swift_retain();
                      swift_retain();
                      uint64_t v58 = (char *)sub_1C8D88110();
                      if (v58)
                      {
                        uint64_t v59 = sub_1C8D88140();
                        if (__OFSUB__(v56, v59)) {
                          goto LABEL_154;
                        }
                        v58 += v56 - v59;
                      }
                      BOOL v19 = __OFSUB__(v57, v56);
                      int64_t v60 = v57 - v56;
                      if (v19) {
                        goto LABEL_150;
                      }
                      uint64_t v61 = sub_1C8D88130();
                      if (v61 >= v60) {
                        size_t v62 = v60;
                      }
                      else {
                        size_t v62 = v61;
                      }
                      uint64_t v3 = a2;
                      if (!v70) {
                        goto LABEL_167;
                      }
                      if (!v58) {
                        goto LABEL_168;
                      }
                      int v63 = memcmp(v70, v58, v62);
                      swift_release();
                      swift_release();
                      swift_release();
                      swift_release();
                      sub_1C8CA3D5C(v9, v8);
                      sub_1C8CA3D5C(v7, v6);
                      sub_1C8CA3D5C(v9, v8);
                      sub_1C8CA3D5C(v7, v6);
                      if (v63) {
                        return 0;
                      }
                    }
                  }
                  else
                  {
                    __s1[0] = v9;
                    LOWORD(__s1[1]) = v8;
                    BYTE2(__s1[1]) = BYTE2(v8);
                    BYTE3(__s1[1]) = BYTE3(v8);
                    BYTE4(__s1[1]) = BYTE4(v8);
                    BYTE5(__s1[1]) = BYTE5(v8);
                    if (!v70) {
                      goto LABEL_166;
                    }
                    int v55 = memcmp(v70, __s1, BYTE6(v8));
                    swift_release();
LABEL_129:
                    swift_release();
                    sub_1C8CA3D5C(v9, v8);
LABEL_130:
                    sub_1C8CA3D5C(v7, v6);
                    sub_1C8CA3D5C(v9, v8);
                    sub_1C8CA3D5C(v7, v6);
                    if (v55) {
                      return 0;
                    }
                  }
                  break;
                case 3uLL:
                  memset(__s1, 0, 14);
                  if (!v15) {
                    goto LABEL_72;
                  }
                  if (v15 == 1)
                  {
                    uint64_t v20 = (v9 >> 32) - (int)v9;
                    if (v9 >> 32 < (int)v9) {
                      goto LABEL_143;
                    }
                    sub_1C8CA3CF8(v7, v6);
                    sub_1C8CA3CF8(v9, v8);
                    uint64_t v36 = sub_1C8D88110();
                    if (!v36) {
                      goto LABEL_161;
                    }
                    uint64_t v22 = v36;
                    uint64_t v37 = sub_1C8D88140();
                    uint64_t v24 = (int)v9 - v37;
                    if (__OFSUB__((int)v9, v37)) {
                      goto LABEL_148;
                    }
LABEL_67:
                    uint64_t v38 = sub_1C8D88130();
                    if (v38 >= v20) {
                      size_t v39 = v20;
                    }
                    else {
                      size_t v39 = v38;
                    }
                    int v40 = memcmp(__s1, (const void *)(v22 + v24), v39);
                    sub_1C8CA3D5C(v7, v6);
                    sub_1C8CA3D5C(v9, v8);
                    sub_1C8CA3D5C(v7, v6);
                    uint64_t v3 = a2;
                    if (v40) {
                      return 0;
                    }
                    break;
                  }
                  uint64_t v51 = *(void *)(v9 + 16);
                  uint64_t v52 = *(void *)(v9 + 24);
                  sub_1C8CA3CF8(v7, v6);
                  sub_1C8CA3CF8(v9, v8);
                  swift_retain();
                  swift_retain();
                  uint64_t v47 = (char *)sub_1C8D88110();
                  if (v47)
                  {
                    uint64_t v53 = sub_1C8D88140();
                    if (__OFSUB__(v51, v53)) {
                      goto LABEL_153;
                    }
                    v47 += v51 - v53;
                  }
                  BOOL v19 = __OFSUB__(v52, v51);
                  int64_t v49 = v52 - v51;
                  if (v19) {
                    goto LABEL_146;
                  }
                  uint64_t v50 = sub_1C8D88130();
                  uint64_t v3 = a2;
                  if (!v47) {
                    goto LABEL_165;
                  }
LABEL_97:
                  if (v50 >= v49) {
                    size_t v54 = v49;
                  }
                  else {
                    size_t v54 = v50;
                  }
                  int v55 = memcmp(__s1, v47, v54);
                  swift_release();
                  swift_release();
                  goto LABEL_130;
                default:
                  __s1[0] = v7;
                  LOWORD(__s1[1]) = v6;
                  BYTE2(__s1[1]) = BYTE2(v6);
                  BYTE3(__s1[1]) = BYTE3(v6);
                  BYTE4(__s1[1]) = BYTE4(v6);
                  BYTE5(__s1[1]) = BYTE5(v6);
                  if (!v15)
                  {
LABEL_72:
                    uint64_t __s2 = v9;
                    __int16 v75 = v8;
                    char v76 = BYTE2(v8);
                    char v77 = BYTE3(v8);
                    char v78 = BYTE4(v8);
                    char v79 = BYTE5(v8);
                    int v31 = memcmp(__s1, &__s2, BYTE6(v8));
                    goto LABEL_117;
                  }
                  if (v15 == 1)
                  {
                    uint64_t v20 = (v9 >> 32) - (int)v9;
                    if (v9 >> 32 < (int)v9) {
                      goto LABEL_142;
                    }
                    sub_1C8CA3CF8(v7, v6);
                    sub_1C8CA3CF8(v9, v8);
                    uint64_t v21 = sub_1C8D88110();
                    if (!v21)
                    {
                      sub_1C8D88130();
                      __break(1u);
LABEL_159:
                      __break(1u);
LABEL_160:
                      __break(1u);
LABEL_161:
                      sub_1C8D88130();
                      __break(1u);
LABEL_162:
                      __break(1u);
LABEL_163:
                      __break(1u);
LABEL_164:
                      __break(1u);
LABEL_165:
                      __break(1u);
LABEL_166:
                      __break(1u);
LABEL_167:
                      __break(1u);
LABEL_168:
                      __break(1u);
LABEL_169:
                      __break(1u);
LABEL_170:
                      __break(1u);
LABEL_171:
                      __break(1u);
                      JUMPOUT(0x1C8D010B8);
                    }
                    uint64_t v22 = v21;
                    uint64_t v23 = sub_1C8D88140();
                    uint64_t v24 = (int)v9 - v23;
                    if (__OFSUB__((int)v9, v23)) {
                      goto LABEL_147;
                    }
                    goto LABEL_67;
                  }
                  uint64_t v45 = *(void *)(v9 + 16);
                  uint64_t v46 = *(void *)(v9 + 24);
                  sub_1C8CA3CF8(v7, v6);
                  sub_1C8CA3CF8(v9, v8);
                  swift_retain();
                  swift_retain();
                  uint64_t v47 = (char *)sub_1C8D88110();
                  if (v47)
                  {
                    uint64_t v48 = sub_1C8D88140();
                    if (__OFSUB__(v45, v48)) {
                      goto LABEL_152;
                    }
                    v47 += v45 - v48;
                  }
                  BOOL v19 = __OFSUB__(v46, v45);
                  int64_t v49 = v46 - v45;
                  if (v19) {
                    goto LABEL_145;
                  }
                  uint64_t v50 = sub_1C8D88130();
                  uint64_t v3 = a2;
                  if (!v47) {
                    goto LABEL_164;
                  }
                  goto LABEL_97;
              }
            }
            v5 += 32;
            --v2;
            uint64_t v4 = a1;
            if (!v2) {
              return 1;
            }
            break;
          case 2uLL:
            uint64_t v18 = *(void *)(v9 + 16);
            uint64_t v17 = *(void *)(v9 + 24);
            BOOL v19 = __OFSUB__(v17, v18);
            uint64_t v16 = v17 - v18;
            if (!v19) {
              goto LABEL_33;
            }
            goto LABEL_138;
          case 3uLL:
            if (!v12) {
              goto LABEL_6;
            }
            goto LABEL_133;
          default:
            uint64_t v16 = BYTE6(v8);
            goto LABEL_33;
        }
      }
    }
  }
  return 1;
}

uint64_t sub_1C8D010E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  __s1[2] = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v3 || a1 == a2) {
    return 1;
  }
  uint64_t v4 = (uint64_t *)(a2 + 48);
  uint64_t v5 = (uint64_t *)(a1 + 48);
  while (2)
  {
    uint64_t v8 = *(v5 - 2);
    unint64_t v7 = *(v5 - 1);
    uint64_t v9 = *v5;
    uint64_t v11 = *(v4 - 2);
    unint64_t v10 = *(v4 - 1);
    uint64_t v12 = *v4;
    sub_1C8CA3CF8(v8, v7);
    swift_retain();
    sub_1C8CA3CF8(v11, v10);
    if (v9 == v12)
    {
      swift_retain();
    }
    else
    {
      swift_retain_n();
      uint64_t v13 = swift_retain();
      char v14 = a3(v13, v12);
      swift_release();
      swift_release();
      if ((v14 & 1) == 0) {
        goto LABEL_123;
      }
    }
    uint64_t v15 = 0;
    switch(v7 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v8), v8))
        {
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
        }
        uint64_t v15 = HIDWORD(v8) - (int)v8;
LABEL_17:
        sub_1C8CA3CF8(v8, v7);
        break;
      case 2uLL:
        uint64_t v17 = *(void *)(v8 + 16);
        uint64_t v16 = *(void *)(v8 + 24);
        uint64_t v15 = v16 - v17;
        if (!__OFSUB__(v16, v17)) {
          goto LABEL_17;
        }
        goto LABEL_126;
      case 3uLL:
        break;
      default:
        uint64_t v15 = BYTE6(v7);
        break;
    }
    uint64_t v77 = v3;
    unint64_t v18 = v10 >> 62;
    switch(v10 >> 62)
    {
      case 1uLL:
        LODWORD(v19) = HIDWORD(v11) - v11;
        if (__OFSUB__(HIDWORD(v11), v11)) {
          goto LABEL_127;
        }
        uint64_t v19 = (int)v19;
LABEL_23:
        if (v15 == v19)
        {
          if (v15 < 1)
          {
LABEL_6:
            sub_1C8CA3D5C(v8, v7);
            sub_1C8CA3D5C(v11, v10);
            swift_release();
            sub_1C8CA3D5C(v8, v7);
            swift_release();
            uint64_t v6 = v77;
          }
          else
          {
            switch(v7 >> 62)
            {
              case 1uLL:
                if ((int)v8 > v8 >> 32) {
                  goto LABEL_129;
                }
                sub_1C8CA3CF8(v11, v10);
                uint64_t v27 = sub_1C8D88110();
                if (v27)
                {
                  uint64_t v28 = v27;
                  uint64_t v29 = sub_1C8D88140();
                  if (__OFSUB__((int)v8, v29)) {
                    goto LABEL_131;
                  }
                  size_t v30 = (const void *)(v28 + (int)v8 - v29);
                  sub_1C8D88130();
                  if (!v18)
                  {
LABEL_68:
                    __s1[0] = v11;
                    LOWORD(__s1[1]) = v10;
                    BYTE2(__s1[1]) = BYTE2(v10);
                    BYTE3(__s1[1]) = BYTE3(v10);
                    BYTE4(__s1[1]) = BYTE4(v10);
                    BYTE5(__s1[1]) = BYTE5(v10);
                    if (!v30) {
                      goto LABEL_152;
                    }
                    int v46 = memcmp(v30, __s1, BYTE6(v10));
                    goto LABEL_118;
                  }
                }
                else
                {
                  size_t v30 = 0;
                  sub_1C8D88130();
                  if (!v18) {
                    goto LABEL_68;
                  }
                }
                if (v18 == 1)
                {
                  if (v11 >> 32 < (int)v11) {
                    goto LABEL_140;
                  }
                  swift_retain();
                  int v31 = (char *)sub_1C8D88110();
                  if (v31)
                  {
                    uint64_t v32 = sub_1C8D88140();
                    if (__OFSUB__((int)v11, v32)) {
                      goto LABEL_147;
                    }
                    v31 += (int)v11 - v32;
                  }
                  uint64_t v33 = sub_1C8D88130();
                  if (v33 >= (v11 >> 32) - (int)v11) {
                    size_t v34 = (v11 >> 32) - (int)v11;
                  }
                  else {
                    size_t v34 = v33;
                  }
                  if (!v30) {
                    goto LABEL_149;
                  }
                  uint64_t v6 = v77;
                  if (!v31) {
                    goto LABEL_150;
                  }
                  int v35 = memcmp(v30, v31, v34);
                  sub_1C8CA3D5C(v11, v10);
                  sub_1C8CA3D5C(v11, v10);
                  sub_1C8CA3D5C(v8, v7);
                  sub_1C8CA3D5C(v11, v10);
                }
                else
                {
                  uint64_t v64 = *(void *)(v11 + 16);
                  uint64_t v72 = *(void *)(v11 + 24);
                  swift_retain();
                  swift_retain();
                  int64_t v49 = (char *)sub_1C8D88110();
                  if (v49)
                  {
                    uint64_t v65 = sub_1C8D88140();
                    if (__OFSUB__(v64, v65)) {
                      goto LABEL_146;
                    }
                    v49 += v64 - v65;
                  }
                  if (__OFSUB__(v72, v64)) {
                    goto LABEL_141;
                  }
                  uint64_t v66 = sub_1C8D88130();
                  if (v66 >= v72 - v64) {
                    size_t v67 = v72 - v64;
                  }
                  else {
                    size_t v67 = v66;
                  }
                  uint64_t v6 = v77;
                  uint64_t v57 = v30;
                  if (!v30) {
                    goto LABEL_158;
                  }
                  if (!v49) {
                    goto LABEL_159;
                  }
                  size_t v56 = v67;
LABEL_107:
                  int v35 = memcmp(v57, v49, v56);
                  swift_release();
                  swift_release();
                  sub_1C8CA3D5C(v11, v10);
                  sub_1C8CA3D5C(v8, v7);
                  sub_1C8CA3D5C(v11, v10);
                }
                swift_release();
                sub_1C8CA3D5C(v8, v7);
                swift_release();
                if (v35) {
                  return 0;
                }
                break;
              case 2uLL:
                uint64_t v74 = *(char **)(v8 + 16);
                sub_1C8CA3CF8(v11, v10);
                swift_retain();
                swift_retain();
                uint64_t v36 = (char *)sub_1C8D88110();
                if (!v36) {
                  goto LABEL_51;
                }
                uint64_t v37 = sub_1C8D88140();
                if (__OFSUB__(v74, v37)) {
                  goto LABEL_130;
                }
                uint64_t v36 = &v74[(void)v36 - v37];
LABEL_51:
                sub_1C8D88130();
                if (!v18)
                {
                  __s1[0] = v11;
                  LOWORD(__s1[1]) = v10;
                  BYTE2(__s1[1]) = BYTE2(v10);
                  BYTE3(__s1[1]) = BYTE3(v10);
                  BYTE4(__s1[1]) = BYTE4(v10);
                  BYTE5(__s1[1]) = BYTE5(v10);
                  if (!v36) {
                    goto LABEL_155;
                  }
                  int v46 = memcmp(v36, __s1, BYTE6(v10));
LABEL_117:
                  swift_release();
                  swift_release();
                  goto LABEL_118;
                }
                __int16 v75 = v36;
                if (v18 == 1)
                {
                  if (v11 >> 32 < (int)v11) {
                    goto LABEL_134;
                  }
                  swift_retain();
                  uint64_t v38 = sub_1C8D88110();
                  if (v38)
                  {
                    uint64_t v39 = v38;
                    uint64_t v40 = sub_1C8D88140();
                    if (__OFSUB__((int)v11, v40)) {
                      goto LABEL_145;
                    }
                    uint64_t v41 = (const void *)(v39 + (int)v11 - v40);
                  }
                  else
                  {
                    uint64_t v41 = 0;
                  }
                  uint64_t v68 = sub_1C8D88130();
                  if (v68 >= (v11 >> 32) - (int)v11) {
                    size_t v69 = (v11 >> 32) - (int)v11;
                  }
                  else {
                    size_t v69 = v68;
                  }
                  if (!v36) {
                    goto LABEL_160;
                  }
                  if (!v41) {
                    goto LABEL_161;
                  }
                  int v46 = memcmp(v36, v41, v69);
                  sub_1C8CA3D5C(v11, v10);
                  goto LABEL_117;
                }
                uint64_t v58 = *(void *)(v11 + 16);
                uint64_t v71 = *(void *)(v11 + 24);
                swift_retain();
                swift_retain();
                uint64_t v59 = (char *)sub_1C8D88110();
                if (v59)
                {
                  uint64_t v60 = sub_1C8D88140();
                  if (__OFSUB__(v58, v60)) {
                    goto LABEL_144;
                  }
                  v59 += v58 - v60;
                }
                BOOL v22 = __OFSUB__(v71, v58);
                int64_t v61 = v71 - v58;
                if (v22) {
                  goto LABEL_139;
                }
                uint64_t v62 = sub_1C8D88130();
                if (v62 >= v61) {
                  size_t v63 = v61;
                }
                else {
                  size_t v63 = v62;
                }
                if (!v75) {
                  goto LABEL_156;
                }
                if (!v59) {
                  goto LABEL_157;
                }
                int v46 = memcmp(v75, v59, v63);
                swift_release();
                swift_release();
                swift_release();
                swift_release();
LABEL_118:
                sub_1C8CA3D5C(v11, v10);
                sub_1C8CA3D5C(v8, v7);
                sub_1C8CA3D5C(v11, v10);
LABEL_119:
                swift_release();
                sub_1C8CA3D5C(v8, v7);
                swift_release();
                uint64_t v6 = v77;
                if (v46) {
                  return 0;
                }
                break;
              case 3uLL:
                memset(__s1, 0, 14);
                if (!v18) {
                  goto LABEL_66;
                }
                if (v18 == 1)
                {
                  if (v11 >> 32 < (int)v11) {
                    goto LABEL_133;
                  }
                  uint64_t v73 = (void *)((v11 >> 32) - (int)v11);
                  sub_1C8CA3CF8(v11, v10);
                  uint64_t v42 = sub_1C8D88110();
                  if (!v42) {
                    goto LABEL_151;
                  }
                  uint64_t v24 = v42;
                  uint64_t v43 = sub_1C8D88140();
                  uint64_t v26 = (int)v11 - v43;
                  if (__OFSUB__((int)v11, v43)) {
                    goto LABEL_138;
                  }
LABEL_62:
                  uint64_t v44 = sub_1C8D88130();
                  if (v44 >= (uint64_t)v73) {
                    size_t v45 = (size_t)v73;
                  }
                  else {
                    size_t v45 = v44;
                  }
                  int v46 = memcmp(__s1, (const void *)(v24 + v26), v45);
                  goto LABEL_118;
                }
                uint64_t v54 = *(void *)(v11 + 16);
                uint64_t v53 = *(void *)(v11 + 24);
                sub_1C8CA3CF8(v11, v10);
                swift_retain();
                swift_retain();
                int64_t v49 = (char *)sub_1C8D88110();
                if (v49)
                {
                  uint64_t v55 = sub_1C8D88140();
                  if (__OFSUB__(v54, v55)) {
                    goto LABEL_143;
                  }
                  v49 += v54 - v55;
                }
                BOOL v22 = __OFSUB__(v53, v54);
                int64_t v51 = v53 - v54;
                if (v22) {
                  goto LABEL_136;
                }
                uint64_t v52 = sub_1C8D88130();
                uint64_t v6 = v77;
                if (!v49) {
                  goto LABEL_154;
                }
LABEL_81:
                if (v52 >= v51) {
                  size_t v56 = v51;
                }
                else {
                  size_t v56 = v52;
                }
                uint64_t v57 = __s1;
                goto LABEL_107;
              default:
                __s1[0] = v8;
                LOWORD(__s1[1]) = v7;
                BYTE2(__s1[1]) = BYTE2(v7);
                BYTE3(__s1[1]) = BYTE3(v7);
                BYTE4(__s1[1]) = BYTE4(v7);
                BYTE5(__s1[1]) = BYTE5(v7);
                if (!v18)
                {
LABEL_66:
                  uint64_t __s2 = v11;
                  __int16 v79 = v10;
                  char v80 = BYTE2(v10);
                  char v81 = BYTE3(v10);
                  char v82 = BYTE4(v10);
                  char v83 = BYTE5(v10);
                  int v46 = memcmp(__s1, &__s2, BYTE6(v10));
                  sub_1C8CA3D5C(v8, v7);
                  sub_1C8CA3D5C(v11, v10);
                  goto LABEL_119;
                }
                if (v18 == 1)
                {
                  if (v11 >> 32 < (int)v11) {
                    goto LABEL_132;
                  }
                  uint64_t v73 = (void *)((v11 >> 32) - (int)v11);
                  sub_1C8CA3CF8(v11, v10);
                  uint64_t v23 = sub_1C8D88110();
                  if (!v23)
                  {
                    sub_1C8D88130();
                    __break(1u);
LABEL_149:
                    __break(1u);
LABEL_150:
                    __break(1u);
LABEL_151:
                    sub_1C8D88130();
                    __break(1u);
LABEL_152:
                    __break(1u);
LABEL_153:
                    __break(1u);
LABEL_154:
                    __break(1u);
LABEL_155:
                    __break(1u);
LABEL_156:
                    __break(1u);
LABEL_157:
                    __break(1u);
LABEL_158:
                    __break(1u);
LABEL_159:
                    __break(1u);
LABEL_160:
                    __break(1u);
LABEL_161:
                    __break(1u);
                    JUMPOUT(0x1C8D01B88);
                  }
                  uint64_t v24 = v23;
                  uint64_t v25 = sub_1C8D88140();
                  uint64_t v26 = (int)v11 - v25;
                  if (__OFSUB__((int)v11, v25)) {
                    goto LABEL_137;
                  }
                  goto LABEL_62;
                }
                uint64_t v48 = *(void *)(v11 + 16);
                uint64_t v47 = *(void *)(v11 + 24);
                sub_1C8CA3CF8(v11, v10);
                swift_retain();
                swift_retain();
                int64_t v49 = (char *)sub_1C8D88110();
                if (v49)
                {
                  uint64_t v50 = sub_1C8D88140();
                  if (__OFSUB__(v48, v50)) {
                    goto LABEL_142;
                  }
                  v49 += v48 - v50;
                }
                BOOL v22 = __OFSUB__(v47, v48);
                int64_t v51 = v47 - v48;
                if (v22) {
                  goto LABEL_135;
                }
                uint64_t v52 = sub_1C8D88130();
                uint64_t v6 = v77;
                if (!v49) {
                  goto LABEL_153;
                }
                goto LABEL_81;
            }
          }
          v4 += 3;
          v5 += 3;
          uint64_t v3 = v6 - 1;
          if (!v3) {
            return 1;
          }
          continue;
        }
LABEL_122:
        sub_1C8CA3D5C(v8, v7);
LABEL_123:
        sub_1C8CA3D5C(v11, v10);
        swift_release();
        sub_1C8CA3D5C(v8, v7);
        swift_release();
        return 0;
      case 2uLL:
        uint64_t v21 = *(void *)(v11 + 16);
        uint64_t v20 = *(void *)(v11 + 24);
        BOOL v22 = __OFSUB__(v20, v21);
        uint64_t v19 = v20 - v21;
        if (!v22) {
          goto LABEL_23;
        }
        goto LABEL_128;
      case 3uLL:
        if (!v15) {
          goto LABEL_6;
        }
        goto LABEL_122;
      default:
        uint64_t v19 = BYTE6(v10);
        goto LABEL_23;
    }
  }
}

uint64_t sub_1C8D01BB8@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  unint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_1C8CA3CF8(a2, a3);
      unint64_t v10 = (char *)sub_1C8D88110();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_1C8D88140();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_1C8D88130();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x1C8D01E1CLL);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      long long __s1 = sub_1C8CA3D5C(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)sub_1C8D88110();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_1C8D88140();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_1C8D88130();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      long long __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        long long __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_1C8D01E2C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_1C8D01BB8((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_1C8D01F04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_1C8D88110();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_1C8D88140();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1C8D88130();
  sub_1C8D01BB8(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_1C8D01FBC(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x1C8D02224);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_27;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v17 = 1;
            }
            else
            {
              switch(a2 >> 62)
              {
                case 1uLL:
                  if (a1 >> 32 < (int)a1) {
                    goto LABEL_29;
                  }
                  sub_1C8CA3CF8(a3, a4);
                  sub_1C8CA3CF8(a1, a2);
                  char v17 = sub_1C8D01F04((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
                  sub_1C8CA3D5C(a3, a4);
                  uint64_t v18 = a1;
                  unint64_t v19 = a2;
                  break;
                case 2uLL:
                  uint64_t v20 = a2 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v21 = *(void *)(a1 + 16);
                  uint64_t v22 = *(void *)(a1 + 24);
                  sub_1C8CA3CF8(a3, a4);
                  swift_retain();
                  swift_retain();
                  char v17 = sub_1C8D01F04(v21, v22, v20, a3, a4);
                  sub_1C8CA3D5C(a3, a4);
                  swift_release();
                  swift_release();
                  return v17 & 1;
                case 3uLL:
                  sub_1C8CA3CF8(a3, a4);
                  uint64_t v16 = 0;
                  uint64_t v15 = 0;
                  goto LABEL_22;
                default:
                  sub_1C8CA3CF8(a3, a4);
                  uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFLL;
                  uint64_t v16 = a1;
LABEL_22:
                  char v17 = sub_1C8D01E2C(v16, v15, a3, a4);
                  uint64_t v18 = a3;
                  unint64_t v19 = a4;
                  break;
              }
              sub_1C8CA3D5C(v18, v19);
            }
          }
          else
          {
            char v17 = 0;
          }
          return v17 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_28;
        case 3uLL:
          char v17 = v8 == 0;
          return v17 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t _s20SiriOntologyProtobuf07Google_C20_UninterpretedOptionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 24);
  unint64_t v22 = *(void *)(a1 + 16);
  uint64_t v23 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  char v5 = *(unsigned char *)(a1 + 48);
  uint64_t v33 = *(void *)(a1 + 56);
  double v6 = *(double *)(a1 + 72);
  char v34 = *(unsigned char *)(a1 + 80);
  char v35 = *(unsigned char *)(a1 + 64);
  uint64_t v29 = *(void *)(a1 + 88);
  unint64_t v31 = *(void *)(a1 + 96);
  uint64_t v25 = *(void *)(a1 + 104);
  uint64_t v21 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 24);
  unint64_t v20 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  int v10 = *(unsigned __int8 *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  int v12 = *(unsigned __int8 *)(a2 + 64);
  double v13 = *(double *)(a2 + 72);
  int v32 = *(unsigned __int8 *)(a2 + 80);
  uint64_t v27 = *(void *)(a1 + 112);
  uint64_t v28 = *(void *)(a2 + 88);
  unint64_t v30 = *(void *)(a2 + 96);
  uint64_t v24 = *(void *)(a2 + 104);
  uint64_t v26 = *(void *)(a2 + 112);
  if ((sub_1C8CFA10C(*(void *)a1, *(void *)a2) & 1) == 0) {
    return 0;
  }
  if (v4)
  {
    if (!v8 || (v2 != v7 || v4 != v8) && (sub_1C8D887C0() & 1) == 0) {
      return 0;
    }
  }
  else if (v8)
  {
    return 0;
  }
  if (v5)
  {
    if (!v10) {
      return 0;
    }
  }
  else
  {
    if (v3 == v9) {
      char v14 = v10;
    }
    else {
      char v14 = 1;
    }
    if (v14) {
      return 0;
    }
  }
  if (v35)
  {
    if (!v12) {
      return 0;
    }
  }
  else
  {
    if (v33 == v11) {
      char v15 = v12;
    }
    else {
      char v15 = 1;
    }
    if (v15) {
      return 0;
    }
  }
  if (v34)
  {
    if (!v32) {
      return 0;
    }
  }
  else
  {
    char v16 = v32;
    if (v6 != v13) {
      char v16 = 1;
    }
    if (v16) {
      return 0;
    }
  }
  if (v31 >> 60 != 15)
  {
    if (v30 >> 60 != 15)
    {
      sub_1C8D02DB8(v29, v31);
      sub_1C8D02DB8(v28, v30);
      char v17 = sub_1C8D01FBC(v29, v31, v28, v30);
      sub_1C8CAA9F0(v28, v30);
      sub_1C8CAA9F0(v29, v31);
      if ((v17 & 1) == 0) {
        return 0;
      }
      goto LABEL_35;
    }
LABEL_33:
    sub_1C8D02DB8(v29, v31);
    sub_1C8D02DB8(v28, v30);
    sub_1C8CAA9F0(v29, v31);
    sub_1C8CAA9F0(v28, v30);
    return 0;
  }
  if (v30 >> 60 != 15) {
    goto LABEL_33;
  }
LABEL_35:
  if (v27)
  {
    if (!v26 || (v25 != v24 || v27 != v26) && (sub_1C8D887C0() & 1) == 0) {
      return 0;
    }
LABEL_40:
    sub_1C8CA3CF8(v23, v22);
    sub_1C8CA3CF8(v21, v20);
    char v18 = sub_1C8D01FBC(v23, v22, v21, v20);
    sub_1C8CA3D5C(v21, v20);
    sub_1C8CA3D5C(v23, v22);
    return v18 & 1;
  }
  if (!v26) {
    goto LABEL_40;
  }
  return 0;
}

uint64_t _s20SiriOntologyProtobuf07Google_C15_SourceCodeInfoV8LocationV2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[5];
  unint64_t v16 = a1[4];
  uint64_t v17 = a1[3];
  uint64_t v4 = a1[6];
  uint64_t v5 = a1[7];
  uint64_t v6 = a1[8];
  uint64_t v7 = a2[1];
  char v18 = (void *)a2[2];
  unint64_t v19 = (void *)a1[2];
  uint64_t v8 = a2[5];
  unint64_t v14 = a2[4];
  uint64_t v15 = a2[3];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  if (!sub_1C8CFB550(*a1, *a2) || !sub_1C8CFB550(v2, v7)) {
    return 0;
  }
  if (v4)
  {
    if (!v9 || (v3 != v8 || v4 != v9) && (sub_1C8D887C0() & 1) == 0) {
      return 0;
    }
  }
  else if (v9)
  {
    return 0;
  }
  if (v6)
  {
    if (!v11 || (v5 != v10 || v6 != v11) && (sub_1C8D887C0() & 1) == 0) {
      return 0;
    }
  }
  else if (v11)
  {
    return 0;
  }
  if (sub_1C8CFBFEC(v19, v18))
  {
    sub_1C8CA3CF8(v17, v16);
    sub_1C8CA3CF8(v15, v14);
    char v12 = sub_1C8D01FBC(v17, v16, v15, v14);
    sub_1C8CA3D5C(v15, v14);
    sub_1C8CA3D5C(v17, v16);
    return v12 & 1;
  }
  return 0;
}

uint64_t _s20SiriOntologyProtobuf07Google_C18_GeneratedCodeInfoV10AnnotationV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 24);
  unint64_t v19 = *(void *)(a1 + 16);
  uint64_t v20 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 32);
  int v4 = *(_DWORD *)(a1 + 40);
  char v5 = *(unsigned char *)(a1 + 44);
  int v16 = *(_DWORD *)(a1 + 48);
  char v21 = *(unsigned char *)(a1 + 52);
  uint64_t v6 = *(void *)(a2 + 24);
  unint64_t v17 = *(void *)(a2 + 16);
  uint64_t v18 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 32);
  int v8 = *(_DWORD *)(a2 + 40);
  int v9 = *(unsigned __int8 *)(a2 + 44);
  int v10 = *(_DWORD *)(a2 + 48);
  int v11 = *(unsigned __int8 *)(a2 + 52);
  if (!sub_1C8CFB550(*(void *)a1, *(void *)a2)) {
    return 0;
  }
  if (v3)
  {
    if (!v7 || (v2 != v6 || v3 != v7) && (sub_1C8D887C0() & 1) == 0) {
      return 0;
    }
  }
  else if (v7)
  {
    return 0;
  }
  if (v5)
  {
    if (!v9) {
      return 0;
    }
  }
  else
  {
    if (v4 == v8) {
      char v12 = v9;
    }
    else {
      char v12 = 1;
    }
    if (v12) {
      return 0;
    }
  }
  if ((v21 & 1) == 0)
  {
    if (v16 == v10) {
      char v15 = v11;
    }
    else {
      char v15 = 1;
    }
    if (v15) {
      return 0;
    }
LABEL_18:
    sub_1C8CA3CF8(v20, v19);
    sub_1C8CA3CF8(v18, v17);
    char v13 = sub_1C8D01FBC(v20, v19, v18, v17);
    sub_1C8CA3D5C(v18, v17);
    sub_1C8CA3D5C(v20, v19);
    return v13 & 1;
  }
  if (v11) {
    goto LABEL_18;
  }
  return 0;
}

uint64_t sub_1C8D0283C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  unint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 20);
  if (*(unsigned char *)(a1 + 20))
  {
    if (!*(unsigned char *)(a2 + 20)) {
      return 0;
    }
  }
  else
  {
    if (*(_DWORD *)(a1 + 16) != *(_DWORD *)(a2 + 16)) {
      char v6 = 1;
    }
    if (v6) {
      return 0;
    }
  }
  if (*(unsigned char *)(a1 + 28))
  {
    if (!*(unsigned char *)(a2 + 28)) {
      return 0;
    }
  }
  else
  {
    if (*(_DWORD *)(a1 + 24) == *(_DWORD *)(a2 + 24)) {
      char v8 = *(unsigned char *)(a2 + 28);
    }
    else {
      char v8 = 1;
    }
    if (v8) {
      return 0;
    }
  }
  sub_1C8CA3CF8(*(void *)a1, v3);
  sub_1C8CA3CF8(v4, v5);
  char v9 = sub_1C8D01FBC(v2, v3, v4, v5);
  sub_1C8CA3D5C(v4, v5);
  sub_1C8CA3D5C(v2, v3);
  return v9 & 1;
}

uint64_t _s20SiriOntologyProtobuf07Google_C20_UninterpretedOptionV8NamePartV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  unint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 24);
  int v6 = *(unsigned __int8 *)(a1 + 32);
  uint64_t v7 = *(void *)a2;
  unint64_t v8 = *(void *)(a2 + 8);
  uint64_t v9 = *(void *)(a2 + 24);
  int v10 = *(unsigned __int8 *)(a2 + 32);
  if (v5)
  {
    if (!v9) {
      return 0;
    }
    BOOL v11 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && v5 == v9;
    if (!v11 && (sub_1C8D887C0() & 1) == 0) {
      return 0;
    }
LABEL_10:
    if (v6 == 2)
    {
      if (v10 != 2) {
        return 0;
      }
    }
    else if (v10 == 2 || ((((v10 & 1) == 0) ^ v6) & 1) == 0)
    {
      return 0;
    }
    sub_1C8CA3CF8(v3, v4);
    sub_1C8CA3CF8(v7, v8);
    char v12 = sub_1C8D01FBC(v3, v4, v7, v8);
    sub_1C8CA3D5C(v7, v8);
    sub_1C8CA3D5C(v3, v4);
    return v12 & 1;
  }
  if (!v9) {
    goto LABEL_10;
  }
  return 0;
}

uint64_t sub_1C8D02A08()
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v1 = *(void **)(v0 + 16);
    type metadata accessor for Google_Protobuf_OneofDescriptorProto._StorageClass();
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 48) = 0u;
    *(_OWORD *)(v2 + 32) = 0u;
    *(_OWORD *)(v2 + 16) = 0u;
    swift_beginAccess();
    uint64_t v4 = v1[2];
    uint64_t v3 = v1[3];
    swift_beginAccess();
    *(void *)(v2 + 16) = v4;
    *(void *)(v2 + 24) = v3;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v5 = v1[4];
    uint64_t v6 = v1[5];
    unint64_t v7 = v1[6];
    uint64_t v8 = v1[7];
    sub_1C8CEF6AC(v5, v6, v7);
    swift_release();
    swift_beginAccess();
    uint64_t v9 = *(void *)(v2 + 32);
    uint64_t v10 = *(void *)(v2 + 40);
    unint64_t v11 = *(void *)(v2 + 48);
    *(void *)(v2 + 32) = v5;
    *(void *)(v2 + 40) = v6;
    *(void *)(v2 + 48) = v7;
    *(void *)(v2 + 56) = v8;
    sub_1C8CEF708(v9, v10, v11);
    *(void *)(v0 + 16) = v2;
    swift_release();
  }
  return *(void *)(v0 + 16);
}

uint64_t sub_1C8D02B4C(uint64_t a1)
{
  *(_OWORD *)(v1 + 80) = 0u;
  *(_OWORD *)(v1 + 64) = 0u;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_DWORD *)(v1 + 96) = 33685504;
  *(_OWORD *)(v1 + 16) = 0u;
  swift_beginAccess();
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  swift_beginAccess();
  *(void *)(v1 + 16) = v3;
  *(void *)(v1 + 24) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  swift_beginAccess();
  *(void *)(v1 + 32) = v5;
  *(void *)(v1 + 40) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v7 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(a1 + 56);
  swift_beginAccess();
  *(void *)(v1 + 48) = v7;
  *(void *)(v1 + 56) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = *(void *)(a1 + 72);
  unint64_t v11 = *(void *)(a1 + 80);
  uint64_t v12 = *(void *)(a1 + 88);
  __int16 v13 = *(_WORD *)(a1 + 96);
  swift_beginAccess();
  uint64_t v14 = *(void *)(v1 + 72);
  unint64_t v15 = *(void *)(v1 + 80);
  uint64_t v17 = *(void *)(v1 + 64);
  *(void *)(v1 + 64) = v9;
  *(void *)(v1 + 72) = v10;
  *(void *)(v1 + 80) = v11;
  *(void *)(v1 + 88) = v12;
  *(_WORD *)(v1 + 96) = v13;
  sub_1C8CEF6AC(v9, v10, v11);
  sub_1C8CEF708(v17, v14, v15);
  swift_beginAccess();
  LOBYTE(v7) = *(unsigned char *)(a1 + 98);
  swift_beginAccess();
  *(unsigned char *)(v1 + 98) = v7;
  swift_beginAccess();
  LOBYTE(a1) = *(unsigned char *)(a1 + 99);
  swift_beginAccess();
  *(unsigned char *)(v1 + 99) = a1;
  return v1;
}

uint64_t type metadata accessor for Google_Protobuf_FileOptions._StorageClass()
{
  return self;
}

uint64_t sub_1C8D02DB8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1C8CA3CF8(a1, a2);
  }
  return a1;
}

unint64_t sub_1C8D02DCC()
{
  unint64_t result = qword_1EA566700;
  if (!qword_1EA566700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566700);
  }
  return result;
}

uint64_t sub_1C8D02E28(uint64_t *a1, uint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  uint64_t v8 = a2[2];
  if (v5 != v8)
  {
    swift_retain();
    swift_retain();
    LOBYTE(a3) = a3(v5, v8);
    swift_release();
    swift_release();
    if ((a3 & 1) == 0) {
      return 0;
    }
  }
  sub_1C8CA3CF8(v3, v4);
  sub_1C8CA3CF8(v6, v7);
  char v10 = sub_1C8D01FBC(v3, v4, v6, v7);
  sub_1C8CA3D5C(v6, v7);
  sub_1C8CA3D5C(v3, v4);
  return v10 & 1;
}

unint64_t sub_1C8D02F04()
{
  unint64_t result = qword_1EA566708;
  if (!qword_1EA566708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566708);
  }
  return result;
}

unint64_t sub_1C8D02F58()
{
  unint64_t result = qword_1EA566710;
  if (!qword_1EA566710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566710);
  }
  return result;
}

uint64_t sub_1C8D02FAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  unint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  int v8 = *(unsigned __int8 *)(a1 + 32);
  uint64_t v9 = *(void *)a2;
  uint64_t v10 = *(void *)(a2 + 8);
  unint64_t v11 = *(void *)(a2 + 16);
  uint64_t v12 = *(void *)(a2 + 24);
  int v13 = *(unsigned __int8 *)(a2 + 32);
  if (v8 == 2)
  {
    if (v13 != 2)
    {
LABEL_9:
      char v15 = 0;
      return v15 & 1;
    }
  }
  else if (v13 == 2 || ((((v13 & 1) == 0) ^ v8) & 1) == 0)
  {
    goto LABEL_9;
  }
  if ((sub_1C8CF9FBC(v4, v9) & 1) == 0) {
    goto LABEL_9;
  }
  sub_1C8CA3CF8(v5, v6);
  sub_1C8CA3CF8(v10, v11);
  char v14 = sub_1C8D01FBC(v5, v6, v10, v11);
  sub_1C8CA3D5C(v10, v11);
  sub_1C8CA3D5C(v5, v6);
  if ((v14 & 1) == 0) {
    goto LABEL_9;
  }
  uint64_t v17 = v12;
  uint64_t v18 = v7;
  char v15 = static ExtensionFieldValueSet.== infix(_:_:)(&v18, &v17);
  return v15 & 1;
}

uint64_t _s20SiriOntologyProtobuf07Google_C15_MessageOptionsV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  unint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  int v8 = *(unsigned __int8 *)(a1 + 32);
  int v9 = *(unsigned __int8 *)(a1 + 33);
  int v10 = *(unsigned __int8 *)(a1 + 34);
  int v11 = *(unsigned __int8 *)(a1 + 35);
  uint64_t v12 = *(void *)a2;
  uint64_t v13 = *(void *)(a2 + 8);
  unint64_t v14 = *(void *)(a2 + 16);
  uint64_t v15 = *(void *)(a2 + 24);
  int v16 = *(unsigned __int8 *)(a2 + 32);
  int v17 = *(unsigned __int8 *)(a2 + 33);
  int v18 = *(unsigned __int8 *)(a2 + 34);
  int v19 = *(unsigned __int8 *)(a2 + 35);
  if (v8 == 2)
  {
    if (v16 != 2) {
      goto LABEL_24;
    }
  }
  else if (v16 == 2 || ((((v16 & 1) == 0) ^ v8) & 1) == 0)
  {
    goto LABEL_24;
  }
  if (v9 == 2)
  {
    if (v17 != 2) {
      goto LABEL_24;
    }
  }
  else if (v17 == 2 || ((((v17 & 1) == 0) ^ v9) & 1) == 0)
  {
    goto LABEL_24;
  }
  if (v10 == 2)
  {
    if (v18 != 2) {
      goto LABEL_24;
    }
  }
  else if (v18 == 2 || ((((v18 & 1) == 0) ^ v10) & 1) == 0)
  {
    goto LABEL_24;
  }
  if (v11 == 2)
  {
    if (v19 == 2) {
      goto LABEL_21;
    }
LABEL_24:
    char v21 = 0;
    return v21 & 1;
  }
  if (v19 == 2 || ((((v19 & 1) == 0) ^ v11) & 1) == 0) {
    goto LABEL_24;
  }
LABEL_21:
  if ((sub_1C8CF9FBC(v4, v12) & 1) == 0) {
    goto LABEL_24;
  }
  sub_1C8CA3CF8(v5, v6);
  sub_1C8CA3CF8(v13, v14);
  char v20 = sub_1C8D01FBC(v5, v6, v13, v14);
  sub_1C8CA3D5C(v13, v14);
  sub_1C8CA3D5C(v5, v6);
  if ((v20 & 1) == 0) {
    goto LABEL_24;
  }
  uint64_t v23 = v15;
  uint64_t v24 = v7;
  char v21 = static ExtensionFieldValueSet.== infix(_:_:)(&v24, &v23);
  return v21 & 1;
}

uint64_t _s20SiriOntologyProtobuf07Google_C14_MethodOptionsV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  unint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  int v8 = *(unsigned __int8 *)(a1 + 32);
  int v9 = *(unsigned __int8 *)(a1 + 33);
  uint64_t v10 = *(void *)a2;
  uint64_t v11 = *(void *)(a2 + 8);
  unint64_t v12 = *(void *)(a2 + 16);
  uint64_t v13 = *(void *)(a2 + 24);
  int v14 = *(unsigned __int8 *)(a2 + 32);
  int v15 = *(unsigned __int8 *)(a2 + 33);
  if (v8 == 2)
  {
    if (v14 != 2) {
      goto LABEL_14;
    }
  }
  else if (v14 == 2 || ((((v14 & 1) == 0) ^ v8) & 1) == 0)
  {
    goto LABEL_14;
  }
  if (v9 == 3)
  {
    if (v15 != 3)
    {
LABEL_14:
      char v16 = 0;
      return v16 & 1;
    }
  }
  else
  {
    char v16 = 0;
    if (v15 == 3 || v9 != v15) {
      return v16 & 1;
    }
  }
  if ((sub_1C8CF9FBC(v4, v10) & 1) == 0) {
    goto LABEL_14;
  }
  sub_1C8CA3CF8(v5, v6);
  sub_1C8CA3CF8(v11, v12);
  char v17 = sub_1C8D01FBC(v5, v6, v11, v12);
  sub_1C8CA3D5C(v11, v12);
  sub_1C8CA3D5C(v5, v6);
  if ((v17 & 1) == 0) {
    goto LABEL_14;
  }
  uint64_t v19 = v13;
  uint64_t v20 = v7;
  char v16 = static ExtensionFieldValueSet.== infix(_:_:)(&v20, &v19);
  return v16 & 1;
}

uint64_t sub_1C8D0337C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  unint64_t v3 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v5 = a2[1];
  unint64_t v6 = a2[2];
  uint64_t v7 = a2[3];
  if ((sub_1C8CF9FBC(*a1, *a2) & 1) != 0
    && (sub_1C8CA3CF8(v2, v3),
        sub_1C8CA3CF8(v5, v6),
        char v8 = sub_1C8D01FBC(v2, v3, v5, v6),
        sub_1C8CA3D5C(v5, v6),
        sub_1C8CA3D5C(v2, v3),
        (v8 & 1) != 0))
  {
    uint64_t v11 = v7;
    uint64_t v12 = v4;
    char v9 = static ExtensionFieldValueSet.== infix(_:_:)(&v12, &v11);
  }
  else
  {
    char v9 = 0;
  }
  return v9 & 1;
}

uint64_t _s20SiriOntologyProtobuf07Google_C13_FieldOptionsV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  unint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  int v8 = *(unsigned __int8 *)(a1 + 32);
  int v9 = *(unsigned __int8 *)(a1 + 33);
  int v10 = *(unsigned __int8 *)(a1 + 34);
  int v11 = *(unsigned __int8 *)(a1 + 35);
  int v12 = *(unsigned __int8 *)(a1 + 36);
  int v13 = *(unsigned __int8 *)(a1 + 37);
  uint64_t v14 = *(void *)a2;
  uint64_t v15 = *(void *)(a2 + 8);
  unint64_t v16 = *(void *)(a2 + 16);
  uint64_t v17 = *(void *)(a2 + 24);
  int v18 = *(unsigned __int8 *)(a2 + 32);
  int v19 = *(unsigned __int8 *)(a2 + 33);
  int v20 = *(unsigned __int8 *)(a2 + 34);
  int v21 = *(unsigned __int8 *)(a2 + 35);
  int v22 = *(unsigned __int8 *)(a2 + 36);
  int v23 = *(unsigned __int8 *)(a2 + 37);
  if (v8 == 3)
  {
    if (v18 != 3) {
      goto LABEL_34;
    }
  }
  else
  {
    char v24 = 0;
    if (v18 == 3 || v8 != v18) {
      return v24 & 1;
    }
  }
  if (v9 == 2)
  {
    if (v19 != 2) {
      goto LABEL_34;
    }
  }
  else if (v19 == 2 || ((((v19 & 1) == 0) ^ v9) & 1) == 0)
  {
    goto LABEL_34;
  }
  if (v10 == 3)
  {
    if (v20 != 3) {
      goto LABEL_34;
    }
  }
  else
  {
    char v24 = 0;
    if (v20 == 3 || v10 != v20) {
      return v24 & 1;
    }
  }
  if (v11 == 2)
  {
    if (v21 != 2) {
      goto LABEL_34;
    }
  }
  else if (v21 == 2 || ((((v21 & 1) == 0) ^ v11) & 1) == 0)
  {
    goto LABEL_34;
  }
  if (v12 == 2)
  {
    if (v22 != 2) {
      goto LABEL_34;
    }
  }
  else if (v22 == 2 || ((((v22 & 1) == 0) ^ v12) & 1) == 0)
  {
    goto LABEL_34;
  }
  if (v13 != 2)
  {
    if (v23 == 2 || ((((v23 & 1) == 0) ^ v13) & 1) == 0) {
      goto LABEL_34;
    }
    goto LABEL_31;
  }
  if (v23 != 2)
  {
LABEL_34:
    char v24 = 0;
    return v24 & 1;
  }
LABEL_31:
  if ((sub_1C8CF9FBC(v4, v14) & 1) == 0) {
    goto LABEL_34;
  }
  sub_1C8CA3CF8(v5, v6);
  sub_1C8CA3CF8(v15, v16);
  char v25 = sub_1C8D01FBC(v5, v6, v15, v16);
  sub_1C8CA3D5C(v15, v16);
  sub_1C8CA3D5C(v5, v6);
  if ((v25 & 1) == 0) {
    goto LABEL_34;
  }
  uint64_t v27 = v17;
  uint64_t v28 = v7;
  char v24 = static ExtensionFieldValueSet.== infix(_:_:)(&v28, &v27);
  return v24 & 1;
}

uint64_t _s20SiriOntologyProtobuf07Google_C12_FileOptionsV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  uint64_t v9 = a2[2];
  uint64_t v8 = a2[3];
  if (v4 != v8)
  {
    swift_retain();
    swift_retain();
    char v10 = sub_1C8CF0E74(v4, v8);
    swift_release();
    swift_release();
    if ((v10 & 1) == 0) {
      goto LABEL_5;
    }
  }
  sub_1C8CA3CF8(v2, v3);
  sub_1C8CA3CF8(v6, v7);
  char v11 = sub_1C8D01FBC(v2, v3, v6, v7);
  sub_1C8CA3D5C(v6, v7);
  sub_1C8CA3D5C(v2, v3);
  if (v11)
  {
    uint64_t v14 = v9;
    uint64_t v15 = v5;
    char v12 = static ExtensionFieldValueSet.== infix(_:_:)(&v15, &v14);
  }
  else
  {
LABEL_5:
    char v12 = 0;
  }
  return v12 & 1;
}

unint64_t sub_1C8D03738()
{
  unint64_t result = qword_1EA566718;
  if (!qword_1EA566718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566718);
  }
  return result;
}

unint64_t sub_1C8D0378C()
{
  unint64_t result = qword_1EA566720;
  if (!qword_1EA566720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566720);
  }
  return result;
}

unint64_t sub_1C8D037E0()
{
  unint64_t result = qword_1EA566728;
  if (!qword_1EA566728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566728);
  }
  return result;
}

unint64_t sub_1C8D03834()
{
  unint64_t result = qword_1EA566730;
  if (!qword_1EA566730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566730);
  }
  return result;
}

unint64_t sub_1C8D03888()
{
  unint64_t result = qword_1EA566738;
  if (!qword_1EA566738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566738);
  }
  return result;
}

unint64_t sub_1C8D038DC()
{
  unint64_t result = qword_1EA566740;
  if (!qword_1EA566740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566740);
  }
  return result;
}

uint64_t _s20SiriOntologyProtobuf07Google_C12_EnumOptionsV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  unint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  int v8 = *(unsigned __int8 *)(a1 + 32);
  int v9 = *(unsigned __int8 *)(a1 + 33);
  uint64_t v10 = *(void *)a2;
  uint64_t v11 = *(void *)(a2 + 8);
  unint64_t v12 = *(void *)(a2 + 16);
  uint64_t v13 = *(void *)(a2 + 24);
  int v14 = *(unsigned __int8 *)(a2 + 32);
  int v15 = *(unsigned __int8 *)(a2 + 33);
  if (v8 == 2)
  {
    if (v14 != 2) {
      goto LABEL_14;
    }
  }
  else if (v14 == 2 || ((((v14 & 1) == 0) ^ v8) & 1) == 0)
  {
    goto LABEL_14;
  }
  if (v9 == 2)
  {
    if (v15 != 2)
    {
LABEL_14:
      char v17 = 0;
      return v17 & 1;
    }
  }
  else if (v15 == 2 || ((((v15 & 1) == 0) ^ v9) & 1) == 0)
  {
    goto LABEL_14;
  }
  if ((sub_1C8CF9FBC(v4, v10) & 1) == 0) {
    goto LABEL_14;
  }
  sub_1C8CA3CF8(v5, v6);
  sub_1C8CA3CF8(v11, v12);
  char v16 = sub_1C8D01FBC(v5, v6, v11, v12);
  sub_1C8CA3D5C(v11, v12);
  sub_1C8CA3D5C(v5, v6);
  if ((v16 & 1) == 0) {
    goto LABEL_14;
  }
  uint64_t v19 = v13;
  uint64_t v20 = v7;
  char v17 = _s20SiriOntologyProtobuf22ExtensionFieldValueSetV2eeoiySbAC_ACtFZ_0(&v20, &v19);
  return v17 & 1;
}

unint64_t sub_1C8D03A64()
{
  unint64_t result = qword_1EA566748;
  if (!qword_1EA566748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566748);
  }
  return result;
}

unint64_t sub_1C8D03AB8()
{
  unint64_t result = qword_1EA566750;
  if (!qword_1EA566750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566750);
  }
  return result;
}

unint64_t sub_1C8D03B0C()
{
  unint64_t result = qword_1EA566758;
  if (!qword_1EA566758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566758);
  }
  return result;
}

unint64_t sub_1C8D03B60()
{
  unint64_t result = qword_1EA566760;
  if (!qword_1EA566760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566760);
  }
  return result;
}

unint64_t sub_1C8D03BB4()
{
  unint64_t result = qword_1EA566768;
  if (!qword_1EA566768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566768);
  }
  return result;
}

unint64_t sub_1C8D03C08()
{
  unint64_t result = qword_1EA566770;
  if (!qword_1EA566770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566770);
  }
  return result;
}

unint64_t sub_1C8D03C5C()
{
  unint64_t result = qword_1EA566778;
  if (!qword_1EA566778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566778);
  }
  return result;
}

unint64_t sub_1C8D03CB0(uint64_t a1)
{
  unint64_t result = sub_1C8D02F04();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D03CDC()
{
  unint64_t result = qword_1EA566780;
  if (!qword_1EA566780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566780);
  }
  return result;
}

uint64_t sub_1C8D03D30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D06DD8(a1, a2, a3, (uint64_t (*)(void))sub_1C8D03D5C, (uint64_t (*)(void))sub_1C8D03DB0);
}

unint64_t sub_1C8D03D5C()
{
  unint64_t result = qword_1EA566788;
  if (!qword_1EA566788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566788);
  }
  return result;
}

unint64_t sub_1C8D03DB0()
{
  unint64_t result = qword_1EA566790;
  if (!qword_1EA566790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566790);
  }
  return result;
}

unint64_t sub_1C8D03E08()
{
  unint64_t result = qword_1EA566798;
  if (!qword_1EA566798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566798);
  }
  return result;
}

uint64_t sub_1C8D03E5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D06DD8(a1, a2, a3, (uint64_t (*)(void))sub_1C8D03E88, (uint64_t (*)(void))sub_1C8D03EDC);
}

unint64_t sub_1C8D03E88()
{
  unint64_t result = qword_1EA5667A0;
  if (!qword_1EA5667A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5667A0);
  }
  return result;
}

unint64_t sub_1C8D03EDC()
{
  unint64_t result = qword_1EA5667A8;
  if (!qword_1EA5667A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5667A8);
  }
  return result;
}

uint64_t sub_1C8D03F30()
{
  return sub_1C8CC2ACC(&qword_1EA5667B0, &qword_1EA5667B8);
}

uint64_t sub_1C8D03F58()
{
  return sub_1C8CC2ACC(&qword_1EA5667C0, &qword_1EA5667C8);
}

unint64_t sub_1C8D03F84()
{
  unint64_t result = qword_1EA5667D0;
  if (!qword_1EA5667D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5667D0);
  }
  return result;
}

uint64_t sub_1C8D03FD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D06DD8(a1, a2, a3, (uint64_t (*)(void))sub_1C8D04004, (uint64_t (*)(void))sub_1C8D04058);
}

unint64_t sub_1C8D04004()
{
  unint64_t result = qword_1EA5667D8;
  if (!qword_1EA5667D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5667D8);
  }
  return result;
}

unint64_t sub_1C8D04058()
{
  unint64_t result = qword_1EA5667E0;
  if (!qword_1EA5667E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5667E0);
  }
  return result;
}

unint64_t sub_1C8D040AC(uint64_t a1)
{
  unint64_t result = sub_1C8D040D4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D040D4()
{
  unint64_t result = qword_1EA5667E8;
  if (!qword_1EA5667E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5667E8);
  }
  return result;
}

uint64_t sub_1C8D04128()
{
  return sub_1C8CC2ACC(&qword_1EA5667F0, &qword_1EA5667F8);
}

unint64_t sub_1C8D04150(uint64_t a1)
{
  unint64_t result = sub_1C8D03738();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D0417C()
{
  unint64_t result = qword_1EA566800;
  if (!qword_1EA566800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566800);
  }
  return result;
}

uint64_t sub_1C8D041D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D06DD8(a1, a2, a3, (uint64_t (*)(void))sub_1C8D041FC, (uint64_t (*)(void))sub_1C8D04250);
}

unint64_t sub_1C8D041FC()
{
  unint64_t result = qword_1EA566808;
  if (!qword_1EA566808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566808);
  }
  return result;
}

unint64_t sub_1C8D04250()
{
  unint64_t result = qword_1EA566810;
  if (!qword_1EA566810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566810);
  }
  return result;
}

unint64_t sub_1C8D042A8()
{
  unint64_t result = qword_1EA566818;
  if (!qword_1EA566818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566818);
  }
  return result;
}

uint64_t sub_1C8D042FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D06DD8(a1, a2, a3, (uint64_t (*)(void))sub_1C8D04328, (uint64_t (*)(void))sub_1C8D0437C);
}

unint64_t sub_1C8D04328()
{
  unint64_t result = qword_1EA566820;
  if (!qword_1EA566820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566820);
  }
  return result;
}

unint64_t sub_1C8D0437C()
{
  unint64_t result = qword_1EA566828;
  if (!qword_1EA566828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566828);
  }
  return result;
}

unint64_t sub_1C8D043D0(uint64_t a1)
{
  unint64_t result = sub_1C8D0378C();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C8D043F8()
{
  return sub_1C8CC2ACC(&qword_1EA566830, &qword_1EA566838);
}

uint64_t sub_1C8D04420()
{
  return sub_1C8CC2ACC(&qword_1EA566840, &qword_1EA566848);
}

unint64_t sub_1C8D04448(uint64_t a1)
{
  unint64_t result = sub_1C8D03888();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D04470(uint64_t a1)
{
  unint64_t result = sub_1C8D038DC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D04498(uint64_t a1)
{
  unint64_t result = sub_1C8D03A64();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D044C0(uint64_t a1)
{
  unint64_t result = sub_1C8D03AB8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D044EC()
{
  unint64_t result = qword_1EA566850;
  if (!qword_1EA566850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566850);
  }
  return result;
}

uint64_t sub_1C8D04540(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D06DD8(a1, a2, a3, (uint64_t (*)(void))sub_1C8D0456C, (uint64_t (*)(void))sub_1C8D045C0);
}

unint64_t sub_1C8D0456C()
{
  unint64_t result = qword_1EA566858;
  if (!qword_1EA566858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566858);
  }
  return result;
}

unint64_t sub_1C8D045C0()
{
  unint64_t result = qword_1EA566860;
  if (!qword_1EA566860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566860);
  }
  return result;
}

unint64_t sub_1C8D04614(uint64_t a1)
{
  unint64_t result = sub_1C8D03B0C();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C8D0463C()
{
  return sub_1C8CC2ACC(&qword_1EA566868, &qword_1EA566870);
}

unint64_t sub_1C8D04664(uint64_t a1)
{
  unint64_t result = sub_1C8D0468C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D0468C()
{
  unint64_t result = qword_1EA566878;
  if (!qword_1EA566878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566878);
  }
  return result;
}

uint64_t sub_1C8D046E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D06DD8(a1, a2, a3, (uint64_t (*)(void))sub_1C8D0470C, (uint64_t (*)(void))sub_1C8D04760);
}

unint64_t sub_1C8D0470C()
{
  unint64_t result = qword_1EA566880;
  if (!qword_1EA566880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566880);
  }
  return result;
}

unint64_t sub_1C8D04760()
{
  unint64_t result = qword_1EA566888;
  if (!qword_1EA566888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566888);
  }
  return result;
}

unint64_t sub_1C8D047B8()
{
  unint64_t result = qword_1EA566890;
  if (!qword_1EA566890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566890);
  }
  return result;
}

unint64_t sub_1C8D0480C(uint64_t a1)
{
  unint64_t result = sub_1C8D04834();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D04834()
{
  unint64_t result = qword_1EA566898;
  if (!qword_1EA566898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566898);
  }
  return result;
}

uint64_t sub_1C8D04888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D06DD8(a1, a2, a3, (uint64_t (*)(void))sub_1C8D02DCC, (uint64_t (*)(void))sub_1C8D048B4);
}

unint64_t sub_1C8D048B4()
{
  unint64_t result = qword_1EA5668A0;
  if (!qword_1EA5668A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5668A0);
  }
  return result;
}

unint64_t sub_1C8D0490C()
{
  unint64_t result = qword_1EA5668A8;
  if (!qword_1EA5668A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5668A8);
  }
  return result;
}

unint64_t sub_1C8D04960(uint64_t a1)
{
  unint64_t result = sub_1C8D04988();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D04988()
{
  unint64_t result = qword_1EA5668B0;
  if (!qword_1EA5668B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5668B0);
  }
  return result;
}

uint64_t sub_1C8D049DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D06DD8(a1, a2, a3, (uint64_t (*)(void))sub_1C8D04A08, (uint64_t (*)(void))sub_1C8D04A5C);
}

unint64_t sub_1C8D04A08()
{
  unint64_t result = qword_1EA5668B8;
  if (!qword_1EA5668B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5668B8);
  }
  return result;
}

unint64_t sub_1C8D04A5C()
{
  unint64_t result = qword_1EA5668C0;
  if (!qword_1EA5668C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5668C0);
  }
  return result;
}

unint64_t sub_1C8D04AB4()
{
  unint64_t result = qword_1EA5668C8;
  if (!qword_1EA5668C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5668C8);
  }
  return result;
}

unint64_t sub_1C8D04B08(uint64_t a1)
{
  unint64_t result = sub_1C8D04B30();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D04B30()
{
  unint64_t result = qword_1EA5668D0;
  if (!qword_1EA5668D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5668D0);
  }
  return result;
}

uint64_t sub_1C8D04B84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D06DD8(a1, a2, a3, (uint64_t (*)(void))sub_1C8D04BB0, (uint64_t (*)(void))sub_1C8D04C04);
}

unint64_t sub_1C8D04BB0()
{
  unint64_t result = qword_1EA5668D8;
  if (!qword_1EA5668D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5668D8);
  }
  return result;
}

unint64_t sub_1C8D04C04()
{
  unint64_t result = qword_1EA5668E0;
  if (!qword_1EA5668E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5668E0);
  }
  return result;
}

unint64_t sub_1C8D04C5C()
{
  unint64_t result = qword_1EA5668E8;
  if (!qword_1EA5668E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5668E8);
  }
  return result;
}

unint64_t sub_1C8D04CB0(uint64_t a1)
{
  unint64_t result = sub_1C8D04CD8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D04CD8()
{
  unint64_t result = qword_1EA5668F0;
  if (!qword_1EA5668F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5668F0);
  }
  return result;
}

uint64_t sub_1C8D04D2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D06DD8(a1, a2, a3, (uint64_t (*)(void))sub_1C8D04D58, (uint64_t (*)(void))sub_1C8D04DAC);
}

unint64_t sub_1C8D04D58()
{
  unint64_t result = qword_1EA5668F8;
  if (!qword_1EA5668F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5668F8);
  }
  return result;
}

unint64_t sub_1C8D04DAC()
{
  unint64_t result = qword_1EA566900;
  if (!qword_1EA566900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566900);
  }
  return result;
}

unint64_t sub_1C8D04E04()
{
  unint64_t result = qword_1EA566908;
  if (!qword_1EA566908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566908);
  }
  return result;
}

unint64_t sub_1C8D04E58(uint64_t a1)
{
  unint64_t result = sub_1C8D04E80();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D04E80()
{
  unint64_t result = qword_1EA566910;
  if (!qword_1EA566910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566910);
  }
  return result;
}

uint64_t sub_1C8D04ED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D06DD8(a1, a2, a3, (uint64_t (*)(void))sub_1C8D02F04, (uint64_t (*)(void))sub_1C8D04F00);
}

unint64_t sub_1C8D04F00()
{
  unint64_t result = qword_1EA566918;
  if (!qword_1EA566918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566918);
  }
  return result;
}

unint64_t sub_1C8D04F58()
{
  unint64_t result = qword_1EA566920;
  if (!qword_1EA566920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566920);
  }
  return result;
}

unint64_t sub_1C8D04FAC(uint64_t a1)
{
  unint64_t result = sub_1C8D04FD4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D04FD4()
{
  unint64_t result = qword_1EA566928;
  if (!qword_1EA566928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566928);
  }
  return result;
}

uint64_t sub_1C8D05028(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D06DD8(a1, a2, a3, (uint64_t (*)(void))sub_1C8D05054, (uint64_t (*)(void))sub_1C8D050A8);
}

unint64_t sub_1C8D05054()
{
  unint64_t result = qword_1EA566930;
  if (!qword_1EA566930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566930);
  }
  return result;
}

unint64_t sub_1C8D050A8()
{
  unint64_t result = qword_1EA566938;
  if (!qword_1EA566938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566938);
  }
  return result;
}

unint64_t sub_1C8D05100()
{
  unint64_t result = qword_1EA566940;
  if (!qword_1EA566940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566940);
  }
  return result;
}

unint64_t sub_1C8D05154(uint64_t a1)
{
  unint64_t result = sub_1C8D0517C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D0517C()
{
  unint64_t result = qword_1EA566948;
  if (!qword_1EA566948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566948);
  }
  return result;
}

uint64_t sub_1C8D051D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D06DD8(a1, a2, a3, (uint64_t (*)(void))sub_1C8D051FC, (uint64_t (*)(void))sub_1C8D05250);
}

unint64_t sub_1C8D051FC()
{
  unint64_t result = qword_1EA566950;
  if (!qword_1EA566950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566950);
  }
  return result;
}

unint64_t sub_1C8D05250()
{
  unint64_t result = qword_1EA566958;
  if (!qword_1EA566958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566958);
  }
  return result;
}

unint64_t sub_1C8D052A8()
{
  unint64_t result = qword_1EA566960;
  if (!qword_1EA566960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566960);
  }
  return result;
}

unint64_t sub_1C8D052FC(uint64_t a1)
{
  unint64_t result = sub_1C8D05324();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D05324()
{
  unint64_t result = qword_1EA566968;
  if (!qword_1EA566968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566968);
  }
  return result;
}

uint64_t sub_1C8D05378(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D06DD8(a1, a2, a3, (uint64_t (*)(void))sub_1C8D053A4, (uint64_t (*)(void))sub_1C8D053F8);
}

unint64_t sub_1C8D053A4()
{
  unint64_t result = qword_1EA566970;
  if (!qword_1EA566970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566970);
  }
  return result;
}

unint64_t sub_1C8D053F8()
{
  unint64_t result = qword_1EA566978;
  if (!qword_1EA566978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566978);
  }
  return result;
}

unint64_t sub_1C8D05450()
{
  unint64_t result = qword_1EA566980;
  if (!qword_1EA566980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566980);
  }
  return result;
}

unint64_t sub_1C8D054A4(uint64_t a1)
{
  unint64_t result = sub_1C8D054CC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D054CC()
{
  unint64_t result = qword_1EA566988;
  if (!qword_1EA566988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566988);
  }
  return result;
}

uint64_t sub_1C8D05520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D06DD8(a1, a2, a3, (uint64_t (*)(void))sub_1C8D0554C, (uint64_t (*)(void))sub_1C8D055A0);
}

unint64_t sub_1C8D0554C()
{
  unint64_t result = qword_1EA566990;
  if (!qword_1EA566990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566990);
  }
  return result;
}

unint64_t sub_1C8D055A0()
{
  unint64_t result = qword_1EA566998;
  if (!qword_1EA566998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566998);
  }
  return result;
}

unint64_t sub_1C8D055F8()
{
  unint64_t result = qword_1EA5669A0;
  if (!qword_1EA5669A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5669A0);
  }
  return result;
}

unint64_t sub_1C8D0564C(uint64_t a1)
{
  unint64_t result = sub_1C8D05674();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D05674()
{
  unint64_t result = qword_1EA5669A8;
  if (!qword_1EA5669A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5669A8);
  }
  return result;
}

uint64_t sub_1C8D056C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D06DD8(a1, a2, a3, (uint64_t (*)(void))sub_1C8D056F4, (uint64_t (*)(void))sub_1C8D05748);
}

unint64_t sub_1C8D056F4()
{
  unint64_t result = qword_1EA5669B0;
  if (!qword_1EA5669B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5669B0);
  }
  return result;
}

unint64_t sub_1C8D05748()
{
  unint64_t result = qword_1EA5669B8;
  if (!qword_1EA5669B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5669B8);
  }
  return result;
}

unint64_t sub_1C8D057A0()
{
  unint64_t result = qword_1EA5669C0;
  if (!qword_1EA5669C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5669C0);
  }
  return result;
}

unint64_t sub_1C8D057F4(uint64_t a1)
{
  unint64_t result = sub_1C8D0581C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D0581C()
{
  unint64_t result = qword_1EA5669C8;
  if (!qword_1EA5669C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5669C8);
  }
  return result;
}

uint64_t sub_1C8D05870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D06DD8(a1, a2, a3, (uint64_t (*)(void))sub_1C8D0589C, (uint64_t (*)(void))sub_1C8D058F0);
}

unint64_t sub_1C8D0589C()
{
  unint64_t result = qword_1EA5669D0;
  if (!qword_1EA5669D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5669D0);
  }
  return result;
}

unint64_t sub_1C8D058F0()
{
  unint64_t result = qword_1EA5669D8;
  if (!qword_1EA5669D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5669D8);
  }
  return result;
}

unint64_t sub_1C8D05948()
{
  unint64_t result = qword_1EA5669E0;
  if (!qword_1EA5669E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5669E0);
  }
  return result;
}

unint64_t sub_1C8D0599C(uint64_t a1)
{
  unint64_t result = sub_1C8D059C4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D059C4()
{
  unint64_t result = qword_1EA5669E8;
  if (!qword_1EA5669E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5669E8);
  }
  return result;
}

uint64_t sub_1C8D05A18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D06DD8(a1, a2, a3, (uint64_t (*)(void))sub_1C8D05A44, (uint64_t (*)(void))sub_1C8D05A98);
}

unint64_t sub_1C8D05A44()
{
  unint64_t result = qword_1EA5669F0;
  if (!qword_1EA5669F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5669F0);
  }
  return result;
}

unint64_t sub_1C8D05A98()
{
  unint64_t result = qword_1EA5669F8;
  if (!qword_1EA5669F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5669F8);
  }
  return result;
}

unint64_t sub_1C8D05AF0()
{
  unint64_t result = qword_1EA566A00;
  if (!qword_1EA566A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566A00);
  }
  return result;
}

unint64_t sub_1C8D05B44(uint64_t a1)
{
  unint64_t result = sub_1C8D05B6C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D05B6C()
{
  unint64_t result = qword_1EA566A08;
  if (!qword_1EA566A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566A08);
  }
  return result;
}

uint64_t sub_1C8D05BC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D06DD8(a1, a2, a3, (uint64_t (*)(void))sub_1C8D040D4, (uint64_t (*)(void))sub_1C8D05BEC);
}

unint64_t sub_1C8D05BEC()
{
  unint64_t result = qword_1EA566A10;
  if (!qword_1EA566A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566A10);
  }
  return result;
}

unint64_t sub_1C8D05C44()
{
  unint64_t result = qword_1EA566A18;
  if (!qword_1EA566A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566A18);
  }
  return result;
}

unint64_t sub_1C8D05C98(uint64_t a1)
{
  unint64_t result = sub_1C8D05CC0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D05CC0()
{
  unint64_t result = qword_1EA566A20;
  if (!qword_1EA566A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566A20);
  }
  return result;
}

uint64_t sub_1C8D05D14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D06DD8(a1, a2, a3, (uint64_t (*)(void))sub_1C8D03738, (uint64_t (*)(void))sub_1C8D05D40);
}

unint64_t sub_1C8D05D40()
{
  unint64_t result = qword_1EA566A28;
  if (!qword_1EA566A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566A28);
  }
  return result;
}

unint64_t sub_1C8D05D98()
{
  unint64_t result = qword_1EA566A30;
  if (!qword_1EA566A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566A30);
  }
  return result;
}

unint64_t sub_1C8D05DEC(uint64_t a1)
{
  unint64_t result = sub_1C8D05E14();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D05E14()
{
  unint64_t result = qword_1EA566A38;
  if (!qword_1EA566A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566A38);
  }
  return result;
}

uint64_t sub_1C8D05E68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D06DD8(a1, a2, a3, (uint64_t (*)(void))sub_1C8D0378C, (uint64_t (*)(void))sub_1C8D05E94);
}

unint64_t sub_1C8D05E94()
{
  unint64_t result = qword_1EA566A40;
  if (!qword_1EA566A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566A40);
  }
  return result;
}

unint64_t sub_1C8D05EEC()
{
  unint64_t result = qword_1EA566A48;
  if (!qword_1EA566A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566A48);
  }
  return result;
}

unint64_t sub_1C8D05F40(uint64_t a1)
{
  unint64_t result = sub_1C8D05F68();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D05F68()
{
  unint64_t result = qword_1EA566A50;
  if (!qword_1EA566A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566A50);
  }
  return result;
}

uint64_t sub_1C8D05FBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D06DD8(a1, a2, a3, (uint64_t (*)(void))sub_1C8D03888, (uint64_t (*)(void))sub_1C8D05FE8);
}

unint64_t sub_1C8D05FE8()
{
  unint64_t result = qword_1EA566A58;
  if (!qword_1EA566A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566A58);
  }
  return result;
}

unint64_t sub_1C8D06040()
{
  unint64_t result = qword_1EA566A60;
  if (!qword_1EA566A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566A60);
  }
  return result;
}

unint64_t sub_1C8D06094(uint64_t a1)
{
  unint64_t result = sub_1C8D060BC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D060BC()
{
  unint64_t result = qword_1EA566A68;
  if (!qword_1EA566A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566A68);
  }
  return result;
}

uint64_t sub_1C8D06110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D06DD8(a1, a2, a3, (uint64_t (*)(void))sub_1C8D038DC, (uint64_t (*)(void))sub_1C8D0613C);
}

unint64_t sub_1C8D0613C()
{
  unint64_t result = qword_1EA566A70;
  if (!qword_1EA566A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566A70);
  }
  return result;
}

unint64_t sub_1C8D06194()
{
  unint64_t result = qword_1EA566A78;
  if (!qword_1EA566A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566A78);
  }
  return result;
}

unint64_t sub_1C8D061E8(uint64_t a1)
{
  unint64_t result = sub_1C8D06210();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D06210()
{
  unint64_t result = qword_1EA566A80;
  if (!qword_1EA566A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566A80);
  }
  return result;
}

uint64_t sub_1C8D06264(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D06DD8(a1, a2, a3, (uint64_t (*)(void))sub_1C8D03A64, (uint64_t (*)(void))sub_1C8D06290);
}

unint64_t sub_1C8D06290()
{
  unint64_t result = qword_1EA566A88;
  if (!qword_1EA566A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566A88);
  }
  return result;
}

unint64_t sub_1C8D062E8()
{
  unint64_t result = qword_1EA566A90;
  if (!qword_1EA566A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566A90);
  }
  return result;
}

unint64_t sub_1C8D0633C(uint64_t a1)
{
  unint64_t result = sub_1C8D06364();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D06364()
{
  unint64_t result = qword_1EA566A98;
  if (!qword_1EA566A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566A98);
  }
  return result;
}

uint64_t sub_1C8D063B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D06DD8(a1, a2, a3, (uint64_t (*)(void))sub_1C8D03AB8, (uint64_t (*)(void))sub_1C8D063E4);
}

unint64_t sub_1C8D063E4()
{
  unint64_t result = qword_1EA566AA0;
  if (!qword_1EA566AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566AA0);
  }
  return result;
}

unint64_t sub_1C8D0643C()
{
  unint64_t result = qword_1EA566AA8;
  if (!qword_1EA566AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566AA8);
  }
  return result;
}

unint64_t sub_1C8D06490(uint64_t a1)
{
  unint64_t result = sub_1C8D064B8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D064B8()
{
  unint64_t result = qword_1EA566AB0;
  if (!qword_1EA566AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566AB0);
  }
  return result;
}

uint64_t sub_1C8D0650C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D06DD8(a1, a2, a3, (uint64_t (*)(void))sub_1C8D03B0C, (uint64_t (*)(void))sub_1C8D06538);
}

unint64_t sub_1C8D06538()
{
  unint64_t result = qword_1EA566AB8;
  if (!qword_1EA566AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566AB8);
  }
  return result;
}

unint64_t sub_1C8D06590()
{
  unint64_t result = qword_1EA566AC0;
  if (!qword_1EA566AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566AC0);
  }
  return result;
}

unint64_t sub_1C8D065E4(uint64_t a1)
{
  unint64_t result = sub_1C8D0660C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D0660C()
{
  unint64_t result = qword_1EA566AC8;
  if (!qword_1EA566AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566AC8);
  }
  return result;
}

uint64_t sub_1C8D06660(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D06DD8(a1, a2, a3, (uint64_t (*)(void))sub_1C8D02F58, (uint64_t (*)(void))sub_1C8D0668C);
}

unint64_t sub_1C8D0668C()
{
  unint64_t result = qword_1EA566AD0;
  if (!qword_1EA566AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566AD0);
  }
  return result;
}

unint64_t sub_1C8D066E4()
{
  unint64_t result = qword_1EA566AD8;
  if (!qword_1EA566AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566AD8);
  }
  return result;
}

unint64_t sub_1C8D06738(uint64_t a1)
{
  unint64_t result = sub_1C8D06760();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D06760()
{
  unint64_t result = qword_1EA566AE0;
  if (!qword_1EA566AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566AE0);
  }
  return result;
}

uint64_t sub_1C8D067B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D06DD8(a1, a2, a3, (uint64_t (*)(void))sub_1C8D03BB4, (uint64_t (*)(void))sub_1C8D067E0);
}

unint64_t sub_1C8D067E0()
{
  unint64_t result = qword_1EA566AE8;
  if (!qword_1EA566AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566AE8);
  }
  return result;
}

unint64_t sub_1C8D06838()
{
  unint64_t result = qword_1EA566AF0;
  if (!qword_1EA566AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566AF0);
  }
  return result;
}

unint64_t sub_1C8D0688C(uint64_t a1)
{
  unint64_t result = sub_1C8D068B4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D068B4()
{
  unint64_t result = qword_1EA566AF8;
  if (!qword_1EA566AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566AF8);
  }
  return result;
}

uint64_t sub_1C8D06908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D06DD8(a1, a2, a3, (uint64_t (*)(void))sub_1C8D06934, (uint64_t (*)(void))sub_1C8D06988);
}

unint64_t sub_1C8D06934()
{
  unint64_t result = qword_1EA566B00;
  if (!qword_1EA566B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566B00);
  }
  return result;
}

unint64_t sub_1C8D06988()
{
  unint64_t result = qword_1EA566B08;
  if (!qword_1EA566B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566B08);
  }
  return result;
}

unint64_t sub_1C8D069E0()
{
  unint64_t result = qword_1EA566B10;
  if (!qword_1EA566B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566B10);
  }
  return result;
}

unint64_t sub_1C8D06A34(uint64_t a1)
{
  unint64_t result = sub_1C8D06A5C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D06A5C()
{
  unint64_t result = qword_1EA566B18;
  if (!qword_1EA566B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566B18);
  }
  return result;
}

uint64_t sub_1C8D06AB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D06DD8(a1, a2, a3, (uint64_t (*)(void))sub_1C8D03C08, (uint64_t (*)(void))sub_1C8D06ADC);
}

unint64_t sub_1C8D06ADC()
{
  unint64_t result = qword_1EA566B20;
  if (!qword_1EA566B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566B20);
  }
  return result;
}

unint64_t sub_1C8D06B34()
{
  unint64_t result = qword_1EA566B28;
  if (!qword_1EA566B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566B28);
  }
  return result;
}

unint64_t sub_1C8D06B88(uint64_t a1)
{
  unint64_t result = sub_1C8D06BB0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D06BB0()
{
  unint64_t result = qword_1EA566B30;
  if (!qword_1EA566B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566B30);
  }
  return result;
}

uint64_t sub_1C8D06C04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D06DD8(a1, a2, a3, (uint64_t (*)(void))sub_1C8D06C30, (uint64_t (*)(void))sub_1C8D06C84);
}

unint64_t sub_1C8D06C30()
{
  unint64_t result = qword_1EA566B38;
  if (!qword_1EA566B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566B38);
  }
  return result;
}

unint64_t sub_1C8D06C84()
{
  unint64_t result = qword_1EA566B40;
  if (!qword_1EA566B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566B40);
  }
  return result;
}

unint64_t sub_1C8D06CDC()
{
  unint64_t result = qword_1EA566B48;
  if (!qword_1EA566B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566B48);
  }
  return result;
}

unint64_t sub_1C8D06D30(uint64_t a1)
{
  unint64_t result = sub_1C8D06D58();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D06D58()
{
  unint64_t result = qword_1EA566B50;
  if (!qword_1EA566B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566B50);
  }
  return result;
}

uint64_t sub_1C8D06DAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D06DD8(a1, a2, a3, (uint64_t (*)(void))sub_1C8D03C5C, (uint64_t (*)(void))sub_1C8D06E14);
}

uint64_t sub_1C8D06DD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C8D06E14()
{
  unint64_t result = qword_1EA566B58;
  if (!qword_1EA566B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566B58);
  }
  return result;
}

unint64_t sub_1C8D06E6C()
{
  unint64_t result = qword_1EA566B60;
  if (!qword_1EA566B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566B60);
  }
  return result;
}

uint64_t sub_1C8D06EC0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C8CD8E90(a1, a2);
}

uint64_t sub_1C8D06ED8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CD7E8C(a1, a2, a3, a4, (void (*)(void))type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass, 176, (uint64_t (*)(uint64_t))sub_1C8CE32A4);
}

uint64_t sub_1C8D06F1C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C8CD937C(a1, a2);
}

uint64_t sub_1C8D06F3C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CD0668(a1, a2, a3, a4, (void (*)(void))type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass, 176, (uint64_t (*)(uint64_t))sub_1C8CE32A4);
}

uint64_t sub_1C8D06F84(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CD0A7C(a1, a2, a3, a4, (void (*)(void))type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass, 176, (uint64_t (*)(uint64_t))sub_1C8CE32A4);
}

uint64_t sub_1C8D06FCC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CD0E90(a1, a2, a3, a4, (void (*)(void))type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass, 176, (uint64_t (*)(uint64_t))sub_1C8CE32A4);
}

uint64_t sub_1C8D07014(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CD12A4(a1, a2, a3, a4, (void (*)(void))type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass, 176, (uint64_t (*)(uint64_t))sub_1C8CE32A4);
}

uint64_t sub_1C8D0705C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CD6E90(a1, a2, a3, a4, (void (*)(void))type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass, 176, (uint64_t (*)(uint64_t))sub_1C8CE32A4);
}

uint64_t sub_1C8D070A4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CD72A4(a1, a2, a3, a4, (void (*)(void))type metadata accessor for Google_Protobuf_FileDescriptorProto._StorageClass, 176, (uint64_t (*)(uint64_t))sub_1C8CE32A4);
}

uint64_t sub_1C8D070E8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  swift_beginAccess();
  *a2 = *(void *)(v3 + 96);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8D07150@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C8CD8E90(a1, a2);
}

uint64_t sub_1C8D07168(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CD7E8C(a1, a2, a3, a4, (void (*)(void))type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass, 136, sub_1C8CE52A8);
}

uint64_t sub_1C8D071B0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CD8388(a1, a2, a3, a4, (void (*)(void))type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass, 136, sub_1C8CE52A8);
}

uint64_t sub_1C8D071F4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  swift_beginAccess();
  *a2 = *(void *)(v3 + 40);
  return swift_bridgeObjectRetain();
}

uint64_t keypath_get_81Tm@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8D07294(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CD0668(a1, a2, a3, a4, (void (*)(void))type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass, 136, sub_1C8CE52A8);
}

uint64_t keypath_get_83Tm@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  swift_beginAccess();
  *a2 = *(void *)(v3 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8D07328(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CD0A7C(a1, a2, a3, a4, (void (*)(void))type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass, 136, sub_1C8CE52A8);
}

uint64_t keypath_get_85Tm@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  swift_beginAccess();
  *a2 = *(void *)(v3 + 64);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8D073BC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CD0E90(a1, a2, a3, a4, (void (*)(void))type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass, 136, sub_1C8CE52A8);
}

uint64_t keypath_get_87Tm@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  swift_beginAccess();
  *a2 = *(void *)(v3 + 72);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8D07450(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CD12A4(a1, a2, a3, a4, (void (*)(void))type metadata accessor for Google_Protobuf_DescriptorProto._StorageClass, 136, sub_1C8CE52A8);
}

uint64_t sub_1C8D0749C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  swift_beginAccess();
  *a2 = *(void *)(v3 + 120);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8D074EC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  swift_beginAccess();
  *a2 = *(void *)(v3 + 128);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8D0753C@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t result = swift_beginAccess();
  int v5 = *(_DWORD *)(v3 + 16);
  if (*(unsigned char *)(v3 + 20)) {
    int v5 = 0;
  }
  *a2 = v5;
  return result;
}

uint64_t sub_1C8D07594@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t result = swift_beginAccess();
  int v5 = *(_DWORD *)(v3 + 24);
  if (*(unsigned char *)(v3 + 28)) {
    int v5 = 0;
  }
  *a2 = v5;
  return result;
}

uint64_t sub_1C8D075EC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C8CD6060(a1, a2);
}

uint64_t sub_1C8D07604(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CD60DC(a1, a2, a3, a4, Google_Protobuf_DescriptorProto.ExtensionRange.options.setter);
}

uint64_t sub_1C8D07630@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  int v2 = *(_DWORD *)(result + 16);
  if (*(unsigned char *)(result + 20)) {
    int v2 = 0;
  }
  *a2 = v2;
  return result;
}

_DWORD *sub_1C8D07648(_DWORD *result, uint64_t a2)
{
  *(_DWORD *)(a2 + 16) = *result;
  *(unsigned char *)(a2 + 20) = 0;
  return result;
}

uint64_t sub_1C8D07658@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  int v2 = *(_DWORD *)(result + 24);
  if (*(unsigned char *)(result + 28)) {
    int v2 = 0;
  }
  *a2 = v2;
  return result;
}

_DWORD *sub_1C8D07670(_DWORD *result, uint64_t a2)
{
  *(_DWORD *)(a2 + 24) = *result;
  *(unsigned char *)(a2 + 28) = 0;
  return result;
}

uint64_t sub_1C8D07680@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C8CD8E90(a1, a2);
}

uint64_t sub_1C8D07698(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CD7E8C(a1, a2, a3, a4, (void (*)(void))type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass, 150, sub_1C8CE83C4);
}

uint64_t sub_1C8D076E0(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CD78D8(a1, a2, a3, a4, (void (*)(void))type metadata accessor for Google_Protobuf_FieldDescriptorProto._StorageClass, 150, sub_1C8CE83C4);
}

uint64_t sub_1C8D07724@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t result = swift_beginAccess();
  int v5 = *(unsigned __int8 *)(v3 + 37);
  if (v5 == 3) {
    LOBYTE(v5) = 0;
  }
  *a2 = v5;
  return result;
}

uint64_t sub_1C8D07778@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t result = swift_beginAccess();
  int v5 = *(unsigned __int8 *)(v3 + 38);
  if (v5 == 18) {
    LOBYTE(v5) = 0;
  }
  *a2 = v5;
  return result;
}

uint64_t sub_1C8D077E4@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t result = swift_beginAccess();
  int v5 = *(_DWORD *)(v3 + 88);
  if (*(unsigned char *)(v3 + 92)) {
    int v5 = 0;
  }
  *a2 = v5;
  return result;
}

uint64_t sub_1C8D0784C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C8CD8E90(a1, a2);
}

uint64_t sub_1C8D07864(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  return Google_Protobuf_OneofDescriptorProto.name.setter(v1, v2);
}

uint64_t sub_1C8D078A4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C8CD6060(a1, a2);
}

uint64_t sub_1C8D078BC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CD60DC(a1, a2, a3, a4, Google_Protobuf_OneofDescriptorProto.options.setter);
}

uint64_t sub_1C8D078E8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C8CD8E90(a1, a2);
}

uint64_t sub_1C8D07900(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CD7E8C(a1, a2, a3, a4, (void (*)(void))type metadata accessor for Google_Protobuf_EnumDescriptorProto._StorageClass, 96, sub_1C8CEAC28);
}

uint64_t sub_1C8D07948(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CD8388(a1, a2, a3, a4, (void (*)(void))type metadata accessor for Google_Protobuf_EnumDescriptorProto._StorageClass, 96, sub_1C8CEAC28);
}

uint64_t sub_1C8D07990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CD9E30(a1, a2, a3, a4, Google_Protobuf_EnumDescriptorProto.options.setter);
}

uint64_t keypath_get_89Tm@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  swift_beginAccess();
  *a2 = *(void *)(v3 + 80);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8D07A0C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CD6E90(a1, a2, a3, a4, (void (*)(void))type metadata accessor for Google_Protobuf_EnumDescriptorProto._StorageClass, 96, sub_1C8CEAC28);
}

uint64_t keypath_get_91Tm@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  swift_beginAccess();
  *a2 = *(void *)(v3 + 88);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8D07AA0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CD72A4(a1, a2, a3, a4, (void (*)(void))type metadata accessor for Google_Protobuf_EnumDescriptorProto._StorageClass, 96, sub_1C8CEAC28);
}

uint64_t sub_1C8D07AE4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C8CD8E90(a1, a2);
}

uint64_t sub_1C8D07AFC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CD7E8C(a1, a2, a3, a4, (void (*)(void))type metadata accessor for Google_Protobuf_EnumValueDescriptorProto._StorageClass, 73, sub_1C8CEC38C);
}

uint64_t keypath_get_133Tm@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t result = swift_beginAccess();
  int v5 = *(_DWORD *)(v3 + 32);
  if (*(unsigned char *)(v3 + 36)) {
    int v5 = 0;
  }
  *a2 = v5;
  return result;
}

uint64_t sub_1C8D07B98(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CD78D8(a1, a2, a3, a4, (void (*)(void))type metadata accessor for Google_Protobuf_EnumValueDescriptorProto._StorageClass, 73, sub_1C8CEC38C);
}

uint64_t sub_1C8D07BDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C8CD87E4(a1, a2);
}

uint64_t sub_1C8D07BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CD8870(a1, a2, a3, a4, Google_Protobuf_EnumValueDescriptorProto.options.setter);
}

uint64_t sub_1C8D07C20@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C8CD8E90(a1, a2);
}

uint64_t sub_1C8D07C38(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CD7E8C(a1, a2, a3, a4, (void (*)(void))type metadata accessor for Google_Protobuf_ServiceDescriptorProto._StorageClass, 73, sub_1C8CED500);
}

uint64_t sub_1C8D07C80(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CD8388(a1, a2, a3, a4, (void (*)(void))type metadata accessor for Google_Protobuf_ServiceDescriptorProto._StorageClass, 73, sub_1C8CED500);
}

uint64_t sub_1C8D07CC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C8CD87E4(a1, a2);
}

uint64_t sub_1C8D07CDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CD8870(a1, a2, a3, a4, Google_Protobuf_ServiceDescriptorProto.options.setter);
}

uint64_t sub_1C8D07D08@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C8CD8E90(a1, a2);
}

uint64_t sub_1C8D07D24@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C8CD937C(a1, a2);
}

uint64_t sub_1C8D07D4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8CD9E30(a1, a2, a3, a4, Google_Protobuf_MethodDescriptorProto.options.setter);
}

uint64_t sub_1C8D07D78@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 98) & 1;
  return result;
}

uint64_t sub_1C8D07DC8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 99) & 1;
  return result;
}

uint64_t sub_1C8D07E28@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 48) & 1;
  return result;
}

uint64_t sub_1C8D07E78@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 49) & 1;
  return result;
}

uint64_t sub_1C8D07EC8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 50) & 1;
  return result;
}

uint64_t sub_1C8D07F18@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t result = swift_beginAccess();
  int v5 = *(unsigned __int8 *)(v3 + 51);
  if (v5 == 3) {
    LOBYTE(v5) = 0;
  }
  *a2 = v5;
  return result;
}

uint64_t sub_1C8D07F74@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 72) & 1;
  return result;
}

uint64_t sub_1C8D07FC4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 73) & 1;
  return result;
}

uint64_t sub_1C8D08014@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 74) & 1;
  return result;
}

uint64_t sub_1C8D08064@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 75) & 1;
  return result;
}

uint64_t sub_1C8D080B4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 76) & 1;
  return result;
}

uint64_t sub_1C8D08104@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 77) & 1;
  return result;
}

uint64_t sub_1C8D0818C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 24);
  swift_beginAccess();
  *a2 = *(void *)(v3 + 192);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8D081DC@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 32) & 1;
  return result;
}

unsigned char *sub_1C8D081EC(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 32) = *result;
  return result;
}

uint64_t sub_1C8D081F8@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 33) & 1;
  return result;
}

unsigned char *sub_1C8D08208(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 33) = *result;
  return result;
}

uint64_t sub_1C8D08214@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 34) & 1;
  return result;
}

unsigned char *sub_1C8D08224(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 34) = *result;
  return result;
}

uint64_t sub_1C8D08230@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 35) & 1;
  return result;
}

unsigned char *sub_1C8D08240(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 35) = *result;
  return result;
}

uint64_t sub_1C8D0824C@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  int v2 = *(unsigned __int8 *)(result + 32);
  if (v2 == 3) {
    LOBYTE(v2) = 0;
  }
  *a2 = v2;
  return result;
}

unsigned char *sub_1C8D08260(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 32) = *result;
  return result;
}

uint64_t sub_1C8D0826C@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 33) & 1;
  return result;
}

unsigned char *sub_1C8D0827C(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 33) = *result;
  return result;
}

uint64_t sub_1C8D08288@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  int v2 = *(unsigned __int8 *)(result + 34);
  if (v2 == 3) {
    LOBYTE(v2) = 0;
  }
  *a2 = v2;
  return result;
}

unsigned char *sub_1C8D0829C(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 34) = *result;
  return result;
}

uint64_t sub_1C8D082A8@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 35) & 1;
  return result;
}

unsigned char *sub_1C8D082B8(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 35) = *result;
  return result;
}

uint64_t sub_1C8D082C4@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 36) & 1;
  return result;
}

unsigned char *sub_1C8D082D4(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 36) = *result;
  return result;
}

uint64_t sub_1C8D082E0@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 37) & 1;
  return result;
}

unsigned char *sub_1C8D082F0(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 37) = *result;
  return result;
}

uint64_t sub_1C8D082FC@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 32) & 1;
  return result;
}

unsigned char *sub_1C8D0830C(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 32) = *result;
  return result;
}

uint64_t sub_1C8D08318@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 33) & 1;
  return result;
}

unsigned char *sub_1C8D08328(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 33) = *result;
  return result;
}

uint64_t sub_1C8D08334@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 32) & 1;
  return result;
}

unsigned char *sub_1C8D08344(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 32) = *result;
  return result;
}

uint64_t sub_1C8D08350@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  int v2 = *(unsigned __int8 *)(result + 33);
  if (v2 == 3) {
    LOBYTE(v2) = 0;
  }
  *a2 = v2;
  return result;
}

unsigned char *sub_1C8D08364(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 33) = *result;
  return result;
}

uint64_t sub_1C8D08370@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3)
  {
    *a2 = *(void *)(a1 + 24);
    a2[1] = v3;
  }
  else
  {
    *a2 = 0;
    a2[1] = 0xE000000000000000;
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8D0839C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 24) = v4;
  *(void *)(a2 + 32) = v3;
  return result;
}

uint64_t sub_1C8D083E0@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(result + 40);
  if (*(unsigned char *)(result + 48)) {
    uint64_t v2 = 0;
  }
  *a2 = v2;
  return result;
}

void *sub_1C8D083F8(void *result, uint64_t a2)
{
  *(void *)(a2 + 40) = *result;
  *(unsigned char *)(a2 + 48) = 0;
  return result;
}

uint64_t sub_1C8D08408@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(result + 56);
  if (*(unsigned char *)(result + 64)) {
    uint64_t v2 = 0;
  }
  *a2 = v2;
  return result;
}

void *sub_1C8D08420(void *result, uint64_t a2)
{
  *(void *)(a2 + 56) = *result;
  *(unsigned char *)(a2 + 64) = 0;
  return result;
}

uint64_t sub_1C8D08430@<X0>(uint64_t result@<X0>, double *a2@<X8>)
{
  double v2 = *(double *)(result + 72);
  if (*(unsigned char *)(result + 80)) {
    double v2 = 0.0;
  }
  *a2 = v2;
  return result;
}

void *sub_1C8D0844C(void *result, uint64_t a2)
{
  *(void *)(a2 + 72) = *result;
  *(unsigned char *)(a2 + 80) = 0;
  return result;
}

uint64_t sub_1C8D0845C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 88);
  unint64_t v2 = *(void *)(a1 + 96);
  if (v2 >> 60 == 15) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = *(void *)(a1 + 88);
  }
  unint64_t v5 = 0xC000000000000000;
  if (v2 >> 60 != 15) {
    unint64_t v5 = *(void *)(a1 + 96);
  }
  *a2 = v4;
  a2[1] = v5;
  return sub_1C8D02DB8(v3, v2);
}

uint64_t sub_1C8D08480(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  uint64_t v5 = *(void *)(a2 + 88);
  unint64_t v6 = *(void *)(a2 + 96);
  sub_1C8CA3CF8(*a1, v4);
  uint64_t result = sub_1C8CAA9F0(v5, v6);
  *(void *)(a2 + 88) = v3;
  *(void *)(a2 + 96) = v4;
  return result;
}

uint64_t sub_1C8D084D4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 112);
  if (v3)
  {
    *a2 = *(void *)(a1 + 104);
    a2[1] = v3;
  }
  else
  {
    *a2 = 0;
    a2[1] = 0xE000000000000000;
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8D08500(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 104) = v4;
  *(void *)(a2 + 112) = v3;
  return result;
}

uint64_t sub_1C8D08544@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 24);
  if (v3)
  {
    *a2 = *(void *)(a1 + 16);
    a2[1] = v3;
  }
  else
  {
    *a2 = 0;
    a2[1] = 0xE000000000000000;
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8D08570(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v3;
  return result;
}

uint64_t sub_1C8D085B4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 48);
  if (v3)
  {
    *a2 = *(void *)(a1 + 40);
    a2[1] = v3;
  }
  else
  {
    *a2 = 0;
    a2[1] = 0xE000000000000000;
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8D085E0(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 40) = v4;
  *(void *)(a2 + 48) = v3;
  return result;
}

uint64_t sub_1C8D08624@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 64);
  if (v3)
  {
    *a2 = *(void *)(a1 + 56);
    a2[1] = v3;
  }
  else
  {
    *a2 = 0;
    a2[1] = 0xE000000000000000;
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8D08650(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 56) = v4;
  *(void *)(a2 + 64) = v3;
  return result;
}

uint64_t sub_1C8D08694@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3)
  {
    *a2 = *(void *)(a1 + 24);
    a2[1] = v3;
  }
  else
  {
    *a2 = 0;
    a2[1] = 0xE000000000000000;
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8D086C0(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 24) = v4;
  *(void *)(a2 + 32) = v3;
  return result;
}

uint64_t sub_1C8D08704@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  int v2 = *(_DWORD *)(result + 40);
  if (*(unsigned char *)(result + 44)) {
    int v2 = 0;
  }
  *a2 = v2;
  return result;
}

_DWORD *sub_1C8D0871C(_DWORD *result, uint64_t a2)
{
  *(_DWORD *)(a2 + 40) = *result;
  *(unsigned char *)(a2 + 44) = 0;
  return result;
}

uint64_t sub_1C8D0872C@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  int v2 = *(_DWORD *)(result + 48);
  if (*(unsigned char *)(result + 52)) {
    int v2 = 0;
  }
  *a2 = v2;
  return result;
}

_DWORD *sub_1C8D08744(_DWORD *result, uint64_t a2)
{
  *(_DWORD *)(a2 + 48) = *result;
  *(unsigned char *)(a2 + 52) = 0;
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_FileDescriptorSet()
{
  return &type metadata for Google_Protobuf_FileDescriptorSet;
}

ValueMetadata *type metadata accessor for Google_Protobuf_FileDescriptorProto()
{
  return &type metadata for Google_Protobuf_FileDescriptorProto;
}

ValueMetadata *type metadata accessor for Google_Protobuf_DescriptorProto()
{
  return &type metadata for Google_Protobuf_DescriptorProto;
}

ValueMetadata *type metadata accessor for Google_Protobuf_DescriptorProto.ExtensionRange()
{
  return &type metadata for Google_Protobuf_DescriptorProto.ExtensionRange;
}

__n128 __swift_memcpy29_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_DescriptorProto.ReservedRange()
{
  return &type metadata for Google_Protobuf_DescriptorProto.ReservedRange;
}

ValueMetadata *type metadata accessor for Google_Protobuf_ExtensionRangeOptions()
{
  return &type metadata for Google_Protobuf_ExtensionRangeOptions;
}

ValueMetadata *type metadata accessor for Google_Protobuf_FieldDescriptorProto()
{
  return &type metadata for Google_Protobuf_FieldDescriptorProto;
}

uint64_t getEnumTagSinglePayload for Google_Protobuf_FieldDescriptorProto.TypeEnum(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEF) {
    goto LABEL_17;
  }
  if (a2 + 17 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 17) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 17;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x12;
  int v8 = v6 - 18;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Google_Protobuf_FieldDescriptorProto.TypeEnum(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 17 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 17) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEE)
  {
    unsigned int v6 = ((a2 - 239) >> 8) + 1;
    *__n128 result = a2 + 17;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C8D08978);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 17;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_FieldDescriptorProto.TypeEnum()
{
  return &type metadata for Google_Protobuf_FieldDescriptorProto.TypeEnum;
}

ValueMetadata *type metadata accessor for Google_Protobuf_FieldDescriptorProto.Label()
{
  return &type metadata for Google_Protobuf_FieldDescriptorProto.Label;
}

ValueMetadata *type metadata accessor for Google_Protobuf_OneofDescriptorProto()
{
  return &type metadata for Google_Protobuf_OneofDescriptorProto;
}

ValueMetadata *type metadata accessor for Google_Protobuf_EnumDescriptorProto()
{
  return &type metadata for Google_Protobuf_EnumDescriptorProto;
}

uint64_t _s20SiriOntologyProtobuf35Google_Protobuf_EnumDescriptorProtoV17EnumReservedRangeVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_1C8CA3CF8(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  return a1;
}

uint64_t _s20SiriOntologyProtobuf35Google_Protobuf_EnumDescriptorProtoV17EnumReservedRangeVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_1C8CA3CF8(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  sub_1C8CA3D5C(v6, v7);
  int v8 = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(_DWORD *)(a1 + 16) = v8;
  int v9 = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  *(_DWORD *)(a1 + 24) = v9;
  return a1;
}

uint64_t _s20SiriOntologyProtobuf35Google_Protobuf_EnumDescriptorProtoV17EnumReservedRangeVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1C8CA3D5C(v4, v5);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  return a1;
}

uint64_t _s20SiriOntologyProtobuf35Google_Protobuf_EnumDescriptorProtoV17EnumReservedRangeVwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 29)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t _s20SiriOntologyProtobuf35Google_Protobuf_EnumDescriptorProtoV17EnumReservedRangeVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 28) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 13;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 29) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 29) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_EnumDescriptorProto.EnumReservedRange()
{
  return &type metadata for Google_Protobuf_EnumDescriptorProto.EnumReservedRange;
}

ValueMetadata *type metadata accessor for Google_Protobuf_EnumValueDescriptorProto()
{
  return &type metadata for Google_Protobuf_EnumValueDescriptorProto;
}

ValueMetadata *type metadata accessor for Google_Protobuf_ServiceDescriptorProto()
{
  return &type metadata for Google_Protobuf_ServiceDescriptorProto;
}

ValueMetadata *type metadata accessor for Google_Protobuf_MethodDescriptorProto()
{
  return &type metadata for Google_Protobuf_MethodDescriptorProto;
}

uint64_t destroy for Google_Protobuf_FileOptions(uint64_t a1)
{
  sub_1C8CA3D5C(*(void *)a1, *(void *)(a1 + 8));
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t *initializeWithCopy for Google_Protobuf_FileOptions(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_1C8CA3CF8(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  uint64_t v6 = a2[2];
  uint64_t v7 = a2[3];
  a1[2] = v6;
  a1[3] = v7;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t *assignWithCopy for Google_Protobuf_FileOptions(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_1C8CA3CF8(*a2, v5);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_1C8CA3D5C(v6, v7);
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for Google_Protobuf_FileOptions(uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  sub_1C8CA3D5C(v4, v5);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Google_Protobuf_FileOptions(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Google_Protobuf_FileOptions(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_FileOptions()
{
  return &type metadata for Google_Protobuf_FileOptions;
}

ValueMetadata *type metadata accessor for Google_Protobuf_FileOptions.OptimizeMode()
{
  return &type metadata for Google_Protobuf_FileOptions.OptimizeMode;
}

uint64_t initializeWithCopy for Google_Protobuf_MessageOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(v4, v5);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Google_Protobuf_MessageOptions(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  sub_1C8CA3CF8(v4, v5);
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  sub_1C8CA3D5C(v6, v7);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(unsigned char *)(a1 + 35) = *(unsigned char *)(a2 + 35);
  return a1;
}

uint64_t assignWithTake for Google_Protobuf_MessageOptions(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a1 + 8);
  unint64_t v5 = *(void *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_1C8CA3D5C(v4, v5);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for Google_Protobuf_MessageOptions(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 36)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Google_Protobuf_MessageOptions(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 36) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 36) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_MessageOptions()
{
  return &type metadata for Google_Protobuf_MessageOptions;
}

uint64_t initializeWithCopy for Google_Protobuf_FieldOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(v4, v5);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_WORD *)(a1 + 36) = *(_WORD *)(a2 + 36);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Google_Protobuf_FieldOptions(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  sub_1C8CA3CF8(v4, v5);
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  sub_1C8CA3D5C(v6, v7);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(unsigned char *)(a1 + 35) = *(unsigned char *)(a2 + 35);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(unsigned char *)(a1 + 37) = *(unsigned char *)(a2 + 37);
  return a1;
}

__n128 __swift_memcpy38_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 30) = *(void *)(a2 + 30);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for Google_Protobuf_FieldOptions(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a1 + 8);
  unint64_t v5 = *(void *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_1C8CA3D5C(v4, v5);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_WORD *)(a1 + 36) = *(_WORD *)(a2 + 36);
  return a1;
}

uint64_t getEnumTagSinglePayload for Google_Protobuf_FieldOptions(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 38)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Google_Protobuf_FieldOptions(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_WORD *)(result + 36) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 38) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 38) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_FieldOptions()
{
  return &type metadata for Google_Protobuf_FieldOptions;
}

ValueMetadata *type metadata accessor for Google_Protobuf_FieldOptions.CType()
{
  return &type metadata for Google_Protobuf_FieldOptions.CType;
}

ValueMetadata *type metadata accessor for Google_Protobuf_FieldOptions.JSType()
{
  return &type metadata for Google_Protobuf_FieldOptions.JSType;
}

void *_s20SiriOntologyProtobuf37Google_Protobuf_ExtensionRangeOptionsVwcp_0(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  unint64_t v5 = a2[2];
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(v4, v5);
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  return a1;
}

void *_s20SiriOntologyProtobuf37Google_Protobuf_ExtensionRangeOptionsVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[1];
  unint64_t v5 = a2[2];
  sub_1C8CA3CF8(v4, v5);
  uint64_t v6 = a1[1];
  unint64_t v7 = a1[2];
  a1[1] = v4;
  a1[2] = v5;
  sub_1C8CA3D5C(v6, v7);
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s20SiriOntologyProtobuf37Google_Protobuf_ExtensionRangeOptionsVwta_0(void *a1, uint64_t a2)
{
  *a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a1[1];
  unint64_t v5 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  sub_1C8CA3D5C(v4, v5);
  a1[3] = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for _NameMap(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for _NameMap(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_OneofOptions()
{
  return &type metadata for Google_Protobuf_OneofOptions;
}

__n128 __swift_memcpy34_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_EnumOptions()
{
  return &type metadata for Google_Protobuf_EnumOptions;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_EnumValueOptions()
{
  return &type metadata for Google_Protobuf_EnumValueOptions;
}

uint64_t _s20SiriOntologyProtobuf32Google_Protobuf_EnumValueOptionsVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(v4, v5);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s20SiriOntologyProtobuf32Google_Protobuf_EnumValueOptionsVwca_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  sub_1C8CA3CF8(v4, v5);
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  sub_1C8CA3D5C(v6, v7);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t _s20SiriOntologyProtobuf32Google_Protobuf_EnumValueOptionsVwta_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a1 + 8);
  unint64_t v5 = *(void *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_1C8CA3D5C(v4, v5);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t _s20SiriOntologyProtobuf32Google_Protobuf_EnumValueOptionsVwet_0(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1C8D09630(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_ServiceOptions()
{
  return &type metadata for Google_Protobuf_ServiceOptions;
}

uint64_t _s20SiriOntologyProtobuf28Google_Protobuf_FieldOptionsVwxx_0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_1C8CA3D5C(*(void *)(a1 + 8), *(void *)(a1 + 16));
  return swift_bridgeObjectRelease();
}

uint64_t _s20SiriOntologyProtobuf27Google_Protobuf_EnumOptionsVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(v4, v5);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s20SiriOntologyProtobuf27Google_Protobuf_EnumOptionsVwca_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  sub_1C8CA3CF8(v4, v5);
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  sub_1C8CA3D5C(v6, v7);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  return a1;
}

uint64_t _s20SiriOntologyProtobuf27Google_Protobuf_EnumOptionsVwta_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a1 + 8);
  unint64_t v5 = *(void *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_1C8CA3D5C(v4, v5);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  return a1;
}

uint64_t _s20SiriOntologyProtobuf27Google_Protobuf_EnumOptionsVwet_0(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 34)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1C8D09860(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 34) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 34) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_MethodOptions()
{
  return &type metadata for Google_Protobuf_MethodOptions;
}

uint64_t getEnumTagSinglePayload for AnyUnpackError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s20SiriOntologyProtobuf36Google_Protobuf_FieldDescriptorProtoV5LabelOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C8D09A10);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_MethodOptions.IdempotencyLevel()
{
  return &type metadata for Google_Protobuf_MethodOptions.IdempotencyLevel;
}

uint64_t destroy for Google_Protobuf_UninterpretedOption(void *a1)
{
  swift_bridgeObjectRelease();
  sub_1C8CA3D5C(a1[1], a1[2]);
  swift_bridgeObjectRelease();
  unint64_t v2 = a1[12];
  if (v2 >> 60 != 15) {
    sub_1C8CA3D5C(a1[11], v2);
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Google_Protobuf_UninterpretedOption(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(v4, v5);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  BOOL v7 = (_OWORD *)(a2 + 88);
  unint64_t v8 = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  if (v8 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 88) = *v7;
  }
  else
  {
    uint64_t v9 = *(void *)v7;
    sub_1C8CA3CF8(v9, v8);
    *(void *)(a1 + 88) = v9;
    *(void *)(a1 + 96) = v8;
  }
  uint64_t v10 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Google_Protobuf_UninterpretedOption(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  sub_1C8CA3CF8(v4, v5);
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  sub_1C8CA3D5C(v6, v7);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v8;
  uint64_t v9 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v9;
  uint64_t v10 = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = v10;
  uint64_t v11 = (uint64_t *)(a2 + 88);
  unint64_t v12 = *(void *)(a2 + 96);
  if (*(void *)(a1 + 96) >> 60 != 15)
  {
    if (v12 >> 60 != 15)
    {
      uint64_t v14 = *v11;
      sub_1C8CA3CF8(*v11, *(void *)(a2 + 96));
      uint64_t v15 = *(void *)(a1 + 88);
      unint64_t v16 = *(void *)(a1 + 96);
      *(void *)(a1 + 88) = v14;
      *(void *)(a1 + 96) = v12;
      sub_1C8CA3D5C(v15, v16);
      goto LABEL_8;
    }
    sub_1C8D09CD4(a1 + 88);
    goto LABEL_6;
  }
  if (v12 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 88) = *(_OWORD *)v11;
    goto LABEL_8;
  }
  uint64_t v13 = *v11;
  sub_1C8CA3CF8(*v11, *(void *)(a2 + 96));
  *(void *)(a1 + 88) = v13;
  *(void *)(a1 + 96) = v12;
LABEL_8:
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C8D09CD4(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy120_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for Google_Protobuf_UninterpretedOption(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a1 + 8);
  unint64_t v5 = *(void *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_1C8CA3D5C(v4, v5);
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  long long v7 = (void *)(a2 + 88);
  unint64_t v8 = *(void *)(a1 + 96);
  if (v8 >> 60 != 15)
  {
    unint64_t v9 = *(void *)(a2 + 96);
    if (v9 >> 60 != 15)
    {
      uint64_t v10 = *(void *)(a1 + 88);
      *(void *)(a1 + 88) = *v7;
      *(void *)(a1 + 96) = v9;
      sub_1C8CA3D5C(v10, v8);
      goto LABEL_6;
    }
    sub_1C8D09CD4(a1 + 88);
  }
  *(_OWORD *)(a1 + 88) = *(_OWORD *)v7;
LABEL_6:
  uint64_t v11 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Google_Protobuf_UninterpretedOption(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 120)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Google_Protobuf_UninterpretedOption(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_UninterpretedOption()
{
  return &type metadata for Google_Protobuf_UninterpretedOption;
}

uint64_t destroy for Google_Protobuf_UninterpretedOption.NamePart(uint64_t a1)
{
  sub_1C8CA3D5C(*(void *)a1, *(void *)(a1 + 8));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Google_Protobuf_UninterpretedOption.NamePart(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_1C8CA3CF8(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Google_Protobuf_UninterpretedOption.NamePart(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_1C8CA3CF8(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  sub_1C8CA3D5C(v6, v7);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for Google_Protobuf_UninterpretedOption.NamePart(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1C8CA3D5C(v4, v5);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for Google_Protobuf_UninterpretedOption.NamePart(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Google_Protobuf_UninterpretedOption.NamePart(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_UninterpretedOption.NamePart()
{
  return &type metadata for Google_Protobuf_UninterpretedOption.NamePart;
}

ValueMetadata *type metadata accessor for Google_Protobuf_SourceCodeInfo()
{
  return &type metadata for Google_Protobuf_SourceCodeInfo;
}

uint64_t destroy for Google_Protobuf_SourceCodeInfo.Location(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C8CA3D5C(*(void *)(a1 + 24), *(void *)(a1 + 32));
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for Google_Protobuf_SourceCodeInfo.Location(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  unint64_t v6 = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(v5, v6);
  a1[3] = v5;
  a1[4] = v6;
  uint64_t v7 = a2[6];
  a1[5] = a2[5];
  a1[6] = v7;
  uint64_t v8 = a2[7];
  uint64_t v9 = a2[8];
  a1[7] = v8;
  a1[8] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for Google_Protobuf_SourceCodeInfo.Location(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[3];
  unint64_t v5 = a2[4];
  sub_1C8CA3CF8(v4, v5);
  uint64_t v6 = a1[3];
  unint64_t v7 = a1[4];
  a1[3] = v4;
  a1[4] = v5;
  sub_1C8CA3D5C(v6, v7);
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Google_Protobuf_SourceCodeInfo.Location(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a1 + 24);
  unint64_t v5 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  sub_1C8CA3D5C(v4, v5);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Google_Protobuf_SourceCodeInfo.Location(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Google_Protobuf_SourceCodeInfo.Location(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_SourceCodeInfo.Location()
{
  return &type metadata for Google_Protobuf_SourceCodeInfo.Location;
}

uint64_t destroy for Google_Protobuf_FieldMask(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v3 = *(void *)(a1 + 16);
  return sub_1C8CA3D5C(v2, v3);
}

void *_s20SiriOntologyProtobuf30Google_Protobuf_SourceCodeInfoVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  unint64_t v4 = a2[2];
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(v3, v4);
  a1[1] = v3;
  a1[2] = v4;
  return a1;
}

void *assignWithCopy for Google_Protobuf_FieldMask(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[1];
  unint64_t v4 = a2[2];
  sub_1C8CA3CF8(v5, v4);
  uint64_t v6 = a1[1];
  unint64_t v7 = a1[2];
  a1[1] = v5;
  a1[2] = v4;
  sub_1C8CA3D5C(v6, v7);
  return a1;
}

void *assignWithTake for Google_Protobuf_FieldMask(void *a1, uint64_t a2)
{
  *a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a1[1];
  unint64_t v5 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  sub_1C8CA3D5C(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for Google_Protobuf_FieldMask(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Google_Protobuf_FieldMask(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_GeneratedCodeInfo()
{
  return &type metadata for Google_Protobuf_GeneratedCodeInfo;
}

uint64_t destroy for Google_Protobuf_GeneratedCodeInfo.Annotation(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_1C8CA3D5C(*(void *)(a1 + 8), *(void *)(a1 + 16));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Google_Protobuf_GeneratedCodeInfo.Annotation(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(v4, v5);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Google_Protobuf_GeneratedCodeInfo.Annotation(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  sub_1C8CA3CF8(v4, v5);
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  sub_1C8CA3D5C(v6, v7);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v8 = *(_DWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
  *(_DWORD *)(a1 + 40) = v8;
  int v9 = *(_DWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  *(_DWORD *)(a1 + 48) = v9;
  return a1;
}

__n128 __swift_memcpy53_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 45) = *(void *)(a2 + 45);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for Google_Protobuf_GeneratedCodeInfo.Annotation(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a1 + 8);
  unint64_t v5 = *(void *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_1C8CA3D5C(v4, v5);
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  return a1;
}

uint64_t getEnumTagSinglePayload for Google_Protobuf_GeneratedCodeInfo.Annotation(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 53)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Google_Protobuf_GeneratedCodeInfo.Annotation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 52) = 0;
    *(_DWORD *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 53) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 53) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_GeneratedCodeInfo.Annotation()
{
  return &type metadata for Google_Protobuf_GeneratedCodeInfo.Annotation;
}

uint64_t sub_1C8D0A87C()
{
  sub_1C8CA3D5C(*(void *)(v0 + 16), *(void *)(v0 + 24));
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 49, 7);
}

unint64_t sub_1C8D0A8BC()
{
  unint64_t result = qword_1EA566BA0;
  if (!qword_1EA566BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566BA0);
  }
  return result;
}

unint64_t sub_1C8D0A910()
{
  unint64_t result = qword_1EA566BA8;
  if (!qword_1EA566BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566BA8);
  }
  return result;
}

unint64_t sub_1C8D0A964()
{
  unint64_t result = qword_1EA566BB0;
  if (!qword_1EA566BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566BB0);
  }
  return result;
}

uint64_t sub_1C8D0A9B8()
{
  swift_bridgeObjectRelease();
  sub_1C8CA3D5C(v0[3], v0[4]);
  swift_bridgeObjectRelease();
  unint64_t v1 = v0[14];
  if (v1 >> 60 != 15) {
    sub_1C8CA3D5C(v0[13], v1);
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 136, 7);
}

uint64_t sub_1C8D0ABD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return Decoder.decodeExtensionFieldsAsMessageSet(values:messageType:)(a1, a2, a3, a4, a5);
}

void sub_1C8D0ABE8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v59 = a3;
  uint64_t v5 = v3;
  while (1)
  {
    char v7 = *(unsigned char *)(v5 + 73);
    int v8 = *(unsigned __int8 **)(v5 + 40);
    int v9 = *(unsigned __int8 **)(v5 + 48);
    if ((v7 & 1) == 0 && v8 != v9 && *v8 == *(unsigned __int8 *)(v5 + 72))
    {
      *(void *)(v5 + 40) = v8 + 1;
      sub_1C8CB2098();
      return;
    }
    uint64_t v10 = *(void *)(v5 + 64);
    if (v10 >= 1 && v8 != v9)
    {
      int v12 = *v8;
      if (v12 == 44 || v12 == 59)
      {
        *(void *)(v5 + 40) = ++v8;
        if (v8 == v9) {
          goto LABEL_28;
        }
        while (1)
        {
          uint64_t v14 = *v8;
          if (v14 > 0x23) {
            break;
          }
          if (((1 << v14) & 0x100002600) != 0)
          {
            uint64_t i = v8 + 1;
            *(void *)(v5 + 40) = v8 + 1;
          }
          else
          {
            if (v14 != 35) {
              break;
            }
            *(void *)(v5 + 40) = v8 + 1;
            if (v8 + 1 == v9) {
              goto LABEL_28;
            }
            int v15 = v8[1];
            uint64_t i = v8 + 2;
            *(void *)(v5 + 40) = v8 + 2;
            if (v15 != 10 && v15 != 13)
            {
              if (i == v9) {
                goto LABEL_28;
              }
              int v16 = v8[2];
              for (uint64_t i = v8 + 3; ; ++i)
              {
                *(void *)(v5 + 40) = i;
                if (v16 == 10 || v16 == 13) {
                  break;
                }
                if (i == v9) {
                  goto LABEL_28;
                }
                int v17 = *i;
                int v16 = v17;
              }
            }
          }
          int v8 = i;
          if (i == v9) {
            goto LABEL_28;
          }
        }
      }
    }
    if (v8 == v9) {
      goto LABEL_28;
    }
    while (1)
    {
      uint64_t v24 = *v8;
      if (v24 > 0x23) {
        break;
      }
      if (((1 << v24) & 0x100002600) != 0)
      {
        uint64_t j = v8 + 1;
        *(void *)(v5 + 40) = v8 + 1;
      }
      else
      {
        if (v24 != 35) {
          break;
        }
        *(void *)(v5 + 40) = v8 + 1;
        if (v8 + 1 == v9) {
          goto LABEL_28;
        }
        int v25 = v8[1];
        uint64_t j = v8 + 2;
        *(void *)(v5 + 40) = v8 + 2;
        if (v25 != 10 && v25 != 13)
        {
          if (j == v9) {
            goto LABEL_28;
          }
          int v26 = v8[2];
          for (uint64_t j = v8 + 3; ; ++j)
          {
            *(void *)(v5 + 40) = j;
            if (v26 == 10 || v26 == 13) {
              break;
            }
            if (j == v9) {
              goto LABEL_28;
            }
            int v27 = *j;
            int v26 = v27;
          }
        }
      }
      int v8 = j;
      if (j == v9) {
        goto LABEL_28;
      }
    }
    if (v8 == v9 || v24 != 91)
    {
LABEL_28:
      if (!*(void *)(v5 + 80)) {
        goto LABEL_99;
      }
      uint64_t v18 = *(void *)(v5 + 104);
      uint64_t v55 = *(void *)(v5 + 80);
      long long v56 = *(_OWORD *)(v5 + 88);
      uint64_t v57 = v18;
      uint64_t v19 = sub_1C8CB438C((uint64_t)&v55);
      if (v4) {
        return;
      }
      if ((v20 & 1) == 0)
      {
        uint64_t v21 = v10 + 1;
        if (!__OFADD__(v10, 1))
        {
          uint64_t v22 = v19;
          goto LABEL_33;
        }
        __break(1u);
LABEL_93:
        swift_bridgeObjectRelease();
LABEL_94:
        sub_1C8CB47EC();
        swift_allocError();
        *uint64_t v53 = 0;
LABEL_95:
        swift_willThrow();
        return;
      }
      if (v7) {
        return;
      }
      sub_1C8CB47EC();
      swift_allocError();
      char v52 = 3;
LABEL_90:
      char *v51 = v52;
      goto LABEL_95;
    }
    uint64_t v28 = (char *)(v8 + 1);
    *(void *)(v5 + 40) = v8 + 1;
    if (v8 + 1 == v9) {
      goto LABEL_94;
    }
    if ((*v28 & 0xDFu) - 91 < 0xFFFFFFE6) {
      goto LABEL_94;
    }
    *(void *)(v5 + 40) = v8 + 2;
    if (v8 + 2 == v9) {
      goto LABEL_94;
    }
    uint64_t v29 = 0;
    while (1)
    {
      int v30 = v8[v29 + 2];
      BOOL v31 = (v30 - 58) > 0xFFFFFFF5 || (v30 & 0xFFFFFFDF) - 91 > 0xFFFFFFE5;
      if (!v31 && (v30 - 46) >= 2 && v30 != 95) {
        break;
      }
      *(void *)(v5 + 40) = &v8[v29++ + 3];
      if (&v8[v29 + 2] == v9) {
        goto LABEL_94;
      }
    }
    if (v30 != 93) {
      goto LABEL_94;
    }
    int v32 = sub_1C8CA96A4(v28, v29 + 1);
    if (!v33) {
      goto LABEL_94;
    }
    char v34 = &v8[v29 + 2];
    if (v34 == v9 || *v34 != 93) {
      goto LABEL_93;
    }
    char v35 = v32;
    uint64_t v36 = &v8[v29 + 3];
    *(void *)(v5 + 40) = v36;
    if (v36 != v9)
    {
      do
      {
        uint64_t v46 = *v36;
        if (v46 > 0x23) {
          break;
        }
        if (((1 << v46) & 0x100002600) != 0)
        {
          size_t v45 = v36 + 1;
          *(void *)(v5 + 40) = v36 + 1;
        }
        else
        {
          if (v46 != 35) {
            break;
          }
          *(void *)(v5 + 40) = v36 + 1;
          if (v36 + 1 == v9) {
            break;
          }
          int v47 = v36[1];
          size_t v45 = v36 + 2;
          *(void *)(v5 + 40) = v36 + 2;
          if (v47 != 10 && v47 != 13)
          {
            if (v45 == v9) {
              break;
            }
            int v48 = v36[2];
            size_t v45 = v36 + 3;
            *(void *)(v5 + 40) = v36 + 3;
            if (v48 != 10 && v48 != 13)
            {
              while (v45 != v9)
              {
                int v50 = *v45++;
                int v49 = v50;
                *(void *)(v5 + 40) = v45;
                if (v50 == 10 || v49 == 13) {
                  goto LABEL_74;
                }
              }
              break;
            }
          }
        }
LABEL_74:
        uint64_t v36 = v45;
      }
      while (v45 != v9);
    }
    if (!*(void *)(v5 + 24))
    {
      swift_bridgeObjectRelease();
LABEL_98:
      sub_1C8CB47EC();
      swift_allocError();
      char v52 = 7;
      goto LABEL_90;
    }
    uint64_t v37 = v33;
    sub_1C8CA425C(v5, (uint64_t)&v55);
    uint64_t v39 = v57;
    uint64_t v38 = v58;
    __swift_project_boxed_opaque_existential_1(&v55, v57);
    uint64_t v40 = *(void *)(v5 + 112);
    if (!v40) {
      goto LABEL_100;
    }
    uint64_t v22 = (*(uint64_t (**)(uint64_t, void, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v38 + 16))(v40, *(void *)(v5 + 120), v35, v37, v39, v38);
    char v42 = v41;
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v55);
    if (v42) {
      goto LABEL_98;
    }
    uint64_t v43 = *(void *)(v5 + 64);
    BOOL v44 = __OFADD__(v43, 1);
    uint64_t v21 = v43 + 1;
    if (v44) {
      break;
    }
LABEL_33:
    *(void *)(v5 + 64) = v21;
    sub_1C8D3AAC4(a1, a2, v59, v22);
    if (v4) {
      return;
    }
  }
  __break(1u);
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
}

uint64_t Decoder.decodeExtensionFieldsAsMessageSet(values:messageType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 16);
  while (1)
  {
    uint64_t result = v11(a4, a5);
    if (v5 || (v13 & 1) != 0) {
      break;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 464))(a1, a2, a3, result, a4, a5);
  }
  return result;
}

uint64_t dispatch thunk of Decoder.handleConflictingOneOf()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of Decoder.decodeSingularFloatField(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedFloatField(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedDoubleField(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedInt32Field(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of Decoder.decodeSingularInt64Field(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedInt64Field(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 112))();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedUInt32Field(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 136))();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedUInt64Field(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 160))();
}

uint64_t dispatch thunk of Decoder.decodeSingularSInt32Field(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 168))();
}

{
  return (*(uint64_t (**)(void))(a3 + 176))();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedSInt32Field(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 184))();
}

uint64_t dispatch thunk of Decoder.decodeSingularSInt64Field(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 192))();
}

{
  return (*(uint64_t (**)(void))(a3 + 200))();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedSInt64Field(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 208))();
}

uint64_t dispatch thunk of Decoder.decodeSingularFixed32Field(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 216))();
}

{
  return (*(uint64_t (**)(void))(a3 + 224))();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedFixed32Field(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 232))();
}

uint64_t dispatch thunk of Decoder.decodeSingularFixed64Field(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 240))();
}

{
  return (*(uint64_t (**)(void))(a3 + 248))();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedFixed64Field(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 256))();
}

uint64_t dispatch thunk of Decoder.decodeSingularSFixed32Field(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 264))();
}

{
  return (*(uint64_t (**)(void))(a3 + 272))();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedSFixed32Field(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 280))();
}

uint64_t dispatch thunk of Decoder.decodeSingularSFixed64Field(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 288))();
}

{
  return (*(uint64_t (**)(void))(a3 + 296))();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedSFixed64Field(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 304))();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedBoolField(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 328))();
}

uint64_t dispatch thunk of Decoder.decodeSingularBytesField(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 360))();
}

{
  return (*(uint64_t (**)(void))(a3 + 368))();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedBytesField(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 376))();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedEnumField<A>(value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 400))();
}

uint64_t dispatch thunk of Decoder.decodeSingularGroupField<A>(value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 424))();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedGroupField<A>(value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 432))();
}

uint64_t dispatch thunk of Decoder.decodeMapField<A, B>(fieldType:value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 440))();
}

{
  return (*(uint64_t (**)(void))(a7 + 448))();
}

uint64_t dispatch thunk of Decoder.decodeMapField<A, B>(fieldType:value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 456))();
}

uint64_t dispatch thunk of Decoder.decodeExtensionField(values:messageType:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 464))();
}

uint64_t dispatch thunk of Decoder.decodeExtensionFieldsAsMessageSet(values:messageType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 472))();
}

void sub_1C8D0B820(uint64_t *a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1C8D0B838()
{
  return sub_1C8D0B850();
}

uint64_t sub_1C8D0B850()
{
  uint64_t result = sub_1C8CAFFD8();
  if ((result & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + 72);
    if (v3 < 1 || (uint64_t result = sub_1C8CAFD2C(44), !v1))
    {
      if (!*(void *)(v0 + 88)) {
        goto LABEL_11;
      }
      uint64_t v4 = *(void *)(v0 + 112);
      uint64_t v7 = *(void *)(v0 + 88);
      long long v8 = *(_OWORD *)(v0 + 96);
      uint64_t v9 = v4;
      uint64_t result = sub_1C8CAF78C((uint64_t)&v7);
      if (!v1 && (v5 & 1) == 0)
      {
        if (!__OFADD__(v3, 1))
        {
          *(void *)(v0 + 72) = v3 + 1;
          sub_1C8CAC5B0();
          swift_allocError();
          _OWORD *v6 = xmmword_1C8D8E4B0;
          return swift_willThrow();
        }
        __break(1u);
LABEL_11:
        __break(1u);
      }
    }
  }
  return result;
}

uint64_t sub_1C8D0B920()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1) {
    MEMORY[0x1CB773830](v1, -1, -1);
  }
  return MEMORY[0x1F4186488](v0, 32, 7);
}

uint64_t type metadata accessor for DoubleParser()
{
  return self;
}

char *sub_1C8D0B988(void *__src, int64_t __len)
{
  v9[1] = *(char **)MEMORY[0x1E4F143B8];
  uint64_t v3 = *(void *)(v2 + 16);
  if (!v3) {
    return 0;
  }
  uint64_t result = 0;
  if (__len >= 1 && *(void *)(v2 + 24) - v3 > __len)
  {
    memmove(*(void **)(v2 + 16), __src, __len);
    uint64_t result = *(char **)(v2 + 16);
    uint64_t v7 = &result[__len];
    *uint64_t v7 = 0;
    if (!result)
    {
      __break(1u);
      return result;
    }
    v9[0] = result;
    double v8 = strtod(result, v9);
    if (!v9[0]) {
      return 0;
    }
    if (v7 != v9[0]) {
      return 0;
    }
    uint64_t result = *(char **)&v8;
    if ((~*(void *)&v8 & 0x7FF0000000000000) == 0) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_1C8D0BA68()
{
  unint64_t result = qword_1EA566BB8;
  if (!qword_1EA566BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566BB8);
  }
  return result;
}

void sub_1C8D0BABC(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

void sub_1C8D0BAC8(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0xF000000000000000;
}

void sub_1C8D0BAD8(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0xF000000000000000;
}

void sub_1C8D0BAE8(void *a1@<X8>)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = 2;
}

double sub_1C8D0BAF8@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

double sub_1C8D0BB04@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)a1 = xmmword_1C8D8BEE0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  return result;
}

void sub_1C8D0BB18(void *a1@<X8>)
{
}

void sub_1C8D0BB30(void *a1@<X8>)
{
}

uint64_t TextFormatEncodingOptions.printUnknownFields.getter()
{
  return *v0;
}

uint64_t TextFormatEncodingOptions.printUnknownFields.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*TextFormatEncodingOptions.printUnknownFields.modify())()
{
  return nullsub_1;
}

SiriOntologyProtobuf::TextFormatEncodingOptions __swiftcall TextFormatEncodingOptions.init()()
{
  *uint64_t v0 = 1;
  return result;
}

uint64_t getEnumTagSinglePayload for TextFormatEncodingOptions(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TextFormatEncodingOptions(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *SiriOntologyProtobuf::TextFormatEncodingOptions result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C8D0BCF0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *SiriOntologyProtobuf::TextFormatEncodingOptions result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextFormatEncodingOptions()
{
  return &type metadata for TextFormatEncodingOptions;
}

void sub_1C8D0BD28()
{
  qword_1EA566BC0 = -315576000000;
}

uint64_t sub_1C8D0BD40()
{
  swift_bridgeObjectRetain();
  uint64_t v0 = 0;
  uint64_t v63 = 0;
  uint64_t v1 = 0;
  int v2 = (char *)MEMORY[0x1E4FBC860];
  char v64 = 1;
  do
  {
    uint64_t v5 = sub_1C8D88410();
    if (!v6) {
      goto LABEL_106;
    }
    uint64_t v7 = v5;
    uint64_t v8 = v6;
    if (v5 == 45 && v6 == 0xE100000000000000 || (sub_1C8D887C0() & 1) != 0)
    {
      if (v0)
      {
        swift_bridgeObjectRelease();
LABEL_106:
        swift_bridgeObjectRelease();
LABEL_107:
        sub_1C8CAC5B0();
        swift_allocError();
        _OWORD *v46 = xmmword_1C8D8E550;
        swift_willThrow();
        return swift_bridgeObjectRelease();
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int v2 = sub_1C8D5EF58(0, *((void *)v2 + 2) + 1, 1, v2);
      }
      unint64_t v10 = *((void *)v2 + 2);
      unint64_t v9 = *((void *)v2 + 3);
      if (v10 >= v9 >> 1) {
        int v2 = sub_1C8D5EF58((char *)(v9 > 1), v10 + 1, 1, v2);
      }
      *((void *)v2 + 2) = v10 + 1;
      int v3 = &v2[16 * v10];
      *((void *)v3 + 4) = v7;
      *((void *)v3 + 5) = v8;
    }
    else
    {
      if (v7 == 48 && v8 == 0xE100000000000000) {
        goto LABEL_15;
      }
      char v14 = sub_1C8D887C0();
      BOOL v15 = v7 == 49 && v8 == 0xE100000000000000;
      BOOL v16 = v15;
      if ((v14 & 1) != 0 || v16) {
        goto LABEL_15;
      }
      char v17 = sub_1C8D887C0();
      BOOL v18 = v7 == 50 && v8 == 0xE100000000000000;
      BOOL v19 = v18;
      if ((v17 & 1) != 0 || v19) {
        goto LABEL_15;
      }
      char v20 = sub_1C8D887C0();
      BOOL v21 = v7 == 51 && v8 == 0xE100000000000000;
      BOOL v22 = v21;
      if ((v20 & 1) != 0 || v22) {
        goto LABEL_15;
      }
      char v23 = sub_1C8D887C0();
      BOOL v24 = v7 == 52 && v8 == 0xE100000000000000;
      BOOL v25 = v24;
      if ((v23 & 1) != 0 || v25) {
        goto LABEL_15;
      }
      char v26 = sub_1C8D887C0();
      BOOL v27 = v7 == 53 && v8 == 0xE100000000000000;
      BOOL v28 = v27;
      if ((v26 & 1) != 0 || v28) {
        goto LABEL_15;
      }
      char v29 = sub_1C8D887C0();
      BOOL v30 = v7 == 54 && v8 == 0xE100000000000000;
      BOOL v31 = v30;
      if ((v29 & 1) != 0 || v31) {
        goto LABEL_15;
      }
      char v32 = sub_1C8D887C0();
      BOOL v33 = v7 == 55 && v8 == 0xE100000000000000;
      BOOL v34 = v33;
      if ((v32 & 1) != 0
        || v34
        || ((char v35 = sub_1C8D887C0(), v7 == 56) ? (v36 = v8 == 0xE100000000000000) : (v36 = 0),
            !v36 ? (char v37 = 0) : (char v37 = 1),
            (v35 & 1) != 0
         || (v37 & 1) != 0
         || ((char v38 = sub_1C8D887C0(), v7 == 57) ? (v39 = v8 == 0xE100000000000000) : (v39 = 0),
             !v39 ? (char v40 = 0) : (char v40 = 1),
             (v38 & 1) != 0 || (v40 & 1) != 0 || (sub_1C8D887C0() & 1) != 0)))
      {
LABEL_15:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int v2 = sub_1C8D5EF58(0, *((void *)v2 + 2) + 1, 1, v2);
        }
        unint64_t v12 = *((void *)v2 + 2);
        unint64_t v11 = *((void *)v2 + 3);
        if (v12 >= v11 >> 1) {
          int v2 = sub_1C8D5EF58((char *)(v11 > 1), v12 + 1, 1, v2);
        }
        *((void *)v2 + 2) = v12 + 1;
        char v13 = &v2[16 * v12];
        *((void *)v13 + 4) = v7;
        *((void *)v13 + 5) = v8;
        BOOL v4 = __OFADD__(v1++, 1);
        if (v4) {
          goto LABEL_109;
        }
      }
      else
      {
        if ((v7 != 46 || v8 != 0xE100000000000000) && (sub_1C8D887C0() & 1) == 0) {
          goto LABEL_110;
        }
        swift_bridgeObjectRelease();
        if ((v64 & 1) == 0) {
          goto LABEL_106;
        }
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA566BC8);
        sub_1C8D0CFF4();
        uint64_t v41 = sub_1C8D88490();
        uint64_t v43 = sub_1C8D0C46C(v41, v42);
        if (v44) {
          goto LABEL_106;
        }
        uint64_t v45 = v43;
        if (qword_1EA565BE0 != -1) {
          swift_once();
        }
        uint64_t v8 = qword_1EA566BC0;
        swift_bridgeObjectRelease();
        if (v45 > 315576000000 || v45 < v8) {
          goto LABEL_107;
        }
        uint64_t v63 = v45;
        char v64 = 0;
        uint64_t v1 = 0;
        int v2 = (char *)MEMORY[0x1E4FBC860];
      }
    }
    BOOL v4 = __OFADD__(v0++, 1);
  }
  while (!v4);
  __break(1u);
LABEL_109:
  __break(1u);
LABEL_110:
  if (v7 == 115 && v8 == 0xE100000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v48 = sub_1C8D887C0();
    swift_bridgeObjectRelease();
    if ((v48 & 1) == 0) {
      goto LABEL_106;
    }
  }
  if (v64)
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA566BC8);
    sub_1C8D0CFF4();
    uint64_t v49 = sub_1C8D88490();
    uint64_t v63 = sub_1C8D0C46C(v49, v50);
    if (v51) {
      goto LABEL_106;
    }
    if (qword_1EA565BE0 == -1) {
      goto LABEL_117;
    }
    goto LABEL_143;
  }
  if (v1 > 8)
  {
    if (v1 != 9)
    {
      uint64_t v61 = v1 + 1;
      while (*((void *)v2 + 2))
      {
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          uint64_t v62 = *((void *)v2 + 2);
          if (!v62) {
            goto LABEL_141;
          }
        }
        else
        {
          int v2 = sub_1C8CC54EC((uint64_t)v2);
          uint64_t v62 = *((void *)v2 + 2);
          if (!v62)
          {
LABEL_141:
            __break(1u);
            break;
          }
        }
        *((void *)v2 + 2) = v62 - 1;
        swift_bridgeObjectRelease();
        if (--v61 <= 10) {
          goto LABEL_129;
        }
      }
      __break(1u);
LABEL_143:
      swift_once();
LABEL_117:
      if (v63 < qword_1EA566BC0 || v63 > 315576000000) {
        goto LABEL_106;
      }
      goto LABEL_132;
    }
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int v2 = sub_1C8D5EF58(0, *((void *)v2 + 2) + 1, 1, v2);
    }
    unint64_t v52 = *((void *)v2 + 2);
    uint64_t v53 = 16 * v52;
    do
    {
      unint64_t v54 = *((void *)v2 + 3);
      unint64_t v55 = v52 + 1;
      if (v52 >= v54 >> 1) {
        int v2 = sub_1C8D5EF58((char *)(v54 > 1), v52 + 1, 1, v2);
      }
      *((void *)v2 + 2) = v55;
      long long v56 = &v2[v53];
      *((void *)v56 + 4) = 48;
      *((void *)v56 + 5) = 0xE100000000000000;
      ++v1;
      v53 += 16;
      unint64_t v52 = v55;
    }
    while (v1 < 9);
  }
LABEL_129:
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA566BC8);
  sub_1C8D0CFF4();
  uint64_t v57 = sub_1C8D88490();
  uint64_t result = sub_1C8D0C6BC(v57, v58);
  if ((result & 0x100000000) != 0) {
    goto LABEL_106;
  }
  if (v63 < 0 && __OFSUB__(0, result))
  {
    __break(1u);
    return result;
  }
LABEL_132:
  sub_1C8D88410();
  uint64_t v60 = v59;
  swift_bridgeObjectRelease();
  if (v60) {
    goto LABEL_106;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v63;
}

uint64_t sub_1C8D0C46C(uint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0) {
        uint64_t v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v6 = (unsigned __int8 *)sub_1C8D886C0();
      }
      uint64_t v7 = (uint64_t)sub_1C8D0D4A0(v6, v4, 10);
      char v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3) {
        goto LABEL_50;
      }
      if (v3 == 1 || (BYTE1(result) - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (BYTE1(result) - 48);
      uint64_t v14 = v3 - 2;
      if (v14)
      {
        BOOL v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          unsigned int v16 = *v15 - 48;
          if (v16 > 9) {
            goto LABEL_34;
          }
          uint64_t v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v17 + v16;
          if (__OFADD__(v17, v16)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v15;
          if (!--v14) {
            goto LABEL_37;
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            uint64_t v7 = -(uint64_t)(BYTE1(result) - 48);
            uint64_t v10 = v3 - 2;
            if (v10)
            {
              unint64_t v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                unsigned int v12 = *v11 - 48;
                if (v12 > 9) {
                  goto LABEL_34;
                }
                uint64_t v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
                  goto LABEL_34;
                }
                uint64_t v7 = v13 - v12;
                if (__OFSUB__(v13, v12)) {
                  goto LABEL_34;
                }
                char v9 = 0;
                ++v11;
                if (!--v10) {
                  goto LABEL_37;
                }
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          uint64_t v7 = 0;
          char v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (result - 48);
      uint64_t v18 = v3 - 1;
      if (v18)
      {
        BOOL v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          unsigned int v20 = *v19 - 48;
          if (v20 > 9) {
            goto LABEL_34;
          }
          uint64_t v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v21 + v20;
          if (__OFADD__(v21, v20)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v19;
          if (!--v18) {
            goto LABEL_37;
          }
        }
      }
    }
LABEL_36:
    char v9 = 0;
    goto LABEL_37;
  }
  uint64_t v7 = (uint64_t)sub_1C8D0D138(result, a2, 10);
  char v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if (v9) {
    return 0;
  }
  else {
    return v7;
  }
}

uint64_t sub_1C8D0C6BC(uint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    uint64_t v19 = 0;
    LOBYTE(v18) = 1;
    return v19 | ((unint64_t)v18 << 32);
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    unint64_t v8 = sub_1C8D0D050(result, a2, 10);
    swift_bridgeObjectRelease();
    uint64_t v18 = HIDWORD(v8) & 1;
LABEL_36:
    uint64_t v19 = v8;
    if (v18) {
      uint64_t v19 = 0;
    }
    return v19 | ((unint64_t)v18 << 32);
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0) {
      uint64_t v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v6 = (unsigned __int8 *)sub_1C8D886C0();
    }
    uint64_t v7 = sub_1C8D0D220(v6, v4, 10);
    LODWORD(v8) = v7;
    char v25 = BYTE4(v7) & 1;
    char v9 = BYTE4(v7) & 1;
    goto LABEL_35;
  }
  v24[0] = result;
  v24[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (!v3) {
      goto LABEL_51;
    }
    if (v3 == 1) {
      goto LABEL_34;
    }
    LODWORD(v8) = (BYTE1(result) - 48);
    if (v8 > 9) {
      goto LABEL_34;
    }
    uint64_t v14 = v3 - 2;
    if (v14)
    {
      BOOL v15 = (unsigned __int8 *)v24 + 2;
      while (1)
      {
        unsigned int v16 = *v15 - 48;
        if (v16 > 9) {
          goto LABEL_34;
        }
        uint64_t v17 = 10 * (int)v8;
        if (v17 != (int)v17) {
          goto LABEL_34;
        }
        LODWORD(v8) = v17 + v16;
        if (__OFADD__(v17, v16)) {
          goto LABEL_34;
        }
        char v9 = 0;
        ++v15;
        if (!--v14) {
          goto LABEL_35;
        }
      }
    }
LABEL_40:
    char v9 = 0;
    goto LABEL_35;
  }
  if (result != 45)
  {
    if (!v3) {
      goto LABEL_34;
    }
    LODWORD(v8) = (result - 48);
    if (v8 > 9) {
      goto LABEL_34;
    }
    uint64_t v20 = v3 - 1;
    if (v20)
    {
      uint64_t v21 = (unsigned __int8 *)v24 + 1;
      while (1)
      {
        unsigned int v22 = *v21 - 48;
        if (v22 > 9) {
          goto LABEL_34;
        }
        uint64_t v23 = 10 * (int)v8;
        if (v23 != (int)v23) {
          goto LABEL_34;
        }
        LODWORD(v8) = v23 + v22;
        if (__OFADD__(v23, v22)) {
          goto LABEL_34;
        }
        char v9 = 0;
        ++v21;
        if (!--v20) {
          goto LABEL_35;
        }
      }
    }
    goto LABEL_40;
  }
  if (v3)
  {
    if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
    {
      char v9 = 0;
      LODWORD(v8) = -(BYTE1(result) - 48);
      uint64_t v10 = v3 - 2;
      if (!v10)
      {
LABEL_35:
        swift_bridgeObjectRelease();
        LODWORD(v18) = v9 & 1;
        goto LABEL_36;
      }
      unint64_t v11 = (unsigned __int8 *)v24 + 2;
      while (1)
      {
        unsigned int v12 = *v11 - 48;
        if (v12 > 9) {
          break;
        }
        uint64_t v13 = 10 * (int)v8;
        if (v13 != (int)v13) {
          break;
        }
        LODWORD(v8) = v13 - v12;
        if (__OFSUB__(v13, v12)) {
          break;
        }
        char v9 = 0;
        ++v11;
        if (!--v10) {
          goto LABEL_35;
        }
      }
    }
LABEL_34:
    LODWORD(v8) = 0;
    char v9 = 1;
    goto LABEL_35;
  }
  __break(1u);
LABEL_51:
  __break(1u);
  return result;
}

uint64_t sub_1C8D0C90C(uint64_t result, int a2)
{
  if ((a2 + 999999999) > 0x773593FE)
  {
    BOOL v2 = __OFADD__(result, a2 / 1000000000);
    result += a2 / 1000000000;
    if (v2)
    {
      __break(1u);
      return result;
    }
    a2 %= 1000000000;
  }
  if (a2 < 0 && (uint64_t v3 = result - 1, result >= 1))
  {
    int v4 = a2 + 1000000000;
  }
  else
  {
    int v5 = a2 - 1000000000;
    if (result < 0)
    {
      uint64_t v6 = result + 1;
    }
    else
    {
      int v5 = a2;
      uint64_t v6 = result;
    }
    if (a2 >= 1) {
      int v4 = v5;
    }
    else {
      int v4 = a2;
    }
    if (a2 >= 1) {
      uint64_t v3 = v6;
    }
    else {
      uint64_t v3 = result;
    }
  }
  if (qword_1EA565BE0 != -1) {
    swift_once();
  }
  uint64_t result = 0;
  if (v3 <= 315576000000 && v3 >= qword_1EA566BC0)
  {
    if (v4)
    {
      HIDWORD(v7) = 1757569337 * v4 + 137408;
      LODWORD(v7) = HIDWORD(v7);
      if ((v7 >> 6) <= 0x10C6)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA566BD8);
        uint64_t v16 = swift_allocObject();
        *(_OWORD *)(v16 + 16) = xmmword_1C8D8E560;
        uint64_t v17 = MEMORY[0x1E4FBC240];
        *(void *)(v16 + 56) = MEMORY[0x1E4FBC1C8];
        *(void *)(v16 + 64) = v17;
        *(void *)(v16 + 32) = v3;
        if (v4 >= 0) {
          unsigned int v18 = v4;
        }
        else {
          unsigned int v18 = -v4;
        }
        uint64_t v19 = MEMORY[0x1E4FBC1C0];
        *(void *)(v16 + 96) = MEMORY[0x1E4FBC150];
        *(void *)(v16 + 104) = v19;
        *(_DWORD *)(v16 + 72) = v18 / 0xF4240;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA566BD8);
        uint64_t v8 = swift_allocObject();
        *(_OWORD *)(v8 + 16) = xmmword_1C8D8E560;
        uint64_t v9 = MEMORY[0x1E4FBC240];
        *(void *)(v8 + 56) = MEMORY[0x1E4FBC1C8];
        *(void *)(v8 + 64) = v9;
        *(void *)(v8 + 32) = v3;
        if (v4 >= 0) {
          unsigned int v10 = v4;
        }
        else {
          unsigned int v10 = -v4;
        }
        HIDWORD(v11) = 652835029 * v4 + 17179864;
        LODWORD(v11) = HIDWORD(v11);
        uint64_t v12 = MEMORY[0x1E4FBC1C0];
        *(void *)(v8 + 96) = MEMORY[0x1E4FBC150];
        *(void *)(v8 + 104) = v12;
        if ((v11 >> 3) <= 0x418936) {
          *(_DWORD *)(v8 + 72) = v10 / 0x3E8;
        }
        else {
          *(_DWORD *)(v8 + 72) = v10;
        }
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA566BD8);
      uint64_t v13 = swift_allocObject();
      uint64_t v14 = MEMORY[0x1E4FBC1C8];
      *(_OWORD *)(v13 + 16) = xmmword_1C8D8E570;
      uint64_t v15 = MEMORY[0x1E4FBC240];
      *(void *)(v13 + 56) = v14;
      *(void *)(v13 + 64) = v15;
      *(void *)(v13 + 32) = v3;
    }
    return sub_1C8D88320();
  }
  return result;
}

uint64_t sub_1C8D0CBDC(uint64_t result, int a2)
{
  if ((a2 + 999999999) >= 0x773593FF)
  {
    BOOL v2 = __OFADD__(result, a2 / 1000000000);
    result += a2 / 1000000000;
    if (v2)
    {
      __break(1u);
      return result;
    }
    a2 %= 1000000000;
  }
  if (a2 < 0 && result >= 1)
  {
    --result;
  }
  else
  {
    if (result < 0) {
      uint64_t v3 = result + 1;
    }
    else {
      uint64_t v3 = result;
    }
    if (a2 >= 1) {
      return v3;
    }
  }
  return result;
}

double Google_Protobuf_Duration.init(seconds:nanos:)@<D0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  *(void *)a3 = a1;
  *(_DWORD *)(a3 + 8) = a2;
  double result = 0.0;
  *(_OWORD *)(a3 + 16) = xmmword_1C8D8AD80;
  return result;
}

uint64_t sub_1C8D0CC68()
{
  sub_1C8D0C90C(*(void *)v0, *(_DWORD *)(v0 + 8));
  if (v1)
  {
    sub_1C8D88400();
    swift_bridgeObjectRelease();
    sub_1C8D88400();
    return 34;
  }
  else
  {
    sub_1C8CC552C();
    swift_allocError();
    *uint64_t v3 = 2;
    return swift_willThrow();
  }
}

uint64_t sub_1C8D0CD14()
{
  return sub_1C8D0CC68();
}

uint64_t sub_1C8D0CD2C()
{
  uint64_t result = (uint64_t)sub_1C8CADB68();
  if (!v1)
  {
    uint64_t v3 = sub_1C8D0BD40();
    int v5 = v4;
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v0 = v3;
    *(_DWORD *)(v0 + 8) = v5;
  }
  return result;
}

uint64_t sub_1C8D0CDAC(double *a1)
{
  return Google_Protobuf_Duration.init(floatLiteral:)(*a1);
}

void _s20SiriOntologyProtobuf07Google_C9_DurationV12floatLiteralACSd_tcfC_0(uint64_t a1@<X8>, double a2@<D0>)
{
  double v3 = trunc(a2);
  if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v3 >= 9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  double v4 = round((a2 - v3) * 1000000000.0);
  if ((~*(void *)&v4 & 0x7FF0000000000000) == 0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v4 <= -2147483650.0)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v4 < 2147483650.0)
  {
    *(void *)a1 = sub_1C8D0CBDC((uint64_t)v3, (int)v4);
    *(_DWORD *)(a1 + 8) = v5;
    *(_OWORD *)(a1 + 16) = xmmword_1C8D8AD80;
    return;
  }
LABEL_13:
  __break(1u);
}

double Google_Protobuf_Duration.timeInterval.getter()
{
  return (double)*(int *)(v0 + 8) / 1000000000.0 + (double)*(uint64_t *)v0;
}

uint64_t - prefix(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  BOOL v4 = __OFSUB__(0, *(void *)a1);
  uint64_t result = -*(void *)a1;
  if (v4)
  {
    __break(1u);
  }
  else
  {
    int v6 = *(_DWORD *)(a1 + 8);
    if (!__OFSUB__(0, v6))
    {
      uint64_t result = sub_1C8D0CBDC(result, -v6);
      *(void *)a2 = result;
      *(_DWORD *)(a2 + 8) = v7;
      *(_OWORD *)(a2 + 16) = xmmword_1C8D8AD80;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t + infix(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  BOOL v5 = __OFADD__(*(void *)a1, *(void *)a2);
  uint64_t result = *(void *)a1 + *(void *)a2;
  if (v5)
  {
    __break(1u);
  }
  else
  {
    int v7 = *(_DWORD *)(a2 + 8);
    int v8 = *(_DWORD *)(a1 + 8);
    if (!__OFADD__(v8, v7))
    {
      uint64_t result = sub_1C8D0CBDC(result, v8 + v7);
      *(void *)a3 = result;
      *(_DWORD *)(a3 + 8) = v9;
      *(_OWORD *)(a3 + 16) = xmmword_1C8D8AD80;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t _s20SiriOntologyProtobuf1soiyAA07Google_C9_DurationVAD_ADtF_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  BOOL v5 = __OFSUB__(*(void *)a1, *(void *)a2);
  uint64_t result = *(void *)a1 - *(void *)a2;
  if (v5)
  {
    __break(1u);
  }
  else
  {
    int v7 = *(_DWORD *)(a2 + 8);
    int v8 = *(_DWORD *)(a1 + 8);
    if (!__OFSUB__(v8, v7))
    {
      uint64_t result = sub_1C8D0CBDC(result, v8 - v7);
      *(void *)a3 = result;
      *(_DWORD *)(a3 + 8) = v9;
      *(_OWORD *)(a3 + 16) = xmmword_1C8D8AD80;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C8D0CFE8()
{
  return MEMORY[0x1E4FBB450];
}

unint64_t sub_1C8D0CFF4()
{
  unint64_t result = qword_1EA566BD0;
  if (!qword_1EA566BD0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA566BC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566BD0);
  }
  return result;
}

uint64_t sub_1C8D0D050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1C8D884A0();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    int v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_1C8D0D71C();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    int v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    int v7 = (unsigned __int8 *)sub_1C8D886C0();
  }
LABEL_7:
  unint64_t v11 = sub_1C8D0D220(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11 | ((((unint64_t)v11 >> 32) & 1) << 32);
}

unsigned __int8 *sub_1C8D0D138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1C8D884A0();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    int v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_1C8D0D71C();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    int v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    int v7 = (unsigned __int8 *)sub_1C8D886C0();
  }
LABEL_7:
  unint64_t v11 = sub_1C8D0D4A0(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_1C8D0D220(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v16 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v17 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v18 = a3 + 55;
        }
        else
        {
          unsigned __int8 v17 = 97;
          unsigned __int8 v18 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v19 = a3 + 48;
        }
        else {
          unsigned __int8 v19 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          uint64_t v20 = result + 1;
          do
          {
            unsigned int v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v21 < 0x61 || v21 >= v17) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v22 = -87;
              }
              else
              {
                char v22 = -55;
              }
            }
            else
            {
              char v22 = -48;
            }
            uint64_t v23 = (int)v8 * (uint64_t)(int)a3;
            if (v23 != (int)v23) {
              goto LABEL_72;
            }
            unsigned __int8 v24 = v21 + v22;
            unsigned int v8 = v23 + v24;
            if (__OFADD__(v23, v24)) {
              goto LABEL_72;
            }
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          unsigned __int8 v13 = 0;
          unsigned int v12 = v8;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
LABEL_72:
      unsigned int v12 = 0;
      unsigned __int8 v13 = 1;
      return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v26 = a3 + 55;
        }
        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v26 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v27 = a3 + 48;
        }
        else {
          unsigned __int8 v27 = 58;
        }
        if (result)
        {
          unsigned int v28 = 0;
          do
          {
            unsigned int v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v29 < 0x61 || v29 >= v25) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v30 = -87;
              }
              else
              {
                char v30 = -55;
              }
            }
            else
            {
              char v30 = -48;
            }
            uint64_t v31 = (int)v28 * (uint64_t)(int)a3;
            if (v31 != (int)v31) {
              goto LABEL_72;
            }
            unsigned __int8 v32 = v29 + v30;
            unsigned int v28 = v31 + v32;
            if (__OFADD__(v31, v32)) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }
          while (a2);
          unsigned __int8 v13 = 0;
          unsigned int v12 = v28;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }
        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          unint64_t v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v11 = -87;
              }
              else
              {
                char v11 = -55;
              }
            }
            else
            {
              char v11 = -48;
            }
            uint64_t v14 = (int)v8 * (uint64_t)(int)a3;
            if (v14 != (int)v14) {
              goto LABEL_72;
            }
            unsigned __int8 v15 = v10 + v11;
            unsigned int v8 = v14 - v15;
            if (__OFSUB__(v14, v15)) {
              goto LABEL_72;
            }
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }
LABEL_71:
        unsigned int v12 = 0;
        unsigned __int8 v13 = 0;
        return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unsigned __int8 *sub_1C8D0D4A0(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  unsigned __int8 v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1C8D0D71C()
{
  unint64_t v0 = sub_1C8D884B0();
  uint64_t v4 = sub_1C8D0D79C(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1C8D0D79C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_1C8D0D8F4(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      unsigned int v11 = sub_1C8D0D9F4(v9, 0);
      unint64_t v12 = sub_1C8D0DA5C((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_1C8D886C0();
LABEL_4:
        JUMPOUT(0x1CB772F00);
      }
    }
    else
    {
      unsigned int v11 = (void *)MEMORY[0x1E4FBC860];
    }
    uint64_t v13 = MEMORY[0x1CB772F00](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1CB772F00]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

uint64_t sub_1C8D0D8F4(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_1C8D62E14(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_1C8D62E14(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return MEMORY[0x1F4183AA8](a1, a2, a3, a4);
  }
  __break(1u);
  return MEMORY[0x1F4183AA8](a1, a2, a3, a4);
}

void *sub_1C8D0D9F4(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2D08);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  uint64_t v4[3] = 2 * v5 - 64;
  return v4;
}

unint64_t sub_1C8D0DA5C(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    long long v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    unint64_t result = v12;
    if (v17 == v15) {
      unint64_t result = sub_1C8D62E14(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      unint64_t result = sub_1C8D88460();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        unint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          unint64_t result = sub_1C8D886C0();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    unint64_t result = sub_1C8D62E14(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_1C8D88430();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unint64_t sub_1C8D0DC70()
{
  unint64_t result = qword_1EA566BE0;
  if (!qword_1EA566BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566BE0);
  }
  return result;
}

uint64_t sub_1C8D0DCD4(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  unint64_t v2 = v1[1];
  switch(v2 >> 62)
  {
    case 1uLL:
      *(void *)&long long v18 = *v1;
      *((void *)&v18 + 1) = v2 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)unint64_t v1 = xmmword_1C8D8AD80;
      uint64_t result = sub_1C8D0DF38(a1);
      uint64_t v4 = v18;
      unint64_t v5 = *((void *)&v18 + 1) | 0x4000000000000000;
      goto LABEL_4;
    case 2uLL:
      *(void *)&long long v18 = *v1;
      *((void *)&v18 + 1) = v2 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)unint64_t v1 = xmmword_1C8D8AD80;
      sub_1C8D88160();
      uint64_t v6 = *((void *)&v18 + 1);
      uint64_t v7 = *(void *)(v18 + 16);
      uint64_t v17 = *(void *)(v18 + 24);
      uint64_t v8 = sub_1C8D88110();
      if (!v8)
      {
        __break(1u);
        JUMPOUT(0x1C8D0DF28);
      }
      uint64_t v9 = v8;
      uint64_t v10 = sub_1C8D88140();
      uint64_t v11 = v7 - v10;
      if (__OFSUB__(v7, v10))
      {
        __break(1u);
LABEL_15:
        __break(1u);
      }
      BOOL v12 = __OFSUB__(v17, v7);
      uint64_t v13 = v17 - v7;
      if (v12) {
        goto LABEL_15;
      }
      uint64_t v14 = sub_1C8D88130();
      if (v14 >= v13) {
        uint64_t v15 = v13;
      }
      else {
        uint64_t v15 = v14;
      }
      uint64_t result = a1(v9 + v11, v9 + v11 + v15);
      *unint64_t v1 = v18;
      v1[1] = v6 | 0x8000000000000000;
      return result;
    case 3uLL:
      *(void *)((char *)&v18 + 7) = 0;
      *(void *)&long long v18 = 0;
      return a1((uint64_t)&v18, (uint64_t)&v18);
    default:
      *(void *)&long long v18 = *v1;
      WORD4(v18) = v2;
      BYTE10(v18) = BYTE2(v2);
      BYTE11(v18) = BYTE3(v2);
      BYTE12(v18) = BYTE4(v2);
      BYTE13(v18) = BYTE5(v2);
      BYTE14(v18) = BYTE6(v2);
      uint64_t result = a1((uint64_t)&v18, (uint64_t)&v18 + BYTE6(v2));
      uint64_t v4 = v18;
      unint64_t v5 = DWORD2(v18) | ((unint64_t)BYTE12(v18) << 32) | ((unint64_t)BYTE13(v18) << 40) | ((unint64_t)BYTE14(v18) << 48);
LABEL_4:
      *unint64_t v1 = v4;
      v1[1] = v5;
      return result;
  }
}

uint64_t sub_1C8D0DF38(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t result = sub_1C8D88170();
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  if ((int)v5 < (int)v4)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t result = sub_1C8D88110();
  if (!result)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v6 = result;
  uint64_t result = sub_1C8D88140();
  uint64_t v7 = v4 - result;
  if (__OFSUB__(v4, result))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v8 = v5 - v4;
  uint64_t v9 = sub_1C8D88130();
  if (v9 >= v8) {
    uint64_t v10 = v8;
  }
  else {
    uint64_t v10 = v9;
  }
  return a1(v6 + v7, v6 + v7 + v10);
}

uint64_t sub_1C8D0DFE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t result = sub_1C8D88110();
  uint64_t v7 = result;
  if (result)
  {
    uint64_t result = sub_1C8D88140();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v7 += a1 - result;
  }
  BOOL v8 = __OFSUB__(a2, a1);
  uint64_t v9 = a2 - a1;
  if (v8)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v10 = sub_1C8D88130();
  if (v10 >= v9) {
    uint64_t v11 = v9;
  }
  else {
    uint64_t v11 = v10;
  }
  uint64_t v12 = v7 + v11;
  if (v7) {
    uint64_t v13 = v12;
  }
  else {
    uint64_t v13 = 0;
  }
  return a3(v7, v13);
}

unint64_t sub_1C8D0E090()
{
  unint64_t result = qword_1EA566BE8;
  if (!qword_1EA566BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA566BE8);
  }
  return result;
}

uint64_t AnyExtensionField.isInitialized.getter()
{
  return 1;
}

uint64_t OptionalExtensionField.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);
  return v4(a1, v1, AssociatedTypeWitness);
}

uint64_t OptionalExtensionField.value.setter(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 40);
  return v4(v1, a1, AssociatedTypeWitness);
}

uint64_t (*OptionalExtensionField.value.modify())()
{
  return nullsub_1;
}

uint64_t OptionalExtensionField.protobufExtension.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C8CA425C(v2 + *(int *)(a1 + 36), a2);
}

uint64_t (*OptionalExtensionField.protobufExtension.modify())()
{
  return nullsub_1;
}

uint64_t static OptionalExtensionField.== infix(_:_:)()
{
  return sub_1C8D882E0() & 1;
}

uint64_t OptionalExtensionField.init(protobufExtension:value:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for OptionalExtensionField();
  sub_1C8CA4528(a1, a3 + *(int *)(v6 + 36));
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  BOOL v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32);
  return v8(a3, a2, AssociatedTypeWitness);
}

uint64_t type metadata accessor for OptionalExtensionField()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t OptionalExtensionField.debugDescription.getter()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness, v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v6 - v3, v0, AssociatedTypeWitness);
  return sub_1C8D88360();
}

uint64_t OptionalExtensionField.hash(into:)()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return sub_1C8D882C0();
}

uint64_t OptionalExtensionField.isEqual(other:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](a1, a2);
  uint64_t v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1C8CA425C(v4, (uint64_t)v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA566BF0);
  swift_dynamicCast();
  char v7 = static OptionalExtensionField.== infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, a2);
  return v7 & 1;
}

uint64_t OptionalExtensionField.decodeExtensionField<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness, v9);
  uint64_t v26 = (char *)&v25 - v10;
  uint64_t v11 = sub_1C8D88620();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v11, v13);
  uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14, v17);
  uint64_t v19 = (char *)&v25 - v18;
  uint64_t v28 = v8;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))((char *)&v25 - v18, 1, 1, AssociatedTypeWitness);
  uint64_t v20 = v31;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 32))(v19, a1, v29, v30, v6, v5);
  if (v20) {
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v19, v11);
  }
  unint64_t v23 = v26;
  uint64_t v22 = v27;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v16, v19, v11);
  uint64_t v24 = v28;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v16, 1, AssociatedTypeWitness) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v16, v11);
  }
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v23, v16, AssociatedTypeWitness);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v24 + 40))(v22, v23, AssociatedTypeWitness);
}

uint64_t OptionalExtensionField.init<A>(protobufExtension:decoder:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v39 = a6;
  uint64_t v37 = a2;
  uint64_t v38 = a4;
  uint64_t v41 = a1;
  uint64_t v35 = a7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v12 = MEMORY[0x1F4188790](AssociatedTypeWitness, v11);
  BOOL v34 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12, v14);
  uint64_t v16 = (char *)&v33 - v15;
  uint64_t v17 = sub_1C8D88620();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v17, v19);
  uint64_t v22 = (char *)&v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20, v23);
  uint64_t v25 = (char *)&v33 - v24;
  uint64_t v36 = v10;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))((char *)&v33 - v24, 1, 1, AssociatedTypeWitness);
  uint64_t v26 = v40;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 32))(v25, v37, v38, v39, a3, a5);
  uint64_t v40 = v26;
  if (v26)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v25, v17);
  }
  else
  {
    uint64_t v39 = a3;
    uint64_t v28 = (uint64_t)v34;
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v22, v25, v17);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v22, 1, AssociatedTypeWitness) == 1)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v22, v17);
      uint64_t v29 = type metadata accessor for OptionalExtensionField();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v35, 1, 1, v29);
    }
    else
    {
      uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
      v30(v16, v22, AssociatedTypeWitness);
      v30((char *)v28, v16, AssociatedTypeWitness);
      uint64_t v31 = v35;
      OptionalExtensionField.init(protobufExtension:value:)(v41, v28, v35);
      uint64_t v32 = type metadata accessor for OptionalExtensionField();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v31, 0, 1, v32);
    }
  }
}

uint64_t OptionalExtensionField.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t v10 = (void *)(v4 + *(int *)(a2 + 36));
  uint64_t v12 = v10[3];
  uint64_t v11 = v10[4];
  __swift_project_boxed_opaque_existential_1(v10, v12);
  uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v12, v11);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a2 + 24) + 48))(v4, v13, a1, a3, a4, v9);
}

uint64_t OptionalExtensionField.hashValue.getter()
{
  return sub_1C8D888A0();
}

uint64_t (*sub_1C8D0ED54(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  long long v2[4] = OptionalExtensionField.value.modify();
  return sub_1C8D0EDAC;
}

uint64_t sub_1C8D0EDB0@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return OptionalExtensionField.init(protobufExtension:value:)(a1, a2, a3);
}

uint64_t sub_1C8D0EDBC@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return OptionalExtensionField.init<A>(protobufExtension:decoder:)(a1, a2, *(void *)(a5 + 16), a3, *(void *)(a5 + 24), a4, a6);
}

uint64_t sub_1C8D0EDEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return OptionalExtensionField.decodeExtensionField<A>(decoder:)(a1, a4, a2, a3);
}

uint64_t sub_1C8D0EE14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return OptionalExtensionField.traverse<A>(visitor:)(a1, a4, a2, a3);
}

uint64_t sub_1C8D0EE40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D12EB0(a1, a2, a3, (void (*)(unsigned char *, uint64_t))OptionalExtensionField.hash(into:));
}

uint64_t sub_1C8D0EE5C()
{
  return static OptionalExtensionField.== infix(_:_:)();
}

uint64_t (*RepeatedExtensionField.value.modify())()
{
  return nullsub_1;
}

uint64_t (*RepeatedExtensionField.protobufExtension.modify())()
{
  return nullsub_1;
}

uint64_t RepeatedExtensionField.isEqual(other:)(uint64_t a1, uint64_t a2)
{
  return sub_1C8D0F790(a1, a2, (uint64_t (*)(uint64_t, unsigned char *, void, void))static RepeatedExtensionField.== infix(_:_:));
}

uint64_t RepeatedExtensionField.debugDescription.getter(uint64_t a1)
{
  return sub_1C8D0F854(a1, (void (*)(char *, char *))sub_1C8D15320);
}

uint64_t sub_1C8D0EEE0(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v31 = a5;
  uint64_t v32 = a8;
  uint64_t v41 = a1;
  uint64_t v42 = a2;
  uint64_t v30 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](a1, a2);
  uint64_t v43 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v36 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v11 = MEMORY[0x1F4188790](AssociatedTypeWitness, v10);
  uint64_t v13 = (char *)&v29 - v12;
  MEMORY[0x1F4188790](v11, v14);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v33 = *(void *)(v17 - 8);
  uint64_t v34 = v17;
  MEMORY[0x1F4188790](v17, v18);
  uint64_t v20 = (char *)&v29 - v19;
  uint64_t v21 = sub_1C8D885B0();
  if (!v21) {
    return sub_1C8D884F0();
  }
  uint64_t v22 = v21;
  uint64_t v46 = sub_1C8D88270();
  uint64_t v35 = sub_1C8D88710();
  sub_1C8D886E0();
  uint64_t v39 = v8;
  uint64_t result = sub_1C8D885A0();
  if (v22 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v37 = (void (**)(char *))(v36 + 2);
    uint64_t v38 = v16;
    ++v36;
    while (1)
    {
      uint64_t v24 = (void (*)(char *, void))sub_1C8D885E0();
      uint64_t v25 = v13;
      uint64_t v26 = v13;
      uint64_t v27 = AssociatedTypeWitness;
      (*v37)(v25);
      v24(v45, 0);
      uint64_t v28 = v44;
      v41(v26, v43);
      if (v28) {
        break;
      }
      uint64_t v44 = 0;
      (*v36)(v26, v27);
      sub_1C8D886F0();
      sub_1C8D885C0();
      --v22;
      uint64_t v13 = v26;
      if (!v22)
      {
        (*(void (**)(char *, uint64_t))(v33 + 8))(v20, v34);
        return v46;
      }
    }
    (*v36)(v26, v27);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v20, v34);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v30 + 32))(v32, v43, v31);
  }
  return result;
}

uint64_t RepeatedExtensionField.decodeExtensionField<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  return sub_1C8D0FACC(a1, a2);
}

uint64_t RepeatedExtensionField.init<A>(protobufExtension:decoder:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  return sub_1C8D0FB28(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t RepeatedExtensionField.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *v4;
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t result = MEMORY[0x1CB773070](v8, AssociatedTypeWitness);
  if (result >= 1)
  {
    uint64_t v13 = a4;
    uint64_t v15 = v4[4];
    uint64_t v14 = v4[5];
    __swift_project_boxed_opaque_existential_1(v4 + 1, v15);
    uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v15, v14);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v8, v16, a1, a3, v13, v10, v9);
  }
  return result;
}

uint64_t RepeatedExtensionField.hashValue.getter(uint64_t a1)
{
  return sub_1C8D0FD30(a1, (void (*)(unsigned char *, uint64_t))RepeatedExtensionField.hash(into:));
}

uint64_t (*sub_1C8D0F428(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  long long v2[4] = RepeatedExtensionField.value.modify();
  return sub_1C8D0EDAC;
}

uint64_t sub_1C8D0F48C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return PackedExtensionField.decodeExtensionField<A>(decoder:)(a1, a4);
}

uint64_t sub_1C8D0F4B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return RepeatedExtensionField.traverse<A>(visitor:)(a1, a4, a2, a3);
}

uint64_t sub_1C8D0F4E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D0FE94(a1, a2, a3, (void (*)(unsigned char *, uint64_t))RepeatedExtensionField.hash(into:));
}

uint64_t PackedExtensionField.value.getter()
{
  sub_1C8CB9364();
  return swift_bridgeObjectRetain();
}

uint64_t PackedExtensionField.value.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*PackedExtensionField.value.modify())()
{
  return nullsub_1;
}

uint64_t PackedExtensionField.protobufExtension.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C8CA425C(v1 + 8, a1);
}

uint64_t PackedExtensionField.protobufExtension.setter(long long *a1)
{
  uint64_t v3 = v1 + 8;
  __swift_destroy_boxed_opaque_existential_1(v3);
  return sub_1C8CA4528(a1, v3);
}

uint64_t (*PackedExtensionField.protobufExtension.modify())()
{
  return nullsub_1;
}

uint64_t _s20SiriOntologyProtobuf22RepeatedExtensionFieldV2eeoiySbACyxG_AEtFZ_0()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return sub_1C8D88570();
}

uint64_t PackedExtensionField.init(protobufExtension:value:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t result = sub_1C8CA4528(a1, (uint64_t)(a3 + 1));
  *a3 = a2;
  return result;
}

uint64_t _s20SiriOntologyProtobuf22RepeatedExtensionFieldV4hash4intoys6HasherVz_tF_0()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_bridgeObjectRetain();
  sub_1C8D88560();
  return swift_bridgeObjectRelease();
}

uint64_t PackedExtensionField.isEqual(other:)(uint64_t a1, uint64_t a2)
{
  return sub_1C8D0F790(a1, a2, (uint64_t (*)(uint64_t, unsigned char *, void, void))static PackedExtensionField.== infix(_:_:));
}

uint64_t sub_1C8D0F790(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, unsigned char *, void, void))
{
  sub_1C8CA425C(a1, (uint64_t)v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA566BF0);
  swift_dynamicCast();
  LOBYTE(a3) = a3(v3, v8, *(void *)(a2 + 16), *(void *)(a2 + 24));
  (*(void (**)(unsigned char *, uint64_t))(*(void *)(a2 - 8) + 8))(v8, a2);
  return a3 & 1;
}

uint64_t PackedExtensionField.debugDescription.getter(uint64_t a1)
{
  return sub_1C8D0F854(a1, (void (*)(char *, char *))sub_1C8D1368C);
}

uint64_t sub_1C8D0F854(uint64_t a1, void (*a2)(char *, char *))
{
  uint64_t v11 = *v2;
  uint64_t v4 = *(void *)(a1 + 24);
  void v10[2] = *(void *)(a1 + 16);
  v10[3] = v4;
  swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_1C8D88550();
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v8 = sub_1C8D0EEE0(a2, (uint64_t)v10, v5, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v7);
  swift_bridgeObjectRelease();
  uint64_t v11 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA566BF8);
  sub_1C8D13630();
  sub_1C8D882D0();
  swift_bridgeObjectRelease();
  uint64_t v11 = 91;
  unint64_t v12 = 0xE100000000000000;
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1C8D0F9B8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness, v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v10 - v6, a1, AssociatedTypeWitness);
  uint64_t result = sub_1C8D88360();
  *a2 = result;
  a2[1] = v9;
  return result;
}

uint64_t PackedExtensionField.decodeExtensionField<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  return sub_1C8D0FACC(a1, a2);
}

uint64_t sub_1C8D0FACC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a2 + 24) + 40))(v2, a1);
}

uint64_t PackedExtensionField.init<A>(protobufExtension:decoder:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  return sub_1C8D0FB28(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1C8D0FB28@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  swift_getAssociatedTypeWitness();
  uint64_t v17 = sub_1C8D884F0();
  (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 40))(&v17, a2, a4, a6, a3, a5);
  if (v7)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = v17;
    uint64_t result = sub_1C8CA4528(a1, (uint64_t)(a7 + 1));
    *a7 = v16;
  }
  return result;
}

uint64_t PackedExtensionField.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *v4;
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t result = MEMORY[0x1CB773070](v8, AssociatedTypeWitness);
  if (result >= 1)
  {
    uint64_t v13 = a4;
    uint64_t v15 = v4[4];
    uint64_t v14 = v4[5];
    __swift_project_boxed_opaque_existential_1(v4 + 1, v15);
    uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v15, v14);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 64))(v8, v16, a1, a3, v13, v10, v9);
  }
  return result;
}

uint64_t PackedExtensionField.hashValue.getter(uint64_t a1)
{
  return sub_1C8D0FD30(a1, (void (*)(unsigned char *, uint64_t))PackedExtensionField.hash(into:));
}

uint64_t sub_1C8D0FD30(uint64_t a1, void (*a2)(unsigned char *, uint64_t))
{
  sub_1C8D88840();
  a2(v5, a1);
  return sub_1C8D888A0();
}

uint64_t sub_1C8D0FD88@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_1C8CB9364();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8D0FDC0(uint64_t *a1)
{
  return PackedExtensionField.value.setter(*a1);
}

uint64_t (*sub_1C8D0FDC8(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  long long v2[4] = PackedExtensionField.value.modify();
  return sub_1C8D0EDAC;
}

uint64_t sub_1C8D0FE20@<X0>(long long *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  return PackedExtensionField.init(protobufExtension:value:)(a1, *a2, a3);
}

uint64_t sub_1C8D0FE28@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  return PackedExtensionField.init<A>(protobufExtension:decoder:)(a1, a2, *(void *)(a5 + 16), a3, *(void *)(a5 + 24), a4, a6);
}

uint64_t sub_1C8D0FE50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return PackedExtensionField.traverse<A>(visitor:)(a1, a4, a2, a3);
}

uint64_t sub_1C8D0FE7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D0FE94(a1, a2, a3, (void (*)(unsigned char *, uint64_t))PackedExtensionField.hash(into:));
}

uint64_t sub_1C8D0FE94(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *, uint64_t))
{
  sub_1C8D88840();
  a4(v7, a2);
  return sub_1C8D888A0();
}

uint64_t sub_1C8D0FEEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static PackedExtensionField.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
}

uint64_t (*OptionalEnumExtensionField.value.modify())()
{
  return nullsub_1;
}

uint64_t _s20SiriOntologyProtobuf22OptionalExtensionFieldV08protobufE0AA010AnyMessageE0_pvs_0(long long *a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 36);
  __swift_destroy_boxed_opaque_existential_1(v4);
  return sub_1C8CA4528(a1, v4);
}

uint64_t (*OptionalEnumExtensionField.protobufExtension.modify())()
{
  return nullsub_1;
}

uint64_t static OptionalEnumExtensionField.== infix(_:_:)()
{
  return sub_1C8D882E0() & 1;
}

uint64_t OptionalEnumExtensionField.init(protobufExtension:value:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for OptionalEnumExtensionField();
  sub_1C8CA4528(a1, a4 + *(int *)(v8 + 36));
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32);
  return v9(a4, a2, a3);
}

uint64_t OptionalEnumExtensionField.hash(into:)()
{
  return sub_1C8D882C0();
}

uint64_t OptionalEnumExtensionField.isEqual(other:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](a1, a2);
  uint64_t v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1C8CA425C(v4, (uint64_t)v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA566BF0);
  swift_dynamicCast();
  char v7 = sub_1C8D882E0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, a2);
  return v7 & 1;
}

uint64_t OptionalEnumExtensionField.decodeExtensionField<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v25 = a1;
  uint64_t v26 = a3;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](a1, a2);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C8D88620();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v10, v12);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13, v16);
  uint64_t v18 = (char *)&v23 - v17;
  uint64_t v24 = v7;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))((char *)&v23 - v17, 1, 1, v6);
  uint64_t v19 = v27;
  (*(void (**)(char *, uint64_t, void, uint64_t, uint64_t))(a4 + 392))(v18, v6, *(void *)(a2 + 24), v26, a4);
  if (v19) {
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v18, v10);
  }
  uint64_t v21 = v23;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v15, v18, v10);
  uint64_t v22 = v24;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v15, 1, v6) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v15, v10);
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v9, v15, v6);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v22 + 40))(v21, v9, v6);
}

uint64_t OptionalEnumExtensionField.init<A>(protobufExtension:decoder:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v38 = a4;
  uint64_t v37 = a2;
  uint64_t v40 = a1;
  uint64_t v35 = a7;
  uint64_t v10 = *(void *)(a3 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](a1, a2);
  uint64_t v34 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11, v13);
  uint64_t v15 = (char *)&v34 - v14;
  uint64_t v16 = sub_1C8D88620();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v16, v18);
  uint64_t v21 = (char *)&v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19, v22);
  uint64_t v24 = (char *)&v34 - v23;
  uint64_t v36 = v10;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))((char *)&v34 - v23, 1, 1, a3);
  uint64_t v25 = v39;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 392))(v24, a3, a5, v38, a6);
  if (v25)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v24, v16);
  }
  else
  {
    uint64_t v39 = v15;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v21, v24, v16);
    int v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 48))(v21, 1, a3);
    uint64_t v28 = v35;
    if (v27 == 1)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v16);
      uint64_t v29 = type metadata accessor for OptionalEnumExtensionField();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v28, 1, 1, v29);
    }
    else
    {
      uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
      uint64_t v31 = v39;
      v30(v39, v21, a3);
      uint64_t v32 = (uint64_t)v34;
      v30(v34, v31, a3);
      OptionalEnumExtensionField.init(protobufExtension:value:)(v40, v32, a3, v28);
      uint64_t v33 = type metadata accessor for OptionalEnumExtensionField();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v28, 0, 1, v33);
    }
  }
}

uint64_t OptionalEnumExtensionField.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)(v4 + *(int *)(a2 + 36));
  uint64_t v9 = v8[3];
  uint64_t v10 = v8[4];
  __swift_project_boxed_opaque_existential_1(v8, v9);
  uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
  return (*(uint64_t (**)(uint64_t, uint64_t, void, void, uint64_t, uint64_t))(a4 + 128))(v4, v11, *(void *)(a2 + 16), *(void *)(a2 + 24), a3, a4);
}

uint64_t OptionalEnumExtensionField.hashValue.getter()
{
  return sub_1C8D888A0();
}

uint64_t (*sub_1C8D10850(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  long long v2[4] = OptionalEnumExtensionField.value.modify();
  return sub_1C8D0EDAC;
}

uint64_t sub_1C8D108A8@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return OptionalEnumExtensionField.init(protobufExtension:value:)(a1, a2, *(void *)(a3 + 16), a4);
}

uint64_t sub_1C8D108B4@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return OptionalEnumExtensionField.init<A>(protobufExtension:decoder:)(a1, a2, *(void *)(a5 + 16), a3, *(void *)(a5 + 24), a4, a6);
}

uint64_t sub_1C8D108E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return OptionalEnumExtensionField.decodeExtensionField<A>(decoder:)(a1, a4, a2, a3);
}

uint64_t sub_1C8D10908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return OptionalEnumExtensionField.traverse<A>(visitor:)(a1, a4, a2, a3);
}

uint64_t sub_1C8D10934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D12EB0(a1, a2, a3, (void (*)(unsigned char *, uint64_t))OptionalEnumExtensionField.hash(into:));
}

uint64_t sub_1C8D10950()
{
  return static OptionalEnumExtensionField.== infix(_:_:)();
}

uint64_t (*RepeatedEnumExtensionField.value.modify())()
{
  return nullsub_1;
}

uint64_t (*RepeatedEnumExtensionField.protobufExtension.modify())()
{
  return nullsub_1;
}

uint64_t RepeatedEnumExtensionField.debugDescription.getter(uint64_t a1)
{
  return sub_1C8D10D34(a1, (void (*)(char *, char *))sub_1C8D15338);
}

uint64_t RepeatedEnumExtensionField.decodeExtensionField<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8D10F68(a1, a2, a3, a4);
}

uint64_t RepeatedEnumExtensionField.init<A>(protobufExtension:decoder:)@<X0>(long long *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t *a6@<X8>)
{
  return sub_1C8D10FCC(a1, a2, a3, a4, a5, a6);
}

uint64_t RepeatedEnumExtensionField.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *v4;
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t result = MEMORY[0x1CB773070](*v4, v9);
  if (result >= 1)
  {
    uint64_t v14 = a3;
    uint64_t v12 = v4[4];
    uint64_t v11 = v4[5];
    __swift_project_boxed_opaque_existential_1(v4 + 1, v12);
    uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v12, v11);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t))(a4 + 272))(v8, v13, v9, *(void *)(a2 + 24), v14, a4);
  }
  return result;
}

uint64_t RepeatedEnumExtensionField.hashValue.getter(uint64_t a1)
{
  return sub_1C8D0FD30(a1, (void (*)(unsigned char *, uint64_t))RepeatedEnumExtensionField.hash(into:));
}

uint64_t (*sub_1C8D10AE4(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  long long v2[4] = RepeatedEnumExtensionField.value.modify();
  return sub_1C8D0EDAC;
}

uint64_t sub_1C8D10B44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return PackedEnumExtensionField.decodeExtensionField<A>(decoder:)(a1, a4, a2, a3);
}

uint64_t sub_1C8D10B6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return RepeatedEnumExtensionField.traverse<A>(visitor:)(a1, a4, a2, a3);
}

uint64_t sub_1C8D10B98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D0FE94(a1, a2, a3, (void (*)(unsigned char *, uint64_t))RepeatedEnumExtensionField.hash(into:));
}

uint64_t (*PackedEnumExtensionField.value.modify())()
{
  return nullsub_1;
}

uint64_t (*PackedEnumExtensionField.protobufExtension.modify())()
{
  return nullsub_1;
}

uint64_t _s20SiriOntologyProtobuf26RepeatedEnumExtensionFieldV2eeoiySbACyxG_AEtFZ_0()
{
  return sub_1C8D88570();
}

uint64_t _s20SiriOntologyProtobuf26RepeatedEnumExtensionFieldV4hash4intoys6HasherVz_tF_0()
{
  swift_bridgeObjectRetain();
  sub_1C8D88560();
  return swift_bridgeObjectRelease();
}

uint64_t _s20SiriOntologyProtobuf26RepeatedEnumExtensionFieldV7isEqual5otherSbAA03AnyfG0_p_tF_0(uint64_t a1, uint64_t a2)
{
  sub_1C8CA425C(a1, (uint64_t)v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA566BF0);
  swift_dynamicCast();
  char v3 = sub_1C8D88570();
  (*(void (**)(void *, uint64_t))(*(void *)(a2 - 8) + 8))(v6, a2);
  return v3 & 1;
}

uint64_t PackedEnumExtensionField.debugDescription.getter(uint64_t a1)
{
  return sub_1C8D10D34(a1, (void (*)(char *, char *))sub_1C8D136C4);
}

uint64_t sub_1C8D10D34(uint64_t a1, void (*a2)(char *, char *))
{
  uint64_t v10 = *v2;
  v9[1] = *(_OWORD *)(a1 + 16);
  uint64_t v4 = sub_1C8D88550();
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = sub_1C8D0EEE0(a2, (uint64_t)v9, v4, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v6);
  swift_bridgeObjectRelease();
  uint64_t v10 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA566BF8);
  sub_1C8D13630();
  sub_1C8D882D0();
  swift_bridgeObjectRelease();
  uint64_t v10 = 91;
  unint64_t v11 = 0xE100000000000000;
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1C8D10E80@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  MEMORY[0x1F4188790](a1, a1);
  (*(void (**)(char *))(v4 + 16))((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = sub_1C8D88360();
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t PackedEnumExtensionField.decodeExtensionField<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8D10F68(a1, a2, a3, a4);
}

uint64_t sub_1C8D10F68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, void, void, uint64_t))(a4 + 400))(v4, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t PackedEnumExtensionField.init<A>(protobufExtension:decoder:)@<X0>(long long *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t *a6@<X8>)
{
  return sub_1C8D10FCC(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1C8D10FCC@<X0>(long long *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t *a6@<X8>)
{
  uint64_t v15 = sub_1C8D884F0();
  (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 400))(&v15, a2, a4, a3, a5);
  if (v6)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = v15;
    uint64_t result = sub_1C8CA4528(a1, (uint64_t)(a6 + 1));
    *a6 = v14;
  }
  return result;
}

uint64_t PackedEnumExtensionField.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *v4;
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t result = MEMORY[0x1CB773070](*v4, v9);
  if (result >= 1)
  {
    uint64_t v14 = a3;
    uint64_t v12 = v4[4];
    uint64_t v11 = v4[5];
    __swift_project_boxed_opaque_existential_1(v4 + 1, v12);
    uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v12, v11);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t))(a4 + 400))(v8, v13, v9, *(void *)(a2 + 24), v14, a4);
  }
  return result;
}

uint64_t PackedEnumExtensionField.hashValue.getter(uint64_t a1)
{
  return sub_1C8D0FD30(a1, (void (*)(unsigned char *, uint64_t))PackedEnumExtensionField.hash(into:));
}

uint64_t (*sub_1C8D11190(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  long long v2[4] = PackedEnumExtensionField.value.modify();
  return sub_1C8D0EDAC;
}

uint64_t sub_1C8D111E8@<X0>(long long *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  return PackedEnumExtensionField.init<A>(protobufExtension:decoder:)(a1, *(void *)(a4 + 16), a2, *(void *)(a4 + 24), a3, a5);
}

uint64_t sub_1C8D1120C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return PackedEnumExtensionField.traverse<A>(visitor:)(a1, a4, a2, a3);
}

uint64_t sub_1C8D11238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D0FE94(a1, a2, a3, (void (*)(unsigned char *, uint64_t))PackedEnumExtensionField.hash(into:));
}

uint64_t sub_1C8D11254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static PackedEnumExtensionField.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
}

uint64_t (*OptionalMessageExtensionField.value.modify())()
{
  return nullsub_1;
}

uint64_t (*OptionalMessageExtensionField.protobufExtension.modify())()
{
  return nullsub_1;
}

uint64_t static OptionalMessageExtensionField.== infix(_:_:)()
{
  return sub_1C8D882E0() & 1;
}

uint64_t OptionalMessageExtensionField.init(protobufExtension:value:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return sub_1C8D124C4(a1, a2, a3, a4, a5, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))type metadata accessor for OptionalMessageExtensionField, a6);
}

uint64_t _s20SiriOntologyProtobuf26OptionalEnumExtensionFieldV16debugDescriptionSSvg_0(uint64_t a1)
{
  MEMORY[0x1F4188790](a1, v1);
  (*(void (**)(char *))(v3 + 16))((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  return sub_1C8D88360();
}

uint64_t OptionalMessageExtensionField.hash(into:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(a2 + 24) + 80))(a1, *(void *)(a2 + 16));
}

uint64_t OptionalMessageExtensionField.isEqual(other:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](a1, a2);
  uint64_t v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1C8CA425C(v4, (uint64_t)v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA566BF0);
  swift_dynamicCast();
  char v7 = sub_1C8D882E0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, a2);
  return v7 & 1;
}

uint64_t OptionalMessageExtensionField.decodeExtensionField<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a1;
  uint64_t v27 = a3;
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](a1, a2);
  uint64_t v24 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C8D88620();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v10, v12);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13, v16);
  uint64_t v18 = (char *)&v24 - v17;
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v25 = v4;
  v19((char *)&v24 - v17, v4, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v18, 0, 1, v7);
  uint64_t v20 = v28;
  (*(void (**)(char *, uint64_t, void, uint64_t, uint64_t))(a4 + 408))(v18, v7, *(void *)(a2 + 24), v27, a4);
  if (v20) {
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v18, v10);
  }
  uint64_t v23 = v24;
  uint64_t v22 = v25;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v15, v18, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v15, 1, v7) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v15, v10);
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v23, v15, v7);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 40))(v22, v23, v7);
}

uint64_t OptionalMessageExtensionField.init<A>(protobufExtension:decoder:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v41 = a4;
  uint64_t v36 = a8;
  uint64_t v37 = a6;
  uint64_t v40 = a2;
  uint64_t v43 = a1;
  uint64_t v11 = *(void *)(a3 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](a1, a2);
  uint64_t v35 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12, v14);
  uint64_t v16 = (char *)&v35 - v15;
  uint64_t v39 = sub_1C8D88620();
  uint64_t v17 = *(void *)(v39 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v39, v18);
  uint64_t v21 = (char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19, v22);
  uint64_t v24 = (char *)&v35 - v23;
  uint64_t v38 = v11;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))((char *)&v35 - v23, 1, 1, a3);
  uint64_t v25 = v42;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a7 + 408))(v24, a3, a5, v41, a7);
  if (v25)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v24, v39);
  }
  else
  {
    uint64_t v42 = a5;
    uint64_t v27 = v39;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v21, v24, v39);
    int v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48))(v21, 1, a3);
    uint64_t v29 = v36;
    uint64_t v30 = v37;
    if (v28 == 1)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v27);
      uint64_t v31 = type metadata accessor for OptionalMessageExtensionField();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v29, 1, 1, v31);
    }
    else
    {
      uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
      v32(v16, v21, a3);
      uint64_t v33 = (uint64_t)v35;
      v32(v35, v16, a3);
      OptionalMessageExtensionField.init(protobufExtension:value:)(v43, v33, a3, v42, v30, v29);
      uint64_t v34 = type metadata accessor for OptionalMessageExtensionField();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v29, 0, 1, v34);
    }
  }
}

uint64_t OptionalMessageExtensionField.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)(v4 + *(int *)(a2 + 44));
  uint64_t v9 = v8[3];
  uint64_t v10 = v8[4];
  __swift_project_boxed_opaque_existential_1(v8, v9);
  uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
  return (*(uint64_t (**)(uint64_t, uint64_t, void, void, uint64_t, uint64_t))(a4 + 136))(v4, v11, *(void *)(a2 + 16), *(void *)(a2 + 24), a3, a4);
}

uint64_t OptionalMessageExtensionField.hashValue.getter(uint64_t a1)
{
  sub_1C8D88840();
  (*(void (**)(unsigned char *, void))(*(void *)(a1 + 24) + 80))(v3, *(void *)(a1 + 16));
  return sub_1C8D888A0();
}

uint64_t (*sub_1C8D11BE0(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  long long v2[4] = OptionalMessageExtensionField.value.modify();
  return sub_1C8D0EDAC;
}

uint64_t sub_1C8D11C38@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  return OptionalMessageExtensionField.init(protobufExtension:value:)(a1, a2, a3[2], a3[3], a3[4], a4);
}

uint64_t sub_1C8D11C48@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  return OptionalMessageExtensionField.init<A>(protobufExtension:decoder:)(a1, a2, a5[2], a3, a5[3], a5[4], a4, a6);
}

uint64_t sub_1C8D11C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return OptionalMessageExtensionField.decodeExtensionField<A>(decoder:)(a1, a4, a2, a3);
}

uint64_t sub_1C8D11CA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return OptionalMessageExtensionField.traverse<A>(visitor:)(a1, a4, a2, a3);
}

uint64_t sub_1C8D11CD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D12EB0(a1, a2, a3, (void (*)(unsigned char *, uint64_t))OptionalMessageExtensionField.hash(into:));
}

uint64_t sub_1C8D11CF0()
{
  return static OptionalMessageExtensionField.== infix(_:_:)();
}

uint64_t (*RepeatedMessageExtensionField.value.modify())()
{
  return nullsub_1;
}

uint64_t (*RepeatedMessageExtensionField.protobufExtension.modify())()
{
  return nullsub_1;
}

uint64_t static RepeatedMessageExtensionField.== infix(_:_:)()
{
  return sub_1C8D88570();
}

uint64_t RepeatedMessageExtensionField.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](a1, a2);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  uint64_t v9 = swift_bridgeObjectRetain();
  if (MEMORY[0x1CB773090](v9, v4))
  {
    uint64_t v10 = 0;
    uint64_t v18 = *(void *)(a2 + 24);
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 80);
    uint64_t v16 = v6;
    uint64_t v17 = v11;
    while (1)
    {
      char v12 = sub_1C8D88510();
      sub_1C8D884D0();
      if (v12)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, v8+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v10, v4);
        uint64_t v13 = v10 + 1;
        if (__OFADD__(v10, 1)) {
          goto LABEL_10;
        }
      }
      else
      {
        uint64_t result = sub_1C8D886B0();
        if (v16 != 8)
        {
          __break(1u);
          return result;
        }
        uint64_t v20 = result;
        (*(void (**)(char *, uint64_t *, uint64_t))(v5 + 16))(v7, &v20, v4);
        swift_unknownObjectRelease();
        uint64_t v13 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_10:
          __break(1u);
          return swift_bridgeObjectRelease();
        }
      }
      v17(v19, v4, v18);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      ++v10;
      if (v13 == MEMORY[0x1CB773090](v8, v4)) {
        return swift_bridgeObjectRelease();
      }
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t RepeatedMessageExtensionField.isEqual(other:)(uint64_t a1, uint64_t a2)
{
  sub_1C8CA425C(a1, (uint64_t)v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA566BF0);
  swift_dynamicCast();
  char v3 = sub_1C8D88570();
  (*(void (**)(void *, uint64_t))(*(void *)(a2 - 8) + 8))(v6, a2);
  return v3 & 1;
}

uint64_t RepeatedMessageExtensionField.debugDescription.getter(uint64_t a1)
{
  return sub_1C8D13014(a1, (void (*)(char *, char *))sub_1C8D136FC);
}

uint64_t RepeatedMessageExtensionField.decodeExtensionField<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, void, void, uint64_t))(a4 + 416))(v4, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t RepeatedMessageExtensionField.init<A>(protobufExtension:decoder:)@<X0>(long long *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t *a6@<X8>)
{
  uint64_t v15 = sub_1C8D884F0();
  (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 416))(&v15, a2, a4, a3, a5);
  if (v6)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = v15;
    uint64_t result = sub_1C8CA4528(a1, (uint64_t)(a6 + 1));
    *a6 = v14;
  }
  return result;
}

uint64_t RepeatedMessageExtensionField.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *v4;
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t result = MEMORY[0x1CB773070](*v4, v9);
  if (result >= 1)
  {
    uint64_t v14 = a3;
    uint64_t v12 = v4[4];
    uint64_t v11 = v4[5];
    __swift_project_boxed_opaque_existential_1(v4 + 1, v12);
    uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v12, v11);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t))(a4 + 280))(v8, v13, v9, *(void *)(a2 + 24), v14, a4);
  }
  return result;
}

uint64_t RepeatedMessageExtensionField.hashValue.getter(uint64_t a1)
{
  return sub_1C8D0FD30(a1, (void (*)(unsigned char *, uint64_t))RepeatedMessageExtensionField.hash(into:));
}

uint64_t (*sub_1C8D12250(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  long long v2[4] = RepeatedMessageExtensionField.value.modify();
  return sub_1C8D0EDAC;
}

uint64_t sub_1C8D122A8@<X0>(long long *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  return RepeatedMessageExtensionField.init<A>(protobufExtension:decoder:)(a1, *(void *)(a4 + 16), a2, *(void *)(a4 + 24), a3, a5);
}

uint64_t sub_1C8D122D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return RepeatedMessageExtensionField.decodeExtensionField<A>(decoder:)(a1, a4, a2, a3);
}

uint64_t sub_1C8D122FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return RepeatedMessageExtensionField.traverse<A>(visitor:)(a1, a4, a2, a3);
}

uint64_t sub_1C8D1232C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D0FE94(a1, a2, a3, (void (*)(unsigned char *, uint64_t))RepeatedMessageExtensionField.hash(into:));
}

uint64_t sub_1C8D12348()
{
  return static RepeatedMessageExtensionField.== infix(_:_:)();
}

uint64_t _s20SiriOntologyProtobuf26OptionalEnumExtensionFieldV5valuexvg_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t _s20SiriOntologyProtobuf26OptionalEnumExtensionFieldV5valuexvs_0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*OptionalGroupExtensionField.value.modify())()
{
  return nullsub_1;
}

uint64_t OptionalGroupExtensionField.protobufExtension.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C8CA425C(v2 + *(int *)(a1 + 44), a2);
}

uint64_t _s20SiriOntologyProtobuf29OptionalMessageExtensionFieldV08protobufF0AA03AnyeF0_pvs_0(long long *a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 44);
  __swift_destroy_boxed_opaque_existential_1(v4);
  return sub_1C8CA4528(a1, v4);
}

uint64_t (*OptionalGroupExtensionField.protobufExtension.modify())()
{
  return nullsub_1;
}

uint64_t static OptionalGroupExtensionField.== infix(_:_:)()
{
  return sub_1C8D882E0() & 1;
}

uint64_t OptionalGroupExtensionField.init(protobufExtension:value:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return sub_1C8D124C4(a1, a2, a3, a4, a5, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))type metadata accessor for OptionalGroupExtensionField, a6);
}

uint64_t sub_1C8D124C4@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t (*a6)(void, uint64_t, uint64_t, uint64_t)@<X5>, uint64_t a7@<X8>)
{
  uint64_t v11 = a6(0, a3, a4, a5);
  sub_1C8CA4528(a1, a7 + *(int *)(v11 + 44));
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32);
  return v12(a7, a2, a3);
}

uint64_t OptionalGroupExtensionField.hash(into:)()
{
  return sub_1C8D882C0();
}

uint64_t OptionalGroupExtensionField.debugDescription.getter()
{
  return sub_1C8D887D0();
}

uint64_t OptionalGroupExtensionField.isEqual(other:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](a1, a2);
  uint64_t v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1C8CA425C(v4, (uint64_t)v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA566BF0);
  swift_dynamicCast();
  char v7 = sub_1C8D882E0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, a2);
  return v7 & 1;
}

uint64_t OptionalGroupExtensionField.decodeExtensionField<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a1;
  uint64_t v27 = a3;
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](a1, a2);
  uint64_t v24 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C8D88620();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v10, v12);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13, v16);
  uint64_t v18 = (char *)&v24 - v17;
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v25 = v4;
  v19((char *)&v24 - v17, v4, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v18, 0, 1, v7);
  uint64_t v20 = v28;
  (*(void (**)(char *, uint64_t, void, uint64_t, uint64_t))(a4 + 424))(v18, v7, *(void *)(a2 + 24), v27, a4);
  if (v20) {
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v18, v10);
  }
  uint64_t v23 = v24;
  uint64_t v22 = v25;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v15, v18, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v15, 1, v7) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v15, v10);
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v23, v15, v7);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 40))(v22, v23, v7);
}

uint64_t OptionalGroupExtensionField.init<A>(protobufExtension:decoder:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v41 = a4;
  uint64_t v36 = a8;
  uint64_t v37 = a6;
  uint64_t v40 = a2;
  uint64_t v43 = a1;
  uint64_t v11 = *(void *)(a3 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](a1, a2);
  uint64_t v35 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12, v14);
  uint64_t v16 = (char *)&v35 - v15;
  uint64_t v39 = sub_1C8D88620();
  uint64_t v17 = *(void *)(v39 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v39, v18);
  uint64_t v21 = (char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19, v22);
  uint64_t v24 = (char *)&v35 - v23;
  uint64_t v38 = v11;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))((char *)&v35 - v23, 1, 1, a3);
  uint64_t v25 = v42;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a7 + 424))(v24, a3, a5, v41, a7);
  if (v25)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v24, v39);
  }
  else
  {
    uint64_t v42 = a5;
    uint64_t v27 = v39;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v21, v24, v39);
    int v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48))(v21, 1, a3);
    uint64_t v29 = v36;
    uint64_t v30 = v37;
    if (v28 == 1)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v27);
      uint64_t v31 = type metadata accessor for OptionalGroupExtensionField();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v29, 1, 1, v31);
    }
    else
    {
      uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
      v32(v16, v21, a3);
      uint64_t v33 = (uint64_t)v35;
      v32(v35, v16, a3);
      OptionalGroupExtensionField.init(protobufExtension:value:)(v43, v33, a3, v42, v30, v29);
      uint64_t v34 = type metadata accessor for OptionalGroupExtensionField();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v29, 0, 1, v34);
    }
  }
}

uint64_t OptionalGroupExtensionField.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)(v4 + *(int *)(a2 + 44));
  uint64_t v9 = v8[3];
  uint64_t v10 = v8[4];
  __swift_project_boxed_opaque_existential_1(v8, v9);
  uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
  return (*(uint64_t (**)(uint64_t, uint64_t, void, void, uint64_t, uint64_t))(a4 + 144))(v4, v11, *(void *)(a2 + 16), *(void *)(a2 + 24), a3, a4);
}

uint64_t _s20SiriOntologyProtobuf29OptionalMessageExtensionFieldV13isInitializedSbvg_0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 32))(*(void *)(a1 + 16));
}

uint64_t OptionalGroupExtensionField.hashValue.getter()
{
  return sub_1C8D888A0();
}

uint64_t (*sub_1C8D12DA8(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  long long v2[4] = OptionalGroupExtensionField.value.modify();
  return sub_1C8D0EDAC;
}

uint64_t sub_1C8D12E00@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  return OptionalGroupExtensionField.init(protobufExtension:value:)(a1, a2, a3[2], a3[3], a3[4], a4);
}

uint64_t sub_1C8D12E10@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  return OptionalGroupExtensionField.init<A>(protobufExtension:decoder:)(a1, a2, a5[2], a3, a5[3], a5[4], a4, a6);
}

uint64_t sub_1C8D12E44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return OptionalGroupExtensionField.decodeExtensionField<A>(decoder:)(a1, a4, a2, a3);
}

uint64_t sub_1C8D12E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return OptionalGroupExtensionField.traverse<A>(visitor:)(a1, a4, a2, a3);
}

uint64_t sub_1C8D12E98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D12EB0(a1, a2, a3, (void (*)(unsigned char *, uint64_t))OptionalGroupExtensionField.hash(into:));
}

uint64_t sub_1C8D12EB0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *, uint64_t))
{
  sub_1C8D88840();
  a4(v7, a2);
  return sub_1C8D888A0();
}

uint64_t sub_1C8D12F08()
{
  return static OptionalGroupExtensionField.== infix(_:_:)();
}

uint64_t (*RepeatedGroupExtensionField.value.modify())()
{
  return nullsub_1;
}

uint64_t (*RepeatedGroupExtensionField.protobufExtension.modify())()
{
  return nullsub_1;
}

uint64_t static RepeatedGroupExtensionField.== infix(_:_:)()
{
  return sub_1C8D88570();
}

uint64_t RepeatedGroupExtensionField.init(protobufExtension:value:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t result = sub_1C8CA4528(a1, (uint64_t)(a3 + 1));
  *a3 = a2;
  return result;
}

uint64_t RepeatedGroupExtensionField.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1C8D88560();
  return swift_bridgeObjectRelease();
}

uint64_t RepeatedGroupExtensionField.debugDescription.getter(uint64_t a1)
{
  return sub_1C8D13014(a1, (void (*)(char *, char *))sub_1C8D13738);
}

uint64_t sub_1C8D13014(uint64_t a1, void (*a2)(char *, char *))
{
  uint64_t v4 = *v2;
  v10[1] = *(_OWORD *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 32);
  uint64_t v12 = v4;
  uint64_t v5 = sub_1C8D88550();
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v8 = sub_1C8D0EEE0(a2, (uint64_t)v10, v5, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v7);
  swift_bridgeObjectRelease();
  uint64_t v12 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA566BF8);
  sub_1C8D13630();
  sub_1C8D882D0();
  swift_bridgeObjectRelease();
  uint64_t v12 = 91;
  unint64_t v13 = 0xE100000000000000;
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t RepeatedGroupExtensionField.isEqual(other:)(uint64_t a1, uint64_t a2)
{
  sub_1C8CA425C(a1, (uint64_t)v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA566BF0);
  swift_dynamicCast();
  char v3 = sub_1C8D88570();
  (*(void (**)(void *, uint64_t))(*(void *)(a2 - 8) + 8))(v6, a2);
  return v3 & 1;
}

uint64_t RepeatedGroupExtensionField.decodeExtensionField<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, void, void, uint64_t))(a4 + 432))(v4, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t RepeatedGroupExtensionField.init<A>(protobufExtension:decoder:)@<X0>(long long *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t *a6@<X8>)
{
  uint64_t v15 = sub_1C8D884F0();
  (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 432))(&v15, a2, a4, a3, a5);
  if (v6)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = v15;
    uint64_t result = sub_1C8CA4528(a1, (uint64_t)(a6 + 1));
    *a6 = v14;
  }
  return result;
}

uint64_t RepeatedGroupExtensionField.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *v4;
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t result = MEMORY[0x1CB773070](*v4, v9);
  if (result >= 1)
  {
    uint64_t v14 = a3;
    uint64_t v12 = v4[4];
    uint64_t v11 = v4[5];
    __swift_project_boxed_opaque_existential_1(v4 + 1, v12);
    uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v12, v11);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t))(a4 + 288))(v8, v13, v9, *(void *)(a2 + 24), v14, a4);
  }
  return result;
}

uint64_t _s20SiriOntologyProtobuf29RepeatedMessageExtensionFieldV13isInitializedSbvg_0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CD8);
  uint64_t v0 = sub_1C8D88720();
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    uint64_t v2 = (void *)(v0 + 32);
    uint64_t v3 = v1 - 1;
    do
    {
      uint64_t v4 = v2[3];
      uint64_t v5 = v2[4];
      __swift_project_boxed_opaque_existential_1(v2, v4);
      char v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 32))(v4, v5);
      char v7 = v6;
      BOOL v9 = v3-- != 0;
      if ((v6 & 1) == 0) {
        break;
      }
      v2 += 5;
    }
    while (v9);
  }
  else
  {
    char v7 = 1;
  }
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t RepeatedGroupExtensionField.hashValue.getter(uint64_t a1)
{
  return sub_1C8D0FD30(a1, (void (*)(unsigned char *, uint64_t))RepeatedGroupExtensionField.hash(into:));
}

uint64_t (*sub_1C8D134DC(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  long long v2[4] = RepeatedGroupExtensionField.value.modify();
  return sub_1C8D0EDAC;
}

void sub_1C8D13534(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t sub_1C8D1357C@<X0>(long long *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  return RepeatedGroupExtensionField.init(protobufExtension:value:)(a1, *a2, a3);
}

uint64_t sub_1C8D13584@<X0>(long long *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  return RepeatedGroupExtensionField.init<A>(protobufExtension:decoder:)(a1, *(void *)(a4 + 16), a2, *(void *)(a4 + 24), a3, a5);
}

uint64_t sub_1C8D135B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return RepeatedGroupExtensionField.decodeExtensionField<A>(decoder:)(a1, a4, a2, a3);
}

uint64_t sub_1C8D135D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return RepeatedGroupExtensionField.traverse<A>(visitor:)(a1, a4, a2, a3);
}

uint64_t sub_1C8D13604(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D0FE94(a1, a2, a3, (void (*)(unsigned char *, uint64_t))RepeatedGroupExtensionField.hash(into:));
}

uint64_t sub_1C8D13620()
{
  return static RepeatedGroupExtensionField.== infix(_:_:)();
}

unint64_t sub_1C8D13630()
{
  unint64_t result = qword_1EA566C00[0];
  if (!qword_1EA566C00[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA566BF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA566C00);
  }
  return result;
}

uint64_t sub_1C8D1368C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C8D0F9B8(a1, a2);
}

uint64_t type metadata accessor for OptionalEnumExtensionField()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C8D136C4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C8D10E80(a1, a2);
}

uint64_t type metadata accessor for OptionalMessageExtensionField()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C8D136FC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C8D10E80(a1, a2);
}

uint64_t type metadata accessor for OptionalGroupExtensionField()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C8D13738@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C8D887D0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C8D13780(uint64_t a1)
{
  return sub_1C8D13C50(a1);
}

uint64_t sub_1C8D137AC(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C8D137E8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C8D13804(uint64_t a1)
{
  return sub_1C8D13C50(a1);
}

uint64_t sub_1C8D13830(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C8D1386C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C8D13888(uint64_t a1)
{
  return sub_1C8D13C50(a1);
}

uint64_t sub_1C8D138B4(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C8D138F0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C8D1390C(uint64_t a1)
{
  return sub_1C8D13C50(a1);
}

uint64_t sub_1C8D13938(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C8D13974()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C8D13990(uint64_t a1)
{
  return sub_1C8D13C50(a1);
}

uint64_t sub_1C8D139BC(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C8D139F8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C8D13A14(uint64_t a1)
{
  return sub_1C8D13C50(a1);
}

uint64_t sub_1C8D13A40(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C8D13A7C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C8D13A98(uint64_t a1)
{
  return sub_1C8D13C50(a1);
}

uint64_t sub_1C8D13AC4(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C8D13B00()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C8D13B1C(uint64_t a1)
{
  return sub_1C8D13C50(a1);
}

uint64_t sub_1C8D13B48(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C8D13B84()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C8D13BA0(uint64_t a1)
{
  return sub_1C8D13C50(a1);
}

uint64_t sub_1C8D13BCC(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C8D13C08()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C8D13C24(uint64_t a1)
{
  return sub_1C8D13C50(a1);
}

uint64_t sub_1C8D13C50(uint64_t a1)
{
  *(void *)(a1 + 8) = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1C8D13C9C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C8D13CD8()
{
  return swift_getWitnessTable();
}

uint64_t dispatch thunk of AnyExtensionField.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of AnyExtensionField.protobufExtension.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of AnyExtensionField.isEqual(other:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of AnyExtensionField.decodeExtensionField<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of AnyExtensionField.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t dispatch thunk of AnyExtensionField.isInitialized.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of ExtensionField.value.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ExtensionField.value.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of ExtensionField.value.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of ExtensionField.init(protobufExtension:value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of ExtensionField.init<A>(protobufExtension:decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 64))();
}

uint64_t sub_1C8D13E0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 24);
}

uint64_t sub_1C8D13E14()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C8D13EBC(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 40 > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    unint64_t v10 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v12 = *(void *)(v11 + 24);
    *(void *)(v10 + 24) = v12;
    *(void *)(v10 + 32) = *(void *)(v11 + 32);
    (**(void (***)(void))(v12 - 8))();
  }
  return a1;
}

uint64_t sub_1C8D14014(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v3)(a1, AssociatedTypeWitness);
  unint64_t v4 = (a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8;
  return __swift_destroy_boxed_opaque_existential_1(v4);
}

uint64_t sub_1C8D140A4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v8 + 24);
  *(void *)(v7 + 24) = v9;
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  (**(void (***)(void))(v9 - 8))();
  return a1;
}

uint64_t sub_1C8D14188(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)((*(void *)(v5 + 40) + 7 + a1) & 0xFFFFFFFFFFFFFFF8), (uint64_t *)((*(void *)(v5 + 40) + 7 + a2) & 0xFFFFFFFFFFFFFFF8));
  return a1;
}

uint64_t sub_1C8D14224(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v8 + 32);
  long long v10 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)unint64_t v7 = *(_OWORD *)v8;
  *(_OWORD *)(v7 + 16) = v10;
  *(void *)(v7 + 32) = v9;
  return a1;
}

uint64_t sub_1C8D142CC(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_1(v7);
  long long v9 = *(_OWORD *)v8;
  long long v10 = *(_OWORD *)(v8 + 16);
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  *(_OWORD *)unint64_t v7 = v9;
  *(_OWORD *)(v7 + 16) = v10;
  return a1;
}

uint64_t sub_1C8D1437C(_DWORD *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v5 + 84);
  }
  uint64_t v8 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v9 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
    uint64_t v10 = v9 & 0xFFFFFFF8;
    if ((v9 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = a2 - v7 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v9);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v9);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C8D1451CLL);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v9);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v6 < 0x7FFFFFFF)
  {
    unint64_t v18 = *(void *)((((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 24);
    if (v18 >= 0xFFFFFFFF) {
      LODWORD(v18) = -1;
    }
    return (v18 + 1);
  }
  else
  {
    uint64_t v17 = *(uint64_t (**)(_DWORD *))(v5 + 48);
    return v17(a1);
  }
}

double sub_1C8D14530(_DWORD *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v8 = *(_DWORD *)(v6 + 84);
  uint64_t v9 = *(void *)(v6 + 64);
  if (v8 <= 0x7FFFFFFF) {
    unsigned int v10 = 0x7FFFFFFF;
  }
  else {
    unsigned int v10 = *(_DWORD *)(v6 + 84);
  }
  size_t v11 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFD8) {
    unsigned int v12 = a3 - v10 + 1;
  }
  else {
    unsigned int v12 = 2;
  }
  if (v12 >= 0x10000) {
    int v13 = 4;
  }
  else {
    int v13 = 2;
  }
  if (v12 < 0x100) {
    int v13 = 1;
  }
  if (v12 >= 2) {
    unsigned int v14 = v13;
  }
  else {
    unsigned int v14 = 0;
  }
  if (v10 < a3) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = 0;
  }
  if (a2 > v10)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFD8) {
      int v16 = a2 - v10;
    }
    else {
      int v16 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFD8)
    {
      int v17 = ~v10 + a2;
      bzero(a1, v11);
      *a1 = v17;
    }
    switch(v15)
    {
      case 1:
        *((unsigned char *)a1 + v11) = v16;
        return result;
      case 2:
        *(_WORD *)((char *)a1 + v11) = v16;
        return result;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)((char *)a1 + v11) = v16;
        return result;
      default:
        return result;
    }
  }
  switch(v15)
  {
    case 1:
      *((unsigned char *)a1 + v11) = 0;
      if (!a2) {
        return result;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)((char *)a1 + v11) = 0;
      if (!a2) {
        return result;
      }
      goto LABEL_33;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1C8D14740);
    case 4:
      *(_DWORD *)((char *)a1 + v11) = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v8 < 0x7FFFFFFF)
        {
          unint64_t v19 = ((unint64_t)a1 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
          if ((a2 & 0x80000000) != 0)
          {
            double result = 0.0;
            *(_OWORD *)(v19 + 8) = 0u;
            *(_OWORD *)(v19 + 24) = 0u;
            *(void *)unint64_t v19 = a2 ^ 0x80000000;
          }
          else
          {
            *(void *)(v19 + 24) = (a2 - 1);
          }
        }
        else
        {
          unint64_t v18 = *(void (**)(_DWORD *, uint64_t))(v6 + 56);
          v18(a1, a2);
        }
      }
      return result;
  }
}

uint64_t type metadata accessor for RepeatedExtensionField()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C8D14794(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1(v1);
}

uint64_t type metadata accessor for PackedExtensionField()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C8D147E8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for RepeatedEnumExtensionField()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for PackedEnumExtensionField()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C8D148D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 32);
}

uint64_t type metadata accessor for RepeatedMessageExtensionField()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C8D148F4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C8D1498C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 40 > 0x18)
  {
    uint64_t v9 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v12 = *(void *)(v11 + 24);
    *(void *)(v10 + 24) = v12;
    *(void *)(v10 + 32) = *(void *)(v11 + 32);
    (**(void (***)(void))(v12 - 8))();
  }
  return v4;
}

uint64_t sub_1C8D14AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  unint64_t v4 = (a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8;
  return __swift_destroy_boxed_opaque_existential_1(v4);
}

uint64_t sub_1C8D14B34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v8 + 24);
  *(void *)(v7 + 24) = v9;
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  (**(void (***)(void))(v9 - 8))();
  return a1;
}

uint64_t sub_1C8D14BF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)((*(void *)(v5 + 40) + 7 + a1) & 0xFFFFFFFFFFFFFFF8), (uint64_t *)((*(void *)(v5 + 40) + 7 + a2) & 0xFFFFFFFFFFFFFFF8));
  return a1;
}

uint64_t sub_1C8D14C6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v8 + 32);
  long long v10 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)unint64_t v7 = *(_OWORD *)v8;
  *(_OWORD *)(v7 + 16) = v10;
  *(void *)(v7 + 32) = v9;
  return a1;
}

uint64_t sub_1C8D14CF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_1(v7);
  long long v9 = *(_OWORD *)v8;
  long long v10 = *(_OWORD *)(v8 + 16);
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  *(_OWORD *)unint64_t v7 = v9;
  *(_OWORD *)(v7 + 16) = v10;
  return a1;
}

uint64_t sub_1C8D14D7C(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C8D14EC8);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)((((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 24);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

double sub_1C8D14EDC(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFD8) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFD8) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFD8)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 40);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return result;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return result;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return result;
      default:
        return result;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return result;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return result;
      }
      goto LABEL_33;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1C8D150C8);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          unint64_t v19 = (unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8;
          if ((a2 & 0x80000000) != 0)
          {
            double result = 0.0;
            *(_OWORD *)(v19 + 8) = 0u;
            *(_OWORD *)(v19 + 24) = 0u;
            *(void *)unint64_t v19 = a2 ^ 0x80000000;
          }
          else
          {
            *(void *)(v19 + 24) = a2 - 1;
          }
        }
        else
        {
          unint64_t v18 = *(void (**)(void))(v6 + 56);
          v18();
        }
      }
      return result;
  }
}

uint64_t sub_1C8D150F0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = a2 + 8;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v4;
  uint64_t v5 = v4;
  uint64_t v6 = **(void (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  swift_bridgeObjectRetain();
  v6(a1 + 8, v3, v5);
  return a1;
}

void *sub_1C8D15178(void *a1, void *a2)
{
  uint64_t v3 = a2 + 1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, v3);
  return a1;
}

uint64_t sub_1C8D151D0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t sub_1C8D15228(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1C8D15270(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)double result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)double result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for RepeatedGroupExtensionField()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1C8D15320@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C8D1368C(a1, a2);
}

uint64_t sub_1C8D15338@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C8D136C4(a1, a2);
}

uint64_t sub_1C8D153B0@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  return sub_1C8D0FE28(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1C8D153C8@<X0>(long long *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  return sub_1C8D111E8(a1, a2, a3, a4, a5);
}

ValueMetadata *type metadata accessor for BinaryEncodingSizeVisitor()
{
  return &type metadata for BinaryEncodingSizeVisitor;
}

uint64_t sub_1C8D153F8(uint64_t result, int a2)
{
  unsigned int v3 = 8 * a2;
  uint64_t v4 = 2;
  uint64_t v5 = 3;
  uint64_t v6 = 4;
  if ((8 * a2) >> 28) {
    uint64_t v6 = 5;
  }
  if (v3 >= 0x200000) {
    uint64_t v5 = v6;
  }
  if ((8 * a2) >> 14) {
    uint64_t v4 = v5;
  }
  if (v3 >= 0x80) {
    uint64_t v7 = v4;
  }
  else {
    uint64_t v7 = 1;
  }
  unsigned int v8 = (2 * result) ^ ((int)result >> 31);
  uint64_t v9 = 2;
  uint64_t v10 = 3;
  uint64_t v11 = 4;
  if (v8 >> 28) {
    uint64_t v11 = 5;
  }
  if (v8 >= 0x200000) {
    uint64_t v10 = v11;
  }
  if (v8 >> 14) {
    uint64_t v9 = v10;
  }
  if (v8 >= 0x80) {
    uint64_t v12 = v9;
  }
  else {
    uint64_t v12 = 1;
  }
  uint64_t v13 = v12 + v7;
  BOOL v14 = __OFADD__(*v2, v13);
  uint64_t v15 = *v2 + v13;
  if (v14) {
    __break(1u);
  }
  else {
    *uint64_t v2 = v15;
  }
  return result;
}

uint64_t sub_1C8D15490(uint64_t result, int a2)
{
  unsigned int v3 = 8 * a2;
  uint64_t v4 = 2;
  uint64_t v5 = 3;
  uint64_t v6 = 4;
  if ((8 * a2) >> 28) {
    uint64_t v6 = 5;
  }
  if (v3 >= 0x200000) {
    uint64_t v5 = v6;
  }
  if ((8 * a2) >> 14) {
    uint64_t v4 = v5;
  }
  if (v3 >= 0x80) {
    uint64_t v7 = v4;
  }
  else {
    uint64_t v7 = 1;
  }
  unint64_t v8 = (2 * result) ^ (result >> 63);
  if (v8 < 0x80)
  {
    uint64_t v9 = 1;
    goto LABEL_25;
  }
  if ((v8 & 0x8000000000000000) != 0)
  {
    uint64_t v9 = 10;
    goto LABEL_25;
  }
  if (!(v8 >> 35))
  {
    if (v8 < 0x200000)
    {
      uint64_t v9 = 2;
      if (v8 < 0x4000) {
        goto LABEL_25;
      }
LABEL_24:
      ++v9;
      goto LABEL_25;
    }
    uint64_t v9 = 4;
LABEL_23:
    if (!(v8 >> 28)) {
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v8 >> 49)
  {
    v8 >>= 28;
    uint64_t v9 = 8;
    goto LABEL_23;
  }
  uint64_t v9 = 6;
  if (v8 >> 42) {
    goto LABEL_24;
  }
LABEL_25:
  uint64_t v10 = v9 + v7;
  BOOL v11 = __OFADD__(*v2, v10);
  uint64_t v12 = *v2 + v10;
  if (v11) {
    __break(1u);
  }
  else {
    *uint64_t v2 = v12;
  }
  return result;
}

uint64_t sub_1C8D15560(uint64_t a1, unint64_t a2, int a3)
{
  unsigned int v4 = 8 * a3;
  uint64_t v5 = 2;
  uint64_t v6 = 3;
  uint64_t v7 = 4;
  if ((8 * a3) >> 28) {
    uint64_t v7 = 5;
  }
  if (v4 >= 0x200000) {
    uint64_t v6 = v7;
  }
  if (v4 >> 14) {
    uint64_t v5 = v6;
  }
  if (v4 >= 0x80) {
    uint64_t v8 = v5;
  }
  else {
    uint64_t v8 = 1;
  }
  unint64_t v9 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_22;
      }
      unint64_t v9 = HIDWORD(a1) - (int)a1;
LABEL_15:
      uint64_t result = sub_1C8CA7C20(v9);
      uint64_t v13 = v8 + result;
      if (__OFADD__(v8, result))
      {
        __break(1u);
        goto LABEL_20;
      }
      BOOL v14 = __OFADD__(v13, v9);
      unint64_t v15 = v13 + v9;
      if (v14)
      {
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
      BOOL v14 = __OFADD__(*v3, v15);
      unint64_t v16 = *v3 + v15;
      if (v14)
      {
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C8D15654);
      }
      *unsigned int v3 = v16;
      return result;
    case 2uLL:
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v10 = *(void *)(a1 + 24);
      unint64_t v9 = v10 - v11;
      if (!__OFSUB__(v10, v11)) {
        goto LABEL_15;
      }
      goto LABEL_23;
    case 3uLL:
      goto LABEL_15;
    default:
      unint64_t v9 = BYTE6(a2);
      goto LABEL_15;
  }
}

uint64_t sub_1C8D15664(uint64_t result, int a2)
{
  unsigned int v3 = 8 * a2;
  uint64_t v4 = 2;
  uint64_t v5 = 3;
  uint64_t v6 = 4;
  if ((8 * a2) >> 28) {
    uint64_t v6 = 5;
  }
  if (v3 >= 0x200000) {
    uint64_t v5 = v6;
  }
  if ((8 * a2) >> 14) {
    uint64_t v4 = v5;
  }
  if (v3 >= 0x80) {
    uint64_t v7 = v4;
  }
  else {
    uint64_t v7 = 1;
  }
  uint64_t v8 = *(void *)(result + 16);
  if (v8)
  {
    unint64_t v9 = 0;
    uint64_t v10 = (unsigned int *)(result + 32);
    while (1)
    {
      unsigned int v12 = *v10++;
      unsigned int v11 = v12;
      if ((v12 & 0x80000000) != 0)
      {
        BOOL v13 = __OFADD__(v9, 10);
        v9 += 10;
        if (v13) {
          goto LABEL_36;
        }
      }
      else if (v11 > 0x7F)
      {
        if (v11 >> 28) {
          uint64_t v14 = 5;
        }
        else {
          uint64_t v14 = 4;
        }
        if (v11 < 0x200000) {
          uint64_t v14 = 3;
        }
        if (v11 >= 0x4000) {
          uint64_t v15 = v14;
        }
        else {
          uint64_t v15 = 2;
        }
        BOOL v13 = __OFADD__(v9, v15);
        v9 += v15;
        if (v13)
        {
LABEL_36:
          __break(1u);
          goto LABEL_37;
        }
      }
      else
      {
        BOOL v13 = __OFADD__(v9++, 1);
        if (v13) {
          goto LABEL_36;
        }
      }
      if (!--v8) {
        goto LABEL_32;
      }
    }
  }
  unint64_t v9 = 0;
LABEL_32:
  uint64_t result = sub_1C8CA7C20(v9);
  uint64_t v16 = v7 + result;
  if (__OFADD__(v7, result))
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  BOOL v13 = __OFADD__(v16, v9);
  unint64_t v17 = v16 + v9;
  if (v13)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  BOOL v13 = __OFADD__(*v2, v17);
  unint64_t v18 = *v2 + v17;
  if (!v13)
  {
    *uint64_t v2 = v18;
    return result;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1C8D15784(uint64_t result, int a2)
{
  unsigned int v3 = 8 * a2;
  uint64_t v4 = 2;
  uint64_t v5 = 3;
  uint64_t v6 = 4;
  if ((8 * a2) >> 28) {
    uint64_t v6 = 5;
  }
  if (v3 >= 0x200000) {
    uint64_t v5 = v6;
  }
  if ((8 * a2) >> 14) {
    uint64_t v4 = v5;
  }
  if (v3 >= 0x80) {
    uint64_t v7 = v4;
  }
  else {
    uint64_t v7 = 1;
  }
  uint64_t v8 = *(void *)(result + 16);
  if (v8)
  {
    unint64_t v9 = 0;
    uint64_t v10 = (unint64_t *)(result + 32);
    while (1)
    {
      unint64_t v12 = *v10++;
      unint64_t v11 = v12;
      if (v12 < 0x80)
      {
        uint64_t v13 = 1;
        goto LABEL_27;
      }
      if ((v11 & 0x8000000000000000) != 0)
      {
        uint64_t v13 = 10;
        goto LABEL_27;
      }
      if (v11 >> 35)
      {
        if (v11 >> 49)
        {
          v11 >>= 28;
          uint64_t v13 = 8;
LABEL_25:
          if (!(v11 >> 28)) {
            goto LABEL_27;
          }
LABEL_26:
          ++v13;
          goto LABEL_27;
        }
        uint64_t v13 = 6;
        if (v11 >> 42) {
          goto LABEL_26;
        }
      }
      else
      {
        if (v11 >= 0x200000)
        {
          uint64_t v13 = 4;
          goto LABEL_25;
        }
        uint64_t v13 = 2;
        if (v11 >= 0x4000) {
          goto LABEL_26;
        }
      }
LABEL_27:
      BOOL v14 = __OFADD__(v9, v13);
      v9 += v13;
      if (v14)
      {
        __break(1u);
        goto LABEL_36;
      }
      if (!--v8) {
        goto LABEL_31;
      }
    }
  }
  unint64_t v9 = 0;
LABEL_31:
  uint64_t result = sub_1C8CA7C20(v9);
  uint64_t v15 = v7 + result;
  if (__OFADD__(v7, result))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  BOOL v14 = __OFADD__(v15, v9);
  unint64_t v16 = v15 + v9;
  if (v14)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  BOOL v14 = __OFADD__(*v2, v16);
  unint64_t v17 = *v2 + v16;
  if (!v14)
  {
    *uint64_t v2 = v17;
    return result;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1C8D158C0(uint64_t result, int a2)
{
  unsigned int v3 = 8 * a2;
  uint64_t v4 = 2;
  uint64_t v5 = 3;
  uint64_t v6 = 4;
  if ((8 * a2) >> 28) {
    uint64_t v6 = 5;
  }
  if (v3 >= 0x200000) {
    uint64_t v5 = v6;
  }
  if ((8 * a2) >> 14) {
    uint64_t v4 = v5;
  }
  if (v3 >= 0x80) {
    uint64_t v7 = v4;
  }
  else {
    uint64_t v7 = 1;
  }
  uint64_t v8 = *(void *)(result + 16);
  if (v8)
  {
    unint64_t v9 = 0;
    uint64_t v10 = (int *)(result + 32);
    while (1)
    {
      int v11 = *v10++;
      unsigned int v12 = (2 * v11) ^ (v11 >> 31);
      if (v12 >= 0x80)
      {
        if (v12 >> 14)
        {
          if (v12 >= 0x200000) {
            uint64_t v13 = v12 >> 28 ? 5 : 4;
          }
          else {
            uint64_t v13 = 3;
          }
        }
        else
        {
          uint64_t v13 = 2;
        }
      }
      else
      {
        uint64_t v13 = 1;
      }
      BOOL v14 = __OFADD__(v9, v13);
      v9 += v13;
      if (v14) {
        break;
      }
      if (!--v8) {
        goto LABEL_25;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  unint64_t v9 = 0;
LABEL_25:
  uint64_t result = sub_1C8CA7C20(v9);
  uint64_t v15 = v7 + result;
  if (__OFADD__(v7, result)) {
    goto LABEL_30;
  }
  BOOL v14 = __OFADD__(v15, v9);
  unint64_t v16 = v15 + v9;
  if (v14)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  BOOL v14 = __OFADD__(*v2, v16);
  unint64_t v17 = *v2 + v16;
  if (!v14)
  {
    *uint64_t v2 = v17;
    return result;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1C8D159D4(uint64_t result, int a2)
{
  unsigned int v3 = 8 * a2;
  uint64_t v4 = 2;
  uint64_t v5 = 3;
  uint64_t v6 = 4;
  if ((8 * a2) >> 28) {
    uint64_t v6 = 5;
  }
  if (v3 >= 0x200000) {
    uint64_t v5 = v6;
  }
  if ((8 * a2) >> 14) {
    uint64_t v4 = v5;
  }
  if (v3 >= 0x80) {
    uint64_t v7 = v4;
  }
  else {
    uint64_t v7 = 1;
  }
  uint64_t v8 = *(void *)(result + 16);
  if (v8)
  {
    unint64_t v9 = 0;
    uint64_t v10 = (uint64_t *)(result + 32);
    while (1)
    {
      uint64_t v11 = *v10++;
      unint64_t v12 = (2 * v11) ^ (v11 >> 63);
      if (v12 < 0x80)
      {
        uint64_t v13 = 1;
        goto LABEL_27;
      }
      if ((v12 & 0x8000000000000000) != 0)
      {
        uint64_t v13 = 10;
        goto LABEL_27;
      }
      if (v12 >> 35)
      {
        if (v12 >> 49)
        {
          v12 >>= 28;
          uint64_t v13 = 8;
LABEL_25:
          if (!(v12 >> 28)) {
            goto LABEL_27;
          }
LABEL_26:
          ++v13;
          goto LABEL_27;
        }
        uint64_t v13 = 6;
        if (v12 >> 42) {
          goto LABEL_26;
        }
      }
      else
      {
        if (v12 >= 0x200000)
        {
          uint64_t v13 = 4;
          goto LABEL_25;
        }
        uint64_t v13 = 2;
        if (v12 >= 0x4000) {
          goto LABEL_26;
        }
      }
LABEL_27:
      BOOL v14 = __OFADD__(v9, v13);
      v9 += v13;
      if (v14)
      {
        __break(1u);
        goto LABEL_36;
      }
      if (!--v8) {
        goto LABEL_31;
      }
    }
  }
  unint64_t v9 = 0;
LABEL_31:
  uint64_t result = sub_1C8CA7C20(v9);
  uint64_t v15 = v7 + result;
  if (__OFADD__(v7, result))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  BOOL v14 = __OFADD__(v15, v9);
  unint64_t v16 = v15 + v9;
  if (v14)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  BOOL v14 = __OFADD__(*v2, v16);
  unint64_t v17 = *v2 + v16;
  if (!v14)
  {
    *uint64_t v2 = v17;
    return result;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1C8D15B18(uint64_t result, int a2)
{
  unsigned int v3 = 8 * a2;
  uint64_t v4 = 2;
  uint64_t v5 = 3;
  uint64_t v6 = 4;
  if ((8 * a2) >> 28) {
    uint64_t v6 = 5;
  }
  if (v3 >= 0x200000) {
    uint64_t v5 = v6;
  }
  if ((8 * a2) >> 14) {
    uint64_t v4 = v5;
  }
  if (v3 >= 0x80) {
    uint64_t v7 = v4;
  }
  else {
    uint64_t v7 = 1;
  }
  uint64_t v8 = *(void *)(result + 16);
  if (v8)
  {
    unint64_t v9 = 0;
    uint64_t v10 = (unsigned int *)(result + 32);
    while (1)
    {
      unsigned int v12 = *v10++;
      unsigned int v11 = v12;
      if (v12 >= 0x80)
      {
        unsigned int v14 = v11 >> 14;
        uint64_t v15 = v11 >> 28 ? 5 : 4;
        uint64_t v13 = v11 >= 0x200000 ? v15 : 3;
        if (!v14) {
          uint64_t v13 = 2;
        }
      }
      else
      {
        uint64_t v13 = 1;
      }
      BOOL v16 = __OFADD__(v9, v13);
      v9 += v13;
      if (v16) {
        break;
      }
      if (!--v8) {
        goto LABEL_26;
      }
    }
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  unint64_t v9 = 0;
LABEL_26:
  uint64_t result = sub_1C8CA7C20(v9);
  uint64_t v17 = v7 + result;
  if (__OFADD__(v7, result)) {
    goto LABEL_31;
  }
  BOOL v16 = __OFADD__(v17, v9);
  unint64_t v18 = v17 + v9;
  if (v16)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  BOOL v16 = __OFADD__(*v2, v18);
  unint64_t v19 = *v2 + v18;
  if (!v16)
  {
    *uint64_t v2 = v19;
    return result;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1C8D15C20(uint64_t result, int a2)
{
  unsigned int v3 = 8 * a2;
  uint64_t v4 = 2;
  uint64_t v5 = 3;
  uint64_t v6 = 4;
  if ((8 * a2) >> 28) {
    uint64_t v6 = 5;
  }
  if (v3 >= 0x200000) {
    uint64_t v5 = v6;
  }
  if ((8 * a2) >> 14) {
    uint64_t v4 = v5;
  }
  if (v3 >= 0x80) {
    uint64_t v7 = v4;
  }
  else {
    uint64_t v7 = 1;
  }
  unint64_t v8 = *(void *)(result + 16);
  if (v8 >> 61)
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v9 = 4 * v8;
  uint64_t result = sub_1C8CA7C20(4 * v8);
  uint64_t v10 = v7 + result;
  if (__OFADD__(v7, result))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  BOOL v11 = __OFADD__(v10, v9);
  uint64_t v12 = v10 + v9;
  if (v11)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  BOOL v11 = __OFADD__(*v2, v12);
  uint64_t v13 = *v2 + v12;
  if (!v11)
  {
    *uint64_t v2 = v13;
    return result;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1C8D15CD0(uint64_t result, int a2)
{
  unsigned int v3 = 8 * a2;
  uint64_t v4 = 2;
  uint64_t v5 = 3;
  uint64_t v6 = 4;
  if ((8 * a2) >> 28) {
    uint64_t v6 = 5;
  }
  if (v3 >= 0x200000) {
    uint64_t v5 = v6;
  }
  if ((8 * a2) >> 14) {
    uint64_t v4 = v5;
  }
  if (v3 >= 0x80) {
    uint64_t v7 = v4;
  }
  else {
    uint64_t v7 = 1;
  }
  unint64_t v8 = *(void *)(result + 16);
  if (v8 >> 60)
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v9 = 8 * v8;
  uint64_t result = sub_1C8CA7C20(8 * v8);
  uint64_t v10 = v7 + result;
  if (__OFADD__(v7, result))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  BOOL v11 = __OFADD__(v10, v9);
  uint64_t v12 = v10 + v9;
  if (v11)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  BOOL v11 = __OFADD__(*v2, v12);
  uint64_t v13 = *v2 + v12;
  if (!v11)
  {
    *uint64_t v2 = v13;
    return result;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1C8D15D80(uint64_t a1, int a2)
{
  unsigned int v3 = 8 * a2;
  uint64_t v4 = 2;
  uint64_t v5 = 3;
  uint64_t v6 = 4;
  if ((8 * a2) >> 28) {
    uint64_t v6 = 5;
  }
  if (v3 >= 0x200000) {
    uint64_t v5 = v6;
  }
  if ((8 * a2) >> 14) {
    uint64_t v4 = v5;
  }
  if (v3 >= 0x80) {
    uint64_t v7 = v4;
  }
  else {
    uint64_t v7 = 1;
  }
  unint64_t v8 = *(void *)(a1 + 16);
  uint64_t result = sub_1C8CA7C20(v8);
  uint64_t v10 = v7 + result;
  if (__OFADD__(v7, result))
  {
    __break(1u);
    goto LABEL_15;
  }
  BOOL v11 = __OFADD__(v10, v8);
  unint64_t v12 = v10 + v8;
  if (v11)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  BOOL v11 = __OFADD__(*v2, v12);
  unint64_t v13 = *v2 + v12;
  if (!v11)
  {
    *uint64_t v2 = v13;
    return result;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1C8D15E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v34 = a4;
  uint64_t v8 = *(void *)(a3 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = MEMORY[0x1F4188790](a1, a2);
  unint64_t v12 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v14 = 8 * v13;
  uint64_t v15 = 2;
  uint64_t v16 = 3;
  uint64_t v17 = 4;
  if ((8 * v13) >> 28) {
    uint64_t v17 = 5;
  }
  if (v14 >= 0x200000) {
    uint64_t v16 = v17;
  }
  if (v14 >> 14) {
    uint64_t v15 = v16;
  }
  if (v14 >= 0x80) {
    uint64_t v18 = v15;
  }
  else {
    uint64_t v18 = 1;
  }
  uint64_t result = MEMORY[0x1CB773070](v10, v11);
  uint64_t v20 = result * v18;
  if ((unsigned __int128)(result * (__int128)v18) >> 64 == (result * v18) >> 63)
  {
    BOOL v21 = __OFADD__(*v5, v20);
    uint64_t v22 = *v5 + v20;
    if (v21) {
      goto LABEL_37;
    }
    *uint64_t v5 = v22;
    uint64_t v23 = swift_bridgeObjectRetain();
    if (!MEMORY[0x1CB773090](v23, a3)) {
      return swift_bridgeObjectRelease();
    }
    uint64_t v30 = v9;
    uint64_t v24 = 0;
    uint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t))(v34 + 40);
    uint64_t v32 = v34 + 40;
    uint64_t v33 = (void (**)(char *, uint64_t *, uint64_t))(v8 + 16);
    while (1)
    {
      char v25 = sub_1C8D88510();
      sub_1C8D884D0();
      if (v25)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v12, a1+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v24, a3);
        uint64_t v26 = v24 + 1;
        if (__OFADD__(v24, 1)) {
          goto LABEL_32;
        }
      }
      else
      {
        uint64_t result = sub_1C8D886B0();
        if (v30 != 8) {
          goto LABEL_38;
        }
        uint64_t v35 = result;
        (*v33)(v12, &v35, a3);
        swift_unknownObjectRelease();
        uint64_t v26 = v24 + 1;
        if (__OFADD__(v24, 1))
        {
LABEL_32:
          __break(1u);
          return swift_bridgeObjectRelease();
        }
      }
      unsigned int v27 = v31(a3, v34);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v12, a3);
      uint64_t v28 = 4;
      if (v27 >> 28) {
        uint64_t v28 = 5;
      }
      if (v27 < 0x200000) {
        uint64_t v28 = 3;
      }
      if (v27 < 0x4000) {
        uint64_t v28 = 2;
      }
      if (v27 <= 0x7F) {
        uint64_t v28 = 1;
      }
      if ((v27 & 0x80000000) != 0) {
        uint64_t v28 = 10;
      }
      BOOL v21 = __OFADD__(*v5, v28);
      uint64_t v29 = *v5 + v28;
      if (v21) {
        break;
      }
      *uint64_t v5 = v29;
      ++v24;
      if (v26 == MEMORY[0x1CB773090](a1, a3)) {
        return swift_bridgeObjectRelease();
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1C8D16104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v37 = a4;
  int v7 = a2;
  uint64_t v9 = *(void *)(a3 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](a1, a2);
  uint64_t v33 = v11;
  unint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = v10;
  sub_1C8D88550();
  swift_getWitnessTable();
  uint64_t result = sub_1C8D885D0();
  if (result) {
    return result;
  }
  unsigned int v14 = 8 * v7;
  uint64_t v15 = 2;
  uint64_t v16 = 3;
  uint64_t v17 = 4;
  if ((8 * v7) >> 28) {
    uint64_t v17 = 5;
  }
  if (v14 >= 0x200000) {
    uint64_t v16 = v17;
  }
  if ((8 * v7) >> 14) {
    uint64_t v15 = v16;
  }
  if (v14 >= 0x80) {
    uint64_t v18 = v15;
  }
  else {
    uint64_t v18 = 1;
  }
  BOOL v19 = __OFADD__(*v4, v18);
  uint64_t v20 = *v4 + v18;
  if (v19) {
    goto LABEL_39;
  }
  uint64_t v31 = v4;
  uint64_t v32 = v5;
  *uint64_t v4 = v20;
  uint64_t v21 = swift_bridgeObjectRetain();
  if (MEMORY[0x1CB773090](v21, a3))
  {
    uint64_t v22 = 0;
    unint64_t v23 = 0;
    uint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t))(v37 + 40);
    uint64_t v35 = v37 + 40;
    uint64_t v36 = (void (**)(char *, uint64_t *, uint64_t))(v9 + 16);
    while (1)
    {
      char v24 = sub_1C8D88510();
      sub_1C8D884D0();
      if (v24)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v12, a1+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v22, a3);
        uint64_t v25 = v22 + 1;
        if (__OFADD__(v22, 1)) {
          goto LABEL_32;
        }
      }
      else
      {
        uint64_t result = sub_1C8D886B0();
        if (v33 != 8) {
          goto LABEL_42;
        }
        uint64_t v38 = result;
        (*v36)(v12, &v38, a3);
        swift_unknownObjectRelease();
        uint64_t v25 = v22 + 1;
        if (__OFADD__(v22, 1))
        {
LABEL_32:
          __break(1u);
          goto LABEL_33;
        }
      }
      unsigned int v26 = v34(a3, v37);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, a3);
      uint64_t v27 = 4;
      if (v26 >> 28) {
        uint64_t v27 = 5;
      }
      if (v26 < 0x200000) {
        uint64_t v27 = 3;
      }
      if (v26 < 0x4000) {
        uint64_t v27 = 2;
      }
      if (v26 <= 0x7F) {
        uint64_t v27 = 1;
      }
      if ((v26 & 0x80000000) != 0) {
        uint64_t v27 = 10;
      }
      BOOL v19 = __OFADD__(v23, v27);
      v23 += v27;
      if (v19) {
        break;
      }
      ++v22;
      if (v25 == MEMORY[0x1CB773090](a1, a3)) {
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
LABEL_33:
  unint64_t v23 = 0;
LABEL_34:
  swift_bridgeObjectRelease();
  uint64_t result = sub_1C8CA7C20(v23);
  unint64_t v28 = result + v23;
  if (!__OFADD__(result, v23))
  {
    BOOL v19 = __OFADD__(*v31, v28);
    unint64_t v29 = *v31 + v28;
    if (!v19)
    {
      *uint64_t v31 = v29;
      return result;
    }
    goto LABEL_41;
  }
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1C8D1643C(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  unsigned int v5 = 8 * a2;
  uint64_t v6 = 4;
  uint64_t v7 = 6;
  uint64_t v8 = 10;
  if (!((8 * a2) >> 28)) {
    uint64_t v8 = 8;
  }
  if (v5 >= 0x200000) {
    uint64_t v7 = v8;
  }
  if ((8 * a2) >> 14) {
    uint64_t v6 = v7;
  }
  if (v5 >= 0x80) {
    uint64_t v9 = v6;
  }
  else {
    uint64_t v9 = 2;
  }
  BOOL v10 = __OFADD__(*v4, v9);
  uint64_t v11 = *v4 + v9;
  if (v10)
  {
    __break(1u);
  }
  else
  {
    *uint64_t v4 = v11;
    return (*(uint64_t (**)(void *, ValueMetadata *, _UNKNOWN **, uint64_t))(a4 + 72))(v4, &type metadata for BinaryEncodingSizeVisitor, &off_1F2354500, a3);
  }
  return result;
}

uint64_t sub_1C8D164E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v37 = a4;
  uint64_t v8 = *(void *)(a3 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = MEMORY[0x1F4188790](a1, a2);
  uint64_t v11 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v10, v12);
  uint64_t v38 = (char *)&v31 - v15;
  unsigned int v17 = 8 * v16;
  uint64_t v18 = 2;
  uint64_t v19 = 3;
  uint64_t v20 = 4;
  if ((8 * v16) >> 28) {
    uint64_t v20 = 5;
  }
  if (v17 >= 0x200000) {
    uint64_t v19 = v20;
  }
  if (v17 >> 14) {
    uint64_t v18 = v19;
  }
  if (v17 >= 0x80) {
    uint64_t v21 = v18;
  }
  else {
    uint64_t v21 = 1;
  }
  uint64_t result = MEMORY[0x1CB773070](v13, v14);
  if (result + 0x4000000000000000 < 0)
  {
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v23 = 2 * result * v21;
  if ((unsigned __int128)(2 * result * (__int128)v21) >> 64 != v23 >> 63)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    return result;
  }
  BOOL v24 = __OFADD__(*v4, v23);
  uint64_t v25 = *v4 + v23;
  if (v24) {
    goto LABEL_27;
  }
  *uint64_t v4 = v25;
  uint64_t v26 = swift_bridgeObjectRetain();
  if (!MEMORY[0x1CB773090](v26, a3)) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v31 = v9;
  uint64_t v27 = 0;
  unint64_t v28 = *(void (**)(void *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v37 + 72);
  uint64_t v34 = v37 + 72;
  uint64_t v35 = v4;
  uint64_t v36 = (void (**)(char *, uint64_t *, uint64_t))(v8 + 16);
  uint64_t v32 = (void (**)(char *, char *, uint64_t))(v8 + 32);
  uint64_t v33 = v28;
  while (1)
  {
    char v29 = sub_1C8D88510();
    sub_1C8D884D0();
    if ((v29 & 1) == 0) {
      break;
    }
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v38, a1+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v27, a3);
    uint64_t v30 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      goto LABEL_23;
    }
LABEL_17:
    (*v32)(v11, v38, a3);
    v33(v35, &type metadata for BinaryEncodingSizeVisitor, &off_1F2354500, a3, v37);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, a3);
    if (!v5)
    {
      ++v27;
      if (v30 != MEMORY[0x1CB773090](a1, a3)) {
        continue;
      }
    }
    return swift_bridgeObjectRelease();
  }
  uint64_t result = sub_1C8D886B0();
  if (v31 != 8) {
    goto LABEL_28;
  }
  uint64_t v39 = result;
  (*v36)(v38, &v39, a3);
  swift_unknownObjectRelease();
  uint64_t v30 = v27 + 1;
  if (!__OFADD__(v27, 1)) {
    goto LABEL_17;
  }
LABEL_23:
  __break(1u);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C8D167E0(unint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v65 = a1;
  uint64_t v88 = *(void *)(a6 + 8);
  uint64_t v76 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v72 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness, v10);
  uint64_t v87 = (char *)&v62 - v11;
  uint64_t v89 = *(void *)(a5 + 8);
  uint64_t v83 = a3;
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v71 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12, v12);
  uint64_t v91 = (char *)&v62 - v13;
  uint64_t v93 = v14;
  uint64_t v94 = AssociatedTypeWitness;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v86 = sub_1C8D88620();
  uint64_t v16 = *(void *)(v86 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v86, v17);
  uint64_t v20 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18, v21);
  uint64_t v23 = (char *)&v62 - v22;
  unsigned int v24 = 8 * a2;
  if ((8 * a2) >= 0x80)
  {
    unint64_t v25 = v65;
    if (v24 >= 0x4000)
    {
      if (v24 >= 0x200000)
      {
        BOOL v31 = v24 >> 28 == 0;
        uint64_t v30 = 4;
        if (!v31) {
          uint64_t v30 = 5;
        }
      }
      else
      {
        uint64_t v30 = 3;
      }
    }
    else
    {
      uint64_t v30 = 2;
    }
    uint64_t v63 = v30;
    if ((v65 & 0xC000000000000001) != 0) {
      goto LABEL_3;
    }
LABEL_11:
    uint64_t v32 = -1 << *(unsigned char *)(v25 + 32);
    uint64_t v27 = ~v32;
    uint64_t v33 = *(void *)(v25 + 64);
    unint64_t v66 = v25 + 64;
    uint64_t v34 = -v32;
    if (v34 < 64) {
      uint64_t v35 = ~(-1 << v34);
    }
    else {
      uint64_t v35 = -1;
    }
    unint64_t v28 = v35 & v33;
    unint64_t v29 = v25;
    goto LABEL_15;
  }
  uint64_t v63 = 1;
  unint64_t v25 = v65;
  if ((v65 & 0xC000000000000001) == 0) {
    goto LABEL_11;
  }
LABEL_3:
  uint64_t v26 = sub_1C8D88730();
  unint64_t v66 = 0;
  uint64_t v27 = 0;
  unint64_t v28 = 0;
  unint64_t v29 = v26 | 0x8000000000000000;
LABEL_15:
  uint64_t v68 = v29 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v85 = TupleTypeMetadata2 - 8;
  uint64_t v64 = v27;
  uint64_t v70 = v71 + 16;
  uint64_t v69 = v72 + 16;
  unint64_t v84 = (void (**)(char *, char *, uint64_t))(v16 + 32);
  char v81 = (void (**)(char *, char *, uint64_t))(v71 + 32);
  char v80 = (void (**)(char *, char *, uint64_t))(v72 + 32);
  uint64_t v79 = v89 + 48;
  uint64_t v75 = v88 + 48;
  char v78 = (void (**)(char *, uint64_t))(v72 + 8);
  char v82 = (void (**)(char *, uint64_t))(v71 + 8);
  int64_t v67 = (unint64_t)(v27 + 64) >> 6;
  int64_t v62 = v67 - 1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v37 = 0;
  if ((v29 & 0x8000000000000000) != 0) {
    goto LABEL_19;
  }
LABEL_16:
  if (v28)
  {
    uint64_t v38 = (v28 - 1) & v28;
    unint64_t v39 = __clz(__rbit64(v28)) | (v37 << 6);
    int64_t v40 = v37;
LABEL_18:
    (*(void (**)(char *, unint64_t, uint64_t))(v71 + 16))(v20, *(void *)(v29 + 48) + *(void *)(v71 + 72) * v39, v93);
    (*(void (**)(char *, unint64_t, uint64_t))(v72 + 16))(&v20[*(int *)(TupleTypeMetadata2 + 48)], *(void *)(v29 + 56) + *(void *)(v72 + 72) * v39, v94);
    uint64_t v41 = 0;
    goto LABEL_28;
  }
  int64_t v40 = v37 + 1;
  if (__OFADD__(v37, 1))
  {
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  if (v40 >= v67)
  {
    uint64_t v38 = 0;
    uint64_t v41 = 1;
    int64_t v40 = v37;
    goto LABEL_28;
  }
  unint64_t v42 = *(void *)(v66 + 8 * v40);
  if (v42)
  {
LABEL_24:
    uint64_t v38 = (v42 - 1) & v42;
    unint64_t v39 = __clz(__rbit64(v42)) + (v40 << 6);
    goto LABEL_18;
  }
  if (v37 + 2 >= v67)
  {
    uint64_t v38 = 0;
    uint64_t v41 = 1;
    goto LABEL_28;
  }
  unint64_t v42 = *(void *)(v66 + 8 * (v37 + 2));
  if (v42)
  {
    int64_t v40 = v37 + 2;
    goto LABEL_24;
  }
  int64_t v59 = v37 + 3;
  if (v37 + 3 >= v67)
  {
    uint64_t v38 = 0;
    uint64_t v41 = 1;
    int64_t v40 = v37 + 2;
    goto LABEL_28;
  }
  unint64_t v42 = *(void *)(v66 + 8 * v59);
  if (v42)
  {
    int64_t v40 = v37 + 3;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v40 = v59 + 1;
    if (__OFADD__(v59, 1)) {
      goto LABEL_75;
    }
    if (v40 >= v67) {
      break;
    }
    unint64_t v42 = *(void *)(v66 + 8 * v40);
    ++v59;
    if (v42) {
      goto LABEL_24;
    }
  }
  uint64_t v38 = 0;
  uint64_t v41 = 1;
  int64_t v40 = v62;
LABEL_28:
  while (1)
  {
    uint64_t v43 = *(void *)(TupleTypeMetadata2 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v43 + 56))(v20, v41, 1, TupleTypeMetadata2);
    (*v84)(v23, v20, v86);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v23, 1, TupleTypeMetadata2) == 1) {
      break;
    }
    unint64_t v90 = v38;
    int64_t v44 = v40;
    int64_t v73 = v37;
    unint64_t v74 = v28;
    unint64_t v45 = v29;
    uint64_t v46 = v20;
    int v47 = &v23[*(int *)(TupleTypeMetadata2 + 48)];
    char v48 = v91;
    (*v81)(v91, v23, v93);
    uint64_t v49 = v87;
    (*v80)(v87, v47, v94);
    unint64_t v95 = 0;
    uint64_t v50 = v92;
    (*(void (**)(char *, uint64_t, unint64_t *, ValueMetadata *, _UNKNOWN **))(v89 + 48))(v48, 1, &v95, &type metadata for BinaryEncodingSizeVisitor, &off_1F2354500);
    if (v50)
    {
      uint64_t v92 = v50;
      (*v78)(v87, v94);
      (*v82)(v91, v93);
      return sub_1C8D18798();
    }
    (*(void (**)(char *, uint64_t, unint64_t *, ValueMetadata *, _UNKNOWN **))(v88 + 48))(v49, 2, &v95, &type metadata for BinaryEncodingSizeVisitor, &off_1F2354500);
    char v51 = *v78;
    uint64_t v92 = 0;
    unint64_t v52 = v95;
    v51(v49, v94);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))*v82)(v91, v93);
    if (v52 < 0x80)
    {
      uint64_t v53 = 1;
      unint64_t v54 = v77;
      uint64_t v20 = v46;
LABEL_39:
      unint64_t v29 = v45;
      goto LABEL_40;
    }
    unint64_t v54 = v77;
    uint64_t v20 = v46;
    if ((v52 & 0x8000000000000000) != 0)
    {
      uint64_t v53 = 10;
      goto LABEL_39;
    }
    if (v52 >> 35)
    {
      unint64_t v29 = v45;
      if (v52 >> 49)
      {
        unint64_t v58 = v52 >> 28;
        uint64_t v53 = 8;
LABEL_49:
        if (!(v58 >> 28)) {
          goto LABEL_40;
        }
        goto LABEL_50;
      }
      uint64_t v53 = 6;
      if (!(v52 >> 42)) {
        goto LABEL_40;
      }
    }
    else
    {
      unint64_t v29 = v45;
      if (v52 >= 0x200000)
      {
        uint64_t v53 = 4;
        unint64_t v58 = v52;
        goto LABEL_49;
      }
      uint64_t v53 = 2;
      if (v52 < 0x4000) {
        goto LABEL_40;
      }
    }
LABEL_50:
    ++v53;
LABEL_40:
    BOOL v55 = __OFADD__(v53, v52);
    unint64_t v56 = v53 + v52;
    if (v55)
    {
      __break(1u);
LABEL_71:
      __break(1u);
      goto LABEL_72;
    }
    BOOL v55 = __OFADD__(*v54, v56);
    unint64_t v57 = *v54 + v56;
    if (v55) {
      goto LABEL_71;
    }
    *unint64_t v54 = v57;
    int64_t v37 = v44;
    unint64_t v28 = v90;
    if ((v29 & 0x8000000000000000) == 0) {
      goto LABEL_16;
    }
LABEL_19:
    if (sub_1C8D88740())
    {
      sub_1C8D887B0();
      swift_unknownObjectRelease();
      sub_1C8D887B0();
      swift_unknownObjectRelease();
      uint64_t v41 = 0;
    }
    else
    {
      uint64_t v41 = 1;
    }
    int64_t v40 = v37;
    uint64_t v38 = v28;
  }
  sub_1C8D18798();
  swift_getAssociatedConformanceWitness();
  uint64_t result = sub_1C8D88280();
  uint64_t v60 = result * v63;
  if ((unsigned __int128)(result * (__int128)v63) >> 64 != (result * v63) >> 63) {
    goto LABEL_73;
  }
  BOOL v55 = __OFADD__(*v77, v60);
  uint64_t v61 = *v77 + v60;
  if (!v55)
  {
    void *v77 = v61;
    return result;
  }
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
  return result;
}

uint64_t sub_1C8D17144(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = v7;
  uint64_t v77 = a6;
  int v10 = a2;
  unint64_t v68 = a1;
  uint64_t v76 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](a1, a2);
  uint64_t v83 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = *(void *)(v12 + 8);
  uint64_t v86 = v13;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v75 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness, v15);
  uint64_t v17 = (char *)&v65 - v16;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v89 = sub_1C8D88620();
  uint64_t v19 = *(void *)(v89 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v89, v20);
  uint64_t v91 = (char *)&v65 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21, v23);
  unint64_t v90 = (char *)&v65 - v24;
  unsigned int v25 = 8 * v10;
  if ((8 * v10) >= 0x80)
  {
    unint64_t v26 = v68;
    if (v25 >= 0x4000)
    {
      if (v25 >= 0x200000)
      {
        BOOL v28 = v25 >> 28 == 0;
        uint64_t v27 = 4;
        if (!v28) {
          uint64_t v27 = 5;
        }
      }
      else
      {
        uint64_t v27 = 3;
      }
    }
    else
    {
      uint64_t v27 = 2;
    }
    uint64_t v66 = v27;
  }
  else
  {
    uint64_t v66 = 1;
    unint64_t v26 = v68;
  }
  uint64_t v94 = a4;
  unint64_t v84 = v6;
  if ((v26 & 0xC000000000000001) != 0)
  {
    uint64_t v29 = sub_1C8D88730();
    unint64_t v69 = 0;
    uint64_t v30 = 0;
    unint64_t v31 = 0;
    unint64_t v32 = v29 | 0x8000000000000000;
  }
  else
  {
    uint64_t v33 = -1 << *(unsigned char *)(v26 + 32);
    uint64_t v30 = ~v33;
    uint64_t v34 = *(void *)(v26 + 64);
    unint64_t v69 = v26 + 64;
    uint64_t v35 = -v33;
    if (v35 < 64) {
      uint64_t v36 = ~(-1 << v35);
    }
    else {
      uint64_t v36 = -1;
    }
    unint64_t v31 = v36 & v34;
    unint64_t v32 = v26;
  }
  int64_t v37 = v17;
  uint64_t v71 = v32 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v88 = TupleTypeMetadata2 - 8;
  uint64_t v67 = v30;
  uint64_t v74 = v75 + 16;
  uint64_t v73 = v76 + 16;
  uint64_t v87 = (void (**)(char *, char *, uint64_t))(v19 + 32);
  char v82 = (void (**)(char *, char *, uint64_t))(v75 + 32);
  char v81 = (void (**)(char *, char *, uint64_t))(v76 + 32);
  char v78 = (void (**)(uint64_t, uint64_t))(v76 + 8);
  uint64_t v79 = (void (**)(char *, uint64_t))(v75 + 8);
  uint64_t v80 = v92 + 48;
  int64_t v70 = (unint64_t)(v30 + 64) >> 6;
  int64_t v65 = v70 - 1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v39 = 0;
  uint64_t v41 = v90;
  int64_t v40 = v91;
  unint64_t v85 = v32;
  uint64_t v72 = TupleTypeMetadata2;
  int64_t v93 = 0;
  if ((v32 & 0x8000000000000000) != 0) {
    goto LABEL_20;
  }
LABEL_17:
  if (v31)
  {
    unint64_t v42 = v37;
    uint64_t v95 = (v31 - 1) & v31;
    unint64_t v43 = __clz(__rbit64(v31)) | (v39 << 6);
    int64_t v44 = v39;
LABEL_19:
    (*(void (**)(char *, unint64_t, uint64_t))(v75 + 16))(v40, *(void *)(v32 + 48) + *(void *)(v75 + 72) * v43, AssociatedTypeWitness);
    unint64_t v45 = *(void *)(v32 + 56) + *(void *)(v76 + 72) * v43;
    uint64_t v46 = v72;
    (*(void (**)(char *, unint64_t, uint64_t))(v76 + 16))(&v40[*(int *)(v72 + 48)], v45, v94);
    uint64_t v47 = 0;
    int64_t v37 = v42;
    TupleTypeMetadata2 = v46;
    goto LABEL_29;
  }
  int64_t v44 = v39 + 1;
  if (__OFADD__(v39, 1))
  {
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  if (v44 >= v70)
  {
    uint64_t v95 = 0;
    uint64_t v47 = 1;
    int64_t v44 = v39;
    goto LABEL_29;
  }
  unint64_t v48 = *(void *)(v69 + 8 * v44);
  if (v48)
  {
LABEL_25:
    unint64_t v42 = v37;
    uint64_t v95 = (v48 - 1) & v48;
    unint64_t v43 = __clz(__rbit64(v48)) + (v44 << 6);
    goto LABEL_19;
  }
  if (v39 + 2 >= v70)
  {
    uint64_t v95 = 0;
    uint64_t v47 = 1;
    goto LABEL_29;
  }
  unint64_t v48 = *(void *)(v69 + 8 * (v39 + 2));
  if (v48)
  {
    int64_t v44 = v39 + 2;
    goto LABEL_25;
  }
  int64_t v62 = v39 + 3;
  if (v39 + 3 >= v70)
  {
    uint64_t v95 = 0;
    uint64_t v47 = 1;
    int64_t v44 = v39 + 2;
    goto LABEL_29;
  }
  unint64_t v48 = *(void *)(v69 + 8 * v62);
  if (v48)
  {
    int64_t v44 = v39 + 3;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v44 = v62 + 1;
    if (__OFADD__(v62, 1)) {
      goto LABEL_72;
    }
    if (v44 >= v70) {
      break;
    }
    unint64_t v48 = *(void *)(v69 + 8 * v44);
    ++v62;
    if (v48) {
      goto LABEL_25;
    }
  }
  uint64_t v95 = 0;
  uint64_t v47 = 1;
  int64_t v44 = v65;
LABEL_29:
  while (1)
  {
    uint64_t v49 = *(void *)(TupleTypeMetadata2 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v49 + 56))(v40, v47, 1, TupleTypeMetadata2);
    (*v87)(v41, v40, v89);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v41, 1, TupleTypeMetadata2) == 1) {
      break;
    }
    uint64_t v50 = &v41[*(int *)(TupleTypeMetadata2 + 48)];
    (*v82)(v37, v41, AssociatedTypeWitness);
    char v51 = v37;
    uint64_t v52 = (uint64_t)v83;
    uint64_t v53 = AssociatedTypeWitness;
    uint64_t v54 = v94;
    (*v81)(v83, v50, v94);
    unint64_t v96 = 0;
    (*(void (**)(char *, uint64_t, unint64_t *, ValueMetadata *, _UNKNOWN **))(v92 + 48))(v51, 1, &v96, &type metadata for BinaryEncodingSizeVisitor, &off_1F2354500);
    if (v8)
    {
      (*v78)(v52, v54);
      (*v79)(v51, v53);
      return sub_1C8D18798();
    }
    sub_1C8CAAEA0(v52, 2, v54, v77);
    uint64_t v8 = 0;
    unint64_t v55 = v96;
    (*v78)(v52, v54);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))*v79)(v51, v53);
    uint64_t AssociatedTypeWitness = v53;
    int64_t v37 = v51;
    if (v55 < 0x80)
    {
      uint64_t v56 = 1;
      unint64_t v57 = v84;
      unint64_t v32 = v85;
      uint64_t v41 = v90;
      int64_t v40 = v91;
      goto LABEL_46;
    }
    unint64_t v57 = v84;
    unint64_t v32 = v85;
    uint64_t v41 = v90;
    int64_t v40 = v91;
    if ((v55 & 0x8000000000000000) != 0)
    {
      uint64_t v56 = 10;
      goto LABEL_46;
    }
    if (v55 >> 35)
    {
      if (v55 >> 49)
      {
        unint64_t v58 = v55 >> 28;
        uint64_t v56 = 8;
LABEL_44:
        if (!(v58 >> 28)) {
          goto LABEL_46;
        }
LABEL_45:
        ++v56;
        goto LABEL_46;
      }
      uint64_t v56 = 6;
      if (v55 >> 42) {
        goto LABEL_45;
      }
    }
    else
    {
      if (v55 >= 0x200000)
      {
        uint64_t v56 = 4;
        unint64_t v58 = v55;
        goto LABEL_44;
      }
      uint64_t v56 = 2;
      if (v55 >= 0x4000) {
        goto LABEL_45;
      }
    }
LABEL_46:
    BOOL v59 = __OFADD__(v56, v55);
    unint64_t v60 = v56 + v55;
    if (v59)
    {
      __break(1u);
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
    BOOL v59 = __OFADD__(*v57, v60);
    unint64_t v61 = *v57 + v60;
    if (v59) {
      goto LABEL_68;
    }
    *unint64_t v57 = v61;
    int64_t v39 = v44;
    unint64_t v31 = v95;
    int64_t v93 = v44;
    if ((v32 & 0x8000000000000000) == 0) {
      goto LABEL_17;
    }
LABEL_20:
    if (sub_1C8D88740())
    {
      sub_1C8D887B0();
      swift_unknownObjectRelease();
      sub_1C8D887B0();
      swift_unknownObjectRelease();
      uint64_t v47 = 0;
    }
    else
    {
      uint64_t v47 = 1;
    }
    int64_t v44 = v93;
    uint64_t v95 = v31;
  }
  sub_1C8D18798();
  swift_getAssociatedConformanceWitness();
  uint64_t result = sub_1C8D88280();
  uint64_t v63 = result * v66;
  if ((unsigned __int128)(result * (__int128)v66) >> 64 != (result * v66) >> 63) {
    goto LABEL_70;
  }
  BOOL v59 = __OFADD__(*v84, v63);
  uint64_t v64 = *v84 + v63;
  if (!v59)
  {
    *unint64_t v84 = v64;
    return result;
  }
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
  return result;
}

uint64_t sub_1C8D17A6C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v73 = a6;
  int v7 = a2;
  unint64_t v64 = a1;
  uint64_t v71 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](a1, a2);
  uint64_t v86 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = *(void *)(v9 + 8);
  uint64_t v80 = v10;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v70 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness, v12);
  uint64_t v91 = (char *)&v61 - v13;
  uint64_t v88 = a4;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v83 = sub_1C8D88620();
  uint64_t v14 = *(void *)(v83 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v83, v15);
  uint64_t v18 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16, v19);
  unint64_t v84 = (char *)&v61 - v20;
  unsigned int v21 = 8 * v7;
  if ((8 * v7) >= 0x80)
  {
    unint64_t v22 = v64;
    uint64_t v23 = v84;
    if (v21 >= 0x4000)
    {
      if (v21 >= 0x200000)
      {
        BOOL v29 = v21 >> 28 == 0;
        uint64_t v28 = 4;
        if (!v29) {
          uint64_t v28 = 5;
        }
      }
      else
      {
        uint64_t v28 = 3;
      }
    }
    else
    {
      uint64_t v28 = 2;
    }
    uint64_t v62 = v28;
    if ((v64 & 0xC000000000000001) != 0) {
      goto LABEL_3;
    }
LABEL_11:
    uint64_t v30 = -1 << *(unsigned char *)(v22 + 32);
    uint64_t v25 = ~v30;
    uint64_t v31 = *(void *)(v22 + 64);
    unint64_t v65 = v22 + 64;
    uint64_t v32 = -v30;
    if (v32 < 64) {
      uint64_t v33 = ~(-1 << v32);
    }
    else {
      uint64_t v33 = -1;
    }
    unint64_t v26 = v33 & v31;
    unint64_t v27 = v22;
    goto LABEL_15;
  }
  uint64_t v62 = 1;
  unint64_t v22 = v64;
  uint64_t v23 = v84;
  if ((v64 & 0xC000000000000001) == 0) {
    goto LABEL_11;
  }
LABEL_3:
  uint64_t v24 = sub_1C8D88730();
  unint64_t v65 = 0;
  uint64_t v25 = 0;
  unint64_t v26 = 0;
  unint64_t v27 = v24 | 0x8000000000000000;
LABEL_15:
  uint64_t v67 = v27 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v82 = TupleTypeMetadata2 - 8;
  uint64_t v63 = v25;
  uint64_t v69 = v70 + 16;
  uint64_t v68 = v71 + 16;
  char v81 = (void (**)(char *, char *, uint64_t))(v14 + 32);
  char v78 = (void (**)(char *, char *, uint64_t))(v70 + 32);
  uint64_t v77 = (void (**)(char *, char *, uint64_t))(v71 + 32);
  uint64_t v75 = (void (**)(char *, uint64_t))(v71 + 8);
  uint64_t v76 = v87 + 48;
  uint64_t v79 = (void (**)(char *, uint64_t))(v70 + 8);
  int64_t v66 = (unint64_t)(v25 + 64) >> 6;
  int64_t v61 = v66 - 1;
  uint64_t v34 = TupleTypeMetadata2;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v36 = 0;
  if ((v27 & 0x8000000000000000) != 0) {
    goto LABEL_19;
  }
LABEL_16:
  if (v26)
  {
    uint64_t v89 = (v26 - 1) & v26;
    unint64_t v37 = __clz(__rbit64(v26)) | (v36 << 6);
    int64_t v38 = v36;
LABEL_18:
    (*(void (**)(char *, unint64_t, uint64_t))(v70 + 16))(v18, *(void *)(v27 + 48) + *(void *)(v70 + 72) * v37, AssociatedTypeWitness);
    (*(void (**)(char *, unint64_t, uint64_t))(v71 + 16))(&v18[*(int *)(v34 + 48)], *(void *)(v27 + 56) + *(void *)(v71 + 72) * v37, v88);
    uint64_t v39 = 0;
    goto LABEL_28;
  }
  int64_t v38 = v36 + 1;
  if (__OFADD__(v36, 1))
  {
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  if (v38 >= v66)
  {
    uint64_t v89 = 0;
    uint64_t v39 = 1;
    int64_t v38 = v36;
    goto LABEL_28;
  }
  unint64_t v40 = *(void *)(v65 + 8 * v38);
  if (v40)
  {
LABEL_24:
    uint64_t v89 = (v40 - 1) & v40;
    unint64_t v37 = __clz(__rbit64(v40)) + (v38 << 6);
    goto LABEL_18;
  }
  if (v36 + 2 >= v66)
  {
    uint64_t v89 = 0;
    uint64_t v39 = 1;
    goto LABEL_28;
  }
  unint64_t v40 = *(void *)(v65 + 8 * (v36 + 2));
  if (v40)
  {
    int64_t v38 = v36 + 2;
    goto LABEL_24;
  }
  int64_t v58 = v36 + 3;
  if (v36 + 3 >= v66)
  {
    uint64_t v89 = 0;
    uint64_t v39 = 1;
    int64_t v38 = v36 + 2;
    goto LABEL_28;
  }
  unint64_t v40 = *(void *)(v65 + 8 * v58);
  if (v40)
  {
    int64_t v38 = v36 + 3;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v38 = v58 + 1;
    if (__OFADD__(v58, 1)) {
      goto LABEL_71;
    }
    if (v38 >= v66) {
      break;
    }
    unint64_t v40 = *(void *)(v65 + 8 * v38);
    ++v58;
    if (v40) {
      goto LABEL_24;
    }
  }
  uint64_t v89 = 0;
  uint64_t v39 = 1;
  int64_t v38 = v61;
LABEL_28:
  while (1)
  {
    uint64_t v41 = *(void *)(v34 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56))(v18, v39, 1, v34);
    (*v81)(v23, v18, v83);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v23, 1, v34) == 1) {
      break;
    }
    unint64_t v72 = v26;
    unint64_t v42 = v27;
    unint64_t v43 = v18;
    int64_t v44 = &v23[*(int *)(v34 + 48)];
    unint64_t v45 = v91;
    uint64_t v46 = AssociatedTypeWitness;
    (*v78)(v91, v23, AssociatedTypeWitness);
    uint64_t v47 = (uint64_t)v86;
    uint64_t v48 = v88;
    (*v77)(v86, v44, v88);
    unint64_t v92 = 0;
    uint64_t v49 = v90;
    (*(void (**)(char *, uint64_t, unint64_t *, ValueMetadata *, _UNKNOWN **))(v87 + 48))(v45, 1, &v92, &type metadata for BinaryEncodingSizeVisitor, &off_1F2354500);
    if (v49)
    {
      (*v75)(v86, v88);
      (*v79)(v91, v46);
      return sub_1C8D18798();
    }
    sub_1C8CAAB80(v47, 2, v48, v73);
    uint64_t v50 = *v75;
    uint64_t v90 = 0;
    unint64_t v51 = v92;
    v50((char *)v47, v48);
    uint64_t AssociatedTypeWitness = v46;
    uint64_t result = ((uint64_t (*)(char *, uint64_t))*v79)(v91, v46);
    if (v51 < 0x80)
    {
      uint64_t v52 = 1;
      uint64_t v53 = v74;
      uint64_t v18 = v43;
      uint64_t v23 = v84;
      uint64_t v34 = TupleTypeMetadata2;
      unint64_t v27 = v42;
      goto LABEL_45;
    }
    uint64_t v53 = v74;
    uint64_t v18 = v43;
    uint64_t v23 = v84;
    uint64_t v34 = TupleTypeMetadata2;
    if ((v51 & 0x8000000000000000) != 0)
    {
      uint64_t v52 = 10;
      unint64_t v27 = v42;
      goto LABEL_45;
    }
    unint64_t v27 = v42;
    if (v51 >> 35)
    {
      if (v51 >> 49)
      {
        unint64_t v54 = v51 >> 28;
        uint64_t v52 = 8;
LABEL_43:
        if (!(v54 >> 28)) {
          goto LABEL_45;
        }
LABEL_44:
        ++v52;
        goto LABEL_45;
      }
      uint64_t v52 = 6;
      if (v51 >> 42) {
        goto LABEL_44;
      }
    }
    else
    {
      if (v51 >= 0x200000)
      {
        uint64_t v52 = 4;
        unint64_t v54 = v51;
        goto LABEL_43;
      }
      uint64_t v52 = 2;
      if (v51 >= 0x4000) {
        goto LABEL_44;
      }
    }
LABEL_45:
    BOOL v55 = __OFADD__(v52, v51);
    unint64_t v56 = v52 + v51;
    if (v55)
    {
      __break(1u);
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    BOOL v55 = __OFADD__(*v53, v56);
    unint64_t v57 = *v53 + v56;
    if (v55) {
      goto LABEL_67;
    }
    *uint64_t v53 = v57;
    int64_t v36 = v38;
    unint64_t v26 = v89;
    if ((v27 & 0x8000000000000000) == 0) {
      goto LABEL_16;
    }
LABEL_19:
    int64_t v38 = v36;
    if (sub_1C8D88740())
    {
      sub_1C8D887B0();
      swift_unknownObjectRelease();
      sub_1C8D887B0();
      swift_unknownObjectRelease();
      uint64_t v39 = 0;
    }
    else
    {
      uint64_t v39 = 1;
    }
    uint64_t v89 = v26;
  }
  sub_1C8D18798();
  swift_getAssociatedConformanceWitness();
  uint64_t result = sub_1C8D88280();
  uint64_t v59 = result * v62;
  if ((unsigned __int128)(result * (__int128)v62) >> 64 != (result * v62) >> 63) {
    goto LABEL_69;
  }
  BOOL v55 = __OFADD__(*v74, v59);
  uint64_t v60 = *v74 + v59;
  if (!v55)
  {
    *uint64_t v74 = v60;
    return result;
  }
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
  return result;
}

uint64_t sub_1C8D18390(uint64_t a1)
{
  return sub_1C8D18744(a1);
}

uint64_t sub_1C8D183A8(uint64_t a1, int a2)
{
  return sub_1C8D153F8(a1, a2);
}

uint64_t sub_1C8D183C0(uint64_t a1, int a2)
{
  return sub_1C8D15490(a1, a2);
}

uint64_t sub_1C8D183D8(uint64_t a1, uint64_t a2)
{
  return sub_1C8D18744(a2);
}

uint64_t sub_1C8D183F4(uint64_t a1, uint64_t a2)
{
  return sub_1C8CAAA54(a2);
}

uint64_t sub_1C8D18410(uint64_t a1, unint64_t a2, int a3)
{
  return sub_1C8D15560(a1, a2, a3);
}

uint64_t sub_1C8D18428(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8D1643C(a1, a2, a3, a4);
}

uint64_t sub_1C8D18440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8D15E20(a1, a2, a3, a4);
}

uint64_t sub_1C8D18458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8D164E4(a1, a2, a3, a4);
}

uint64_t sub_1C8D18470(uint64_t a1, int a2)
{
  return sub_1C8D15C20(a1, a2);
}

uint64_t sub_1C8D18488(uint64_t a1, int a2)
{
  return sub_1C8D15CD0(a1, a2);
}

uint64_t sub_1C8D184A0(uint64_t a1, int a2)
{
  return sub_1C8D15664(a1, a2);
}

uint64_t sub_1C8D184B8(uint64_t a1, int a2)
{
  return sub_1C8D15784(a1, a2);
}

uint64_t sub_1C8D184D0(uint64_t a1, int a2)
{
  return sub_1C8D15B18(a1, a2);
}

uint64_t sub_1C8D184E8(uint64_t a1, int a2)
{
  return sub_1C8D158C0(a1, a2);
}

uint64_t sub_1C8D18500(uint64_t a1, int a2)
{
  return sub_1C8D159D4(a1, a2);
}

uint64_t sub_1C8D18518(uint64_t a1, int a2)
{
  return sub_1C8D15D80(a1, a2);
}

uint64_t sub_1C8D18530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8D16104(a1, a2, a3, a4);
}

uint64_t sub_1C8D18548(unint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1C8D167E0(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1C8D18560(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1C8D17144(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1C8D18578(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1C8D17A6C(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1C8D18590(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *a1;
  uint64_t v7 = 0;
  uint64_t result = sub_1C8D3D6E4((uint64_t)&v7, a2, a3, v5);
  if (!v4)
  {
    if (__OFADD__(*v3, v7)) {
      __break(1u);
    }
    else {
      *v3 += v7;
    }
  }
  return result;
}

uint64_t sub_1C8D185D8(uint64_t result, unint64_t a2)
{
  uint64_t v3 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v3) = HIDWORD(result) - result;
      if (__OFSUB__(HIDWORD(result), result)) {
        goto LABEL_9;
      }
      uint64_t v3 = (int)v3;
LABEL_6:
      BOOL v6 = __OFADD__(*v2, v3);
      uint64_t v7 = *v2 + v3;
      if (v6)
      {
        __break(1u);
LABEL_9:
        __break(1u);
LABEL_10:
        __break(1u);
        JUMPOUT(0x1C8D18648);
      }
      *uint64_t v2 = v7;
      return result;
    case 2uLL:
      uint64_t v5 = *(void *)(result + 16);
      uint64_t v4 = *(void *)(result + 24);
      BOOL v6 = __OFSUB__(v4, v5);
      uint64_t v3 = v4 - v5;
      if (!v6) {
        goto LABEL_6;
      }
      goto LABEL_10;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v3 = BYTE6(a2);
      goto LABEL_6;
  }
}

unint64_t sub_1C8D18658(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (a2 > 0x7FFFFFFF)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  BOOL v6 = v4;
  uint64_t result = sub_1C8CA7B64(a2);
  unint64_t v9 = result + 4;
  if (__OFADD__(result, 4))
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t result = sub_1C8CA7A1C(a3, a4);
  if (v5) {
    return result;
  }
  unint64_t v10 = result;
  if ((result & 0x8000000000000000) != 0) {
    goto LABEL_14;
  }
  uint64_t result = sub_1C8CA7BA8(result);
  unint64_t v11 = result + v10;
  if (__OFADD__(result, v10))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  BOOL v12 = __OFADD__(v9, v11);
  unint64_t v13 = v9 + v11;
  if (v12)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  BOOL v12 = __OFADD__(*v6, v13);
  unint64_t v14 = *v6 + v13;
  if (v12)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  void *v6 = v14;
  return result;
}

unint64_t sub_1C8D1872C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8D18658(a1, a2, a3, a4);
}

uint64_t sub_1C8D18744(uint64_t result)
{
  unsigned int v2 = 8 * result;
  uint64_t v3 = 6;
  uint64_t v4 = 7;
  uint64_t v5 = 8;
  if ((8 * result) >> 28) {
    uint64_t v5 = 9;
  }
  if (v2 >= 0x200000) {
    uint64_t v4 = v5;
  }
  if ((8 * result) >> 14) {
    uint64_t v3 = v4;
  }
  if (v2 >= 0x80) {
    uint64_t v6 = v3;
  }
  else {
    uint64_t v6 = 5;
  }
  BOOL v7 = __OFADD__(*v1, v6);
  uint64_t v8 = *v1 + v6;
  if (v7) {
    __break(1u);
  }
  else {
    *unint64_t v1 = v8;
  }
  return result;
}

uint64_t sub_1C8D18798()
{
  return swift_release();
}

ValueMetadata *type metadata accessor for BinaryEncodingSizeVisitor.BinaryEncodingMessageSetSizeVisitor()
{
  return &type metadata for BinaryEncodingSizeVisitor.BinaryEncodingMessageSetSizeVisitor;
}

uint64_t MessageExtension.fieldNumber.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t MessageExtension.fieldName.getter()
{
  uint64_t v0 = sub_1C8D18C18();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t MessageExtension.messageType.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t *MessageExtension.__allocating_init(_protobuf_fieldNumber:fieldName:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = (uint64_t *)swift_allocObject();
  uint64_t v7 = *result;
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  uint64_t v8 = *(void *)(v7 + 88);
  uint64_t v9 = *(void *)(v7 + 104);
  result[5] = v8;
  result[6] = v9;
  return result;
}

uint64_t *MessageExtension.init(_protobuf_fieldNumber:fieldName:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *v3;
  v3[2] = a1;
  v3[3] = a2;
  v3[4] = a3;
  uint64_t v5 = *(void *)(v4 + 88);
  uint64_t v6 = *(void *)(v4 + 104);
  v3[5] = v5;
  v3[6] = v6;
  return v3;
}

uint64_t sub_1C8D188B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v28 = a3;
  uint64_t v26 = a4;
  uint64_t v8 = *v4;
  uint64_t v9 = *v4;
  uint64_t v10 = *(void *)(*v4 + 80);
  uint64_t v11 = sub_1C8D88620();
  uint64_t v25 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11, v12);
  unint64_t v14 = (char *)&v25 - v13;
  uint64_t v15 = *(void *)(v8 + 88);
  v29[0] = v10;
  v29[1] = v15;
  long long v27 = *(_OWORD *)(v9 + 96);
  long long v30 = v27;
  *((void *)&v30 + 1) = type metadata accessor for MessageExtension();
  uint64_t v31 = &protocol witness table for MessageExtension<A, B>;
  v29[0] = v5;
  uint64_t v16 = v27;
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 64);
  swift_retain();
  uint64_t v18 = v32;
  uint64_t result = v17(v29, a1, a2, v28, v10, v16);
  if (!v18)
  {
    uint64_t v20 = v11;
    uint64_t v22 = v25;
    uint64_t v21 = v26;
    uint64_t v23 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v14, 1, v10) == 1)
    {
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v14, v20);
      *(void *)(v21 + 32) = 0;
      *(_OWORD *)uint64_t v21 = 0u;
      *(_OWORD *)(v21 + 16) = 0u;
    }
    else
    {
      *(void *)(v21 + 24) = v10;
      *(void *)(v21 + 32) = *(void *)(v16 + 8);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)v21);
      return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v23 + 32))(boxed_opaque_existential_1, v14, v10);
    }
  }
  return result;
}

uint64_t MessageExtension.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MessageExtension.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186488](v0, 56, 7);
}

uint64_t sub_1C8D18B70()
{
  return MessageExtension.fieldNumber.getter();
}

uint64_t sub_1C8D18B94()
{
  uint64_t v0 = sub_1C8D18C18();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1C8D18BD0()
{
  return MessageExtension.messageType.getter();
}

uint64_t sub_1C8D18BF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1C8D188B0(a1, a2, a3, a4);
}

uint64_t sub_1C8D18C18()
{
  return *(void *)(v0 + 24);
}

uint64_t type metadata accessor for MessageExtension()
{
  return swift_getGenericMetadata();
}

uint64_t dispatch thunk of AnyMessageExtension.fieldNumber.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AnyMessageExtension.fieldName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AnyMessageExtension.messageType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of AnyMessageExtension._protobuf_newField<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t sub_1C8D18CA0()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for MessageExtension(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MessageExtension);
}

uint64_t dispatch thunk of MessageExtension.__allocating_init(_protobuf_fieldNumber:fieldName:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of MessageExtension._protobuf_newField<A>(decoder:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

double Google_Protobuf_SourceContext.init()@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  double result = 0.0;
  *(_OWORD *)(a1 + 16) = xmmword_1C8D8AD80;
  return result;
}

uint64_t Google_Protobuf_SourceContext.fileName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Google_Protobuf_SourceContext.fileName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unsigned int v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Google_Protobuf_SourceContext.fileName.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_SourceContext.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  unint64_t v3 = *(void *)(v1 + 24);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C8CA3CF8(v2, v3);
}

uint64_t Google_Protobuf_SourceContext.unknownFields.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C8CA3D5C(*(void *)(v1 + 16), *(void *)(v1 + 24));
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = v3;
  return result;
}

uint64_t (*Google_Protobuf_SourceContext.unknownFields.modify())()
{
  return nullsub_1;
}

unint64_t static Google_Protobuf_SourceContext.protoMessageName.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_1C8D18E7C()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234C760, &qword_1EA567188);
}

uint64_t static Google_Protobuf_SourceContext._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565BE8 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA567190;
  uint64_t v3 = qword_1EA567198;
  uint64_t v4 = unk_1EA5671A0;
  *a1 = qword_1EA567188;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_SourceContext.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  uint64_t result = v7(a2, a3);
  if (!v4)
  {
    while ((v9 & 1) == 0)
    {
      if (result == 1) {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 336))(v3, a2, a3);
      }
      uint64_t result = v7(a2, a3);
    }
  }
  return result;
}

uint64_t Google_Protobuf_SourceContext.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v8 = v3[1];
  uint64_t v9 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0) {
    uint64_t v9 = *v3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v9) {
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  uint64_t result = (*(uint64_t (**)(void))(a3 + 112))();
  if (!v4) {
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t Google_Protobuf_SourceContext.hashValue.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  sub_1C8D88840();
  sub_1C8CBC9DC(v6, v1, v2, v4, v3);
  return sub_1C8D888A0();
}

double sub_1C8D190DC@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  double result = 0.0;
  *(_OWORD *)(a1 + 16) = xmmword_1C8D8AD80;
  return result;
}

unint64_t sub_1C8D190F4()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_1C8D19110@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  unint64_t v3 = *(void *)(v1 + 24);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C8CA3CF8(v2, v3);
}

uint64_t _s20SiriOntologyProtobuf07Google_C12_StringValueV13unknownFieldsAA14UnknownStorageVvs_0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C8CA3D5C(*(void *)(v1 + 16), *(void *)(v1 + 24));
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = v3;
  return result;
}

uint64_t sub_1C8D19150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_SourceContext.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8D19168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_SourceContext.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8D19180@<X0>(void *a1@<X8>)
{
  if (qword_1EA565BE8 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA567190;
  uint64_t v3 = qword_1EA567198;
  uint64_t v4 = unk_1EA5671A0;
  *a1 = qword_1EA567188;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8D19218()
{
  return sub_1C8D6B2A8(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C8D19224()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  sub_1C8D88840();
  sub_1C8CBC9DC(v6, v1, v2, v4, v3);
  return sub_1C8D888A0();
}

uint64_t sub_1C8D19284(uint64_t a1)
{
  return sub_1C8CBC9DC(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1C8D19290()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  sub_1C8D88840();
  sub_1C8CBC9DC(v6, v1, v2, v4, v3);
  return sub_1C8D888A0();
}

uint64_t _s20SiriOntologyProtobuf07Google_C14_SourceContextV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  unint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (!v6 && (sub_1C8D887C0() & 1) == 0) {
    return 0;
  }
  sub_1C8CA3CF8(v2, v3);
  sub_1C8CA3CF8(v4, v5);
  char v7 = sub_1C8D01FBC(v2, v3, v4, v5);
  sub_1C8CA3D5C(v4, v5);
  sub_1C8CA3D5C(v2, v3);
  return v7 & 1;
}

unint64_t sub_1C8D193A4(uint64_t a1)
{
  unint64_t result = sub_1C8D193CC();
  *(void *)(a1 + 8) = result;
  return result;
}