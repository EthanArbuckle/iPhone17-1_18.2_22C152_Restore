unint64_t sub_1C8D193CC()
{
  unint64_t result;

  result = qword_1EA5671A8;
  if (!qword_1EA5671A8)
  {
    result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5671A8);
  }
  return result;
}

unint64_t sub_1C8D19420(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C8CC4204();
  unint64_t result = sub_1C8D19450();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C8D19450()
{
  unint64_t result = qword_1EA5671B0;
  if (!qword_1EA5671B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5671B0);
  }
  return result;
}

unint64_t sub_1C8D194A8()
{
  unint64_t result = qword_1EA5671B8;
  if (!qword_1EA5671B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5671B8);
  }
  return result;
}

void *assignWithCopy for Google_Protobuf_SourceContext(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[2];
  unint64_t v4 = a2[3];
  sub_1C8CA3CF8(v5, v4);
  uint64_t v6 = a1[2];
  unint64_t v7 = a1[3];
  a1[2] = v5;
  a1[3] = v4;
  sub_1C8CA3D5C(v6, v7);
  return a1;
}

void *assignWithTake for Google_Protobuf_SourceContext(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a1[2];
  unint64_t v6 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_1C8CA3D5C(v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for Google_Protobuf_SourceContext()
{
  return &type metadata for Google_Protobuf_SourceContext;
}

double sub_1C8D195C0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  sub_1C8D88850();
  uint64_t v7 = *(void *)(v3 + 64);
  long long v8 = *(_OWORD *)(v3 + 16);
  long long v14 = *(_OWORD *)v3;
  long long v15 = v8;
  long long v9 = *(_OWORD *)(v3 + 48);
  long long v16 = *(_OWORD *)(v3 + 32);
  long long v17 = v9;
  uint64_t v18 = v7;
  if (*(void *)(a1 + 16))
  {
    sub_1C8D88850();
    sub_1C8D21494(&v14, a1);
  }
  switch(a3 >> 62)
  {
    case 1uLL:
      if ((int)a2 != a2 >> 32) {
        goto LABEL_9;
      }
      break;
    case 2uLL:
      if (*(void *)(a2 + 16) != *(void *)(a2 + 24)) {
        goto LABEL_9;
      }
      break;
    case 3uLL:
      break;
    default:
      if ((a3 & 0xFF000000000000) != 0) {
LABEL_9:
      }
        sub_1C8D881D0();
      break;
  }
  uint64_t v10 = v18;
  long long v11 = v15;
  *(_OWORD *)uint64_t v3 = v14;
  *(_OWORD *)(v3 + 16) = v11;
  double result = *(double *)&v16;
  long long v13 = v17;
  *(_OWORD *)(v3 + 32) = v16;
  *(_OWORD *)(v3 + 48) = v13;
  *(void *)(v3 + 64) = v10;
  return result;
}

uint64_t sub_1C8D196CC(uint64_t a1)
{
  uint64_t result = sub_1C8D88850();
  v38 = *(void **)(a1 + 16);
  if (v38)
  {
    uint64_t v5 = v1[7];
    uint64_t v4 = v1[8];
    uint64_t v7 = v1[5];
    uint64_t v6 = v1[6];
    uint64_t v9 = v1[3];
    uint64_t v8 = v1[4];
    uint64_t v11 = v1[1];
    uint64_t v10 = v1[2];
    v26 = v1;
    uint64_t v12 = *v1;
    long long v13 = (void *)(swift_bridgeObjectRetain() + 48);
    long long v14 = v38;
    do
    {
      uint64_t v15 = *(v13 - 2);
      unint64_t v16 = *(v13 - 1);
      uint64_t v17 = *v13;
      *(void *)&long long v33 = v12;
      *((void *)&v33 + 1) = v11;
      *(void *)&long long v34 = v10;
      *((void *)&v34 + 1) = v9;
      *(void *)&long long v35 = v8;
      *((void *)&v35 + 1) = v7;
      *(void *)&long long v36 = v6;
      *((void *)&v36 + 1) = v5;
      uint64_t v37 = v4;
      uint64_t v18 = *(void *)(v17 + 16);
      uint64_t v19 = *(void *)(v17 + 24);
      unint64_t v20 = *(void *)(v17 + 32);
      int v21 = *(unsigned __int8 *)(v17 + 40);
      v38 = v13;
      if ((~v20 & 0x3000000000000000) != 0 || v21 != 255)
      {
        v24 = v14;
        uint64_t v22 = v15;
        unint64_t v23 = v16;
        switch((v20 >> 60) & 3 | (4 * (v21 & 1u)))
        {
          case 1uLL:
            sub_1C8D88850();
            sub_1C8D88880();
            goto LABEL_14;
          case 2uLL:
            sub_1C8D88850();
            sub_1C8CA3CF8(v22, v23);
            swift_retain_n();
            sub_1C8CC5580(v18, v19, v20, v21);
            sub_1C8D883C0();
            sub_1C8CC5640(v18, v19, v20, v21);
            break;
          case 3uLL:
            sub_1C8D88850();
            sub_1C8D88860();
            goto LABEL_14;
          case 4uLL:
            sub_1C8D88850();
            long long v28 = v33;
            long long v29 = v34;
            long long v30 = v35;
            long long v31 = v36;
            uint64_t v32 = v37;
            if (*(void *)(v18 + 16))
            {
              sub_1C8D88850();
              sub_1C8CA3CF8(v22, v23);
              swift_retain_n();
              sub_1C8CC5580(v18, v19, v20, v21);
              sub_1C8D21494(&v28, v18);
            }
            else
            {
              sub_1C8CA3CF8(v22, v23);
              swift_retain_n();
              sub_1C8CC5580(v18, v19, v20, v21);
            }
            switch(v20 >> 62)
            {
              case 1uLL:
                if ((int)v19 != v19 >> 32) {
                  goto LABEL_35;
                }
                break;
              case 2uLL:
                if (*(void *)(v19 + 16) != *(void *)(v19 + 24)) {
                  goto LABEL_35;
                }
                break;
              case 3uLL:
                goto LABEL_36;
              default:
                if ((v20 & 0xFF000000000000) != 0) {
                  goto LABEL_35;
                }
                break;
            }
            goto LABEL_36;
          case 5uLL:
            sub_1C8D88850();
            long long v28 = v33;
            long long v29 = v34;
            long long v30 = v35;
            long long v31 = v36;
            uint64_t v32 = v37;
            uint64_t v25 = *(void *)(v18 + 16);
            sub_1C8CA3CF8(v22, v23);
            swift_retain_n();
            sub_1C8CC5580(v18, v19, v20, v21);
            if (!v25) {
              goto LABEL_29;
            }
            sub_1C8D196CC(v18, 1);
            if (v27)
            {
              MEMORY[0x1CB7736A0](v27);
              uint64_t v27 = 0;
              long long v14 = v24;
            }
            else
            {
              uint64_t v27 = 0;
LABEL_29:
              long long v14 = v24;
              switch(v20 >> 62)
              {
                case 1uLL:
                  if ((int)v19 != v19 >> 32) {
                    goto LABEL_35;
                  }
                  break;
                case 2uLL:
                  if (*(void *)(v19 + 16) != *(void *)(v19 + 24)) {
                    goto LABEL_35;
                  }
                  break;
                case 3uLL:
                  break;
                default:
                  if ((v20 & 0xFF000000000000) != 0) {
LABEL_35:
                  }
                    sub_1C8D881D0();
                  break;
              }
            }
LABEL_36:
            sub_1C8CC5640(v18, v19, v20, v21);
            long long v33 = v28;
            long long v34 = v29;
            long long v35 = v30;
            long long v36 = v31;
            uint64_t v37 = v32;
            break;
          default:
            sub_1C8D88850();
            sub_1C8D88850();
LABEL_14:
            sub_1C8CA3CF8(v22, v23);
            swift_retain_n();
            break;
        }
      }
      else
      {
        uint64_t v22 = v15;
        unint64_t v23 = v16;
        sub_1C8CA3CF8(v15, v16);
        swift_retain_n();
      }
      swift_release();
      switch(v23 >> 62)
      {
        case 1uLL:
          if ((int)v22 != v22 >> 32) {
            goto LABEL_4;
          }
          break;
        case 2uLL:
          if (*(void *)(v22 + 16) != *(void *)(v22 + 24)) {
            goto LABEL_4;
          }
          break;
        case 3uLL:
          break;
        default:
          if ((v23 & 0xFF000000000000) != 0) {
LABEL_4:
          }
            sub_1C8D881D0();
          break;
      }
      sub_1C8CA3D5C(v22, v23);
      swift_release();
      uint64_t v11 = *((void *)&v33 + 1);
      uint64_t v12 = v33;
      uint64_t v9 = *((void *)&v34 + 1);
      uint64_t v10 = v34;
      uint64_t v7 = *((void *)&v35 + 1);
      uint64_t v8 = v35;
      uint64_t v5 = *((void *)&v36 + 1);
      uint64_t v6 = v36;
      long long v13 = v38 + 3;
      uint64_t v4 = v37;
      long long v14 = (void *)((char *)v14 - 1);
    }
    while (v14);
    uint64_t result = swift_bridgeObjectRelease();
    void *v26 = v12;
    v26[1] = v11;
    v26[2] = v10;
    v26[3] = v9;
    v26[4] = v8;
    v26[5] = v7;
    v26[6] = v6;
    v26[7] = v5;
    v26[8] = v4;
  }
  return result;
}

uint64_t sub_1C8D19C00(uint64_t a1)
{
  uint64_t result = sub_1C8D88850();
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v39 = v1[8];
    uint64_t v5 = v1[6];
    uint64_t v29 = v1[7];
    uint64_t v6 = v1[4];
    uint64_t v7 = v1[5];
    uint64_t v9 = v1[2];
    uint64_t v8 = v1[3];
    uint64_t v10 = *v1;
    uint64_t v11 = v1[1];
    uint64_t v27 = v1;
    swift_bridgeObjectRetain();
    uint64_t v12 = v29;
    uint64_t v13 = v39;
    long long v14 = (void *)(a1 + 48);
    do
    {
      uint64_t v40 = v4;
      uint64_t v15 = (void *)*v14;
      unint64_t v28 = *(v14 - 1);
      uint64_t v30 = *(v14 - 2);
      uint64_t v31 = v10;
      uint64_t v32 = v11;
      uint64_t v33 = v9;
      uint64_t v34 = v8;
      uint64_t v35 = v6;
      uint64_t v36 = v7;
      uint64_t v37 = v12;
      uint64_t v38 = v13;
      swift_beginAccess();
      unint64_t v16 = v15[3];
      uint64_t v17 = HIBYTE(v16) & 0xF;
      uint64_t v18 = v14;
      if ((v16 & 0x2000000000000000) == 0) {
        uint64_t v17 = v15[2] & 0xFFFFFFFFFFFFLL;
      }
      if (v17)
      {
        sub_1C8D88850();
        unint64_t v20 = v28;
        uint64_t v19 = v30;
        sub_1C8CA3CF8(v30, v28);
        swift_retain_n();
        swift_bridgeObjectRetain();
        sub_1C8D883C0();
        swift_bridgeObjectRelease();
      }
      else
      {
        unint64_t v20 = v28;
        uint64_t v19 = v30;
        sub_1C8CA3CF8(v30, v28);
        swift_retain_n();
      }
      swift_beginAccess();
      uint64_t v21 = v15[6];
      if (v21)
      {
        uint64_t v23 = v15[4];
        unint64_t v22 = v15[5];
        sub_1C8D88850();
        swift_beginAccess();
        unint64_t v24 = *(void *)(v21 + 24);
        uint64_t v25 = HIBYTE(v24) & 0xF;
        if ((v24 & 0x2000000000000000) == 0) {
          uint64_t v25 = *(void *)(v21 + 16) & 0xFFFFFFFFFFFFLL;
        }
        if (v25)
        {
          sub_1C8CC1F8C(v23, v22, v21);
          swift_bridgeObjectRetain();
          sub_1C8D883C0();
          swift_bridgeObjectRelease();
          sub_1C8CB6084(v23, v22, v21);
        }
      }
      swift_release();
      v26 = v18;
      switch(v20 >> 62)
      {
        case 1uLL:
          if ((int)v19 != v19 >> 32) {
            goto LABEL_4;
          }
          break;
        case 2uLL:
          if (*(void *)(v19 + 16) != *(void *)(v19 + 24)) {
            goto LABEL_4;
          }
          break;
        case 3uLL:
          break;
        default:
          if ((v20 & 0xFF000000000000) != 0) {
LABEL_4:
          }
            sub_1C8D881D0();
          break;
      }
      sub_1C8CA3D5C(v19, v20);
      swift_release();
      uint64_t v10 = v31;
      uint64_t v11 = v32;
      uint64_t v9 = v33;
      uint64_t v8 = v34;
      uint64_t v6 = v35;
      uint64_t v7 = v36;
      uint64_t v12 = v37;
      long long v14 = v26 + 3;
      uint64_t v13 = v38;
      --v4;
    }
    while (v40 != 1);
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v27 = v31;
    v27[1] = v32;
    v27[2] = v33;
    v27[3] = v34;
    v27[4] = v35;
    v27[5] = v36;
    v27[6] = v5;
    v27[7] = v37;
    v27[8] = v38;
  }
  return result;
}

uint64_t sub_1C8D19ED4(uint64_t a1)
{
  uint64_t result = sub_1C8D88850();
  uint64_t v49 = *(void *)(a1 + 16);
  if (v49)
  {
    v47 = v1;
    uint64_t v4 = *v1;
    uint64_t v5 = v1[1];
    uint64_t v6 = v1[2];
    uint64_t v7 = v1[3];
    uint64_t v8 = v1[4];
    uint64_t v9 = v1[5];
    uint64_t v11 = v1[6];
    uint64_t v10 = v1[7];
    uint64_t v48 = a1 + 32;
    uint64_t v12 = v1[8];
    swift_bridgeObjectRetain();
    uint64_t v13 = v7;
    uint64_t v14 = v6;
    uint64_t v15 = v5;
    uint64_t v16 = 0;
    do
    {
      uint64_t v51 = v16;
      uint64_t v17 = (uint64_t *)(v48 + 48 * v16);
      uint64_t v18 = *v17;
      int v70 = *((_DWORD *)v17 + 4);
      uint64_t v20 = v17[3];
      uint64_t v19 = v17[4];
      unint64_t v21 = v17[5];
      uint64_t v61 = v4;
      uint64_t v62 = v15;
      uint64_t v63 = v14;
      uint64_t v64 = v13;
      uint64_t v65 = v8;
      uint64_t v66 = v9;
      uint64_t v67 = v11;
      uint64_t v68 = v10;
      unint64_t v22 = v17[1];
      uint64_t v69 = v12;
      uint64_t v23 = HIBYTE(v22) & 0xF;
      if ((v22 & 0x2000000000000000) == 0) {
        uint64_t v23 = v18 & 0xFFFFFFFFFFFFLL;
      }
      if (v23)
      {
        sub_1C8D88850();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1C8CA3CF8(v19, v21);
        sub_1C8D883C0();
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1C8CA3CF8(v19, v21);
      }
      uint64_t v24 = v51;
      uint64_t v25 = v20;
      if (v70)
      {
        sub_1C8D88850();
        sub_1C8D88880();
      }
      if (*(void *)(v20 + 16))
      {
        uint64_t v71 = *(void *)(v20 + 16);
        uint64_t v50 = v19;
        sub_1C8D88850();
        uint64_t v27 = v68;
        uint64_t v26 = v12;
        uint64_t v28 = v9;
        uint64_t v29 = v64;
        uint64_t v30 = v8;
        uint64_t v32 = v62;
        uint64_t v31 = v63;
        uint64_t v33 = v61;
        swift_bridgeObjectRetain();
        uint64_t v34 = (void *)(v25 + 48);
        while (2)
        {
          uint64_t v35 = (void *)*v34;
          unint64_t v52 = *(v34 - 1);
          uint64_t v53 = *(v34 - 2);
          v54 = v34;
          uint64_t v55 = v33;
          uint64_t v56 = v32;
          uint64_t v57 = v31;
          uint64_t v58 = v29;
          uint64_t v59 = v28;
          uint64_t v60 = v27;
          swift_beginAccess();
          unint64_t v36 = v35[3];
          uint64_t v37 = HIBYTE(v36) & 0xF;
          if ((v36 & 0x2000000000000000) == 0) {
            uint64_t v37 = v35[2] & 0xFFFFFFFFFFFFLL;
          }
          if (v37)
          {
            sub_1C8D88850();
            unint64_t v39 = v52;
            uint64_t v38 = v53;
            sub_1C8CA3CF8(v53, v52);
            swift_retain_n();
            swift_bridgeObjectRetain();
            sub_1C8D883C0();
            swift_bridgeObjectRelease();
          }
          else
          {
            unint64_t v39 = v52;
            uint64_t v38 = v53;
            sub_1C8CA3CF8(v53, v52);
            swift_retain_n();
          }
          swift_beginAccess();
          uint64_t v40 = v35[6];
          if (v40)
          {
            uint64_t v41 = v35[4];
            unint64_t v42 = v35[5];
            sub_1C8D88850();
            swift_beginAccess();
            unint64_t v43 = *(void *)(v40 + 24);
            uint64_t v44 = HIBYTE(v43) & 0xF;
            if ((v43 & 0x2000000000000000) == 0) {
              uint64_t v44 = *(void *)(v40 + 16) & 0xFFFFFFFFFFFFLL;
            }
            if (v44)
            {
              sub_1C8CC1F8C(v41, v42, v40);
              swift_bridgeObjectRetain();
              sub_1C8D883C0();
              swift_bridgeObjectRelease();
              sub_1C8CB6084(v41, v42, v40);
            }
          }
          swift_release();
          switch(v39 >> 62)
          {
            case 1uLL:
              uint64_t v45 = (int)v38;
              uint64_t v46 = v38 >> 32;
              goto LABEL_31;
            case 2uLL:
              uint64_t v45 = *(void *)(v38 + 16);
              uint64_t v46 = *(void *)(v38 + 24);
LABEL_31:
              if (v45 == v46) {
                goto LABEL_17;
              }
              goto LABEL_16;
            case 3uLL:
              goto LABEL_17;
            default:
              if ((v39 & 0xFF000000000000) != 0) {
LABEL_16:
              }
                sub_1C8D881D0();
LABEL_17:
              sub_1C8CA3D5C(v38, v39);
              swift_release();
              uint64_t v33 = v55;
              uint64_t v32 = v56;
              uint64_t v31 = v57;
              uint64_t v29 = v58;
              uint64_t v28 = v59;
              uint64_t v27 = v60;
              uint64_t v34 = v54 + 3;
              if (--v71) {
                continue;
              }
              swift_bridgeObjectRelease();
              uint64_t v61 = v55;
              uint64_t v62 = v56;
              uint64_t v63 = v57;
              uint64_t v64 = v58;
              uint64_t v65 = v30;
              uint64_t v66 = v59;
              uint64_t v68 = v60;
              uint64_t v69 = v26;
              uint64_t v24 = v51;
              uint64_t v19 = v50;
              break;
          }
          break;
        }
      }
      uint64_t v16 = v24 + 1;
      switch(v21 >> 62)
      {
        case 1uLL:
          if ((int)v19 != v19 >> 32) {
            goto LABEL_4;
          }
          break;
        case 2uLL:
          if (*(void *)(v19 + 16) != *(void *)(v19 + 24)) {
            goto LABEL_4;
          }
          break;
        case 3uLL:
          break;
        default:
          if ((v21 & 0xFF000000000000) != 0) {
LABEL_4:
          }
            sub_1C8D881D0();
          break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C8CA3D5C(v19, v21);
      uint64_t v4 = v61;
      uint64_t v15 = v62;
      uint64_t v14 = v63;
      uint64_t v13 = v64;
      uint64_t v8 = v65;
      uint64_t v9 = v66;
      uint64_t v11 = v67;
      uint64_t v10 = v68;
      uint64_t v12 = v69;
    }
    while (v16 != v49);
    uint64_t result = swift_bridgeObjectRelease();
    void *v47 = v61;
    v47[1] = v62;
    v47[2] = v63;
    v47[3] = v64;
    v47[4] = v65;
    v47[5] = v66;
    v47[6] = v67;
    v47[7] = v68;
    v47[8] = v69;
  }
  return result;
}

uint64_t sub_1C8D1A3A0(uint64_t a1)
{
  v2 = v1;
  uint64_t result = sub_1C8D88850();
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    uint64_t v6 = v1[7];
    uint64_t v34 = v1[8];
    uint64_t v8 = v1[5];
    uint64_t v7 = v1[6];
    uint64_t v10 = v1[3];
    uint64_t v9 = v2[4];
    uint64_t v12 = v2[1];
    uint64_t v11 = v2[2];
    uint64_t v26 = v2;
    uint64_t v13 = *v2;
    swift_bridgeObjectRetain();
    uint64_t v14 = v9;
    uint64_t v15 = v8;
    uint64_t v16 = v7;
    uint64_t v17 = v6;
    uint64_t v18 = v34;
    uint64_t v19 = (unint64_t *)(a1 + 72);
    do
    {
      unint64_t v20 = *(v19 - 2);
      uint64_t v27 = *(v19 - 3);
      uint64_t v22 = *(v19 - 1);
      unint64_t v21 = *v19;
      uint64_t v28 = v11;
      unint64_t v23 = *(v19 - 4);
      uint64_t v29 = v14;
      uint64_t v30 = v15;
      uint64_t v31 = v16;
      uint64_t v24 = HIBYTE(v23) & 0xF;
      uint64_t v32 = v17;
      uint64_t v33 = v18;
      if ((v23 & 0x2000000000000000) == 0) {
        uint64_t v24 = *(v19 - 5) & 0xFFFFFFFFFFFFLL;
      }
      uint64_t v35 = v5;
      if (v24)
      {
        sub_1C8D88850();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1C8CA3CF8(v22, v21);
        sub_1C8D883C0();
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1C8CA3CF8(v22, v21);
      }
      uint64_t v25 = HIBYTE(v20) & 0xF;
      if ((v20 & 0x2000000000000000) == 0) {
        uint64_t v25 = v27 & 0xFFFFFFFFFFFFLL;
      }
      if (v25)
      {
        sub_1C8D88850();
        sub_1C8D883C0();
      }
      v19 += 6;
      switch(v21 >> 62)
      {
        case 1uLL:
          if ((int)v22 != v22 >> 32) {
            goto LABEL_4;
          }
          break;
        case 2uLL:
          if (*(void *)(v22 + 16) != *(void *)(v22 + 24)) {
            goto LABEL_4;
          }
          break;
        case 3uLL:
          break;
        default:
          if ((v21 & 0xFF000000000000) != 0) {
LABEL_4:
          }
            sub_1C8D881D0();
          break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C8CA3D5C(v22, v21);
      uint64_t v11 = v28;
      uint64_t v14 = v29;
      uint64_t v15 = v30;
      uint64_t v16 = v31;
      uint64_t v17 = v32;
      uint64_t v18 = v33;
      --v5;
    }
    while (v35 != 1);
    uint64_t result = swift_bridgeObjectRelease();
    void *v26 = v13;
    v26[1] = v12;
    v26[2] = v28;
    v26[3] = v10;
    v26[4] = v29;
    v26[5] = v30;
    v26[6] = v31;
    v26[7] = v32;
    v26[8] = v33;
  }
  return result;
}

uint64_t sub_1C8D1A5FC(uint64_t a1)
{
  uint64_t result = sub_1C8D88850();
  uint64_t v40 = *(void *)(a1 + 16);
  if (v40)
  {
    uint64_t v4 = v1[8];
    uint64_t v64 = v1[7];
    uint64_t v6 = v1[5];
    uint64_t v5 = v1[6];
    uint64_t v7 = v1[3];
    uint64_t v8 = v1[4];
    uint64_t v9 = v1[1];
    uint64_t v10 = v1[2];
    uint64_t v39 = a1 + 32;
    uint64_t v38 = v1;
    uint64_t v11 = *v1;
    swift_bridgeObjectRetain();
    uint64_t v12 = v7;
    uint64_t v13 = v8;
    uint64_t v14 = v6;
    uint64_t v15 = v5;
    uint64_t v16 = v64;
    uint64_t v17 = 0;
    while (1)
    {
      uint64_t v50 = v17;
      uint64_t v18 = (uint64_t *)(v39 + 120 * v17);
      uint64_t v19 = v18[1];
      unint64_t v20 = v18[2];
      uint64_t v21 = v18[4];
      char v48 = *((unsigned char *)v18 + 48);
      char v49 = *((unsigned char *)v18 + 64);
      char v47 = *((unsigned char *)v18 + 80);
      uint64_t v22 = v18[11];
      unint64_t v23 = v18[12];
      uint64_t v24 = v18[14];
      uint64_t v55 = v11;
      uint64_t v56 = v9;
      uint64_t v57 = v10;
      uint64_t v58 = v12;
      uint64_t v25 = *v18;
      uint64_t v59 = v13;
      uint64_t v60 = v14;
      uint64_t v61 = v15;
      uint64_t v62 = v16;
      uint64_t v63 = v4;
      if (!*(void *)(*v18 + 16))
      {
        swift_bridgeObjectRetain();
        sub_1C8CA3CF8(v19, v20);
        swift_bridgeObjectRetain();
        sub_1C8D02DB8(v22, v23);
        swift_bridgeObjectRetain();
        uint64_t v36 = v19;
        char v37 = v47;
        if (!v21) {
          goto LABEL_27;
        }
        goto LABEL_26;
      }
      unint64_t v41 = v18[12];
      uint64_t v42 = v18[14];
      uint64_t v43 = v18[11];
      unint64_t v44 = v18[2];
      uint64_t v45 = v18[4];
      uint64_t v46 = v18[1];
      sub_1C8D88850();
      uint64_t v26 = *(void *)(v25 + 16);
      if (v26)
      {
        uint64_t v27 = v11;
        swift_bridgeObjectRetain();
        sub_1C8CA3CF8(v46, v44);
        swift_bridgeObjectRetain();
        sub_1C8D02DB8(v43, v41);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v28 = v60;
        uint64_t v29 = v61;
        uint64_t v30 = v62;
        uint64_t v31 = v4;
        uint64_t v32 = (unsigned __int8 *)(v25 + 64);
        while (1)
        {
          uint64_t v65 = v26;
          uint64_t v33 = *((void *)v32 - 4);
          unint64_t v34 = *((void *)v32 - 3);
          int v35 = *v32;
          uint64_t v51 = v28;
          uint64_t v52 = v29;
          uint64_t v53 = v30;
          uint64_t v54 = v31;
          if (!*((void *)v32 - 1)) {
            break;
          }
          sub_1C8D88850();
          sub_1C8CA3CF8(v33, v34);
          swift_bridgeObjectRetain();
          sub_1C8D883C0();
          if (v35 != 2) {
            goto LABEL_15;
          }
LABEL_16:
          v32 += 40;
          switch(v34 >> 62)
          {
            case 1uLL:
              if ((int)v33 != v33 >> 32) {
                goto LABEL_22;
              }
              break;
            case 2uLL:
              if (*(void *)(v33 + 16) != *(void *)(v33 + 24))
              {
LABEL_22:
                sub_1C8CA3CF8(v33, v34);
                goto LABEL_10;
              }
              break;
            case 3uLL:
              goto LABEL_11;
            default:
              if ((v34 & 0xFF000000000000) != 0) {
LABEL_10:
              }
                sub_1C8D881D0();
LABEL_11:
              sub_1C8CA3D5C(v33, v34);
              break;
          }
          sub_1C8CA3D5C(v33, v34);
          swift_bridgeObjectRelease();
          uint64_t v28 = v51;
          uint64_t v29 = v52;
          uint64_t v30 = v53;
          uint64_t v31 = v54;
          uint64_t v26 = v65 - 1;
          if (v65 == 1)
          {
            swift_bridgeObjectRelease();
            uint64_t v55 = v27;
            uint64_t v60 = v51;
            uint64_t v61 = v52;
            uint64_t v62 = v53;
            uint64_t v63 = v54;
            uint64_t v36 = v46;
            uint64_t v22 = v43;
            unint64_t v20 = v44;
            unint64_t v23 = v41;
            uint64_t v24 = v42;
            char v37 = v47;
            if (!v45) {
              goto LABEL_27;
            }
LABEL_26:
            sub_1C8D88850();
            sub_1C8D883C0();
            goto LABEL_27;
          }
        }
        sub_1C8CA3CF8(v33, v34);
        if (v35 == 2) {
          goto LABEL_16;
        }
LABEL_15:
        sub_1C8D88850();
        sub_1C8D88860();
        goto LABEL_16;
      }
      swift_bridgeObjectRetain();
      uint64_t v36 = v19;
      sub_1C8CA3CF8(v19, v20);
      swift_bridgeObjectRetain();
      sub_1C8D02DB8(v22, v23);
      swift_bridgeObjectRetain();
      char v37 = v47;
      if (v21) {
        goto LABEL_26;
      }
LABEL_27:
      if (v48)
      {
        if ((v49 & 1) == 0) {
          goto LABEL_39;
        }
      }
      else
      {
        sub_1C8D88850();
        sub_1C8D88880();
        if ((v49 & 1) == 0)
        {
LABEL_39:
          sub_1C8D88850();
          sub_1C8D88880();
          if (v37) {
            goto LABEL_31;
          }
LABEL_30:
          sub_1C8D88850();
          sub_1C8D88880();
          goto LABEL_31;
        }
      }
      if ((v37 & 1) == 0) {
        goto LABEL_30;
      }
LABEL_31:
      if (v23 >> 60 != 15)
      {
        sub_1C8D88850();
        sub_1C8CA3CF8(v22, v23);
        sub_1C8D881D0();
        sub_1C8CAA9F0(v22, v23);
      }
      if (v24)
      {
        sub_1C8D88850();
        sub_1C8D883C0();
      }
      switch(v20 >> 62)
      {
        case 1uLL:
          if ((int)v36 != v36 >> 32) {
            goto LABEL_4;
          }
          break;
        case 2uLL:
          if (*(void *)(v36 + 16) != *(void *)(v36 + 24)) {
            goto LABEL_4;
          }
          break;
        case 3uLL:
          break;
        default:
          if ((v20 & 0xFF000000000000) != 0) {
LABEL_4:
          }
            sub_1C8D881D0();
          break;
      }
      swift_bridgeObjectRelease();
      sub_1C8CA3D5C(v36, v20);
      swift_bridgeObjectRelease();
      sub_1C8CAA9F0(v22, v23);
      swift_bridgeObjectRelease();
      uint64_t v11 = v55;
      uint64_t v9 = v56;
      uint64_t v10 = v57;
      uint64_t v12 = v58;
      uint64_t v13 = v59;
      uint64_t v14 = v60;
      uint64_t v15 = v61;
      uint64_t v16 = v62;
      uint64_t v4 = v63;
      uint64_t v17 = v50 + 1;
      if (v50 + 1 == v40)
      {
        uint64_t result = swift_bridgeObjectRelease();
        void *v38 = v55;
        v38[1] = v56;
        v38[2] = v57;
        v38[3] = v58;
        v38[4] = v59;
        v38[5] = v60;
        v38[6] = v61;
        v38[7] = v62;
        v38[8] = v63;
        return result;
      }
    }
  }
  return result;
}

uint64_t sub_1C8D1ABD0(uint64_t a1)
{
  uint64_t result = sub_1C8D88850();
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v26 = v1[8];
    uint64_t v5 = v1[6];
    uint64_t v20 = v1[7];
    uint64_t v6 = v1[4];
    uint64_t v7 = v1[5];
    uint64_t v8 = v1[2];
    uint64_t v9 = v1[3];
    uint64_t v11 = *v1;
    uint64_t v10 = v1[1];
    uint64_t v21 = v1;
    swift_bridgeObjectRetain();
    uint64_t v12 = v5;
    uint64_t v13 = v20;
    uint64_t v14 = v26;
    uint64_t v15 = (unsigned __int8 *)(a1 + 64);
    while (1)
    {
      uint64_t v16 = *((void *)v15 - 4);
      unint64_t v17 = *((void *)v15 - 3);
      uint64_t v22 = v11;
      uint64_t v23 = v12;
      uint64_t v24 = v13;
      uint64_t v25 = v14;
      uint64_t v27 = v4;
      if (!*((void *)v15 - 1)) {
        break;
      }
      int v18 = *v15;
      sub_1C8D88850();
      sub_1C8CA3CF8(v16, v17);
      swift_bridgeObjectRetain();
      sub_1C8D883C0();
      if (v18 != 2) {
        goto LABEL_9;
      }
LABEL_10:
      v15 += 40;
      switch(v17 >> 62)
      {
        case 1uLL:
          if ((int)v16 != v16 >> 32) {
            goto LABEL_16;
          }
          break;
        case 2uLL:
          if (*(void *)(v16 + 16) != *(void *)(v16 + 24))
          {
LABEL_16:
            sub_1C8CA3CF8(v16, v17);
            goto LABEL_4;
          }
          break;
        case 3uLL:
          goto LABEL_5;
        default:
          if ((v17 & 0xFF000000000000) != 0) {
LABEL_4:
          }
            sub_1C8D881D0();
LABEL_5:
          sub_1C8CA3D5C(v16, v17);
          break;
      }
      sub_1C8CA3D5C(v16, v17);
      swift_bridgeObjectRelease();
      uint64_t v11 = v22;
      uint64_t v12 = v23;
      uint64_t v13 = v24;
      uint64_t v14 = v25;
      --v4;
      if (v27 == 1)
      {
        uint64_t result = swift_bridgeObjectRelease();
        *uint64_t v21 = v22;
        v21[1] = v10;
        v21[2] = v8;
        v21[3] = v9;
        v21[4] = v6;
        v21[5] = v7;
        v21[6] = v23;
        v21[7] = v24;
        v21[8] = v25;
        return result;
      }
    }
    int v19 = *v15;
    sub_1C8CA3CF8(v16, v17);
    if (v19 == 2) {
      goto LABEL_10;
    }
LABEL_9:
    sub_1C8D88850();
    sub_1C8D88860();
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_1C8D1AE18(uint64_t a1)
{
  uint64_t result = sub_1C8D88850();
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v5 = v1[8];
    uint64_t v48 = v1[7];
    uint64_t v6 = v1[5];
    uint64_t v7 = v1[6];
    uint64_t v9 = v1[3];
    uint64_t v8 = v1[4];
    uint64_t v10 = v1[1];
    uint64_t v11 = v1[2];
    unint64_t v34 = v1;
    uint64_t v12 = *v1;
    uint64_t v13 = v5;
    swift_bridgeObjectRetain();
    uint64_t v14 = v6;
    uint64_t v15 = v7;
    uint64_t v16 = v48;
    unint64_t v17 = (void *)(a1 + 48);
    while (1)
    {
      uint64_t v48 = v4;
      uint64_t v19 = *(v17 - 2);
      unint64_t v18 = *(v17 - 1);
      char v37 = v17;
      uint64_t v20 = *v17;
      *(void *)&long long v43 = v12;
      *((void *)&v43 + 1) = v10;
      *(void *)&long long v44 = v11;
      *((void *)&v44 + 1) = v9;
      *(void *)&long long v45 = v8;
      *((void *)&v45 + 1) = v14;
      *(void *)&long long v46 = v15;
      *((void *)&v46 + 1) = v16;
      uint64_t v47 = v13;
      swift_beginAccess();
      if (*(void *)(v20 + 24))
      {
        sub_1C8D88850();
        sub_1C8CA3CF8(v19, v18);
        swift_retain_n();
        swift_bridgeObjectRetain();
        sub_1C8D883C0();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1C8CA3CF8(v19, v18);
        swift_retain_n();
      }
      swift_beginAccess();
      if (*(void *)(v20 + 40))
      {
        sub_1C8D88850();
        swift_bridgeObjectRetain();
        sub_1C8D883C0();
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      if (*(void *)(v20 + 56))
      {
        sub_1C8D88850();
        swift_bridgeObjectRetain();
        sub_1C8D883C0();
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      uint64_t v21 = *(void *)(v20 + 64);
      if (!v21) {
        goto LABEL_25;
      }
      unint64_t v35 = v18;
      uint64_t v22 = *(void *)(v20 + 72);
      unint64_t v23 = *(void *)(v20 + 80);
      uint64_t v24 = *(void *)(v20 + 88);
      unint64_t v25 = *(unsigned __int16 *)(v20 + 96);
      int v26 = *(_WORD *)(v20 + 96);
      sub_1C8D88850();
      long long v38 = v43;
      long long v39 = v44;
      long long v40 = v45;
      long long v41 = v46;
      uint64_t v42 = v47;
      if (v26 != 2)
      {
        sub_1C8D88850();
        sub_1C8D88860();
      }
      if ((v25 >> 8) != 3)
      {
        sub_1C8D88850();
        sub_1C8D88850();
      }
      uint64_t v27 = *(void *)(v21 + 16);
      swift_bridgeObjectRetain();
      sub_1C8CA3CF8(v22, v23);
      swift_bridgeObjectRetain();
      if (v27)
      {
        uint64_t v28 = v36;
        sub_1C8D1A5FC(v21);
        if (v36) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t v28 = v36;
      }
      sub_1C8D3D3BC((uint64_t)&v38, 1000, 0x20000000, v24);
      if (!v28)
      {
        uint64_t v36 = 0;
        switch(v23 >> 62)
        {
          case 1uLL:
            uint64_t v29 = (int)v22;
            uint64_t v30 = v22 >> 32;
            goto LABEL_39;
          case 2uLL:
            uint64_t v29 = *(void *)(v22 + 16);
            uint64_t v30 = *(void *)(v22 + 24);
LABEL_39:
            if (v29 != v30) {
              goto LABEL_40;
            }
            goto LABEL_24;
          case 3uLL:
            goto LABEL_24;
          default:
            if ((v23 & 0xFF000000000000) == 0) {
              goto LABEL_24;
            }
LABEL_40:
            sub_1C8D881D0();
            break;
        }
        goto LABEL_24;
      }
LABEL_23:
      MEMORY[0x1CB7736A0](v28);
      uint64_t v36 = 0;
LABEL_24:
      sub_1C8CEF708(v21, v22, v23);
      long long v43 = v38;
      long long v44 = v39;
      long long v45 = v40;
      long long v46 = v41;
      uint64_t v47 = v42;
      unint64_t v18 = v35;
LABEL_25:
      swift_beginAccess();
      if (*(unsigned char *)(v20 + 98) != 2)
      {
        sub_1C8D88850();
        sub_1C8D88860();
      }
      swift_beginAccess();
      if (*(unsigned char *)(v20 + 99) != 2)
      {
        sub_1C8D88850();
        sub_1C8D88860();
      }
      swift_release();
      switch(v18 >> 62)
      {
        case 1uLL:
          if ((int)v19 != v19 >> 32) {
            goto LABEL_4;
          }
          break;
        case 2uLL:
          if (*(void *)(v19 + 16) != *(void *)(v19 + 24)) {
            goto LABEL_4;
          }
          break;
        case 3uLL:
          break;
        default:
          if ((v18 & 0xFF000000000000) != 0) {
LABEL_4:
          }
            sub_1C8D881D0();
          break;
      }
      sub_1C8CA3D5C(v19, v18);
      swift_release();
      uint64_t v10 = *((void *)&v43 + 1);
      uint64_t v12 = v43;
      uint64_t v9 = *((void *)&v44 + 1);
      uint64_t v11 = v44;
      uint64_t v14 = *((void *)&v45 + 1);
      uint64_t v8 = v45;
      uint64_t v16 = *((void *)&v46 + 1);
      uint64_t v15 = v46;
      unint64_t v17 = v37 + 3;
      uint64_t v13 = v47;
      uint64_t v4 = v48 - 1;
      if (v48 == 1)
      {
        uint64_t v31 = *((void *)&v46 + 1);
        uint64_t v32 = v46;
        uint64_t v33 = *((void *)&v45 + 1);
        uint64_t result = swift_bridgeObjectRelease();
        *unint64_t v34 = v12;
        v34[1] = v10;
        v34[2] = v11;
        v34[3] = v9;
        v34[4] = v8;
        v34[5] = v33;
        v34[6] = v32;
        v34[7] = v31;
        v34[8] = v13;
        return result;
      }
    }
  }
  return result;
}

uint64_t sub_1C8D1B2F0(uint64_t a1, uint64_t a2)
{
  return sub_1C8D1CC54(a1, a2, (void (*)(uint64_t, uint64_t *))sub_1C8D6DF08);
}

uint64_t sub_1C8D1B31C(uint64_t a1)
{
  uint64_t result = sub_1C8D88850();
  uint64_t v64 = *(void *)(a1 + 16);
  if (v64)
  {
    uint64_t v4 = *v1;
    uint64_t v5 = v1[1];
    uint64_t v6 = v1[2];
    uint64_t v7 = v1[3];
    uint64_t v8 = v1[4];
    uint64_t v9 = v1[5];
    uint64_t v10 = v1[6];
    uint64_t v11 = v1[7];
    uint64_t v63 = a1 + 32;
    uint64_t v59 = v1;
    uint64_t v12 = v1[8];
    swift_bridgeObjectRetain();
    uint64_t v13 = v5;
    uint64_t v14 = 0;
    while (1)
    {
      uint64_t v65 = v14;
      uint64_t v15 = (uint64_t *)(v63 + 24 * v14);
      uint64_t v17 = *v15;
      unint64_t v16 = v15[1];
      uint64_t v18 = v15[2];
      *(void *)&unsigned long long v80 = v4;
      *((void *)&v80 + 1) = v13;
      *(void *)&unsigned long long v81 = v6;
      *((void *)&v81 + 1) = v7;
      *(void *)&unsigned long long v82 = v8;
      *((void *)&v82 + 1) = v9;
      *(void *)&unsigned long long v83 = v10;
      *((void *)&v83 + 1) = v11;
      uint64_t v19 = v18;
      uint64_t v84 = v12;
      swift_beginAccess();
      if (*(void *)(v19 + 24))
      {
        sub_1C8D88850();
        sub_1C8CA3CF8(v17, v16);
        swift_retain_n();
        swift_bridgeObjectRetain();
        sub_1C8D883C0();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1C8CA3CF8(v17, v16);
        swift_retain_n();
      }
      uint64_t v20 = v17;
      swift_beginAccess();
      uint64_t v21 = *(void *)(v19 + 32);
      if (!*(void *)(v21 + 16)) {
        goto LABEL_51;
      }
      sub_1C8D88850();
      if (!*(void *)(v21 + 16)) {
        goto LABEL_51;
      }
      uint64_t v68 = *(void *)(v21 + 16);
      unint64_t v60 = v16;
      uint64_t v61 = v20;
      uint64_t v62 = v19;
      unint64_t v22 = *((void *)&v83 + 1);
      uint64_t v85 = v84;
      unint64_t v24 = *((void *)&v82 + 1);
      unint64_t v23 = v83;
      unint64_t v26 = *((void *)&v81 + 1);
      unint64_t v25 = v82;
      unint64_t v28 = *((void *)&v80 + 1);
      unint64_t v27 = v81;
      unint64_t v29 = v80;
      swift_bridgeObjectRetain_n();
      uint64_t v30 = v85;
      uint64_t v31 = (void *)(v21 + 48);
LABEL_15:
      uint64_t v85 = *(v31 - 2);
      uint64_t v32 = *v31;
      unint64_t v69 = *(v31 - 1);
      uint64_t v67 = v31;
      *(void *)&unsigned long long v75 = v29;
      *((void *)&v75 + 1) = v28;
      *(void *)&unsigned long long v76 = v27;
      *((void *)&v76 + 1) = v26;
      *(void *)&unsigned long long v77 = v25;
      *((void *)&v77 + 1) = v24;
      *(void *)&unsigned long long v78 = v23;
      *((void *)&v78 + 1) = v22;
      uint64_t v79 = v30;
      swift_beginAccess();
      if (*(void *)(v32 + 24))
      {
        sub_1C8D88850();
        uint64_t v33 = v85;
        unint64_t v34 = v69;
        sub_1C8CA3CF8(v85, v69);
        swift_retain_n();
        swift_bridgeObjectRetain();
        sub_1C8D883C0();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v33 = v85;
        unint64_t v34 = v69;
        sub_1C8CA3CF8(v85, v69);
        swift_retain_n();
      }
      swift_beginAccess();
      if (*(void *)(v32 + 40))
      {
        sub_1C8D88850();
        swift_bridgeObjectRetain();
        sub_1C8D883C0();
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      if (*(void *)(v32 + 56))
      {
        sub_1C8D88850();
        swift_bridgeObjectRetain();
        sub_1C8D883C0();
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      uint64_t v35 = *(void *)(v32 + 64);
      if (v35) {
        break;
      }
LABEL_34:
      swift_beginAccess();
      if (*(unsigned char *)(v32 + 98) != 2)
      {
        sub_1C8D88850();
        sub_1C8D88860();
      }
      swift_beginAccess();
      if (*(unsigned char *)(v32 + 99) != 2)
      {
        sub_1C8D88850();
        sub_1C8D88860();
      }
      swift_release();
      switch(v34 >> 62)
      {
        case 1uLL:
          uint64_t v43 = (int)v33;
          uint64_t v44 = v33 >> 32;
          goto LABEL_41;
        case 2uLL:
          uint64_t v43 = *(void *)(v33 + 16);
          uint64_t v44 = *(void *)(v33 + 24);
LABEL_41:
          if (v43 == v44) {
            goto LABEL_14;
          }
          goto LABEL_13;
        case 3uLL:
          goto LABEL_14;
        default:
          if ((v34 & 0xFF000000000000) != 0) {
LABEL_13:
          }
            sub_1C8D881D0();
LABEL_14:
          sub_1C8CA3D5C(v33, v34);
          swift_release();
          unint64_t v28 = *((void *)&v75 + 1);
          unint64_t v29 = v75;
          unint64_t v26 = *((void *)&v76 + 1);
          unint64_t v27 = v76;
          unint64_t v24 = *((void *)&v77 + 1);
          unint64_t v25 = v77;
          unint64_t v22 = *((void *)&v78 + 1);
          unint64_t v23 = v78;
          uint64_t v31 = v67 + 3;
          uint64_t v30 = v79;
          if (--v68) {
            goto LABEL_15;
          }
          uint64_t v47 = v79;
          swift_bridgeObjectRelease_n();
          unsigned long long v80 = __PAIR128__(v28, v29);
          unsigned long long v81 = __PAIR128__(v26, v27);
          unsigned long long v82 = __PAIR128__(v24, v25);
          unsigned long long v83 = __PAIR128__(v22, v23);
          uint64_t v84 = v47;
          uint64_t v20 = v61;
          uint64_t v19 = v62;
          unint64_t v16 = v60;
          break;
      }
LABEL_51:
      swift_beginAccess();
      uint64_t v48 = *(void *)(v19 + 40);
      if (v48)
      {
        uint64_t v50 = *(void *)(v19 + 48);
        unint64_t v49 = *(void *)(v19 + 56);
        uint64_t v51 = *(void *)(v19 + 64);
        int v52 = *(unsigned __int8 *)(v19 + 72);
        sub_1C8D88850();
        unsigned long long v75 = v80;
        unsigned long long v76 = v81;
        unsigned long long v77 = v82;
        unsigned long long v78 = v83;
        uint64_t v79 = v84;
        uint64_t v85 = v50;
        if (v52 != 2)
        {
          sub_1C8D88850();
          uint64_t v50 = v85;
          sub_1C8D88860();
        }
        uint64_t v53 = *(void *)(v48 + 16);
        swift_bridgeObjectRetain();
        sub_1C8CA3CF8(v50, v49);
        swift_bridgeObjectRetain();
        if (v53)
        {
          uint64_t v54 = v66;
          sub_1C8D1A5FC(v48);
          if (v66)
          {
            MEMORY[0x1CB7736A0](v66);
            uint64_t v66 = 0;
            uint64_t v55 = v65;
LABEL_61:
            sub_1C8CEF708(v48, v85, v49);
            unsigned long long v80 = v75;
            unsigned long long v81 = v76;
            unsigned long long v82 = v77;
            unsigned long long v83 = v78;
            uint64_t v84 = v79;
            goto LABEL_62;
          }
        }
        else
        {
          uint64_t v54 = v66;
        }
        sub_1C8D3D3BC((uint64_t)&v75, 1000, 0x20000000, v51);
        uint64_t v55 = v65;
        if (v54)
        {
          MEMORY[0x1CB7736A0](v54);
          uint64_t v66 = 0;
        }
        else
        {
          uint64_t v66 = 0;
          switch(v49 >> 62)
          {
            case 1uLL:
              uint64_t v56 = (int)v85;
              uint64_t v57 = v85 >> 32;
              goto LABEL_72;
            case 2uLL:
              uint64_t v56 = *(void *)(v85 + 16);
              uint64_t v57 = *(void *)(v85 + 24);
LABEL_72:
              if (v56 != v57) {
                goto LABEL_73;
              }
              goto LABEL_61;
            case 3uLL:
              goto LABEL_61;
            default:
              if ((v49 & 0xFF000000000000) == 0) {
                goto LABEL_61;
              }
LABEL_73:
              sub_1C8D881D0();
              break;
          }
        }
        goto LABEL_61;
      }
      uint64_t v55 = v65;
LABEL_62:
      uint64_t v14 = v55 + 1;
      swift_release();
      switch(v16 >> 62)
      {
        case 1uLL:
          if ((int)v20 != v20 >> 32) {
            goto LABEL_4;
          }
          break;
        case 2uLL:
          if (*(void *)(v20 + 16) != *(void *)(v20 + 24)) {
            goto LABEL_4;
          }
          break;
        case 3uLL:
          break;
        default:
          if ((v16 & 0xFF000000000000) != 0) {
LABEL_4:
          }
            sub_1C8D881D0();
          break;
      }
      sub_1C8CA3D5C(v20, v16);
      swift_release();
      uint64_t v13 = *((void *)&v80 + 1);
      uint64_t v4 = v80;
      uint64_t v7 = *((void *)&v81 + 1);
      uint64_t v6 = v81;
      uint64_t v9 = *((void *)&v82 + 1);
      uint64_t v8 = v82;
      uint64_t v11 = *((void *)&v83 + 1);
      uint64_t v10 = v83;
      uint64_t v12 = v84;
      if (v14 == v64)
      {
        uint64_t v58 = *((void *)&v80 + 1);
        uint64_t result = swift_bridgeObjectRelease();
        *uint64_t v59 = v4;
        v59[1] = v58;
        v59[2] = v6;
        v59[3] = v7;
        v59[4] = v8;
        v59[5] = v9;
        v59[6] = v10;
        v59[7] = v11;
        v59[8] = v12;
        return result;
      }
    }
    uint64_t v37 = *(void *)(v32 + 72);
    unint64_t v36 = *(void *)(v32 + 80);
    uint64_t v38 = *(void *)(v32 + 88);
    unint64_t v39 = *(unsigned __int16 *)(v32 + 96);
    int v40 = *(_WORD *)(v32 + 96);
    sub_1C8D88850();
    unsigned long long v70 = v75;
    unsigned long long v71 = v76;
    unsigned long long v72 = v77;
    unsigned long long v73 = v78;
    uint64_t v74 = v79;
    if (v40 != 2)
    {
      sub_1C8D88850();
      sub_1C8D88860();
    }
    if ((v39 >> 8) != 3)
    {
      sub_1C8D88850();
      sub_1C8D88850();
    }
    uint64_t v41 = *(void *)(v35 + 16);
    swift_bridgeObjectRetain();
    sub_1C8CA3CF8(v37, v36);
    swift_bridgeObjectRetain();
    if (v41)
    {
      uint64_t v42 = v66;
      sub_1C8D1A5FC(v35);
      if (v66)
      {
        MEMORY[0x1CB7736A0](v66);
        uint64_t v66 = 0;
        unint64_t v34 = v69;
LABEL_33:
        sub_1C8CEF708(v35, v37, v36);
        unsigned long long v75 = v70;
        unsigned long long v76 = v71;
        unsigned long long v77 = v72;
        unsigned long long v78 = v73;
        uint64_t v79 = v74;
        uint64_t v33 = v85;
        goto LABEL_34;
      }
    }
    else
    {
      uint64_t v42 = v66;
    }
    unint64_t v34 = v69;
    sub_1C8D3D3BC((uint64_t)&v70, 1000, 0x20000000, v38);
    if (v42)
    {
      MEMORY[0x1CB7736A0](v42);
      uint64_t v66 = 0;
    }
    else
    {
      uint64_t v66 = 0;
      switch(v36 >> 62)
      {
        case 1uLL:
          uint64_t v45 = (int)v37;
          uint64_t v46 = v37 >> 32;
          goto LABEL_48;
        case 2uLL:
          uint64_t v45 = *(void *)(v37 + 16);
          uint64_t v46 = *(void *)(v37 + 24);
LABEL_48:
          if (v45 != v46) {
            goto LABEL_49;
          }
          goto LABEL_33;
        case 3uLL:
          goto LABEL_33;
        default:
          if ((v36 & 0xFF000000000000) == 0) {
            goto LABEL_33;
          }
LABEL_49:
          sub_1C8D881D0();
          break;
      }
    }
    goto LABEL_33;
  }
  return result;
}

uint64_t sub_1C8D1BBBC(uint64_t a1, uint64_t a2)
{
  return sub_1C8D1CC54(a1, a2, (void (*)(uint64_t, uint64_t *))sub_1C8D6EA44);
}

uint64_t sub_1C8D1BBE8(uint64_t a1)
{
  return sub_1C8D1C050(a1);
}

uint64_t sub_1C8D1BC00(uint64_t a1)
{
  uint64_t result = sub_1C8D88850();
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v49 = v1[8];
    uint64_t v5 = v1[6];
    uint64_t v37 = v1[7];
    uint64_t v7 = v1[4];
    uint64_t v6 = v1[5];
    uint64_t v9 = v1[2];
    uint64_t v8 = v1[3];
    uint64_t v10 = *v1;
    uint64_t v11 = v1[1];
    uint64_t v35 = v1;
    swift_bridgeObjectRetain();
    uint64_t v12 = v6;
    uint64_t v13 = v5;
    uint64_t v14 = v37;
    uint64_t v15 = v49;
    unint64_t v16 = (void *)(a1 + 48);
    while (1)
    {
      uint64_t v49 = v4;
      uint64_t v17 = *(v16 - 2);
      unint64_t v18 = *(v16 - 1);
      uint64_t v38 = v16;
      uint64_t v19 = *v16;
      *(void *)&long long v44 = v10;
      *((void *)&v44 + 1) = v11;
      *(void *)&long long v45 = v9;
      *((void *)&v45 + 1) = v8;
      *(void *)&long long v46 = v7;
      *((void *)&v46 + 1) = v12;
      *(void *)&long long v47 = v13;
      *((void *)&v47 + 1) = v14;
      uint64_t v48 = v15;
      swift_beginAccess();
      if (*(void *)(v19 + 24))
      {
        sub_1C8D88850();
        sub_1C8CA3CF8(v17, v18);
        swift_retain_n();
        swift_bridgeObjectRetain();
        sub_1C8D883C0();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1C8CA3CF8(v17, v18);
        swift_retain_n();
      }
      uint64_t v20 = v17;
      unint64_t v21 = v18;
      swift_beginAccess();
      if ((*(unsigned char *)(v19 + 36) & 1) == 0)
      {
        sub_1C8D88850();
        sub_1C8D88880();
      }
      swift_beginAccess();
      uint64_t v22 = *(void *)(v19 + 40);
      if (!v22) {
        goto LABEL_22;
      }
      uint64_t v23 = *(void *)(v19 + 48);
      unint64_t v24 = *(void *)(v19 + 56);
      uint64_t v25 = *(void *)(v19 + 64);
      int v26 = *(unsigned __int8 *)(v19 + 72);
      sub_1C8D88850();
      long long v39 = v44;
      long long v40 = v45;
      long long v41 = v46;
      long long v42 = v47;
      uint64_t v43 = v48;
      if (v26 != 2)
      {
        sub_1C8D88850();
        sub_1C8D88860();
      }
      uint64_t v27 = *(void *)(v22 + 16);
      swift_bridgeObjectRetain();
      sub_1C8CA3CF8(v23, v24);
      swift_bridgeObjectRetain();
      if (!v27) {
        break;
      }
      uint64_t v28 = v36;
      sub_1C8D1A5FC(v22);
      if (!v36) {
        goto LABEL_19;
      }
      MEMORY[0x1CB7736A0](v36);
      uint64_t v36 = 0;
      unint64_t v16 = v38;
LABEL_21:
      sub_1C8CEF708(v22, v23, v24);
      long long v44 = v39;
      long long v45 = v40;
      long long v46 = v41;
      long long v47 = v42;
      uint64_t v48 = v43;
LABEL_22:
      swift_release();
      switch(v21 >> 62)
      {
        case 1uLL:
          if ((int)v20 != v20 >> 32) {
            goto LABEL_4;
          }
          break;
        case 2uLL:
          if (*(void *)(v20 + 16) != *(void *)(v20 + 24)) {
            goto LABEL_4;
          }
          break;
        case 3uLL:
          break;
        default:
          if ((v21 & 0xFF000000000000) != 0) {
LABEL_4:
          }
            sub_1C8D881D0();
          break;
      }
      sub_1C8CA3D5C(v20, v21);
      swift_release();
      uint64_t v11 = *((void *)&v44 + 1);
      uint64_t v10 = v44;
      uint64_t v8 = *((void *)&v45 + 1);
      uint64_t v9 = v45;
      uint64_t v12 = *((void *)&v46 + 1);
      uint64_t v7 = v46;
      uint64_t v14 = *((void *)&v47 + 1);
      uint64_t v13 = v47;
      v16 += 3;
      uint64_t v15 = v48;
      uint64_t v4 = v49 - 1;
      if (v49 == 1)
      {
        uint64_t v31 = v48;
        uint64_t v32 = *((void *)&v47 + 1);
        uint64_t v33 = v47;
        uint64_t v34 = *((void *)&v46 + 1);
        uint64_t result = swift_bridgeObjectRelease();
        *uint64_t v35 = v10;
        v35[1] = v11;
        v35[2] = v9;
        v35[3] = v8;
        v35[4] = v7;
        v35[5] = v34;
        v35[6] = v33;
        v35[7] = v32;
        v35[8] = v31;
        return result;
      }
    }
    uint64_t v28 = v36;
LABEL_19:
    sub_1C8D3D3BC((uint64_t)&v39, 1000, 0x20000000, v25);
    unint64_t v16 = v38;
    if (v28)
    {
      MEMORY[0x1CB7736A0](v28);
      uint64_t v36 = 0;
    }
    else
    {
      uint64_t v36 = 0;
      switch(v24 >> 62)
      {
        case 1uLL:
          uint64_t v29 = (int)v23;
          uint64_t v30 = v23 >> 32;
          goto LABEL_32;
        case 2uLL:
          uint64_t v29 = *(void *)(v23 + 16);
          uint64_t v30 = *(void *)(v23 + 24);
LABEL_32:
          if (v29 != v30) {
            goto LABEL_33;
          }
          goto LABEL_21;
        case 3uLL:
          goto LABEL_21;
        default:
          if ((v24 & 0xFF000000000000) == 0) {
            goto LABEL_21;
          }
LABEL_33:
          sub_1C8D881D0();
          break;
      }
    }
    goto LABEL_21;
  }
  return result;
}

uint64_t sub_1C8D1C024(uint64_t a1, uint64_t a2)
{
  return sub_1C8D1CC54(a1, a2, (void (*)(uint64_t, uint64_t *))sub_1C8D6D5E4);
}

uint64_t sub_1C8D1C050(uint64_t a1)
{
  uint64_t result = sub_1C8D88850();
  if (*(void *)(a1 + 16))
  {
    uint64_t v22 = *(void *)(a1 + 16);
    uint64_t v17 = v1;
    uint64_t v4 = v1[7];
    uint64_t v18 = v1[8];
    uint64_t v6 = v1[5];
    uint64_t v5 = v1[6];
    uint64_t v7 = v1[3];
    uint64_t v8 = v1[4];
    uint64_t v10 = v1[1];
    uint64_t v9 = v1[2];
    uint64_t v11 = *v1;
    swift_bridgeObjectRetain();
    uint64_t v12 = v5;
    uint64_t v13 = v18;
    uint64_t v14 = (char *)(a1 + 60);
    do
    {
      uint64_t v15 = *(void *)(v14 - 28);
      unint64_t v19 = *(void *)(v14 - 20);
      char v16 = *v14;
      uint64_t v20 = v12;
      uint64_t v21 = v13;
      if ((*(v14 - 8) & 1) == 0)
      {
        sub_1C8D88850();
        sub_1C8D88880();
      }
      if ((v16 & 1) == 0)
      {
        sub_1C8D88850();
        sub_1C8D88880();
      }
      switch(v19 >> 62)
      {
        case 1uLL:
          if ((int)v15 != v15 >> 32) {
            goto LABEL_15;
          }
          break;
        case 2uLL:
          if (*(void *)(v15 + 16) != *(void *)(v15 + 24))
          {
LABEL_15:
            sub_1C8CA3CF8(v15, v19);
            goto LABEL_4;
          }
          break;
        case 3uLL:
          goto LABEL_5;
        default:
          if ((v19 & 0xFF000000000000) != 0)
          {
LABEL_4:
            sub_1C8CA3CF8(v15, v19);
            sub_1C8D881D0();
            sub_1C8CA3D5C(v15, v19);
          }
LABEL_5:
          sub_1C8CA3D5C(v15, v19);
          break;
      }
      uint64_t v12 = v20;
      v14 += 32;
      uint64_t v13 = v21;
      --v22;
    }
    while (v22);
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v17 = v11;
    v17[1] = v10;
    v17[2] = v9;
    v17[3] = v7;
    v17[4] = v8;
    v17[5] = v6;
    v17[6] = v20;
    v17[7] = v4;
    v17[8] = v21;
  }
  return result;
}

uint64_t sub_1C8D1C264(uint64_t a1)
{
  uint64_t result = sub_1C8D88850();
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v48 = v1[8];
    uint64_t v5 = v1[6];
    uint64_t v36 = v1[7];
    uint64_t v6 = v1[4];
    uint64_t v7 = v1[5];
    uint64_t v9 = v1[2];
    uint64_t v8 = v1[3];
    uint64_t v10 = *v1;
    uint64_t v11 = v1[1];
    uint64_t v34 = v1;
    swift_bridgeObjectRetain();
    uint64_t v12 = v7;
    uint64_t v13 = v5;
    uint64_t v14 = v36;
    uint64_t v15 = v48;
    char v16 = (void *)(a1 + 48);
    while (1)
    {
      uint64_t v48 = v4;
      uint64_t v18 = *(v16 - 2);
      unint64_t v17 = *(v16 - 1);
      uint64_t v37 = v16;
      unint64_t v19 = (void *)*v16;
      *(void *)&long long v43 = v10;
      *((void *)&v43 + 1) = v11;
      *(void *)&long long v44 = v9;
      *((void *)&v44 + 1) = v8;
      *(void *)&long long v45 = v6;
      *((void *)&v45 + 1) = v12;
      *(void *)&long long v46 = v13;
      *((void *)&v46 + 1) = v14;
      uint64_t v47 = v15;
      swift_beginAccess();
      if (v19[3])
      {
        sub_1C8D88850();
        sub_1C8CA3CF8(v18, v17);
        swift_retain_n();
        swift_bridgeObjectRetain();
        sub_1C8D883C0();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1C8CA3CF8(v18, v17);
        swift_retain_n();
      }
      uint64_t v20 = v18;
      unint64_t v21 = v17;
      swift_beginAccess();
      uint64_t v22 = v19[4];
      if (!v22) {
        goto LABEL_18;
      }
      uint64_t v24 = v19[5];
      unint64_t v23 = v19[6];
      uint64_t v25 = v19[7];
      sub_1C8D88850();
      long long v38 = v43;
      long long v39 = v44;
      long long v40 = v45;
      long long v41 = v46;
      uint64_t v42 = v47;
      uint64_t v26 = *(void *)(v22 + 16);
      swift_bridgeObjectRetain();
      sub_1C8CA3CF8(v24, v23);
      swift_bridgeObjectRetain();
      if (!v26) {
        break;
      }
      uint64_t v27 = v35;
      sub_1C8D1A5FC(v22);
      if (!v35) {
        goto LABEL_15;
      }
      MEMORY[0x1CB7736A0](v35);
      uint64_t v35 = 0;
      char v16 = v37;
LABEL_17:
      sub_1C8CEF708(v22, v24, v23);
      long long v43 = v38;
      long long v44 = v39;
      long long v45 = v40;
      long long v46 = v41;
      uint64_t v47 = v42;
LABEL_18:
      swift_release();
      switch(v21 >> 62)
      {
        case 1uLL:
          if ((int)v20 != v20 >> 32) {
            goto LABEL_4;
          }
          break;
        case 2uLL:
          if (*(void *)(v20 + 16) != *(void *)(v20 + 24)) {
            goto LABEL_4;
          }
          break;
        case 3uLL:
          break;
        default:
          if ((v21 & 0xFF000000000000) != 0) {
LABEL_4:
          }
            sub_1C8D881D0();
          break;
      }
      sub_1C8CA3D5C(v20, v21);
      swift_release();
      uint64_t v11 = *((void *)&v43 + 1);
      uint64_t v10 = v43;
      uint64_t v8 = *((void *)&v44 + 1);
      uint64_t v9 = v44;
      uint64_t v12 = *((void *)&v45 + 1);
      uint64_t v6 = v45;
      uint64_t v14 = *((void *)&v46 + 1);
      uint64_t v13 = v46;
      v16 += 3;
      uint64_t v15 = v47;
      uint64_t v4 = v48 - 1;
      if (v48 == 1)
      {
        uint64_t v30 = v47;
        uint64_t v31 = *((void *)&v46 + 1);
        uint64_t v32 = v46;
        uint64_t v33 = *((void *)&v45 + 1);
        uint64_t result = swift_bridgeObjectRelease();
        *uint64_t v34 = v10;
        v34[1] = v11;
        v34[2] = v9;
        v34[3] = v8;
        v34[4] = v6;
        v34[5] = v33;
        v34[6] = v32;
        v34[7] = v31;
        v34[8] = v30;
        return result;
      }
    }
    uint64_t v27 = v35;
LABEL_15:
    sub_1C8D3D3BC((uint64_t)&v38, 1000, 0x20000000, v25);
    char v16 = v37;
    if (v27)
    {
      MEMORY[0x1CB7736A0](v27);
      uint64_t v35 = 0;
    }
    else
    {
      uint64_t v35 = 0;
      switch(v23 >> 62)
      {
        case 1uLL:
          uint64_t v28 = (int)v24;
          uint64_t v29 = v24 >> 32;
          goto LABEL_28;
        case 2uLL:
          uint64_t v28 = *(void *)(v24 + 16);
          uint64_t v29 = *(void *)(v24 + 24);
LABEL_28:
          if (v28 != v29) {
            goto LABEL_29;
          }
          goto LABEL_17;
        case 3uLL:
          goto LABEL_17;
        default:
          if ((v23 & 0xFF000000000000) == 0) {
            goto LABEL_17;
          }
LABEL_29:
          sub_1C8D881D0();
          break;
      }
    }
    goto LABEL_17;
  }
  return result;
}

uint64_t sub_1C8D1C5FC(uint64_t a1)
{
  uint64_t result = sub_1C8D88850();
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v5 = v1[7];
    uint64_t v40 = v1[8];
    uint64_t v7 = v1[5];
    uint64_t v6 = v1[6];
    uint64_t v8 = v1[3];
    uint64_t v9 = v1[4];
    uint64_t v11 = v1[1];
    uint64_t v10 = v1[2];
    uint64_t v25 = v1;
    uint64_t v12 = *v1;
    swift_bridgeObjectRetain();
    uint64_t v13 = v40;
    uint64_t v14 = (void *)(a1 + 48);
    while (1)
    {
      uint64_t v40 = v4;
      uint64_t v15 = *v14;
      uint64_t v27 = *(v14 - 2);
      unint64_t v28 = *(v14 - 1);
      uint64_t v29 = v14;
      *(void *)&long long v35 = v12;
      *((void *)&v35 + 1) = v11;
      *(void *)&long long v36 = v10;
      *((void *)&v36 + 1) = v8;
      *(void *)&long long v37 = v9;
      *((void *)&v37 + 1) = v7;
      *(void *)&long long v38 = v6;
      *((void *)&v38 + 1) = v5;
      uint64_t v39 = v13;
      swift_beginAccess();
      if ((*(unsigned char *)(v15 + 20) & 1) == 0)
      {
        sub_1C8D88850();
        sub_1C8D88880();
      }
      swift_beginAccess();
      if ((*(unsigned char *)(v15 + 28) & 1) == 0)
      {
        sub_1C8D88850();
        sub_1C8D88880();
      }
      swift_beginAccess();
      uint64_t v16 = *(void *)(v15 + 32);
      if (v16) {
        break;
      }
      sub_1C8CA3CF8(v27, v28);
      swift_retain_n();
LABEL_19:
      swift_release();
      switch(v28 >> 62)
      {
        case 1uLL:
          if ((int)v27 != v27 >> 32) {
            goto LABEL_4;
          }
          break;
        case 2uLL:
          if (*(void *)(v27 + 16) != *(void *)(v27 + 24)) {
            goto LABEL_4;
          }
          break;
        case 3uLL:
          break;
        default:
          if ((v28 & 0xFF000000000000) != 0) {
LABEL_4:
          }
            sub_1C8D881D0();
          break;
      }
      sub_1C8CA3D5C(v27, v28);
      swift_release();
      uint64_t v11 = *((void *)&v35 + 1);
      uint64_t v12 = v35;
      uint64_t v8 = *((void *)&v36 + 1);
      uint64_t v10 = v36;
      uint64_t v7 = *((void *)&v37 + 1);
      uint64_t v9 = v37;
      uint64_t v5 = *((void *)&v38 + 1);
      uint64_t v6 = v38;
      uint64_t v14 = v29 + 3;
      uint64_t v13 = v39;
      uint64_t v4 = v40 - 1;
      if (v40 == 1)
      {
        uint64_t v24 = v39;
        uint64_t result = swift_bridgeObjectRelease();
        *uint64_t v25 = v12;
        v25[1] = v11;
        v25[2] = v10;
        v25[3] = v8;
        v25[4] = v9;
        v25[5] = v7;
        v25[6] = v6;
        v25[7] = v5;
        v25[8] = v24;
        return result;
      }
    }
    uint64_t v18 = *(void *)(v15 + 40);
    unint64_t v17 = *(void *)(v15 + 48);
    uint64_t v19 = *(void *)(v15 + 56);
    sub_1C8D88850();
    long long v30 = v35;
    long long v31 = v36;
    long long v32 = v37;
    long long v33 = v38;
    uint64_t v34 = v39;
    uint64_t v20 = *(void *)(v16 + 16);
    sub_1C8CA3CF8(v27, v28);
    swift_retain_n();
    sub_1C8CEF6AC(v16, v18, v17);
    if (v20)
    {
      uint64_t v21 = v26;
      sub_1C8D1A5FC(v16);
      if (v26) {
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t v21 = v26;
    }
    sub_1C8D3D3BC((uint64_t)&v30, 1000, 0x20000000, v19);
    if (!v21)
    {
      uint64_t v26 = 0;
      switch(v17 >> 62)
      {
        case 1uLL:
          uint64_t v22 = (int)v18;
          uint64_t v23 = v18 >> 32;
          goto LABEL_29;
        case 2uLL:
          uint64_t v22 = *(void *)(v18 + 16);
          uint64_t v23 = *(void *)(v18 + 24);
LABEL_29:
          if (v22 != v23) {
            goto LABEL_30;
          }
          goto LABEL_18;
        case 3uLL:
          goto LABEL_18;
        default:
          if ((v17 & 0xFF000000000000) == 0) {
            goto LABEL_18;
          }
LABEL_30:
          sub_1C8D881D0();
          break;
      }
      goto LABEL_18;
    }
LABEL_17:
    MEMORY[0x1CB7736A0](v21);
    uint64_t v26 = 0;
LABEL_18:
    sub_1C8CEF708(v16, v18, v17);
    long long v35 = v30;
    long long v36 = v31;
    long long v37 = v32;
    long long v38 = v33;
    uint64_t v39 = v34;
    goto LABEL_19;
  }
  return result;
}

uint64_t sub_1C8D1C97C(uint64_t a1)
{
  uint64_t result = sub_1C8D88850();
  uint64_t v22 = *(void *)(a1 + 16);
  if (v22)
  {
    uint64_t v20 = v1;
    uint64_t v5 = *v1;
    uint64_t v4 = v1[1];
    uint64_t v6 = v1[2];
    uint64_t v7 = v1[3];
    uint64_t v9 = v1[4];
    uint64_t v8 = v1[5];
    uint64_t v11 = v1[6];
    uint64_t v10 = v1[7];
    uint64_t v21 = a1 + 32;
    uint64_t v12 = v1[8];
    swift_bridgeObjectRetain();
    uint64_t v13 = 0;
    do
    {
      uint64_t v14 = (uint64_t *)(v21 + 56 * v13);
      uint64_t v25 = v14[1];
      unint64_t v26 = v14[2];
      uint64_t v27 = v14[4];
      char v23 = *((unsigned char *)v14 + 44);
      char v24 = *((unsigned char *)v14 + 52);
      uint64_t v28 = v4;
      uint64_t v29 = v6;
      uint64_t v30 = v7;
      uint64_t v31 = v8;
      uint64_t v15 = *v14;
      uint64_t v16 = *(void *)(*v14 + 16);
      if (v16)
      {
        sub_1C8D88850();
        sub_1C8D88850();
        uint64_t v17 = v15 + 32;
        do
        {
          v17 += 4;
          sub_1C8D88870();
          --v16;
        }
        while (v16);
      }
      if (v27)
      {
        sub_1C8D88850();
        swift_bridgeObjectRetain();
        uint64_t v19 = v25;
        unint64_t v18 = v26;
        sub_1C8CA3CF8(v25, v26);
        swift_bridgeObjectRetain();
        sub_1C8D883C0();
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v19 = v25;
        unint64_t v18 = v26;
        sub_1C8CA3CF8(v25, v26);
      }
      if ((v23 & 1) == 0)
      {
        sub_1C8D88850();
        sub_1C8D88880();
      }
      if ((v24 & 1) == 0)
      {
        sub_1C8D88850();
        sub_1C8D88880();
      }
      ++v13;
      switch(v18 >> 62)
      {
        case 1uLL:
          if ((int)v19 != v19 >> 32) {
            goto LABEL_4;
          }
          break;
        case 2uLL:
          if (*(void *)(v19 + 16) != *(void *)(v19 + 24)) {
            goto LABEL_4;
          }
          break;
        case 3uLL:
          break;
        default:
          if ((v18 & 0xFF000000000000) != 0) {
LABEL_4:
          }
            sub_1C8D881D0();
          break;
      }
      swift_bridgeObjectRelease();
      sub_1C8CA3D5C(v19, v18);
      swift_bridgeObjectRelease();
      uint64_t v4 = v28;
      uint64_t v6 = v29;
      uint64_t v7 = v30;
      uint64_t v8 = v31;
    }
    while (v13 != v22);
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v20 = v5;
    v20[1] = v28;
    v20[2] = v29;
    v20[3] = v30;
    v20[4] = v9;
    v20[5] = v31;
    v20[6] = v11;
    v20[7] = v10;
    v20[8] = v12;
  }
  return result;
}

uint64_t sub_1C8D1CC28(uint64_t a1, uint64_t a2)
{
  return sub_1C8D1CC54(a1, a2, (void (*)(uint64_t, uint64_t *))sub_1C8D6CB74);
}

uint64_t sub_1C8D1CC54(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t *))
{
  uint64_t v5 = v4;
  uint64_t result = sub_1C8D88850();
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    uint64_t v45 = v5;
    uint64_t v9 = v3[6];
    uint64_t v32 = v3[7];
    uint64_t v33 = v3[8];
    uint64_t v10 = v3[4];
    uint64_t v11 = v3[5];
    uint64_t v13 = v3[2];
    uint64_t v12 = v3[3];
    uint64_t v14 = *v3;
    uint64_t v15 = v3[1];
    uint64_t v34 = v3;
    swift_bridgeObjectRetain();
    uint64_t v16 = v9;
    uint64_t v17 = v32;
    uint64_t v18 = v33;
    uint64_t v19 = a1 + 48;
    do
    {
      uint64_t v20 = v8;
      uint64_t v21 = *(void *)(v19 - 16);
      unint64_t v22 = *(void *)(v19 - 8);
      uint64_t v36 = v14;
      uint64_t v37 = v15;
      uint64_t v23 = v21;
      unint64_t v24 = v22;
      uint64_t v38 = v13;
      uint64_t v39 = v12;
      uint64_t v40 = v10;
      uint64_t v41 = v11;
      uint64_t v42 = v16;
      uint64_t v43 = v17;
      uint64_t v44 = v18;
      sub_1C8CA3CF8(v21, v22);
      uint64_t v25 = swift_retain_n();
      uint64_t v26 = v45;
      a3(v25, &v36);
      if (v26)
      {
        swift_release();
        MEMORY[0x1CB7736A0](v26);
      }
      else
      {
        swift_release();
        switch(v24 >> 62)
        {
          case 1uLL:
            uint64_t v27 = (int)v23;
            uint64_t v28 = v23 >> 32;
            goto LABEL_11;
          case 2uLL:
            uint64_t v27 = *(void *)(v23 + 16);
            uint64_t v28 = *(void *)(v23 + 24);
LABEL_11:
            if (v27 != v28) {
              goto LABEL_12;
            }
            break;
          case 3uLL:
            break;
          default:
            if ((v24 & 0xFF000000000000) == 0) {
              break;
            }
LABEL_12:
            sub_1C8D881D0();
            break;
        }
      }
      uint64_t v45 = 0;
      sub_1C8CA3D5C(v23, v24);
      swift_release();
      uint64_t v14 = v36;
      uint64_t v15 = v37;
      uint64_t v13 = v38;
      uint64_t v12 = v39;
      uint64_t v10 = v40;
      uint64_t v11 = v41;
      uint64_t v16 = v42;
      uint64_t v17 = v43;
      v19 += 24;
      uint64_t v18 = v44;
      uint64_t v8 = v20 - 1;
    }
    while (v20 != 1);
    uint64_t v29 = v43;
    uint64_t v30 = v44;
    uint64_t v31 = v42;
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v34 = v14;
    v34[1] = v15;
    v34[2] = v13;
    v34[3] = v12;
    v34[4] = v10;
    v34[5] = v11;
    v34[6] = v31;
    v34[7] = v29;
    v34[8] = v30;
  }
  return result;
}

double sub_1C8D1CE40(long long *a1)
{
  return sub_1C8CBC9C4(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16));
}

double Message.hash(into:)(long long *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *((void *)a1 + 8);
  long long v5 = a1[1];
  long long v11 = *a1;
  long long v12 = v5;
  long long v6 = a1[3];
  long long v13 = a1[2];
  long long v14 = v6;
  uint64_t v15 = v4;
  (*(void (**)(long long *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(a3 + 72))(&v11, &type metadata for HashVisitor, &off_1F2350658, a2, a3);
  uint64_t v7 = v15;
  long long v8 = v12;
  *a1 = v11;
  a1[1] = v8;
  double result = *(double *)&v13;
  long long v10 = v14;
  a1[2] = v13;
  a1[3] = v10;
  *((void *)a1 + 8) = v7;
  return result;
}

uint64_t sub_1C8D1CEEC(uint64_t a1)
{
  return sub_1C8D1D064(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_Type, (uint64_t (*)(uint64_t))sub_1C8CBC244) & 1;
}

uint64_t sub_1C8D1CF2C(uint64_t a1)
{
  long long v2 = *(_OWORD *)(v1 + 80);
  v31[4] = *(_OWORD *)(v1 + 64);
  v31[5] = v2;
  uint64_t v32 = *(void *)(v1 + 96);
  long long v3 = *(_OWORD *)(v1 + 16);
  v31[0] = *(_OWORD *)v1;
  v31[1] = v3;
  long long v4 = *(_OWORD *)(v1 + 48);
  v31[2] = *(_OWORD *)(v1 + 32);
  v31[3] = v4;
  sub_1C8CA425C(a1, (uint64_t)v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CD8);
  if (swift_dynamicCast() && v8)
  {
    v21[0] = v7;
    v21[1] = v8;
    v21[2] = v9;
    v21[3] = v10;
    char v22 = v11 & 1;
    uint64_t v23 = v12;
    uint64_t v24 = v13;
    char v25 = v14 & 1;
    uint64_t v26 = v15;
    uint64_t v27 = v16;
    char v28 = v17 & 1;
    uint64_t v29 = v18;
    unint64_t v30 = v19;
    char v5 = static Google_Protobuf_Method.== infix(_:_:)(v31, v21);
    sub_1C8D21D44(v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19);
  }
  else
  {
    char v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_1C8D1D064(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t))
{
  sub_1C8CA425C(a1, (uint64_t)v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CD8);
  if (!swift_dynamicCast() || !v15) {
    goto LABEL_7;
  }
  if (v15 != a4)
  {
    swift_retain();
    swift_retain();
    char v10 = a6(a4);
    swift_release();
    swift_release();
    if ((v10 & 1) == 0)
    {
      sub_1C8CB6084(v13, v14, v15);
LABEL_7:
      char v11 = 0;
      return v11 & 1;
    }
  }
  sub_1C8CA3CF8(a2, a3);
  sub_1C8CA3CF8(v13, v14);
  char v11 = sub_1C8D01FBC(a2, a3, v13, v14);
  sub_1C8CA3D5C(v13, v14);
  sub_1C8CA3D5C(a2, a3);
  sub_1C8CB6084(v13, v14, v15);
  return v11 & 1;
}

uint64_t sub_1C8D1D1A4(uint64_t a1)
{
  sub_1C8CA425C(a1, (uint64_t)v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CD8);
  if (!swift_dynamicCast()) {
    goto LABEL_10;
  }
  uint64_t v2 = *((void *)&v12 + 1);
  if (!*((void *)&v12 + 1)) {
    goto LABEL_10;
  }
  uint64_t v3 = v12;
  uint64_t v5 = v13;
  uint64_t v4 = v14;
  uint64_t v6 = v15;
  unint64_t v7 = v16;
  if (v12 != *(_OWORD *)v1 && (sub_1C8D887C0() & 1) == 0
    || (*(void *)(v1 + 16) != v13 || v14 != *(void *)(v1 + 24)) && (sub_1C8D887C0() & 1) == 0)
  {
    sub_1C8D21DC0(v12, *((uint64_t *)&v12 + 1), v13, v14, v15, v16);
LABEL_10:
    char v10 = 0;
    return v10 & 1;
  }
  long long v12 = *(_OWORD *)(v1 + 32);
  unint64_t v9 = *((void *)&v12 + 1);
  uint64_t v8 = v12;
  sub_1C8CC40FC((uint64_t)&v12);
  sub_1C8CA3CF8(v6, v7);
  char v10 = sub_1C8D01FBC(v8, v9, v6, v7);
  sub_1C8CA3D5C(v6, v7);
  sub_1C8CC412C((uint64_t)&v12);
  sub_1C8D21DC0(v3, v2, v5, v4, v6, v7);
  return v10 & 1;
}

uint64_t sub_1C8D1D308(uint64_t a1)
{
  long long v2 = v1[5];
  v16[4] = v1[4];
  v16[5] = v2;
  long long v3 = v1[7];
  v16[6] = v1[6];
  v16[7] = v3;
  long long v4 = v1[1];
  v16[0] = *v1;
  v16[1] = v4;
  long long v5 = v1[3];
  v16[2] = v1[2];
  v16[3] = v5;
  sub_1C8CA425C(a1, (uint64_t)v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CD8);
  if (!swift_dynamicCast())
  {
    sub_1C8D21E20(v15);
    sub_1C8CC4098((uint64_t)v15, (uint64_t)v13, &qword_1EA5671C0);
    goto LABEL_5;
  }
  nullsub_1(v13, v6, v7);
  sub_1C8CC4098((uint64_t)v13, (uint64_t)v11, &qword_1EA5671C0);
  sub_1C8CC4098((uint64_t)v11, (uint64_t)v12, &qword_1EA5671C0);
  if (sub_1C8D21E38((uint64_t)v12) == 1)
  {
LABEL_5:
    char v8 = 0;
    return v8 & 1;
  }
  sub_1C8CC4098((uint64_t)v11, (uint64_t)v10, &qword_1EA5671C0);
  v15[4] = v10[4];
  v15[5] = v10[5];
  v15[6] = v10[6];
  v15[7] = v10[7];
  v15[0] = v10[0];
  v15[1] = v10[1];
  v15[2] = v10[2];
  v15[3] = v10[3];
  char v8 = static Google_Protobuf_Field.== infix(_:_:)((uint64_t)v16, (uint64_t)v15);
  sub_1C8D21E50((uint64_t)v11);
  return v8 & 1;
}

uint64_t sub_1C8D1D450(uint64_t a1, uint64_t a2, unint64_t a3)
{
  sub_1C8CA425C(a1, (uint64_t)v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CD8);
  if (swift_dynamicCast() && v8 >> 60 != 15)
  {
    sub_1C8CA3CF8(a2, a3);
    sub_1C8D02DB8(v7, v8);
    char v5 = sub_1C8D01FBC(a2, a3, v7, v8);
    sub_1C8CAA9F0(v7, v8);
    sub_1C8CA3D5C(a2, a3);
    sub_1C8CAA9F0(v7, v8);
  }
  else
  {
    char v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_1C8D1D534(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  sub_1C8CA425C(a1, (uint64_t)v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CD8);
  if (!swift_dynamicCast() || !v11) {
    goto LABEL_7;
  }
  if (v11 != a4 && (sub_1C8D631A8(v11) & 1) == 0)
  {
    sub_1C8CB6084(v9, v10, v11);
LABEL_7:
    char v7 = 0;
    return v7 & 1;
  }
  sub_1C8CA3CF8(a2, a3);
  sub_1C8CA3CF8(v9, v10);
  char v7 = sub_1C8D01FBC(a2, a3, v9, v10);
  sub_1C8CA3D5C(v9, v10);
  sub_1C8CA3D5C(a2, a3);
  sub_1C8CB6084(v9, v10, v11);
  return v7 & 1;
}

uint64_t sub_1C8D1D63C(uint64_t a1)
{
  long long v2 = *(_OWORD *)(v1 + 80);
  v33[4] = *(_OWORD *)(v1 + 64);
  v33[5] = v2;
  v33[6] = *(_OWORD *)(v1 + 96);
  uint64_t v34 = *(void *)(v1 + 112);
  long long v3 = *(_OWORD *)(v1 + 16);
  v33[0] = *(_OWORD *)v1;
  v33[1] = v3;
  long long v4 = *(_OWORD *)(v1 + 48);
  v33[2] = *(_OWORD *)(v1 + 32);
  v33[3] = v4;
  sub_1C8CA425C(a1, (uint64_t)v22);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CD8);
  if (swift_dynamicCast() && v7)
  {
    v23[0] = v7;
    v23[1] = v8;
    v23[2] = v9;
    v23[3] = v10;
    v23[4] = v11;
    v23[5] = v12;
    char v24 = v13 & 1;
    uint64_t v25 = v14;
    char v26 = v15 & 1;
    uint64_t v27 = v16;
    char v28 = v17 & 1;
    uint64_t v29 = v18;
    unint64_t v30 = v19;
    uint64_t v31 = v20;
    uint64_t v32 = v21;
    char v5 = _s20SiriOntologyProtobuf07Google_C20_UninterpretedOptionV2eeoiySbAC_ACtFZ_0((uint64_t)v33, (uint64_t)v23);
    sub_1C8D21CC4(v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19);
  }
  else
  {
    char v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_1C8D1D790(uint64_t a1)
{
  long long v2 = *(_OWORD *)(v1 + 16);
  v13[0] = *(_OWORD *)v1;
  v13[1] = v2;
  char v14 = *(unsigned char *)(v1 + 32);
  sub_1C8CA425C(a1, (uint64_t)v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CD8);
  if (swift_dynamicCast() && v8 != 1)
  {
    v11[0] = v5;
    v11[1] = v6;
    v11[2] = v7;
    v11[3] = v8;
    char v12 = v9;
    char v3 = _s20SiriOntologyProtobuf07Google_C20_UninterpretedOptionV8NamePartV2eeoiySbAE_AEtFZ_0((uint64_t)v13, (uint64_t)v11);
    sub_1C8D21C80(v5, v6, v7, v8);
  }
  else
  {
    char v3 = 0;
  }
  return v3 & 1;
}

uint64_t sub_1C8D1D860(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t))
{
  sub_1C8CA425C(a1, (uint64_t)v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CD8);
  if (!swift_dynamicCast() || !v12) {
    goto LABEL_6;
  }
  if ((a6(a2) & 1) == 0)
  {
    sub_1C8CEF640(v12, v13, v14);
LABEL_6:
    char v10 = 0;
    return v10 & 1;
  }
  sub_1C8CA3CF8(a3, a4);
  sub_1C8CA3CF8(v13, v14);
  char v10 = sub_1C8D01FBC(a3, a4, v13, v14);
  sub_1C8CA3D5C(v13, v14);
  sub_1C8CA3D5C(a3, a4);
  sub_1C8CEF640(v12, v13, v14);
  return v10 & 1;
}

uint64_t sub_1C8D1D974(uint64_t a1)
{
  long long v2 = *(_OWORD *)(v1 + 16);
  v20[0] = *(_OWORD *)v1;
  v20[1] = v2;
  v21[0] = *(_OWORD *)(v1 + 32);
  *(void *)((char *)v21 + 13) = *(void *)(v1 + 45);
  sub_1C8CA425C(a1, (uint64_t)v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CD8);
  if (swift_dynamicCast() && v5)
  {
    v15[0] = v5;
    v15[1] = v6;
    v15[2] = v7;
    v15[3] = v8;
    v15[4] = v9;
    int v16 = v10;
    char v17 = v11 & 1;
    int v18 = v12;
    char v19 = v13 & 1;
    char v3 = _s20SiriOntologyProtobuf07Google_C18_GeneratedCodeInfoV10AnnotationV2eeoiySbAE_AEtFZ_0((uint64_t)v20, (uint64_t)v15);
    sub_1C8D21B9C(v5, v6, v7);
  }
  else
  {
    char v3 = 0;
  }
  return v3 & 1;
}

uint64_t sub_1C8D1DA88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void *, void *), void (*a8)(uint64_t, unint64_t, uint64_t, unint64_t))
{
  v23[0] = a2;
  v23[1] = a3;
  int v24 = a4;
  char v25 = BYTE4(a4) & 1;
  int v26 = a5;
  char v27 = BYTE4(a5) & 1;
  sub_1C8CA425C(a1, (uint64_t)v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CD8);
  if (swift_dynamicCast() && v13 >> 60 != 15)
  {
    v18[0] = v12;
    v18[1] = v13;
    int v19 = v14;
    char v20 = BYTE4(v14) & 1;
    unsigned int v21 = v15;
    char v22 = v16 & 1;
    char v10 = a7(v23, v18);
    a8(v12, v13, v14, v15 | ((unint64_t)v16 << 32));
  }
  else
  {
    char v10 = 0;
  }
  return v10 & 1;
}

uint64_t sub_1C8D1DB8C(uint64_t a1)
{
  long long v2 = *(_OWORD *)(v1 + 48);
  v17[2] = *(_OWORD *)(v1 + 32);
  v17[3] = v2;
  uint64_t v18 = *(void *)(v1 + 64);
  long long v3 = *(_OWORD *)(v1 + 16);
  v17[0] = *(_OWORD *)v1;
  v17[1] = v3;
  sub_1C8CA425C(a1, (uint64_t)v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CD8);
  if (swift_dynamicCast() && v6)
  {
    v16[0] = v6;
    v16[1] = v7;
    v16[2] = v8;
    v16[3] = v9;
    v16[4] = v10;
    v16[5] = v11;
    v16[6] = v12;
    v16[7] = v13;
    _OWORD v16[8] = v14;
    char v4 = _s20SiriOntologyProtobuf07Google_C15_SourceCodeInfoV8LocationV2eeoiySbAE_AEtFZ_0((uint64_t *)v17, v16);
    sub_1C8D21BF8(v6, v7, v8, v9, v10);
  }
  else
  {
    char v4 = 0;
  }
  return v4 & 1;
}

uint64_t sub_1C8D1DC90(uint64_t a1, uint64_t a2, uint64_t (*a3)(_OWORD *, void *))
{
  long long v5 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  v16[1] = v5;
  char v17 = *(unsigned char *)(v3 + 32);
  sub_1C8CA425C(a1, (uint64_t)v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CD8);
  if (swift_dynamicCast() && v8)
  {
    v14[0] = v8;
    v14[1] = v9;
    v14[2] = v10;
    v14[3] = v11;
    char v15 = v12;
    char v6 = a3(v16, v14);
    sub_1C8CEF708(v8, v9, v10);
  }
  else
  {
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_1C8D1DD64(uint64_t a1)
{
  long long v2 = *(_OWORD *)(v1 + 16);
  v13[0] = *(_OWORD *)v1;
  v13[1] = v2;
  int v14 = *(_DWORD *)(v1 + 32);
  sub_1C8CA425C(a1, (uint64_t)v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CD8);
  if (swift_dynamicCast() && v5)
  {
    v11[0] = v5;
    v11[1] = v6;
    v11[2] = v7;
    v11[3] = v8;
    int v12 = v9;
    char v3 = static Google_Protobuf_MessageOptions.== infix(_:_:)((uint64_t)v13, (uint64_t)v11);
    sub_1C8CEF708(v5, v6, v7);
  }
  else
  {
    char v3 = 0;
  }
  return v3 & 1;
}

uint64_t sub_1C8D1DE48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void *, void *))
{
  v16[0] = a2;
  v16[1] = a3;
  _OWORD v16[2] = a4;
  v16[3] = a5;
  sub_1C8CA425C(a1, (uint64_t)v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CD8);
  if (swift_dynamicCast() && v10)
  {
    v15[0] = v10;
    v15[1] = v11;
    v15[2] = v12;
    v15[3] = v13;
    char v8 = a7(v16, v15);
    sub_1C8CEF708(v10, v11, v12);
  }
  else
  {
    char v8 = 0;
  }
  return v8 & 1;
}

uint64_t sub_1C8D1DF08(uint64_t a1)
{
  long long v2 = v1[1];
  long long v19 = *v1;
  v20[0] = v2;
  *(void *)((char *)v20 + 14) = *(void *)((char *)v1 + 30);
  sub_1C8CA425C(a1, (uint64_t)v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CD8);
  if (swift_dynamicCast() && v8)
  {
    v15[0] = v8;
    v15[1] = v9;
    v15[2] = v10;
    v15[3] = v11;
    char v16 = v12;
    v3.i64[0] = 0xFFFFFFFFFFFFLL;
    v3.i64[1] = 0xFFFFFFFFFFFFLL;
    uint64x2_t v4 = (uint64x2_t)vandq_s8((int8x16_t)vdupq_n_s64(v12 | ((unint64_t)v13 << 32)), v3);
    int16x8_t v5 = (int16x8_t)vshlq_u64(v4, (uint64x2_t)xmmword_1C8D8BED0);
    *(int32x2_t *)v4.i8 = vmovn_s64((int64x2_t)vshlq_u64(v4, (uint64x2_t)xmmword_1C8D8BEC0));
    *(int32x2_t *)v5.i8 = vmovn_s64((int64x2_t)v5);
    v5.i16[1] = v5.i16[2];
    v5.i16[2] = v4.i16[0];
    v5.i16[3] = v4.i16[2];
    unsigned __int32 v17 = vmovn_s16(v5).u32[0];
    char v18 = HIBYTE(v13);
    char v6 = static Google_Protobuf_FieldOptions.== infix(_:_:)((uint64_t)&v19, (uint64_t)v15);
    sub_1C8CEF708(v8, v9, v10);
  }
  else
  {
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_1C8D1E034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  sub_1C8CA425C(a1, (uint64_t)v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CD8);
  if (!swift_dynamicCast() || !v12) {
    goto LABEL_8;
  }
  if ((v11 != a2 || v12 != a3) && (sub_1C8D887C0() & 1) == 0)
  {
    sub_1C8CC1EF8(v11, v12, v13, v14);
LABEL_8:
    char v9 = 0;
    return v9 & 1;
  }
  sub_1C8CA3CF8(a4, a5);
  sub_1C8CA3CF8(v13, v14);
  char v9 = sub_1C8D01FBC(a4, a5, v13, v14);
  sub_1C8CA3D5C(v13, v14);
  sub_1C8CA3D5C(a4, a5);
  sub_1C8CC1EF8(v11, v12, v13, v14);
  return v9 & 1;
}

uint64_t sub_1C8D1E16C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v13[0] = a2;
  v13[1] = a3;
  _OWORD v13[2] = a4;
  v13[3] = a5;
  sub_1C8CA425C(a1, (uint64_t)v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CD8);
  if (swift_dynamicCast() && v9)
  {
    v12[0] = v7;
    v12[1] = v8;
    v12[2] = v9;
    v12[3] = v10;
    char v5 = static Google_Protobuf_FileOptions.== infix(_:_:)(v13, v12);
    sub_1C8CEF5AC(v7, v8, v9);
  }
  else
  {
    char v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_1C8D1E224(uint64_t a1, uint64_t a2, uint64_t (*a3)(_OWORD *, void *))
{
  long long v5 = *(_OWORD *)(v3 + 16);
  v16[0] = *(_OWORD *)v3;
  v16[1] = v5;
  __int16 v17 = *(_WORD *)(v3 + 32);
  sub_1C8CA425C(a1, (uint64_t)v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CD8);
  if (swift_dynamicCast() && v8)
  {
    v14[0] = v8;
    v14[1] = v9;
    v14[2] = v10;
    v14[3] = v11;
    __int16 v15 = v12;
    char v6 = a3(v16, v14);
    sub_1C8CEF708(v8, v9, v10);
  }
  else
  {
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_1C8D1E300(uint64_t a1, uint64_t a2, unint64_t a3, double a4)
{
  sub_1C8CA425C(a1, (uint64_t)v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CD8);
  if (!swift_dynamicCast() || v11 >> 60 == 15) {
    goto LABEL_6;
  }
  if (*(double *)&v9 != a4)
  {
    sub_1C8D21B2C(v9, v10, v11);
LABEL_6:
    char v7 = 0;
    return v7 & 1;
  }
  sub_1C8CA3CF8(a2, a3);
  sub_1C8D21B48(v9, v10, v11);
  char v7 = sub_1C8D01FBC(a2, a3, v10, v11);
  sub_1C8D21B2C(v9, v10, v11);
  sub_1C8CA3D5C(a2, a3);
  sub_1C8D21B2C(v9, v10, v11);
  return v7 & 1;
}

uint64_t sub_1C8D1E418(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, void (*a6)(uint64_t), void (*a7)())
{
  sub_1C8CA425C(a1, (uint64_t)v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CD8);
  if (!swift_dynamicCast() || v16 >> 60 == 15) {
    goto LABEL_6;
  }
  if (v14 != a2)
  {
    a7();
LABEL_6:
    char v12 = 0;
    return v12 & 1;
  }
  sub_1C8CA3CF8(a3, a4);
  a6(a2);
  char v12 = sub_1C8D01FBC(a3, a4, v15, v16);
  ((void (*)(uint64_t))a7)(a2);
  sub_1C8CA3D5C(a3, a4);
  ((void (*)(uint64_t))a7)(a2);
  return v12 & 1;
}

uint64_t sub_1C8D1E540(uint64_t a1, int a2, uint64_t a3, unint64_t a4, uint64_t a5, void (*a6)(), void (*a7)())
{
  sub_1C8CA425C(a1, (uint64_t)v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CD8);
  if (!swift_dynamicCast() || v16 >> 60 == 15) {
    goto LABEL_6;
  }
  if (v14 != a2)
  {
    a7();
LABEL_6:
    char v12 = 0;
    return v12 & 1;
  }
  sub_1C8CA3CF8(a3, a4);
  a6();
  char v12 = sub_1C8D01FBC(a3, a4, v15, v16);
  a7();
  sub_1C8CA3D5C(a3, a4);
  a7();
  return v12 & 1;
}

uint64_t sub_1C8D1E66C(uint64_t a1, uint64_t a2, unint64_t a3, float a4)
{
  sub_1C8CA425C(a1, (uint64_t)v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CD8);
  if (!swift_dynamicCast() || v11 >> 60 == 15) {
    goto LABEL_6;
  }
  if (*(float *)&v9 != a4)
  {
    sub_1C8D21B2C(v9, v10, v11);
LABEL_6:
    char v7 = 0;
    return v7 & 1;
  }
  sub_1C8CA3CF8(a2, a3);
  sub_1C8D21B48(v9, v10, v11);
  char v7 = sub_1C8D01FBC(a2, a3, v10, v11);
  sub_1C8D21B2C(v9, v10, v11);
  sub_1C8CA3D5C(a2, a3);
  sub_1C8D21B2C(v9, v10, v11);
  return v7 & 1;
}

uint64_t sub_1C8D1E784(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  sub_1C8CA425C(a1, (uint64_t)v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CD8);
  if (!swift_dynamicCast() || v12 >> 60 == 15) {
    goto LABEL_6;
  }
  if ((sub_1C8D01FBC(a2, a3, v11, v12) & 1) == 0)
  {
    sub_1C8D21AA4(v11, v12, v13, v14);
LABEL_6:
    char v9 = 0;
    return v9 & 1;
  }
  sub_1C8CA3CF8(a4, a5);
  sub_1C8CA3CF8(v13, v14);
  char v9 = sub_1C8D01FBC(a4, a5, v13, v14);
  sub_1C8CA3D5C(v13, v14);
  sub_1C8CA3D5C(a4, a5);
  sub_1C8D21AA4(v11, v12, v13, v14);
  return v9 & 1;
}

uint64_t sub_1C8D1E8B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, unint64_t a5, uint64_t a6, void (*a7)(uint64_t), void (*a8)(uint64_t))
{
  sub_1C8CA425C(a1, (uint64_t)v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CD8);
  if (!swift_dynamicCast() || v20 >> 60 == 15) {
    goto LABEL_8;
  }
  uint64_t v14 = v17;
  if (v17 != a2)
  {
LABEL_7:
    a7(v14);
LABEL_8:
    char v15 = 0;
    return v15 & 1;
  }
  if (v18 != a3)
  {
    uint64_t v14 = a2;
    goto LABEL_7;
  }
  sub_1C8CA3CF8(a4, a5);
  a8(a2);
  char v15 = sub_1C8D01FBC(a4, a5, v19, v20);
  a7(a2);
  sub_1C8CA3D5C(a4, a5);
  a7(a2);
  return v15 & 1;
}

uint64_t sub_1C8D1EA04(uint64_t a1)
{
  sub_1C8CA425C(a1, (uint64_t)v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CD8);
  if (!swift_dynamicCast()) {
    goto LABEL_9;
  }
  uint64_t v2 = *((void *)&v12 + 1);
  if (!*((void *)&v12 + 1)) {
    goto LABEL_9;
  }
  uint64_t v3 = v12;
  uint64_t v5 = v13;
  uint64_t v4 = v14;
  uint64_t v7 = v15;
  unint64_t v6 = v16;
  if (v12 != *(_OWORD *)v1 && (sub_1C8D887C0() & 1) == 0
    || *(_DWORD *)(v1 + 16) != v13
    || (sub_1C8CF9F50(*(void *)(v1 + 24), v14) & 1) == 0)
  {
    sub_1C8D21DC0(v12, *((uint64_t *)&v12 + 1), v13, v14, v15, v16);
LABEL_9:
    char v10 = 0;
    return v10 & 1;
  }
  long long v12 = *(_OWORD *)(v1 + 32);
  unint64_t v9 = *((void *)&v12 + 1);
  uint64_t v8 = v12;
  sub_1C8CC40FC((uint64_t)&v12);
  sub_1C8CA3CF8(v7, v6);
  char v10 = sub_1C8D01FBC(v8, v9, v7, v6);
  sub_1C8CA3D5C(v7, v6);
  sub_1C8CC412C((uint64_t)&v12);
  sub_1C8D21DC0(v3, v2, v5, v4, v7, v6);
  return v10 & 1;
}

uint64_t sub_1C8D1EB5C(uint64_t a1, char a2, uint64_t a3, unint64_t a4)
{
  sub_1C8CA425C(a1, (uint64_t)v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CD8);
  if (!swift_dynamicCast()) {
    goto LABEL_5;
  }
  if (((v9 & 1) == 0) == (a2 & 1))
  {
    sub_1C8D21AF4(v9, v10, v11);
LABEL_5:
    char v7 = 0;
    return v7 & 1;
  }
  sub_1C8CA3CF8(a3, a4);
  sub_1C8D21B10(v9, v10, v11);
  char v7 = sub_1C8D01FBC(a3, a4, v10, v11);
  sub_1C8D21AF4(v9, v10, v11);
  sub_1C8CA3D5C(a3, a4);
  sub_1C8D21AF4(v9, v10, v11);
  return v7 & 1;
}

uint64_t _MessageImplementationBase.isEqualTo(message:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C8D88620();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v4, v6);
  uint64_t v9 = &v19[-v8 - 8];
  uint64_t v10 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](v7, v11);
  uint64_t v13 = &v19[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1C8CA425C(a1, (uint64_t)v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CD8);
  int v14 = swift_dynamicCast();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  if (v14)
  {
    v15(v9, 0, 1, a2);
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v9, a2);
    char v16 = sub_1C8D882E0();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, a2);
  }
  else
  {
    v15(v9, 1, 1, a2);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
    char v16 = 0;
  }
  return v16 & 1;
}

uint64_t sub_1C8D1EE88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D1F3B8(a1, a2, a3, sub_1C8CBC244);
}

uint64_t sub_1C8D1EEA0(uint64_t a1)
{
  BOOL v3 = *(void *)v1 == *(void *)a1 && *(void *)(v1 + 8) == *(void *)(a1 + 8);
  if (v3 || (char v4 = 0, (sub_1C8D887C0() & 1) != 0))
  {
    if (*(_DWORD *)(v1 + 16) == *(_DWORD *)(a1 + 16)
      && (sub_1C8CF9F50(*(void *)(v1 + 24), *(void *)(a1 + 24)) & 1) != 0)
    {
      long long v5 = *(_OWORD *)(v1 + 32);
      long long v10 = *(_OWORD *)(a1 + 32);
      long long v11 = v5;
      long long v6 = v5;
      unint64_t v8 = *((void *)&v10 + 1);
      uint64_t v7 = v10;
      sub_1C8CC40FC((uint64_t)&v11);
      sub_1C8CC40FC((uint64_t)&v10);
      char v4 = sub_1C8D01FBC(v6, *((unint64_t *)&v6 + 1), v7, v8);
      sub_1C8CC412C((uint64_t)&v10);
      sub_1C8CC412C((uint64_t)&v11);
    }
    else
    {
      char v4 = 0;
    }
  }
  return v4 & 1;
}

uint64_t sub_1C8D1EF6C(uint64_t a1)
{
  BOOL v3 = *(void *)v1 == *(void *)a1 && *(void *)(v1 + 8) == *(void *)(a1 + 8);
  if (v3 || (char v4 = 0, (sub_1C8D887C0() & 1) != 0))
  {
    BOOL v5 = *(void *)(v1 + 16) == *(void *)(a1 + 16) && *(void *)(v1 + 24) == *(void *)(a1 + 24);
    if (v5 || (char v4 = 0, (sub_1C8D887C0() & 1) != 0))
    {
      long long v6 = *(_OWORD *)(v1 + 32);
      long long v11 = *(_OWORD *)(a1 + 32);
      long long v12 = v6;
      long long v7 = v6;
      unint64_t v9 = *((void *)&v11 + 1);
      uint64_t v8 = v11;
      sub_1C8CC40FC((uint64_t)&v12);
      sub_1C8CC40FC((uint64_t)&v11);
      char v4 = sub_1C8D01FBC(v7, *((unint64_t *)&v7 + 1), v8, v9);
      sub_1C8CC412C((uint64_t)&v11);
      sub_1C8CC412C((uint64_t)&v12);
    }
  }
  return v4 & 1;
}

uint64_t sub_1C8D1F034(long long *a1)
{
  uint64_t v3 = *((void *)v1 + 3);
  uint64_t v4 = *((void *)a1 + 3);
  if (!v3)
  {
    if (!v4) {
      goto LABEL_10;
    }
LABEL_16:
    char v6 = 0;
    return v6 & 1;
  }
  if (!v4) {
    goto LABEL_16;
  }
  BOOL v5 = *((void *)v1 + 2) == *((void *)a1 + 2) && v3 == v4;
  if (v5 || (char v6 = 0, (sub_1C8D887C0() & 1) != 0))
  {
LABEL_10:
    sub_1C8CC4098((uint64_t)(v1 + 2), (uint64_t)&v15, &qword_1EA566138);
    int v7 = *((unsigned __int8 *)a1 + 32);
    sub_1C8CC4098((uint64_t)&v15, (uint64_t)&v16, &qword_1EA566138);
    if (v16 == 2)
    {
      if (v7 != 2) {
        goto LABEL_16;
      }
    }
    else
    {
      sub_1C8CC4098((uint64_t)&v15, (uint64_t)&v14, &qword_1EA566138);
      if (v7 == 2 || ((((v7 & 1) == 0) ^ v14) & 1) == 0) {
        goto LABEL_16;
      }
    }
    long long v8 = *v1;
    long long v13 = *a1;
    long long v14 = v8;
    long long v9 = v8;
    unint64_t v11 = *((void *)&v13 + 1);
    uint64_t v10 = v13;
    sub_1C8CC40FC((uint64_t)&v14);
    sub_1C8CC40FC((uint64_t)&v13);
    char v6 = sub_1C8D01FBC(v9, *((unint64_t *)&v9 + 1), v10, v11);
    sub_1C8CC412C((uint64_t)&v13);
    sub_1C8CC412C((uint64_t)&v14);
  }
  return v6 & 1;
}

uint64_t sub_1C8D1F16C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t))
{
  if (a6 != a3)
  {
    swift_retain();
    swift_retain();
    LOBYTE(a7) = a7(a6, a3);
    swift_release();
    swift_release();
    if ((a7 & 1) == 0) {
      return 0;
    }
  }
  sub_1C8CA3CF8(a4, a5);
  sub_1C8CA3CF8(a1, a2);
  char v14 = sub_1C8D01FBC(a4, a5, a1, a2);
  sub_1C8CA3D5C(a1, a2);
  sub_1C8CA3D5C(a4, a5);
  return v14 & 1;
}

uint64_t _MessageImplementationBase._protobuf_generated_isEqualTo(other:)()
{
  return sub_1C8D882E0() & 1;
}

uint64_t sub_1C8D1F290(uint64_t a1)
{
  return sub_1C8D1D308(a1) & 1;
}

uint64_t sub_1C8D1F2E0(_OWORD *a1)
{
  long long v2 = a1[5];
  uint64_t v12[4] = a1[4];
  v12[5] = v2;
  long long v3 = a1[7];
  v12[6] = a1[6];
  v12[7] = v3;
  long long v4 = a1[1];
  v12[0] = *a1;
  v12[1] = v4;
  long long v5 = a1[3];
  v12[2] = a1[2];
  v12[3] = v5;
  long long v6 = v1[5];
  void v11[4] = v1[4];
  v11[5] = v6;
  long long v7 = v1[7];
  v11[6] = v1[6];
  v11[7] = v7;
  long long v8 = v1[1];
  v11[0] = *v1;
  v11[1] = v8;
  long long v9 = v1[3];
  v11[2] = v1[2];
  v11[3] = v9;
  return _s20SiriOntologyProtobuf07Google_C6_FieldV2eeoiySbAC_ACtFZ_0((uint64_t)v11, (uint64_t)v12) & 1;
}

double sub_1C8D1F354(long long *a1)
{
  return sub_1C8CBC9E0(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16));
}

uint64_t sub_1C8D1F360(uint64_t a1)
{
  return sub_1C8D1D064(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_Enum, (uint64_t (*)(uint64_t))sub_1C8CBFF68) & 1;
}

uint64_t sub_1C8D1F3A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D1F3B8(a1, a2, a3, sub_1C8CBFF68);
}

uint64_t sub_1C8D1F3B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  return sub_1C8D1F16C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)v4, *(void *)(v4 + 8), *(void *)(v4 + 16), a4) & 1;
}

uint64_t sub_1C8D1F3EC(uint64_t a1)
{
  return sub_1C8D1EA04(a1) & 1;
}

uint64_t sub_1C8D1F42C(_OWORD *a1)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = *v1;
  long long v4 = v1[1];
  v7[2] = a1[2];
  v7[3] = v3;
  long long v5 = v1[2];
  v7[4] = v4;
  v7[5] = v5;
  return sub_1C8D1EEA0((uint64_t)v7) & 1;
}

double sub_1C8D1F47C(long long *a1)
{
  return sub_1C8CBC868(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16));
}

uint64_t sub_1C8D1F488(uint64_t a1)
{
  return sub_1C8D1D064(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_Option, (uint64_t (*)(uint64_t))sub_1C8CC15D4) & 1;
}

uint64_t sub_1C8D1F4C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D1F3B8(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))sub_1C8CC15D4);
}

uint64_t sub_1C8D1F4E0(uint64_t a1)
{
  return sub_1C8D1D064(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_Api, (uint64_t (*)(uint64_t))sub_1C8CC84CC) & 1;
}

uint64_t sub_1C8D1F520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D1F3B8(a1, a2, a3, sub_1C8CC84CC);
}

uint64_t sub_1C8D1F538(uint64_t a1)
{
  return sub_1C8D1CF2C(a1) & 1;
}

uint64_t sub_1C8D1F588(long long *a1)
{
  uint64_t v2 = *((void *)a1 + 2);
  uint64_t v3 = *((void *)a1 + 3);
  char v4 = *((unsigned char *)a1 + 32);
  uint64_t v5 = *((void *)a1 + 5);
  uint64_t v6 = *((void *)a1 + 6);
  char v7 = *((unsigned char *)a1 + 56);
  uint64_t v8 = *((void *)a1 + 8);
  uint64_t v9 = *((void *)a1 + 9);
  char v10 = *((unsigned char *)a1 + 80);
  long long v11 = *v1;
  uint64_t v13 = *((void *)v1 + 2);
  uint64_t v12 = *((void *)v1 + 3);
  char v14 = *((unsigned char *)v1 + 32);
  uint64_t v15 = *((void *)v1 + 5);
  uint64_t v16 = *((void *)v1 + 6);
  char v17 = *((unsigned char *)v1 + 56);
  uint64_t v18 = *((void *)v1 + 8);
  uint64_t v19 = *((void *)v1 + 9);
  char v20 = *((unsigned char *)v1 + 80);
  long long v33 = *a1;
  uint64_t v34 = v2;
  uint64_t v35 = v3;
  char v36 = v4;
  uint64_t v37 = v5;
  uint64_t v38 = v6;
  char v39 = v7;
  uint64_t v40 = v8;
  uint64_t v41 = v9;
  char v42 = v10;
  long long v43 = *(long long *)((char *)a1 + 88);
  long long v22 = v11;
  uint64_t v23 = v13;
  uint64_t v24 = v12;
  char v25 = v14;
  uint64_t v26 = v15;
  uint64_t v27 = v16;
  char v28 = v17;
  uint64_t v29 = v18;
  uint64_t v30 = v19;
  char v31 = v20;
  long long v32 = *(long long *)((char *)v1 + 88);
  return _s20SiriOntologyProtobuf07Google_C7_MethodV2eeoiySbAC_ACtFZ_0((uint64_t)&v22, (uint64_t)&v33) & 1;
}

uint64_t sub_1C8D1F63C(uint64_t a1)
{
  return sub_1C8D1D1A4(a1) & 1;
}

uint64_t sub_1C8D1F67C(_OWORD *a1)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = *v1;
  long long v4 = v1[1];
  v7[2] = a1[2];
  v7[3] = v3;
  long long v5 = v1[2];
  v7[4] = v4;
  v7[5] = v5;
  return sub_1C8D1EF6C((uint64_t)v7) & 1;
}

uint64_t sub_1C8D1F6CC(uint64_t a1)
{
  return sub_1C8D1D860(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_FileDescriptorSet, (uint64_t (*)(uint64_t))sub_1C8CFB5BC) & 1;
}

uint64_t sub_1C8D1F70C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D213F8(a1, a2, a3, sub_1C8CFB5BC);
}

uint64_t sub_1C8D1F724(uint64_t a1)
{
  return sub_1C8D1D064(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_FileDescriptorProto, (uint64_t (*)(uint64_t))sub_1C8CE4814) & 1;
}

uint64_t sub_1C8D1F764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D1F3B8(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))sub_1C8CE4814);
}

uint64_t sub_1C8D1F77C(uint64_t a1)
{
  return sub_1C8D1D064(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_DescriptorProto, (uint64_t (*)(uint64_t))sub_1C8CE673C) & 1;
}

uint64_t sub_1C8D1F7BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D1F3B8(a1, a2, a3, sub_1C8CE673C);
}

double sub_1C8D1F7D4(long long *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D212B4(a1, a2, a3, (void (*)(long long *, uint64_t, uint64_t, uint64_t))sub_1C8CE73C4);
}

uint64_t sub_1C8D1F7EC(uint64_t a1)
{
  return sub_1C8D1D064(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_DescriptorProto.ExtensionRange, (uint64_t (*)(uint64_t))sub_1C8CE7900) & 1;
}

uint64_t sub_1C8D1F82C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D1F3B8(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))sub_1C8CE7900);
}

uint64_t sub_1C8D1F844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D1FA54(a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_DescriptorProto.ReservedRange, (uint64_t (*)(void *, void *))sub_1C8D026D0, (void (*)(uint64_t, unint64_t, uint64_t, unint64_t))sub_1C8CAA9F0);
}

uint64_t sub_1C8D1F878(long long *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D1FAB0(a1, a2, a3, (uint64_t (*)(long long *, long long *))sub_1C8D026D0);
}

double sub_1C8D1F890(long long *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D1FE00(a1, a2, a3, (void (*)(long long *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C8CE813C);
}

uint64_t sub_1C8D1F8A8(uint64_t a1)
{
  return sub_1C8D1DE48(a1, *v1, v1[1], v1[2], v1[3], (uint64_t)&type metadata for Google_Protobuf_ExtensionRangeOptions, static Google_Protobuf_ExtensionRangeOptions.== infix(_:_:)) & 1;
}

uint64_t sub_1C8D1F8E8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D1FEC8(a1, a2, a3, sub_1C8D02E24);
}

uint64_t sub_1C8D1F900(uint64_t a1)
{
  return sub_1C8D1D064(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_FieldDescriptorProto, (uint64_t (*)(uint64_t))sub_1C8CE92EC) & 1;
}

uint64_t sub_1C8D1F940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D1F3B8(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))sub_1C8CE92EC);
}

double sub_1C8D1F958(long long *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D212B4(a1, a2, a3, (void (*)(long long *, uint64_t, uint64_t, uint64_t))sub_1C8CEA200);
}

uint64_t sub_1C8D1F970(uint64_t a1)
{
  return sub_1C8D1D064(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_OneofDescriptorProto, (uint64_t (*)(uint64_t))sub_1C8CEA758) & 1;
}

uint64_t sub_1C8D1F9B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D1F3B8(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))sub_1C8CEA758);
}

uint64_t sub_1C8D1F9C8(uint64_t a1)
{
  return sub_1C8D1D064(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_EnumDescriptorProto, (uint64_t (*)(uint64_t))sub_1C8CEB6F0) & 1;
}

uint64_t sub_1C8D1FA08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D1F3B8(a1, a2, a3, sub_1C8CEB6F0);
}

uint64_t sub_1C8D1FA20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D1FA54(a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_EnumDescriptorProto.EnumReservedRange, (uint64_t (*)(void *, void *))sub_1C8D026D0, (void (*)(uint64_t, unint64_t, uint64_t, unint64_t))sub_1C8D21F3C);
}

uint64_t sub_1C8D1FA54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void *, void *), void (*a6)(uint64_t, unint64_t, uint64_t, unint64_t))
{
  return sub_1C8D1DA88(a1, *(void *)v6, *(void *)(v6 + 8), *(unsigned int *)(v6 + 16) | ((unint64_t)*(unsigned __int8 *)(v6 + 20) << 32), *(unsigned int *)(v6 + 24) | ((unint64_t)*(unsigned __int8 *)(v6 + 28) << 32), a4, a5, a6) & 1;
}

uint64_t sub_1C8D1FAB0(long long *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(long long *, long long *))
{
  int v5 = *((_DWORD *)a1 + 4);
  char v6 = *((unsigned char *)a1 + 20);
  int v7 = *((_DWORD *)a1 + 6);
  char v8 = *((unsigned char *)a1 + 28);
  int v9 = *((_DWORD *)v4 + 4);
  char v10 = *((unsigned char *)v4 + 20);
  int v11 = *((_DWORD *)v4 + 6);
  char v12 = *((unsigned char *)v4 + 28);
  long long v19 = *a1;
  int v20 = v5;
  char v21 = v6;
  int v22 = v7;
  char v23 = v8;
  long long v14 = *v4;
  int v15 = v9;
  char v16 = v10;
  int v17 = v11;
  char v18 = v12;
  return a4(&v14, &v19) & 1;
}

double sub_1C8D1FB30(long long *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D212B4(a1, a2, a3, (void (*)(long long *, uint64_t, uint64_t, uint64_t))sub_1C8CEC8F0);
}

uint64_t sub_1C8D1FB48(uint64_t a1)
{
  return sub_1C8D1D064(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_EnumValueDescriptorProto, (uint64_t (*)(uint64_t))sub_1C8CECD10) & 1;
}

uint64_t sub_1C8D1FB88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D1F3B8(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))sub_1C8CECD10);
}

uint64_t sub_1C8D1FBA0(uint64_t a1)
{
  return sub_1C8D1D064(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_ServiceDescriptorProto, (uint64_t (*)(uint64_t))sub_1C8CEDEA0) & 1;
}

uint64_t sub_1C8D1FBE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D1F3B8(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))sub_1C8CEDEA0);
}

uint64_t sub_1C8D1FBF8(uint64_t a1)
{
  return sub_1C8D1D064(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_MethodDescriptorProto, (uint64_t (*)(uint64_t))sub_1C8CEEDD0) & 1;
}

uint64_t sub_1C8D1FC38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D1F3B8(a1, a2, a3, sub_1C8CEEDD0);
}

uint64_t sub_1C8D1FC50(uint64_t a1)
{
  return sub_1C8D1E16C(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1C8D1FC5C(_OWORD *a1)
{
  long long v2 = a1[1];
  v6[0] = *a1;
  v6[1] = v2;
  long long v3 = v1[1];
  v5[0] = *v1;
  v5[1] = v3;
  return _s20SiriOntologyProtobuf07Google_C12_FileOptionsV2eeoiySbAC_ACtFZ_0((uint64_t *)v5, (uint64_t *)v6) & 1;
}

uint64_t sub_1C8D1FC98(uint64_t a1)
{
  return sub_1C8D1DD64(a1) & 1;
}

uint64_t sub_1C8D1FCD8(uint64_t *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = *v1;
  uint64_t v4 = v1[3];
  uint64_t v10 = *a1;
  long long v11 = *(_OWORD *)(a1 + 1);
  uint64_t v12 = v2;
  int v13 = *((_DWORD *)a1 + 8);
  uint64_t v6 = v3;
  long long v7 = *(_OWORD *)(v1 + 1);
  uint64_t v8 = v4;
  int v9 = *((_DWORD *)v1 + 8);
  return _s20SiriOntologyProtobuf07Google_C15_MessageOptionsV2eeoiySbAC_ACtFZ_0((uint64_t)&v6, (uint64_t)&v10) & 1;
}

uint64_t sub_1C8D1FD44(uint64_t a1)
{
  return sub_1C8D1DF08(a1) & 1;
}

uint64_t sub_1C8D1FD84(uint64_t *a1)
{
  uint64_t v2 = a1[3];
  __int16 v3 = *((_WORD *)a1 + 18);
  uint64_t v4 = *v1;
  uint64_t v5 = v1[3];
  __int16 v6 = *((_WORD *)v1 + 18);
  uint64_t v13 = *a1;
  long long v14 = *(_OWORD *)(a1 + 1);
  uint64_t v15 = v2;
  int v16 = *((_DWORD *)a1 + 8);
  __int16 v17 = v3;
  uint64_t v8 = v4;
  long long v9 = *(_OWORD *)(v1 + 1);
  uint64_t v10 = v5;
  int v11 = *((_DWORD *)v1 + 8);
  __int16 v12 = v6;
  return _s20SiriOntologyProtobuf07Google_C13_FieldOptionsV2eeoiySbAC_ACtFZ_0((uint64_t)&v8, (uint64_t)&v13) & 1;
}

double sub_1C8D1FE00(long long *a1, uint64_t a2, uint64_t a3, void (*a4)(long long *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *v4;
  uint64_t v8 = v4[1];
  uint64_t v9 = v4[2];
  uint64_t v10 = v4[3];
  uint64_t v11 = *((void *)a1 + 8);
  long long v12 = a1[1];
  long long v18 = *a1;
  long long v19 = v12;
  long long v13 = a1[3];
  long long v20 = a1[2];
  long long v21 = v13;
  uint64_t v22 = v11;
  a4(&v18, v7, v8, v9, v10);
  uint64_t v14 = v22;
  long long v15 = v19;
  *a1 = v18;
  a1[1] = v15;
  double result = *(double *)&v20;
  long long v17 = v21;
  a1[2] = v20;
  a1[3] = v17;
  *((void *)a1 + 8) = v14;
  return result;
}

uint64_t sub_1C8D1FE88(uint64_t a1)
{
  return sub_1C8D1DE48(a1, *v1, v1[1], v1[2], v1[3], (uint64_t)&type metadata for Google_Protobuf_OneofOptions, static Google_Protobuf_OneofOptions.== infix(_:_:)) & 1;
}

uint64_t sub_1C8D1FEC8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t *, uint64_t *))
{
  uint64_t v5 = *a1;
  uint64_t v6 = a1[3];
  uint64_t v7 = *v4;
  uint64_t v11 = v4[3];
  uint64_t v12 = v5;
  long long v13 = *(_OWORD *)(a1 + 1);
  uint64_t v14 = v6;
  uint64_t v9 = v7;
  long long v10 = *(_OWORD *)(v4 + 1);
  return a4(&v9, &v12) & 1;
}

uint64_t sub_1C8D1FF24(uint64_t a1)
{
  return sub_1C8D1E224(a1, (uint64_t)&type metadata for Google_Protobuf_EnumOptions, (uint64_t (*)(_OWORD *, void *))_s20SiriOntologyProtobuf07Google_C12_EnumOptionsV2eeoiySbAC_ACtFZ_0) & 1;
}

uint64_t sub_1C8D1FF80(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D2014C(a1, a2, a3, (uint64_t (*)(uint64_t *, uint64_t *))_s20SiriOntologyProtobuf07Google_C12_EnumOptionsV2eeoiySbAC_ACtFZ_0);
}

uint64_t sub_1C8D1FF98(uint64_t a1)
{
  return sub_1C8D1DC90(a1, (uint64_t)&type metadata for Google_Protobuf_EnumValueOptions, (uint64_t (*)(_OWORD *, void *))static Google_Protobuf_EnumValueOptions.== infix(_:_:)) & 1;
}

uint64_t sub_1C8D1FFF4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D20068(a1, a2, a3, (uint64_t (*)(uint64_t *, uint64_t *))sub_1C8D02E20);
}

uint64_t sub_1C8D2000C(uint64_t a1)
{
  return sub_1C8D1DC90(a1, (uint64_t)&type metadata for Google_Protobuf_ServiceOptions, (uint64_t (*)(_OWORD *, void *))static Google_Protobuf_ServiceOptions.== infix(_:_:)) & 1;
}

uint64_t sub_1C8D20068(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t *, uint64_t *))
{
  uint64_t v5 = a1[3];
  char v6 = *((unsigned char *)a1 + 32);
  uint64_t v7 = *v4;
  uint64_t v8 = v4[3];
  char v9 = *((unsigned char *)v4 + 32);
  uint64_t v15 = *a1;
  long long v16 = *(_OWORD *)(a1 + 1);
  uint64_t v17 = v5;
  char v18 = v6;
  uint64_t v11 = v7;
  long long v12 = *(_OWORD *)(v4 + 1);
  uint64_t v13 = v8;
  char v14 = v9;
  return a4(&v11, &v15) & 1;
}

uint64_t sub_1C8D200D8(uint64_t a1)
{
  return sub_1C8D1E224(a1, (uint64_t)&type metadata for Google_Protobuf_MethodOptions, (uint64_t (*)(_OWORD *, void *))static Google_Protobuf_MethodOptions.== infix(_:_:)) & 1;
}

uint64_t sub_1C8D20134(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D2014C(a1, a2, a3, (uint64_t (*)(uint64_t *, uint64_t *))_s20SiriOntologyProtobuf07Google_C14_MethodOptionsV2eeoiySbAC_ACtFZ_0);
}

uint64_t sub_1C8D2014C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t *, uint64_t *))
{
  uint64_t v5 = a1[3];
  __int16 v6 = *((_WORD *)a1 + 16);
  uint64_t v7 = *v4;
  uint64_t v8 = v4[3];
  __int16 v9 = *((_WORD *)v4 + 16);
  uint64_t v15 = *a1;
  long long v16 = *(_OWORD *)(a1 + 1);
  uint64_t v17 = v5;
  __int16 v18 = v6;
  uint64_t v11 = v7;
  long long v12 = *(_OWORD *)(v4 + 1);
  uint64_t v13 = v8;
  __int16 v14 = v9;
  return a4(&v11, &v15) & 1;
}

uint64_t sub_1C8D201BC(uint64_t a1)
{
  return sub_1C8D1D63C(a1) & 1;
}

uint64_t sub_1C8D20214(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[5];
  char v4 = *((unsigned char *)a1 + 48);
  uint64_t v5 = a1[7];
  char v6 = *((unsigned char *)a1 + 64);
  uint64_t v7 = a1[9];
  char v8 = *((unsigned char *)a1 + 80);
  uint64_t v9 = *v1;
  uint64_t v10 = v1[5];
  char v11 = *((unsigned char *)v1 + 48);
  uint64_t v12 = v1[7];
  char v13 = *((unsigned char *)v1 + 64);
  uint64_t v14 = v1[9];
  char v15 = *((unsigned char *)v1 + 80);
  long long v29 = *(_OWORD *)(a1 + 1);
  long long v30 = *(_OWORD *)(a1 + 3);
  uint64_t v28 = v2;
  uint64_t v31 = v3;
  char v32 = v4;
  uint64_t v33 = v5;
  char v34 = v6;
  uint64_t v35 = v7;
  char v36 = v8;
  long long v37 = *(_OWORD *)(a1 + 11);
  long long v38 = *(_OWORD *)(a1 + 13);
  uint64_t v17 = v9;
  long long v18 = *(_OWORD *)(v1 + 1);
  long long v19 = *(_OWORD *)(v1 + 3);
  uint64_t v20 = v10;
  char v21 = v11;
  uint64_t v22 = v12;
  char v23 = v13;
  uint64_t v24 = v14;
  char v25 = v15;
  long long v26 = *(_OWORD *)(v1 + 11);
  long long v27 = *(_OWORD *)(v1 + 13);
  return _s20SiriOntologyProtobuf07Google_C20_UninterpretedOptionV2eeoiySbAC_ACtFZ_0((uint64_t)&v17, (uint64_t)&v28) & 1;
}

uint64_t sub_1C8D202FC(uint64_t a1)
{
  return sub_1C8D1D790(a1) & 1;
}

uint64_t sub_1C8D2033C(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  char v6 = *(unsigned char *)(a1 + 32);
  long long v3 = v1[1];
  long long v7 = *v1;
  long long v8 = v3;
  char v9 = *((unsigned char *)v1 + 32);
  return sub_1C8D1F034(v5) & 1;
}

uint64_t sub_1C8D20390(uint64_t a1)
{
  return sub_1C8D1D860(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_SourceCodeInfo, (uint64_t (*)(uint64_t))sub_1C8CFB628) & 1;
}

uint64_t sub_1C8D203D0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D213F8(a1, a2, a3, sub_1C8CFB628);
}

uint64_t sub_1C8D203E8(uint64_t a1)
{
  return sub_1C8D1DB8C(a1) & 1;
}

uint64_t sub_1C8D20430(long long *a1)
{
  uint64_t v2 = *((void *)a1 + 2);
  uint64_t v3 = *((void *)v1 + 2);
  long long v10 = *a1;
  uint64_t v11 = v2;
  long long v12 = *(long long *)((char *)a1 + 24);
  long long v13 = *(long long *)((char *)a1 + 40);
  long long v14 = *(long long *)((char *)a1 + 56);
  long long v5 = *v1;
  uint64_t v6 = v3;
  long long v7 = *(long long *)((char *)v1 + 24);
  long long v8 = *(long long *)((char *)v1 + 40);
  long long v9 = *(long long *)((char *)v1 + 56);
  return _s20SiriOntologyProtobuf07Google_C15_SourceCodeInfoV8LocationV2eeoiySbAE_AEtFZ_0((uint64_t *)&v5, (uint64_t *)&v10) & 1;
}

uint64_t sub_1C8D204AC(uint64_t a1)
{
  return sub_1C8D1D860(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_GeneratedCodeInfo, (uint64_t (*)(uint64_t))sub_1C8CFAD6C) & 1;
}

uint64_t sub_1C8D204EC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D213F8(a1, a2, a3, sub_1C8CFAD6C);
}

uint64_t sub_1C8D20504(uint64_t a1)
{
  return sub_1C8D1D974(a1) & 1;
}

uint64_t sub_1C8D2054C(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 10);
  char v3 = *((unsigned char *)a1 + 44);
  int v4 = *((_DWORD *)a1 + 12);
  char v5 = *((unsigned char *)a1 + 52);
  uint64_t v6 = *v1;
  int v7 = *((_DWORD *)v1 + 10);
  char v8 = *((unsigned char *)v1 + 44);
  int v9 = *((_DWORD *)v1 + 12);
  char v10 = *((unsigned char *)v1 + 52);
  uint64_t v20 = *a1;
  long long v11 = *(_OWORD *)(a1 + 3);
  long long v21 = *(_OWORD *)(a1 + 1);
  long long v22 = v11;
  int v23 = v2;
  char v24 = v3;
  int v25 = v4;
  char v26 = v5;
  uint64_t v13 = v6;
  long long v14 = *(_OWORD *)(v1 + 1);
  long long v15 = *(_OWORD *)(v1 + 3);
  int v16 = v7;
  char v17 = v8;
  int v18 = v9;
  char v19 = v10;
  return _s20SiriOntologyProtobuf07Google_C18_GeneratedCodeInfoV10AnnotationV2eeoiySbAE_AEtFZ_0((uint64_t)&v13, (uint64_t)&v20) & 1;
}

uint64_t sub_1C8D205E4(uint64_t a1)
{
  return sub_1C8D1E034(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24)) & 1;
}

uint64_t static Message.with(_:)@<X0>(uint64_t (*a1)(uint64_t)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  uint64_t result = a1(a4);
  if (v4) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a4, a2);
  }
  return result;
}

uint64_t static _MessageImplementationBase.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 24))(a2, a3, a4) & 1;
}

uint64_t dispatch thunk of Message.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of static Message.protoMessageName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of Message.isInitialized.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of Message.unknownFields.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of Message.unknownFields.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of Message.unknownFields.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of Message.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 64))();
}

uint64_t dispatch thunk of Message.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 72))();
}

uint64_t dispatch thunk of Message.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of Message.isEqualTo(message:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of _MessageImplementationBase._protobuf_generated_isEqualTo(other:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1C8D20814(uint64_t a1)
{
  return sub_1C8CBC748(a1, *(void *)v1, *(unsigned int *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C8D20824(uint64_t a1)
{
  return sub_1C8D1E8B0(a1, *(void *)v1, *(_DWORD *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t)&type metadata for Google_Protobuf_Timestamp, (void (*)(uint64_t))sub_1C8D21B64, (void (*)(uint64_t))sub_1C8D21B80) & 1;
}

void *sub_1C8D20880(void *a1)
{
  return sub_1C8CBC880(a1, *(void *)v1, *(void *)(v1 + 8));
}

uint64_t sub_1C8D20888(uint64_t a1)
{
  return sub_1C8D1D450(a1, *(void *)v1, *(void *)(v1 + 8));
}

uint64_t sub_1C8D20890(uint64_t *a1)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v5 = *v1;
  unint64_t v4 = v1[1];
  sub_1C8CA3CF8(v5, v4);
  sub_1C8CA3CF8(v2, v3);
  char v6 = sub_1C8D01FBC(v5, v4, v2, v3);
  sub_1C8CA3D5C(v2, v3);
  sub_1C8CA3D5C(v5, v4);
  return v6 & 1;
}

uint64_t sub_1C8D20910(uint64_t a1)
{
  return sub_1C8D1D534(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16));
}

uint64_t sub_1C8D2091C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = *v1;
  unint64_t v6 = v1[1];
  if (v1[2] != v4 && (sub_1C8D631A8(v4) & 1) == 0) {
    return 0;
  }
  sub_1C8CA3CF8(v5, v6);
  sub_1C8CA3CF8(v2, v3);
  char v7 = sub_1C8D01FBC(v5, v6, v2, v3);
  sub_1C8CA3D5C(v2, v3);
  sub_1C8CA3D5C(v5, v6);
  return v7 & 1;
}

double sub_1C8D209BC(long long *a1)
{
  return sub_1C8CBD760(a1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(double *)v1);
}

uint64_t sub_1C8D209C8(uint64_t a1)
{
  return sub_1C8D1E300(a1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(double *)v1);
}

uint64_t sub_1C8D209D4(uint64_t a1)
{
  if (*(double *)v1 != *(double *)a1) {
    return 0;
  }
  uint64_t v4 = v1 + 8;
  uint64_t v3 = *(void *)(v1 + 8);
  unint64_t v2 = *(void *)(v4 + 8);
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v5 = *(void *)(a1 + 16);
  sub_1C8CA3CF8(v3, v2);
  sub_1C8CA3CF8(v6, v5);
  char v7 = sub_1C8D01FBC(v3, v2, v6, v5);
  sub_1C8CA3D5C(v6, v5);
  sub_1C8CA3D5C(v3, v2);
  return v7 & 1;
}

double sub_1C8D20A6C(long long *a1)
{
  return sub_1C8CBDAB4(a1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(float *)v1);
}

uint64_t sub_1C8D20A78(uint64_t a1)
{
  return sub_1C8D1E66C(a1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(float *)v1);
}

uint64_t sub_1C8D20A84(uint64_t a1)
{
  if (*(float *)v1 != *(float *)a1) {
    return 0;
  }
  uint64_t v4 = v1 + 8;
  uint64_t v3 = *(void *)(v1 + 8);
  unint64_t v2 = *(void *)(v4 + 8);
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v5 = *(void *)(a1 + 16);
  sub_1C8CA3CF8(v3, v2);
  sub_1C8CA3CF8(v6, v5);
  char v7 = sub_1C8D01FBC(v3, v2, v6, v5);
  sub_1C8CA3D5C(v6, v5);
  sub_1C8CA3D5C(v3, v2);
  return v7 & 1;
}

uint64_t sub_1C8D20B1C(uint64_t a1)
{
  return sub_1C8CBD52C(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_1C8D20B28(uint64_t a1)
{
  return sub_1C8D1E418(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_Int64Value, (void (*)(uint64_t))sub_1C8D21F44, (void (*)())sub_1C8D21F40) & 1;
}

uint64_t sub_1C8D20B80(uint64_t a1)
{
  return sub_1C8D1E418(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_UInt64Value, (void (*)(uint64_t))sub_1C8D21F44, (void (*)())sub_1C8D21F40) & 1;
}

uint64_t sub_1C8D20BD4(void *a1)
{
  if (*v1 != *a1) {
    return 0;
  }
  uint64_t v4 = v1 + 1;
  uint64_t v3 = v1[1];
  unint64_t v2 = v4[1];
  uint64_t v6 = a1[1];
  unint64_t v5 = a1[2];
  sub_1C8CA3CF8(v3, v2);
  sub_1C8CA3CF8(v6, v5);
  char v7 = sub_1C8D01FBC(v3, v2, v6, v5);
  sub_1C8CA3D5C(v6, v5);
  sub_1C8CA3D5C(v3, v2);
  return v7 & 1;
}

double sub_1C8D20C6C(long long *a1)
{
  return sub_1C8CBD99C(a1, *(_DWORD *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16));
}

uint64_t sub_1C8D20C78(uint64_t a1)
{
  return sub_1C8D1E540(a1, *(_DWORD *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_Int32Value, (void (*)())sub_1C8D21F44, (void (*)())sub_1C8D21F40) & 1;
}

double sub_1C8D20CD0(long long *a1)
{
  return sub_1C8CBD530(a1, *(_DWORD *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16));
}

uint64_t sub_1C8D20CDC(uint64_t a1)
{
  return sub_1C8D1E540(a1, *(_DWORD *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_UInt32Value, (void (*)())sub_1C8D21F44, (void (*)())sub_1C8D21F40) & 1;
}

uint64_t sub_1C8D20D30(uint64_t a1)
{
  if (*(_DWORD *)v1 != *(_DWORD *)a1) {
    return 0;
  }
  uint64_t v4 = v1 + 8;
  uint64_t v3 = *(void *)(v1 + 8);
  unint64_t v2 = *(void *)(v4 + 8);
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v5 = *(void *)(a1 + 16);
  sub_1C8CA3CF8(v3, v2);
  sub_1C8CA3CF8(v6, v5);
  char v7 = sub_1C8D01FBC(v3, v2, v6, v5);
  sub_1C8CA3D5C(v6, v5);
  sub_1C8CA3D5C(v3, v2);
  return v7 & 1;
}

double sub_1C8D20DC8(long long *a1)
{
  return sub_1C8CBDFB8(a1, *(unsigned char *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16));
}

uint64_t sub_1C8D20DD4(uint64_t a1)
{
  return sub_1C8D1EB5C(a1, *(unsigned char *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16));
}

uint64_t sub_1C8D20DE0(unsigned __int8 *a1)
{
  if (*a1 != *v1) {
    return 0;
  }
  unint64_t v5 = v1 + 8;
  uint64_t v4 = *((void *)v1 + 1);
  unint64_t v3 = *((void *)v5 + 1);
  uint64_t v7 = *((void *)a1 + 1);
  unint64_t v6 = *((void *)a1 + 2);
  sub_1C8CA3CF8(v4, v3);
  sub_1C8CA3CF8(v7, v6);
  char v8 = sub_1C8D01FBC(v4, v3, v7, v6);
  sub_1C8CA3D5C(v7, v6);
  sub_1C8CA3D5C(v4, v3);
  return v8 & 1;
}

uint64_t sub_1C8D20E78(uint64_t a1)
{
  return sub_1C8D1E034(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24)) & 1;
}

uint64_t sub_1C8D20EA4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  unint64_t v5 = a1[3];
  uint64_t v6 = *v1;
  uint64_t v7 = v1[1];
  uint64_t v8 = v1[2];
  unint64_t v9 = v1[3];
  BOOL v10 = v6 == v2 && v7 == v3;
  if (!v10 && (sub_1C8D887C0() & 1) == 0) {
    return 0;
  }
  sub_1C8CA3CF8(v8, v9);
  sub_1C8CA3CF8(v4, v5);
  char v11 = sub_1C8D01FBC(v8, v9, v4, v5);
  sub_1C8CA3D5C(v4, v5);
  sub_1C8CA3D5C(v8, v9);
  return v11 & 1;
}

double sub_1C8D20F4C(long long *a1)
{
  return sub_1C8CBDBD8(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C8D20F58(uint64_t a1)
{
  return sub_1C8D1E784(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C8D20F64(uint64_t *a1)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  unint64_t v5 = a1[3];
  uint64_t v6 = *v1;
  unint64_t v7 = v1[1];
  uint64_t v8 = v1[2];
  unint64_t v9 = v1[3];
  if ((sub_1C8D01FBC(v6, v7, v2, v3) & 1) == 0) {
    return 0;
  }
  sub_1C8CA3CF8(v8, v9);
  sub_1C8CA3CF8(v4, v5);
  char v10 = sub_1C8D01FBC(v8, v9, v4, v5);
  sub_1C8CA3D5C(v4, v5);
  sub_1C8CA3D5C(v8, v9);
  return v10 & 1;
}

double sub_1C8D20FFC(long long *a1)
{
  return sub_1C8CBDE78(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16));
}

uint64_t sub_1C8D21008(uint64_t a1)
{
  return sub_1C8D1D860(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_FieldMask, (uint64_t (*)(uint64_t))sub_1C8CFBFEC) & 1;
}

uint64_t sub_1C8D21048(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D213F8(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))sub_1C8CFBFEC);
}

uint64_t sub_1C8D21060(uint64_t a1)
{
  return sub_1C8D1E8B0(a1, *(void *)v1, *(_DWORD *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t)&type metadata for Google_Protobuf_Duration, (void (*)(uint64_t))sub_1C8D21F34, (void (*)(uint64_t))sub_1C8D21F38) & 1;
}

uint64_t sub_1C8D210B8(uint64_t a1)
{
  if (*(void *)v1 != *(void *)a1 || *(_DWORD *)(v1 + 8) != *(_DWORD *)(a1 + 8)) {
    return 0;
  }
  uint64_t v6 = v1 + 16;
  uint64_t v5 = *(void *)(v1 + 16);
  unint64_t v4 = *(void *)(v6 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  unint64_t v7 = *(void *)(a1 + 24);
  sub_1C8CA3CF8(v5, v4);
  sub_1C8CA3CF8(v8, v7);
  char v9 = sub_1C8D01FBC(v5, v4, v8, v7);
  sub_1C8CA3D5C(v8, v7);
  sub_1C8CA3D5C(v5, v4);
  return v9 & 1;
}

uint64_t sub_1C8D2115C(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6 = (long long *)result;
  if (*(void *)(a2 + 16))
  {
    sub_1C8D88850();
    uint64_t result = sub_1C8D21494(v6, a2);
  }
  switch(a4 >> 62)
  {
    case 1uLL:
      if ((int)a3 != a3 >> 32) {
        goto LABEL_9;
      }
      break;
    case 2uLL:
      if (*(void *)(a3 + 16) != *(void *)(a3 + 24)) {
        goto LABEL_9;
      }
      break;
    case 3uLL:
      return result;
    default:
      if ((a4 & 0xFF000000000000) != 0) {
LABEL_9:
      }
        uint64_t result = sub_1C8D881D0();
      break;
  }
  return result;
}

double sub_1C8D2122C(long long *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D212B4(a1, a2, a3, (void (*)(long long *, uint64_t, uint64_t, uint64_t))sub_1C8D2115C);
}

uint64_t sub_1C8D21244(uint64_t a1)
{
  return sub_1C8D1D860(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_Struct, (uint64_t (*)(uint64_t))sub_1C8D7E758) & 1;
}

uint64_t sub_1C8D21284(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D213F8(a1, a2, a3, sub_1C8D7E758);
}

double sub_1C8D2129C(long long *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D212B4(a1, a2, a3, (void (*)(long long *, uint64_t, uint64_t, uint64_t))sub_1C8D7D460);
}

double sub_1C8D212B4(long long *a1, uint64_t a2, uint64_t a3, void (*a4)(long long *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *v4;
  uint64_t v8 = v4[1];
  uint64_t v9 = v4[2];
  uint64_t v10 = *((void *)a1 + 8);
  long long v11 = a1[1];
  long long v17 = *a1;
  long long v18 = v11;
  long long v12 = a1[3];
  long long v19 = a1[2];
  long long v20 = v12;
  uint64_t v21 = v10;
  a4(&v17, v7, v8, v9);
  uint64_t v13 = v21;
  long long v14 = v18;
  *a1 = v17;
  a1[1] = v14;
  double result = *(double *)&v19;
  long long v16 = v20;
  a1[2] = v19;
  a1[3] = v16;
  *((void *)a1 + 8) = v13;
  return result;
}

uint64_t sub_1C8D2133C(uint64_t a1)
{
  return sub_1C8D1D064(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_Value, (uint64_t (*)(uint64_t))sub_1C8D7DC38) & 1;
}

uint64_t sub_1C8D2137C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D1F3B8(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))sub_1C8D7DC38);
}

double sub_1C8D21394(long long *a1)
{
  return sub_1C8CBC850(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16));
}

uint64_t sub_1C8D213A0(uint64_t a1)
{
  return sub_1C8D1D860(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), (uint64_t)&type metadata for Google_Protobuf_ListValue, (uint64_t (*)(uint64_t))sub_1C8CFC0B4) & 1;
}

uint64_t sub_1C8D213E0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D213F8(a1, a2, a3, sub_1C8CFC0B4);
}

uint64_t sub_1C8D213F8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  unint64_t v7 = a1[2];
  uint64_t v8 = *v4;
  uint64_t v9 = v4[1];
  unint64_t v10 = v4[2];
  if ((a4(v8, v5) & 1) == 0) {
    return 0;
  }
  sub_1C8CA3CF8(v9, v10);
  sub_1C8CA3CF8(v6, v7);
  char v11 = sub_1C8D01FBC(v9, v10, v6, v7);
  sub_1C8CA3D5C(v6, v7);
  sub_1C8CA3D5C(v9, v10);
  return v11 & 1;
}

uint64_t sub_1C8D21494(long long *a1, uint64_t a2)
{
  uint64_t v31 = a2 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a2 + 64);
  int64_t v30 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  int64_t v7 = 0;
  for (uint64_t i = 0; ; uint64_t i = v37)
  {
    uint64_t v36 = v6;
    uint64_t v37 = i;
    if (!v5) {
      break;
    }
    uint64_t v35 = (v5 - 1) & v5;
    unint64_t v9 = __clz(__rbit64(v5)) | (v7 << 6);
LABEL_18:
    uint64_t v13 = (uint64_t *)(*(void *)(a2 + 56) + 24 * v9);
    uint64_t v15 = *v13;
    unint64_t v14 = v13[1];
    uint64_t v16 = v13[2];
    uint64_t v17 = *((void *)a1 + 8);
    long long v18 = a1[1];
    long long v48 = *a1;
    long long v49 = v18;
    long long v19 = a1[3];
    long long v50 = a1[2];
    long long v51 = v19;
    uint64_t v52 = v17;
    swift_bridgeObjectRetain();
    sub_1C8CA3CF8(v15, v14);
    swift_retain();
    sub_1C8D883C0();
    swift_bridgeObjectRelease();
    long long v43 = v48;
    long long v44 = v49;
    long long v45 = v50;
    long long v46 = v51;
    uint64_t v47 = v52;
    uint64_t v20 = *(void *)(v16 + 16);
    unint64_t v21 = *(void *)(v16 + 32);
    int v22 = *(unsigned __int8 *)(v16 + 40);
    if ((~v21 & 0x3000000000000000) != 0 || v22 != 255)
    {
      switch((v21 >> 60) & 3 | (4 * (v22 & 1u)))
      {
        case 1uLL:
          sub_1C8D88850();
          sub_1C8D88880();
          goto LABEL_20;
        case 2uLL:
          uint64_t v29 = *(void *)(v16 + 16);
          uint64_t v23 = *(void *)(v16 + 24);
          sub_1C8D88850();
          swift_retain();
          sub_1C8CC5580(v29, v23, v21, v22);
          sub_1C8D883C0();
          sub_1C8CC5640(v29, v23, v21, v22);
          break;
        case 3uLL:
          sub_1C8D88850();
          sub_1C8D88860();
          goto LABEL_20;
        case 4uLL:
          uint64_t v32 = *(void *)(v16 + 24);
          sub_1C8D88850();
          long long v38 = v43;
          long long v39 = v44;
          long long v40 = v45;
          long long v41 = v46;
          uint64_t v42 = v47;
          if (*(void *)(v20 + 16))
          {
            sub_1C8D88850();
            uint64_t v24 = v20;
            swift_retain();
            sub_1C8CC5580(v20, v32, v21, v22);
            sub_1C8D21494(&v38, v20);
          }
          else
          {
            uint64_t v24 = v20;
            swift_retain();
            sub_1C8CC5580(v20, v32, v21, v22);
          }
          uint64_t v26 = v32;
          switch(v21 >> 62)
          {
            case 1uLL:
              if ((int)v32 != v32 >> 32) {
                goto LABEL_46;
              }
              break;
            case 2uLL:
              if (*(void *)(v32 + 16) != *(void *)(v32 + 24)) {
                goto LABEL_46;
              }
              break;
            case 3uLL:
              break;
            default:
              if ((v21 & 0xFF000000000000) != 0)
              {
LABEL_46:
                sub_1C8D881D0();
                uint64_t v26 = v32;
              }
              break;
          }
          uint64_t v27 = v24;
          goto LABEL_52;
        case 5uLL:
          uint64_t v33 = *(void *)(v16 + 24);
          sub_1C8D88850();
          long long v38 = v43;
          long long v39 = v44;
          long long v40 = v45;
          long long v41 = v46;
          uint64_t v42 = v47;
          uint64_t v25 = *(void *)(v20 + 16);
          swift_retain();
          sub_1C8CC5580(v20, v33, v21, v22);
          if (v25)
          {
            sub_1C8D196CC(v20);
            uint64_t v37 = 0;
          }
          uint64_t v26 = v33;
          switch(v21 >> 62)
          {
            case 1uLL:
              if ((int)v33 != v33 >> 32) {
                goto LABEL_50;
              }
              break;
            case 2uLL:
              if (*(void *)(v33 + 16) != *(void *)(v33 + 24)) {
                goto LABEL_50;
              }
              break;
            case 3uLL:
              break;
            default:
              if ((v21 & 0xFF000000000000) != 0)
              {
LABEL_50:
                sub_1C8D881D0();
                uint64_t v26 = v33;
              }
              break;
          }
          uint64_t v27 = v20;
LABEL_52:
          sub_1C8CC5640(v27, v26, v21, v22);
          long long v43 = v38;
          long long v44 = v39;
          long long v45 = v40;
          long long v46 = v41;
          uint64_t v47 = v42;
          break;
        default:
          sub_1C8D88850();
          sub_1C8D88850();
          goto LABEL_20;
      }
    }
    else
    {
LABEL_20:
      swift_retain();
    }
    unint64_t v5 = v35;
    swift_release();
    switch(v14 >> 62)
    {
      case 1uLL:
        if ((int)v15 != v15 >> 32) {
          goto LABEL_5;
        }
        break;
      case 2uLL:
        if (*(void *)(v15 + 16) != *(void *)(v15 + 24)) {
          goto LABEL_5;
        }
        break;
      case 3uLL:
        break;
      default:
        if ((v14 & 0xFF000000000000) != 0) {
LABEL_5:
        }
          sub_1C8D881D0();
        break;
    }
    sub_1C8CA3D5C(v15, v14);
    swift_release();
    long long v48 = v43;
    long long v49 = v44;
    long long v50 = v45;
    long long v51 = v46;
    uint64_t v52 = v47;
    uint64_t v6 = sub_1C8D888A0() ^ v36;
  }
  if (__OFADD__(v7++, 1))
  {
    __break(1u);
    goto LABEL_59;
  }
  if (v7 >= v30) {
    goto LABEL_57;
  }
  unint64_t v11 = *(void *)(v31 + 8 * v7);
  if (v11)
  {
LABEL_17:
    uint64_t v35 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v7 << 6);
    goto LABEL_18;
  }
  int64_t v12 = v7 + 1;
  if (v7 + 1 >= v30) {
    goto LABEL_57;
  }
  unint64_t v11 = *(void *)(v31 + 8 * v12);
  if (v11)
  {
LABEL_16:
    int64_t v7 = v12;
    goto LABEL_17;
  }
  int64_t v12 = v7 + 2;
  if (v7 + 2 < v30)
  {
    unint64_t v11 = *(void *)(v31 + 8 * v12);
    if (!v11)
    {
      while (1)
      {
        int64_t v7 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          break;
        }
        if (v7 >= v30) {
          goto LABEL_57;
        }
        unint64_t v11 = *(void *)(v31 + 8 * v7);
        ++v12;
        if (v11) {
          goto LABEL_17;
        }
      }
LABEL_59:
      __break(1u);
      JUMPOUT(0x1C8D21A5CLL);
    }
    goto LABEL_16;
  }
LABEL_57:
  swift_release();
  return sub_1C8D88850();
}

uint64_t sub_1C8D21AA4(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a2 >> 60 != 15)
  {
    sub_1C8CA3D5C(result, a2);
    return sub_1C8CA3D5C(a3, a4);
  }
  return result;
}

uint64_t sub_1C8D21AF4(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (result != 2) {
    return sub_1C8CA3D5C(a2, a3);
  }
  return result;
}

uint64_t sub_1C8D21B10(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (result != 2) {
    return sub_1C8CA3CF8(a2, a3);
  }
  return result;
}

uint64_t sub_1C8D21B2C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a3 >> 60 != 15) {
    return sub_1C8CA3D5C(a2, a3);
  }
  return result;
}

uint64_t sub_1C8D21B48(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a3 >> 60 != 15) {
    return sub_1C8CA3CF8(a2, a3);
  }
  return result;
}

uint64_t sub_1C8D21B64(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4 >> 60 != 15) {
    return sub_1C8CA3D5C(a3, a4);
  }
  return result;
}

uint64_t sub_1C8D21B80(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4 >> 60 != 15) {
    return sub_1C8CA3CF8(a3, a4);
  }
  return result;
}

uint64_t sub_1C8D21B9C(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    sub_1C8CA3D5C(a2, a3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C8D21BF8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA3D5C(a4, a5);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C8D21C80(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4 != 1)
  {
    sub_1C8CA3D5C(result, a2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C8D21CC4(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    sub_1C8CA3D5C(a2, a3);
    swift_bridgeObjectRelease();
    sub_1C8CAA9F0(a12, a13);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1C8D21D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA3D5C(a12, a13);
  }
}

void sub_1C8D21DC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA3D5C(a5, a6);
  }
}

double sub_1C8D21E20(_OWORD *a1)
{
  double result = 0.0;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_1C8D21E38(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 40);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_1C8D21E50(uint64_t a1)
{
  return a1;
}

void sub_1C8D21EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16)
{
  if (a6)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA3D5C(a15, a16);
  }
}

uint64_t dispatch thunk of ExtensionMap.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of ExtensionMap.fieldNumberForProto(messageType:protoFieldName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t Message.init(unpackingAny:extensions:options:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  unint64_t v10 = a1[1];
  uint64_t v15 = *a1;
  uint64_t v11 = *a3;
  char v12 = *((unsigned char *)a3 + 8);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a5 + 16))(a6, a4, a5);
  uint64_t v16 = v11;
  char v17 = v12;
  uint64_t v13 = v18;
  sub_1C8D66758((uint64_t)a6, a2, (uint64_t)&v16, a4, a5);
  sub_1C8CA3D5C(v15, v10);
  swift_release();
  uint64_t result = sub_1C8CA4F3C(a2);
  if (v13) {
    return (*(uint64_t (**)(void *, uint64_t))(*(void *)(a4 - 8) + 8))(a6, a4);
  }
  return result;
}

uint64_t Google_Protobuf_Timestamp.seconds.getter()
{
  return *(void *)v0;
}

uint64_t Google_Protobuf_Timestamp.seconds.setter(uint64_t result)
{
  void *v1 = result;
  return result;
}

uint64_t (*Google_Protobuf_Timestamp.seconds.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Timestamp.nanos.getter()
{
  return *(unsigned int *)(v0 + 8);
}

uint64_t Google_Protobuf_Timestamp.nanos.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*Google_Protobuf_Timestamp.nanos.modify())()
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Timestamp.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  unint64_t v3 = *(void *)(v1 + 24);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C8CA3CF8(v2, v3);
}

uint64_t Google_Protobuf_Timestamp.unknownFields.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C8CA3D5C(*(void *)(v1 + 16), *(void *)(v1 + 24));
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = v3;
  return result;
}

uint64_t (*Google_Protobuf_Timestamp.unknownFields.modify())()
{
  return nullsub_1;
}

double Google_Protobuf_Timestamp.init()@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(_DWORD *)(a1 + 8) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 16) = xmmword_1C8D8AD80;
  return result;
}

unint64_t static Google_Protobuf_Timestamp.protoMessageName.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_1C8D2218C()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234B8A8, &qword_1EA5671C8);
}

uint64_t static Google_Protobuf_Timestamp._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565BF0 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA5671D0;
  uint64_t v3 = qword_1EA5671D8;
  uint64_t v4 = unk_1EA5671E0;
  *a1 = qword_1EA5671C8;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_Timestamp.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  uint64_t result = v7(a2, a3);
  if (!v4)
  {
    while ((v9 & 1) == 0)
    {
      if (result == 2)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 72))(v3 + 8, a2, a3);
      }
      else if (result == 1)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 96))(v3, a2, a3);
      }
      uint64_t result = v7(a2, a3);
    }
  }
  return result;
}

uint64_t Google_Protobuf_Timestamp.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(unsigned int *)(v3 + 8);
  if (!*(void *)v3
    || (uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(a3 + 32))(*(void *)v3, 1, a2, a3),
        !v4))
  {
    if (!v8) {
      return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
    }
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 24))(v8, 2, a2, a3);
    if (!v4) {
      return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
    }
  }
  return result;
}

uint64_t Google_Protobuf_Timestamp.hashValue.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *((unsigned int *)v0 + 2);
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  sub_1C8D88840();
  sub_1C8CBC748(v6, v1, v2, v4, v3);
  return sub_1C8D888A0();
}

double sub_1C8D22454@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(_DWORD *)(a1 + 8) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 16) = xmmword_1C8D8AD80;
  return result;
}

unint64_t sub_1C8D2246C()
{
  return 0xD000000000000019;
}

uint64_t sub_1C8D22488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_Timestamp.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8D224A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_Timestamp.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8D224B8@<X0>(void *a1@<X8>)
{
  if (qword_1EA565BF0 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA5671D0;
  uint64_t v3 = qword_1EA5671D8;
  uint64_t v4 = unk_1EA5671E0;
  *a1 = qword_1EA5671C8;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8D22550()
{
  return sub_1C8D6AD6C(*(void *)v0, *(_DWORD *)(v0 + 8), *(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C8D22560()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *((unsigned int *)v0 + 2);
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  sub_1C8D88840();
  sub_1C8CBC748(v6, v1, v2, v4, v3);
  return sub_1C8D888A0();
}

uint64_t sub_1C8D225C4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *((unsigned int *)v0 + 2);
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  sub_1C8D88840();
  sub_1C8CBC748(v6, v1, v2, v4, v3);
  return sub_1C8D888A0();
}

uint64_t _s20SiriOntologyProtobuf07Google_C10_TimestampV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2 || *(_DWORD *)(a1 + 8) != *(_DWORD *)(a2 + 8)) {
    return 0;
  }
  uint64_t v5 = *(void *)(a2 + 16);
  unint64_t v4 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a1 + 16);
  unint64_t v6 = *(void *)(a1 + 24);
  sub_1C8CA3CF8(v7, v6);
  sub_1C8CA3CF8(v5, v4);
  char v8 = sub_1C8D01FBC(v7, v6, v5, v4);
  sub_1C8CA3D5C(v5, v4);
  sub_1C8CA3D5C(v7, v6);
  return v8 & 1;
}

unint64_t sub_1C8D226CC(uint64_t a1)
{
  unint64_t result = sub_1C8D226F4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D226F4()
{
  unint64_t result = qword_1EA5671E8;
  if (!qword_1EA5671E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5671E8);
  }
  return result;
}

unint64_t sub_1C8D22748(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C8D22778();
  unint64_t result = sub_1C8D227CC();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C8D22778()
{
  unint64_t result = qword_1EA5671F0;
  if (!qword_1EA5671F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5671F0);
  }
  return result;
}

unint64_t sub_1C8D227CC()
{
  unint64_t result = qword_1EA5671F8;
  if (!qword_1EA5671F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5671F8);
  }
  return result;
}

unint64_t sub_1C8D22824()
{
  unint64_t result = qword_1EA567200;
  if (!qword_1EA567200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567200);
  }
  return result;
}

uint64_t destroy for Google_Protobuf_Timestamp(uint64_t a1)
{
  return sub_1C8CA3D5C(*(void *)(a1 + 16), *(void *)(a1 + 24));
}

uint64_t initializeWithCopy for Google_Protobuf_Timestamp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 16);
  unint64_t v4 = *(void *)(a2 + 24);
  sub_1C8CA3CF8(v3, v4);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  return a1;
}

uint64_t assignWithCopy for Google_Protobuf_Timestamp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 16);
  unint64_t v4 = *(void *)(a2 + 24);
  sub_1C8CA3CF8(v3, v4);
  uint64_t v5 = *(void *)(a1 + 16);
  unint64_t v6 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  sub_1C8CA3D5C(v5, v6);
  return a1;
}

uint64_t assignWithTake for Google_Protobuf_Timestamp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  unint64_t v4 = *(void *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  sub_1C8CA3D5C(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for Google_Protobuf_Timestamp(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 24) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 24) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for Google_Protobuf_Timestamp(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 13;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2)
    {
      *(void *)(result + 16) = 0;
      *(void *)(result + 24) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_Timestamp()
{
  return &type metadata for Google_Protobuf_Timestamp;
}

uint64_t destroy for JSONEncodingVisitor()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for JSONEncodingVisitor(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for JSONEncodingVisitor(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  return a1;
}

__n128 __swift_memcpy50_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for JSONEncodingVisitor(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  return a1;
}

uint64_t getEnumTagSinglePayload for JSONEncodingVisitor(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 50)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JSONEncodingVisitor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 50) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 50) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JSONEncodingVisitor()
{
  return &type metadata for JSONEncodingVisitor;
}

uint64_t sub_1C8D22D04@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v5 = *a2;
  char v6 = a2[1];
  sub_1C8CA425C(a1, (uint64_t)v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CD8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CD0);
  if (swift_dynamicCast())
  {
    sub_1C8CA4528(v11, (uint64_t)v14);
    __swift_project_boxed_opaque_existential_1(v14, v14[3]);
    swift_getDynamicType();
    (*(void (**)(_OWORD *__return_ptr))(v14[4] + 8))(v13);
    __swift_destroy_boxed_opaque_existential_1(a1);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    long long v8 = v13[0];
    long long v9 = v13[1];
    *(void *)a3 = MEMORY[0x1E4FBC860];
    *(_WORD *)(a3 + 8) = 256;
    *(_OWORD *)(a3 + 16) = v8;
    *(_OWORD *)(a3 + 32) = v9;
    *(unsigned char *)(a3 + 48) = v5;
    *(unsigned char *)(a3 + 49) = v6;
  }
  else
  {
    uint64_t v12 = 0;
    memset(v11, 0, sizeof(v11));
    sub_1C8D27DF0((uint64_t)v11);
    sub_1C8CC552C();
    swift_allocError();
    *unint64_t v10 = 4;
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_1(a1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C8D22E68(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(v1 + 49);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v2 != 1)
  {
    if (v4)
    {
      unint64_t v14 = sub_1C8CA5D14(a1);
      if (v15)
      {
        uint64_t v16 = *(void *)(v3 + 56) + 80 * v14;
        uint64_t v12 = *(unsigned __int16 *)(v16 + 32);
        if (v12 >> 8 <= 0xFE)
        {
          uint64_t v11 = *(void *)(v16 + 16);
          uint64_t v10 = *(void *)(v16 + 24);
          unsigned int v13 = (v12 >> 8) & 1;
          uint64_t v8 = *(void *)v16;
          uint64_t v9 = *(void *)(v16 + 8);
          goto LABEL_10;
        }
      }
    }
LABEL_8:
    sub_1C8CC552C();
    swift_allocError();
    *char v17 = 4;
    return swift_willThrow();
  }
  if (!v4) {
    goto LABEL_8;
  }
  unint64_t v5 = sub_1C8CA5D14(a1);
  if ((v6 & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(v3 + 56) + 80 * v5;
  uint64_t v8 = *(void *)(v7 + 40);
  uint64_t v9 = *(void *)(v7 + 48);
  uint64_t v11 = *(void *)(v7 + 56);
  uint64_t v10 = *(void *)(v7 + 64);
  uint64_t v12 = *(unsigned __int8 *)(v7 + 72);
  LOBYTE(v13) = *(unsigned char *)(v7 + 73);
LABEL_10:
  sub_1C8CA6050(v11, v10, v12, v13);
  sub_1C8D29F18(v8, v9);
  return sub_1C8CA6AF4(v11, v10, v12, v13);
}

uint64_t sub_1C8D22F88(int a1, uint64_t a2)
{
  uint64_t result = sub_1C8D22E68(a2);
  if (!v3)
  {
    unint64_t v6 = a1;
    if (a1 < 0)
    {
      uint64_t v7 = *v2;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      void *v2 = v7;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v7 = sub_1C8D5EB50(0, *((void *)v7 + 2) + 1, 1, v7);
        void *v2 = v7;
      }
      unint64_t v9 = *((void *)v7 + 2);
      unint64_t v10 = *((void *)v7 + 3);
      unint64_t v11 = v9 + 1;
      if (v9 >= v10 >> 1)
      {
        unint64_t v15 = v9 + 1;
        uint64_t v12 = v7;
        unint64_t v13 = *((void *)v7 + 2);
        unint64_t v14 = sub_1C8D5EB50((char *)(v10 > 1), v9 + 1, 1, v12);
        unint64_t v9 = v13;
        unint64_t v11 = v15;
        uint64_t v7 = v14;
      }
      *((void *)v7 + 2) = v11;
      v7[v9 + 32] = 45;
      void *v2 = v7;
      unint64_t v6 = -(uint64_t)v6;
    }
    return sub_1C8D29538(v6);
  }
  return result;
}

uint64_t sub_1C8D23064(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_1C8D22E68(a2);
  if (!v3)
  {
    uint64_t v7 = *(char **)a3;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)a3 = v7;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v7 = sub_1C8D5EB50(0, *((void *)v7 + 2) + 1, 1, v7);
      *(void *)a3 = v7;
    }
    unint64_t v10 = *((void *)v7 + 2);
    unint64_t v9 = *((void *)v7 + 3);
    if (v10 >= v9 >> 1) {
      uint64_t v7 = sub_1C8D5EB50((char *)(v9 > 1), v10 + 1, 1, v7);
    }
    *((void *)v7 + 2) = v10 + 1;
    v7[v10 + 32] = 91;
    *(void *)a3 = v7;
    *(_WORD *)(a3 + 8) = 256;
    uint64_t v11 = a1[2];
    if (v11)
    {
      unint64_t v12 = a1[4];
      swift_bridgeObjectRetain();
      sub_1C8D284C4(v12);
      uint64_t v13 = v11 - 1;
      if (v11 != 1)
      {
        uint64_t v16 = a1 + 5;
        do
        {
          unint64_t v18 = *v16++;
          unint64_t v17 = v18;
          long long v19 = *(char **)a3;
          char v20 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)a3 = v19;
          if ((v20 & 1) == 0)
          {
            long long v19 = sub_1C8D5EB50(0, *((void *)v19 + 2) + 1, 1, v19);
            *(void *)a3 = v19;
          }
          unint64_t v22 = *((void *)v19 + 2);
          unint64_t v21 = *((void *)v19 + 3);
          if (v22 >= v21 >> 1) {
            long long v19 = sub_1C8D5EB50((char *)(v21 > 1), v22 + 1, 1, v19);
          }
          *((void *)v19 + 2) = v22 + 1;
          v19[v22 + 32] = 44;
          *(void *)a3 = v19;
          sub_1C8D284C4(v17);
          --v13;
        }
        while (v13);
      }
      swift_bridgeObjectRelease();
      uint64_t v7 = *(char **)a3;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *(void *)a3 = v7;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1C8D5EB50(0, *((void *)v7 + 2) + 1, 1, v7);
      uint64_t v7 = (char *)result;
      *(void *)a3 = result;
    }
    unint64_t v15 = *((void *)v7 + 2);
    unint64_t v14 = *((void *)v7 + 3);
    if (v15 >= v14 >> 1)
    {
      uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v14 > 1), v15 + 1, 1, v7);
      uint64_t v7 = (char *)result;
    }
    *((void *)v7 + 2) = v15 + 1;
    v7[v15 + 32] = 93;
    *(void *)a3 = v7;
    *(_WORD *)(a3 + 8) = 44;
  }
  return result;
}

uint64_t sub_1C8D23290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_1C8D22E68(a2);
  if (!v3)
  {
    uint64_t v7 = *(char **)a3;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)a3 = v7;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v7 = sub_1C8D5EB50(0, *((void *)v7 + 2) + 1, 1, v7);
      *(void *)a3 = v7;
    }
    unint64_t v10 = *((void *)v7 + 2);
    unint64_t v9 = *((void *)v7 + 3);
    if (v10 >= v9 >> 1) {
      uint64_t v7 = sub_1C8D5EB50((char *)(v9 > 1), v10 + 1, 1, v7);
    }
    *((void *)v7 + 2) = v10 + 1;
    v7[v10 + 32] = 91;
    *(void *)a3 = v7;
    *(_WORD *)(a3 + 8) = 256;
    uint64_t v11 = *(void *)(a1 + 16);
    if (v11)
    {
      swift_bridgeObjectRetain();
      unint64_t v12 = *(int *)(a1 + 32);
      if ((v12 & 0x80000000) != 0)
      {
        uint64_t v13 = *(char **)a3;
        char v14 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)a3 = v13;
        if ((v14 & 1) == 0)
        {
          uint64_t v13 = sub_1C8D5EB50(0, *((void *)v13 + 2) + 1, 1, v13);
          *(void *)a3 = v13;
        }
        unint64_t v16 = *((void *)v13 + 2);
        unint64_t v15 = *((void *)v13 + 3);
        if (v16 >= v15 >> 1) {
          uint64_t v13 = sub_1C8D5EB50((char *)(v15 > 1), v16 + 1, 1, v13);
        }
        *((void *)v13 + 2) = v16 + 1;
        v13[v16 + 32] = 45;
        *(void *)a3 = v13;
        unint64_t v12 = -(uint64_t)v12;
      }
      sub_1C8D29538(v12);
      uint64_t v17 = v11 - 1;
      if (v17)
      {
        char v20 = (int *)(a1 + 36);
        do
        {
          unint64_t v22 = *v20++;
          unint64_t v21 = v22;
          uint64_t v23 = *(char **)a3;
          char v24 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)a3 = v23;
          if ((v24 & 1) == 0)
          {
            uint64_t v23 = sub_1C8D5EB50(0, *((void *)v23 + 2) + 1, 1, v23);
            *(void *)a3 = v23;
          }
          unint64_t v26 = *((void *)v23 + 2);
          unint64_t v25 = *((void *)v23 + 3);
          if (v26 >= v25 >> 1) {
            uint64_t v23 = sub_1C8D5EB50((char *)(v25 > 1), v26 + 1, 1, v23);
          }
          *((void *)v23 + 2) = v26 + 1;
          v23[v26 + 32] = 44;
          *(void *)a3 = v23;
          if ((v21 & 0x80000000) != 0)
          {
            uint64_t v27 = *(char **)a3;
            char v28 = swift_isUniquelyReferenced_nonNull_native();
            *(void *)a3 = v27;
            if ((v28 & 1) == 0)
            {
              uint64_t v27 = sub_1C8D5EB50(0, *((void *)v27 + 2) + 1, 1, v27);
              *(void *)a3 = v27;
            }
            unint64_t v30 = *((void *)v27 + 2);
            unint64_t v29 = *((void *)v27 + 3);
            if (v30 >= v29 >> 1) {
              uint64_t v27 = sub_1C8D5EB50((char *)(v29 > 1), v30 + 1, 1, v27);
            }
            *((void *)v27 + 2) = v30 + 1;
            v27[v30 + 32] = 45;
            *(void *)a3 = v27;
            unint64_t v21 = -(uint64_t)v21;
          }
          sub_1C8D29538(v21);
          --v17;
        }
        while (v17);
      }
      swift_bridgeObjectRelease();
      uint64_t v7 = *(char **)a3;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *(void *)a3 = v7;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1C8D5EB50(0, *((void *)v7 + 2) + 1, 1, v7);
      uint64_t v7 = (char *)result;
      *(void *)a3 = result;
    }
    unint64_t v19 = *((void *)v7 + 2);
    unint64_t v18 = *((void *)v7 + 3);
    if (v19 >= v18 >> 1)
    {
      uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v18 > 1), v19 + 1, 1, v7);
      uint64_t v7 = (char *)result;
    }
    *((void *)v7 + 2) = v19 + 1;
    v7[v19 + 32] = 93;
    *(void *)a3 = v7;
    *(_WORD *)(a3 + 8) = 44;
  }
  return result;
}

uint64_t sub_1C8D235C4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_1C8D22E68(a2);
  if (!v3)
  {
    uint64_t v7 = *(char **)a3;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *(void *)a3 = v7;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1C8D5EB50(0, *((void *)v7 + 2) + 1, 1, v7);
      uint64_t v7 = (char *)result;
      *(void *)a3 = result;
    }
    unint64_t v9 = *((void *)v7 + 2);
    unint64_t v8 = *((void *)v7 + 3);
    if (v9 >= v8 >> 1)
    {
      uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v8 > 1), v9 + 1, 1, v7);
      uint64_t v7 = (char *)result;
    }
    *((void *)v7 + 2) = v9 + 1;
    v7[v9 + 32] = 91;
    *(void *)a3 = v7;
    *(_WORD *)(a3 + 8) = 256;
    uint64_t v10 = a1[2];
    if (v10)
    {
      swift_bridgeObjectRetain();
      unint64_t v11 = a1[4];
      *(void *)a3 = v7;
      unint64_t v13 = *((void *)v7 + 2);
      unint64_t v12 = *((void *)v7 + 3);
      if (v13 >= v12 >> 1) {
        uint64_t v7 = sub_1C8D5EB50((char *)(v12 > 1), v13 + 1, 1, v7);
      }
      *((void *)v7 + 2) = v13 + 1;
      v7[v13 + 32] = 34;
      *(void *)a3 = v7;
      sub_1C8D29538(v11);
      uint64_t v7 = *(char **)a3;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)a3 = v7;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v7 = sub_1C8D5EB50(0, *((void *)v7 + 2) + 1, 1, v7);
        *(void *)a3 = v7;
      }
      unint64_t v16 = *((void *)v7 + 2);
      unint64_t v15 = *((void *)v7 + 3);
      if (v16 >= v15 >> 1) {
        uint64_t v7 = sub_1C8D5EB50((char *)(v15 > 1), v16 + 1, 1, v7);
      }
      *((void *)v7 + 2) = v16 + 1;
      v7[v16 + 32] = 34;
      *(void *)a3 = v7;
      uint64_t v17 = v10 - 1;
      if (v10 != 1)
      {
        char v20 = a1 + 5;
        do
        {
          unint64_t v22 = *v20++;
          unint64_t v21 = v22;
          *(void *)a3 = v7;
          unint64_t v24 = *((void *)v7 + 2);
          unint64_t v23 = *((void *)v7 + 3);
          if (v24 >= v23 >> 1) {
            uint64_t v7 = sub_1C8D5EB50((char *)(v23 > 1), v24 + 1, 1, v7);
          }
          *((void *)v7 + 2) = v24 + 1;
          v7[v24 + 32] = 44;
          *(void *)a3 = v7;
          unint64_t v26 = *((void *)v7 + 2);
          unint64_t v25 = *((void *)v7 + 3);
          if (v26 >= v25 >> 1) {
            uint64_t v7 = sub_1C8D5EB50((char *)(v25 > 1), v26 + 1, 1, v7);
          }
          *((void *)v7 + 2) = v26 + 1;
          v7[v26 + 32] = 34;
          *(void *)a3 = v7;
          sub_1C8D29538(v21);
          uint64_t v7 = *(char **)a3;
          char v27 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)a3 = v7;
          if ((v27 & 1) == 0)
          {
            uint64_t v7 = sub_1C8D5EB50(0, *((void *)v7 + 2) + 1, 1, v7);
            *(void *)a3 = v7;
          }
          unint64_t v29 = *((void *)v7 + 2);
          unint64_t v28 = *((void *)v7 + 3);
          if (v29 >= v28 >> 1) {
            uint64_t v7 = sub_1C8D5EB50((char *)(v28 > 1), v29 + 1, 1, v7);
          }
          *((void *)v7 + 2) = v29 + 1;
          v7[v29 + 32] = 34;
          *(void *)a3 = v7;
          --v17;
        }
        while (v17);
      }
      uint64_t result = swift_bridgeObjectRelease();
    }
    *(void *)a3 = v7;
    unint64_t v19 = *((void *)v7 + 2);
    unint64_t v18 = *((void *)v7 + 3);
    if (v19 >= v18 >> 1)
    {
      uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v18 > 1), v19 + 1, 1, v7);
      uint64_t v7 = (char *)result;
    }
    *((void *)v7 + 2) = v19 + 1;
    v7[v19 + 32] = 93;
    *(void *)a3 = v7;
    *(_WORD *)(a3 + 8) = 44;
  }
  return result;
}

uint64_t sub_1C8D23910(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_1C8D22E68(a2);
  if (!v3)
  {
    uint64_t v7 = *(char **)a3;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)a3 = v7;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v7 = sub_1C8D5EB50(0, *((void *)v7 + 2) + 1, 1, v7);
      *(void *)a3 = v7;
    }
    unint64_t v10 = *((void *)v7 + 2);
    unint64_t v9 = *((void *)v7 + 3);
    if (v10 >= v9 >> 1) {
      uint64_t v7 = sub_1C8D5EB50((char *)(v9 > 1), v10 + 1, 1, v7);
    }
    *((void *)v7 + 2) = v10 + 1;
    v7[v10 + 32] = 91;
    *(void *)a3 = v7;
    *(_WORD *)(a3 + 8) = 256;
    uint64_t v11 = *(void *)(a1 + 16);
    if (v11)
    {
      unint64_t v12 = *(unsigned int *)(a1 + 32);
      swift_bridgeObjectRetain();
      sub_1C8D29538(v12);
      uint64_t v13 = v11 - 1;
      if (v11 != 1)
      {
        unint64_t v16 = (unsigned int *)(a1 + 36);
        do
        {
          unsigned int v18 = *v16++;
          unint64_t v17 = v18;
          unint64_t v19 = *(char **)a3;
          char v20 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)a3 = v19;
          if ((v20 & 1) == 0)
          {
            unint64_t v19 = sub_1C8D5EB50(0, *((void *)v19 + 2) + 1, 1, v19);
            *(void *)a3 = v19;
          }
          unint64_t v22 = *((void *)v19 + 2);
          unint64_t v21 = *((void *)v19 + 3);
          if (v22 >= v21 >> 1) {
            unint64_t v19 = sub_1C8D5EB50((char *)(v21 > 1), v22 + 1, 1, v19);
          }
          *((void *)v19 + 2) = v22 + 1;
          v19[v22 + 32] = 44;
          *(void *)a3 = v19;
          sub_1C8D29538(v17);
          --v13;
        }
        while (v13);
      }
      swift_bridgeObjectRelease();
      uint64_t v7 = *(char **)a3;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *(void *)a3 = v7;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1C8D5EB50(0, *((void *)v7 + 2) + 1, 1, v7);
      uint64_t v7 = (char *)result;
      *(void *)a3 = result;
    }
    unint64_t v15 = *((void *)v7 + 2);
    unint64_t v14 = *((void *)v7 + 3);
    if (v15 >= v14 >> 1)
    {
      uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v14 > 1), v15 + 1, 1, v7);
      uint64_t v7 = (char *)result;
    }
    *((void *)v7 + 2) = v15 + 1;
    v7[v15 + 32] = 93;
    *(void *)a3 = v7;
    *(_WORD *)(a3 + 8) = 44;
  }
  return result;
}

uint64_t sub_1C8D23B3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_1C8D22E68(a2);
  if (v3) {
    return result;
  }
  uint64_t v7 = *(char **)a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)a3 = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v7 = sub_1C8D5EB50(0, *((void *)v7 + 2) + 1, 1, v7);
    *(void *)a3 = v7;
  }
  unint64_t v10 = *((void *)v7 + 2);
  unint64_t v9 = *((void *)v7 + 3);
  if (v10 >= v9 >> 1) {
    uint64_t v7 = sub_1C8D5EB50((char *)(v9 > 1), v10 + 1, 1, v7);
  }
  *((void *)v7 + 2) = v10 + 1;
  v7[v10 + 32] = 91;
  *(void *)a3 = v7;
  *(_WORD *)(a3 + 8) = 256;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    double v12 = *(double *)(a1 + 32);
    swift_bridgeObjectRetain();
    if ((~*(void *)&v12 & 0x7FF0000000000000) != 0)
    {
      uint64_t v16 = sub_1C8D88580();
      sub_1C8CA69C8(v16, v17);
      uint64_t v18 = v11 - 1;
      if (v11 == 1)
      {
LABEL_16:
        swift_bridgeObjectRelease();
        uint64_t v7 = *(char **)a3;
        goto LABEL_17;
      }
    }
    else
    {
      if ((*(void *)&v12 & 0xFFFFFFFFFFFFFLL) != 0)
      {
        unint64_t v14 = "\"NaN\"";
        uint64_t v15 = 5;
      }
      else if (v12 >= 0.0)
      {
        unint64_t v14 = "\"Infinity\"";
        uint64_t v15 = 10;
      }
      else
      {
        unint64_t v14 = "\"-Infinity\"";
        uint64_t v15 = 11;
      }
      sub_1C8CA6060((uint64_t)v14, v15, v13);
      uint64_t v18 = v11 - 1;
      if (v11 == 1) {
        goto LABEL_16;
      }
    }
    unint64_t v21 = (double *)(a1 + 40);
    do
    {
      double v24 = *v21;
      unint64_t v25 = *(char **)a3;
      char v26 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)a3 = v25;
      if ((v26 & 1) == 0)
      {
        unint64_t v25 = sub_1C8D5EB50(0, *((void *)v25 + 2) + 1, 1, v25);
        *(void *)a3 = v25;
      }
      unint64_t v28 = *((void *)v25 + 2);
      unint64_t v27 = *((void *)v25 + 3);
      if (v28 >= v27 >> 1) {
        unint64_t v25 = sub_1C8D5EB50((char *)(v27 > 1), v28 + 1, 1, v25);
      }
      *((void *)v25 + 2) = v28 + 1;
      v25[v28 + 32] = 44;
      *(void *)a3 = v25;
      if ((~*(void *)&v24 & 0x7FF0000000000000) != 0)
      {
        uint64_t v22 = sub_1C8D88580();
        sub_1C8CA69C8(v22, v23);
      }
      else if ((*(void *)&v24 & 0xFFFFFFFFFFFFFLL) != 0)
      {
        sub_1C8CA6060((uint64_t)"\"NaN\"", 5, *(unsigned __int8 **)&v24);
      }
      else if (v24 >= 0.0)
      {
        sub_1C8CA6060((uint64_t)"\"Infinity\"", 10, *(unsigned __int8 **)&v24);
      }
      else
      {
        sub_1C8CA6060((uint64_t)"\"-Infinity\"", 11, *(unsigned __int8 **)&v24);
      }
      ++v21;
      --v18;
    }
    while (v18);
    goto LABEL_16;
  }
LABEL_17:
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *(void *)a3 = v7;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50(0, *((void *)v7 + 2) + 1, 1, v7);
    uint64_t v7 = (char *)result;
    *(void *)a3 = result;
  }
  unint64_t v20 = *((void *)v7 + 2);
  unint64_t v19 = *((void *)v7 + 3);
  if (v20 >= v19 >> 1)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v19 > 1), v20 + 1, 1, v7);
    uint64_t v7 = (char *)result;
  }
  *((void *)v7 + 2) = v20 + 1;
  v7[v20 + 32] = 93;
  *(void *)a3 = v7;
  *(_WORD *)(a3 + 8) = 44;
  return result;
}

uint64_t sub_1C8D23E3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_1C8D22E68(a2);
  if (v3) {
    return result;
  }
  uint64_t v7 = *(char **)a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)a3 = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v7 = sub_1C8D5EB50(0, *((void *)v7 + 2) + 1, 1, v7);
    *(void *)a3 = v7;
  }
  unint64_t v10 = *((void *)v7 + 2);
  unint64_t v9 = *((void *)v7 + 3);
  if (v10 >= v9 >> 1) {
    uint64_t v7 = sub_1C8D5EB50((char *)(v9 > 1), v10 + 1, 1, v7);
  }
  *((void *)v7 + 2) = v10 + 1;
  v7[v10 + 32] = 91;
  *(void *)a3 = v7;
  *(_WORD *)(a3 + 8) = 256;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    float v12 = *(float *)(a1 + 32);
    swift_bridgeObjectRetain();
    if ((~LODWORD(v12) & 0x7F800000) != 0)
    {
      uint64_t v16 = sub_1C8D88590();
      sub_1C8CA69C8(v16, v17);
      uint64_t v18 = v11 - 1;
      if (v11 == 1)
      {
LABEL_16:
        swift_bridgeObjectRelease();
        uint64_t v7 = *(char **)a3;
        goto LABEL_17;
      }
    }
    else
    {
      if ((LODWORD(v12) & 0x7FFFFF) != 0)
      {
        unint64_t v14 = "\"NaN\"";
        uint64_t v15 = 5;
      }
      else if (v12 >= 0.0)
      {
        unint64_t v14 = "\"Infinity\"";
        uint64_t v15 = 10;
      }
      else
      {
        unint64_t v14 = "\"-Infinity\"";
        uint64_t v15 = 11;
      }
      sub_1C8CA6060((uint64_t)v14, v15, v13);
      uint64_t v18 = v11 - 1;
      if (v11 == 1) {
        goto LABEL_16;
      }
    }
    unint64_t v21 = (float *)(a1 + 36);
    do
    {
      float v24 = *v21;
      unint64_t v25 = *(char **)a3;
      char v26 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)a3 = v25;
      if ((v26 & 1) == 0)
      {
        unint64_t v25 = sub_1C8D5EB50(0, *((void *)v25 + 2) + 1, 1, v25);
        *(void *)a3 = v25;
      }
      unint64_t v28 = *((void *)v25 + 2);
      unint64_t v27 = *((void *)v25 + 3);
      if (v28 >= v27 >> 1) {
        unint64_t v25 = sub_1C8D5EB50((char *)(v27 > 1), v28 + 1, 1, v25);
      }
      *((void *)v25 + 2) = v28 + 1;
      v25[v28 + 32] = 44;
      *(void *)a3 = v25;
      if ((~LODWORD(v24) & 0x7F800000) != 0)
      {
        uint64_t v22 = sub_1C8D88590();
        sub_1C8CA69C8(v22, v23);
      }
      else if ((LODWORD(v24) & 0x7FFFFF) != 0)
      {
        sub_1C8CA6060((uint64_t)"\"NaN\"", 5, (unsigned __int8 *)LODWORD(v24));
      }
      else if (v24 >= 0.0)
      {
        sub_1C8CA6060((uint64_t)"\"Infinity\"", 10, (unsigned __int8 *)LODWORD(v24));
      }
      else
      {
        sub_1C8CA6060((uint64_t)"\"-Infinity\"", 11, (unsigned __int8 *)LODWORD(v24));
      }
      ++v21;
      --v18;
    }
    while (v18);
    goto LABEL_16;
  }
LABEL_17:
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *(void *)a3 = v7;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50(0, *((void *)v7 + 2) + 1, 1, v7);
    uint64_t v7 = (char *)result;
    *(void *)a3 = result;
  }
  unint64_t v20 = *((void *)v7 + 2);
  unint64_t v19 = *((void *)v7 + 3);
  if (v20 >= v19 >> 1)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v19 > 1), v20 + 1, 1, v7);
    uint64_t v7 = (char *)result;
  }
  *((void *)v7 + 2) = v20 + 1;
  v7[v20 + 32] = 93;
  *(void *)a3 = v7;
  *(_WORD *)(a3 + 8) = 44;
  return result;
}

uint64_t sub_1C8D2413C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_1C8D22E68(a2);
  if (!v3)
  {
    uint64_t v7 = *(char **)a3;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)a3 = v7;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v7 = sub_1C8D5EB50(0, *((void *)v7 + 2) + 1, 1, v7);
      *(void *)a3 = v7;
    }
    unint64_t v10 = *((void *)v7 + 2);
    unint64_t v9 = *((void *)v7 + 3);
    if (v10 >= v9 >> 1) {
      uint64_t v7 = sub_1C8D5EB50((char *)(v9 > 1), v10 + 1, 1, v7);
    }
    *((void *)v7 + 2) = v10 + 1;
    v7[v10 + 32] = 91;
    *(void *)a3 = v7;
    *(_WORD *)(a3 + 8) = 256;
    uint64_t v11 = *(void *)(a1 + 16);
    if (v11)
    {
      char v12 = *(unsigned char *)(a1 + 32);
      swift_bridgeObjectRetain();
      if (v12)
      {
        unint64_t v14 = "true";
        uint64_t v15 = 4;
      }
      else
      {
        unint64_t v14 = "false";
        uint64_t v15 = 5;
      }
      sub_1C8CA6060((uint64_t)v14, v15, v13);
      uint64_t v16 = v11 - 1;
      if (v11 != 1)
      {
        unint64_t v19 = (unsigned __int8 *)(a1 + 33);
        do
        {
          int v22 = *v19;
          unint64_t v23 = *(char **)a3;
          char v24 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)a3 = v23;
          if ((v24 & 1) == 0)
          {
            unint64_t v23 = sub_1C8D5EB50(0, *((void *)v23 + 2) + 1, 1, v23);
            *(void *)a3 = v23;
          }
          unint64_t v26 = *((void *)v23 + 2);
          unint64_t v25 = *((void *)v23 + 3);
          if (v26 >= v25 >> 1) {
            unint64_t v23 = sub_1C8D5EB50((char *)(v25 > 1), v26 + 1, 1, v23);
          }
          *((void *)v23 + 2) = v26 + 1;
          v23[v26 + 32] = 44;
          *(void *)a3 = v23;
          if (v22)
          {
            unint64_t v20 = "true";
            uint64_t v21 = 4;
          }
          else
          {
            unint64_t v20 = "false";
            uint64_t v21 = 5;
          }
          sub_1C8CA6060((uint64_t)v20, v21, (unsigned __int8 *)&v23[v26]);
          ++v19;
          --v16;
        }
        while (v16);
      }
      swift_bridgeObjectRelease();
      uint64_t v7 = *(char **)a3;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *(void *)a3 = v7;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1C8D5EB50(0, *((void *)v7 + 2) + 1, 1, v7);
      uint64_t v7 = (char *)result;
      *(void *)a3 = result;
    }
    unint64_t v18 = *((void *)v7 + 2);
    unint64_t v17 = *((void *)v7 + 3);
    if (v18 >= v17 >> 1)
    {
      uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v17 > 1), v18 + 1, 1, v7);
      uint64_t v7 = (char *)result;
    }
    *((void *)v7 + 2) = v18 + 1;
    v7[v18 + 32] = 93;
    *(void *)a3 = v7;
    *(_WORD *)(a3 + 8) = 44;
  }
  return result;
}

uint64_t sub_1C8D243A4(uint64_t a1, uint64_t a2, void (*a3)(char **, char *), uint64_t a4, uint64_t a5)
{
  uint64_t v7 = v5;
  uint64_t v11 = *(void *)(a5 - 8);
  uint64_t v45 = a4;
  uint64_t v46 = v11;
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = MEMORY[0x1F4188790](a1, a2);
  unint64_t v14 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13, v15);
  unint64_t v17 = (char *)&v37 - v16;
  uint64_t result = sub_1C8D22E68(v18);
  if (!v6)
  {
    long long v44 = v17;
    uint64_t v38 = v12;
    unint64_t v20 = *v5;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v7 = v20;
    long long v43 = a3;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
LABEL_28:
      unint64_t v20 = sub_1C8D5EB50(0, *((void *)v20 + 2) + 1, 1, v20);
      *uint64_t v7 = v20;
    }
    unint64_t v23 = *((void *)v20 + 2);
    unint64_t v22 = *((void *)v20 + 3);
    if (v23 >= v22 >> 1) {
      unint64_t v20 = sub_1C8D5EB50((char *)(v22 > 1), v23 + 1, 1, v20);
    }
    *((void *)v20 + 2) = v23 + 1;
    v20[v23 + 32] = 91;
    *uint64_t v7 = v20;
    *((_WORD *)v7 + 4) = 256;
    uint64_t v24 = swift_bridgeObjectRetain();
    if (MEMORY[0x1CB773090](v24, a5))
    {
      uint64_t v25 = 0;
      char v26 = 0;
      long long v41 = (void (**)(char *, char *, uint64_t))(v46 + 32);
      uint64_t v42 = (void (**)(char *, uint64_t *, uint64_t))(v46 + 16);
      long long v39 = v7;
      long long v40 = (void (**)(char *, uint64_t))(v46 + 8);
      do
      {
        char v27 = sub_1C8D88510();
        sub_1C8D884D0();
        if (v27)
        {
          unint64_t v20 = v44;
          (*(void (**)(char *, unint64_t, uint64_t))(v46 + 16))(v44, a1+ ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(void *)(v46 + 72) * v25, a5);
          uint64_t v28 = v25 + 1;
          if (__OFADD__(v25, 1)) {
            goto LABEL_27;
          }
        }
        else
        {
          uint64_t result = sub_1C8D886B0();
          if (v38 != 8)
          {
            __break(1u);
            return result;
          }
          uint64_t v47 = result;
          uint64_t v33 = v44;
          (*v42)(v44, &v47, a5);
          unint64_t v20 = v33;
          swift_unknownObjectRelease();
          uint64_t v28 = v25 + 1;
          if (__OFADD__(v25, 1))
          {
LABEL_27:
            __break(1u);
            goto LABEL_28;
          }
        }
        (*v41)(v14, v20, a5);
        if (v26)
        {
          unint64_t v29 = *v7;
          char v30 = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v7 = v29;
          if ((v30 & 1) == 0)
          {
            unint64_t v29 = sub_1C8D5EB50(0, *((void *)v29 + 2) + 1, 1, v29);
            *uint64_t v7 = v29;
          }
          unint64_t v32 = *((void *)v29 + 2);
          unint64_t v31 = *((void *)v29 + 3);
          if (v32 >= v31 >> 1) {
            unint64_t v29 = sub_1C8D5EB50((char *)(v31 > 1), v32 + 1, 1, v29);
          }
          *((void *)v29 + 2) = v32 + 1;
          v29[v32 + 32] = 44;
          uint64_t v7 = v39;
          *long long v39 = v29;
        }
        v43(v7, v14);
        (*v40)(v14, a5);
        ++v25;
        char v26 = 1;
      }
      while (v28 != MEMORY[0x1CB773090](a1, a5));
    }
    swift_bridgeObjectRelease();
    uint64_t v34 = (uint64_t)*v7;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v7 = (char *)v34;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1C8D5EB50(0, *(void *)(v34 + 16) + 1, 1, (char *)v34);
      uint64_t v34 = result;
      *uint64_t v7 = (char *)result;
    }
    unint64_t v36 = *(void *)(v34 + 16);
    unint64_t v35 = *(void *)(v34 + 24);
    if (v36 >= v35 >> 1)
    {
      uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v35 > 1), v36 + 1, 1, (char *)v34);
      uint64_t v34 = result;
    }
    *(void *)(v34 + 16) = v36 + 1;
    *(unsigned char *)(v34 + v36 + 32) = 93;
    *uint64_t v7 = (char *)v34;
    *((_WORD *)v7 + 4) = 44;
  }
  return result;
}

uint64_t sub_1C8D247CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (char **)v4;
  uint64_t result = sub_1C8D22E68(a2);
  if (!v5)
  {
    if ((*(unsigned char *)(v4 + 48) & 1) != 0
      || (sub_1C8CB5340(a3, a4, (uint64_t)v31), sub_1C8CCC4E8((uint64_t)v31, (uint64_t)v32), v33 == 255))
    {
      unint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 40))(a3, a4);
      unint64_t v11 = v10;
      if ((v10 & 0x8000000000000000) != 0)
      {
        uint64_t v12 = *v6;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v6 = v12;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v12 = sub_1C8D5EB50(0, *((void *)v12 + 2) + 1, 1, v12);
          *uint64_t v6 = v12;
        }
        unint64_t v15 = *((void *)v12 + 2);
        unint64_t v14 = *((void *)v12 + 3);
        if (v15 >= v14 >> 1) {
          uint64_t v12 = sub_1C8D5EB50((char *)(v14 > 1), v15 + 1, 1, v12);
        }
        *((void *)v12 + 2) = v15 + 1;
        v12[v15 + 32] = 45;
        *uint64_t v6 = v12;
        unint64_t v10 = -(uint64_t)v11;
      }
      return sub_1C8D29538(v10);
    }
    else
    {
      uint64_t v16 = v32[0];
      uint64_t v17 = v32[1];
      uint64_t v18 = *v6;
      char v19 = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v6 = v18;
      if ((v19 & 1) == 0)
      {
        uint64_t v18 = sub_1C8D5EB50(0, *((void *)v18 + 2) + 1, 1, v18);
        *uint64_t v6 = v18;
      }
      unint64_t v20 = *((void *)v18 + 2);
      unint64_t v21 = *((void *)v18 + 3);
      unint64_t v22 = v20 + 1;
      if (v20 >= v21 >> 1)
      {
        uint64_t v28 = v18;
        unint64_t v29 = *((void *)v18 + 2);
        char v30 = sub_1C8D5EB50((char *)(v21 > 1), v20 + 1, 1, v28);
        unint64_t v20 = v29;
        uint64_t v18 = v30;
      }
      *((void *)v18 + 2) = v22;
      unint64_t v23 = (unsigned __int8 *)&v18[v20];
      v23[32] = 34;
      *uint64_t v6 = v18;
      sub_1C8CA6060(v16, v17, v23);
      uint64_t v24 = *v6;
      char v25 = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v6 = v24;
      if ((v25 & 1) == 0)
      {
        uint64_t v24 = sub_1C8D5EB50(0, *((void *)v24 + 2) + 1, 1, v24);
        *uint64_t v6 = v24;
      }
      unint64_t v27 = *((void *)v24 + 2);
      unint64_t v26 = *((void *)v24 + 3);
      if (v27 >= v26 >> 1)
      {
        uint64_t v24 = sub_1C8D5EB50((char *)(v26 > 1), v27 + 1, 1, v24);
        *uint64_t v6 = v24;
      }
      *((void *)v24 + 2) = v27 + 1;
      v24[v27 + 32] = 34;
      uint64_t result = sub_1C8CCC5AC((uint64_t)v31);
      *uint64_t v6 = v24;
    }
  }
  return result;
}

uint64_t sub_1C8D24A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = sub_1C8D22E68(a2);
  if (!v5)
  {
    char v9 = *(unsigned char *)(v4 + 49);
    v12[0] = *(unsigned char *)(v4 + 48);
    v12[1] = v9;
    uint64_t v10 = Message.jsonUTF8Data(options:)(v12, a3, a4);
    return sub_1C8CA62B4(v10, v11);
  }
  return result;
}

uint64_t sub_1C8D24AC4(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C8D22E68(a2);
  if (!v3)
  {
    uint64_t v6 = *(char **)v2;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)uint64_t v2 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v6 = sub_1C8D5EB50(0, *((void *)v6 + 2) + 1, 1, v6);
      *(void *)uint64_t v2 = v6;
    }
    unint64_t v9 = *((void *)v6 + 2);
    unint64_t v8 = *((void *)v6 + 3);
    if (v9 >= v8 >> 1) {
      uint64_t v6 = sub_1C8D5EB50((char *)(v8 > 1), v9 + 1, 1, v6);
    }
    *((void *)v6 + 2) = v9 + 1;
    v6[v9 + 32] = 91;
    *(void *)uint64_t v2 = v6;
    *(_WORD *)(v2 + 8) = 256;
    uint64_t v10 = *(void *)(a1 + 16);
    if (v10)
    {
      unint64_t v11 = *(unsigned int *)(a1 + 32);
      swift_bridgeObjectRetain();
      sub_1C8D29538(v11);
      uint64_t v12 = v10 - 1;
      if (v10 != 1)
      {
        unint64_t v15 = (unsigned int *)(a1 + 36);
        do
        {
          unsigned int v17 = *v15++;
          unint64_t v16 = v17;
          uint64_t v18 = *(char **)v2;
          char v19 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)uint64_t v2 = v18;
          if ((v19 & 1) == 0)
          {
            uint64_t v18 = sub_1C8D5EB50(0, *((void *)v18 + 2) + 1, 1, v18);
            *(void *)uint64_t v2 = v18;
          }
          unint64_t v21 = *((void *)v18 + 2);
          unint64_t v20 = *((void *)v18 + 3);
          if (v21 >= v20 >> 1) {
            uint64_t v18 = sub_1C8D5EB50((char *)(v20 > 1), v21 + 1, 1, v18);
          }
          *((void *)v18 + 2) = v21 + 1;
          v18[v21 + 32] = 44;
          *(void *)uint64_t v2 = v18;
          sub_1C8D29538(v16);
          --v12;
        }
        while (v12);
      }
      swift_bridgeObjectRelease();
      uint64_t v6 = *(char **)v2;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *(void *)uint64_t v2 = v6;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1C8D5EB50(0, *((void *)v6 + 2) + 1, 1, v6);
      uint64_t v6 = (char *)result;
      *(void *)uint64_t v2 = result;
    }
    unint64_t v14 = *((void *)v6 + 2);
    unint64_t v13 = *((void *)v6 + 3);
    if (v14 >= v13 >> 1)
    {
      uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v13 > 1), v14 + 1, 1, v6);
      uint64_t v6 = (char *)result;
    }
    *((void *)v6 + 2) = v14 + 1;
    v6[v14 + 32] = 93;
    *(void *)uint64_t v2 = v6;
    *(_WORD *)(v2 + 8) = 44;
  }
  return result;
}

uint64_t sub_1C8D24CEC(void *a1, uint64_t a2)
{
  uint64_t result = sub_1C8D22E68(a2);
  if (!v3)
  {
    uint64_t v6 = *(char **)v2;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *(void *)uint64_t v2 = v6;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1C8D5EB50(0, *((void *)v6 + 2) + 1, 1, v6);
      uint64_t v6 = (char *)result;
      *(void *)uint64_t v2 = result;
    }
    unint64_t v8 = *((void *)v6 + 2);
    unint64_t v7 = *((void *)v6 + 3);
    if (v8 >= v7 >> 1)
    {
      uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v7 > 1), v8 + 1, 1, v6);
      uint64_t v6 = (char *)result;
    }
    *((void *)v6 + 2) = v8 + 1;
    v6[v8 + 32] = 91;
    *(void *)uint64_t v2 = v6;
    *(_WORD *)(v2 + 8) = 256;
    uint64_t v9 = a1[2];
    if (v9)
    {
      swift_bridgeObjectRetain();
      unint64_t v10 = a1[4];
      *(void *)uint64_t v2 = v6;
      unint64_t v12 = *((void *)v6 + 2);
      unint64_t v11 = *((void *)v6 + 3);
      if (v12 >= v11 >> 1) {
        uint64_t v6 = sub_1C8D5EB50((char *)(v11 > 1), v12 + 1, 1, v6);
      }
      *((void *)v6 + 2) = v12 + 1;
      v6[v12 + 32] = 34;
      *(void *)uint64_t v2 = v6;
      sub_1C8D29538(v10);
      uint64_t v6 = *(char **)v2;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)uint64_t v2 = v6;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v6 = sub_1C8D5EB50(0, *((void *)v6 + 2) + 1, 1, v6);
        *(void *)uint64_t v2 = v6;
      }
      unint64_t v15 = *((void *)v6 + 2);
      unint64_t v14 = *((void *)v6 + 3);
      if (v15 >= v14 >> 1) {
        uint64_t v6 = sub_1C8D5EB50((char *)(v14 > 1), v15 + 1, 1, v6);
      }
      *((void *)v6 + 2) = v15 + 1;
      v6[v15 + 32] = 34;
      *(void *)uint64_t v2 = v6;
      uint64_t v16 = v9 - 1;
      if (v9 != 1)
      {
        char v19 = a1 + 5;
        do
        {
          unint64_t v21 = *v19++;
          unint64_t v20 = v21;
          *(void *)uint64_t v2 = v6;
          unint64_t v23 = *((void *)v6 + 2);
          unint64_t v22 = *((void *)v6 + 3);
          if (v23 >= v22 >> 1) {
            uint64_t v6 = sub_1C8D5EB50((char *)(v22 > 1), v23 + 1, 1, v6);
          }
          *((void *)v6 + 2) = v23 + 1;
          v6[v23 + 32] = 44;
          *(void *)uint64_t v2 = v6;
          unint64_t v25 = *((void *)v6 + 2);
          unint64_t v24 = *((void *)v6 + 3);
          if (v25 >= v24 >> 1) {
            uint64_t v6 = sub_1C8D5EB50((char *)(v24 > 1), v25 + 1, 1, v6);
          }
          *((void *)v6 + 2) = v25 + 1;
          v6[v25 + 32] = 34;
          *(void *)uint64_t v2 = v6;
          sub_1C8D29538(v20);
          uint64_t v6 = *(char **)v2;
          char v26 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)uint64_t v2 = v6;
          if ((v26 & 1) == 0)
          {
            uint64_t v6 = sub_1C8D5EB50(0, *((void *)v6 + 2) + 1, 1, v6);
            *(void *)uint64_t v2 = v6;
          }
          unint64_t v28 = *((void *)v6 + 2);
          unint64_t v27 = *((void *)v6 + 3);
          if (v28 >= v27 >> 1) {
            uint64_t v6 = sub_1C8D5EB50((char *)(v27 > 1), v28 + 1, 1, v6);
          }
          *((void *)v6 + 2) = v28 + 1;
          v6[v28 + 32] = 34;
          *(void *)uint64_t v2 = v6;
          --v16;
        }
        while (v16);
      }
      uint64_t result = swift_bridgeObjectRelease();
    }
    *(void *)uint64_t v2 = v6;
    unint64_t v18 = *((void *)v6 + 2);
    unint64_t v17 = *((void *)v6 + 3);
    if (v18 >= v17 >> 1)
    {
      uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v17 > 1), v18 + 1, 1, v6);
      uint64_t v6 = (char *)result;
    }
    *((void *)v6 + 2) = v18 + 1;
    v6[v18 + 32] = 93;
    *(void *)uint64_t v2 = v6;
    *(_WORD *)(v2 + 8) = 44;
  }
  return result;
}

uint64_t sub_1C8D2502C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C8D22E68(a2);
  if (!v3)
  {
    uint64_t v6 = *(char **)v2;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)uint64_t v2 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v6 = sub_1C8D5EB50(0, *((void *)v6 + 2) + 1, 1, v6);
      *(void *)uint64_t v2 = v6;
    }
    unint64_t v9 = *((void *)v6 + 2);
    unint64_t v8 = *((void *)v6 + 3);
    if (v9 >= v8 >> 1) {
      uint64_t v6 = sub_1C8D5EB50((char *)(v8 > 1), v9 + 1, 1, v6);
    }
    *((void *)v6 + 2) = v9 + 1;
    v6[v9 + 32] = 91;
    *(void *)uint64_t v2 = v6;
    *(_WORD *)(v2 + 8) = 256;
    uint64_t v10 = *(void *)(a1 + 16);
    if (v10)
    {
      swift_bridgeObjectRetain();
      unint64_t v11 = *(int *)(a1 + 32);
      if ((v11 & 0x80000000) != 0)
      {
        unint64_t v12 = *(char **)v2;
        char v13 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)uint64_t v2 = v12;
        if ((v13 & 1) == 0)
        {
          unint64_t v12 = sub_1C8D5EB50(0, *((void *)v12 + 2) + 1, 1, v12);
          *(void *)uint64_t v2 = v12;
        }
        unint64_t v15 = *((void *)v12 + 2);
        unint64_t v14 = *((void *)v12 + 3);
        if (v15 >= v14 >> 1) {
          unint64_t v12 = sub_1C8D5EB50((char *)(v14 > 1), v15 + 1, 1, v12);
        }
        *((void *)v12 + 2) = v15 + 1;
        v12[v15 + 32] = 45;
        *(void *)uint64_t v2 = v12;
        unint64_t v11 = -(uint64_t)v11;
      }
      sub_1C8D29538(v11);
      uint64_t v16 = v10 - 1;
      if (v16)
      {
        char v19 = (int *)(a1 + 36);
        do
        {
          unint64_t v21 = *v19++;
          unint64_t v20 = v21;
          unint64_t v22 = *(char **)v2;
          char v23 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)uint64_t v2 = v22;
          if ((v23 & 1) == 0)
          {
            unint64_t v22 = sub_1C8D5EB50(0, *((void *)v22 + 2) + 1, 1, v22);
            *(void *)uint64_t v2 = v22;
          }
          unint64_t v25 = *((void *)v22 + 2);
          unint64_t v24 = *((void *)v22 + 3);
          if (v25 >= v24 >> 1) {
            unint64_t v22 = sub_1C8D5EB50((char *)(v24 > 1), v25 + 1, 1, v22);
          }
          *((void *)v22 + 2) = v25 + 1;
          v22[v25 + 32] = 44;
          *(void *)uint64_t v2 = v22;
          if ((v20 & 0x80000000) != 0)
          {
            char v26 = *(char **)v2;
            char v27 = swift_isUniquelyReferenced_nonNull_native();
            *(void *)uint64_t v2 = v26;
            if ((v27 & 1) == 0)
            {
              char v26 = sub_1C8D5EB50(0, *((void *)v26 + 2) + 1, 1, v26);
              *(void *)uint64_t v2 = v26;
            }
            unint64_t v29 = *((void *)v26 + 2);
            unint64_t v28 = *((void *)v26 + 3);
            if (v29 >= v28 >> 1) {
              char v26 = sub_1C8D5EB50((char *)(v28 > 1), v29 + 1, 1, v26);
            }
            *((void *)v26 + 2) = v29 + 1;
            v26[v29 + 32] = 45;
            *(void *)uint64_t v2 = v26;
            unint64_t v20 = -(uint64_t)v20;
          }
          sub_1C8D29538(v20);
          --v16;
        }
        while (v16);
      }
      swift_bridgeObjectRelease();
      uint64_t v6 = *(char **)v2;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *(void *)uint64_t v2 = v6;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1C8D5EB50(0, *((void *)v6 + 2) + 1, 1, v6);
      uint64_t v6 = (char *)result;
      *(void *)uint64_t v2 = result;
    }
    unint64_t v18 = *((void *)v6 + 2);
    unint64_t v17 = *((void *)v6 + 3);
    if (v18 >= v17 >> 1)
    {
      uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v17 > 1), v18 + 1, 1, v6);
      uint64_t v6 = (char *)result;
    }
    *((void *)v6 + 2) = v18 + 1;
    v6[v18 + 32] = 93;
    *(void *)uint64_t v2 = v6;
    *(_WORD *)(v2 + 8) = 44;
  }
  return result;
}

uint64_t sub_1C8D2535C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C8D22E68(a2);
  if (!v3)
  {
    uint64_t v6 = *(char **)v2;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *(void *)uint64_t v2 = v6;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1C8D5EB50(0, *((void *)v6 + 2) + 1, 1, v6);
      uint64_t v6 = (char *)result;
      *(void *)uint64_t v2 = result;
    }
    unint64_t v8 = *((void *)v6 + 2);
    unint64_t v7 = *((void *)v6 + 3);
    if (v8 >= v7 >> 1)
    {
      uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v7 > 1), v8 + 1, 1, v6);
      uint64_t v6 = (char *)result;
    }
    *((void *)v6 + 2) = v8 + 1;
    v6[v8 + 32] = 91;
    *(void *)uint64_t v2 = v6;
    *(_WORD *)(v2 + 8) = 256;
    uint64_t v9 = *(void *)(a1 + 16);
    if (v9)
    {
      swift_bridgeObjectRetain();
      char v10 = 0;
      uint64_t v11 = 0;
      do
      {
        unint64_t v12 = *(void *)(a1 + 8 * v11 + 32);
        if (v10)
        {
          *(void *)uint64_t v2 = v6;
          unint64_t v14 = *((void *)v6 + 2);
          unint64_t v13 = *((void *)v6 + 3);
          if (v14 >= v13 >> 1) {
            uint64_t v6 = sub_1C8D5EB50((char *)(v13 > 1), v14 + 1, 1, v6);
          }
          *((void *)v6 + 2) = v14 + 1;
          v6[v14 + 32] = 44;
        }
        *(void *)uint64_t v2 = v6;
        unint64_t v16 = *((void *)v6 + 2);
        unint64_t v15 = *((void *)v6 + 3);
        unint64_t v17 = v16 + 1;
        if (v16 >= v15 >> 1) {
          uint64_t v6 = sub_1C8D5EB50((char *)(v15 > 1), v16 + 1, 1, v6);
        }
        *((void *)v6 + 2) = v17;
        v6[v16 + 32] = 34;
        *(void *)uint64_t v2 = v6;
        if ((v12 & 0x8000000000000000) != 0)
        {
          unint64_t v18 = *((void *)v6 + 3);
          int64_t v19 = v16 + 2;
          if (v19 > (uint64_t)(v18 >> 1)) {
            uint64_t v6 = sub_1C8D5EB50((char *)(v18 > 1), v19, 1, v6);
          }
          *((void *)v6 + 2) = v19;
          v6[v17 + 32] = 45;
          *(void *)uint64_t v2 = v6;
          unint64_t v12 = -(uint64_t)v12;
        }
        sub_1C8D29538(v12);
        uint64_t v6 = *(char **)v2;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)uint64_t v2 = v6;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v6 = sub_1C8D5EB50(0, *((void *)v6 + 2) + 1, 1, v6);
          *(void *)uint64_t v2 = v6;
        }
        unint64_t v22 = *((void *)v6 + 2);
        unint64_t v21 = *((void *)v6 + 3);
        if (v22 >= v21 >> 1) {
          uint64_t v6 = sub_1C8D5EB50((char *)(v21 > 1), v22 + 1, 1, v6);
        }
        ++v11;
        *((void *)v6 + 2) = v22 + 1;
        v6[v22 + 32] = 34;
        *(void *)uint64_t v2 = v6;
        char v10 = 1;
      }
      while (v9 != v11);
      uint64_t result = swift_bridgeObjectRelease();
    }
    *(void *)uint64_t v2 = v6;
    unint64_t v24 = *((void *)v6 + 2);
    unint64_t v23 = *((void *)v6 + 3);
    if (v24 >= v23 >> 1)
    {
      uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v23 > 1), v24 + 1, 1, v6);
      uint64_t v6 = (char *)result;
    }
    *((void *)v6 + 2) = v24 + 1;
    v6[v24 + 32] = 93;
    *(void *)uint64_t v2 = v6;
    *(_WORD *)(v2 + 8) = 44;
  }
  return result;
}

uint64_t sub_1C8D25624(void *a1, uint64_t a2)
{
  uint64_t result = sub_1C8D22E68(a2);
  if (!v3)
  {
    uint64_t v6 = *(char **)v2;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)uint64_t v2 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v6 = sub_1C8D5EB50(0, *((void *)v6 + 2) + 1, 1, v6);
      *(void *)uint64_t v2 = v6;
    }
    unint64_t v9 = *((void *)v6 + 2);
    unint64_t v8 = *((void *)v6 + 3);
    if (v9 >= v8 >> 1) {
      uint64_t v6 = sub_1C8D5EB50((char *)(v8 > 1), v9 + 1, 1, v6);
    }
    *((void *)v6 + 2) = v9 + 1;
    v6[v9 + 32] = 91;
    *(void *)uint64_t v2 = v6;
    *(_WORD *)(v2 + 8) = 256;
    uint64_t v10 = a1[2];
    if (v10)
    {
      uint64_t v11 = a1[4];
      unint64_t v12 = a1[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C8D288BC(v11, v12);
      swift_bridgeObjectRelease();
      uint64_t v13 = v10 - 1;
      if (v10 != 1)
      {
        unint64_t v16 = a1 + 7;
        do
        {
          uint64_t v18 = *(v16 - 1);
          unint64_t v17 = *v16;
          int64_t v19 = *(char **)v2;
          swift_bridgeObjectRetain();
          char v20 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)uint64_t v2 = v19;
          if ((v20 & 1) == 0)
          {
            int64_t v19 = sub_1C8D5EB50(0, *((void *)v19 + 2) + 1, 1, v19);
            *(void *)uint64_t v2 = v19;
          }
          unint64_t v22 = *((void *)v19 + 2);
          unint64_t v21 = *((void *)v19 + 3);
          if (v22 >= v21 >> 1) {
            int64_t v19 = sub_1C8D5EB50((char *)(v21 > 1), v22 + 1, 1, v19);
          }
          v16 += 2;
          *((void *)v19 + 2) = v22 + 1;
          v19[v22 + 32] = 44;
          *(void *)uint64_t v2 = v19;
          sub_1C8D288BC(v18, v17);
          swift_bridgeObjectRelease();
          --v13;
        }
        while (v13);
      }
      swift_bridgeObjectRelease();
      uint64_t v6 = *(char **)v2;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *(void *)uint64_t v2 = v6;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1C8D5EB50(0, *((void *)v6 + 2) + 1, 1, v6);
      uint64_t v6 = (char *)result;
      *(void *)uint64_t v2 = result;
    }
    unint64_t v15 = *((void *)v6 + 2);
    unint64_t v14 = *((void *)v6 + 3);
    if (v15 >= v14 >> 1)
    {
      uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v14 > 1), v15 + 1, 1, v6);
      uint64_t v6 = (char *)result;
    }
    *((void *)v6 + 2) = v15 + 1;
    v6[v15 + 32] = 93;
    *(void *)uint64_t v2 = v6;
    *(_WORD *)(v2 + 8) = 44;
  }
  return result;
}

uint64_t sub_1C8D2587C(void *a1, uint64_t a2)
{
  uint64_t result = sub_1C8D22E68(a2);
  if (!v3)
  {
    uint64_t v6 = *(char **)v2;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)uint64_t v2 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v6 = sub_1C8D5EB50(0, *((void *)v6 + 2) + 1, 1, v6);
      *(void *)uint64_t v2 = v6;
    }
    unint64_t v9 = *((void *)v6 + 2);
    unint64_t v8 = *((void *)v6 + 3);
    if (v9 >= v8 >> 1) {
      uint64_t v6 = sub_1C8D5EB50((char *)(v8 > 1), v9 + 1, 1, v6);
    }
    *((void *)v6 + 2) = v9 + 1;
    v6[v9 + 32] = 91;
    *(void *)uint64_t v2 = v6;
    *(_WORD *)(v2 + 8) = 256;
    uint64_t v10 = a1[2];
    if (v10)
    {
      uint64_t v11 = a1[4];
      unint64_t v12 = a1[5];
      swift_bridgeObjectRetain();
      sub_1C8CA3CF8(v11, v12);
      sub_1C8D290C0(v11, v12);
      sub_1C8CA3D5C(v11, v12);
      uint64_t v13 = v10 - 1;
      if (v10 != 1)
      {
        unint64_t v16 = a1 + 7;
        do
        {
          uint64_t v17 = *(v16 - 1);
          unint64_t v18 = *v16;
          int64_t v19 = *(char **)v2;
          sub_1C8CA3CF8(v17, *v16);
          char v20 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)uint64_t v2 = v19;
          if ((v20 & 1) == 0)
          {
            int64_t v19 = sub_1C8D5EB50(0, *((void *)v19 + 2) + 1, 1, v19);
            *(void *)uint64_t v2 = v19;
          }
          unint64_t v22 = *((void *)v19 + 2);
          unint64_t v21 = *((void *)v19 + 3);
          if (v22 >= v21 >> 1) {
            int64_t v19 = sub_1C8D5EB50((char *)(v21 > 1), v22 + 1, 1, v19);
          }
          v16 += 2;
          *((void *)v19 + 2) = v22 + 1;
          v19[v22 + 32] = 44;
          *(void *)uint64_t v2 = v19;
          sub_1C8D290C0(v17, v18);
          sub_1C8CA3D5C(v17, v18);
          --v13;
        }
        while (v13);
      }
      swift_bridgeObjectRelease();
      uint64_t v6 = *(char **)v2;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *(void *)uint64_t v2 = v6;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1C8D5EB50(0, *((void *)v6 + 2) + 1, 1, v6);
      uint64_t v6 = (char *)result;
      *(void *)uint64_t v2 = result;
    }
    unint64_t v15 = *((void *)v6 + 2);
    unint64_t v14 = *((void *)v6 + 3);
    if (v15 >= v14 >> 1)
    {
      uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v14 > 1), v15 + 1, 1, v6);
      uint64_t v6 = (char *)result;
    }
    *((void *)v6 + 2) = v15 + 1;
    v6[v15 + 32] = 93;
    *(void *)uint64_t v2 = v6;
    *(_WORD *)(v2 + 8) = 44;
  }
  return result;
}

uint64_t sub_1C8D25AE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v5 = *(unsigned char *)(v4 + 48);
  v7[2] = a3;
  v7[3] = a4;
  char v8 = v5;
  return sub_1C8D243A4(a1, a2, (void (*)(char **, char *))sub_1C8D27DD0, (uint64_t)v7, a3);
}

uint64_t sub_1C8D25B2C(char **a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  if ((a3 & 1) != 0 || (sub_1C8CB5340(a4, a5, (uint64_t)v34), sub_1C8CCC4E8((uint64_t)v34, (uint64_t)v35), v36 == 255))
  {
    unint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 40))(a4, a5);
    unint64_t v9 = v8;
    if ((v8 & 0x8000000000000000) != 0)
    {
      uint64_t v10 = *a1;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v10;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v10 = sub_1C8D5EB50(0, *((void *)v10 + 2) + 1, 1, v10);
        *a1 = v10;
      }
      unint64_t v12 = *((void *)v10 + 2);
      unint64_t v13 = *((void *)v10 + 3);
      unint64_t v14 = v12 + 1;
      if (v12 >= v13 >> 1)
      {
        unint64_t v28 = v10;
        unint64_t v29 = *((void *)v10 + 2);
        char v30 = sub_1C8D5EB50((char *)(v13 > 1), v12 + 1, 1, v28);
        unint64_t v12 = v29;
        uint64_t v10 = v30;
      }
      *((void *)v10 + 2) = v14;
      v10[v12 + 32] = 45;
      *a1 = v10;
      unint64_t v8 = -(uint64_t)v9;
    }
    return sub_1C8D29538(v8);
  }
  else
  {
    uint64_t v16 = v35[0];
    uint64_t v17 = v35[1];
    unint64_t v18 = *a1;
    char v19 = swift_isUniquelyReferenced_nonNull_native();
    *a1 = v18;
    if ((v19 & 1) == 0)
    {
      unint64_t v18 = sub_1C8D5EB50(0, *((void *)v18 + 2) + 1, 1, v18);
      *a1 = v18;
    }
    unint64_t v20 = *((void *)v18 + 2);
    unint64_t v21 = *((void *)v18 + 3);
    unint64_t v22 = v20 + 1;
    if (v20 >= v21 >> 1)
    {
      unint64_t v37 = v20 + 1;
      unint64_t v31 = v18;
      unint64_t v32 = v20;
      unsigned __int8 v33 = sub_1C8D5EB50((char *)(v21 > 1), v20 + 1, 1, v31);
      unint64_t v20 = v32;
      unint64_t v22 = v37;
      unint64_t v18 = v33;
    }
    *((void *)v18 + 2) = v22;
    unint64_t v23 = (unsigned __int8 *)&v18[v20];
    v23[32] = 34;
    *a1 = v18;
    sub_1C8CA6060(v16, v17, v23);
    unint64_t v24 = *a1;
    char v25 = swift_isUniquelyReferenced_nonNull_native();
    *a1 = v24;
    if ((v25 & 1) == 0)
    {
      unint64_t v24 = sub_1C8D5EB50(0, *((void *)v24 + 2) + 1, 1, v24);
      *a1 = v24;
    }
    unint64_t v27 = *((void *)v24 + 2);
    unint64_t v26 = *((void *)v24 + 3);
    if (v27 >= v26 >> 1)
    {
      unint64_t v24 = sub_1C8D5EB50((char *)(v26 > 1), v27 + 1, 1, v24);
      *a1 = v24;
    }
    *((void *)v24 + 2) = v27 + 1;
    v24[v27 + 32] = 34;
    uint64_t result = sub_1C8CCC5AC((uint64_t)v34);
    *a1 = v24;
  }
  return result;
}

uint64_t sub_1C8D25D8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v5 = *(unsigned char *)(v4 + 48);
  char v6 = *(unsigned char *)(v4 + 49);
  v8[2] = a3;
  v8[3] = a4;
  char v9 = v5;
  char v10 = v6;
  return sub_1C8D243A4(a1, a2, (void (*)(char **, char *))sub_1C8D27D9C, (uint64_t)v8, a3);
}

uint64_t sub_1C8D25DDC(uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  __int16 v8 = a3 & 0x101;
  uint64_t result = Message.jsonUTF8Data(options:)((char *)&v8, a4, a5);
  if (!v5) {
    return sub_1C8CA62B4(result, v7);
  }
  return result;
}

uint64_t sub_1C8D25E3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v98 = a1;
  uint64_t v95 = *(void *)(a6 + 8);
  uint64_t v92 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v77 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness, v11);
  v93 = (char *)&v68 - v12;
  uint64_t v94 = a3;
  uint64_t v96 = *(void *)(a5 + 8);
  uint64_t v14 = v13;
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v78 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15, v16);
  unint64_t v18 = (char *)&v68 - v17;
  uint64_t v107 = v14;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v20 = sub_1C8D88620();
  int64_t v21 = *(void *)(v20 - 8);
  uint64_t v23 = MEMORY[0x1F4188790](v20, v22);
  char v25 = (char *)&v68 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23, v26);
  unint64_t v28 = (char *)&v68 - v27;
  uint64_t v29 = v99;
  uint64_t result = sub_1C8D22E68(a2);
  if (v29) {
    return result;
  }
  int64_t v97 = v21;
  v90 = v25;
  v91 = v18;
  uint64_t v85 = v20;
  uint64_t v99 = v15;
  sub_1C8CA69C8(123, 0xE100000000000000);
  uint64_t v31 = *v6;
  char v32 = *((unsigned char *)v6 + 8);
  char v33 = *((unsigned char *)v6 + 9);
  char v34 = *((unsigned char *)v6 + 48);
  unint64_t v69 = v6;
  char v35 = *((unsigned char *)v6 + 49);
  v100[0] = 0;
  v100[1] = 0;
  __int16 v101 = 256;
  uint64_t v102 = v31;
  char v103 = v32;
  char v104 = v33;
  char v105 = v34;
  char v106 = v35;
  if ((v98 & 0xC000000000000001) != 0)
  {
    uint64_t v36 = sub_1C8D88730();
    uint64_t v71 = 0;
    uint64_t v37 = 0;
    unint64_t v38 = 0;
    unint64_t v39 = v36 | 0x8000000000000000;
  }
  else
  {
    uint64_t v40 = -1 << *(unsigned char *)(v98 + 32);
    uint64_t v37 = ~v40;
    uint64_t v41 = *(void *)(v98 + 64);
    uint64_t v71 = v98 + 64;
    uint64_t v42 = -v40;
    if (v42 < 64) {
      uint64_t v43 = ~(-1 << v42);
    }
    else {
      uint64_t v43 = -1;
    }
    unint64_t v38 = v43 & v41;
    unint64_t v39 = v98;
  }
  long long v44 = v91;
  uint64_t v73 = v39 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v89 = TupleTypeMetadata2 - 8;
  uint64_t v70 = v37;
  uint64_t v76 = v78 + 16;
  uint64_t v75 = v77 + 16;
  v88 = (void (**)(char *, uint64_t, uint64_t))(v97 + 32);
  uint64_t v84 = (void (**)(char *, char *, uint64_t))(v78 + 32);
  unsigned long long v83 = (void (**)(char *, char *, uint64_t))(v77 + 32);
  uint64_t v82 = v96 + 48;
  uint64_t v79 = v95 + 48;
  unsigned long long v80 = (void (**)(char *, uint64_t))(v77 + 8);
  unsigned long long v81 = (void (**)(char *, uint64_t))(v78 + 8);
  int64_t v72 = (unint64_t)(v37 + 64) >> 6;
  int64_t v68 = v72 - 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int64_t v45 = 0;
  uint64_t v46 = &off_1F2351718;
  unint64_t v47 = v38;
  unint64_t v86 = v39;
  uint64_t v74 = v28;
  while (1)
  {
    unint64_t v87 = v47;
    int64_t v97 = v45;
    if ((v39 & 0x8000000000000000) == 0) {
      break;
    }
    if (sub_1C8D88740())
    {
      uint64_t v53 = (uint64_t)v90;
      sub_1C8D887B0();
      swift_unknownObjectRelease();
      sub_1C8D887B0();
      swift_unknownObjectRelease();
      uint64_t v54 = 0;
      int64_t v50 = v97;
      uint64_t v98 = v47;
    }
    else
    {
      uint64_t v54 = 1;
      int64_t v50 = v97;
      uint64_t v98 = v47;
      uint64_t v53 = (uint64_t)v90;
    }
LABEL_22:
    uint64_t v56 = v85;
    uint64_t v57 = *(void *)(TupleTypeMetadata2 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 56))(v53, v54, 1, TupleTypeMetadata2);
    (*v88)(v28, v53, v56);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v28, 1, TupleTypeMetadata2) == 1)
    {
      sub_1C8D18798();
      uint64_t v64 = v102;
      char v65 = v103;
      char v66 = v104;
      uint64_t v67 = v69;
      swift_bridgeObjectRelease();
      *uint64_t v67 = v64;
      *((unsigned char *)v67 + 8) = v65;
      *((unsigned char *)v67 + 9) = v66;
      return sub_1C8CA69C8(125, 0xE100000000000000);
    }
    uint64_t v58 = &v28[*(int *)(TupleTypeMetadata2 + 48)];
    (*v84)(v44, v28, v99);
    uint64_t v59 = v96;
    unint64_t v60 = v46;
    uint64_t v61 = v44;
    uint64_t v62 = v93;
    (*v83)(v93, v58, v107);
    (*(void (**)(char *, uint64_t, void *, ValueMetadata *, _UNKNOWN **))(v59 + 48))(v61, 1, v100, &type metadata for JSONMapEncodingVisitor, v60);
    (*(void (**)(char *, uint64_t, void *, ValueMetadata *, _UNKNOWN **))(v95 + 48))(v62, 2, v100, &type metadata for JSONMapEncodingVisitor, v60);
    unint64_t v39 = v86;
    uint64_t v46 = v60;
    (*v80)(v62, v107);
    long long v44 = v91;
    (*v81)(v91, v99);
    int64_t v45 = v50;
    unint64_t v47 = v98;
  }
  if (v47)
  {
    long long v48 = v46;
    uint64_t v98 = (v47 - 1) & v47;
    unint64_t v49 = __clz(__rbit64(v47)) | (v45 << 6);
    int64_t v50 = v45;
    uint64_t v51 = v78;
    uint64_t result = (uint64_t)v90;
    goto LABEL_12;
  }
  int64_t v50 = v45 + 1;
  uint64_t v51 = v78;
  uint64_t result = (uint64_t)v90;
  if (__OFADD__(v45, 1))
  {
    __break(1u);
    goto LABEL_40;
  }
  if (v50 >= v72)
  {
    uint64_t v98 = 0;
    uint64_t v54 = 1;
    int64_t v50 = v45;
LABEL_21:
    uint64_t v53 = (uint64_t)v90;
    goto LABEL_22;
  }
  unint64_t v55 = *(void *)(v71 + 8 * v50);
  if (v55) {
    goto LABEL_18;
  }
  if (v45 + 2 >= v72)
  {
    uint64_t v98 = 0;
    uint64_t v54 = 1;
    goto LABEL_21;
  }
  unint64_t v55 = *(void *)(v71 + 8 * (v45 + 2));
  if (v55)
  {
    int64_t v50 = v45 + 2;
    goto LABEL_18;
  }
  int64_t v63 = v45 + 3;
  if (v45 + 3 >= v72)
  {
    uint64_t v98 = 0;
    uint64_t v54 = 1;
    int64_t v50 = v45 + 2;
    goto LABEL_21;
  }
  unint64_t v55 = *(void *)(v71 + 8 * v63);
  if (v55)
  {
    int64_t v50 = v45 + 3;
LABEL_18:
    long long v48 = v46;
    uint64_t v98 = (v55 - 1) & v55;
    unint64_t v49 = __clz(__rbit64(v55)) + (v50 << 6);
LABEL_12:
    unint64_t v52 = v39;
    uint64_t v53 = result;
    (*(void (**)(void))(v51 + 16))();
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v77 + 16))(v53 + *(int *)(TupleTypeMetadata2 + 48), *(void *)(v52 + 56) + *(void *)(v77 + 72) * v49, v107);
    uint64_t v54 = 0;
    uint64_t v46 = v48;
    unint64_t v28 = v74;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v50 = v63 + 1;
    if (__OFADD__(v63, 1)) {
      break;
    }
    if (v50 >= v72)
    {
      uint64_t v98 = 0;
      uint64_t v54 = 1;
      int64_t v50 = v68;
      goto LABEL_21;
    }
    unint64_t v55 = *(void *)(v71 + 8 * v50);
    ++v63;
    if (v55) {
      goto LABEL_18;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1C8D2678C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v88 = a6;
  uint64_t v93 = a1;
  uint64_t v73 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](a1, a2);
  uint64_t v89 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v10 + 8);
  uint64_t v90 = v12;
  uint64_t v91 = v11;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v74 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness, v14);
  uint64_t v16 = (char *)&v64 - v15;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v18 = sub_1C8D88620();
  int64_t v92 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v18, v19);
  uint64_t v22 = (char *)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20, v23);
  char v25 = (char *)&v64 - v24;
  uint64_t v26 = v101;
  uint64_t result = sub_1C8D22E68(a2);
  if (v26) {
    return result;
  }
  uint64_t v82 = v25;
  uint64_t v85 = v22;
  uint64_t v86 = v18;
  __int16 v101 = v16;
  uint64_t v87 = AssociatedTypeWitness;
  sub_1C8CA69C8(123, 0xE100000000000000);
  uint64_t v28 = *v6;
  char v29 = *((unsigned char *)v6 + 8);
  char v30 = *((unsigned char *)v6 + 9);
  char v31 = *((unsigned char *)v6 + 48);
  char v66 = v6;
  char v32 = *((unsigned char *)v6 + 49);
  v94[0] = 0;
  v94[1] = 0;
  __int16 v95 = 256;
  uint64_t v96 = v28;
  char v97 = v29;
  char v98 = v30;
  char v99 = v31;
  char v100 = v32;
  if ((v93 & 0xC000000000000001) != 0)
  {
    uint64_t v33 = sub_1C8D88730();
    uint64_t v68 = 0;
    uint64_t v34 = 0;
    unint64_t v35 = 0;
    unint64_t v36 = v33 | 0x8000000000000000;
  }
  else
  {
    uint64_t v37 = -1 << *(unsigned char *)(v93 + 32);
    uint64_t v34 = ~v37;
    uint64_t v38 = *(void *)(v93 + 64);
    uint64_t v68 = v93 + 64;
    uint64_t v39 = -v37;
    if (v39 < 64) {
      uint64_t v40 = ~(-1 << v39);
    }
    else {
      uint64_t v40 = -1;
    }
    unint64_t v35 = v40 & v38;
    unint64_t v36 = v93;
  }
  uint64_t v41 = v86;
  uint64_t v42 = v87;
  uint64_t v43 = a4;
  uint64_t v70 = v36 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v84 = TupleTypeMetadata2 - 8;
  uint64_t v67 = v34;
  uint64_t v72 = v74 + 16;
  uint64_t v71 = v73 + 16;
  unsigned long long v83 = (void (**)(char *, uint64_t, uint64_t))(v92 + 32);
  uint64_t v79 = (void (**)(char *, char *, uint64_t))(v74 + 32);
  uint64_t v78 = (void (**)(char *, char *, uint64_t))(v73 + 32);
  uint64_t v77 = v91 + 48;
  uint64_t v75 = (void (**)(char *, uint64_t))(v73 + 8);
  uint64_t v76 = (void (**)(char *, uint64_t))(v74 + 8);
  int64_t v69 = (unint64_t)(v34 + 64) >> 6;
  int64_t v65 = v69 - 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int64_t v44 = 0;
  unint64_t v45 = v35;
  unint64_t v80 = v36;
  while (1)
  {
    unint64_t v81 = v45;
    int64_t v92 = v44;
    if ((v36 & 0x8000000000000000) == 0) {
      break;
    }
    if (sub_1C8D88740())
    {
      uint64_t v50 = (uint64_t)v85;
      sub_1C8D887B0();
      swift_unknownObjectRelease();
      sub_1C8D887B0();
      swift_unknownObjectRelease();
      uint64_t v51 = 0;
      int64_t v47 = v92;
      uint64_t v93 = v45;
    }
    else
    {
      uint64_t v51 = 1;
      int64_t v47 = v92;
      uint64_t v93 = v45;
      uint64_t v50 = (uint64_t)v85;
    }
LABEL_29:
    uint64_t v54 = *(void *)(TupleTypeMetadata2 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 56))(v50, v51, 1, TupleTypeMetadata2);
    unint64_t v55 = v82;
    (*v83)(v82, v50, v41);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v55, 1, TupleTypeMetadata2) == 1)
    {
      sub_1C8D18798();
      uint64_t v60 = v96;
      char v61 = v97;
      char v62 = v98;
      int64_t v63 = v66;
      swift_bridgeObjectRelease();
      *int64_t v63 = v60;
      *((unsigned char *)v63 + 8) = v61;
      *((unsigned char *)v63 + 9) = v62;
      return sub_1C8CA69C8(125, 0xE100000000000000);
    }
    uint64_t v56 = &v55[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t v57 = v101;
    (*v79)(v101, v55, v42);
    uint64_t v58 = v89;
    (*v78)(v89, v56, v43);
    (*(void (**)(char *, uint64_t, void *, ValueMetadata *, _UNKNOWN **))(v91 + 48))(v57, 1, v94, &type metadata for JSONMapEncodingVisitor, &off_1F2351718);
    sub_1C8CCC274(v43, v88, v59);
    unint64_t v36 = v80;
    (*v75)(v58, v43);
    uint64_t v42 = v87;
    (*v76)(v101, v87);
    int64_t v44 = v47;
    unint64_t v45 = v93;
    uint64_t v41 = v86;
  }
  if (v45)
  {
    uint64_t v93 = (v45 - 1) & v45;
    unint64_t v46 = __clz(__rbit64(v45)) | (v44 << 6);
    int64_t v47 = v44;
    uint64_t v48 = v74;
    uint64_t result = (uint64_t)v85;
    goto LABEL_12;
  }
  int64_t v47 = v44 + 1;
  uint64_t v48 = v74;
  uint64_t result = (uint64_t)v85;
  if (__OFADD__(v44, 1))
  {
    __break(1u);
    goto LABEL_39;
  }
  if (v47 >= v69) {
    goto LABEL_27;
  }
  unint64_t v52 = *(void *)(v68 + 8 * v47);
  if (v52) {
    goto LABEL_18;
  }
  v44 += 2;
  if (v47 + 1 >= v69)
  {
    uint64_t v93 = 0;
    uint64_t v51 = 1;
LABEL_28:
    uint64_t v50 = (uint64_t)v85;
    goto LABEL_29;
  }
  unint64_t v52 = *(void *)(v68 + 8 * v44);
  if (v52)
  {
    ++v47;
    goto LABEL_18;
  }
  int64_t v53 = v47 + 2;
  if (v47 + 2 >= v69)
  {
LABEL_27:
    uint64_t v93 = 0;
    uint64_t v51 = 1;
    int64_t v47 = v44;
    goto LABEL_28;
  }
  unint64_t v52 = *(void *)(v68 + 8 * v53);
  if (v52)
  {
    v47 += 2;
LABEL_18:
    uint64_t v93 = (v52 - 1) & v52;
    unint64_t v46 = __clz(__rbit64(v52)) + (v47 << 6);
LABEL_12:
    unint64_t v49 = v36;
    uint64_t v50 = result;
    (*(void (**)(void))(v48 + 16))();
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v73 + 16))(v50 + *(int *)(TupleTypeMetadata2 + 48), *(void *)(v49 + 56) + *(void *)(v73 + 72) * v46, v43);
    uint64_t v51 = 0;
    goto LABEL_29;
  }
  while (1)
  {
    int64_t v47 = v53 + 1;
    if (__OFADD__(v53, 1)) {
      break;
    }
    if (v47 >= v69)
    {
      uint64_t v93 = 0;
      uint64_t v51 = 1;
      int64_t v47 = v65;
      goto LABEL_28;
    }
    unint64_t v52 = *(void *)(v68 + 8 * v47);
    ++v53;
    if (v52) {
      goto LABEL_18;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1C8D2702C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v88 = a6;
  uint64_t v93 = a1;
  uint64_t v73 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](a1, a2);
  uint64_t v89 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v10 + 8);
  uint64_t v90 = v12;
  uint64_t v91 = v11;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v74 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness, v14);
  uint64_t v16 = (char *)&v64 - v15;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v18 = sub_1C8D88620();
  int64_t v92 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v18, v19);
  uint64_t v22 = (char *)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20, v23);
  char v25 = (char *)&v64 - v24;
  uint64_t v26 = v101;
  uint64_t result = sub_1C8D22E68(a2);
  if (v26) {
    return result;
  }
  uint64_t v82 = v25;
  uint64_t v85 = v22;
  uint64_t v86 = v18;
  __int16 v101 = v16;
  uint64_t v87 = AssociatedTypeWitness;
  sub_1C8CA69C8(123, 0xE100000000000000);
  uint64_t v28 = *v6;
  char v29 = *((unsigned char *)v6 + 8);
  char v30 = *((unsigned char *)v6 + 9);
  char v31 = *((unsigned char *)v6 + 48);
  char v66 = v6;
  char v32 = *((unsigned char *)v6 + 49);
  v94[0] = 0;
  v94[1] = 0;
  __int16 v95 = 256;
  uint64_t v96 = v28;
  char v97 = v29;
  char v98 = v30;
  char v99 = v31;
  char v100 = v32;
  if ((v93 & 0xC000000000000001) != 0)
  {
    uint64_t v33 = sub_1C8D88730();
    uint64_t v68 = 0;
    uint64_t v34 = 0;
    unint64_t v35 = 0;
    unint64_t v36 = v33 | 0x8000000000000000;
  }
  else
  {
    uint64_t v37 = -1 << *(unsigned char *)(v93 + 32);
    uint64_t v34 = ~v37;
    uint64_t v38 = *(void *)(v93 + 64);
    uint64_t v68 = v93 + 64;
    uint64_t v39 = -v37;
    if (v39 < 64) {
      uint64_t v40 = ~(-1 << v39);
    }
    else {
      uint64_t v40 = -1;
    }
    unint64_t v35 = v40 & v38;
    unint64_t v36 = v93;
  }
  uint64_t v41 = v86;
  uint64_t v42 = v87;
  uint64_t v43 = a4;
  uint64_t v70 = v36 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v84 = TupleTypeMetadata2 - 8;
  uint64_t v67 = v34;
  uint64_t v72 = v74 + 16;
  uint64_t v71 = v73 + 16;
  unsigned long long v83 = (void (**)(char *, uint64_t, uint64_t))(v92 + 32);
  uint64_t v79 = (void (**)(char *, char *, uint64_t))(v74 + 32);
  uint64_t v78 = (void (**)(char *, char *, uint64_t))(v73 + 32);
  uint64_t v77 = v91 + 48;
  uint64_t v75 = (void (**)(char *, uint64_t))(v73 + 8);
  uint64_t v76 = (void (**)(char *, uint64_t))(v74 + 8);
  int64_t v69 = (unint64_t)(v34 + 64) >> 6;
  int64_t v65 = v69 - 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int64_t v44 = 0;
  unint64_t v45 = v35;
  unint64_t v80 = v36;
  while (1)
  {
    unint64_t v81 = v45;
    int64_t v92 = v44;
    if ((v36 & 0x8000000000000000) == 0) {
      break;
    }
    if (sub_1C8D88740())
    {
      uint64_t v50 = (uint64_t)v85;
      sub_1C8D887B0();
      swift_unknownObjectRelease();
      sub_1C8D887B0();
      swift_unknownObjectRelease();
      uint64_t v51 = 0;
      int64_t v47 = v92;
      uint64_t v93 = v45;
    }
    else
    {
      uint64_t v51 = 1;
      int64_t v47 = v92;
      uint64_t v93 = v45;
      uint64_t v50 = (uint64_t)v85;
    }
LABEL_29:
    uint64_t v54 = *(void *)(TupleTypeMetadata2 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 56))(v50, v51, 1, TupleTypeMetadata2);
    unint64_t v55 = v82;
    (*v83)(v82, v50, v41);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v55, 1, TupleTypeMetadata2) == 1)
    {
      sub_1C8D18798();
      uint64_t v60 = v96;
      char v61 = v97;
      char v62 = v98;
      int64_t v63 = v66;
      swift_bridgeObjectRelease();
      *int64_t v63 = v60;
      *((unsigned char *)v63 + 8) = v61;
      *((unsigned char *)v63 + 9) = v62;
      return sub_1C8CA69C8(125, 0xE100000000000000);
    }
    uint64_t v56 = &v55[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t v57 = v101;
    (*v79)(v101, v55, v42);
    uint64_t v58 = v89;
    (*v78)(v89, v56, v43);
    (*(void (**)(char *, uint64_t, void *, ValueMetadata *, _UNKNOWN **))(v91 + 48))(v57, 1, v94, &type metadata for JSONMapEncodingVisitor, &off_1F2351718);
    sub_1C8CCC0B8(v59);
    unint64_t v36 = v80;
    (*v75)(v58, v43);
    uint64_t v42 = v87;
    (*v76)(v101, v87);
    int64_t v44 = v47;
    unint64_t v45 = v93;
    uint64_t v41 = v86;
  }
  if (v45)
  {
    uint64_t v93 = (v45 - 1) & v45;
    unint64_t v46 = __clz(__rbit64(v45)) | (v44 << 6);
    int64_t v47 = v44;
    uint64_t v48 = v74;
    uint64_t result = (uint64_t)v85;
    goto LABEL_12;
  }
  int64_t v47 = v44 + 1;
  uint64_t v48 = v74;
  uint64_t result = (uint64_t)v85;
  if (__OFADD__(v44, 1))
  {
    __break(1u);
    goto LABEL_39;
  }
  if (v47 >= v69) {
    goto LABEL_27;
  }
  unint64_t v52 = *(void *)(v68 + 8 * v47);
  if (v52) {
    goto LABEL_18;
  }
  v44 += 2;
  if (v47 + 1 >= v69)
  {
    uint64_t v93 = 0;
    uint64_t v51 = 1;
LABEL_28:
    uint64_t v50 = (uint64_t)v85;
    goto LABEL_29;
  }
  unint64_t v52 = *(void *)(v68 + 8 * v44);
  if (v52)
  {
    ++v47;
    goto LABEL_18;
  }
  int64_t v53 = v47 + 2;
  if (v47 + 2 >= v69)
  {
LABEL_27:
    uint64_t v93 = 0;
    uint64_t v51 = 1;
    int64_t v47 = v44;
    goto LABEL_28;
  }
  unint64_t v52 = *(void *)(v68 + 8 * v53);
  if (v52)
  {
    v47 += 2;
LABEL_18:
    uint64_t v93 = (v52 - 1) & v52;
    unint64_t v46 = __clz(__rbit64(v52)) + (v47 << 6);
LABEL_12:
    unint64_t v49 = v36;
    uint64_t v50 = result;
    (*(void (**)(void))(v48 + 16))();
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v73 + 16))(v50 + *(int *)(TupleTypeMetadata2 + 48), *(void *)(v49 + 56) + *(void *)(v73 + 72) * v46, v43);
    uint64_t v51 = 0;
    goto LABEL_29;
  }
  while (1)
  {
    int64_t v47 = v53 + 1;
    if (__OFADD__(v53, 1)) {
      break;
    }
    if (v47 >= v69)
    {
      uint64_t v93 = 0;
      uint64_t v51 = 1;
      int64_t v47 = v65;
      goto LABEL_28;
    }
    unint64_t v52 = *(void *)(v68 + 8 * v47);
    ++v53;
    if (v52) {
      goto LABEL_18;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1C8D278D0(uint64_t a1, float a2)
{
  uint64_t result = sub_1C8D22E68(a1);
  if (!v2) {
    return sub_1C8D28164(a2);
  }
  return result;
}

uint64_t sub_1C8D27910(uint64_t a1, double a2)
{
  uint64_t result = sub_1C8D22E68(a1);
  if (!v2) {
    return sub_1C8D281F0(a2);
  }
  return result;
}

uint64_t sub_1C8D27950(int a1, uint64_t a2)
{
  uint64_t result = sub_1C8D22E68(a2);
  if (!v2) {
    return sub_1C8D283FC(a1);
  }
  return result;
}

uint64_t sub_1C8D2798C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8D279FC(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1C8D284C4);
}

uint64_t sub_1C8D279B8(unsigned int a1, uint64_t a2)
{
  return sub_1C8D27A48(a1, a2);
}

uint64_t sub_1C8D279D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8D279FC(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1C8D28640);
}

uint64_t sub_1C8D279FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t result = sub_1C8D22E68(a2);
  if (!v5) {
    return a5(a1);
  }
  return result;
}

uint64_t sub_1C8D27A48(unsigned int a1, uint64_t a2)
{
  uint64_t result = sub_1C8D22E68(a2);
  if (!v2) {
    return sub_1C8D29538(a1);
  }
  return result;
}

uint64_t sub_1C8D27A84(int a1, uint64_t a2)
{
  return sub_1C8D22F88(a1, a2);
}

uint64_t sub_1C8D27A9C(char a1, uint64_t a2)
{
  uint64_t result = sub_1C8D22E68(a2);
  if (!v2)
  {
    if (a1)
    {
      char v6 = "true";
      uint64_t v7 = 4;
    }
    else
    {
      char v6 = "false";
      uint64_t v7 = 5;
    }
    return sub_1C8CA6060((uint64_t)v6, v7, v5);
  }
  return result;
}

uint64_t sub_1C8D27AF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C8D27B4C(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t))sub_1C8D288BC);
}

uint64_t sub_1C8D27B20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C8D27B4C(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t))sub_1C8D290C0);
}

uint64_t sub_1C8D27B4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t))
{
  uint64_t result = sub_1C8D22E68(a3);
  if (!v6) {
    return a6(a1, a2);
  }
  return result;
}

uint64_t sub_1C8D27BA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8D247CC(a1, a2, a3, a4);
}

uint64_t sub_1C8D27BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8D24A34(a1, a2, a3, a4);
}

uint64_t sub_1C8D27BD0(uint64_t a1, uint64_t a2)
{
  return sub_1C8D23E3C(a1, a2, v2);
}

uint64_t sub_1C8D27BEC(uint64_t a1, uint64_t a2)
{
  return sub_1C8D23B3C(a1, a2, v2);
}

uint64_t sub_1C8D27C08(uint64_t a1, uint64_t a2)
{
  return sub_1C8D23290(a1, a2, v2);
}

uint64_t sub_1C8D27C24(void *a1, uint64_t a2)
{
  return sub_1C8D23064(a1, a2, v2);
}

uint64_t sub_1C8D27C40(uint64_t a1, uint64_t a2)
{
  return sub_1C8D23910(a1, a2, v2);
}

uint64_t sub_1C8D27C5C(void *a1, uint64_t a2)
{
  return sub_1C8D235C4(a1, a2, v2);
}

uint64_t sub_1C8D27C78(uint64_t a1, uint64_t a2)
{
  return sub_1C8D2502C(a1, a2);
}

uint64_t sub_1C8D27C90(uint64_t a1, uint64_t a2)
{
  return sub_1C8D2535C(a1, a2);
}

uint64_t sub_1C8D27CA8(uint64_t a1, uint64_t a2)
{
  return sub_1C8D24AC4(a1, a2);
}

uint64_t sub_1C8D27CC0(void *a1, uint64_t a2)
{
  return sub_1C8D24CEC(a1, a2);
}

uint64_t sub_1C8D27CD8(uint64_t a1, uint64_t a2)
{
  return sub_1C8D2413C(a1, a2, v2);
}

uint64_t sub_1C8D27CF4(void *a1, uint64_t a2)
{
  return sub_1C8D25624(a1, a2);
}

uint64_t sub_1C8D27D0C(void *a1, uint64_t a2)
{
  return sub_1C8D2587C(a1, a2);
}

uint64_t sub_1C8D27D24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8D25AE4(a1, a2, a3, a4);
}

uint64_t sub_1C8D27D3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8D25D8C(a1, a2, a3, a4);
}

uint64_t sub_1C8D27D54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1C8D25E3C(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1C8D27D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1C8D2678C(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1C8D27D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1C8D2702C(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1C8D27D9C(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(v2 + 33)) {
    __int16 v3 = 256;
  }
  else {
    __int16 v3 = 0;
  }
  return sub_1C8D25DDC(a1, a2, v3 | *(unsigned __int8 *)(v2 + 32), *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1C8D27DD0(char **a1, uint64_t a2)
{
  return sub_1C8D25B2C(a1, a2, *(unsigned char *)(v2 + 32), *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1C8D27DF0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567208);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL static AnyUnpackError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t AnyUnpackError.hash(into:)()
{
  return sub_1C8D88850();
}

uint64_t AnyUnpackError.hashValue.getter()
{
  return sub_1C8D888A0();
}

unint64_t sub_1C8D27EDC()
{
  unint64_t result = qword_1EA567210;
  if (!qword_1EA567210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567210);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AnyUnpackError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C8D27FFCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnyUnpackError()
{
  return &type metadata for AnyUnpackError;
}

uint64_t UnknownStorage.data.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_1C8CA3CF8(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t static UnknownStorage.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1C8D01FBC(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8));
}

uint64_t sub_1C8D2808C(uint64_t a1, uint64_t a2)
{
  return sub_1C8D01FBC(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8));
}

uint64_t *initializeBufferWithCopyOfBuffer for UnknownStorage(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_1C8CA3CF8(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t *assignWithCopy for UnknownStorage(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_1C8CA3CF8(*a2, v4);
  uint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_1C8CA3D5C(v5, v6);
  return a1;
}

uint64_t *assignWithTake for UnknownStorage(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_1C8CA3D5C(v3, v4);
  return a1;
}

uint64_t sub_1C8D28164(float a1)
{
  if ((~LODWORD(a1) & 0x7F800000) != 0)
  {
    uint64_t v3 = sub_1C8D88590();
    return sub_1C8CA69C8(v3, v4);
  }
  else
  {
    if ((LODWORD(a1) & 0x7FFFFF) != 0)
    {
      uint64_t v1 = "\"NaN\"";
      uint64_t v2 = 5;
    }
    else if (a1 >= 0.0)
    {
      uint64_t v1 = "\"Infinity\"";
      uint64_t v2 = 10;
    }
    else
    {
      uint64_t v1 = "\"-Infinity\"";
      uint64_t v2 = 11;
    }
    return sub_1C8CA6060((uint64_t)v1, v2, (unsigned __int8 *)LODWORD(a1));
  }
}

uint64_t sub_1C8D281F0(double a1)
{
  if ((~*(void *)&a1 & 0x7FF0000000000000) != 0)
  {
    uint64_t v3 = sub_1C8D88580();
    return sub_1C8CA69C8(v3, v4);
  }
  else
  {
    if ((*(void *)&a1 & 0xFFFFFFFFFFFFFLL) != 0)
    {
      uint64_t v1 = "\"NaN\"";
      uint64_t v2 = 5;
    }
    else if (a1 >= 0.0)
    {
      uint64_t v1 = "\"Infinity\"";
      uint64_t v2 = 10;
    }
    else
    {
      uint64_t v1 = "\"-Infinity\"";
      uint64_t v2 = 11;
    }
    return sub_1C8CA6060((uint64_t)v1, v2, *(unsigned __int8 **)&a1);
  }
}

uint64_t sub_1C8D2827C(int a1)
{
  uint64_t v3 = *v1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  const char *v1 = v3;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v3 = sub_1C8D5EB50(0, *((void *)v3 + 2) + 1, 1, v3);
    const char *v1 = v3;
  }
  unint64_t v6 = *((void *)v3 + 2);
  unint64_t v5 = *((void *)v3 + 3);
  unint64_t v7 = v6 + 1;
  if (v6 >= v5 >> 1) {
    uint64_t v3 = sub_1C8D5EB50((char *)(v5 > 1), v6 + 1, 1, v3);
  }
  *((void *)v3 + 2) = v7;
  v3[v6 + 32] = 34;
  const char *v1 = v3;
  unint64_t v8 = a1;
  if (a1 < 0)
  {
    unint64_t v9 = *((void *)v3 + 3);
    if ((uint64_t)(v6 + 2) > (uint64_t)(v9 >> 1)) {
      uint64_t v3 = sub_1C8D5EB50((char *)(v9 > 1), v6 + 2, 1, v3);
    }
    *((void *)v3 + 2) = v6 + 2;
    v3[v7 + 32] = 45;
    const char *v1 = v3;
    unint64_t v8 = -(uint64_t)a1;
  }
  sub_1C8D29538(v8);
  uint64_t v10 = (uint64_t)*v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  const char *v1 = (char *)v10;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50(0, *(void *)(v10 + 16) + 1, 1, (char *)v10);
    uint64_t v10 = result;
    const char *v1 = (char *)result;
  }
  unint64_t v13 = *(void *)(v10 + 16);
  unint64_t v12 = *(void *)(v10 + 24);
  if (v13 >= v12 >> 1)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v12 > 1), v13 + 1, 1, (char *)v10);
    uint64_t v10 = result;
  }
  *(void *)(v10 + 16) = v13 + 1;
  *(unsigned char *)(v10 + v13 + 32) = 34;
  const char *v1 = (char *)v10;
  return result;
}

uint64_t sub_1C8D283FC(int a1)
{
  unint64_t v2 = a1;
  if (a1 < 0)
  {
    uint64_t v3 = *v1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    const char *v1 = v3;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v3 = sub_1C8D5EB50(0, *((void *)v3 + 2) + 1, 1, v3);
      const char *v1 = v3;
    }
    unint64_t v6 = *((void *)v3 + 2);
    unint64_t v5 = *((void *)v3 + 3);
    if (v6 >= v5 >> 1) {
      uint64_t v3 = sub_1C8D5EB50((char *)(v5 > 1), v6 + 1, 1, v3);
    }
    *((void *)v3 + 2) = v6 + 1;
    v3[v6 + 32] = 45;
    const char *v1 = v3;
    unint64_t v2 = -(uint64_t)v2;
  }
  return sub_1C8D29538(v2);
}

uint64_t sub_1C8D284C4(unint64_t a1)
{
  uint64_t v3 = *v1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  const char *v1 = v3;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v3 = sub_1C8D5EB50(0, *((void *)v3 + 2) + 1, 1, v3);
    const char *v1 = v3;
  }
  unint64_t v6 = *((void *)v3 + 2);
  unint64_t v5 = *((void *)v3 + 3);
  unint64_t v7 = v6 + 1;
  if (v6 >= v5 >> 1) {
    uint64_t v3 = sub_1C8D5EB50((char *)(v5 > 1), v6 + 1, 1, v3);
  }
  *((void *)v3 + 2) = v7;
  v3[v6 + 32] = 34;
  const char *v1 = v3;
  if ((a1 & 0x8000000000000000) != 0)
  {
    unint64_t v8 = *((void *)v3 + 3);
    int64_t v9 = v6 + 2;
    if (v9 > (uint64_t)(v8 >> 1)) {
      uint64_t v3 = sub_1C8D5EB50((char *)(v8 > 1), v9, 1, v3);
    }
    *((void *)v3 + 2) = v9;
    v3[v7 + 32] = 45;
    const char *v1 = v3;
    a1 = -(uint64_t)a1;
  }
  sub_1C8D29538(a1);
  uint64_t v10 = (uint64_t)*v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  const char *v1 = (char *)v10;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50(0, *(void *)(v10 + 16) + 1, 1, (char *)v10);
    uint64_t v10 = result;
    const char *v1 = (char *)result;
  }
  unint64_t v13 = *(void *)(v10 + 16);
  unint64_t v12 = *(void *)(v10 + 24);
  if (v13 >= v12 >> 1)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v12 > 1), v13 + 1, 1, (char *)v10);
    uint64_t v10 = result;
  }
  *(void *)(v10 + 16) = v13 + 1;
  *(unsigned char *)(v10 + v13 + 32) = 34;
  const char *v1 = (char *)v10;
  return result;
}

uint64_t sub_1C8D28640(unint64_t a1)
{
  uint64_t v3 = *v1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  const char *v1 = v3;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v3 = sub_1C8D5EB50(0, *((void *)v3 + 2) + 1, 1, v3);
    const char *v1 = v3;
  }
  unint64_t v6 = *((void *)v3 + 2);
  unint64_t v5 = *((void *)v3 + 3);
  if (v6 >= v5 >> 1) {
    uint64_t v3 = sub_1C8D5EB50((char *)(v5 > 1), v6 + 1, 1, v3);
  }
  *((void *)v3 + 2) = v6 + 1;
  v3[v6 + 32] = 34;
  const char *v1 = v3;
  sub_1C8D29538(a1);
  uint64_t v7 = (uint64_t)*v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  const char *v1 = (char *)v7;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50(0, *(void *)(v7 + 16) + 1, 1, (char *)v7);
    uint64_t v7 = result;
    const char *v1 = (char *)result;
  }
  unint64_t v10 = *(void *)(v7 + 16);
  unint64_t v9 = *(void *)(v7 + 24);
  if (v10 >= v9 >> 1)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v9 > 1), v10 + 1, 1, (char *)v7);
    uint64_t v7 = result;
  }
  *(void *)(v7 + 16) = v10 + 1;
  *(unsigned char *)(v7 + v10 + 32) = 34;
  const char *v1 = (char *)v7;
  return result;
}

uint64_t sub_1C8D28770(char a1)
{
  uint64_t v3 = *v1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  const char *v1 = v3;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v3 = sub_1C8D5EB50(0, *((void *)v3 + 2) + 1, 1, v3);
    const char *v1 = v3;
  }
  unint64_t v6 = *((void *)v3 + 2);
  unint64_t v5 = *((void *)v3 + 3);
  if (v6 >= v5 >> 1) {
    uint64_t v3 = sub_1C8D5EB50((char *)(v5 > 1), v6 + 1, 1, v3);
  }
  *((void *)v3 + 2) = v6 + 1;
  v3[v6 + 32] = 34;
  const char *v1 = v3;
  if (a1)
  {
    uint64_t v7 = "true";
    uint64_t v8 = 4;
  }
  else
  {
    uint64_t v7 = "false";
    uint64_t v8 = 5;
  }
  sub_1C8CA6060((uint64_t)v7, v8, (unsigned __int8 *)&v3[v6]);
  uint64_t v9 = (uint64_t)*v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  const char *v1 = (char *)v9;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50(0, *(void *)(v9 + 16) + 1, 1, (char *)v9);
    uint64_t v9 = result;
    const char *v1 = (char *)result;
  }
  unint64_t v12 = *(void *)(v9 + 16);
  unint64_t v11 = *(void *)(v9 + 24);
  if (v12 >= v11 >> 1)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v11 > 1), v12 + 1, 1, (char *)v9);
    uint64_t v9 = result;
  }
  *(void *)(v9 + 16) = v12 + 1;
  *(unsigned char *)(v9 + v12 + 32) = 34;
  const char *v1 = (char *)v9;
  return result;
}

uint64_t sub_1C8D288BC(uint64_t a1, unint64_t a2)
{
  unint64_t v4 = *v2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  void *v2 = v4;
  uint64_t v59 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_84;
  }
  while (2)
  {
    unint64_t v2 = (char **)*((void *)v4 + 2);
    unint64_t v6 = *((void *)v4 + 3);
    if ((unint64_t)v2 >= v6 >> 1) {
      unint64_t v4 = sub_1C8D5EB50((char *)(v6 > 1), (int64_t)v2 + 1, 1, v4);
    }
    *((void *)v4 + 2) = (char *)v2 + 1;
    *((unsigned char *)v2 + (void)v4 + 32) = 34;
    uint64_t v7 = v59;
    *uint64_t v59 = v4;
    uint64_t v8 = HIBYTE(a2) & 0xF;
    uint64_t v9 = a1;
    if ((a2 & 0x2000000000000000) != 0) {
      uint64_t v10 = HIBYTE(a2) & 0xF;
    }
    else {
      uint64_t v10 = a1 & 0xFFFFFFFFFFFFLL;
    }
    if (!v10) {
      goto LABEL_76;
    }
    swift_bridgeObjectRetain();
    unint64_t v4 = 0;
    uint64_t v58 = v10;
LABEL_12:
    if ((a2 & 0x1000000000000000) != 0)
    {
      unsigned int v12 = sub_1C8D88670();
    }
    else
    {
      if ((a2 & 0x2000000000000000) == 0 && (v9 & 0x1000000000000000) == 0) {
        sub_1C8D886C0();
      }
      unsigned int v12 = sub_1C8D886D0();
    }
    unsigned int v15 = v12;
    uint64_t v16 = v13;
    switch(v12)
    {
      case 8u:
        unint64_t v11 = "\\b";
        goto LABEL_10;
      case 9u:
        unint64_t v11 = "\\t";
        goto LABEL_10;
      case 0xAu:
        unint64_t v11 = "\\n";
        goto LABEL_10;
      case 0xBu:
      case 0xEu:
      case 0xFu:
      case 0x10u:
      case 0x11u:
      case 0x12u:
      case 0x13u:
      case 0x14u:
      case 0x15u:
      case 0x16u:
      case 0x17u:
      case 0x18u:
      case 0x19u:
      case 0x1Au:
      case 0x1Bu:
      case 0x1Cu:
      case 0x1Du:
      case 0x1Eu:
      case 0x1Fu:
      case 0x20u:
      case 0x21u:
        goto LABEL_22;
      case 0xCu:
        unint64_t v11 = "\\f";
        goto LABEL_10;
      case 0xDu:
        unint64_t v11 = "\\r";
        goto LABEL_10;
      case 0x22u:
        unint64_t v11 = "\\\"";
        goto LABEL_10;
      default:
        if (v12 == 92)
        {
          unint64_t v11 = "\\\\"";
LABEL_10:
          unint64_t v2 = v7;
          sub_1C8CA6060((uint64_t)v11, 2, v14);
          goto LABEL_11;
        }
LABEL_22:
        if (v12 >= 0x20)
        {
          uint64_t v14 = (unsigned __int8 *)(v12 - 160);
          if (v14 < 0xFFFFFFDF)
          {
            if (v12 <= 0x7E)
            {
              unint64_t v2 = (char **)v8;
              uint64_t v38 = *v7;
              char v39 = swift_isUniquelyReferenced_nonNull_native();
              *uint64_t v7 = v38;
              if ((v39 & 1) == 0)
              {
                uint64_t v38 = sub_1C8D5EB50(0, *((void *)v38 + 2) + 1, 1, v38);
                *uint64_t v7 = v38;
              }
              unint64_t v41 = *((void *)v38 + 2);
              unint64_t v40 = *((void *)v38 + 3);
              if (v41 >= v40 >> 1) {
                uint64_t v38 = sub_1C8D5EB50((char *)(v40 > 1), v41 + 1, 1, v38);
              }
              *((void *)v38 + 2) = v41 + 1;
              v38[v41 + 32] = v15;
              *uint64_t v7 = v38;
              uint64_t v10 = v58;
              uint64_t v8 = (uint64_t)v2;
            }
            else
            {
              if (v12 <= 0x7FF)
              {
                uint64_t v18 = *v7;
                char v42 = swift_isUniquelyReferenced_nonNull_native();
                *uint64_t v7 = v18;
                if ((v42 & 1) == 0)
                {
                  uint64_t v18 = sub_1C8D5EB50(0, *((void *)v18 + 2) + 1, 1, v18);
                  *uint64_t v7 = v18;
                }
                unint64_t v44 = *((void *)v18 + 2);
                unint64_t v43 = *((void *)v18 + 3);
                unint64_t v45 = v44 + 1;
                if (v44 >= v43 >> 1) {
                  uint64_t v18 = sub_1C8D5EB50((char *)(v43 > 1), v44 + 1, 1, v18);
                }
                *((void *)v18 + 2) = v45;
                v18[v44 + 32] = (v15 >> 6) - 64;
                *uint64_t v7 = v18;
                unint64_t v46 = *((void *)v18 + 3);
                unint64_t v2 = (char **)(v44 + 2);
                if ((uint64_t)(v44 + 2) > (uint64_t)(v46 >> 1)) {
                  uint64_t v18 = sub_1C8D5EB50((char *)(v46 > 1), v44 + 2, 1, v18);
                }
                char v47 = v15 & 0x3F | 0x80;
                *((void *)v18 + 2) = v2;
                uint64_t v48 = &v18[v45];
              }
              else
              {
                if (v12 - 0x10000 >= 0xFFFF0800)
                {
                  uint64_t v18 = *v7;
                  char v49 = swift_isUniquelyReferenced_nonNull_native();
                  *uint64_t v7 = v18;
                  if ((v49 & 1) == 0)
                  {
                    uint64_t v18 = sub_1C8D5EB50(0, *((void *)v18 + 2) + 1, 1, v18);
                    *uint64_t v7 = v18;
                  }
                  unint64_t v51 = *((void *)v18 + 2);
                  unint64_t v50 = *((void *)v18 + 3);
                  unint64_t v52 = v51 + 1;
                  if (v51 >= v50 >> 1) {
                    uint64_t v18 = sub_1C8D5EB50((char *)(v50 > 1), v51 + 1, 1, v18);
                  }
                  *((void *)v18 + 2) = v52;
                  v18[v51 + 32] = (v15 >> 12) - 32;
                  *uint64_t v7 = v18;
                  unint64_t v53 = *((void *)v18 + 3);
                  unint64_t v2 = (char **)(v51 + 2);
                  if ((uint64_t)(v51 + 2) > (uint64_t)(v53 >> 1)) {
                    uint64_t v18 = sub_1C8D5EB50((char *)(v53 > 1), v51 + 2, 1, v18);
                  }
                  *((void *)v18 + 2) = v2;
                  v18[v52 + 32] = (v15 >> 6) & 0x3F | 0x80;
                  *uint64_t v7 = v18;
                  unint64_t v26 = *((void *)v18 + 3);
                  int64_t v27 = v51 + 3;
                }
                else
                {
                  char v17 = (v12 >> 18) - 16;
                  if ((((v12 >> 18) + 240) & 0x100) != 0) {
                    goto LABEL_83;
                  }
                  uint64_t v18 = *v7;
                  char v19 = swift_isUniquelyReferenced_nonNull_native();
                  *uint64_t v7 = v18;
                  if ((v19 & 1) == 0)
                  {
                    uint64_t v18 = sub_1C8D5EB50(0, *((void *)v18 + 2) + 1, 1, v18);
                    *uint64_t v7 = v18;
                  }
                  unint64_t v21 = *((void *)v18 + 2);
                  unint64_t v20 = *((void *)v18 + 3);
                  unint64_t v22 = v21 + 1;
                  if (v21 >= v20 >> 1) {
                    uint64_t v18 = sub_1C8D5EB50((char *)(v20 > 1), v21 + 1, 1, v18);
                  }
                  *((void *)v18 + 2) = v22;
                  v18[v21 + 32] = v17;
                  *uint64_t v7 = v18;
                  unint64_t v23 = *((void *)v18 + 3);
                  unint64_t v24 = v21 + 2;
                  if ((uint64_t)(v21 + 2) > (uint64_t)(v23 >> 1)) {
                    uint64_t v18 = sub_1C8D5EB50((char *)(v23 > 1), v21 + 2, 1, v18);
                  }
                  *((void *)v18 + 2) = v24;
                  v18[v22 + 32] = (v15 >> 12) & 0x3F | 0x80;
                  *uint64_t v7 = v18;
                  unint64_t v25 = *((void *)v18 + 3);
                  unint64_t v2 = (char **)(v21 + 3);
                  if ((uint64_t)(v21 + 3) > (uint64_t)(v25 >> 1)) {
                    uint64_t v18 = sub_1C8D5EB50((char *)(v25 > 1), v21 + 3, 1, v18);
                  }
                  *((void *)v18 + 2) = v2;
                  v18[v24 + 32] = (v15 >> 6) & 0x3F | 0x80;
                  *uint64_t v7 = v18;
                  unint64_t v26 = *((void *)v18 + 3);
                  int64_t v27 = v21 + 4;
                }
                if (v27 > (uint64_t)(v26 >> 1)) {
                  uint64_t v18 = sub_1C8D5EB50((char *)(v26 > 1), v27, 1, v18);
                }
                char v47 = v15 & 0x3F | 0x80;
                *((void *)v18 + 2) = v27;
                uint64_t v48 = (char *)v2 + (void)v18;
              }
              v48[32] = v47;
              *uint64_t v7 = v18;
              uint64_t v8 = HIBYTE(a2) & 0xF;
              uint64_t v10 = v58;
            }
            goto LABEL_11;
          }
        }
        unint64_t v2 = v7;
        sub_1C8CA6060((uint64_t)"\\u00", 4, v14);
        if (qword_1EA565C00 != -1) {
          swift_once();
        }
        uint64_t v28 = off_1EA567220;
        unint64_t v29 = (unint64_t)v15 >> 4;
        if (*((void *)off_1EA567220 + 2) <= v29)
        {
          __break(1u);
LABEL_82:
          __break(1u);
LABEL_83:
          __break(1u);
LABEL_84:
          unint64_t v4 = sub_1C8D5EB50(0, *((void *)v4 + 2) + 1, 1, v4);
          void *v2 = v4;
          continue;
        }
        unint64_t v2 = (char **)*((unsigned __int8 *)off_1EA567220 + v29 + 32);
        char v30 = *v7;
        char v31 = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v7 = v30;
        if ((v31 & 1) == 0)
        {
          char v30 = sub_1C8D5EB50(0, *((void *)v30 + 2) + 1, 1, v30);
          *uint64_t v7 = v30;
        }
        unint64_t v33 = *((void *)v30 + 2);
        unint64_t v32 = *((void *)v30 + 3);
        unint64_t v34 = v33 + 1;
        if (v33 >= v32 >> 1) {
          char v30 = sub_1C8D5EB50((char *)(v32 > 1), v33 + 1, 1, v30);
        }
        *((void *)v30 + 2) = v34;
        v30[v33 + 32] = (char)v2;
        *uint64_t v59 = v30;
        if (v28[2] <= (unint64_t)(v15 & 0xF)) {
          goto LABEL_82;
        }
        char v35 = *((unsigned char *)v28 + (v15 & 0xF) + 32);
        unint64_t v36 = *((void *)v30 + 3);
        unint64_t v37 = v33 + 2;
        if ((uint64_t)(v33 + 2) > (uint64_t)(v36 >> 1)) {
          char v30 = sub_1C8D5EB50((char *)(v36 > 1), v33 + 2, 1, v30);
        }
        uint64_t v7 = v59;
        uint64_t v9 = a1;
        *((void *)v30 + 2) = v37;
        v30[v34 + 32] = v35;
        *uint64_t v59 = v30;
        uint64_t v10 = v58;
        uint64_t v8 = HIBYTE(a2) & 0xF;
LABEL_11:
        v4 += v16;
        if ((uint64_t)v4 < v10) {
          goto LABEL_12;
        }
        swift_bridgeObjectRelease();
        unint64_t v4 = *v7;
LABEL_76:
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v7 = v4;
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1C8D5EB50(0, *((void *)v4 + 2) + 1, 1, v4);
          unint64_t v4 = (char *)result;
          *uint64_t v7 = (char *)result;
        }
        unint64_t v56 = *((void *)v4 + 2);
        unint64_t v55 = *((void *)v4 + 3);
        if (v56 >= v55 >> 1)
        {
          uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v55 > 1), v56 + 1, 1, v4);
          unint64_t v4 = (char *)result;
        }
        *((void *)v4 + 2) = v56 + 1;
        v4[v56 + 32] = 34;
        *uint64_t v7 = v4;
        return result;
    }
  }
}

uint64_t sub_1C8D290C0(uint64_t a1, unint64_t a2)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  unint64_t v5 = (char *)*v2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  int64_t *v2 = (int64_t)v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v5 = sub_1C8D5EB50(0, *((void *)v5 + 2) + 1, 1, v5);
    int64_t *v2 = (int64_t)v5;
  }
  unint64_t v8 = *((void *)v5 + 2);
  unint64_t v7 = *((void *)v5 + 3);
  if (v8 >= v7 >> 1) {
    unint64_t v5 = sub_1C8D5EB50((char *)(v7 > 1), v8 + 1, 1, v5);
  }
  *((void *)v5 + 2) = v8 + 1;
  v5[v8 + 32] = 34;
  int64_t *v2 = (int64_t)v5;
  unint64_t v9 = a2 >> 62;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v10) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
      uint64_t v10 = (int)v10;
LABEL_10:
      if (v10 >= 1)
      {
        if (v9)
        {
          if (v9 == 1)
          {
            if (a1 >> 32 >= (int)a1)
            {
              swift_retain();
              sub_1C8D29E74((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, v2);
              sub_1C8CA3D5C(a1, a2);
              goto LABEL_17;
            }
LABEL_24:
            __break(1u);
          }
          uint64_t v14 = *(void *)(a1 + 16);
          uint64_t v15 = *(void *)(a1 + 24);
          swift_retain();
          swift_retain();
          sub_1C8D29E74(v14, v15, a2 & 0x3FFFFFFFFFFFFFFFLL, v2);
          swift_release();
          swift_release();
        }
        else
        {
          uint64_t v20 = a1;
          __int16 v21 = a2;
          char v22 = BYTE2(a2);
          char v23 = BYTE3(a2);
          char v24 = BYTE4(a2);
          char v25 = BYTE5(a2);
          sub_1C8D29618((uint64_t)&v20, (uint64_t)&v20 + BYTE6(a2), v2);
        }
      }
LABEL_17:
      int64_t v16 = *v2;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      int64_t *v2 = v16;
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1C8D5EB50(0, *(void *)(v16 + 16) + 1, 1, (char *)v16);
        int64_t v16 = result;
        int64_t *v2 = result;
      }
      unint64_t v19 = *(void *)(v16 + 16);
      unint64_t v18 = *(void *)(v16 + 24);
      if (v19 >= v18 >> 1)
      {
        uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v18 > 1), v19 + 1, 1, (char *)v16);
        int64_t v16 = result;
      }
      *(void *)(v16 + 16) = v19 + 1;
      *(unsigned char *)(v16 + v19 + 32) = 34;
      int64_t *v2 = v16;
      return result;
    case 2uLL:
      uint64_t v12 = *(void *)(a1 + 16);
      uint64_t v11 = *(void *)(a1 + 24);
      BOOL v13 = __OFSUB__(v11, v12);
      uint64_t v10 = v11 - v12;
      if (!v13) {
        goto LABEL_10;
      }
      goto LABEL_23;
    case 3uLL:
      goto LABEL_17;
    default:
      uint64_t v10 = BYTE6(a2);
      goto LABEL_10;
  }
}

char *sub_1C8D293AC()
{
  uint64_t result = sub_1C8D293CC();
  off_1EA567218 = result;
  return result;
}

char *sub_1C8D293CC()
{
  uint64_t v7 = MEMORY[0x1E4FBC860];
  sub_1C8CA6574(23105);
  sub_1C8CA6574(31329);
  sub_1C8CA6574(14640);
  uint64_t v0 = (char *)v7;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v0 = sub_1C8D5EB50(0, *(void *)(v7 + 16) + 1, 1, (char *)v7);
  }
  unint64_t v2 = *((void *)v0 + 2);
  unint64_t v1 = *((void *)v0 + 3);
  int64_t v3 = v1 >> 1;
  unint64_t v4 = v2 + 1;
  if (v1 >> 1 <= v2)
  {
    uint64_t v0 = sub_1C8D5EB50((char *)(v1 > 1), v2 + 1, 1, v0);
    unint64_t v1 = *((void *)v0 + 3);
    int64_t v3 = v1 >> 1;
  }
  *((void *)v0 + 2) = v4;
  v0[v2 + 32] = 43;
  int64_t v5 = v2 + 2;
  if (v3 < v5) {
    uint64_t v0 = sub_1C8D5EB50((char *)(v1 > 1), v5, 1, v0);
  }
  *((void *)v0 + 2) = v5;
  v0[v4 + 32] = 47;
  return v0;
}

uint64_t sub_1C8D294E4()
{
  unint64_t v1 = (void *)MEMORY[0x1E4FBC860];
  sub_1C8CA6574(14640);
  uint64_t result = sub_1C8CA6574(17985);
  off_1EA567220 = v1;
  return result;
}

uint64_t sub_1C8D29538(unint64_t a1)
{
  if (a1 >= 0xA) {
    sub_1C8D29538(a1 / 0xA);
  }
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v1 = v3;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50(0, *(void *)(v3 + 16) + 1, 1, (char *)v3);
    uint64_t v3 = result;
    uint64_t *v1 = result;
  }
  unint64_t v6 = *(void *)(v3 + 16);
  unint64_t v5 = *(void *)(v3 + 24);
  if (v6 >= v5 >> 1)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v5 > 1), v6 + 1, 1, (char *)v3);
    uint64_t v3 = result;
  }
  *(void *)(v3 + 16) = v6 + 1;
  *(unsigned char *)(v3 + v6 + 32) = (a1 % 0xA) | 0x30;
  uint64_t *v1 = v3;
  return result;
}

uint64_t sub_1C8D29618(uint64_t result, uint64_t a2, int64_t *a3)
{
  if (!result) {
    return result;
  }
  unint64_t v8 = (unsigned __int8 *)result;
  uint64_t v9 = a2 - result;
  if (a2 - result < 1) {
    return result;
  }
  unint64_t v55 = a3;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  do
  {
    if (v10 == 3)
    {
      if (qword_1EA565BF8 != -1)
      {
        unint64_t v3 = (unint64_t)a3;
        swift_once();
        a3 = (int64_t *)v3;
      }
      uint64_t v7 = (int64_t *)off_1EA567218;
      unint64_t v12 = ((unint64_t)v11 >> 18) & 0x3F;
      if (v12 >= *((void *)off_1EA567218 + 2)) {
        goto LABEL_70;
      }
      unint64_t v56 = (char *)off_1EA567218 + 32;
      unint64_t v6 = (char *)*((unsigned __int8 *)off_1EA567218 + v12 + 32);
      int64_t v4 = *a3;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      a3 = v55;
      *unint64_t v55 = v4;
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1C8D5EB50(0, *(void *)(v4 + 16) + 1, 1, (char *)v4);
        a3 = v55;
        int64_t v4 = result;
        *unint64_t v55 = result;
      }
      unint64_t v3 = *(void *)(v4 + 16);
      unint64_t v13 = *(void *)(v4 + 24);
      unint64_t v5 = v3 + 1;
      uint64_t v14 = v56;
      if (v3 >= v13 >> 1)
      {
        uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v13 > 1), v3 + 1, 1, (char *)v4);
        uint64_t v14 = v56;
        a3 = v55;
        int64_t v4 = result;
      }
      *(void *)(v4 + 16) = v5;
      *(unsigned char *)(v4 + v3 + 32) = (_BYTE)v6;
      *a3 = v4;
      unint64_t v15 = ((unint64_t)v11 >> 12) & 0x3F;
      if (v15 >= v7[2]) {
        goto LABEL_71;
      }
      char v16 = v14[v15];
      unint64_t v17 = *(void *)(v4 + 24);
      unint64_t v6 = (char *)(v3 + 2);
      if ((uint64_t)(v3 + 2) > (uint64_t)(v17 >> 1))
      {
        uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v17 > 1), v3 + 2, 1, (char *)v4);
        uint64_t v14 = v56;
        a3 = v55;
        int64_t v4 = result;
      }
      *(void *)(v4 + 16) = v6;
      *(unsigned char *)(v4 + v5 + 32) = v16;
      *a3 = v4;
      unint64_t v18 = ((unint64_t)v11 >> 6) & 0x3F;
      if (v18 >= v7[2]) {
        goto LABEL_72;
      }
      char v19 = v14[v18];
      unint64_t v20 = *(void *)(v4 + 24);
      unint64_t v5 = v3 + 3;
      if ((uint64_t)(v3 + 3) > (uint64_t)(v20 >> 1))
      {
        uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v20 > 1), v3 + 3, 1, (char *)v4);
        uint64_t v14 = v56;
        a3 = v55;
        int64_t v4 = result;
      }
      *(void *)(v4 + 16) = v5;
      v6[v4 + 32] = v19;
      *a3 = v4;
      if ((v11 & 0x3Fu) >= (unint64_t)v7[2]) {
        goto LABEL_73;
      }
      char v21 = v14[v11 & 0x3F];
      unint64_t v22 = *(void *)(v4 + 24);
      unint64_t v6 = (char *)(v3 + 4);
      if ((uint64_t)(v3 + 4) > (uint64_t)(v22 >> 1))
      {
        uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v22 > 1), v3 + 4, 1, (char *)v4);
        a3 = v55;
        int64_t v4 = result;
      }
      uint64_t v10 = 0;
      char v23 = 0;
      *(void *)(v4 + 16) = v6;
      *(unsigned char *)(v4 + v5 + 32) = v21;
      *a3 = v4;
    }
    else
    {
      char v23 = v11;
    }
    if (__OFADD__(v10++, 1))
    {
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
      goto LABEL_74;
    }
    unsigned int v25 = *v8++;
    unint64_t v5 = v25;
    uint64_t v11 = (int64_t *)(v25 | ((void)v23 << 8));
    --v9;
  }
  while (v9);
  if (v10 == 1)
  {
    unint64_t v3 = (void)v11 << 16;
    if (qword_1EA565BF8 != -1) {
      goto LABEL_82;
    }
    goto LABEL_41;
  }
  if (v10 == 2)
  {
    unint64_t v45 = (void)v11 << 8;
    if (qword_1EA565BF8 != -1)
    {
      unint64_t v3 = (unint64_t)a3;
      swift_once();
      a3 = (int64_t *)v3;
    }
    unint64_t v46 = off_1EA567218;
    unint64_t v47 = (v45 >> 18) & 0x3F;
    if (v47 >= *((void *)off_1EA567218 + 2))
    {
      __break(1u);
    }
    else
    {
      unint64_t v3 = (unint64_t)off_1EA567218 + 32;
      int64_t v4 = *((unsigned __int8 *)off_1EA567218 + v47 + 32);
      unint64_t v8 = (unsigned __int8 *)*a3;
      uint64_t v7 = a3;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v7 = (int64_t)v8;
      if (result)
      {
        uint64_t v28 = v7;
        goto LABEL_58;
      }
    }
    uint64_t result = (uint64_t)sub_1C8D5EB50(0, *((void *)v8 + 2) + 1, 1, (char *)v8);
    uint64_t v28 = v7;
    unint64_t v8 = (unsigned __int8 *)result;
    *uint64_t v7 = result;
LABEL_58:
    unint64_t v49 = *((void *)v8 + 2);
    unint64_t v48 = *((void *)v8 + 3);
    int64_t v31 = v49 + 1;
    if (v49 >= v48 >> 1)
    {
      uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v48 > 1), v49 + 1, 1, (char *)v8);
      uint64_t v28 = v7;
      unint64_t v8 = (unsigned __int8 *)result;
    }
    *((void *)v8 + 2) = v31;
    v8[v49 + 32] = v4;
    *uint64_t v28 = (int64_t)v8;
    unint64_t v50 = (v45 >> 12) & 0x3F;
    if (v50 >= v46[2])
    {
      __break(1u);
    }
    else
    {
      LOBYTE(v11) = *(unsigned char *)(v3 + v50);
      unint64_t v50 = *((void *)v8 + 3);
      int64_t v4 = v49 + 2;
      if ((uint64_t)(v49 + 2) <= (uint64_t)(v50 >> 1)) {
        goto LABEL_62;
      }
    }
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v50 > 1), v4, 1, (char *)v8);
    uint64_t v28 = v7;
    unint64_t v8 = (unsigned __int8 *)result;
LABEL_62:
    *((void *)v8 + 2) = v4;
    v8[v31 + 32] = v11;
    *uint64_t v28 = (int64_t)v8;
    unint64_t v51 = (v45 >> 6) & 0x3C;
    if (v51 >= v46[2])
    {
      __break(1u);
    }
    else
    {
      LOBYTE(v45) = *(unsigned char *)(v3 + v51);
      unint64_t v51 = *((void *)v8 + 3);
      int64_t v31 = v49 + 3;
      if ((uint64_t)(v49 + 3) <= (uint64_t)(v51 >> 1))
      {
LABEL_64:
        *((void *)v8 + 2) = v31;
        v8[v4 + 32] = v45;
        *uint64_t v28 = (int64_t)v8;
        unint64_t v52 = *((void *)v8 + 3);
        unint64_t v36 = v49 + 4;
        if ((uint64_t)(v49 + 4) > (uint64_t)(v52 >> 1))
        {
          uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v52 > 1), v49 + 4, 1, (char *)v8);
          uint64_t v28 = v7;
          unint64_t v8 = (unsigned __int8 *)result;
        }
        char v34 = 61;
        goto LABEL_67;
      }
    }
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v51 > 1), v31, 1, (char *)v8);
    uint64_t v28 = v7;
    unint64_t v8 = (unsigned __int8 *)result;
    goto LABEL_64;
  }
  if (v10 != 3) {
    return result;
  }
  unint64_t v3 = (void)v23 << 8;
  if (qword_1EA565BF8 != -1)
  {
LABEL_74:
    unint64_t v53 = a3;
    swift_once();
    a3 = v53;
  }
  uint64_t v26 = off_1EA567218;
  unint64_t v27 = (v3 >> 18) & 0x3F;
  if (v27 >= *((void *)off_1EA567218 + 2))
  {
    __break(1u);
  }
  else
  {
    unint64_t v6 = (char *)off_1EA567218 + 32;
    int64_t v4 = *((unsigned __int8 *)off_1EA567218 + v27 + 32);
    unint64_t v8 = (unsigned __int8 *)*a3;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = v55;
    *unint64_t v55 = (int64_t)v8;
    if (result) {
      goto LABEL_31;
    }
  }
  uint64_t result = (uint64_t)sub_1C8D5EB50(0, *((void *)v8 + 2) + 1, 1, (char *)v8);
  uint64_t v28 = v55;
  unint64_t v8 = (unsigned __int8 *)result;
  *unint64_t v55 = result;
LABEL_31:
  unint64_t v30 = *((void *)v8 + 2);
  unint64_t v29 = *((void *)v8 + 3);
  int64_t v31 = v30 + 1;
  if (v30 >= v29 >> 1)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v29 > 1), v30 + 1, 1, (char *)v8);
    uint64_t v28 = v55;
    unint64_t v8 = (unsigned __int8 *)result;
  }
  *((void *)v8 + 2) = v31;
  v8[v30 + 32] = v4;
  *uint64_t v28 = (int64_t)v8;
  unint64_t v32 = (v3 >> 12) & 0x3F;
  if (v32 >= v26[2])
  {
    __break(1u);
  }
  else
  {
    unint64_t v3 = v6[v32];
    unint64_t v32 = *((void *)v8 + 3);
    int64_t v4 = v30 + 2;
    if ((uint64_t)(v30 + 2) <= (uint64_t)(v32 >> 1)) {
      goto LABEL_35;
    }
  }
  uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v32 > 1), v4, 1, (char *)v8);
  uint64_t v28 = v55;
  unint64_t v8 = (unsigned __int8 *)result;
LABEL_35:
  *((void *)v8 + 2) = v4;
  v8[v31 + 32] = v3;
  *uint64_t v28 = (int64_t)v8;
  unint64_t v33 = ((unint64_t)v11 >> 6) & 0x3F;
  if (v33 >= v26[2])
  {
    __break(1u);
  }
  else
  {
    unint64_t v3 = v6[v33];
    unint64_t v33 = *((void *)v8 + 3);
    int64_t v31 = v30 + 3;
    if ((uint64_t)(v30 + 3) <= (uint64_t)(v33 >> 1)) {
      goto LABEL_37;
    }
  }
  uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v33 > 1), v31, 1, (char *)v8);
  uint64_t v28 = v55;
  unint64_t v8 = (unsigned __int8 *)result;
LABEL_37:
  *((void *)v8 + 2) = v31;
  v8[v4 + 32] = v3;
  *uint64_t v28 = (int64_t)v8;
  if ((v5 & 0x3F) < v26[2])
  {
    char v34 = v6[v5 & 0x3F];
    unint64_t v35 = *((void *)v8 + 3);
    unint64_t v36 = v30 + 4;
    if ((uint64_t)(v30 + 4) <= (uint64_t)(v35 >> 1)) {
      goto LABEL_67;
    }
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v35 > 1), v30 + 4, 1, (char *)v8);
    uint64_t v28 = v55;
    goto LABEL_52;
  }
  __break(1u);
LABEL_82:
  uint64_t v54 = a3;
  swift_once();
  a3 = v54;
LABEL_41:
  unint64_t v37 = off_1EA567218;
  unint64_t v38 = (v3 >> 18) & 0x3F;
  if (v38 >= *((void *)off_1EA567218 + 2))
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = (unint64_t)off_1EA567218 + 32;
    LOBYTE(v6) = *((unsigned char *)off_1EA567218 + v38 + 32);
    unint64_t v8 = (unsigned __int8 *)*a3;
    uint64_t v11 = a3;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v11 = (int64_t)v8;
    if (result)
    {
      uint64_t v28 = v11;
      goto LABEL_44;
    }
  }
  uint64_t result = (uint64_t)sub_1C8D5EB50(0, *((void *)v8 + 2) + 1, 1, (char *)v8);
  uint64_t v28 = v11;
  unint64_t v8 = (unsigned __int8 *)result;
  *uint64_t v11 = result;
LABEL_44:
  unint64_t v40 = *((void *)v8 + 2);
  unint64_t v39 = *((void *)v8 + 3);
  unint64_t v41 = v40 + 1;
  if (v40 >= v39 >> 1)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v39 > 1), v40 + 1, 1, (char *)v8);
    uint64_t v28 = v11;
    unint64_t v8 = (unsigned __int8 *)result;
  }
  *((void *)v8 + 2) = v41;
  v8[v40 + 32] = v6;
  *uint64_t v28 = (int64_t)v8;
  unint64_t v42 = (v3 >> 12) & 0x30;
  if (v42 >= v37[2])
  {
    __break(1u);
    goto LABEL_86;
  }
  LOBYTE(v3) = *(unsigned char *)(v5 + v42);
  unint64_t v42 = *((void *)v8 + 3);
  unint64_t v37 = (void *)(v40 + 2);
  if ((uint64_t)(v40 + 2) > (uint64_t)(v42 >> 1))
  {
LABEL_86:
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v42 > 1), (int64_t)v37, 1, (char *)v8);
    uint64_t v28 = v11;
    unint64_t v8 = (unsigned __int8 *)result;
  }
  *((void *)v8 + 2) = v37;
  v8[v41 + 32] = v3;
  *uint64_t v28 = (int64_t)v8;
  unint64_t v43 = *((void *)v8 + 3);
  int64_t v31 = v40 + 3;
  if ((uint64_t)(v40 + 3) > (uint64_t)(v43 >> 1))
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v43 > 1), v40 + 3, 1, (char *)v8);
    uint64_t v28 = v11;
    unint64_t v8 = (unsigned __int8 *)result;
  }
  *((void *)v8 + 2) = v31;
  char v34 = 61;
  *((unsigned char *)v37 + (void)v8 + 32) = 61;
  *uint64_t v28 = (int64_t)v8;
  unint64_t v44 = *((void *)v8 + 3);
  unint64_t v36 = v40 + 4;
  if ((uint64_t)(v40 + 4) > (uint64_t)(v44 >> 1))
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v44 > 1), v40 + 4, 1, (char *)v8);
    uint64_t v28 = v11;
LABEL_52:
    unint64_t v8 = (unsigned __int8 *)result;
  }
LABEL_67:
  *((void *)v8 + 2) = v36;
  v8[v31 + 32] = v34;
  *uint64_t v28 = (int64_t)v8;
  return result;
}

uint64_t sub_1C8D29E74(uint64_t a1, uint64_t a2, uint64_t a3, int64_t *a4)
{
  uint64_t result = sub_1C8D88110();
  uint64_t v8 = result;
  if (result)
  {
    uint64_t result = sub_1C8D88140();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v8 += a1 - result;
  }
  BOOL v9 = __OFSUB__(a2, a1);
  uint64_t v10 = a2 - a1;
  if (v9)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v11 = sub_1C8D88130();
  if (v11 >= v10) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = v11;
  }
  uint64_t v13 = v8 + v12;
  if (v8) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  return sub_1C8D29618(v8, v14, a4);
}

uint64_t sub_1C8D29F18(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = *(char **)v2;
  if ((*(unsigned char *)(v2 + 9) & 1) == 0)
  {
    char v6 = *(unsigned char *)(v2 + 8);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)uint64_t v2 = v5;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v5 = sub_1C8D5EB50(0, *((void *)v5 + 2) + 1, 1, v5);
      *(void *)uint64_t v2 = v5;
    }
    unint64_t v9 = *((void *)v5 + 2);
    unint64_t v8 = *((void *)v5 + 3);
    if (v9 >= v8 >> 1) {
      unint64_t v5 = sub_1C8D5EB50((char *)(v8 > 1), v9 + 1, 1, v5);
    }
    *((void *)v5 + 2) = v9 + 1;
    v5[v9 + 32] = v6;
    *(void *)uint64_t v2 = v5;
  }
  char v10 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)uint64_t v2 = v5;
  if ((v10 & 1) == 0)
  {
    unint64_t v5 = sub_1C8D5EB50(0, *((void *)v5 + 2) + 1, 1, v5);
    *(void *)uint64_t v2 = v5;
  }
  unint64_t v12 = *((void *)v5 + 2);
  unint64_t v11 = *((void *)v5 + 3);
  if (v12 >= v11 >> 1) {
    unint64_t v5 = sub_1C8D5EB50((char *)(v11 > 1), v12 + 1, 1, v5);
  }
  *((void *)v5 + 2) = v12 + 1;
  v5[v12 + 32] = 34;
  *(void *)uint64_t v2 = v5;
  sub_1C8CA6060(a1, a2, (unsigned __int8 *)&v5[v12]);
  uint64_t v13 = *(void *)v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *(void *)uint64_t v2 = v13;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50(0, *(void *)(v13 + 16) + 1, 1, (char *)v13);
    uint64_t v13 = result;
    *(void *)uint64_t v2 = result;
  }
  unint64_t v16 = *(void *)(v13 + 16);
  unint64_t v15 = *(void *)(v13 + 24);
  unint64_t v17 = v16 + 1;
  if (v16 >= v15 >> 1)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v15 > 1), v16 + 1, 1, (char *)v13);
    uint64_t v13 = result;
  }
  *(void *)(v13 + 16) = v17;
  *(unsigned char *)(v13 + v16 + 32) = 34;
  *(void *)uint64_t v2 = v13;
  unint64_t v18 = *(void *)(v13 + 24);
  int64_t v19 = v16 + 2;
  if (v19 > (uint64_t)(v18 >> 1))
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v18 > 1), v19, 1, (char *)v13);
    uint64_t v13 = result;
  }
  *(void *)(v13 + 16) = v19;
  *(unsigned char *)(v13 + v17 + 32) = 58;
  *(void *)uint64_t v2 = v13;
  *(_WORD *)(v2 + 8) = 44;
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for JSONEncoder(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for JSONEncoder()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for JSONEncoder(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  return a1;
}

uint64_t __swift_memcpy10_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t assignWithTake for JSONEncoder(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for JSONEncoder(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 10)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JSONEncoder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 8) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 10) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 10) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JSONEncoder()
{
  return &type metadata for JSONEncoder;
}

ValueMetadata *type metadata accessor for BinaryEncodingVisitor()
{
  return &type metadata for BinaryEncodingVisitor;
}

uint64_t sub_1C8D2A2BC(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_8:
        __break(1u);
        JUMPOUT(0x1C8D2A360);
      }
      uint64_t v3 = HIDWORD(a1) - (int)a1;
LABEL_6:
      uint64_t v6 = *v2;
      uint64_t result = sub_1C8D88200();
      uint64_t *v2 = v6 + v3;
      return result;
    case 2uLL:
      uint64_t v5 = *(void *)(a1 + 16);
      uint64_t v4 = *(void *)(a1 + 24);
      uint64_t v3 = v4 - v5;
      if (!__OFSUB__(v4, v5)) {
        goto LABEL_6;
      }
      goto LABEL_8;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v3 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_1C8D2A370(uint64_t a1, float a2)
{
  uint64_t result = sub_1C8CA83B4(a1, 5u);
  uint64_t v5 = *v2;
  *uint64_t v5 = a2;
  uint64_t *v2 = v5 + 1;
  return result;
}

uint64_t sub_1C8D2A3E8(uint64_t a1, double a2)
{
  uint64_t result = sub_1C8CA83B4(a1, 1u);
  uint64_t v5 = *v2;
  *uint64_t v5 = a2;
  uint64_t *v2 = v5 + 1;
  return result;
}

uint64_t sub_1C8D2A460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C8CA83B4(a2, 3u);
  uint64_t result = (*(uint64_t (**)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(a4 + 72))(v4, &type metadata for BinaryEncodingVisitor, &off_1F2355030, a3, a4);
  if (!v5) {
    return sub_1C8CA83B4(a2, 4u);
  }
  return result;
}

unint64_t sub_1C8D2A50C(uint64_t a1, uint64_t a2)
{
  sub_1C8CA83B4(a2, 2u);
  unint64_t v4 = *(void *)(a1 + 16);
  if (v4 >> 61) {
    __break(1u);
  }
  unint64_t result = sub_1C8CAB02C(4 * v4);
  if (v4)
  {
    uint64_t v6 = *v2;
    swift_bridgeObjectRetain();
    if (v4 >= 8 && (unint64_t)(v6 - a1 - 32) >= 0x20)
    {
      uint64_t v7 = v4 & 0x7FFFFFFFFFFFFFF8;
      unint64_t v8 = (_DWORD *)(v6 + 4 * (v4 & 0x7FFFFFFFFFFFFFF8));
      unint64_t v12 = (long long *)(a1 + 48);
      uint64_t v13 = (_OWORD *)(v6 + 16);
      uint64_t v14 = v4 & 0x7FFFFFFFFFFFFFF8;
      do
      {
        long long v15 = *v12;
        *(v13 - 1) = *(v12 - 1);
        *uint64_t v13 = v15;
        v12 += 2;
        v13 += 2;
        v14 -= 8;
      }
      while (v14);
      if (v4 == v7) {
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v7 = 0;
      unint64_t v8 = (_DWORD *)v6;
    }
    unint64_t v9 = v4 - v7;
    char v10 = (int *)(a1 + 4 * v7 + 32);
    do
    {
      int v11 = *v10++;
      *v8++ = v11;
      --v9;
    }
    while (v9);
LABEL_8:
    unint64_t result = swift_bridgeObjectRelease();
    uint64_t *v2 = (uint64_t)v8;
  }
  return result;
}

unint64_t sub_1C8D2A624(uint64_t a1, uint64_t a2)
{
  sub_1C8CA83B4(a2, 2u);
  unint64_t v4 = *(void *)(a1 + 16);
  if (v4 >> 60) {
    __break(1u);
  }
  unint64_t result = sub_1C8CAB02C(8 * v4);
  if (v4)
  {
    uint64_t v6 = *v2;
    swift_bridgeObjectRetain();
    if (v4 >= 6 && (unint64_t)(v6 - a1 - 32) >= 0x20)
    {
      uint64_t v7 = v4 & 0x7FFFFFFFFFFFFFFCLL;
      unint64_t v8 = (void *)(v6 + 8 * (v4 & 0x7FFFFFFFFFFFFFFCLL));
      unint64_t v12 = (long long *)(a1 + 48);
      uint64_t v13 = (_OWORD *)(v6 + 16);
      uint64_t v14 = v4 & 0x7FFFFFFFFFFFFFFCLL;
      do
      {
        long long v15 = *v12;
        *(v13 - 1) = *(v12 - 1);
        *uint64_t v13 = v15;
        v12 += 2;
        v13 += 2;
        v14 -= 4;
      }
      while (v14);
      if (v4 == v7) {
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v7 = 0;
      unint64_t v8 = (void *)v6;
    }
    unint64_t v9 = v4 - v7;
    char v10 = (uint64_t *)(a1 + 8 * v7 + 32);
    do
    {
      uint64_t v11 = *v10++;
      *v8++ = v11;
      --v9;
    }
    while (v9);
LABEL_8:
    unint64_t result = swift_bridgeObjectRelease();
    uint64_t *v2 = (uint64_t)v8;
  }
  return result;
}

unint64_t sub_1C8D2A73C(uint64_t a1, uint64_t a2)
{
  sub_1C8CA83B4(a2, 2u);
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return sub_1C8CAB02C(0);
  }
  unint64_t result = 0;
  uint64_t v6 = 0;
  uint64_t v7 = a1 + 32;
  do
  {
    unsigned int v8 = *(_DWORD *)(v7 + 4 * v6);
    if ((v8 & 0x80000000) != 0)
    {
      uint64_t v9 = 10;
    }
    else if (v8 > 0x7F)
    {
      if (v8 >= 0x4000)
      {
        if (v8 >> 28) {
          uint64_t v10 = 5;
        }
        else {
          uint64_t v10 = 4;
        }
        if (v8 >= 0x200000) {
          uint64_t v9 = v10;
        }
        else {
          uint64_t v9 = 3;
        }
      }
      else
      {
        uint64_t v9 = 2;
      }
    }
    else
    {
      uint64_t v9 = 1;
    }
    BOOL v11 = __OFADD__(result, v9);
    result += v9;
    if (v11)
    {
      __break(1u);
      return result;
    }
    ++v6;
  }
  while (v4 != v6);
  unint64_t result = sub_1C8CAB02C(result);
  uint64_t v12 = 0;
  uint64_t v13 = (unsigned char *)*v2;
  do
  {
    unint64_t v15 = *(int *)(v7 + 4 * v12);
    if (v15 < 0x80)
    {
      LODWORD(v14) = *(_DWORD *)(v7 + 4 * v12);
    }
    else
    {
      do
      {
        *v13++ = v15 | 0x80;
        unint64_t v14 = v15 >> 7;
        unint64_t v16 = v15 >> 14;
        v15 >>= 7;
      }
      while (v16);
    }
    ++v12;
    *v13++ = v14;
  }
  while (v12 != v4);
  void *v2 = v13;
  return result;
}

unint64_t sub_1C8D2A84C(uint64_t a1, uint64_t a2)
{
  sub_1C8CA83B4(a2, 2u);
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return sub_1C8CAB02C(0);
  }
  unint64_t result = 0;
  uint64_t v6 = 0;
  uint64_t v7 = a1 + 32;
  do
  {
    unint64_t v8 = *(void *)(v7 + 8 * v6);
    if (v8 < 0x80)
    {
      uint64_t v9 = 1;
      goto LABEL_18;
    }
    if ((v8 & 0x8000000000000000) != 0)
    {
      uint64_t v9 = 10;
      goto LABEL_18;
    }
    if (!(v8 >> 35))
    {
      if (v8 < 0x200000)
      {
        uint64_t v9 = 2;
        if (v8 >= 0x4000) {
          goto LABEL_17;
        }
        goto LABEL_18;
      }
      uint64_t v9 = 4;
LABEL_16:
      if (!(v8 >> 28)) {
        goto LABEL_18;
      }
LABEL_17:
      ++v9;
      goto LABEL_18;
    }
    if (v8 >> 49)
    {
      v8 >>= 28;
      uint64_t v9 = 8;
      goto LABEL_16;
    }
    uint64_t v9 = 6;
    if (v8 >> 42) {
      goto LABEL_17;
    }
LABEL_18:
    BOOL v10 = __OFADD__(result, v9);
    result += v9;
    if (v10)
    {
      __break(1u);
      return result;
    }
    ++v6;
  }
  while (v4 != v6);
  unint64_t result = sub_1C8CAB02C(result);
  uint64_t v11 = 0;
  uint64_t v12 = (unsigned char *)*v2;
  do
  {
    unint64_t v14 = *(void *)(v7 + 8 * v11);
    if (v14 < 0x80)
    {
      unint64_t v13 = *(void *)(v7 + 8 * v11);
    }
    else
    {
      do
      {
        *v12++ = v14 | 0x80;
        unint64_t v13 = v14 >> 7;
        unint64_t v15 = v14 >> 14;
        v14 >>= 7;
      }
      while (v15);
    }
    ++v11;
    *v12++ = v13;
  }
  while (v11 != v4);
  void *v2 = v12;
  return result;
}

unint64_t sub_1C8D2A984(uint64_t a1, uint64_t a2)
{
  sub_1C8CA83B4(a2, 2u);
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return sub_1C8CAB02C(0);
  }
  unint64_t result = 0;
  uint64_t v6 = 0;
  uint64_t v7 = a1 + 32;
  do
  {
    unsigned int v8 = (2 * *(_DWORD *)(v7 + 4 * v6)) ^ (*(int *)(v7 + 4 * v6) >> 31);
    if (v8 >= 0x80)
    {
      if (v8 >> 14)
      {
        if (v8 >= 0x200000)
        {
          if (v8 >> 28) {
            uint64_t v9 = 5;
          }
          else {
            uint64_t v9 = 4;
          }
        }
        else
        {
          uint64_t v9 = 3;
        }
      }
      else
      {
        uint64_t v9 = 2;
      }
    }
    else
    {
      uint64_t v9 = 1;
    }
    BOOL v10 = __OFADD__(result, v9);
    result += v9;
    if (v10)
    {
      __break(1u);
      return result;
    }
    ++v6;
  }
  while (v4 != v6);
  unint64_t result = sub_1C8CAB02C(result);
  uint64_t v11 = 0;
  uint64_t v12 = (unsigned char *)*v2;
  do
  {
    unint64_t v14 = (2 * *(int *)(v7 + 4 * v11)) ^ ((uint64_t)*(int *)(v7 + 4 * v11) >> 63);
    if (v14 < 0x80)
    {
      LOBYTE(v13) = (2 * *(_DWORD *)(v7 + 4 * v11)) ^ ((uint64_t)*(int *)(v7 + 4 * v11) >> 63);
    }
    else
    {
      do
      {
        *v12++ = v14 | 0x80;
        unint64_t v13 = v14 >> 7;
        unint64_t v15 = v14 >> 14;
        v14 >>= 7;
      }
      while (v15);
    }
    ++v11;
    *v12++ = v13;
  }
  while (v11 != v4);
  void *v2 = v12;
  return result;
}

unint64_t sub_1C8D2AA9C(uint64_t a1, uint64_t a2)
{
  sub_1C8CA83B4(a2, 2u);
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return sub_1C8CAB02C(0);
  }
  unint64_t result = 0;
  uint64_t v6 = 0;
  uint64_t v7 = a1 + 32;
  do
  {
    unint64_t v8 = (2 * *(void *)(v7 + 8 * v6)) ^ (*(uint64_t *)(v7 + 8 * v6) >> 63);
    if (v8 < 0x80)
    {
      uint64_t v9 = 1;
      goto LABEL_18;
    }
    if ((v8 & 0x8000000000000000) != 0)
    {
      uint64_t v9 = 10;
      goto LABEL_18;
    }
    if (!(v8 >> 35))
    {
      if (v8 < 0x200000)
      {
        uint64_t v9 = 2;
        if (v8 >= 0x4000) {
          goto LABEL_17;
        }
        goto LABEL_18;
      }
      uint64_t v9 = 4;
LABEL_16:
      if (!(v8 >> 28)) {
        goto LABEL_18;
      }
LABEL_17:
      ++v9;
      goto LABEL_18;
    }
    if (v8 >> 49)
    {
      v8 >>= 28;
      uint64_t v9 = 8;
      goto LABEL_16;
    }
    uint64_t v9 = 6;
    if (v8 >> 42) {
      goto LABEL_17;
    }
LABEL_18:
    BOOL v10 = __OFADD__(result, v9);
    result += v9;
    if (v10)
    {
      __break(1u);
      return result;
    }
    ++v6;
  }
  while (v4 != v6);
  unint64_t result = sub_1C8CAB02C(result);
  uint64_t v11 = 0;
  uint64_t v12 = (unsigned char *)*v2;
  do
  {
    unint64_t v14 = (2 * *(void *)(v7 + 8 * v11)) ^ (*(uint64_t *)(v7 + 8 * v11) >> 63);
    if (v14 < 0x80)
    {
      LOBYTE(v13) = (2 * *(unsigned char *)(v7 + 8 * v11)) ^ (*(uint64_t *)(v7 + 8 * v11) >> 63);
    }
    else
    {
      do
      {
        *v12++ = v14 | 0x80;
        unint64_t v13 = v14 >> 7;
        unint64_t v15 = v14 >> 14;
        v14 >>= 7;
      }
      while (v15);
    }
    ++v11;
    *v12++ = v13;
  }
  while (v11 != v4);
  void *v2 = v12;
  return result;
}

unint64_t sub_1C8D2ABE4(uint64_t a1, uint64_t a2)
{
  sub_1C8CA83B4(a2, 2u);
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return sub_1C8CAB02C(0);
  }
  unint64_t result = 0;
  uint64_t v6 = 0;
  uint64_t v7 = a1 + 32;
  do
  {
    unsigned int v8 = *(_DWORD *)(v7 + 4 * v6);
    if (v8 >= 0x80)
    {
      if (v8 >> 14)
      {
        if (v8 >> 28) {
          uint64_t v10 = 5;
        }
        else {
          uint64_t v10 = 4;
        }
        if (v8 >= 0x200000) {
          uint64_t v9 = v10;
        }
        else {
          uint64_t v9 = 3;
        }
      }
      else
      {
        uint64_t v9 = 2;
      }
    }
    else
    {
      uint64_t v9 = 1;
    }
    BOOL v11 = __OFADD__(result, v9);
    result += v9;
    if (v11)
    {
      __break(1u);
      return result;
    }
    ++v6;
  }
  while (v4 != v6);
  unint64_t result = sub_1C8CAB02C(result);
  uint64_t v12 = 0;
  unint64_t v13 = (unsigned char *)*v2;
  do
  {
    unint64_t v15 = *(unsigned int *)(v7 + 4 * v12);
    if (v15 < 0x80)
    {
      LODWORD(v14) = *(_DWORD *)(v7 + 4 * v12);
    }
    else
    {
      do
      {
        *v13++ = v15 | 0x80;
        unint64_t v14 = v15 >> 7;
        unint64_t v16 = v15 >> 14;
        v15 >>= 7;
      }
      while (v16);
    }
    ++v12;
    *v13++ = v14;
  }
  while (v12 != v4);
  void *v2 = v13;
  return result;
}

unint64_t sub_1C8D2ACE8(uint64_t a1, uint64_t a2)
{
  sub_1C8CA83B4(a2, 2u);
  unint64_t v4 = *(void *)(a1 + 16);
  unint64_t result = sub_1C8CAB02C(v4);
  if (v4)
  {
    uint64_t v6 = *v2;
    if (v4 >= 0x40 && (unint64_t)&v6[-2] - a1 >= 0x20)
    {
      uint64_t v7 = v4 & 0x7FFFFFFFFFFFFFE0;
      unsigned int v8 = (int8x16_t *)((char *)v6 + (v4 & 0x7FFFFFFFFFFFFFE0));
      uint64_t v12 = a1 + 63;
      v13.i64[0] = 0x101010101010101;
      v13.i64[1] = 0x101010101010101;
      uint64_t v14 = v4 & 0x7FFFFFFFFFFFFFE0;
      do
      {
        int8x16_t v15 = *(int8x16_t *)(v12 - 15);
        *uint64_t v6 = vandq_s8(*(int8x16_t *)(v12 - 31), v13);
        v6[1] = vandq_s8(v15, v13);
        v6 += 2;
        v12 += 32;
        v14 -= 32;
      }
      while (v14);
      if (v4 == v7) {
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v7 = 0;
      unsigned int v8 = *v2;
    }
    unint64_t v9 = v4 - v7;
    uint64_t v10 = (__int8 *)(v7 + a1 + 32);
    do
    {
      __int8 v11 = *v10++;
      v8->i8[0] = v11;
      unsigned int v8 = (int8x16_t *)((char *)v8 + 1);
      --v9;
    }
    while (v9);
LABEL_7:
    void *v2 = v8;
  }
  return result;
}

uint64_t sub_1C8D2AEB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = *(void *)(a3 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](a1, a2);
  unint64_t v45 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v10, v12);
  unint64_t v46 = (char *)&v39 - v14;
  uint64_t v40 = v15;
  MEMORY[0x1F4188790](v13, v16);
  unint64_t v18 = (char *)&v39 - v17;
  sub_1C8CA83B4(v19, 2u);
  uint64_t v20 = swift_bridgeObjectRetain();
  uint64_t v21 = MEMORY[0x1CB773090](v20, a3);
  uint64_t v47 = a4;
  if (v21)
  {
    uint64_t v22 = 0;
    unint64_t v23 = 0;
    unint64_t v42 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 40);
    unint64_t v43 = (uint64_t (*)(uint64_t, uint64_t))(a4 + 40);
    unint64_t v44 = (void (**)(char *, uint64_t *, uint64_t))(v9 + 16);
    unint64_t v41 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
    do
    {
      char v24 = sub_1C8D88510();
      sub_1C8D884D0();
      if (v24)
      {
        unsigned int v25 = v5;
        uint64_t result = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v9 + 16))(v18, a1+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v22, a3);
      }
      else
      {
        uint64_t result = sub_1C8D886B0();
        if (v40 != 8) {
          goto LABEL_39;
        }
        unsigned int v25 = v5;
        uint64_t v48 = result;
        (*v44)(v18, &v48, a3);
        uint64_t result = swift_unknownObjectRelease();
      }
      uint64_t v27 = v22 + 1;
      if (__OFADD__(v22, 1))
      {
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return result;
      }
      unsigned int v28 = v42(a3, v47);
      uint64_t result = (*v41)(v18, a3);
      uint64_t v29 = 4;
      if (v28 >> 28) {
        uint64_t v29 = 5;
      }
      if (v28 < 0x200000) {
        uint64_t v29 = 3;
      }
      if (v28 < 0x4000) {
        uint64_t v29 = 2;
      }
      if (v28 <= 0x7F) {
        uint64_t v29 = 1;
      }
      if ((v28 & 0x80000000) != 0) {
        uint64_t v29 = 10;
      }
      BOOL v30 = __OFADD__(v23, v29);
      v23 += v29;
      if (v30) {
        goto LABEL_38;
      }
      ++v22;
      BOOL v31 = v27 == MEMORY[0x1CB773090](a1, a3);
      uint64_t v5 = v25;
    }
    while (!v31);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v23 = 0;
  }
  sub_1C8CAB02C(v23);
  uint64_t v32 = swift_bridgeObjectRetain();
  if (!MEMORY[0x1CB773090](v32, a3)) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v33 = 0;
  unint64_t v43 = *(uint64_t (**)(uint64_t, uint64_t))(v47 + 40);
  unint64_t v44 = (void (**)(char *, uint64_t *, uint64_t))(v9 + 16);
  while (1)
  {
    char v35 = sub_1C8D88510();
    sub_1C8D884D0();
    if ((v35 & 1) == 0) {
      break;
    }
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v46, a1+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v33, a3);
    BOOL v30 = __OFADD__(v33++, 1);
    if (v30) {
      goto LABEL_35;
    }
LABEL_29:
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v45, v46, a3);
    unint64_t v36 = v43(a3, v47);
    unint64_t v37 = *v5;
    if (v36 < 0x80)
    {
      LOBYTE(v34) = v36;
    }
    else
    {
      do
      {
        *v37++ = v36 | 0x80;
        unint64_t v34 = v36 >> 7;
        unint64_t v38 = v36 >> 14;
        v36 >>= 7;
      }
      while (v38);
    }
    *unint64_t v37 = v34;
    *uint64_t v5 = v37 + 1;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v45, a3);
    if (v33 == MEMORY[0x1CB773090](a1, a3)) {
      return swift_bridgeObjectRelease();
    }
  }
  uint64_t result = sub_1C8D886B0();
  if (v40 != 8) {
    goto LABEL_40;
  }
  uint64_t v48 = result;
  (*v44)(v46, &v48, a3);
  swift_unknownObjectRelease();
  BOOL v30 = __OFADD__(v33++, 1);
  if (!v30) {
    goto LABEL_29;
  }
LABEL_35:
  __break(1u);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C8D2B328(unint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v97 = *(void *)(a6 + 8);
  uint64_t v93 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v75 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness, v11);
  uint64_t v98 = *(void *)(a5 + 8);
  char v99 = (char *)&v65 - v12;
  uint64_t v95 = a3;
  uint64_t v14 = v13;
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v74 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15, v15);
  uint64_t v17 = (char *)&v65 - v16;
  uint64_t v101 = v18;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v85 = sub_1C8D88620();
  uint64_t v20 = *(void *)(v85 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v85, v21);
  char v24 = (char *)&v65 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22, v25);
  uint64_t v27 = (char *)&v65 - v26;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v28 = sub_1C8D88730();
    unint64_t v69 = 0;
    uint64_t v29 = 0;
    unint64_t v30 = 0;
    unint64_t v31 = v28 | 0x8000000000000000;
  }
  else
  {
    uint64_t v32 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v29 = ~v32;
    uint64_t v33 = *(void *)(a1 + 64);
    unint64_t v69 = a1 + 64;
    uint64_t v34 = -v32;
    if (v34 < 64) {
      uint64_t v35 = ~(-1 << v34);
    }
    else {
      uint64_t v35 = -1;
    }
    unint64_t v30 = v35 & v33;
    unint64_t v31 = a1;
  }
  uint64_t v70 = v31 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v84 = TupleTypeMetadata2 - 8;
  uint64_t v67 = v29;
  uint64_t v72 = v74 + 16;
  uint64_t v71 = v75 + 16;
  unsigned long long v83 = (void (**)(char *, char *, uint64_t))(v20 + 32);
  uint64_t v79 = (void (**)(char *, char *, uint64_t))(v74 + 32);
  uint64_t v78 = (void (**)(char *, char *, uint64_t))(v75 + 32);
  unint64_t v77 = (8 * a2) | 2;
  uint64_t v94 = v98 + 48;
  uint64_t v92 = v97 + 48;
  unint64_t v80 = (void (**)(char *, uint64_t))(v75 + 8);
  unint64_t v81 = (void (**)(char *, uint64_t))(v74 + 8);
  int64_t v68 = (unint64_t)(v29 + 64) >> 6;
  int64_t v66 = v68 - 1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v37 = 0;
  unint64_t v38 = v99;
  uint64_t v86 = v27;
  uint64_t v87 = v24;
  unint64_t v82 = v31;
  unint64_t v39 = v30;
  uint64_t v40 = v73;
  uint64_t v76 = TupleTypeMetadata2;
  uint64_t v96 = v17;
  int64_t v88 = 0;
  uint64_t v89 = v39;
  if ((v31 & 0x8000000000000000) == 0) {
    goto LABEL_12;
  }
LABEL_8:
  if (sub_1C8D88740())
  {
    unint64_t v41 = v87;
    sub_1C8D887B0();
    char v24 = v41;
    uint64_t v27 = v86;
    swift_unknownObjectRelease();
    sub_1C8D887B0();
    swift_unknownObjectRelease();
    uint64_t v42 = 0;
  }
  else
  {
    uint64_t v42 = 1;
    char v24 = v87;
  }
  uint64_t v90 = v89;
  int64_t v91 = v88;
  while (1)
  {
    while (1)
    {
LABEL_28:
      uint64_t v48 = *(void *)(TupleTypeMetadata2 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v48 + 56))(v24, v42, 1, TupleTypeMetadata2);
      (*v83)(v27, v24, v85);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v27, 1, TupleTypeMetadata2) == 1) {
        return sub_1C8D18798();
      }
      unint64_t v49 = &v27[*(int *)(TupleTypeMetadata2 + 48)];
      uint64_t v50 = v101;
      (*v79)(v17, v27, v101);
      (*v78)(v38, v49, v14);
      unint64_t v51 = v40;
      unint64_t v52 = *v40;
      unint64_t v53 = v77;
      if (v77 < 0x80)
      {
        LOBYTE(v55) = v77;
        uint64_t v54 = v100;
      }
      else
      {
        uint64_t v54 = v100;
        do
        {
          *v52++ = v53 | 0x80;
          unint64_t v55 = v53 >> 7;
          unint64_t v56 = v53 >> 14;
          v53 >>= 7;
        }
        while (v56);
      }
      *unint64_t v52 = v55;
      uint64_t v57 = v52 + 1;
      *unint64_t v51 = v57;
      unint64_t v102 = 0;
      uint64_t v58 = *(void (**)(void))(v98 + 48);
      ((void (*)(char *, uint64_t, unint64_t *, ValueMetadata *))v58)(v96, 1, &v102, &type metadata for BinaryEncodingSizeVisitor);
      if (v54)
      {
        uint64_t v100 = v54;
        uint64_t v64 = v96;
        (*v80)(v99, v14);
        (*v81)(v64, v50);
        return sub_1C8D18798();
      }
      uint64_t v59 = *(void (**)(char *, uint64_t, unint64_t *, ValueMetadata *, _UNKNOWN **))(v97 + 48);
      v59(v99, 2, &v102, &type metadata for BinaryEncodingSizeVisitor, &off_1F2354500);
      unint64_t v60 = v102;
      if (v102 < 0x80)
      {
        LOBYTE(v61) = v102;
      }
      else
      {
        do
        {
          *v57++ = v60 | 0x80;
          unint64_t v61 = v60 >> 7;
          unint64_t v62 = v60 >> 14;
          v60 >>= 7;
        }
        while (v62);
      }
      *uint64_t v57 = v61;
      *unint64_t v51 = v57 + 1;
      int64_t v63 = v96;
      v58();
      unint64_t v38 = v99;
      uint64_t v40 = (unsigned char **)v51;
      v59(v99, 2, v51, &type metadata for BinaryEncodingVisitor, &off_1F2355030);
      uint64_t v100 = 0;
      (*v80)(v38, v14);
      uint64_t v17 = v63;
      uint64_t result = ((uint64_t (*)(char *, uint64_t))*v81)(v63, v101);
      unint64_t v39 = v90;
      int64_t v37 = v91;
      TupleTypeMetadata2 = v76;
      uint64_t v27 = v86;
      char v24 = v87;
      unint64_t v31 = v82;
      int64_t v88 = v91;
      uint64_t v89 = v90;
      if ((v82 & 0x8000000000000000) != 0) {
        goto LABEL_8;
      }
LABEL_12:
      if (v39)
      {
        uint64_t v43 = v14;
        uint64_t v90 = (v39 - 1) & v39;
        int64_t v91 = v37;
        unint64_t v44 = __clz(__rbit64(v39)) | (v37 << 6);
        goto LABEL_14;
      }
      int64_t v45 = v37 + 1;
      if (__OFADD__(v37, 1))
      {
        __break(1u);
        goto LABEL_49;
      }
      if (v45 >= v68) {
        goto LABEL_26;
      }
      unint64_t v46 = *(void *)(v69 + 8 * v45);
      if (!v46) {
        break;
      }
LABEL_18:
      uint64_t v43 = v14;
      uint64_t v90 = (v46 - 1) & v46;
      int64_t v91 = v45;
      unint64_t v44 = __clz(__rbit64(v46)) + (v45 << 6);
LABEL_14:
      (*(void (**)(char *, unint64_t, uint64_t))(v74 + 16))(v24, *(void *)(v31 + 48) + *(void *)(v74 + 72) * v44, v101);
      uint64_t v14 = v43;
      (*(void (**)(char *, unint64_t, uint64_t))(v75 + 16))(&v24[*(int *)(TupleTypeMetadata2 + 48)], *(void *)(v31 + 56) + *(void *)(v75 + 72) * v44, v43);
      uint64_t v42 = 0;
      uint64_t v40 = v73;
    }
    v37 += 2;
    if (v45 + 1 >= v68)
    {
      uint64_t v90 = 0;
      int64_t v91 = v45;
      goto LABEL_27;
    }
    unint64_t v46 = *(void *)(v69 + 8 * v37);
    if (v46)
    {
      ++v45;
      goto LABEL_18;
    }
    int64_t v47 = v45 + 2;
    if (v45 + 2 < v68) {
      break;
    }
LABEL_26:
    uint64_t v90 = 0;
    int64_t v91 = v37;
LABEL_27:
    uint64_t v42 = 1;
  }
  unint64_t v46 = *(void *)(v69 + 8 * v47);
  if (v46)
  {
    v45 += 2;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v45 = v47 + 1;
    if (__OFADD__(v47, 1)) {
      break;
    }
    if (v45 >= v68)
    {
      uint64_t v90 = 0;
      uint64_t v42 = 1;
      int64_t v91 = v66;
      goto LABEL_28;
    }
    unint64_t v46 = *(void *)(v69 + 8 * v45);
    ++v47;
    if (v46) {
      goto LABEL_18;
    }
  }
LABEL_49:
  __break(1u);
  return result;
}

uint64_t sub_1C8D2BC6C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = v7;
  uint64_t v9 = v6;
  uint64_t v90 = a6;
  uint64_t v10 = a4;
  int v11 = a2;
  uint64_t v72 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](a1, a2);
  uint64_t v93 = (uint64_t)v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = *(void *)(v14 + 8);
  uint64_t v89 = v15;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v71 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness, AssociatedTypeWitness);
  uint64_t v18 = (char *)v65 - v17;
  uint64_t v92 = v19;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v83 = sub_1C8D88620();
  uint64_t v22 = MEMORY[0x1F4188790](v83, v21);
  uint64_t v84 = (char *)v65 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22, v24);
  uint64_t v27 = (char *)v65 - v26;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v28 = v25;
    uint64_t v29 = sub_1C8D88730();
    uint64_t v25 = v28;
    unint64_t v66 = 0;
    uint64_t v30 = 0;
    uint64_t v31 = 0;
    unint64_t v32 = v29 | 0x8000000000000000;
  }
  else
  {
    uint64_t v33 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v30 = ~v33;
    uint64_t v34 = *(void *)(a1 + 64);
    unint64_t v66 = a1 + 64;
    uint64_t v35 = -v33;
    if (v35 < 64) {
      uint64_t v36 = ~(-1 << v35);
    }
    else {
      uint64_t v36 = -1;
    }
    uint64_t v31 = v36 & v34;
    unint64_t v32 = a1;
  }
  uint64_t v68 = v32 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v81 = TupleTypeMetadata2 - 8;
  v65[1] = v30;
  uint64_t v70 = v71 + 16;
  uint64_t v69 = v72 + 16;
  unint64_t v80 = (void (**)(void))(v25 + 32);
  uint64_t v78 = (void (**)(char *, char *, uint64_t))(v71 + 32);
  unint64_t v77 = (void (**)(uint64_t, char *, uint64_t))(v72 + 32);
  unint64_t v76 = (8 * v11) | 2;
  uint64_t v88 = v91 + 48;
  uint64_t v73 = v90 + 40;
  uint64_t v74 = (void (**)(uint64_t, uint64_t))(v72 + 8);
  uint64_t v75 = (uint64_t (**)(char *, uint64_t))(v71 + 8);
  int64_t v67 = (unint64_t)(v30 + 64) >> 6;
  v65[0] = v67 - 1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v38 = 0;
  uint64_t v94 = v18;
  unint64_t v82 = v27;
  unint64_t v79 = v32;
  int64_t v85 = 0;
  if ((v32 & 0x8000000000000000) == 0) {
    goto LABEL_12;
  }
LABEL_8:
  if (sub_1C8D88740())
  {
    unint64_t v39 = v84;
    sub_1C8D887B0();
    swift_unknownObjectRelease();
    sub_1C8D887B0();
    swift_unknownObjectRelease();
    uint64_t v40 = 0;
  }
  else
  {
    uint64_t v40 = 1;
    unint64_t v39 = v84;
  }
  uint64_t v86 = v31;
  int64_t v87 = v85;
  uint64_t v18 = v94;
  while (1)
  {
    while (1)
    {
LABEL_21:
      uint64_t v48 = *(void *)(TupleTypeMetadata2 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v48 + 56))(v39, v40, 1, TupleTypeMetadata2);
      unint64_t v49 = v82;
      (*v80)();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v49, 1, TupleTypeMetadata2) == 1) {
        return sub_1C8D18798();
      }
      uint64_t v50 = &v49[*(int *)(TupleTypeMetadata2 + 48)];
      (*v78)(v18, v49, v92);
      (*v77)(v93, v50, v10);
      unint64_t v51 = (unsigned char *)*v9;
      LOBYTE(v52) = v76;
      if (v76 >= 0x80)
      {
        unint64_t v53 = v76;
        do
        {
          *v51++ = v53 | 0x80;
          unint64_t v52 = v53 >> 7;
          unint64_t v54 = v53 >> 14;
          v53 >>= 7;
        }
        while (v54);
      }
      *unint64_t v51 = v52;
      unint64_t v55 = v51 + 1;
      *uint64_t v9 = (unint64_t)v55;
      unint64_t v95 = 0;
      unint64_t v56 = *(void (**)(char *, uint64_t, unint64_t *, ValueMetadata *, _UNKNOWN **))(v91 + 48);
      v56(v94, 1, &v95, &type metadata for BinaryEncodingSizeVisitor, &off_1F2354500);
      if (v8)
      {
        uint64_t v64 = v94;
        (*v74)(v93, v10);
        (*v75)(v64, v92);
        return sub_1C8D18798();
      }
      sub_1C8CAAEA0(v93, 2, v10, v90);
      uint64_t v8 = 0;
      unint64_t v57 = v95;
      if (v95 < 0x80)
      {
        LOBYTE(v58) = v95;
      }
      else
      {
        do
        {
          *v55++ = v57 | 0x80;
          unint64_t v58 = v57 >> 7;
          unint64_t v59 = v57 >> 14;
          v57 >>= 7;
        }
        while (v59);
      }
      *unint64_t v55 = v58;
      *uint64_t v9 = (unint64_t)(v55 + 1);
      v56(v94, 1, v9, &type metadata for BinaryEncodingVisitor, &off_1F2355030);
      uint64_t v60 = v93;
      uint64_t v61 = (*(uint64_t (**)(uint64_t))(v90 + 40))(v10);
      sub_1C8CA83B4(2, 0);
      unint64_t v62 = v61;
      uint64_t v18 = v94;
      sub_1C8CAB02C(v62);
      (*v74)(v60, v10);
      uint64_t result = (*v75)(v18, v92);
      uint64_t v31 = v86;
      int64_t v38 = v87;
      unint64_t v32 = v79;
      int64_t v85 = v87;
      if ((v79 & 0x8000000000000000) != 0) {
        goto LABEL_8;
      }
LABEL_12:
      if (v31)
      {
        unint64_t v41 = v9;
        uint64_t v42 = v18;
        unint64_t v43 = v31;
        uint64_t v44 = v10;
        uint64_t v86 = (v43 - 1) & v43;
        int64_t v87 = v38;
        unint64_t v45 = __clz(__rbit64(v43)) | (v38 << 6);
        unint64_t v39 = v84;
        goto LABEL_14;
      }
      int64_t v46 = v38 + 1;
      unint64_t v39 = v84;
      if (__OFADD__(v38, 1))
      {
        __break(1u);
        goto LABEL_48;
      }
      if (v46 >= v67)
      {
        uint64_t v86 = 0;
        int64_t v87 = v38;
        goto LABEL_20;
      }
      unint64_t v47 = *(void *)(v66 + 8 * v46);
      if (!v47) {
        break;
      }
LABEL_18:
      unint64_t v41 = v9;
      uint64_t v42 = v18;
      uint64_t v44 = v10;
      uint64_t v86 = (v47 - 1) & v47;
      int64_t v87 = v46;
      unint64_t v45 = __clz(__rbit64(v47)) + (v46 << 6);
LABEL_14:
      (*(void (**)(char *, unint64_t, uint64_t))(v71 + 16))(v39, *(void *)(v32 + 48) + *(void *)(v71 + 72) * v45, v92);
      uint64_t v10 = v44;
      (*(void (**)(char *, unint64_t, uint64_t))(v72 + 16))(&v39[*(int *)(TupleTypeMetadata2 + 48)], *(void *)(v32 + 56) + *(void *)(v72 + 72) * v45, v44);
      uint64_t v40 = 0;
      uint64_t v18 = v42;
      uint64_t v9 = v41;
    }
    if (v38 + 2 >= v67)
    {
      uint64_t v86 = 0;
      int64_t v87 = v38 + 1;
      goto LABEL_20;
    }
    unint64_t v47 = *(void *)(v66 + 8 * (v38 + 2));
    if (v47)
    {
      int64_t v46 = v38 + 2;
      goto LABEL_18;
    }
    uint64_t v63 = v38 + 3;
    if (v38 + 3 < v67) {
      break;
    }
    uint64_t v86 = 0;
    int64_t v87 = v38 + 2;
LABEL_20:
    uint64_t v40 = 1;
  }
  unint64_t v47 = *(void *)(v66 + 8 * v63);
  if (v47)
  {
    int64_t v46 = v38 + 3;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v46 = v63 + 1;
    if (__OFADD__(v63, 1)) {
      break;
    }
    if (v46 >= v67)
    {
      uint64_t v86 = 0;
      uint64_t v40 = 1;
      int64_t v87 = v65[0];
      goto LABEL_21;
    }
    unint64_t v47 = *(void *)(v66 + 8 * v46);
    ++v63;
    if (v47) {
      goto LABEL_18;
    }
  }
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_1C8D2C510(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v80 = a6;
  uint64_t v84 = a2;
  uint64_t v66 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](a1, a2);
  int v11 = (char *)v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = *(void *)(v12 + 8);
  uint64_t v83 = v13;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v65 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness, v15);
  uint64_t v86 = a4;
  int64_t v87 = (char *)v58 - v16;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v75 = sub_1C8D88620();
  uint64_t v19 = MEMORY[0x1F4188790](v75, v18);
  uint64_t v21 = (char *)v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19, v22);
  uint64_t v25 = (char *)v58 - v24;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v26 = v23;
    uint64_t v27 = sub_1C8D88730();
    uint64_t v23 = v26;
    unint64_t v60 = 0;
    uint64_t v28 = 0;
    unint64_t v29 = 0;
    unint64_t v30 = v27 | 0x8000000000000000;
  }
  else
  {
    uint64_t v31 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v28 = ~v31;
    uint64_t v32 = *(void *)(a1 + 64);
    unint64_t v60 = a1 + 64;
    uint64_t v33 = -v31;
    if (v33 < 64) {
      uint64_t v34 = ~(-1 << v33);
    }
    else {
      uint64_t v34 = -1;
    }
    unint64_t v29 = v34 & v32;
    unint64_t v30 = a1;
  }
  uint64_t v62 = v30 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v74 = TupleTypeMetadata2 - 8;
  v58[1] = v28;
  uint64_t v64 = v65 + 16;
  uint64_t v63 = v66 + 16;
  uint64_t v73 = (void (**)(char *, char *, uint64_t))(v23 + 32);
  uint64_t v69 = (void (**)(char *, char *, uint64_t))(v65 + 32);
  uint64_t v68 = (void (**)(char *, char *, uint64_t))(v66 + 32);
  unint64_t v67 = (8 * v84) | 2;
  uint64_t v82 = v85 + 48;
  uint64_t v70 = (void (**)(uint64_t, uint64_t))(v66 + 8);
  uint64_t v71 = (void (**)(char *, uint64_t))(v65 + 8);
  int64_t v59 = (unint64_t)(v28 + 64) >> 6;
  v58[0] = v59 - 1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v36 = 0;
  uint64_t v84 = (uint64_t)v11;
  uint64_t v76 = TupleTypeMetadata2;
  unint64_t v72 = v30;
  uint64_t v61 = v25;
  int64_t v77 = 0;
  if ((v30 & 0x8000000000000000) == 0) {
    goto LABEL_12;
  }
LABEL_8:
  if (sub_1C8D88740())
  {
    sub_1C8D887B0();
    swift_unknownObjectRelease();
    TupleTypeMetadata2 = v76;
    sub_1C8D887B0();
    swift_unknownObjectRelease();
    uint64_t v37 = 0;
  }
  else
  {
    uint64_t v37 = 1;
    TupleTypeMetadata2 = v76;
  }
  uint64_t v78 = v29;
  int64_t v79 = v77;
  uint64_t v25 = v61;
  while (1)
  {
    while (1)
    {
LABEL_28:
      uint64_t v42 = *(void *)(TupleTypeMetadata2 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56))(v21, v37, 1, TupleTypeMetadata2);
      (*v73)(v25, v21, v75);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v25, 1, TupleTypeMetadata2) == 1) {
        return sub_1C8D18798();
      }
      unint64_t v43 = v21;
      uint64_t v44 = &v25[*(int *)(TupleTypeMetadata2 + 48)];
      uint64_t v45 = AssociatedTypeWitness;
      (*v69)(v87, v25, AssociatedTypeWitness);
      (*v68)(v11, v44, v86);
      int64_t v46 = v81;
      unint64_t v47 = *v81;
      unint64_t v48 = v67;
      if (v67 < 0x80)
      {
        LOBYTE(v49) = v67;
      }
      else
      {
        do
        {
          *v47++ = v48 | 0x80;
          unint64_t v49 = v48 >> 7;
          unint64_t v50 = v48 >> 14;
          v48 >>= 7;
        }
        while (v50);
      }
      unsigned char *v47 = v49;
      unint64_t v51 = v47 + 1;
      *int64_t v46 = v51;
      unint64_t v88 = 0;
      unint64_t v52 = *(void (**)(char *, uint64_t))(v85 + 48);
      ((void (*)(char *, uint64_t, unint64_t *, ValueMetadata *, _UNKNOWN **))v52)(v87, 1, &v88, &type metadata for BinaryEncodingSizeVisitor, &off_1F2354500);
      if (v7)
      {
        (*v70)(v84, v86);
        (*v71)(v87, v45);
        return sub_1C8D18798();
      }
      sub_1C8CAAB80(v84, 2, v86, v80);
      unint64_t v53 = v88;
      if (v88 < 0x80)
      {
        LOBYTE(v55) = v88;
        unint64_t v54 = v81;
      }
      else
      {
        unint64_t v54 = v81;
        do
        {
          *v51++ = v53 | 0x80;
          unint64_t v55 = v53 >> 7;
          unint64_t v56 = v53 >> 14;
          v53 >>= 7;
        }
        while (v56);
      }
      *unint64_t v51 = v55;
      void *v54 = v51 + 1;
      v52(v87, 1);
      int v11 = (char *)v84;
      uint64_t v57 = v86;
      sub_1C8CA8304(v84, 2, v86, v80);
      uint64_t v7 = 0;
      uint64_t AssociatedTypeWitness = v45;
      (*v70)((uint64_t)v11, v57);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))*v71)(v87, v45);
      unint64_t v29 = v78;
      int64_t v36 = v79;
      uint64_t v21 = v43;
      unint64_t v30 = v72;
      TupleTypeMetadata2 = v76;
      int64_t v77 = v79;
      if ((v72 & 0x8000000000000000) != 0) {
        goto LABEL_8;
      }
LABEL_12:
      if (v29)
      {
        uint64_t v78 = (v29 - 1) & v29;
        int64_t v79 = v36;
        unint64_t v38 = __clz(__rbit64(v29)) | (v36 << 6);
        goto LABEL_14;
      }
      int64_t v39 = v36 + 1;
      if (__OFADD__(v36, 1))
      {
        __break(1u);
        goto LABEL_49;
      }
      if (v39 >= v59) {
        goto LABEL_26;
      }
      unint64_t v40 = *(void *)(v60 + 8 * v39);
      if (!v40) {
        break;
      }
LABEL_18:
      uint64_t v78 = (v40 - 1) & v40;
      int64_t v79 = v39;
      unint64_t v38 = __clz(__rbit64(v40)) + (v39 << 6);
LABEL_14:
      (*(void (**)(char *, unint64_t, uint64_t))(v65 + 16))(v21, *(void *)(v30 + 48) + *(void *)(v65 + 72) * v38, AssociatedTypeWitness);
      (*(void (**)(char *, unint64_t, uint64_t))(v66 + 16))(&v21[*(int *)(TupleTypeMetadata2 + 48)], *(void *)(v30 + 56) + *(void *)(v66 + 72) * v38, v86);
      uint64_t v37 = 0;
    }
    v36 += 2;
    if (v39 + 1 >= v59)
    {
      uint64_t v78 = 0;
      int64_t v79 = v39;
      goto LABEL_27;
    }
    unint64_t v40 = *(void *)(v60 + 8 * v36);
    if (v40)
    {
      ++v39;
      goto LABEL_18;
    }
    int64_t v41 = v39 + 2;
    if (v39 + 2 < v59) {
      break;
    }
LABEL_26:
    uint64_t v78 = 0;
    int64_t v79 = v36;
LABEL_27:
    uint64_t v37 = 1;
  }
  unint64_t v40 = *(void *)(v60 + 8 * v41);
  if (v40)
  {
    v39 += 2;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v39 = v41 + 1;
    if (__OFADD__(v41, 1)) {
      break;
    }
    if (v39 >= v59)
    {
      uint64_t v78 = 0;
      uint64_t v37 = 1;
      int64_t v79 = v58[0];
      goto LABEL_28;
    }
    unint64_t v40 = *(void *)(v60 + 8 * v39);
    ++v41;
    if (v40) {
      goto LABEL_18;
    }
  }
LABEL_49:
  __break(1u);
  return result;
}

uint64_t sub_1C8D2CD9C(uint64_t a1, float a2)
{
  return sub_1C8D2A370(a1, a2);
}

unint64_t sub_1C8D2CDB4(int a1, uint64_t a2)
{
  unint64_t v2 = (2 * a1) ^ ((uint64_t)a1 >> 63);
  sub_1C8CA83B4(a2, 0);
  return sub_1C8CAB02C(v2);
}

unint64_t sub_1C8D2CDF8(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = (2 * a1) ^ (a1 >> 63);
  sub_1C8CA83B4(a2, 0);
  return sub_1C8CAB02C(v2);
}

uint64_t sub_1C8D2CE38(int a1, uint64_t a2)
{
  uint64_t result = sub_1C8CA83B4(a2, 5u);
  uint64_t v5 = *v2;
  *uint64_t v5 = a1;
  void *v2 = v5 + 1;
  return result;
}

uint64_t sub_1C8D2CEAC(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C8CA83B4(a2, 1u);
  uint64_t v5 = *v2;
  *uint64_t v5 = a1;
  void *v2 = v5 + 1;
  return result;
}

uint64_t sub_1C8D2CF20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C8CA8424(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t))sub_1C8CC4510);
}

uint64_t sub_1C8D2CF4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8D2A460(a1, a2, a3, a4);
}

unint64_t sub_1C8D2CF64(uint64_t a1, uint64_t a2)
{
  return sub_1C8D2A50C(a1, a2);
}

unint64_t sub_1C8D2CF7C(uint64_t a1, uint64_t a2)
{
  return sub_1C8D2A624(a1, a2);
}

unint64_t sub_1C8D2CF94(uint64_t a1, uint64_t a2)
{
  return sub_1C8D2A73C(a1, a2);
}

unint64_t sub_1C8D2CFAC(uint64_t a1, uint64_t a2)
{
  return sub_1C8D2A84C(a1, a2);
}

unint64_t sub_1C8D2CFC4(uint64_t a1, uint64_t a2)
{
  return sub_1C8D2ABE4(a1, a2);
}

unint64_t sub_1C8D2CFDC(uint64_t a1, uint64_t a2)
{
  return sub_1C8D2A984(a1, a2);
}

unint64_t sub_1C8D2CFF4(uint64_t a1, uint64_t a2)
{
  return sub_1C8D2AA9C(a1, a2);
}

unint64_t sub_1C8D2D00C(uint64_t a1, uint64_t a2)
{
  return sub_1C8D2ACE8(a1, a2);
}

uint64_t sub_1C8D2D024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8D2AEB0(a1, a2, a3, a4);
}

uint64_t sub_1C8D2D03C(unint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1C8D2B328(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1C8D2D054(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1C8D2BC6C(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1C8D2D06C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1C8D2C510(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1C8D2D084(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *a1;
  uint64_t v7 = *v3;
  uint64_t result = sub_1C8D3D70C((uint64_t)&v7, a2, a3, v5);
  if (!v4) {
    *uint64_t v3 = v7;
  }
  return result;
}

uint64_t sub_1C8D2D0C0(uint64_t a1, unint64_t a2)
{
  return sub_1C8D2A2BC(a1, a2);
}

unint64_t sub_1C8D2D0D8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *v4;
  *uint64_t v8 = 4107;
  *uint64_t v4 = v8 + 1;
  sub_1C8CAB02C(a2);
  uint64_t v9 = *v4;
  *uint64_t v9 = 26;
  *uint64_t v4 = v9 + 1;
  unint64_t result = sub_1C8CA7A1C(a3, a4);
  if (!v5)
  {
    sub_1C8CAB02C(result);
    uint64_t v12 = *v4;
    unint64_t result = (*(uint64_t (**)(unsigned char **, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(a4 + 72))(&v12, &type metadata for BinaryEncodingVisitor, &off_1F2355030, a3, a4);
    int v11 = v12;
    *uint64_t v12 = 12;
    *uint64_t v4 = v11 + 1;
  }
  return result;
}

unint64_t sub_1C8D2D1C8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8D2D0D8(a1, a2, a3, a4);
}

ValueMetadata *type metadata accessor for BinaryEncodingVisitor.BinaryEncodingMessageSetVisitor()
{
  return &type metadata for BinaryEncodingVisitor.BinaryEncodingMessageSetVisitor;
}

unint64_t sub_1C8D2D1F0(uint64_t a1)
{
  if (a1 % 86400 >= 0) {
    uint64_t v1 = a1 % 86400;
  }
  else {
    uint64_t v1 = (a1 % 86400) + 86400;
  }
  int v2 = (int)sub_1C8D431A4(v1, 60) % 60;
  if (v2 >= 0) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = (v2 + 60);
  }
  return sub_1C8D431A4(v1, 3600) | (unint64_t)(v3 << 32);
}

int64_t sub_1C8D2D2AC(int64_t result)
{
  int64_t v1 = result + 0x3118A41200;
  if (__OFADD__(result, 0x3118A41200))
  {
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  unint64_t v2 = v1 / 0x15180uLL;
  BOOL v3 = v1 >= 0;
  unint64_t v4 = ~v1 / 0x15180uLL;
  if (v3) {
    unint64_t v5 = v2;
  }
  else {
    unint64_t v5 = ~v4;
  }
  uint64_t v6 = sub_1C8D431D0(4 * v5 + 274277, 146097);
  uint64_t v7 = (unsigned __int128)(v6 * (__int128)3) >> 64;
  unint64_t result = 3 * v6;
  if (v7 != result >> 63) {
    goto LABEL_31;
  }
  unint64_t v8 = v5 + 1401;
  unint64_t result = sub_1C8D431D0(result, 4);
  unint64_t v9 = v8 + result;
  if (__OFADD__(v8, result))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  BOOL v10 = __OFSUB__(v9, 38);
  unint64_t v11 = v9 - 38;
  if (v10)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if ((v11 - 0x2000000000000000) >> 62 != 3)
  {
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v12 = (4 * v11) | 3;
  if (v12 % 1461 >= 0) {
    uint64_t v13 = v12 % 1461;
  }
  else {
    uint64_t v13 = v12 % 1461 + 1461;
  }
  unint64_t result = sub_1C8D431D0(v13, 4);
  uint64_t v14 = 5 * result;
  if ((unsigned __int128)(result * (__int128)5) >> 64 != (5 * result) >> 63) {
    goto LABEL_35;
  }
  uint64_t v15 = v14 + 2;
  uint64_t v16 = (unsigned __int128)((v14 + 2) * (__int128)0x358AE0358AE0358BLL) >> 64;
  uint64_t v17 = v15 - 153 * ((v16 >> 5) + ((unint64_t)v16 >> 63));
  if (v17 >= 0) {
    uint64_t v18 = v17;
  }
  else {
    uint64_t v18 = v17 + 153;
  }
  unint64_t result = sub_1C8D431D0(v18, 5);
  uint64_t v19 = result + 1;
  if (__OFADD__(result, 1)) {
    goto LABEL_36;
  }
  unint64_t result = sub_1C8D431D0(v15, 153);
  if (__OFADD__(result, 2))
  {
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v20 = (result + 2) % 12;
  if (v20 >= 0) {
    uint64_t v21 = (result + 2) % 12;
  }
  else {
    uint64_t v21 = v20 + 12;
  }
  unint64_t result = sub_1C8D431D0(v12, 1461);
  int64_t v22 = result - 4716;
  if (__OFADD__(result, -4716)) {
    goto LABEL_38;
  }
  unint64_t result = sub_1C8D431D0(13 - v21, 12);
  uint64_t v23 = v22 + result;
  if (__OFADD__(v22, result))
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  if (v23 > 0x7FFFFFFF)
  {
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (v19 < (uint64_t)0xFFFFFFFF80000000 || v23 < (uint64_t)0xFFFFFFFF80000000) {
    goto LABEL_41;
  }
  if (v19 <= 0x7FFFFFFF) {
    return ((v22 + result) | ((unint64_t)v21 << 32)) + 0x100000000;
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t destroy for TextFormatEncodingVisitor(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 16))
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TextFormatEncodingVisitor(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v6 = (_OWORD *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5)
  {
    uint64_t v7 = *(void *)(a2 + 24);
    uint64_t v8 = *(void *)(a2 + 32);
    *(void *)(a1 + 16) = v5;
    *(void *)(a1 + 24) = v7;
    uint64_t v9 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = v8;
    *(void *)(a1 + 40) = v9;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v10 = v6[1];
    *(_OWORD *)(a1 + 16) = *v6;
    *(_OWORD *)(a1 + 32) = v10;
  }
  uint64_t v11 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TextFormatEncodingVisitor(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 16);
  uint64_t v6 = (_OWORD *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 16);
  if (*(void *)(a1 + 16))
  {
    if (v5)
    {
      *(void *)(a1 + 16) = v5;
      swift_retain();
      swift_release();
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C8D2D768(a1 + 16);
      long long v7 = *(_OWORD *)(a2 + 32);
      *uint64_t v4 = *v6;
      *(_OWORD *)(a1 + 32) = v7;
    }
  }
  else if (v5)
  {
    *(void *)(a1 + 16) = v5;
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 32);
    *uint64_t v4 = *v6;
    *(_OWORD *)(a1 + 32) = v8;
  }
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t sub_1C8D2D768(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for TextFormatEncodingVisitor(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  if (!*(void *)(a1 + 16)) {
    goto LABEL_5;
  }
  if (!v4)
  {
    sub_1C8D2D768(a1 + 16);
LABEL_5:
    long long v5 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v5;
    goto LABEL_6;
  }
  *(void *)(a1 + 16) = v4;
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
LABEL_6:
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for TextFormatEncodingVisitor(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 65)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TextFormatEncodingVisitor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 65) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextFormatEncodingVisitor()
{
  return &type metadata for TextFormatEncodingVisitor;
}

uint64_t sub_1C8D2D968(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  unint64_t v3 = a3 >> 62;
  switch(a3 >> 62)
  {
    case 1uLL:
      if ((int)a2 != a2 >> 32) {
        goto LABEL_7;
      }
      break;
    case 2uLL:
      if (*(void *)(a2 + 16) != *(void *)(a2 + 24)) {
        goto LABEL_7;
      }
      break;
    case 3uLL:
      return result;
    default:
      if ((a3 & 0xFF000000000000) != 0)
      {
LABEL_7:
        if (*(unsigned char *)(result + 64) == 1)
        {
          if (v3)
          {
            if (v3 == 1)
            {
              if (a2 >> 32 < (int)a2) {
                __break(1u);
              }
              swift_retain();
              sub_1C8D324E8((int)a2, a2 >> 32);
              __n128 result = sub_1C8CA3D5C(a2, a3);
            }
            else
            {
              uint64_t v6 = *(void *)(a2 + 16);
              uint64_t v7 = *(void *)(a2 + 24);
              swift_retain();
              swift_retain();
              sub_1C8D324E8(v6, v7);
              swift_release();
              __n128 result = swift_release();
            }
          }
          else
          {
            uint64_t v8 = a2;
            __int16 v9 = a3;
            char v10 = BYTE2(a3);
            char v11 = BYTE3(a3);
            char v12 = BYTE4(a3);
            char v13 = BYTE5(a3);
            __n128 result = sub_1C8D2DDF4((uint64_t)&v8, (uint64_t)&v8 + BYTE6(a3));
          }
        }
      }
      break;
  }
  return result;
}

unint64_t sub_1C8D2DB74()
{
  unint64_t result = sub_1C8D840C8((uint64_t)&unk_1F234FED0);
  qword_1EA567228 = result;
  return result;
}

uint64_t sub_1C8D2DB9C(uint64_t result, unint64_t a2)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  if (*(unsigned char *)(v2 + 64) == 1)
  {
    uint64_t v4 = result;
    switch(a2 >> 62)
    {
      case 1uLL:
        if (result >> 32 < (int)result) {
          __break(1u);
        }
        swift_retain();
        sub_1C8D324E8((int)v4, v4 >> 32);
        unint64_t result = sub_1C8CA3D5C(v4, a2);
        break;
      case 2uLL:
        uint64_t v5 = *(void *)(result + 16);
        uint64_t v6 = *(void *)(result + 24);
        swift_retain();
        swift_retain();
        sub_1C8D324E8(v5, v6);
        swift_release();
        unint64_t result = swift_release();
        break;
      case 3uLL:
        return result;
      default:
        uint64_t v7 = result;
        __int16 v8 = a2;
        char v9 = BYTE2(a2);
        char v10 = BYTE3(a2);
        char v11 = BYTE4(a2);
        char v12 = BYTE5(a2);
        if (BYTE6(a2))
        {
          uint64_t v21 = 0;
          memset(v20, 0, sizeof(v20));
          *(_WORD *)uint64_t v15 = 1;
          memset(&v15[8], 0, 56);
          LOBYTE(v16) = 1;
          long long v18 = xmmword_1C8D8BEE0;
          long long v19 = xmmword_1C8D8BEE0;
          *(void *)&long long v13 = &v7;
          *((void *)&v13 + 1) = BYTE6(a2);
          long long v14 = (unint64_t)&v7;
          sub_1C8CA8840((uint64_t)v20, (uint64_t)&v15[16]);
          *((void *)&v16 + 1) = 100;
          LOBYTE(v17) = 0;
          *((void *)&v17 + 1) = 100;
          v22[8] = v18;
          v22[9] = v19;
          v22[2] = *(_OWORD *)v15;
          v22[3] = *(_OWORD *)&v15[16];
          v22[4] = *(_OWORD *)&v15[32];
          v22[5] = *(_OWORD *)&v15[48];
          v22[0] = v13;
          v22[1] = v14;
          v22[6] = v16;
          v22[7] = v17;
          sub_1C8D328F8((unint64_t)v22);
          unint64_t result = sub_1C8CA9498((uint64_t)v22);
        }
        break;
    }
  }
  return result;
}

uint64_t sub_1C8D2DDF4(uint64_t result, uint64_t a2)
{
  if (result)
  {
    if (a2 - result >= 1)
    {
      uint64_t v10 = 0;
      memset(v9, 0, sizeof(v9));
      *(_WORD *)uint64_t v4 = 1;
      memset(&v4[8], 0, 56);
      LOBYTE(v5) = 1;
      long long v7 = xmmword_1C8D8BEE0;
      long long v8 = xmmword_1C8D8BEE0;
      *(void *)&long long v2 = result;
      *((void *)&v2 + 1) = a2 - result;
      long long v3 = (unint64_t)result;
      sub_1C8CA8840((uint64_t)v9, (uint64_t)&v4[16]);
      *((void *)&v5 + 1) = 100;
      LOBYTE(v6) = 0;
      *((void *)&v6 + 1) = 100;
      _OWORD v11[8] = v7;
      v11[9] = v8;
      long long v11[2] = *(_OWORD *)v4;
      v11[3] = *(_OWORD *)&v4[16];
      void v11[4] = *(_OWORD *)&v4[32];
      v11[5] = *(_OWORD *)&v4[48];
      v11[0] = v2;
      v11[1] = v3;
      v11[6] = v5;
      v11[7] = v6;
      sub_1C8D328F8((unint64_t)v11);
      return sub_1C8CA9498((uint64_t)v11);
    }
  }
  return result;
}

uint64_t sub_1C8D2DED8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, char **a5)
{
  if (result)
  {
    uint64_t v6 = result;
    uint64_t v7 = a2 - result;
    if (a2 - result >= 1)
    {
      uint64_t v63 = a5;
      sub_1C8CA92A4(a3, (uint64_t)v53);
      uint64_t v10 = *((void *)&v55 + 1);
      char v11 = v56;
      sub_1C8CA87D8((uint64_t)v54, (uint64_t)&v38);
      *(_WORD *)unint64_t v48 = 1;
      memset(&v48[8], 0, 56);
      LOBYTE(v49) = 1;
      long long v51 = xmmword_1C8D8BEE0;
      long long v52 = xmmword_1C8D8BEE0;
      *(void *)&long long v46 = v6;
      *((void *)&v46 + 1) = v7;
      long long v47 = (unint64_t)v6;
      sub_1C8CA8840((uint64_t)&v38, (uint64_t)&v48[16]);
      *((void *)&v49 + 1) = v10;
      LOBYTE(v50) = v11;
      *((void *)&v50 + 1) = v10;
      char v12 = a4;
      long long v61 = v51;
      long long v62 = v52;
      v59[2] = *(_OWORD *)v48;
      v59[3] = *(_OWORD *)&v48[16];
      v59[4] = *(_OWORD *)&v48[32];
      v59[5] = *(_OWORD *)&v48[48];
      v59[0] = v46;
      v59[1] = v47;
      v59[6] = v49;
      long long v60 = v50;
      uint64_t v13 = *((void *)&v56 + 1);
      sub_1C8CA9498((uint64_t)v53);
      *((void *)&v60 + 1) = v13;
      while (1)
      {
        sub_1C8CA8B34();
        if (v5) {
          break;
        }
        if (v14)
        {
          uint64_t v16 = *a4;
          unint64_t v17 = a4[1];
          uint64_t v18 = 0;
          switch(v17 >> 62)
          {
            case 1uLL:
              BOOL v20 = __OFSUB__(HIDWORD(v16), v16);
              int v21 = HIDWORD(v16) - v16;
              if (v20)
              {
                __break(1u);
LABEL_21:
                __break(1u);
                JUMPOUT(0x1C8D2E284);
              }
              uint64_t v18 = v21;
LABEL_12:
              sub_1C8CA92A4(a3, (uint64_t)&v46);
              uint64_t v25 = *((void *)&v49 + 1);
              char v26 = v50;
              sub_1C8CA87D8((uint64_t)&v48[16], (uint64_t)v45);
              *(_WORD *)unint64_t v40 = 1;
              memset(&v40[8], 0, 56);
              LOBYTE(v41) = 1;
              long long v43 = xmmword_1C8D8BEE0;
              long long v44 = xmmword_1C8D8BEE0;
              *(void *)&long long v38 = v6;
              *((void *)&v38 + 1) = v18;
              long long v39 = (unint64_t)v6;
              sub_1C8CA8840((uint64_t)v45, (uint64_t)&v40[16]);
              *((void *)&v41 + 1) = v25;
              LOBYTE(v42) = v26;
              *((void *)&v42 + 1) = v25;
              long long v57 = v43;
              long long v58 = v44;
              v53[2] = *(_OWORD *)v40;
              v54[0] = *(_OWORD *)&v40[16];
              v54[1] = *(_OWORD *)&v40[32];
              v54[2] = *(_OWORD *)&v40[48];
              v53[0] = v38;
              v53[1] = v39;
              long long v55 = v41;
              long long v56 = v42;
              uint64_t v27 = *((void *)&v50 + 1);
              sub_1C8CA9498((uint64_t)&v46);
              *((void *)&v56 + 1) = v27;
              uint64_t v28 = v63;
              sub_1C8CA6B04(v29);
              sub_1C8D328F8(v53);
              sub_1C8CA7498(*((void *)v28[1] + 2) - 1);
              sub_1C8CA7498(*((void *)v28[1] + 2) - 1);
              uint64_t v36 = swift_bridgeObjectRetain();
              sub_1C8CA67D4(v36);
              sub_1C8CA6060((uint64_t)"}\n", 2, v37);
              sub_1C8CA9498((uint64_t)v53);
              break;
            case 2uLL:
              uint64_t v24 = v16 + 16;
              uint64_t v22 = *(void *)(v16 + 16);
              uint64_t v23 = *(void *)(v24 + 8);
              uint64_t v18 = v23 - v22;
              if (!__OFSUB__(v23, v22)) {
                goto LABEL_12;
              }
              goto LABEL_21;
            case 3uLL:
              goto LABEL_12;
            default:
              uint64_t v18 = BYTE6(v17);
              goto LABEL_12;
          }
          return sub_1C8CA9498((uint64_t)v59);
        }
      }
      long long v19 = v63;
      sub_1C8CA6060((uint64_t)": ", 2, v15);
      uint64_t v31 = *v12;
      unint64_t v30 = v12[1];
      sub_1C8CA3CF8(*v12, v30);
      sub_1C8D5C358(v31, v30);
      sub_1C8CA3D5C(v31, v30);
      uint64_t v32 = *v19;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *long long v19 = v32;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v32 = sub_1C8D5EB50(0, *((void *)v32 + 2) + 1, 1, v32);
        *long long v19 = v32;
      }
      unint64_t v35 = *((void *)v32 + 2);
      unint64_t v34 = *((void *)v32 + 3);
      if (v35 >= v34 >> 1) {
        uint64_t v32 = sub_1C8D5EB50((char *)(v34 > 1), v35 + 1, 1, v32);
      }
      *((void *)v32 + 2) = v35 + 1;
      v32[v35 + 32] = 10;
      *long long v19 = v32;
      MEMORY[0x1CB7736A0](v5);
      return sub_1C8CA9498((uint64_t)v59);
    }
  }
  return result;
}

uint64_t sub_1C8D2E294(unint64_t a1, float a2)
{
  sub_1C8CA5968(a1);
  sub_1C8CA6060((uint64_t)": ", 2, v4);
  sub_1C8D5C610(a2);
  uint64_t v5 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v2 = v5;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50(0, *(void *)(v5 + 16) + 1, 1, (char *)v5);
    uint64_t v5 = result;
    uint64_t *v2 = result;
  }
  unint64_t v8 = *(void *)(v5 + 16);
  unint64_t v7 = *(void *)(v5 + 24);
  if (v8 >= v7 >> 1)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v7 > 1), v8 + 1, 1, (char *)v5);
    uint64_t v5 = result;
  }
  *(void *)(v5 + 16) = v8 + 1;
  *(unsigned char *)(v5 + v8 + 32) = 10;
  uint64_t *v2 = v5;
  return result;
}

uint64_t sub_1C8D2E364(unint64_t a1, double a2)
{
  sub_1C8CA5968(a1);
  sub_1C8CA6060((uint64_t)": ", 2, v4);
  sub_1C8D5C698(a2);
  uint64_t v5 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v2 = v5;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50(0, *(void *)(v5 + 16) + 1, 1, (char *)v5);
    uint64_t v5 = result;
    uint64_t *v2 = result;
  }
  unint64_t v8 = *(void *)(v5 + 16);
  unint64_t v7 = *(void *)(v5 + 24);
  if (v8 >= v7 >> 1)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v7 > 1), v8 + 1, 1, (char *)v5);
    uint64_t v5 = result;
  }
  *(void *)(v5 + 16) = v8 + 1;
  *(unsigned char *)(v5 + v8 + 32) = 10;
  uint64_t *v2 = v5;
  return result;
}

uint64_t sub_1C8D2E434(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C8CA5968(a2);
  sub_1C8CA6060((uint64_t)": ", 2, v8);
  sub_1C8D5C854(a1, a3, a4);
  uint64_t v9 = *v4;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v4 = v9;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50(0, *(void *)(v9 + 16) + 1, 1, (char *)v9);
    uint64_t v9 = result;
    *uint64_t v4 = result;
  }
  unint64_t v12 = *(void *)(v9 + 16);
  unint64_t v11 = *(void *)(v9 + 24);
  if (v12 >= v11 >> 1)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v11 > 1), v12 + 1, 1, (char *)v9);
    uint64_t v9 = result;
  }
  *(void *)(v9 + 16) = v12 + 1;
  *(unsigned char *)(v9 + v12 + 32) = 10;
  *uint64_t v4 = v9;
  return result;
}

uint64_t sub_1C8D2E510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1, a2);
  unint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C8CA5968(v12);
  sub_1C8CA6B04(v13);
  v30[3] = a3;
  v30[4] = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v30);
  uint64_t v15 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v9 + 16);
  v15(boxed_opaque_existential_1, a1, a3);
  uint64_t v16 = *v4;
  uint64_t v17 = v4[1];
  char v32 = *((unsigned char *)v5 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8CA42C0((uint64_t)v30, v16, v17, &v32, (uint64_t)v31);
  v15((uint64_t *)v11, a1, a3);
  if (swift_dynamicCast())
  {
    uint64_t v18 = v30[0];
    unint64_t v19 = v30[1];
    sub_1C8D634A0(v31);
    sub_1C8CA3CF8(v18, v19);
    uint64_t v20 = v29;
    sub_1C8D2D968((uint64_t)v31, v18, v19);
    if (!v20)
    {
      sub_1C8CA3D5C(v18, v19);
      sub_1C8CA3D5C(v18, v19);
      swift_release();
LABEL_5:
      uint64_t v22 = v31[0];
      uint64_t v23 = v31[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *uint64_t v5 = (uint64_t)v22;
      v5[1] = (uint64_t)v23;
      sub_1C8CA7498(*((void *)v23 + 2) - 1);
      sub_1C8CA7498(*(void *)(v5[1] + 16) - 1);
      uint64_t v24 = swift_bridgeObjectRetain();
      sub_1C8CA67D4(v24);
      sub_1C8CA6060((uint64_t)"}\n", 2, v25);
      char v26 = v31[2];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C8CA469C((uint64_t)v26);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    sub_1C8CA3D5C(v18, v19);
    swift_unexpectedError();
    __break(1u);
  }
  else
  {
    uint64_t v21 = v29;
    (*(void (**)(char **, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(a4 + 72))(v31, &type metadata for TextFormatEncodingVisitor, &off_1F23554E0, a3, a4);
    if (!v21) {
      goto LABEL_5;
    }
  }
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1C8D2E810(uint64_t result, unint64_t a2)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v5 = result;
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
    while (1)
    {
      float v7 = *(float *)(v5 + 4 * v6 + 32);
      sub_1C8CA5968(a2);
      sub_1C8CA6060((uint64_t)": ", 2, v8);
      if ((~LODWORD(v7) & 0x7F800000) == 0) {
        break;
      }
      uint64_t v10 = sub_1C8D88590();
      sub_1C8CA69C8(v10, v11);
LABEL_12:
      uint64_t v13 = *v2;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t *v2 = v13;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v13 = sub_1C8D5EB50(0, *((void *)v13 + 2) + 1, 1, v13);
        uint64_t *v2 = v13;
      }
      unint64_t v16 = *((void *)v13 + 2);
      unint64_t v15 = *((void *)v13 + 3);
      if (v16 >= v15 >> 1) {
        uint64_t v13 = sub_1C8D5EB50((char *)(v15 > 1), v16 + 1, 1, v13);
      }
      ++v6;
      *((void *)v13 + 2) = v16 + 1;
      v13[v16 + 32] = 10;
      uint64_t *v2 = v13;
      if (v3 == v6) {
        return swift_bridgeObjectRelease();
      }
    }
    if ((LODWORD(v7) & 0x7FFFFF) != 0)
    {
      uint64_t v9 = "nan";
    }
    else
    {
      if (v7 < 0.0)
      {
        uint64_t v9 = "-inf";
        uint64_t v12 = 4;
LABEL_11:
        sub_1C8CA6060((uint64_t)v9, v12, (unsigned __int8 *)LODWORD(v7));
        goto LABEL_12;
      }
      uint64_t v9 = "inf";
    }
    uint64_t v12 = 3;
    goto LABEL_11;
  }
  return result;
}

uint64_t sub_1C8D2E97C(uint64_t result, unint64_t a2)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v5 = result;
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
    while (1)
    {
      double v7 = *(double *)(v5 + 8 * v6 + 32);
      sub_1C8CA5968(a2);
      sub_1C8CA6060((uint64_t)": ", 2, v8);
      if ((~*(void *)&v7 & 0x7FF0000000000000) == 0) {
        break;
      }
      uint64_t v10 = sub_1C8D88580();
      sub_1C8CA69C8(v10, v11);
LABEL_12:
      uint64_t v13 = *v2;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t *v2 = v13;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v13 = sub_1C8D5EB50(0, *((void *)v13 + 2) + 1, 1, v13);
        uint64_t *v2 = v13;
      }
      unint64_t v16 = *((void *)v13 + 2);
      unint64_t v15 = *((void *)v13 + 3);
      if (v16 >= v15 >> 1) {
        uint64_t v13 = sub_1C8D5EB50((char *)(v15 > 1), v16 + 1, 1, v13);
      }
      ++v6;
      *((void *)v13 + 2) = v16 + 1;
      v13[v16 + 32] = 10;
      uint64_t *v2 = v13;
      if (v3 == v6) {
        return swift_bridgeObjectRelease();
      }
    }
    if ((*(void *)&v7 & 0xFFFFFFFFFFFFFLL) != 0)
    {
      uint64_t v9 = "nan";
    }
    else
    {
      if (v7 < 0.0)
      {
        uint64_t v9 = "-inf";
        uint64_t v12 = 4;
LABEL_11:
        sub_1C8CA6060((uint64_t)v9, v12, *(unsigned __int8 **)&v7);
        goto LABEL_12;
      }
      uint64_t v9 = "inf";
    }
    uint64_t v12 = 3;
    goto LABEL_11;
  }
  return result;
}

uint64_t sub_1C8D2EAE8(uint64_t result, unint64_t a2)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v5 = result;
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
    do
    {
      unint64_t v7 = *(int *)(v5 + 4 * v6 + 32);
      sub_1C8CA5968(a2);
      sub_1C8CA6060((uint64_t)": ", 2, v8);
      if ((v7 & 0x80000000) != 0)
      {
        uint64_t v9 = *v2;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t *v2 = v9;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v9 = sub_1C8D5EB50(0, *((void *)v9 + 2) + 1, 1, v9);
          uint64_t *v2 = v9;
        }
        unint64_t v12 = *((void *)v9 + 2);
        unint64_t v11 = *((void *)v9 + 3);
        if (v12 >= v11 >> 1) {
          uint64_t v9 = sub_1C8D5EB50((char *)(v11 > 1), v12 + 1, 1, v9);
        }
        *((void *)v9 + 2) = v12 + 1;
        v9[v12 + 32] = 45;
        uint64_t *v2 = v9;
        unint64_t v7 = -(uint64_t)v7;
      }
      sub_1C8D5C98C(v7);
      uint64_t v13 = *v2;
      char v14 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t *v2 = v13;
      if ((v14 & 1) == 0)
      {
        uint64_t v13 = sub_1C8D5EB50(0, *((void *)v13 + 2) + 1, 1, v13);
        uint64_t *v2 = v13;
      }
      unint64_t v16 = *((void *)v13 + 2);
      unint64_t v15 = *((void *)v13 + 3);
      if (v16 >= v15 >> 1) {
        uint64_t v13 = sub_1C8D5EB50((char *)(v15 > 1), v16 + 1, 1, v13);
      }
      ++v6;
      *((void *)v13 + 2) = v16 + 1;
      v13[v16 + 32] = 10;
      uint64_t *v2 = v13;
    }
    while (v3 != v6);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C8D2EC88(uint64_t result, unint64_t a2)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v5 = result;
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
    do
    {
      unint64_t v7 = *(void *)(v5 + 8 * v6 + 32);
      sub_1C8CA5968(a2);
      sub_1C8CA6060((uint64_t)": ", 2, v8);
      if ((v7 & 0x8000000000000000) != 0)
      {
        uint64_t v9 = *v2;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t *v2 = v9;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v9 = sub_1C8D5EB50(0, *((void *)v9 + 2) + 1, 1, v9);
          uint64_t *v2 = v9;
        }
        unint64_t v12 = *((void *)v9 + 2);
        unint64_t v11 = *((void *)v9 + 3);
        if (v12 >= v11 >> 1) {
          uint64_t v9 = sub_1C8D5EB50((char *)(v11 > 1), v12 + 1, 1, v9);
        }
        *((void *)v9 + 2) = v12 + 1;
        v9[v12 + 32] = 45;
        uint64_t *v2 = v9;
        unint64_t v7 = -(uint64_t)v7;
      }
      sub_1C8D5C98C(v7);
      uint64_t v13 = *v2;
      char v14 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t *v2 = v13;
      if ((v14 & 1) == 0)
      {
        uint64_t v13 = sub_1C8D5EB50(0, *((void *)v13 + 2) + 1, 1, v13);
        uint64_t *v2 = v13;
      }
      unint64_t v16 = *((void *)v13 + 2);
      unint64_t v15 = *((void *)v13 + 3);
      if (v16 >= v15 >> 1) {
        uint64_t v13 = sub_1C8D5EB50((char *)(v15 > 1), v16 + 1, 1, v13);
      }
      ++v6;
      *((void *)v13 + 2) = v16 + 1;
      v13[v16 + 32] = 10;
      uint64_t *v2 = v13;
    }
    while (v3 != v6);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C8D2EE28(uint64_t result, unint64_t a2)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v5 = result;
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
    do
    {
      unint64_t v7 = *(unsigned int *)(v5 + 4 * v6 + 32);
      sub_1C8CA5968(a2);
      sub_1C8CA6060((uint64_t)": ", 2, v8);
      sub_1C8D5C98C(v7);
      uint64_t v9 = *v2;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t *v2 = v9;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v9 = sub_1C8D5EB50(0, *((void *)v9 + 2) + 1, 1, v9);
        uint64_t *v2 = v9;
      }
      unint64_t v12 = *((void *)v9 + 2);
      unint64_t v11 = *((void *)v9 + 3);
      if (v12 >= v11 >> 1) {
        uint64_t v9 = sub_1C8D5EB50((char *)(v11 > 1), v12 + 1, 1, v9);
      }
      ++v6;
      *((void *)v9 + 2) = v12 + 1;
      v9[v12 + 32] = 10;
      uint64_t *v2 = v9;
    }
    while (v3 != v6);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C8D2EF40(uint64_t result, unint64_t a2)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v5 = result;
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
    do
    {
      unint64_t v7 = *(void *)(v5 + 8 * v6 + 32);
      sub_1C8CA5968(a2);
      sub_1C8CA6060((uint64_t)": ", 2, v8);
      sub_1C8D5C98C(v7);
      uint64_t v9 = *v2;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t *v2 = v9;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v9 = sub_1C8D5EB50(0, *((void *)v9 + 2) + 1, 1, v9);
        uint64_t *v2 = v9;
      }
      unint64_t v12 = *((void *)v9 + 2);
      unint64_t v11 = *((void *)v9 + 3);
      if (v12 >= v11 >> 1) {
        uint64_t v9 = sub_1C8D5EB50((char *)(v11 > 1), v12 + 1, 1, v9);
      }
      ++v6;
      *((void *)v9 + 2) = v12 + 1;
      v9[v12 + 32] = 10;
      uint64_t *v2 = v9;
    }
    while (v3 != v6);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C8D2F058(uint64_t result, unint64_t a2)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v5 = result;
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
    do
    {
      int v7 = *(unsigned __int8 *)(v5 + v6 + 32);
      sub_1C8CA5968(a2);
      sub_1C8CA6060((uint64_t)": ", 2, v8);
      if (v7) {
        uint64_t v9 = "true";
      }
      else {
        uint64_t v9 = "false";
      }
      if (v7) {
        uint64_t v10 = 4;
      }
      else {
        uint64_t v10 = 5;
      }
      sub_1C8CA6060((uint64_t)v9, v10, (unsigned __int8 *)4);
      unint64_t v11 = *v2;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t *v2 = v11;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v11 = sub_1C8D5EB50(0, *((void *)v11 + 2) + 1, 1, v11);
        uint64_t *v2 = v11;
      }
      unint64_t v14 = *((void *)v11 + 2);
      unint64_t v13 = *((void *)v11 + 3);
      if (v14 >= v13 >> 1) {
        unint64_t v11 = sub_1C8D5EB50((char *)(v13 > 1), v14 + 1, 1, v11);
      }
      ++v6;
      *((void *)v11 + 2) = v14 + 1;
      v11[v14 + 32] = 10;
      uint64_t *v2 = v11;
    }
    while (v3 != v6);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C8D2F18C(uint64_t result, unint64_t a2)
{
  v43[2] = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v4 = v2;
    uint64_t v5 = (unint64_t *)(swift_bridgeObjectRetain() + 40);
    do
    {
      uint64_t v6 = *(v5 - 1);
      unint64_t v7 = *v5;
      sub_1C8CA3CF8(v6, *v5);
      sub_1C8CA5968(a2);
      sub_1C8CA6060((uint64_t)": ", 2, v8);
      uint64_t v9 = (char *)*v4;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v4 = (uint64_t)v9;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v9 = sub_1C8D5EB50(0, *((void *)v9 + 2) + 1, 1, v9);
        *uint64_t v4 = (uint64_t)v9;
      }
      unint64_t v12 = *((void *)v9 + 2);
      unint64_t v11 = *((void *)v9 + 3);
      if (v12 >= v11 >> 1) {
        uint64_t v9 = sub_1C8D5EB50((char *)(v11 > 1), v12 + 1, 1, v9);
      }
      unint64_t v13 = (unsigned __int8 *)(v7 >> 62);
      v5 += 2;
      *((void *)v9 + 2) = v12 + 1;
      v9[v12 + 32] = 34;
      *uint64_t v4 = (uint64_t)v9;
      switch(v7 >> 62)
      {
        case 1uLL:
          if (v6 >> 32 < (int)v6)
          {
            __break(1u);
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
          }
          sub_1C8CA3CF8(v6, v7);
          uint64_t v24 = sub_1C8D88110();
          if (v24)
          {
            uint64_t v25 = sub_1C8D88140();
            if (__OFSUB__((int)v6, v25)) {
              goto LABEL_49;
            }
            v24 += (int)v6 - v25;
          }
          uint64_t v26 = sub_1C8D88130();
          if (v26 >= (v6 >> 32) - (int)v6) {
            uint64_t v27 = (v6 >> 32) - (int)v6;
          }
          else {
            uint64_t v27 = v26;
          }
          uint64_t v28 = (unsigned __int8 *)(v24 + v27);
          if (v24) {
            uint64_t v29 = (uint64_t)v28;
          }
          else {
            uint64_t v29 = 0;
          }
          sub_1C8D5CCE4(v24, v29, v4, v28);
          if (v42)
          {
            sub_1C8CA3D5C(v6, v7);
            __break(1u);
LABEL_51:
            swift_release();
            swift_release();
            __break(1u);
            JUMPOUT(0x1C8D2F5B8);
          }
          sub_1C8CA3D5C(v6, v7);
          break;
        case 2uLL:
          uint64_t v15 = *(void *)(v6 + 16);
          uint64_t v16 = *(void *)(v6 + 24);
          swift_retain();
          swift_retain();
          uint64_t v17 = sub_1C8D88110();
          if (v17)
          {
            uint64_t v18 = v17;
            uint64_t v19 = sub_1C8D88140();
            if (__OFSUB__(v15, v19)) {
              goto LABEL_48;
            }
            uint64_t v20 = v16;
            uint64_t v21 = v18 + v15 - v19;
            BOOL v22 = __OFSUB__(v20, v15);
            uint64_t v23 = v20 - v15;
            if (v22) {
              goto LABEL_47;
            }
          }
          else
          {
            uint64_t v30 = v16;
            uint64_t v21 = 0;
            BOOL v22 = __OFSUB__(v30, v15);
            uint64_t v23 = v30 - v15;
            if (v22) {
              goto LABEL_47;
            }
          }
          uint64_t v31 = sub_1C8D88130();
          if (v31 >= v23) {
            uint64_t v32 = v23;
          }
          else {
            uint64_t v32 = v31;
          }
          uint64_t v33 = (unsigned __int8 *)(v21 + v32);
          if (v21) {
            uint64_t v34 = (uint64_t)v33;
          }
          else {
            uint64_t v34 = 0;
          }
          sub_1C8D5CCE4(v21, v34, v4, v33);
          if (v42) {
            goto LABEL_51;
          }
          swift_release();
          swift_release();
          break;
        case 3uLL:
          memset(v43, 0, 14);
          unint64_t v14 = (char *)v43;
          goto LABEL_15;
        default:
          v43[0] = v6;
          LOWORD(v43[1]) = v7;
          BYTE2(v43[1]) = BYTE2(v7);
          BYTE3(v43[1]) = BYTE3(v7);
          BYTE4(v43[1]) = BYTE4(v7);
          BYTE5(v43[1]) = BYTE5(v7);
          unint64_t v13 = (unsigned __int8 *)v43;
          unint64_t v14 = (char *)v43 + BYTE6(v7);
LABEL_15:
          sub_1C8D5CCE4((uint64_t)v43, (uint64_t)v14, v4, v13);
          break;
      }
      uint64_t v35 = *v4;
      char v36 = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v4 = v35;
      if ((v36 & 1) == 0)
      {
        uint64_t v35 = (uint64_t)sub_1C8D5EB50(0, *(void *)(v35 + 16) + 1, 1, (char *)v35);
        *uint64_t v4 = v35;
      }
      unint64_t v38 = *(void *)(v35 + 16);
      unint64_t v37 = *(void *)(v35 + 24);
      unint64_t v39 = v38 + 1;
      if (v38 >= v37 >> 1) {
        uint64_t v35 = (uint64_t)sub_1C8D5EB50((char *)(v37 > 1), v38 + 1, 1, (char *)v35);
      }
      *(void *)(v35 + 16) = v39;
      *(unsigned char *)(v35 + v38 + 32) = 34;
      *uint64_t v4 = v35;
      unint64_t v40 = *(void *)(v35 + 24);
      if ((uint64_t)(v38 + 2) > (uint64_t)(v40 >> 1))
      {
        uint64_t v35 = (uint64_t)sub_1C8D5EB50((char *)(v40 > 1), v38 + 2, 1, (char *)v35);
        *uint64_t v4 = v35;
      }
      *(void *)(v35 + 16) = v38 + 2;
      *(unsigned char *)(v35 + v39 + 32) = 10;
      sub_1C8CA3D5C(v6, v7);
      *uint64_t v4 = v35;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C8D2F5C8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v25 = a2;
  uint64_t v26 = a4;
  uint64_t v7 = *(void *)(a3 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](a1, a2);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = swift_bridgeObjectRetain();
  if (!MEMORY[0x1CB773090](v10, a3)) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v21 = v8;
  uint64_t v11 = 0;
  uint64_t v23 = v7;
  uint64_t v24 = (void (**)(char *, uint64_t *, uint64_t))(v7 + 16);
  BOOL v22 = (void (**)(char *, uint64_t))(v7 + 8);
  while (1)
  {
    char v12 = sub_1C8D88510();
    sub_1C8D884D0();
    if ((v12 & 1) == 0) {
      break;
    }
    uint64_t result = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v7 + 16))(v9, a1+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v11, a3);
    uint64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_17;
    }
LABEL_5:
    sub_1C8CA5968(v25);
    sub_1C8CA6060((uint64_t)": ", 2, v15);
    sub_1C8D5C854((uint64_t)v9, a3, v26);
    uint64_t v16 = *v4;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v4 = v16;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v16 = sub_1C8D5EB50(0, *((void *)v16 + 2) + 1, 1, v16);
      *uint64_t v4 = v16;
    }
    unint64_t v19 = *((void *)v16 + 2);
    unint64_t v18 = *((void *)v16 + 3);
    if (v19 >= v18 >> 1) {
      uint64_t v16 = sub_1C8D5EB50((char *)(v18 > 1), v19 + 1, 1, v16);
    }
    *((void *)v16 + 2) = v19 + 1;
    v16[v19 + 32] = 10;
    *uint64_t v4 = v16;
    (*v22)(v9, a3);
    ++v11;
    BOOL v20 = v14 == MEMORY[0x1CB773090](a1, a3);
    uint64_t v7 = v23;
    if (v20) {
      return swift_bridgeObjectRelease();
    }
  }
  uint64_t result = sub_1C8D886B0();
  if (v21 != 8) {
    goto LABEL_18;
  }
  uint64_t v27 = result;
  (*v24)(v9, &v27, a3);
  uint64_t result = swift_unknownObjectRelease();
  uint64_t v14 = v11 + 1;
  if (!__OFADD__(v11, 1)) {
    goto LABEL_5;
  }
LABEL_17:
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1C8D2F868(uint64_t a1, uint64_t a2, void (*a3)(char *, void *), uint64_t a4, uint64_t a5)
{
  long long v49 = a3;
  uint64_t v50 = a4;
  uint64_t v9 = *(unsigned __int8 **)(a5 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](a1, a2);
  char v12 = (char *)v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44[0] = v11;
  MEMORY[0x1F4188790](v10, v13);
  long long v51 = (char *)v44 - v14;
  sub_1C8CA5968(v15);
  sub_1C8CA6060((uint64_t)": ", 2, v16);
  uint64_t v17 = *v5;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  long long v52 = v5;
  *uint64_t v5 = v17;
  unint64_t v19 = v6;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_25:
    uint64_t v17 = sub_1C8D5EB50(0, *((void *)v17 + 2) + 1, 1, v17);
    *long long v52 = v17;
  }
  unint64_t v21 = *((void *)v17 + 2);
  unint64_t v20 = *((void *)v17 + 3);
  if (v21 >= v20 >> 1) {
    uint64_t v17 = sub_1C8D5EB50((char *)(v20 > 1), v21 + 1, 1, v17);
  }
  *((void *)v17 + 2) = v21 + 1;
  v17[v21 + 32] = 91;
  *long long v52 = v17;
  uint64_t v22 = swift_bridgeObjectRetain();
  if (MEMORY[0x1CB773090](v22, a5))
  {
    v44[1] = v19;
    uint64_t v23 = v9 + 16;
    char v24 = sub_1C8D88510();
    sub_1C8D884D0();
    if (v24)
    {
      uint64_t v25 = a1 + ((v9[80] + 32) & ~(unint64_t)v9[80]);
      uint64_t v26 = v51;
      unint64_t v48 = (void (*)(char *, uint64_t, uint64_t))*((void *)v9 + 2);
      v48(v51, v25, a5);
    }
    else
    {
      uint64_t result = sub_1C8D886B0();
      if (v44[0] != 8)
      {
LABEL_28:
        __break(1u);
        return result;
      }
      uint64_t v53 = result;
      long long v43 = v51;
      unint64_t v48 = *(void (**)(char *, uint64_t, uint64_t))v23;
      v48(v51, (uint64_t)&v53, a5);
      uint64_t v26 = v43;
      swift_unknownObjectRelease();
    }
    uint64_t v27 = (void (*)(char *, char *, uint64_t))*((void *)v9 + 4);
    long long v47 = (void (**)(void, void, void))(v9 + 32);
    uint64_t v45 = v27;
    v27(v12, v26, a5);
    v49(v12, v52);
    uint64_t v17 = (char *)*((void *)v9 + 1);
    long long v46 = (void (**)(void, void, void))(v9 + 8);
    ((void (*)(char *, uint64_t))v17)(v12, a5);
    if (MEMORY[0x1CB773090](a1, a5) != 1)
    {
      uint64_t v35 = 1;
      do
      {
        char v36 = sub_1C8D88510();
        sub_1C8D884D0();
        if (v36)
        {
          unint64_t v37 = v9;
          unint64_t v38 = a1 + ((v9[80] + 32) & ~(unint64_t)v9[80]) + *((void *)v9 + 9) * v35;
          unint64_t v19 = v51;
          uint64_t v9 = v23;
          v48(v51, v38, a5);
          uint64_t v39 = v35 + 1;
          if (__OFADD__(v35, 1)) {
            goto LABEL_24;
          }
        }
        else
        {
          uint64_t result = sub_1C8D886B0();
          if (v44[0] != 8) {
            goto LABEL_28;
          }
          unint64_t v37 = v9;
          uint64_t v53 = result;
          uint64_t v9 = v23;
          v48(v51, (uint64_t)&v53, a5);
          unint64_t v19 = v51;
          swift_unknownObjectRelease();
          uint64_t v39 = v35 + 1;
          if (__OFADD__(v35, 1))
          {
LABEL_24:
            __break(1u);
            goto LABEL_25;
          }
        }
        v45(v12, v19, a5);
        unint64_t v40 = v52;
        sub_1C8CA6060((uint64_t)", ", 2, v41);
        v49(v12, v40);
        ((void (*)(char *, uint64_t))v17)(v12, a5);
        ++v35;
        BOOL v42 = v39 == MEMORY[0x1CB773090](a1, a5);
        uint64_t v23 = v9;
        uint64_t v9 = v37;
      }
      while (!v42);
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v28 = v52;
  uint64_t v29 = *v52;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v28 = v29;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50(0, *(void *)(v29 + 16) + 1, 1, (char *)v29);
    uint64_t v29 = result;
    *long long v52 = result;
  }
  unint64_t v32 = *(void *)(v29 + 16);
  unint64_t v31 = *(void *)(v29 + 24);
  unint64_t v33 = v32 + 1;
  if (v32 >= v31 >> 1)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v31 > 1), v32 + 1, 1, (char *)v29);
    uint64_t v29 = result;
  }
  *(void *)(v29 + 16) = v33;
  *(unsigned char *)(v29 + v32 + 32) = 93;
  *long long v52 = v29;
  unint64_t v34 = *(void *)(v29 + 24);
  if ((uint64_t)(v32 + 2) > (uint64_t)(v34 >> 1))
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v34 > 1), v32 + 2, 1, (char *)v29);
    uint64_t v29 = result;
  }
  *(void *)(v29 + 16) = v32 + 2;
  *(unsigned char *)(v29 + v33 + 32) = 10;
  *long long v52 = v29;
  return result;
}

uint64_t sub_1C8D2FD78(uint64_t a1, unint64_t a2)
{
  sub_1C8CA5968(a2);
  sub_1C8CA6060((uint64_t)": ", 2, v4);
  uint64_t v5 = *v2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v2 = v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v5 = sub_1C8D5EB50(0, *((void *)v5 + 2) + 1, 1, v5);
    uint64_t *v2 = v5;
  }
  unint64_t v8 = *((void *)v5 + 2);
  unint64_t v7 = *((void *)v5 + 3);
  if (v8 >= v7 >> 1) {
    uint64_t v5 = sub_1C8D5EB50((char *)(v7 > 1), v8 + 1, 1, v5);
  }
  *((void *)v5 + 2) = v8 + 1;
  v5[v8 + 32] = 91;
  uint64_t *v2 = v5;
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    float v10 = *(float *)(a1 + 32);
    swift_bridgeObjectRetain();
    if ((~LODWORD(v10) & 0x7F800000) != 0)
    {
      uint64_t v13 = sub_1C8D88590();
      sub_1C8CA69C8(v13, v14);
      uint64_t v16 = v9 - 1;
      if (v9 == 1)
      {
LABEL_16:
        swift_bridgeObjectRelease();
        uint64_t v5 = *v2;
        goto LABEL_17;
      }
      goto LABEL_24;
    }
    if ((LODWORD(v10) & 0x7FFFFF) != 0)
    {
      char v12 = "nan";
    }
    else
    {
      if (v10 < 0.0)
      {
        char v12 = "-inf";
        uint64_t v17 = 4;
        goto LABEL_15;
      }
      char v12 = "inf";
    }
    uint64_t v17 = 3;
LABEL_15:
    sub_1C8CA6060((uint64_t)v12, v17, v11);
    uint64_t v16 = v9 - 1;
    if (v9 == 1) {
      goto LABEL_16;
    }
LABEL_24:
    uint64_t v23 = (float *)(a1 + 36);
    while (1)
    {
      float v26 = *v23;
      sub_1C8CA6060((uint64_t)", ", 2, v15);
      if ((~LODWORD(v26) & 0x7F800000) != 0)
      {
        uint64_t v24 = sub_1C8D88590();
        sub_1C8CA69C8(v24, v25);
      }
      else
      {
        if ((LODWORD(v26) & 0x7FFFFF) != 0)
        {
          uint64_t v27 = "nan";
LABEL_33:
          sub_1C8CA6060((uint64_t)v27, 3, (unsigned __int8 *)LODWORD(v26));
          goto LABEL_26;
        }
        if (v26 >= 0.0)
        {
          uint64_t v27 = "inf";
          goto LABEL_33;
        }
        sub_1C8CA6060((uint64_t)"-inf", 4, (unsigned __int8 *)LODWORD(v26));
      }
LABEL_26:
      ++v23;
      if (!--v16) {
        goto LABEL_16;
      }
    }
  }
LABEL_17:
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v2 = v5;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50(0, *((void *)v5 + 2) + 1, 1, v5);
    uint64_t v5 = (char *)result;
    uint64_t *v2 = (char *)result;
  }
  unint64_t v20 = *((void *)v5 + 2);
  unint64_t v19 = *((void *)v5 + 3);
  unint64_t v21 = v20 + 1;
  if (v20 >= v19 >> 1)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v19 > 1), v20 + 1, 1, v5);
    uint64_t v5 = (char *)result;
  }
  *((void *)v5 + 2) = v21;
  v5[v20 + 32] = 93;
  uint64_t *v2 = v5;
  unint64_t v22 = *((void *)v5 + 3);
  if ((uint64_t)(v20 + 2) > (uint64_t)(v22 >> 1))
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v22 > 1), v20 + 2, 1, v5);
    uint64_t v5 = (char *)result;
  }
  *((void *)v5 + 2) = v20 + 2;
  v5[v21 + 32] = 10;
  uint64_t *v2 = v5;
  return result;
}

uint64_t sub_1C8D30030(uint64_t a1, unint64_t a2)
{
  sub_1C8CA5968(a2);
  sub_1C8CA6060((uint64_t)": ", 2, v4);
  uint64_t v5 = *v2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v2 = v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v5 = sub_1C8D5EB50(0, *((void *)v5 + 2) + 1, 1, v5);
    uint64_t *v2 = v5;
  }
  unint64_t v8 = *((void *)v5 + 2);
  unint64_t v7 = *((void *)v5 + 3);
  if (v8 >= v7 >> 1) {
    uint64_t v5 = sub_1C8D5EB50((char *)(v7 > 1), v8 + 1, 1, v5);
  }
  *((void *)v5 + 2) = v8 + 1;
  v5[v8 + 32] = 91;
  uint64_t *v2 = v5;
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    double v10 = *(double *)(a1 + 32);
    swift_bridgeObjectRetain();
    if ((~*(void *)&v10 & 0x7FF0000000000000) != 0)
    {
      uint64_t v13 = sub_1C8D88580();
      sub_1C8CA69C8(v13, v14);
      uint64_t v16 = v9 - 1;
      if (v9 == 1)
      {
LABEL_16:
        swift_bridgeObjectRelease();
        uint64_t v5 = *v2;
        goto LABEL_17;
      }
      goto LABEL_24;
    }
    if ((*(void *)&v10 & 0xFFFFFFFFFFFFFLL) != 0)
    {
      char v12 = "nan";
    }
    else
    {
      if (v10 < 0.0)
      {
        char v12 = "-inf";
        uint64_t v17 = 4;
        goto LABEL_15;
      }
      char v12 = "inf";
    }
    uint64_t v17 = 3;
LABEL_15:
    sub_1C8CA6060((uint64_t)v12, v17, v11);
    uint64_t v16 = v9 - 1;
    if (v9 == 1) {
      goto LABEL_16;
    }
LABEL_24:
    uint64_t v23 = (double *)(a1 + 40);
    while (1)
    {
      double v26 = *v23;
      sub_1C8CA6060((uint64_t)", ", 2, v15);
      if ((~*(void *)&v26 & 0x7FF0000000000000) != 0)
      {
        uint64_t v24 = sub_1C8D88580();
        sub_1C8CA69C8(v24, v25);
      }
      else
      {
        if ((*(void *)&v26 & 0xFFFFFFFFFFFFFLL) != 0)
        {
          uint64_t v27 = "nan";
LABEL_33:
          sub_1C8CA6060((uint64_t)v27, 3, *(unsigned __int8 **)&v26);
          goto LABEL_26;
        }
        if (v26 >= 0.0)
        {
          uint64_t v27 = "inf";
          goto LABEL_33;
        }
        sub_1C8CA6060((uint64_t)"-inf", 4, *(unsigned __int8 **)&v26);
      }
LABEL_26:
      ++v23;
      if (!--v16) {
        goto LABEL_16;
      }
    }
  }
LABEL_17:
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v2 = v5;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50(0, *((void *)v5 + 2) + 1, 1, v5);
    uint64_t v5 = (char *)result;
    uint64_t *v2 = (char *)result;
  }
  unint64_t v20 = *((void *)v5 + 2);
  unint64_t v19 = *((void *)v5 + 3);
  unint64_t v21 = v20 + 1;
  if (v20 >= v19 >> 1)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v19 > 1), v20 + 1, 1, v5);
    uint64_t v5 = (char *)result;
  }
  *((void *)v5 + 2) = v21;
  v5[v20 + 32] = 93;
  uint64_t *v2 = v5;
  unint64_t v22 = *((void *)v5 + 3);
  if ((uint64_t)(v20 + 2) > (uint64_t)(v22 >> 1))
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v22 > 1), v20 + 2, 1, v5);
    uint64_t v5 = (char *)result;
  }
  *((void *)v5 + 2) = v20 + 2;
  v5[v21 + 32] = 10;
  uint64_t *v2 = v5;
  return result;
}

uint64_t sub_1C8D302E8(uint64_t a1, unint64_t a2)
{
  sub_1C8CA5968(a2);
  sub_1C8CA6060((uint64_t)": ", 2, v4);
  uint64_t v5 = *v2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v2 = v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v5 = sub_1C8D5EB50(0, *((void *)v5 + 2) + 1, 1, v5);
    uint64_t *v2 = v5;
  }
  unint64_t v8 = *((void *)v5 + 2);
  unint64_t v7 = *((void *)v5 + 3);
  if (v8 >= v7 >> 1) {
    uint64_t v5 = sub_1C8D5EB50((char *)(v7 > 1), v8 + 1, 1, v5);
  }
  *((void *)v5 + 2) = v8 + 1;
  v5[v8 + 32] = 91;
  uint64_t *v2 = v5;
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    unint64_t v10 = *(int *)(a1 + 32);
    swift_bridgeObjectRetain();
    if ((v10 & 0x80000000) != 0)
    {
      char v11 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t *v2 = v5;
      if ((v11 & 1) == 0)
      {
        uint64_t v5 = sub_1C8D5EB50(0, *((void *)v5 + 2) + 1, 1, v5);
        uint64_t *v2 = v5;
      }
      unint64_t v13 = *((void *)v5 + 2);
      unint64_t v12 = *((void *)v5 + 3);
      if (v13 >= v12 >> 1) {
        uint64_t v5 = sub_1C8D5EB50((char *)(v12 > 1), v13 + 1, 1, v5);
      }
      *((void *)v5 + 2) = v13 + 1;
      v5[v13 + 32] = 45;
      uint64_t *v2 = v5;
      unint64_t v10 = -(uint64_t)v10;
    }
    sub_1C8D5C98C(v10);
    uint64_t v14 = v9 - 1;
    if (v9 != 1)
    {
      unint64_t v20 = (unsigned __int8 *)a1;
      unint64_t v21 = (int *)(a1 + 36);
      do
      {
        unint64_t v23 = *v21++;
        unint64_t v22 = v23;
        sub_1C8CA6060((uint64_t)", ", 2, v20);
        if ((v23 & 0x80000000) != 0)
        {
          uint64_t v24 = *v2;
          char v25 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t *v2 = v24;
          if ((v25 & 1) == 0)
          {
            uint64_t v24 = sub_1C8D5EB50(0, *((void *)v24 + 2) + 1, 1, v24);
            uint64_t *v2 = v24;
          }
          unint64_t v27 = *((void *)v24 + 2);
          unint64_t v26 = *((void *)v24 + 3);
          if (v27 >= v26 >> 1) {
            uint64_t v24 = sub_1C8D5EB50((char *)(v26 > 1), v27 + 1, 1, v24);
          }
          *((void *)v24 + 2) = v27 + 1;
          v24[v27 + 32] = 45;
          uint64_t *v2 = v24;
          unint64_t v22 = -(uint64_t)v22;
        }
        sub_1C8D5C98C(v22);
        --v14;
      }
      while (v14);
    }
    swift_bridgeObjectRelease();
    uint64_t v5 = *v2;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v2 = v5;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50(0, *((void *)v5 + 2) + 1, 1, v5);
    uint64_t v5 = (char *)result;
    uint64_t *v2 = (char *)result;
  }
  unint64_t v17 = *((void *)v5 + 2);
  unint64_t v16 = *((void *)v5 + 3);
  unint64_t v18 = v17 + 1;
  if (v17 >= v16 >> 1)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v16 > 1), v17 + 1, 1, v5);
    uint64_t v5 = (char *)result;
  }
  *((void *)v5 + 2) = v18;
  v5[v17 + 32] = 93;
  uint64_t *v2 = v5;
  unint64_t v19 = *((void *)v5 + 3);
  if ((uint64_t)(v17 + 2) > (uint64_t)(v19 >> 1))
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v19 > 1), v17 + 2, 1, v5);
    uint64_t v5 = (char *)result;
  }
  *((void *)v5 + 2) = v17 + 2;
  v5[v18 + 32] = 10;
  uint64_t *v2 = v5;
  return result;
}

uint64_t sub_1C8D305F0(uint64_t a1, unint64_t a2)
{
  sub_1C8CA5968(a2);
  sub_1C8CA6060((uint64_t)": ", 2, v4);
  uint64_t v5 = *v2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v2 = v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v5 = sub_1C8D5EB50(0, *((void *)v5 + 2) + 1, 1, v5);
    uint64_t *v2 = v5;
  }
  unint64_t v8 = *((void *)v5 + 2);
  unint64_t v7 = *((void *)v5 + 3);
  if (v8 >= v7 >> 1) {
    uint64_t v5 = sub_1C8D5EB50((char *)(v7 > 1), v8 + 1, 1, v5);
  }
  *((void *)v5 + 2) = v8 + 1;
  v5[v8 + 32] = 91;
  uint64_t *v2 = v5;
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    unint64_t v10 = *(void *)(a1 + 32);
    swift_bridgeObjectRetain();
    if ((v10 & 0x8000000000000000) != 0)
    {
      char v11 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t *v2 = v5;
      if ((v11 & 1) == 0)
      {
        uint64_t v5 = sub_1C8D5EB50(0, *((void *)v5 + 2) + 1, 1, v5);
        uint64_t *v2 = v5;
      }
      unint64_t v13 = *((void *)v5 + 2);
      unint64_t v12 = *((void *)v5 + 3);
      if (v13 >= v12 >> 1) {
        uint64_t v5 = sub_1C8D5EB50((char *)(v12 > 1), v13 + 1, 1, v5);
      }
      *((void *)v5 + 2) = v13 + 1;
      v5[v13 + 32] = 45;
      uint64_t *v2 = v5;
      unint64_t v10 = -(uint64_t)v10;
    }
    sub_1C8D5C98C(v10);
    uint64_t v14 = v9 - 1;
    if (v9 != 1)
    {
      unint64_t v20 = (unsigned __int8 *)a1;
      unint64_t v21 = (unint64_t *)(a1 + 40);
      do
      {
        unint64_t v23 = *v21++;
        unint64_t v22 = v23;
        sub_1C8CA6060((uint64_t)", ", 2, v20);
        if ((v23 & 0x8000000000000000) != 0)
        {
          uint64_t v24 = *v2;
          char v25 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t *v2 = v24;
          if ((v25 & 1) == 0)
          {
            uint64_t v24 = sub_1C8D5EB50(0, *((void *)v24 + 2) + 1, 1, v24);
            uint64_t *v2 = v24;
          }
          unint64_t v27 = *((void *)v24 + 2);
          unint64_t v26 = *((void *)v24 + 3);
          if (v27 >= v26 >> 1) {
            uint64_t v24 = sub_1C8D5EB50((char *)(v26 > 1), v27 + 1, 1, v24);
          }
          *((void *)v24 + 2) = v27 + 1;
          v24[v27 + 32] = 45;
          uint64_t *v2 = v24;
          unint64_t v22 = -(uint64_t)v22;
        }
        sub_1C8D5C98C(v22);
        --v14;
      }
      while (v14);
    }
    swift_bridgeObjectRelease();
    uint64_t v5 = *v2;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v2 = v5;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50(0, *((void *)v5 + 2) + 1, 1, v5);
    uint64_t v5 = (char *)result;
    uint64_t *v2 = (char *)result;
  }
  unint64_t v17 = *((void *)v5 + 2);
  unint64_t v16 = *((void *)v5 + 3);
  unint64_t v18 = v17 + 1;
  if (v17 >= v16 >> 1)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v16 > 1), v17 + 1, 1, v5);
    uint64_t v5 = (char *)result;
  }
  *((void *)v5 + 2) = v18;
  v5[v17 + 32] = 93;
  uint64_t *v2 = v5;
  unint64_t v19 = *((void *)v5 + 3);
  if ((uint64_t)(v17 + 2) > (uint64_t)(v19 >> 1))
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v19 > 1), v17 + 2, 1, v5);
    uint64_t v5 = (char *)result;
  }
  *((void *)v5 + 2) = v17 + 2;
  v5[v18 + 32] = 10;
  uint64_t *v2 = v5;
  return result;
}

uint64_t sub_1C8D308F8(uint64_t a1, unint64_t a2)
{
  sub_1C8CA5968(a2);
  sub_1C8CA6060((uint64_t)": ", 2, v4);
  uint64_t v5 = *v2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v2 = v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v5 = sub_1C8D5EB50(0, *((void *)v5 + 2) + 1, 1, v5);
    uint64_t *v2 = v5;
  }
  unint64_t v8 = *((void *)v5 + 2);
  unint64_t v7 = *((void *)v5 + 3);
  if (v8 >= v7 >> 1) {
    uint64_t v5 = sub_1C8D5EB50((char *)(v7 > 1), v8 + 1, 1, v5);
  }
  *((void *)v5 + 2) = v8 + 1;
  v5[v8 + 32] = 91;
  uint64_t *v2 = v5;
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    unint64_t v10 = *(unsigned int *)(a1 + 32);
    swift_bridgeObjectRetain();
    sub_1C8D5C98C(v10);
    uint64_t v12 = v9 - 1;
    if (v9 != 1)
    {
      unint64_t v13 = (unsigned int *)(a1 + 36);
      do
      {
        unsigned int v14 = *v13++;
        sub_1C8CA6060((uint64_t)", ", 2, v11);
        sub_1C8D5C98C(v14);
        --v12;
      }
      while (v12);
    }
    swift_bridgeObjectRelease();
    uint64_t v5 = *v2;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v2 = v5;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50(0, *((void *)v5 + 2) + 1, 1, v5);
    uint64_t v5 = (char *)result;
    uint64_t *v2 = (char *)result;
  }
  unint64_t v17 = *((void *)v5 + 2);
  unint64_t v16 = *((void *)v5 + 3);
  unint64_t v18 = v17 + 1;
  if (v17 >= v16 >> 1)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v16 > 1), v17 + 1, 1, v5);
    uint64_t v5 = (char *)result;
  }
  *((void *)v5 + 2) = v18;
  v5[v17 + 32] = 93;
  uint64_t *v2 = v5;
  unint64_t v19 = *((void *)v5 + 3);
  int64_t v20 = v17 + 2;
  if (v20 > (uint64_t)(v19 >> 1))
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v19 > 1), v20, 1, v5);
    uint64_t v5 = (char *)result;
  }
  *((void *)v5 + 2) = v20;
  v5[v18 + 32] = 10;
  uint64_t *v2 = v5;
  return result;
}

uint64_t sub_1C8D30ADC(void *a1, unint64_t a2)
{
  sub_1C8CA5968(a2);
  sub_1C8CA6060((uint64_t)": ", 2, v4);
  uint64_t v5 = *v2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v2 = v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v5 = sub_1C8D5EB50(0, *((void *)v5 + 2) + 1, 1, v5);
    uint64_t *v2 = v5;
  }
  unint64_t v8 = *((void *)v5 + 2);
  unint64_t v7 = *((void *)v5 + 3);
  if (v8 >= v7 >> 1) {
    uint64_t v5 = sub_1C8D5EB50((char *)(v7 > 1), v8 + 1, 1, v5);
  }
  *((void *)v5 + 2) = v8 + 1;
  v5[v8 + 32] = 91;
  uint64_t *v2 = v5;
  uint64_t v9 = a1[2];
  if (v9)
  {
    unint64_t v10 = a1[4];
    swift_bridgeObjectRetain();
    sub_1C8D5C98C(v10);
    uint64_t v12 = v9 - 1;
    if (v9 != 1)
    {
      unint64_t v13 = a1 + 5;
      do
      {
        unint64_t v14 = *v13++;
        sub_1C8CA6060((uint64_t)", ", 2, v11);
        sub_1C8D5C98C(v14);
        --v12;
      }
      while (v12);
    }
    swift_bridgeObjectRelease();
    uint64_t v5 = *v2;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v2 = v5;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50(0, *((void *)v5 + 2) + 1, 1, v5);
    uint64_t v5 = (char *)result;
    uint64_t *v2 = (char *)result;
  }
  unint64_t v17 = *((void *)v5 + 2);
  unint64_t v16 = *((void *)v5 + 3);
  unint64_t v18 = v17 + 1;
  if (v17 >= v16 >> 1)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v16 > 1), v17 + 1, 1, v5);
    uint64_t v5 = (char *)result;
  }
  *((void *)v5 + 2) = v18;
  v5[v17 + 32] = 93;
  uint64_t *v2 = v5;
  unint64_t v19 = *((void *)v5 + 3);
  int64_t v20 = v17 + 2;
  if (v20 > (uint64_t)(v19 >> 1))
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v19 > 1), v20, 1, v5);
    uint64_t v5 = (char *)result;
  }
  *((void *)v5 + 2) = v20;
  v5[v18 + 32] = 10;
  uint64_t *v2 = v5;
  return result;
}

uint64_t sub_1C8D30CC0(uint64_t a1, unint64_t a2)
{
  sub_1C8CA5968(a2);
  sub_1C8CA6060((uint64_t)": ", 2, v4);
  uint64_t v5 = *v2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v2 = v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v5 = sub_1C8D5EB50(0, *((void *)v5 + 2) + 1, 1, v5);
    uint64_t *v2 = v5;
  }
  unint64_t v8 = *((void *)v5 + 2);
  unint64_t v7 = *((void *)v5 + 3);
  if (v8 >= v7 >> 1) {
    uint64_t v5 = sub_1C8D5EB50((char *)(v7 > 1), v8 + 1, 1, v5);
  }
  *((void *)v5 + 2) = v8 + 1;
  v5[v8 + 32] = 91;
  uint64_t *v2 = v5;
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    if (*(unsigned char *)(a1 + 32)) {
      unint64_t v10 = "true";
    }
    else {
      unint64_t v10 = "false";
    }
    if (*(unsigned char *)(a1 + 32)) {
      uint64_t v11 = 4;
    }
    else {
      uint64_t v11 = 5;
    }
    swift_bridgeObjectRetain();
    sub_1C8CA6060((uint64_t)v10, v11, v12);
    uint64_t v14 = v9 - 1;
    if (v14)
    {
      unint64_t v15 = (unsigned __int8 *)(a1 + 33);
      do
      {
        int v17 = *v15++;
        int v16 = v17;
        sub_1C8CA6060((uint64_t)", ", 2, v13);
        if (v17) {
          unint64_t v19 = "true";
        }
        else {
          unint64_t v19 = "false";
        }
        if (v16) {
          uint64_t v20 = 4;
        }
        else {
          uint64_t v20 = 5;
        }
        sub_1C8CA6060((uint64_t)v19, v20, v18);
        --v14;
      }
      while (v14);
    }
    swift_bridgeObjectRelease();
    uint64_t v5 = *v2;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v2 = v5;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50(0, *((void *)v5 + 2) + 1, 1, v5);
    uint64_t v5 = (char *)result;
    uint64_t *v2 = (char *)result;
  }
  unint64_t v23 = *((void *)v5 + 2);
  unint64_t v22 = *((void *)v5 + 3);
  unint64_t v24 = v23 + 1;
  if (v23 >= v22 >> 1)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v22 > 1), v23 + 1, 1, v5);
    uint64_t v5 = (char *)result;
  }
  *((void *)v5 + 2) = v24;
  v5[v23 + 32] = 93;
  uint64_t *v2 = v5;
  unint64_t v25 = *((void *)v5 + 3);
  int64_t v26 = v23 + 2;
  if (v26 > (uint64_t)(v25 >> 1))
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v25 > 1), v26, 1, v5);
    uint64_t v5 = (char *)result;
  }
  *((void *)v5 + 2) = v26;
  v5[v24 + 32] = 10;
  uint64_t *v2 = v5;
  return result;
}

uint64_t sub_1C8D30EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  long long v5[2] = a3;
  v5[3] = a4;
  return sub_1C8D2F868(a1, a2, (void (*)(char *, void *))sub_1C8D33148, (uint64_t)v5, a3);
}

uint64_t sub_1C8D30F2C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v33 = a1 + 64;
  uint64_t v6 = -1;
  uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
  if (-v7 < 64) {
    uint64_t v6 = ~(-1 << -(char)v7);
  }
  unint64_t v8 = v6 & *(void *)(a1 + 64);
  int64_t v32 = (unint64_t)(63 - v7) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  if (!v8) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v36 = (v8 - 1) & v8;
  int64_t v37 = v10;
  for (unint64_t i = __clz(__rbit64(v8)) | (v10 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v12 << 6))
  {
    unint64_t v15 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v16 = *v15;
    unint64_t v17 = v15[1];
    unint64_t v18 = (uint64_t *)(*(void *)(a1 + 56) + 24 * i);
    uint64_t v19 = *v18;
    unint64_t v20 = v18[1];
    uint64_t v21 = v18[2];
    swift_bridgeObjectRetain();
    uint64_t v45 = v19;
    sub_1C8CA3CF8(v19, v20);
    swift_retain();
    sub_1C8CA5968(a2);
    sub_1C8CA6B04(v22);
    if (qword_1EA565C08 != -1) {
      swift_once();
    }
    uint64_t v23 = *(void *)(a3 + 8);
    char v24 = *(unsigned char *)(a3 + 64);
    unint64_t v38 = *(char **)a3;
    uint64_t v39 = v23;
    long long v40 = 0u;
    long long v41 = 0u;
    uint64_t v42 = qword_1EA567228;
    uint64_t v43 = 0;
    char v44 = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v25 = v4;
    sub_1C8D32030(&v38, v16, v17, v45, v20, v21);
    int64_t v26 = v38;
    uint64_t v27 = v39;
    if (v25)
    {
      uint64_t v31 = v40;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C8CA469C(v31);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C8CA3D5C(v45, v20);
      swift_bridgeObjectRelease();
      swift_release();
      return sub_1C8D18798();
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)a3 = v26;
    *(void *)(a3 + 8) = v27;
    sub_1C8CA7498(*(void *)(v27 + 16) - 1);
    sub_1C8CA7498(*(void *)(*(void *)(a3 + 8) + 16) - 1);
    uint64_t v28 = swift_bridgeObjectRetain();
    sub_1C8CA67D4(v28);
    sub_1C8CA6060((uint64_t)"}\n", 2, v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA3D5C(v45, v20);
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    unint64_t v8 = v36;
    int64_t v10 = v37;
    uint64_t v4 = 0;
    if (v36) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v12 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v12 >= v32) {
      return sub_1C8D18798();
    }
    unint64_t v13 = *(void *)(v33 + 8 * v12);
    if (!v13)
    {
      int64_t v14 = v10 + 2;
      if (v10 + 2 >= v32) {
        return sub_1C8D18798();
      }
      unint64_t v13 = *(void *)(v33 + 8 * v14);
      if (v13) {
        goto LABEL_12;
      }
      int64_t v14 = v10 + 3;
      if (v10 + 3 >= v32) {
        return sub_1C8D18798();
      }
      unint64_t v13 = *(void *)(v33 + 8 * v14);
      if (v13)
      {
LABEL_12:
        int64_t v12 = v14;
        goto LABEL_13;
      }
      uint64_t v30 = v10 + 4;
      if (v10 + 4 >= v32) {
        return sub_1C8D18798();
      }
      unint64_t v13 = *(void *)(v33 + 8 * v30);
      int64_t v12 = v10 + 4;
      if (!v13) {
        break;
      }
    }
LABEL_13:
    uint64_t v36 = (v13 - 1) & v13;
    int64_t v37 = v12;
  }
  while (1)
  {
    int64_t v12 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v12 >= v32) {
      return sub_1C8D18798();
    }
    unint64_t v13 = *(void *)(v33 + 8 * v12);
    ++v30;
    if (v13) {
      goto LABEL_13;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1C8D31314(unint64_t a1, unint64_t a2, void (*a3)(uint64_t *, char *, char *), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6 = a6;
  uint64_t v80 = a4;
  int64_t v79 = a3;
  unint64_t v78 = a2;
  uint64_t v68 = *(void *)(a6 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](a1, a2);
  uint64_t v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v9, v13);
  int64_t v87 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v86 = sub_1C8D88620();
  uint64_t v16 = *(void *)(v86 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v86, v17);
  unint64_t v20 = (char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18, v21);
  uint64_t v85 = (char *)&v58 - v22;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v23 = sub_1C8D88730();
    unint64_t v61 = 0;
    uint64_t v24 = 0;
    unint64_t v25 = 0;
    unint64_t v26 = v23 | 0x8000000000000000;
  }
  else
  {
    uint64_t v27 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v24 = ~v27;
    uint64_t v28 = *(void *)(a1 + 64);
    unint64_t v61 = a1 + 64;
    uint64_t v29 = -v27;
    if (v29 < 64) {
      uint64_t v30 = ~(-1 << v29);
    }
    else {
      uint64_t v30 = -1;
    }
    unint64_t v25 = v30 & v28;
    unint64_t v26 = a1;
  }
  uint64_t v64 = v26 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v84 = TupleTypeMetadata2 - 8;
  uint64_t v60 = v24;
  uint64_t v66 = v67 + 16;
  uint64_t v65 = v68 + 16;
  uint64_t v83 = (void (**)(void))(v16 + 32);
  int64_t v77 = (void (**)(char *, char *, uint64_t))(v67 + 32);
  uint64_t v76 = (void (**)(char *, char *, uint64_t))(v68 + 32);
  uint64_t v69 = v88 + 1;
  uint64_t v75 = v94;
  uint64_t v71 = (void (**)(char *, uint64_t))(v68 + 8);
  unint64_t v72 = (void (**)(char *, uint64_t))(v67 + 8);
  int64_t v63 = (unint64_t)(v24 + 64) >> 6;
  int64_t v59 = v63 - 1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v32 = 0;
  uint64_t v33 = v87;
  unint64_t v81 = v26;
  uint64_t v89 = v20;
  uint64_t v74 = a5;
  uint64_t v73 = v6;
  uint64_t v70 = TupleTypeMetadata2;
  long long v62 = v11;
  unint64_t v82 = v25;
  if ((v26 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
LABEL_8:
  if (sub_1C8D88740())
  {
    int64_t v34 = v32;
    unint64_t v35 = v25;
    uint64_t v36 = v89;
    sub_1C8D887B0();
    unint64_t v20 = v36;
    swift_unknownObjectRelease();
    sub_1C8D887B0();
    swift_unknownObjectRelease();
    uint64_t v37 = 0;
    uint64_t v90 = v35;
    int64_t v91 = v34;
    int64_t v32 = v34;
    uint64_t v11 = v62;
  }
  else
  {
    uint64_t v37 = 1;
    uint64_t v90 = v25;
    int64_t v91 = v32;
    unint64_t v20 = v89;
  }
  while (1)
  {
    while (1)
    {
LABEL_20:
      uint64_t v41 = *(void *)(TupleTypeMetadata2 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56))(v20, v37, 1, TupleTypeMetadata2);
      uint64_t v42 = v85;
      (*v83)();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v42, 1, TupleTypeMetadata2) == 1) {
        return sub_1C8D18798();
      }
      uint64_t v43 = &v42[*(int *)(TupleTypeMetadata2 + 48)];
      (*v77)(v33, v42, a5);
      (*v76)(v11, v43, v6);
      char v44 = v88;
      sub_1C8CA5968(v78);
      sub_1C8CA6B04(v45);
      if (qword_1EA565C08 != -1) {
        swift_once();
      }
      uint64_t v46 = qword_1EA567228;
      uint64_t v47 = v44[1];
      char v48 = *((unsigned char *)v44 + 64);
      uint64_t v92 = *v44;
      uint64_t v93 = v47;
      long long v49 = v75;
      *uint64_t v75 = 0u;
      v49[1] = 0u;
      v94[4] = v46;
      v94[5] = 0;
      char v95 = v48;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v50 = v96;
      v79(&v92, v33, v11);
      uint64_t v52 = v92;
      uint64_t v51 = v93;
      uint64_t v96 = v50;
      if (v50)
      {
        uint64_t v57 = v94[0];
        int64_t v91 = v32;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C8CA469C(v57);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*v71)(v11, v73);
        (*v72)(v87, v74);
        return sub_1C8D18798();
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *char v44 = v52;
      v44[1] = v51;
      sub_1C8CA7498(*(void *)(v51 + 16) - 1);
      sub_1C8CA7498(*(void *)(v44[1] + 16) - 1);
      uint64_t v53 = swift_bridgeObjectRetain();
      sub_1C8CA67D4(v53);
      sub_1C8CA6060((uint64_t)"}\n", 2, v54);
      uint64_t v55 = v94[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C8CA469C(v55);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = v73;
      (*v71)(v11, v73);
      uint64_t v33 = v87;
      a5 = v74;
      uint64_t result = ((uint64_t (*)(char *, uint64_t))*v72)(v87, v74);
      unint64_t v25 = v90;
      int64_t v32 = v91;
      TupleTypeMetadata2 = v70;
      unint64_t v26 = v81;
      unint64_t v20 = v89;
      unint64_t v82 = v90;
      if ((v81 & 0x8000000000000000) != 0) {
        goto LABEL_8;
      }
LABEL_11:
      if (v25)
      {
        uint64_t v90 = (v25 - 1) & v25;
        int64_t v91 = v32;
        unint64_t v38 = __clz(__rbit64(v25)) | (v32 << 6);
        goto LABEL_13;
      }
      int64_t v39 = v32 + 1;
      if (__OFADD__(v32, 1))
      {
        __break(1u);
        goto LABEL_43;
      }
      if (v39 >= v63)
      {
        uint64_t v90 = 0;
        int64_t v91 = v32;
        goto LABEL_19;
      }
      unint64_t v40 = *(void *)(v61 + 8 * v39);
      if (!v40) {
        break;
      }
LABEL_17:
      uint64_t v90 = (v40 - 1) & v40;
      int64_t v91 = v39;
      unint64_t v38 = __clz(__rbit64(v40)) + (v39 << 6);
LABEL_13:
      (*(void (**)(char *, unint64_t, uint64_t))(v67 + 16))(v20, *(void *)(v26 + 48) + *(void *)(v67 + 72) * v38, a5);
      (*(void (**)(char *, unint64_t, uint64_t))(v68 + 16))(&v20[*(int *)(TupleTypeMetadata2 + 48)], *(void *)(v26 + 56) + *(void *)(v68 + 72) * v38, v6);
      uint64_t v37 = 0;
    }
    if (v32 + 2 >= v63)
    {
      uint64_t v90 = 0;
      int64_t v91 = v32 + 1;
      goto LABEL_19;
    }
    unint64_t v40 = *(void *)(v61 + 8 * (v32 + 2));
    if (v40)
    {
      int64_t v39 = v32 + 2;
      goto LABEL_17;
    }
    uint64_t v56 = v32 + 3;
    if (v32 + 3 < v63) {
      break;
    }
    uint64_t v90 = 0;
    int64_t v91 = v32 + 2;
LABEL_19:
    uint64_t v37 = 1;
  }
  unint64_t v40 = *(void *)(v61 + 8 * v56);
  if (v40)
  {
    int64_t v39 = v32 + 3;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v39 = v56 + 1;
    if (__OFADD__(v56, 1)) {
      break;
    }
    if (v39 >= v63)
    {
      uint64_t v90 = 0;
      uint64_t v37 = 1;
      int64_t v91 = v59;
      goto LABEL_20;
    }
    unint64_t v40 = *(void *)(v61 + 8 * v39);
    ++v56;
    if (v40) {
      goto LABEL_17;
    }
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_1C8D31C40(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = a3;
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  uint64_t v15 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return sub_1C8D31314(a1, a2, (void (*)(uint64_t *, char *, char *))sub_1C8D33128, (uint64_t)v11, AssociatedTypeWitness, v9);
}

uint64_t sub_1C8D31D40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t))(*(void *)(a6 + 8) + 48))(a2, 1, a1, &type metadata for TextFormatEncodingVisitor, &off_1F23554E0, a4);
  if (!v7) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t))(*(void *)(a7 + 8) + 48))(a3, 2, a1, &type metadata for TextFormatEncodingVisitor, &off_1F23554E0, a5);
  }
  return result;
}

uint64_t sub_1C8D31DF8(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  long long v11[2] = a3;
  v11[3] = a4;
  void v11[4] = a5;
  v11[5] = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return sub_1C8D31314(a1, a2, (void (*)(uint64_t *, char *, char *))sub_1C8D33108, (uint64_t)v11, AssociatedTypeWitness, a4);
}

uint64_t sub_1C8D31EC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t))(*(void *)(a6 + 8) + 48))(a2, 1, a1, &type metadata for TextFormatEncodingVisitor, &off_1F23554E0, a4);
  if (!v7) {
    return sub_1C8D2E434(a3, 2uLL, a5, a7);
  }
  return result;
}

uint64_t sub_1C8D31F5C(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v12[2] = a3;
  v12[3] = a4;
  uint64_t v12[4] = a5;
  v12[5] = a6;
  v12[6] = a7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return sub_1C8D31314(a1, a2, (void (*)(uint64_t *, char *, char *))sub_1C8D330E4, (uint64_t)v12, AssociatedTypeWitness, a4);
}

uint64_t sub_1C8D32030(char **a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  sub_1C8CA5968(1uLL);
  sub_1C8CA6060((uint64_t)": ", 2, v12);
  sub_1C8CA6D2C(a2, a3);
  uint64_t v13 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v13;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v13 = sub_1C8D5EB50(0, *((void *)v13 + 2) + 1, 1, v13);
    *a1 = v13;
  }
  unint64_t v16 = *((void *)v13 + 2);
  unint64_t v15 = *((void *)v13 + 3);
  if (v16 >= v15 >> 1) {
    uint64_t v13 = sub_1C8D5EB50((char *)(v15 > 1), v16 + 1, 1, v13);
  }
  *((void *)v13 + 2) = v16 + 1;
  v13[v16 + 32] = 10;
  *a1 = v13;
  return sub_1C8D72C24(a4, a5, a6, 2uLL);
}

uint64_t sub_1C8D32138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t))(*(void *)(a6 + 8) + 48))(a2, 1, a1, &type metadata for TextFormatEncodingVisitor, &off_1F23554E0, a4);
  if (!v7) {
    return sub_1C8D2E510(a3, 2, a5, a7);
  }
  return result;
}

uint64_t sub_1C8D321CC(unint64_t a1, float a2)
{
  return sub_1C8D2E294(a1, a2);
}

uint64_t sub_1C8D321E4(unint64_t a1, double a2)
{
  return sub_1C8D2E364(a1, a2);
}

uint64_t sub_1C8D321FC(unint64_t a1, unint64_t a2)
{
  sub_1C8CA5968(a2);
  sub_1C8CA6060((uint64_t)": ", 2, v3);
  sub_1C8D5C720(a1);
  return sub_1C8D5C2B8();
}

uint64_t sub_1C8D32248(unint64_t a1, unint64_t a2)
{
  sub_1C8CA5968(a2);
  sub_1C8CA6060((uint64_t)": ", 2, v3);
  sub_1C8D5C98C(a1);
  return sub_1C8D5C2B8();
}

uint64_t sub_1C8D32294(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1C8CA6C50(a1, a2, a3, (void (*)(uint64_t, uint64_t))sub_1C8D5C358);
}

uint64_t sub_1C8D322C0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8D2E434(a1, a2, a3, a4);
}

uint64_t sub_1C8D322D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8D2E510(a1, a2, a3, a4);
}

uint64_t sub_1C8D322F0(uint64_t a1, unint64_t a2)
{
  return sub_1C8D2E810(a1, a2);
}

uint64_t sub_1C8D32308(uint64_t a1, unint64_t a2)
{
  return sub_1C8D2E97C(a1, a2);
}

uint64_t sub_1C8D32320(uint64_t a1, unint64_t a2)
{
  return sub_1C8D2EAE8(a1, a2);
}

uint64_t sub_1C8D32338(uint64_t a1, unint64_t a2)
{
  return sub_1C8D2EC88(a1, a2);
}

uint64_t sub_1C8D32350(uint64_t a1, unint64_t a2)
{
  return sub_1C8D2EE28(a1, a2);
}

uint64_t sub_1C8D32368(uint64_t a1, unint64_t a2)
{
  return sub_1C8D2EF40(a1, a2);
}

uint64_t sub_1C8D32380(uint64_t a1, unint64_t a2)
{
  return sub_1C8D2F058(a1, a2);
}

uint64_t sub_1C8D32398(uint64_t a1, unint64_t a2)
{
  return sub_1C8D2F18C(a1, a2);
}

uint64_t sub_1C8D323B0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8D2F5C8(a1, a2, a3, a4);
}

uint64_t sub_1C8D323C8(uint64_t a1, unint64_t a2)
{
  return sub_1C8D2FD78(a1, a2);
}

uint64_t sub_1C8D323E0(uint64_t a1, unint64_t a2)
{
  return sub_1C8D30030(a1, a2);
}

uint64_t sub_1C8D323F8(uint64_t a1, unint64_t a2)
{
  return sub_1C8D302E8(a1, a2);
}

uint64_t sub_1C8D32410(uint64_t a1, unint64_t a2)
{
  return sub_1C8D305F0(a1, a2);
}

uint64_t sub_1C8D32428(uint64_t a1, unint64_t a2)
{
  return sub_1C8D308F8(a1, a2);
}

uint64_t sub_1C8D32440(void *a1, unint64_t a2)
{
  return sub_1C8D30ADC(a1, a2);
}

uint64_t sub_1C8D32458(uint64_t a1, unint64_t a2)
{
  return sub_1C8D30CC0(a1, a2);
}

uint64_t sub_1C8D32470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8D30EEC(a1, a2, a3, a4);
}

uint64_t sub_1C8D32488(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1C8D31C40(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1C8D324A0(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1C8D31DF8(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1C8D324B8(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1C8D31F5C(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1C8D324D0(uint64_t a1, unint64_t a2)
{
  return sub_1C8D2DB9C(a1, a2);
}

uint64_t sub_1C8D324E8(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C8D88110();
  uint64_t v5 = result;
  if (result)
  {
    uint64_t result = sub_1C8D88140();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v5 += a1 - result;
  }
  BOOL v6 = __OFSUB__(a2, a1);
  uint64_t v7 = a2 - a1;
  if (v6)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v8 = sub_1C8D88130();
  if (v8 >= v7) {
    uint64_t v9 = v7;
  }
  else {
    uint64_t v9 = v8;
  }
  uint64_t v10 = v5 + v9;
  if (v5) {
    uint64_t v11 = v10;
  }
  else {
    uint64_t v11 = 0;
  }
  return sub_1C8D2DDF4(v5, v11);
}

uint64_t sub_1C8D3258C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v27[3] = a5;
  v27[4] = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v27);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 16))(boxed_opaque_existential_1, a1, a5);
  sub_1C8D5C16C(a2, a3);
  sub_1C8CA6B04(v13);
  sub_1C8CA425C((uint64_t)v27, (uint64_t)v25);
  uint64_t v14 = *(void *)a4;
  uint64_t v15 = *(void *)(a4 + 8);
  LOBYTE(v24[0]) = *(unsigned char *)(a4 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8CA42C0((uint64_t)v25, v14, v15, (char *)v24, (uint64_t)v26);
  sub_1C8CA425C((uint64_t)v27, (uint64_t)v25);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CD8);
  if (swift_dynamicCast())
  {
    uint64_t v16 = v24[0];
    unint64_t v17 = v24[1];
    sub_1C8D634A0(v26);
    sub_1C8CA3CF8(v16, v17);
    sub_1C8D2D968((uint64_t)v26, v16, v17);
    sub_1C8CA3D5C(v16, v17);
    sub_1C8CA3D5C(v16, v17);
    swift_release();
  }
  else
  {
    (*(void (**)(void *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(a6 + 72))(v26, &type metadata for TextFormatEncodingVisitor, &off_1F23554E0, a5, a6);
  }
  uint64_t v18 = v26[0];
  uint64_t v19 = v26[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)a4 = v18;
  *(void *)(a4 + 8) = v19;
  sub_1C8CA7498(*(void *)(v19 + 16) - 1);
  sub_1C8CA7498(*(void *)(*(void *)(a4 + 8) + 16) - 1);
  uint64_t v20 = swift_bridgeObjectRetain();
  sub_1C8CA67D4(v20);
  sub_1C8CA6060((uint64_t)"}\n", 2, v21);
  uint64_t v22 = v26[2];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C8CA469C(v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
}

uint64_t sub_1C8D32844(unsigned char *__src, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 <= 14) {
    return sub_1C8CAA92C(__src, &__src[a2]);
  }
  sub_1C8D88150();
  swift_allocObject();
  sub_1C8D88100();
  if ((unint64_t)a2 < 0x7FFFFFFF) {
    return a2 << 32;
  }
  sub_1C8D88190();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a2;
  return result;
}

unint64_t sub_1C8D328F8(unint64_t result)
{
  uint64_t v3 = v2;
  uint64_t v75 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = *(void *)(result + 8);
  *(void *)(result + 16) = *(void *)result;
  *(void *)(result + 24) = 0;
  if (v4 < 1) {
    return result;
  }
  uint64_t v5 = v1;
  BOOL v6 = (unsigned int **)result;
  unint64_t v72 = v1 + 1;
  uint64_t v7 = ": ";
  while (2)
  {
    uint64_t result = sub_1C8CA91C4();
    if (v3) {
      return result;
    }
    if (result > 0xFFFFFFFE || (result & 0xFFFFFFF8) == 0 || (result & 7) >= 6)
    {
      sub_1C8D0E090();
      swift_allocError();
      char v70 = 3;
      goto LABEL_60;
    }
    switch(result & 7)
    {
      case 0uLL:
        *((unsigned char *)v6 + 33) = 0;
        unint64_t v8 = result >> 3;
        v6[5] = (unsigned int *)(result >> 3);
        uint64_t v9 = swift_bridgeObjectRetain();
        sub_1C8CA67D4(v9);
        sub_1C8D5C98C(v8);
        sub_1C8CA6060((uint64_t)v7, 2, v10);
        unint64_t v11 = sub_1C8CA91C4();
        *((unsigned char *)v6 + 32) = 1;
        sub_1C8D5C98C(v11);
        goto LABEL_26;
      case 1uLL:
        *((unsigned char *)v6 + 33) = 1;
        unint64_t v25 = result >> 3;
        v6[5] = (unsigned int *)(result >> 3);
        uint64_t v26 = swift_bridgeObjectRetain();
        sub_1C8CA67D4(v26);
        sub_1C8D5C98C(v25);
        sub_1C8CA6060((uint64_t)v7, 2, v27);
        uint64_t v28 = (uint64_t)v6[1];
        if (v28 <= 7) {
          goto LABEL_62;
        }
        unint64_t v29 = *(void *)*v6;
        uint64_t v30 = (unsigned __int8 *)(v28 - 8);
        *v6 += 2;
        v6[1] = (unsigned int *)v30;
        *((unsigned char *)v6 + 32) = 1;
        uint64_t v31 = 16;
        goto LABEL_25;
      case 2uLL:
        *((unsigned char *)v6 + 33) = 2;
        unint64_t v12 = result >> 3;
        v6[5] = (unsigned int *)(result >> 3);
        uint64_t v13 = swift_bridgeObjectRetain();
        sub_1C8CA67D4(v13);
        sub_1C8D5C98C(v12);
        long long v74 = xmmword_1C8D8AD80;
        unint64_t v14 = sub_1C8CA91C4();
        unint64_t v15 = (unint64_t)v6[1];
        if ((v15 & 0x8000000000000000) != 0) {
          goto LABEL_64;
        }
        uint64_t v16 = v14;
        BOOL v17 = v15 >= v14;
        uint64_t v18 = (unsigned int *)(v15 - v14);
        if (!v17)
        {
          sub_1C8D0E090();
          swift_allocError();
          *uint64_t v71 = 1;
          swift_willThrow();
          return sub_1C8CA3D5C(v74, *((unint64_t *)&v74 + 1));
        }
        uint64_t v19 = (unint64_t *)*v6;
        *BOOL v6 = (unsigned int *)((char *)*v6 + v16);
        v6[1] = v18;
        uint64_t v20 = sub_1C8D32844(v19, v16);
        *(void *)&long long v74 = v20;
        *((void *)&v74 + 1) = v21;
        *((unsigned char *)v6 + 32) = 1;
        uint64_t v22 = v20;
        unint64_t v23 = v21;
        switch(v21 >> 62)
        {
          case 1uLL:
            uint64_t v62 = (v20 >> 32) - (int)v20;
            if (v20 >> 32 < (int)v20) {
              goto LABEL_65;
            }
            swift_retain();
            sub_1C8CA3CF8(v22, v23);
            uint64_t v63 = sub_1C8D88110();
            if (!v63) {
              goto LABEL_48;
            }
            uint64_t v64 = sub_1C8D88140();
            if (__OFSUB__((int)v22, v64)) {
              goto LABEL_68;
            }
            v63 += (int)v22 - v64;
LABEL_48:
            uint64_t v65 = sub_1C8D88130();
            if (v65 >= v62) {
              uint64_t v66 = (v22 >> 32) - (int)v22;
            }
            else {
              uint64_t v66 = v65;
            }
            uint64_t v67 = v63 + v66;
            if (v63) {
              uint64_t v68 = v67;
            }
            else {
              uint64_t v68 = 0;
            }
            sub_1C8D2DED8(v63, v68, (uint64_t)v6, (uint64_t *)&v74, v5);
            uint64_t v3 = 0;
            sub_1C8CA3D5C(v22, v23);
            break;
          case 2uLL:
            uint64_t v52 = *(void *)(v20 + 16);
            uint64_t v53 = *(void *)(v20 + 24);
            sub_1C8CA3CF8(v20, v21);
            swift_retain();
            swift_retain();
            uint64_t v54 = sub_1C8D88110();
            if (!v54) {
              goto LABEL_36;
            }
            uint64_t v55 = sub_1C8D88140();
            if (__OFSUB__(v52, v55)) {
              goto LABEL_67;
            }
            v54 += v52 - v55;
LABEL_36:
            BOOL v56 = __OFSUB__(v53, v52);
            uint64_t v57 = v53 - v52;
            if (v56) {
              goto LABEL_66;
            }
            uint64_t v58 = sub_1C8D88130();
            if (v58 >= v57) {
              uint64_t v59 = v57;
            }
            else {
              uint64_t v59 = v58;
            }
            uint64_t v60 = v54 + v59;
            if (v54) {
              uint64_t v61 = v60;
            }
            else {
              uint64_t v61 = 0;
            }
            sub_1C8D2DED8(v54, v61, (uint64_t)v6, (uint64_t *)&v74, v5);
            uint64_t v3 = 0;
            swift_release();
            swift_release();
            break;
          case 3uLL:
            memset(v73, 0, 14);
            uint64_t v24 = (char *)v73;
            goto LABEL_57;
          default:
            v73[0] = v20;
            LOWORD(v73[1]) = v21;
            BYTE2(v73[1]) = BYTE2(v21);
            BYTE3(v73[1]) = BYTE3(v21);
            BYTE4(v73[1]) = BYTE4(v21);
            BYTE5(v73[1]) = BYTE5(v21);
            uint64_t v24 = (char *)v73 + BYTE6(v21);
LABEL_57:
            sub_1C8D2DED8((uint64_t)v73, (uint64_t)v24, (uint64_t)v6, (uint64_t *)&v74, v5);
            sub_1C8CA3D5C(v22, v23);
            uint64_t result = sub_1C8CA3D5C(v22, v23);
            uint64_t v7 = ": ";
            goto LABEL_31;
        }
        sub_1C8CA3D5C(v22, v23);
        uint64_t result = sub_1C8CA3D5C(v22, v23);
        uint64_t v7 = ": ";
        goto LABEL_31;
      case 3uLL:
        *((unsigned char *)v6 + 33) = 3;
        unint64_t v32 = result >> 3;
        v6[5] = (unsigned int *)(result >> 3);
        uint64_t v33 = swift_bridgeObjectRetain();
        sub_1C8CA67D4(v33);
        sub_1C8D5C98C(v32);
        sub_1C8CA6060((uint64_t)" {\n", 3, v34);
        unint64_t v35 = v5[1];
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v5[1] = v35;
        uint64_t v37 = v7;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v35 = sub_1C8D5EB50(0, *((void *)v35 + 2) + 1, 1, v35);
          *unint64_t v72 = v35;
        }
        unint64_t v39 = *((void *)v35 + 2);
        unint64_t v38 = *((void *)v35 + 3);
        unint64_t v40 = v39 + 1;
        if (v39 >= v38 >> 1) {
          unint64_t v35 = sub_1C8D5EB50((char *)(v38 > 1), v39 + 1, 1, v35);
        }
        *((void *)v35 + 2) = v40;
        v35[v39 + 32] = 32;
        *unint64_t v72 = v35;
        unint64_t v41 = *((void *)v35 + 3);
        if ((uint64_t)(v39 + 2) > (uint64_t)(v41 >> 1)) {
          unint64_t v35 = sub_1C8D5EB50((char *)(v41 > 1), v39 + 2, 1, v35);
        }
        *((void *)v35 + 2) = v39 + 2;
        v35[v40 + 32] = 32;
        v5[1] = v35;
        sub_1C8D328F8(v6);
        sub_1C8CA7498(*((void *)v5[1] + 2) - 1);
        sub_1C8CA7498(*((void *)v5[1] + 2) - 1);
        uint64_t v42 = swift_bridgeObjectRetain();
        sub_1C8CA67D4(v42);
        uint64_t result = sub_1C8CA6060((uint64_t)"}\n", 2, v43);
        uint64_t v7 = v37;
        goto LABEL_31;
      case 4uLL:
        *((unsigned char *)v6 + 33) = 4;
        v6[5] = (unsigned int *)(result >> 3);
        return result;
      case 5uLL:
        *((unsigned char *)v6 + 33) = 5;
        unint64_t v44 = result >> 3;
        v6[5] = (unsigned int *)(result >> 3);
        uint64_t v45 = swift_bridgeObjectRetain();
        sub_1C8CA67D4(v45);
        sub_1C8D5C98C(v44);
        sub_1C8CA6060((uint64_t)v7, 2, v46);
        uint64_t v47 = (uint64_t)v6[1];
        if (v47 > 3)
        {
          unint64_t v29 = **v6;
          uint64_t v30 = (unsigned __int8 *)(v47 - 4);
          ++*v6;
          v6[1] = (unsigned int *)v30;
          *((unsigned char *)v6 + 32) = 1;
          uint64_t v31 = 8;
LABEL_25:
          sub_1C8D5CBDC(v29, v31, v30);
LABEL_26:
          char v48 = *v5;
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v5 = v48;
          if ((result & 1) == 0)
          {
            uint64_t result = (unint64_t)sub_1C8D5EB50(0, *((void *)v48 + 2) + 1, 1, v48);
            char v48 = (char *)result;
            *uint64_t v5 = (char *)result;
          }
          unint64_t v50 = *((void *)v48 + 2);
          unint64_t v49 = *((void *)v48 + 3);
          if (v50 >= v49 >> 1)
          {
            uint64_t result = (unint64_t)sub_1C8D5EB50((char *)(v49 > 1), v50 + 1, 1, v48);
            char v48 = (char *)result;
          }
          *((void *)v48 + 2) = v50 + 1;
          v48[v50 + 32] = 10;
          *uint64_t v5 = v48;
LABEL_31:
          uint64_t v51 = (uint64_t)v6[1];
          _OWORD v6[2] = *v6;
          v6[3] = 0;
          if (v51 < 1) {
            return result;
          }
          continue;
        }
LABEL_62:
        sub_1C8D0E090();
        swift_allocError();
        char v70 = 1;
LABEL_60:
        *uint64_t v69 = v70;
        return swift_willThrow();
      default:
        __break(1u);
LABEL_64:
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
        return result;
    }
  }
}

uint64_t sub_1C8D330E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D32138(a1, a2, a3, v3[2], v3[3], v3[4], v3[5]);
}

uint64_t sub_1C8D33108(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D31EC8(a1, a2, a3, v3[2], v3[3], v3[4], v3[5]);
}

uint64_t sub_1C8D33128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D31D40(a1, a2, a3, v3[2], v3[3], v3[4], v3[5]);
}

uint64_t sub_1C8D33148(uint64_t a1)
{
  return sub_1C8D5C854(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C8D33174(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C8D331D0(uint64_t a1, unint64_t a2)
{
  return sub_1C8D32320(a1, a2);
}

uint64_t sub_1C8D331E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __int16 a4@<W3>, uint64_t a5@<X8>)
{
  *(void *)(a5 + 64) = 0;
  *(_WORD *)(a5 + 72) = 256;
  *(_OWORD *)(a5 + 80) = 0u;
  *(_OWORD *)(a5 + 96) = 0u;
  *(_OWORD *)(a5 + 112) = 0u;
  sub_1C8D3354C(a3, a5);
  *(unsigned char *)(a5 + 72) = a4;
  *(unsigned char *)(a5 + 73) = HIBYTE(a4) & 1;
  uint64_t v10 = swift_conformsToProtocol2();
  if (v10) {
    uint64_t v11 = v10;
  }
  else {
    uint64_t v11 = 0;
  }
  if (v10) {
    uint64_t v12 = a1;
  }
  else {
    uint64_t v12 = 0;
  }
  if (v12)
  {
    (*(void (**)(long long *__return_ptr))(v11 + 8))(&v18);
    sub_1C8D335A8(a3);
    long long v17 = v18;
    uint64_t v13 = v19;
    uint64_t v14 = v20;
    uint64_t result = sub_1C8CA469C(*(void *)(a5 + 80));
    *(_OWORD *)(a5 + 80) = v17;
    *(void *)(a5 + 96) = v13;
    *(void *)(a5 + 104) = v14;
    *(void *)(a5 + 112) = a1;
    *(void *)(a5 + 120) = a2;
  }
  else
  {
    sub_1C8CB47EC();
    swift_allocError();
    *uint64_t v16 = 6;
    swift_willThrow();
    sub_1C8D335A8(a3);
    return sub_1C8D335FC(a5);
  }
  return result;
}

uint64_t sub_1C8D33324()
{
  uint64_t v2 = v0;
  char v3 = *(unsigned char *)(v0 + 73);
  if ((v3 & 1) == 0)
  {
    uint64_t v4 = *(unsigned __int8 **)(v0 + 40);
    if (v4 != *(unsigned __int8 **)(v0 + 48) && *v4 == *(unsigned __int8 *)(v0 + 72))
    {
      *(void *)(v0 + 40) = v4 + 1;
      sub_1C8CB2098();
      return 0;
    }
  }
  uint64_t v5 = *(void *)(v0 + 64);
  if (v5 >= 1)
  {
    BOOL v6 = *(unsigned __int8 **)(v0 + 40);
    if (v6 != *(unsigned __int8 **)(v0 + 48))
    {
      int v7 = *v6;
      if (v7 == 59 || v7 == 44)
      {
        *(void *)(v0 + 40) = v6 + 1;
        sub_1C8CB2098();
      }
    }
  }
  uint64_t result = (uint64_t)sub_1C8CB42BC();
  if (v1) {
    return v0;
  }
  uint64_t v10 = v9;
  if (!v9) {
    goto LABEL_19;
  }
  if (!*(void *)(v0 + 24))
  {
    swift_bridgeObjectRelease();
LABEL_25:
    sub_1C8CB47EC();
    swift_allocError();
    char v20 = 7;
    goto LABEL_26;
  }
  uint64_t v11 = result;
  sub_1C8CA425C(v2, (uint64_t)&v21);
  uint64_t v12 = v23;
  uint64_t v5 = v24;
  __swift_project_boxed_opaque_existential_1(&v21, v23);
  uint64_t result = *(void *)(v2 + 112);
  if (!result)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v0 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 16))(result, *(void *)(v2 + 120), v11, v10, v12, v5);
  char v3 = v13;
  swift_bridgeObjectRelease();
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  if (v3) {
    goto LABEL_25;
  }
  uint64_t v14 = *(void *)(v2 + 64);
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (!v15) {
    goto LABEL_23;
  }
  __break(1u);
LABEL_19:
  if (*(void *)(v2 + 80))
  {
    uint64_t v17 = *(void *)(v2 + 104);
    uint64_t v21 = *(void *)(v2 + 80);
    long long v22 = *(_OWORD *)(v2 + 88);
    uint64_t v23 = v17;
    uint64_t v0 = v2;
    uint64_t result = sub_1C8CB438C((uint64_t)&v21);
    if ((v18 & 1) == 0)
    {
      uint64_t v16 = v5 + 1;
      if (!__OFADD__(v5, 1))
      {
        uint64_t v0 = result;
LABEL_23:
        *(void *)(v2 + 64) = v16;
        return v0;
      }
      __break(1u);
      goto LABEL_31;
    }
    if (v3) {
      return 0;
    }
    sub_1C8CB47EC();
    swift_allocError();
    char v20 = 3;
LABEL_26:
    *uint64_t v19 = v20;
    swift_willThrow();
    return v0;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1C8D3354C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C8D335A8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C8D335FC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C8D3362C(_DWORD *a1)
{
  sub_1C8CB2098();
  uint64_t v4 = *(unsigned char **)(v1 + 40);
  if (v4 == *(unsigned char **)(v1 + 48) || *v4 != 58)
  {
    sub_1C8CB47EC();
    swift_allocError();
    *int v7 = 0;
    return swift_willThrow();
  }
  else
  {
    *(void *)(v1 + 40) = v4 + 1;
    sub_1C8CB2098();
    uint64_t result = sub_1C8CB3938();
    if (!v2) {
      *a1 = v6;
    }
  }
  return result;
}

uint64_t sub_1C8D336C8(uint64_t a1)
{
  sub_1C8CB2098();
  uint64_t v4 = *(unsigned char **)(v1 + 40);
  if (v4 == *(unsigned char **)(v1 + 48) || *v4 != 58)
  {
    sub_1C8CB47EC();
    swift_allocError();
    *int v7 = 0;
    return swift_willThrow();
  }
  else
  {
    *(void *)(v1 + 40) = v4 + 1;
    sub_1C8CB2098();
    uint64_t result = sub_1C8CB3938();
    if (!v2)
    {
      *(_DWORD *)a1 = v6;
      *(unsigned char *)(a1 + 4) = 0;
    }
  }
  return result;
}

void sub_1C8D33768(char **a1)
{
  sub_1C8CB2098();
  uint64_t v4 = *(unsigned __int8 **)(v1 + 40);
  uint64_t v5 = *(unsigned __int8 **)(v1 + 48);
  if (v4 == v5 || *v4 != 58) {
    goto LABEL_97;
  }
  *(void *)(v1 + 40) = v4 + 1;
  sub_1C8CB2098();
  int v6 = *(unsigned __int8 **)(v1 + 40);
  if (v6 == v5 || *v6 != 91)
  {
    sub_1C8CB3938();
    if (!v2)
    {
      int v47 = v46;
      char v48 = *a1;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v48;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        char v48 = sub_1C8D5F24C(0, *((void *)v48 + 2) + 1, 1, v48);
        *a1 = v48;
      }
      unint64_t v51 = *((void *)v48 + 2);
      unint64_t v50 = *((void *)v48 + 3);
      if (v51 >= v50 >> 1) {
        char v48 = sub_1C8D5F24C((char *)(v50 > 1), v51 + 1, 1, v48);
      }
      *((void *)v48 + 2) = v51 + 1;
      *(_DWORD *)&v48[4 * v51 + 32] = v47;
      *a1 = v48;
    }
    return;
  }
  *(void *)(v1 + 40) = v6 + 1;
  sub_1C8CB2098();
  char v7 = 1;
  while (1)
  {
    unint64_t v8 = *(unsigned __int8 **)(v1 + 40);
    if (v8 != v5) {
      break;
    }
    if ((v7 & 1) == 0) {
      goto LABEL_97;
    }
LABEL_30:
    double v16 = COERCE_DOUBLE(sub_1C8CB3614());
    if ((v17 & 1) == 0)
    {
      float v18 = v16;
      goto LABEL_69;
    }
    char v20 = *(unsigned __int8 **)(v1 + 40);
    uint64_t v19 = *(unsigned __int8 **)(v1 + 48);
    if (v20 == v19) {
      goto LABEL_107;
    }
    unsigned __int8 v21 = *v20;
    if ((*v20 - 91) >= 0xE6u) {
      unsigned __int8 v21 = *v20 + 32;
    }
    if (byte_1F234FFF0 != v21) {
      goto LABEL_62;
    }
    *(void *)(v1 + 40) = v20 + 1;
    if (v20 + 1 == v19) {
      goto LABEL_62;
    }
    unsigned __int8 v22 = v20[1];
    if ((v22 - 91) >= 0xE6u) {
      v22 += 32;
    }
    if (byte_1F234FFF1 != v22) {
      goto LABEL_62;
    }
    *(void *)(v1 + 40) = v20 + 2;
    if (v20 + 2 == v19) {
      goto LABEL_62;
    }
    unsigned __int8 v23 = v20[2];
    if ((v23 - 91) >= 0xE6u) {
      v23 += 32;
    }
    if (byte_1F234FFF2 != v23) {
      goto LABEL_62;
    }
    uint64_t v24 = v20 + 3;
    *(void *)(v1 + 40) = v20 + 3;
    if (v20 + 3 == v19)
    {
LABEL_96:
      float v18 = NAN;
      goto LABEL_69;
    }
    unsigned int v25 = *v24;
    if ((v25 & 0xFFFFFFDF) - 91 <= 0xFFFFFFE5)
    {
      while (1)
      {
        float v18 = NAN;
        if (v25 > 0x23) {
          break;
        }
        if (((1 << v25) & 0x100002600) != 0)
        {
          *(void *)(v1 + 40) = ++v24;
        }
        else
        {
          if (v25 != 35) {
            break;
          }
          *(void *)(v1 + 40) = v24 + 1;
          if (v24 + 1 == v19) {
            goto LABEL_96;
          }
          int v26 = v24[1];
          v24 += 2;
          *(void *)(v1 + 40) = v24;
          if (v26 != 10 && v26 != 13)
          {
            while (v24 != v19)
            {
              int v28 = *v24++;
              int v27 = v28;
              *(void *)(v1 + 40) = v24;
              if (v28 == 10 || v27 == 13) {
                goto LABEL_49;
              }
            }
            goto LABEL_96;
          }
        }
LABEL_49:
        if (v24 == v19) {
          goto LABEL_96;
        }
        unsigned int v25 = *v24;
      }
    }
    else
    {
LABEL_62:
      *(void *)(v1 + 40) = v20;
      int v30 = *v20;
      if (v30 == 45) {
        *(void *)(v1 + 40) = v20 + 1;
      }
      if ((sub_1C8CB37E8((uint64_t)&unk_1F234FFF8) & 1) == 0 && (sub_1C8CB37E8((uint64_t)&unk_1F2350020) & 1) == 0)
      {
LABEL_107:
        sub_1C8CB47EC();
        swift_allocError();
        *uint64_t v52 = 1;
        goto LABEL_98;
      }
      if (v30 == 45) {
        float v18 = -INFINITY;
      }
      else {
        float v18 = INFINITY;
      }
    }
LABEL_69:
    uint64_t v31 = *a1;
    char v32 = swift_isUniquelyReferenced_nonNull_native();
    *a1 = v31;
    if ((v32 & 1) == 0)
    {
      uint64_t v31 = sub_1C8D5F24C(0, *((void *)v31 + 2) + 1, 1, v31);
      *a1 = v31;
    }
    unint64_t v34 = *((void *)v31 + 2);
    unint64_t v33 = *((void *)v31 + 3);
    unint64_t v35 = v34 + 1;
    if (v34 >= v33 >> 1)
    {
      unint64_t v44 = sub_1C8D5F24C((char *)(v33 > 1), v34 + 1, 1, v31);
      unint64_t v35 = v34 + 1;
      uint64_t v31 = v44;
    }
    char v7 = 0;
    *((void *)v31 + 2) = v35;
    *(float *)&v31[4 * v34 + 32] = v18;
    *a1 = v31;
  }
  unsigned int v9 = *v8;
  if (v9 == 93)
  {
    *(void *)(v1 + 40) = v8 + 1;
    sub_1C8CB2098();
    return;
  }
  if (v7) {
    goto LABEL_30;
  }
  if (v9 > 0x23)
  {
LABEL_74:
    if (v8 == v5 || *v8 != 44) {
      goto LABEL_97;
    }
    uint64_t v36 = v8 + 1;
    *(void *)(v1 + 40) = v8 + 1;
    if (v8 + 1 != v5)
    {
      while (1)
      {
        uint64_t v38 = *v36;
        if (v38 > 0x23) {
          break;
        }
        if (((1 << v38) & 0x100002600) != 0)
        {
          uint64_t v37 = v36 + 1;
          *(void *)(v1 + 40) = v36 + 1;
        }
        else
        {
          if (v38 != 35) {
            goto LABEL_30;
          }
          *(void *)(v1 + 40) = v36 + 1;
          if (v36 + 1 == v5) {
            goto LABEL_30;
          }
          int v39 = v36[1];
          uint64_t v37 = v36 + 2;
          *(void *)(v1 + 40) = v36 + 2;
          if (v39 != 10 && v39 != 13)
          {
            if (v37 == v5) {
              goto LABEL_30;
            }
            int v40 = v36[2];
            uint64_t v37 = v36 + 3;
            *(void *)(v1 + 40) = v36 + 3;
            if (v40 != 10 && v40 != 13)
            {
              while (v37 != v5)
              {
                int v42 = *v37++;
                int v41 = v42;
                *(void *)(v1 + 40) = v37;
                if (v42 == 10 || v41 == 13) {
                  goto LABEL_79;
                }
              }
              goto LABEL_30;
            }
          }
        }
LABEL_79:
        uint64_t v36 = v37;
        if (v37 == v5) {
          goto LABEL_30;
        }
      }
    }
    goto LABEL_30;
  }
  while (1)
  {
    if (((1 << v9) & 0x100002600) != 0)
    {
      uint64_t v10 = v8 + 1;
      *(void *)(v1 + 40) = v8 + 1;
      goto LABEL_12;
    }
    if (v9 != 35) {
      goto LABEL_74;
    }
    *(void *)(v1 + 40) = v8 + 1;
    if (v8 + 1 == v5) {
      goto LABEL_97;
    }
    int v11 = v8[1];
    uint64_t v10 = v8 + 2;
    *(void *)(v1 + 40) = v8 + 2;
    if (v11 != 10 && v11 != 13)
    {
      if (v10 == v5) {
        goto LABEL_97;
      }
      int v12 = v8[2];
      uint64_t v10 = v8 + 3;
      *(void *)(v1 + 40) = v8 + 3;
      if (v12 != 10 && v12 != 13) {
        break;
      }
    }
LABEL_12:
    if (v10 == v5) {
      goto LABEL_97;
    }
    unsigned int v9 = *v10;
    unint64_t v8 = v10;
    if (v9 > 0x23) {
      goto LABEL_74;
    }
  }
  while (v10 != v5)
  {
    int v14 = *v10++;
    int v13 = v14;
    *(void *)(v1 + 40) = v10;
    if (v14 == 10 || v13 == 13) {
      goto LABEL_12;
    }
  }
LABEL_97:
  sub_1C8CB47EC();
  swift_allocError();
  *uint64_t v45 = 0;
LABEL_98:
  swift_willThrow();
}

uint64_t sub_1C8D33D04(void *a1)
{
  sub_1C8CB2098();
  uint64_t v4 = *(unsigned char **)(v1 + 40);
  if (v4 == *(unsigned char **)(v1 + 48) || *v4 != 58)
  {
    sub_1C8CB47EC();
    swift_allocError();
    *char v7 = 0;
    return swift_willThrow();
  }
  else
  {
    *(void *)(v1 + 40) = v4 + 1;
    sub_1C8CB2098();
    uint64_t result = sub_1C8CB39CC();
    if (!v2) {
      *a1 = v6;
    }
  }
  return result;
}

uint64_t sub_1C8D33DA0(uint64_t a1)
{
  sub_1C8CB2098();
  uint64_t v4 = *(unsigned char **)(v1 + 40);
  if (v4 == *(unsigned char **)(v1 + 48) || *v4 != 58)
  {
    sub_1C8CB47EC();
    swift_allocError();
    *char v7 = 0;
    return swift_willThrow();
  }
  else
  {
    *(void *)(v1 + 40) = v4 + 1;
    sub_1C8CB2098();
    uint64_t result = sub_1C8CB39CC();
    if (!v2)
    {
      *(void *)a1 = v6;
      *(unsigned char *)(a1 + 8) = 0;
    }
  }
  return result;
}

void sub_1C8D33E40(char **a1)
{
  sub_1C8CB2098();
  uint64_t v4 = *(unsigned __int8 **)(v1 + 40);
  uint64_t v5 = *(unsigned __int8 **)(v1 + 48);
  if (v4 == v5 || *v4 != 58) {
    goto LABEL_97;
  }
  *(void *)(v1 + 40) = v4 + 1;
  sub_1C8CB2098();
  uint64_t v6 = *(unsigned __int8 **)(v1 + 40);
  if (v6 == v5 || *v6 != 91)
  {
    sub_1C8CB39CC();
    if (!v2)
    {
      uint64_t v47 = v46;
      char v48 = *a1;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v48;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        char v48 = sub_1C8D5F360(0, *((void *)v48 + 2) + 1, 1, v48);
        *a1 = v48;
      }
      unint64_t v51 = *((void *)v48 + 2);
      unint64_t v50 = *((void *)v48 + 3);
      if (v51 >= v50 >> 1) {
        char v48 = sub_1C8D5F360((char *)(v50 > 1), v51 + 1, 1, v48);
      }
      *((void *)v48 + 2) = v51 + 1;
      *(void *)&v48[8 * v51 + 32] = v47;
      *a1 = v48;
    }
    return;
  }
  *(void *)(v1 + 40) = v6 + 1;
  sub_1C8CB2098();
  char v7 = 1;
  while (1)
  {
    unint64_t v8 = *(unsigned __int8 **)(v1 + 40);
    if (v8 != v5) {
      break;
    }
    if ((v7 & 1) == 0) {
      goto LABEL_97;
    }
LABEL_30:
    double v16 = sub_1C8CB3614();
    if ((v17 & 1) == 0)
    {
      double v18 = *(double *)&v16;
      goto LABEL_69;
    }
    char v20 = *(unsigned __int8 **)(v1 + 40);
    uint64_t v19 = *(unsigned __int8 **)(v1 + 48);
    if (v20 == v19) {
      goto LABEL_107;
    }
    unsigned __int8 v21 = *v20;
    if ((*v20 - 91) >= 0xE6u) {
      unsigned __int8 v21 = *v20 + 32;
    }
    if (byte_1F2350068 != v21) {
      goto LABEL_62;
    }
    *(void *)(v1 + 40) = v20 + 1;
    if (v20 + 1 == v19) {
      goto LABEL_62;
    }
    unsigned __int8 v22 = v20[1];
    if ((v22 - 91) >= 0xE6u) {
      v22 += 32;
    }
    if (byte_1F2350069 != v22) {
      goto LABEL_62;
    }
    *(void *)(v1 + 40) = v20 + 2;
    if (v20 + 2 == v19) {
      goto LABEL_62;
    }
    unsigned __int8 v23 = v20[2];
    if ((v23 - 91) >= 0xE6u) {
      v23 += 32;
    }
    if (byte_1F235006A != v23) {
      goto LABEL_62;
    }
    uint64_t v24 = v20 + 3;
    *(void *)(v1 + 40) = v20 + 3;
    if (v20 + 3 == v19)
    {
LABEL_96:
      double v18 = NAN;
      goto LABEL_69;
    }
    unsigned int v25 = *v24;
    if ((v25 & 0xFFFFFFDF) - 91 <= 0xFFFFFFE5)
    {
      while (1)
      {
        double v18 = NAN;
        if (v25 > 0x23) {
          break;
        }
        if (((1 << v25) & 0x100002600) != 0)
        {
          *(void *)(v1 + 40) = ++v24;
        }
        else
        {
          if (v25 != 35) {
            break;
          }
          *(void *)(v1 + 40) = v24 + 1;
          if (v24 + 1 == v19) {
            goto LABEL_96;
          }
          int v26 = v24[1];
          v24 += 2;
          *(void *)(v1 + 40) = v24;
          if (v26 != 10 && v26 != 13)
          {
            while (v24 != v19)
            {
              int v28 = *v24++;
              int v27 = v28;
              *(void *)(v1 + 40) = v24;
              if (v28 == 10 || v27 == 13) {
                goto LABEL_49;
              }
            }
            goto LABEL_96;
          }
        }
LABEL_49:
        if (v24 == v19) {
          goto LABEL_96;
        }
        unsigned int v25 = *v24;
      }
    }
    else
    {
LABEL_62:
      *(void *)(v1 + 40) = v20;
      int v30 = *v20;
      if (v30 == 45) {
        *(void *)(v1 + 40) = v20 + 1;
      }
      if ((sub_1C8CB37E8((uint64_t)&unk_1F2350070) & 1) == 0 && (sub_1C8CB37E8((uint64_t)&unk_1F2350098) & 1) == 0)
      {
LABEL_107:
        sub_1C8CB47EC();
        swift_allocError();
        *uint64_t v52 = 1;
        goto LABEL_98;
      }
      if (v30 == 45) {
        double v18 = -INFINITY;
      }
      else {
        double v18 = INFINITY;
      }
    }
LABEL_69:
    uint64_t v31 = *a1;
    char v32 = swift_isUniquelyReferenced_nonNull_native();
    *a1 = v31;
    if ((v32 & 1) == 0)
    {
      uint64_t v31 = sub_1C8D5F360(0, *((void *)v31 + 2) + 1, 1, v31);
      *a1 = v31;
    }
    unint64_t v34 = *((void *)v31 + 2);
    unint64_t v33 = *((void *)v31 + 3);
    unint64_t v35 = v34 + 1;
    if (v34 >= v33 >> 1)
    {
      unint64_t v44 = sub_1C8D5F360((char *)(v33 > 1), v34 + 1, 1, v31);
      unint64_t v35 = v34 + 1;
      uint64_t v31 = v44;
    }
    char v7 = 0;
    *((void *)v31 + 2) = v35;
    *(double *)&v31[8 * v34 + 32] = v18;
    *a1 = v31;
  }
  unsigned int v9 = *v8;
  if (v9 == 93)
  {
    *(void *)(v1 + 40) = v8 + 1;
    sub_1C8CB2098();
    return;
  }
  if (v7) {
    goto LABEL_30;
  }
  if (v9 > 0x23)
  {
LABEL_74:
    if (v8 == v5 || *v8 != 44) {
      goto LABEL_97;
    }
    uint64_t v36 = v8 + 1;
    *(void *)(v1 + 40) = v8 + 1;
    if (v8 + 1 != v5)
    {
      while (1)
      {
        uint64_t v38 = *v36;
        if (v38 > 0x23) {
          break;
        }
        if (((1 << v38) & 0x100002600) != 0)
        {
          uint64_t v37 = v36 + 1;
          *(void *)(v1 + 40) = v36 + 1;
        }
        else
        {
          if (v38 != 35) {
            goto LABEL_30;
          }
          *(void *)(v1 + 40) = v36 + 1;
          if (v36 + 1 == v5) {
            goto LABEL_30;
          }
          int v39 = v36[1];
          uint64_t v37 = v36 + 2;
          *(void *)(v1 + 40) = v36 + 2;
          if (v39 != 10 && v39 != 13)
          {
            if (v37 == v5) {
              goto LABEL_30;
            }
            int v40 = v36[2];
            uint64_t v37 = v36 + 3;
            *(void *)(v1 + 40) = v36 + 3;
            if (v40 != 10 && v40 != 13)
            {
              while (v37 != v5)
              {
                int v42 = *v37++;
                int v41 = v42;
                *(void *)(v1 + 40) = v37;
                if (v42 == 10 || v41 == 13) {
                  goto LABEL_79;
                }
              }
              goto LABEL_30;
            }
          }
        }
LABEL_79:
        uint64_t v36 = v37;
        if (v37 == v5) {
          goto LABEL_30;
        }
      }
    }
    goto LABEL_30;
  }
  while (1)
  {
    if (((1 << v9) & 0x100002600) != 0)
    {
      uint64_t v10 = v8 + 1;
      *(void *)(v1 + 40) = v8 + 1;
      goto LABEL_12;
    }
    if (v9 != 35) {
      goto LABEL_74;
    }
    *(void *)(v1 + 40) = v8 + 1;
    if (v8 + 1 == v5) {
      goto LABEL_97;
    }
    int v11 = v8[1];
    uint64_t v10 = v8 + 2;
    *(void *)(v1 + 40) = v8 + 2;
    if (v11 != 10 && v11 != 13)
    {
      if (v10 == v5) {
        goto LABEL_97;
      }
      int v12 = v8[2];
      uint64_t v10 = v8 + 3;
      *(void *)(v1 + 40) = v8 + 3;
      if (v12 != 10 && v12 != 13) {
        break;
      }
    }
LABEL_12:
    if (v10 == v5) {
      goto LABEL_97;
    }
    unsigned int v9 = *v10;
    unint64_t v8 = v10;
    if (v9 > 0x23) {
      goto LABEL_74;
    }
  }
  while (v10 != v5)
  {
    int v14 = *v10++;
    int v13 = v14;
    *(void *)(v1 + 40) = v10;
    if (v14 == 10 || v13 == 13) {
      goto LABEL_12;
    }
  }
LABEL_97:
  sub_1C8CB47EC();
  swift_allocError();
  *uint64_t v45 = 0;
LABEL_98:
  swift_willThrow();
}

void sub_1C8D343D8(_DWORD *a1)
{
  sub_1C8CB2098();
  uint64_t v4 = *(unsigned char **)(v1 + 40);
  if (v4 == *(unsigned char **)(v1 + 48) || *v4 != 58)
  {
    char v6 = 0;
  }
  else
  {
    *(void *)(v1 + 40) = v4 + 1;
    sub_1C8CB2098();
    sub_1C8CB2BE8();
    if (v2) {
      return;
    }
    if (v5 == (int)v5)
    {
      *a1 = v5;
      return;
    }
    char v6 = 1;
  }
  sub_1C8CB47EC();
  swift_allocError();
  *char v7 = v6;
  swift_willThrow();
}

void sub_1C8D34488(uint64_t a1)
{
  sub_1C8CB2098();
  uint64_t v4 = *(unsigned char **)(v1 + 40);
  if (v4 == *(unsigned char **)(v1 + 48) || *v4 != 58)
  {
    char v6 = 0;
  }
  else
  {
    *(void *)(v1 + 40) = v4 + 1;
    sub_1C8CB2098();
    sub_1C8CB2BE8();
    if (v2) {
      return;
    }
    if (v5 == (int)v5)
    {
      *(_DWORD *)a1 = v5;
      *(unsigned char *)(a1 + 4) = 0;
      return;
    }
    char v6 = 1;
  }
  sub_1C8CB47EC();
  swift_allocError();
  *char v7 = v6;
  swift_willThrow();
}

void sub_1C8D3453C(char **a1)
{
  sub_1C8CB2098();
  uint64_t v4 = *(unsigned __int8 **)(v1 + 40);
  uint64_t v5 = *(unsigned __int8 **)(v1 + 48);
  if (v4 == v5 || *v4 != 58)
  {
LABEL_60:
    sub_1C8CB47EC();
    swift_allocError();
    *int v30 = 0;
LABEL_61:
    swift_willThrow();
    return;
  }
  *(void *)(v1 + 40) = v4 + 1;
  sub_1C8CB2098();
  char v6 = *(unsigned __int8 **)(v1 + 40);
  if (v6 != v5 && *v6 == 91)
  {
    *(void *)(v1 + 40) = v6 + 1;
    sub_1C8CB2098();
    char v7 = 1;
    while (1)
    {
      unint64_t v8 = *(unsigned __int8 **)(v1 + 40);
      if (v8 == v5)
      {
        if ((v7 & 1) == 0) {
          goto LABEL_60;
        }
      }
      else
      {
        unsigned int v9 = *v8;
        if (v9 == 93)
        {
          *(void *)(v1 + 40) = v8 + 1;
          sub_1C8CB2098();
          return;
        }
        if ((v7 & 1) == 0)
        {
          for (; v9 <= 0x23; unsigned int v9 = *v8)
          {
            if (((1 << v9) & 0x100002600) != 0)
            {
              *(void *)(v1 + 40) = ++v8;
            }
            else
            {
              if (v9 != 35) {
                break;
              }
              *(void *)(v1 + 40) = v8 + 1;
              if (v8 + 1 == v5) {
                goto LABEL_60;
              }
              int v10 = v8[1];
              *(void *)(v1 + 40) = v8 + 2;
              if (v10 == 10 || v10 == 13)
              {
                v8 += 2;
              }
              else
              {
                if (v8 + 2 == v5) {
                  goto LABEL_60;
                }
                int v11 = v8[2];
                for (v8 += 3; ; ++v8)
                {
                  *(void *)(v1 + 40) = v8;
                  if (v11 == 10 || v11 == 13) {
                    break;
                  }
                  if (v8 == v5) {
                    goto LABEL_60;
                  }
                  int v12 = *v8;
                  int v11 = v12;
                }
              }
            }
            if (v8 == v5) {
              goto LABEL_60;
            }
          }
          if (v8 == v5 || *v8 != 44) {
            goto LABEL_60;
          }
          *(void *)(v1 + 40) = ++v8;
          if (v8 == v5) {
            goto LABEL_65;
          }
          while (1)
          {
            uint64_t v22 = *v8;
            if (v22 > 0x23) {
              break;
            }
            if (((1 << v22) & 0x100002600) != 0)
            {
              unsigned __int8 v21 = v8 + 1;
              *(void *)(v1 + 40) = v8 + 1;
            }
            else
            {
              if (v22 != 35) {
                break;
              }
              *(void *)(v1 + 40) = v8 + 1;
              if (v8 + 1 == v5) {
                goto LABEL_65;
              }
              int v23 = v8[1];
              unsigned __int8 v21 = v8 + 2;
              *(void *)(v1 + 40) = v8 + 2;
              if (v23 != 10 && v23 != 13)
              {
                if (v21 == v5) {
                  goto LABEL_65;
                }
                int v24 = v8[2];
                unsigned __int8 v21 = v8 + 3;
                *(void *)(v1 + 40) = v8 + 3;
                if (v24 != 10 && v24 != 13)
                {
                  while (v21 != v5)
                  {
                    int v26 = *v21++;
                    int v25 = v26;
                    *(void *)(v1 + 40) = v21;
                    if (v26 == 10 || v25 == 13) {
                      goto LABEL_46;
                    }
                  }
                  goto LABEL_65;
                }
              }
            }
LABEL_46:
            unint64_t v8 = v21;
            if (v21 == v5) {
              goto LABEL_65;
            }
          }
        }
      }
      if (v8 == v5) {
        goto LABEL_65;
      }
      if (*v8 == 45)
      {
        *(void *)(v1 + 40) = v8 + 1;
        if (v8[1] - 58 < 0xFFFFFFF6) {
          goto LABEL_65;
        }
        sub_1C8CB2970();
        if (v2) {
          return;
        }
        if (v13 < 0) {
          goto LABEL_65;
        }
        uint64_t v14 = -v13;
      }
      else
      {
        sub_1C8CB2970();
        if (v2) {
          return;
        }
        uint64_t v14 = v15;
        if (v15 < 0) {
          goto LABEL_65;
        }
      }
      if (v14 != (int)v14) {
        goto LABEL_65;
      }
      double v16 = *a1;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v16;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        double v16 = sub_1C8D5F348(0, *((void *)v16 + 2) + 1, 1, v16);
        *a1 = v16;
      }
      unint64_t v18 = *((void *)v16 + 2);
      unint64_t v19 = *((void *)v16 + 3);
      unint64_t v20 = v18 + 1;
      if (v18 >= v19 >> 1)
      {
        unint64_t v38 = v18 + 1;
        int v27 = v16;
        unint64_t v28 = *((void *)v16 + 2);
        unint64_t v29 = sub_1C8D5F348((char *)(v19 > 1), v18 + 1, 1, v27);
        unint64_t v18 = v28;
        unint64_t v20 = v38;
        double v16 = v29;
      }
      char v7 = 0;
      *((void *)v16 + 2) = v20;
      *(_DWORD *)&v16[4 * v18 + 32] = v14;
      *a1 = v16;
    }
  }
  sub_1C8CB2BE8();
  if (!v2)
  {
    int v32 = v31;
    if (v31 != (int)v31)
    {
LABEL_65:
      sub_1C8CB47EC();
      swift_allocError();
      *unint64_t v33 = 1;
      goto LABEL_61;
    }
    unint64_t v34 = *a1;
    char v35 = swift_isUniquelyReferenced_nonNull_native();
    *a1 = v34;
    if ((v35 & 1) == 0)
    {
      unint64_t v34 = sub_1C8D5F348(0, *((void *)v34 + 2) + 1, 1, v34);
      *a1 = v34;
    }
    unint64_t v37 = *((void *)v34 + 2);
    unint64_t v36 = *((void *)v34 + 3);
    if (v37 >= v36 >> 1) {
      unint64_t v34 = sub_1C8D5F348((char *)(v36 > 1), v37 + 1, 1, v34);
    }
    *((void *)v34 + 2) = v37 + 1;
    *(_DWORD *)&v34[4 * v37 + 32] = v32;
    *a1 = v34;
  }
}

void sub_1C8D3497C(char **a1)
{
  sub_1C8CB2098();
  uint64_t v4 = *(unsigned __int8 **)(v1 + 40);
  uint64_t v5 = *(unsigned __int8 **)(v1 + 48);
  if (v4 == v5 || *v4 != 58)
  {
LABEL_61:
    sub_1C8CB47EC();
    swift_allocError();
    *int v30 = 0;
LABEL_62:
    swift_willThrow();
  }
  else
  {
    *(void *)(v1 + 40) = v4 + 1;
    sub_1C8CB2098();
    char v6 = *(unsigned __int8 **)(v1 + 40);
    if (v6 != v5 && *v6 == 91)
    {
      *(void *)(v1 + 40) = v6 + 1;
      sub_1C8CB2098();
      char v7 = 1;
      while (1)
      {
        unint64_t v8 = *(unsigned __int8 **)(v1 + 40);
        if (v8 == v5)
        {
          if ((v7 & 1) == 0) {
            goto LABEL_61;
          }
        }
        else
        {
          unsigned int v9 = *v8;
          if (v9 == 93)
          {
            *(void *)(v1 + 40) = v8 + 1;
            sub_1C8CB2098();
            return;
          }
          if ((v7 & 1) == 0)
          {
            for (; v9 <= 0x23; unsigned int v9 = *v8)
            {
              if (((1 << v9) & 0x100002600) != 0)
              {
                *(void *)(v1 + 40) = ++v8;
              }
              else
              {
                if (v9 != 35) {
                  break;
                }
                *(void *)(v1 + 40) = v8 + 1;
                if (v8 + 1 == v5) {
                  goto LABEL_61;
                }
                int v10 = v8[1];
                *(void *)(v1 + 40) = v8 + 2;
                if (v10 == 10 || v10 == 13)
                {
                  v8 += 2;
                }
                else
                {
                  if (v8 + 2 == v5) {
                    goto LABEL_61;
                  }
                  int v11 = v8[2];
                  for (v8 += 3; ; ++v8)
                  {
                    *(void *)(v1 + 40) = v8;
                    if (v11 == 10 || v11 == 13) {
                      break;
                    }
                    if (v8 == v5) {
                      goto LABEL_61;
                    }
                    int v12 = *v8;
                    int v11 = v12;
                  }
                }
              }
              if (v8 == v5) {
                goto LABEL_61;
              }
            }
            if (v8 == v5 || *v8 != 44) {
              goto LABEL_61;
            }
            *(void *)(v1 + 40) = ++v8;
            if (v8 == v5)
            {
LABEL_70:
              sub_1C8CB47EC();
              swift_allocError();
              *unint64_t v37 = 1;
              goto LABEL_62;
            }
            while (1)
            {
              uint64_t v22 = *v8;
              if (v22 > 0x23) {
                break;
              }
              if (((1 << v22) & 0x100002600) != 0)
              {
                unsigned __int8 v21 = v8 + 1;
                *(void *)(v1 + 40) = v8 + 1;
              }
              else
              {
                if (v22 != 35) {
                  break;
                }
                *(void *)(v1 + 40) = v8 + 1;
                if (v8 + 1 == v5) {
                  goto LABEL_70;
                }
                int v23 = v8[1];
                unsigned __int8 v21 = v8 + 2;
                *(void *)(v1 + 40) = v8 + 2;
                if (v23 != 10 && v23 != 13)
                {
                  if (v21 == v5) {
                    goto LABEL_70;
                  }
                  int v24 = v8[2];
                  unsigned __int8 v21 = v8 + 3;
                  *(void *)(v1 + 40) = v8 + 3;
                  if (v24 != 10 && v24 != 13)
                  {
                    while (v21 != v5)
                    {
                      int v26 = *v21++;
                      int v25 = v26;
                      *(void *)(v1 + 40) = v21;
                      if (v26 == 10 || v25 == 13) {
                        goto LABEL_47;
                      }
                    }
                    goto LABEL_70;
                  }
                }
              }
LABEL_47:
              unint64_t v8 = v21;
              if (v21 == v5) {
                goto LABEL_70;
              }
            }
          }
        }
        if (v8 == v5) {
          goto LABEL_70;
        }
        if (*v8 == 45)
        {
          *(void *)(v1 + 40) = v8 + 1;
          if (v8[1] - 58 < 0xFFFFFFF6) {
            goto LABEL_70;
          }
          sub_1C8CB2970();
          if (v2) {
            return;
          }
          if (v13 < 0)
          {
            unint64_t v14 = 0x8000000000000000;
            if (v13 != 0x8000000000000000) {
              goto LABEL_70;
            }
          }
          else
          {
            unint64_t v14 = -v13;
          }
        }
        else
        {
          sub_1C8CB2970();
          if (v2) {
            return;
          }
          unint64_t v14 = v15;
          if ((v15 & 0x8000000000000000) != 0) {
            goto LABEL_70;
          }
        }
        double v16 = *a1;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a1 = v16;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          double v16 = sub_1C8D5F354(0, *((void *)v16 + 2) + 1, 1, v16);
          *a1 = v16;
        }
        unint64_t v18 = *((void *)v16 + 2);
        unint64_t v19 = *((void *)v16 + 3);
        unint64_t v20 = v18 + 1;
        if (v18 >= v19 >> 1)
        {
          unint64_t v38 = v18 + 1;
          int v27 = v16;
          unint64_t v28 = *((void *)v16 + 2);
          unint64_t v29 = sub_1C8D5F354((char *)(v19 > 1), v18 + 1, 1, v27);
          unint64_t v18 = v28;
          unint64_t v20 = v38;
          double v16 = v29;
        }
        char v7 = 0;
        *((void *)v16 + 2) = v20;
        *(void *)&v16[8 * v18 + 32] = v14;
        *a1 = v16;
      }
    }
    sub_1C8CB2BE8();
    if (!v2)
    {
      uint64_t v32 = v31;
      unint64_t v33 = *a1;
      char v34 = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v33;
      if ((v34 & 1) == 0)
      {
        unint64_t v33 = sub_1C8D5F354(0, *((void *)v33 + 2) + 1, 1, v33);
        *a1 = v33;
      }
      unint64_t v36 = *((void *)v33 + 2);
      unint64_t v35 = *((void *)v33 + 3);
      if (v36 >= v35 >> 1) {
        unint64_t v33 = sub_1C8D5F354((char *)(v35 > 1), v36 + 1, 1, v33);
      }
      *((void *)v33 + 2) = v36 + 1;
      *(void *)&v33[8 * v36 + 32] = v32;
      *a1 = v33;
    }
  }
}

void sub_1C8D34DB0(_DWORD *a1)
{
  sub_1C8CB2098();
  uint64_t v4 = *(unsigned char **)(v1 + 40);
  if (v4 == *(unsigned char **)(v1 + 48) || *v4 != 58)
  {
    char v6 = 0;
  }
  else
  {
    *(void *)(v1 + 40) = v4 + 1;
    sub_1C8CB2098();
    sub_1C8CB2970();
    if (v2) {
      return;
    }
    if (!HIDWORD(v5))
    {
      *a1 = v5;
      return;
    }
    char v6 = 1;
  }
  sub_1C8CB47EC();
  swift_allocError();
  *char v7 = v6;
  swift_willThrow();
}

void sub_1C8D34E60(uint64_t a1)
{
  sub_1C8CB2098();
  uint64_t v4 = *(unsigned char **)(v1 + 40);
  if (v4 == *(unsigned char **)(v1 + 48) || *v4 != 58)
  {
    char v6 = 0;
  }
  else
  {
    *(void *)(v1 + 40) = v4 + 1;
    sub_1C8CB2098();
    sub_1C8CB2970();
    if (v2) {
      return;
    }
    if (!HIDWORD(v5))
    {
      *(_DWORD *)a1 = v5;
      *(unsigned char *)(a1 + 4) = 0;
      return;
    }
    char v6 = 1;
  }
  sub_1C8CB47EC();
  swift_allocError();
  *char v7 = v6;
  swift_willThrow();
}

void sub_1C8D34F14(char **a1)
{
  sub_1C8CB2098();
  uint64_t v4 = *(unsigned __int8 **)(v1 + 40);
  unint64_t v5 = *(unsigned __int8 **)(v1 + 48);
  if (v4 == v5 || *v4 != 58)
  {
LABEL_53:
    sub_1C8CB47EC();
    swift_allocError();
    *int v30 = 0;
LABEL_54:
    swift_willThrow();
    return;
  }
  *(void *)(v1 + 40) = v4 + 1;
  sub_1C8CB2098();
  char v6 = *(unsigned __int8 **)(v1 + 40);
  if (v6 != v5 && *v6 == 91)
  {
    *(void *)(v1 + 40) = v6 + 1;
    sub_1C8CB2098();
    char v7 = 1;
    while (1)
    {
      unint64_t v8 = *(unsigned __int8 **)(v1 + 40);
      if (v8 == v5)
      {
        if ((v7 & 1) == 0) {
          goto LABEL_53;
        }
      }
      else
      {
        unsigned int v9 = *v8;
        if (v9 == 93)
        {
          *(void *)(v1 + 40) = v8 + 1;
          sub_1C8CB2098();
          return;
        }
        if ((v7 & 1) == 0)
        {
          for (; v9 <= 0x23; unsigned int v9 = *v8)
          {
            if (((1 << v9) & 0x100002600) != 0)
            {
              *(void *)(v1 + 40) = ++v8;
            }
            else
            {
              if (v9 != 35) {
                break;
              }
              *(void *)(v1 + 40) = v8 + 1;
              if (v8 + 1 == v5) {
                goto LABEL_53;
              }
              int v10 = v8[1];
              *(void *)(v1 + 40) = v8 + 2;
              if (v10 == 10 || v10 == 13)
              {
                v8 += 2;
              }
              else
              {
                if (v8 + 2 == v5) {
                  goto LABEL_53;
                }
                int v11 = v8[2];
                for (v8 += 3; ; ++v8)
                {
                  *(void *)(v1 + 40) = v8;
                  if (v11 == 10 || v11 == 13) {
                    break;
                  }
                  if (v8 == v5) {
                    goto LABEL_53;
                  }
                  int v12 = *v8;
                  int v11 = v12;
                }
              }
            }
            if (v8 == v5) {
              goto LABEL_53;
            }
          }
          if (v8 == v5 || *v8 != 44) {
            goto LABEL_53;
          }
          unint64_t v20 = v8 + 1;
          *(void *)(v1 + 40) = v8 + 1;
          if (v8 + 1 != v5)
          {
            do
            {
              uint64_t v22 = *v20;
              if (v22 > 0x23) {
                break;
              }
              if (((1 << v22) & 0x100002600) != 0)
              {
                unsigned __int8 v21 = v20 + 1;
                *(void *)(v1 + 40) = v20 + 1;
              }
              else
              {
                if (v22 != 35) {
                  break;
                }
                *(void *)(v1 + 40) = v20 + 1;
                if (v20 + 1 == v5) {
                  break;
                }
                int v23 = v20[1];
                unsigned __int8 v21 = v20 + 2;
                *(void *)(v1 + 40) = v20 + 2;
                if (v23 != 10 && v23 != 13)
                {
                  if (v21 == v5) {
                    break;
                  }
                  int v24 = v20[2];
                  unsigned __int8 v21 = v20 + 3;
                  *(void *)(v1 + 40) = v20 + 3;
                  if (v24 != 10 && v24 != 13)
                  {
                    while (v21 != v5)
                    {
                      int v26 = *v21++;
                      int v25 = v26;
                      *(void *)(v1 + 40) = v21;
                      if (v26 == 10 || v25 == 13) {
                        goto LABEL_39;
                      }
                    }
                    break;
                  }
                }
              }
LABEL_39:
              unint64_t v20 = v21;
            }
            while (v21 != v5);
          }
        }
      }
      sub_1C8CB2970();
      if (v2) {
        return;
      }
      int v14 = v13;
      if (HIDWORD(v13)) {
        goto LABEL_58;
      }
      unint64_t v15 = *a1;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v15;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v15 = sub_1C8D5F45C(0, *((void *)v15 + 2) + 1, 1, v15);
        *a1 = v15;
      }
      unint64_t v17 = *((void *)v15 + 2);
      unint64_t v18 = *((void *)v15 + 3);
      unint64_t v19 = v17 + 1;
      if (v17 >= v18 >> 1)
      {
        unint64_t v38 = v17 + 1;
        int v27 = v15;
        unint64_t v28 = *((void *)v15 + 2);
        unint64_t v29 = sub_1C8D5F45C((char *)(v18 > 1), v17 + 1, 1, v27);
        unint64_t v17 = v28;
        unint64_t v19 = v38;
        unint64_t v15 = v29;
      }
      char v7 = 0;
      *((void *)v15 + 2) = v19;
      *(_DWORD *)&v15[4 * v17 + 32] = v14;
      *a1 = v15;
    }
  }
  sub_1C8CB2970();
  if (!v2)
  {
    int v32 = v31;
    if (HIDWORD(v31))
    {
LABEL_58:
      sub_1C8CB47EC();
      swift_allocError();
      *unint64_t v33 = 1;
      goto LABEL_54;
    }
    char v34 = *a1;
    char v35 = swift_isUniquelyReferenced_nonNull_native();
    *a1 = v34;
    if ((v35 & 1) == 0)
    {
      char v34 = sub_1C8D5F45C(0, *((void *)v34 + 2) + 1, 1, v34);
      *a1 = v34;
    }
    unint64_t v37 = *((void *)v34 + 2);
    unint64_t v36 = *((void *)v34 + 3);
    if (v37 >= v36 >> 1) {
      char v34 = sub_1C8D5F45C((char *)(v36 > 1), v37 + 1, 1, v34);
    }
    *((void *)v34 + 2) = v37 + 1;
    *(_DWORD *)&v34[4 * v37 + 32] = v32;
    *a1 = v34;
  }
}

uint64_t sub_1C8D352FC(uint64_t *a1, uint64_t (*a2)(void))
{
  sub_1C8CB2098();
  char v6 = *(unsigned char **)(v2 + 40);
  if (v6 == *(unsigned char **)(v2 + 48) || *v6 != 58)
  {
    sub_1C8CB47EC();
    swift_allocError();
    *unint64_t v8 = 0;
    return swift_willThrow();
  }
  else
  {
    *(void *)(v2 + 40) = v6 + 1;
    sub_1C8CB2098();
    uint64_t result = a2();
    if (!v3) {
      *a1 = result;
    }
  }
  return result;
}

uint64_t sub_1C8D353A0(uint64_t a1, uint64_t (*a2)(void))
{
  sub_1C8CB2098();
  char v6 = *(unsigned char **)(v2 + 40);
  if (v6 == *(unsigned char **)(v2 + 48) || *v6 != 58)
  {
    sub_1C8CB47EC();
    swift_allocError();
    *unint64_t v8 = 0;
    return swift_willThrow();
  }
  else
  {
    *(void *)(v2 + 40) = v6 + 1;
    sub_1C8CB2098();
    uint64_t result = a2();
    if (!v3)
    {
      *(void *)a1 = result;
      *(unsigned char *)(a1 + 8) = 0;
    }
  }
  return result;
}

void sub_1C8D35448(char **a1)
{
  sub_1C8CB2098();
  uint64_t v4 = *(unsigned __int8 **)(v1 + 40);
  unint64_t v5 = *(unsigned __int8 **)(v1 + 48);
  if (v4 == v5 || *v4 != 58)
  {
LABEL_52:
    sub_1C8CB47EC();
    swift_allocError();
    *int v30 = 0;
    swift_willThrow();
  }
  else
  {
    *(void *)(v1 + 40) = v4 + 1;
    sub_1C8CB2098();
    char v6 = *(unsigned __int8 **)(v1 + 40);
    if (v6 != v5 && *v6 == 91)
    {
      *(void *)(v1 + 40) = v6 + 1;
      sub_1C8CB2098();
      char v7 = 1;
      while (1)
      {
        unint64_t v8 = *(unsigned __int8 **)(v1 + 40);
        if (v8 == v5)
        {
          if ((v7 & 1) == 0) {
            goto LABEL_52;
          }
        }
        else
        {
          unsigned int v9 = *v8;
          if (v9 == 93)
          {
            *(void *)(v1 + 40) = v8 + 1;
            sub_1C8CB2098();
            return;
          }
          if ((v7 & 1) == 0)
          {
            for (; v9 <= 0x23; unsigned int v9 = *v8)
            {
              if (((1 << v9) & 0x100002600) != 0)
              {
                *(void *)(v1 + 40) = ++v8;
              }
              else
              {
                if (v9 != 35) {
                  break;
                }
                *(void *)(v1 + 40) = v8 + 1;
                if (v8 + 1 == v5) {
                  goto LABEL_52;
                }
                int v10 = v8[1];
                *(void *)(v1 + 40) = v8 + 2;
                if (v10 == 10 || v10 == 13)
                {
                  v8 += 2;
                }
                else
                {
                  if (v8 + 2 == v5) {
                    goto LABEL_52;
                  }
                  int v11 = v8[2];
                  for (v8 += 3; ; ++v8)
                  {
                    *(void *)(v1 + 40) = v8;
                    if (v11 == 10 || v11 == 13) {
                      break;
                    }
                    if (v8 == v5) {
                      goto LABEL_52;
                    }
                    int v12 = *v8;
                    int v11 = v12;
                  }
                }
              }
              if (v8 == v5) {
                goto LABEL_52;
              }
            }
            if (v8 == v5 || *v8 != 44) {
              goto LABEL_52;
            }
            unint64_t v20 = v8 + 1;
            *(void *)(v1 + 40) = v8 + 1;
            if (v8 + 1 != v5)
            {
              do
              {
                uint64_t v22 = *v20;
                if (v22 > 0x23) {
                  break;
                }
                if (((1 << v22) & 0x100002600) != 0)
                {
                  unsigned __int8 v21 = v20 + 1;
                  *(void *)(v1 + 40) = v20 + 1;
                }
                else
                {
                  if (v22 != 35) {
                    break;
                  }
                  *(void *)(v1 + 40) = v20 + 1;
                  if (v20 + 1 == v5) {
                    break;
                  }
                  int v23 = v20[1];
                  unsigned __int8 v21 = v20 + 2;
                  *(void *)(v1 + 40) = v20 + 2;
                  if (v23 != 10 && v23 != 13)
                  {
                    if (v21 == v5) {
                      break;
                    }
                    int v24 = v20[2];
                    unsigned __int8 v21 = v20 + 3;
                    *(void *)(v1 + 40) = v20 + 3;
                    if (v24 != 10 && v24 != 13)
                    {
                      while (v21 != v5)
                      {
                        int v26 = *v21++;
                        int v25 = v26;
                        *(void *)(v1 + 40) = v21;
                        if (v26 == 10 || v25 == 13) {
                          goto LABEL_38;
                        }
                      }
                      break;
                    }
                  }
                }
LABEL_38:
                unint64_t v20 = v21;
              }
              while (v21 != v5);
            }
          }
        }
        sub_1C8CB2970();
        if (v2) {
          return;
        }
        uint64_t v14 = v13;
        unint64_t v15 = *a1;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a1 = v15;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v15 = sub_1C8D5F560(0, *((void *)v15 + 2) + 1, 1, v15);
          *a1 = v15;
        }
        unint64_t v17 = *((void *)v15 + 2);
        unint64_t v18 = *((void *)v15 + 3);
        unint64_t v19 = v17 + 1;
        if (v17 >= v18 >> 1)
        {
          unint64_t v37 = v17 + 1;
          int v27 = v15;
          unint64_t v28 = *((void *)v15 + 2);
          unint64_t v29 = sub_1C8D5F560((char *)(v18 > 1), v17 + 1, 1, v27);
          unint64_t v17 = v28;
          unint64_t v19 = v37;
          unint64_t v15 = v29;
        }
        char v7 = 0;
        *((void *)v15 + 2) = v19;
        *(void *)&v15[8 * v17 + 32] = v14;
        *a1 = v15;
      }
    }
    sub_1C8CB2970();
    if (!v2)
    {
      uint64_t v32 = v31;
      unint64_t v33 = *a1;
      char v34 = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v33;
      if ((v34 & 1) == 0)
      {
        unint64_t v33 = sub_1C8D5F560(0, *((void *)v33 + 2) + 1, 1, v33);
        *a1 = v33;
      }
      unint64_t v36 = *((void *)v33 + 2);
      unint64_t v35 = *((void *)v33 + 3);
      if (v36 >= v35 >> 1) {
        unint64_t v33 = sub_1C8D5F560((char *)(v35 > 1), v36 + 1, 1, v33);
      }
      *((void *)v33 + 2) = v36 + 1;
      *(void *)&v33[8 * v36 + 32] = v32;
      *a1 = v33;
    }
  }
}

uint64_t sub_1C8D357F4(uint64_t *a1, uint64_t (*a2)(void))
{
  sub_1C8CB2098();
  char v6 = *(unsigned char **)(v2 + 40);
  if (v6 == *(unsigned char **)(v2 + 48) || *v6 != 58)
  {
    sub_1C8CB47EC();
    swift_allocError();
    *unint64_t v8 = 0;
    return swift_willThrow();
  }
  else
  {
    *(void *)(v2 + 40) = v6 + 1;
    sub_1C8CB2098();
    uint64_t result = a2();
    if (!v3) {
      *a1 = result;
    }
  }
  return result;
}

uint64_t sub_1C8D35898(uint64_t a1, uint64_t (*a2)(void))
{
  sub_1C8CB2098();
  char v6 = *(unsigned char **)(v2 + 40);
  if (v6 == *(unsigned char **)(v2 + 48) || *v6 != 58)
  {
    sub_1C8CB47EC();
    swift_allocError();
    *unint64_t v8 = 0;
    return swift_willThrow();
  }
  else
  {
    *(void *)(v2 + 40) = v6 + 1;
    sub_1C8CB2098();
    uint64_t result = a2();
    if (!v3)
    {
      *(void *)a1 = result;
      *(unsigned char *)(a1 + 8) = 0;
    }
  }
  return result;
}

uint64_t sub_1C8D35940(unsigned char *a1)
{
  sub_1C8CB2098();
  uint64_t v4 = *(unsigned char **)(v1 + 40);
  if (v4 == *(unsigned char **)(v1 + 48) || *v4 != 58)
  {
    sub_1C8CB47EC();
    swift_allocError();
    *char v6 = 0;
    return swift_willThrow();
  }
  else
  {
    *(void *)(v1 + 40) = v4 + 1;
    sub_1C8CB2098();
    uint64_t result = sub_1C8CB3A60();
    if (!v2) {
      *a1 = result & 1;
    }
  }
  return result;
}

void sub_1C8D359E0(char **a1)
{
  sub_1C8CB2098();
  uint64_t v4 = *(unsigned __int8 **)(v1 + 40);
  unint64_t v5 = *(unsigned __int8 **)(v1 + 48);
  if (v4 == v5 || *v4 != 58)
  {
LABEL_52:
    sub_1C8CB47EC();
    swift_allocError();
    *int v30 = 0;
    swift_willThrow();
  }
  else
  {
    *(void *)(v1 + 40) = v4 + 1;
    sub_1C8CB2098();
    char v6 = *(unsigned __int8 **)(v1 + 40);
    if (v6 != v5 && *v6 == 91)
    {
      *(void *)(v1 + 40) = v6 + 1;
      sub_1C8CB2098();
      char v7 = 1;
      while (1)
      {
        unint64_t v8 = *(unsigned __int8 **)(v1 + 40);
        if (v8 == v5)
        {
          if ((v7 & 1) == 0) {
            goto LABEL_52;
          }
        }
        else
        {
          unsigned int v9 = *v8;
          if (v9 == 93)
          {
            *(void *)(v1 + 40) = v8 + 1;
            sub_1C8CB2098();
            return;
          }
          if ((v7 & 1) == 0)
          {
            for (; v9 <= 0x23; unsigned int v9 = *v8)
            {
              if (((1 << v9) & 0x100002600) != 0)
              {
                *(void *)(v1 + 40) = ++v8;
              }
              else
              {
                if (v9 != 35) {
                  break;
                }
                *(void *)(v1 + 40) = v8 + 1;
                if (v8 + 1 == v5) {
                  goto LABEL_52;
                }
                int v10 = v8[1];
                *(void *)(v1 + 40) = v8 + 2;
                if (v10 == 10 || v10 == 13)
                {
                  v8 += 2;
                }
                else
                {
                  if (v8 + 2 == v5) {
                    goto LABEL_52;
                  }
                  int v11 = v8[2];
                  for (v8 += 3; ; ++v8)
                  {
                    *(void *)(v1 + 40) = v8;
                    if (v11 == 10 || v11 == 13) {
                      break;
                    }
                    if (v8 == v5) {
                      goto LABEL_52;
                    }
                    int v12 = *v8;
                    int v11 = v12;
                  }
                }
              }
              if (v8 == v5) {
                goto LABEL_52;
              }
            }
            if (v8 == v5 || *v8 != 44) {
              goto LABEL_52;
            }
            unint64_t v20 = v8 + 1;
            *(void *)(v1 + 40) = v8 + 1;
            if (v8 + 1 != v5)
            {
              do
              {
                uint64_t v22 = *v20;
                if (v22 > 0x23) {
                  break;
                }
                if (((1 << v22) & 0x100002600) != 0)
                {
                  unsigned __int8 v21 = v20 + 1;
                  *(void *)(v1 + 40) = v20 + 1;
                }
                else
                {
                  if (v22 != 35) {
                    break;
                  }
                  *(void *)(v1 + 40) = v20 + 1;
                  if (v20 + 1 == v5) {
                    break;
                  }
                  int v23 = v20[1];
                  unsigned __int8 v21 = v20 + 2;
                  *(void *)(v1 + 40) = v20 + 2;
                  if (v23 != 10 && v23 != 13)
                  {
                    if (v21 == v5) {
                      break;
                    }
                    int v24 = v20[2];
                    unsigned __int8 v21 = v20 + 3;
                    *(void *)(v1 + 40) = v20 + 3;
                    if (v24 != 10 && v24 != 13)
                    {
                      while (v21 != v5)
                      {
                        int v26 = *v21++;
                        int v25 = v26;
                        *(void *)(v1 + 40) = v21;
                        if (v26 == 10 || v25 == 13) {
                          goto LABEL_38;
                        }
                      }
                      break;
                    }
                  }
                }
LABEL_38:
                unint64_t v20 = v21;
              }
              while (v21 != v5);
            }
          }
        }
        char v13 = sub_1C8CB3A60();
        if (v2) {
          return;
        }
        char v14 = v13;
        unint64_t v15 = *a1;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a1 = v15;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v15 = sub_1C8D5F05C(0, *((void *)v15 + 2) + 1, 1, v15);
          *a1 = v15;
        }
        unint64_t v17 = *((void *)v15 + 2);
        unint64_t v18 = *((void *)v15 + 3);
        unint64_t v19 = v17 + 1;
        if (v17 >= v18 >> 1)
        {
          unint64_t v37 = v17 + 1;
          int v27 = v15;
          unint64_t v28 = *((void *)v15 + 2);
          unint64_t v29 = sub_1C8D5F05C((char *)(v18 > 1), v17 + 1, 1, v27);
          unint64_t v17 = v28;
          unint64_t v19 = v37;
          unint64_t v15 = v29;
        }
        char v7 = 0;
        *((void *)v15 + 2) = v19;
        v15[v17 + 32] = v14 & 1;
        *a1 = v15;
      }
    }
    char v31 = sub_1C8CB3A60();
    if (!v2)
    {
      char v32 = v31;
      unint64_t v33 = *a1;
      char v34 = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v33;
      if ((v34 & 1) == 0)
      {
        unint64_t v33 = sub_1C8D5F05C(0, *((void *)v33 + 2) + 1, 1, v33);
        *a1 = v33;
      }
      unint64_t v36 = *((void *)v33 + 2);
      unint64_t v35 = *((void *)v33 + 3);
      if (v36 >= v35 >> 1) {
        unint64_t v33 = sub_1C8D5F05C((char *)(v35 > 1), v36 + 1, 1, v33);
      }
      *((void *)v33 + 2) = v36 + 1;
      v33[v36 + 32] = v32 & 1;
      *a1 = v33;
    }
  }
}

uint64_t sub_1C8D35D94(uint64_t *a1)
{
  sub_1C8CB2098();
  uint64_t v4 = *(unsigned char **)(v1 + 40);
  if (v4 == *(unsigned char **)(v1 + 48) || *v4 != 58)
  {
    sub_1C8CB47EC();
    swift_allocError();
    *unsigned int v9 = 0;
    return swift_willThrow();
  }
  else
  {
    *(void *)(v1 + 40) = v4 + 1;
    sub_1C8CB2098();
    uint64_t result = sub_1C8CB2CA4();
    if (!v2)
    {
      uint64_t v7 = result;
      uint64_t v8 = v6;
      uint64_t result = swift_bridgeObjectRelease();
      *a1 = v7;
      a1[1] = v8;
    }
  }
  return result;
}

void sub_1C8D35E40(char **a1)
{
  sub_1C8CB2098();
  uint64_t v4 = *(unsigned __int8 **)(v1 + 40);
  unint64_t v5 = *(unsigned __int8 **)(v1 + 48);
  if (v4 == v5 || *v4 != 58)
  {
LABEL_52:
    sub_1C8CB47EC();
    swift_allocError();
    *char v31 = 0;
    swift_willThrow();
  }
  else
  {
    *(void *)(v1 + 40) = v4 + 1;
    sub_1C8CB2098();
    uint64_t v6 = *(unsigned __int8 **)(v1 + 40);
    if (v6 != v5 && *v6 == 91)
    {
      *(void *)(v1 + 40) = v6 + 1;
      sub_1C8CB2098();
      char v7 = 1;
      while (1)
      {
        uint64_t v8 = *(unsigned __int8 **)(v1 + 40);
        if (v8 == v5)
        {
          if ((v7 & 1) == 0) {
            goto LABEL_52;
          }
        }
        else
        {
          unsigned int v9 = *v8;
          if (v9 == 93)
          {
            *(void *)(v1 + 40) = v8 + 1;
            sub_1C8CB2098();
            return;
          }
          if ((v7 & 1) == 0)
          {
            for (; v9 <= 0x23; unsigned int v9 = *v8)
            {
              if (((1 << v9) & 0x100002600) != 0)
              {
                *(void *)(v1 + 40) = ++v8;
              }
              else
              {
                if (v9 != 35) {
                  break;
                }
                *(void *)(v1 + 40) = v8 + 1;
                if (v8 + 1 == v5) {
                  goto LABEL_52;
                }
                int v10 = v8[1];
                *(void *)(v1 + 40) = v8 + 2;
                if (v10 == 10 || v10 == 13)
                {
                  v8 += 2;
                }
                else
                {
                  if (v8 + 2 == v5) {
                    goto LABEL_52;
                  }
                  int v11 = v8[2];
                  for (v8 += 3; ; ++v8)
                  {
                    *(void *)(v1 + 40) = v8;
                    if (v11 == 10 || v11 == 13) {
                      break;
                    }
                    if (v8 == v5) {
                      goto LABEL_52;
                    }
                    int v12 = *v8;
                    int v11 = v12;
                  }
                }
              }
              if (v8 == v5) {
                goto LABEL_52;
              }
            }
            if (v8 == v5 || *v8 != 44) {
              goto LABEL_52;
            }
            int v23 = v8 + 1;
            *(void *)(v1 + 40) = v8 + 1;
            if (v8 + 1 != v5)
            {
              do
              {
                uint64_t v25 = *v23;
                if (v25 > 0x23) {
                  break;
                }
                if (((1 << v25) & 0x100002600) != 0)
                {
                  int v24 = v23 + 1;
                  *(void *)(v1 + 40) = v23 + 1;
                }
                else
                {
                  if (v25 != 35) {
                    break;
                  }
                  *(void *)(v1 + 40) = v23 + 1;
                  if (v23 + 1 == v5) {
                    break;
                  }
                  int v26 = v23[1];
                  int v24 = v23 + 2;
                  *(void *)(v1 + 40) = v23 + 2;
                  if (v26 != 10 && v26 != 13)
                  {
                    if (v24 == v5) {
                      break;
                    }
                    int v27 = v23[2];
                    int v24 = v23 + 3;
                    *(void *)(v1 + 40) = v23 + 3;
                    if (v27 != 10 && v27 != 13)
                    {
                      while (v24 != v5)
                      {
                        int v29 = *v24++;
                        int v28 = v29;
                        *(void *)(v1 + 40) = v24;
                        if (v29 == 10 || v28 == 13) {
                          goto LABEL_38;
                        }
                      }
                      break;
                    }
                  }
                }
LABEL_38:
                int v23 = v24;
              }
              while (v24 != v5);
            }
          }
        }
        uint64_t v13 = sub_1C8CB2CA4();
        if (v2) {
          return;
        }
        uint64_t v15 = v13;
        uint64_t v16 = v14;
        unint64_t v17 = *a1;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a1 = v17;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v17 = sub_1C8D5ED38(0, *((void *)v17 + 2) + 1, 1, v17);
          *a1 = v17;
        }
        unint64_t v20 = *((void *)v17 + 2);
        unint64_t v19 = *((void *)v17 + 3);
        unint64_t v21 = v20 + 1;
        if (v20 >= v19 >> 1)
        {
          int v30 = sub_1C8D5ED38((char *)(v19 > 1), v20 + 1, 1, v17);
          unint64_t v21 = v20 + 1;
          unint64_t v17 = v30;
        }
        char v7 = 0;
        *((void *)v17 + 2) = v21;
        uint64_t v22 = &v17[16 * v20];
        *((void *)v22 + 4) = v15;
        *((void *)v22 + 5) = v16;
        *a1 = v17;
      }
    }
    uint64_t v32 = sub_1C8CB2CA4();
    if (!v2)
    {
      uint64_t v34 = v32;
      uint64_t v35 = v33;
      unint64_t v36 = *a1;
      char v37 = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v36;
      if ((v37 & 1) == 0)
      {
        unint64_t v36 = sub_1C8D5ED38(0, *((void *)v36 + 2) + 1, 1, v36);
        *a1 = v36;
      }
      unint64_t v39 = *((void *)v36 + 2);
      unint64_t v38 = *((void *)v36 + 3);
      if (v39 >= v38 >> 1) {
        unint64_t v36 = sub_1C8D5ED38((char *)(v38 > 1), v39 + 1, 1, v36);
      }
      *((void *)v36 + 2) = v39 + 1;
      int v40 = &v36[16 * v39];
      *((void *)v40 + 4) = v34;
      *((void *)v40 + 5) = v35;
      *a1 = v36;
    }
  }
}

uint64_t sub_1C8D361F0(uint64_t *a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  sub_1C8CB2098();
  uint64_t v6 = *(unsigned char **)(v2 + 40);
  if (v6 == *(unsigned char **)(v2 + 48) || *v6 != 58)
  {
    sub_1C8CB47EC();
    swift_allocError();
    *int v11 = 0;
    return swift_willThrow();
  }
  else
  {
    *(void *)(v2 + 40) = v6 + 1;
    sub_1C8CB2098();
    uint64_t result = sub_1C8CB2F5C();
    if (!v3)
    {
      uint64_t v9 = result;
      uint64_t v10 = v8;
      uint64_t result = a2(*a1, a1[1]);
      *a1 = v9;
      a1[1] = v10;
    }
  }
  return result;
}

void sub_1C8D362AC(char **a1)
{
  sub_1C8CB2098();
  uint64_t v4 = *(unsigned char **)(v1 + 40);
  unint64_t v5 = *(unsigned char **)(v1 + 48);
  if (v4 == v5 || *v4 != 58)
  {
LABEL_18:
    sub_1C8CB47EC();
    swift_allocError();
    *uint64_t v22 = 0;
    swift_willThrow();
  }
  else
  {
    *(void *)(v1 + 40) = v4 + 1;
    sub_1C8CB2098();
    uint64_t v6 = *(unsigned char **)(v1 + 40);
    if (v6 == v5 || *v6 != 91)
    {
      uint64_t v23 = sub_1C8CB2F5C();
      if (!v2)
      {
        uint64_t v25 = v23;
        unint64_t v26 = v24;
        int v27 = *a1;
        sub_1C8CA3CF8(v23, v24);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a1 = v27;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          int v27 = sub_1C8D5F148(0, *((void *)v27 + 2) + 1, 1, v27);
          *a1 = v27;
        }
        unint64_t v30 = *((void *)v27 + 2);
        unint64_t v29 = *((void *)v27 + 3);
        if (v30 >= v29 >> 1)
        {
          int v27 = sub_1C8D5F148((char *)(v29 > 1), v30 + 1, 1, v27);
          *a1 = v27;
        }
        *((void *)v27 + 2) = v30 + 1;
        char v31 = &v27[16 * v30];
        *((void *)v31 + 4) = v25;
        *((void *)v31 + 5) = v26;
        sub_1C8CA3D5C(v25, v26);
        *a1 = v27;
      }
    }
    else
    {
      *(void *)(v1 + 40) = v6 + 1;
      sub_1C8CB2098();
      char v7 = *(unsigned char **)(v1 + 40);
      if (v7 == v5 || *v7 != 93)
      {
        while (1)
        {
          uint64_t v8 = sub_1C8CB2F5C();
          if (v2) {
            break;
          }
          uint64_t v10 = v8;
          unint64_t v11 = v9;
          int v12 = *a1;
          sub_1C8CA3CF8(v8, v9);
          char v13 = swift_isUniquelyReferenced_nonNull_native();
          *a1 = v12;
          if ((v13 & 1) == 0)
          {
            int v12 = sub_1C8D5F148(0, *((void *)v12 + 2) + 1, 1, v12);
            *a1 = v12;
          }
          unint64_t v14 = *((void *)v12 + 2);
          unint64_t v15 = *((void *)v12 + 3);
          unint64_t v16 = v14 + 1;
          if (v14 >= v15 >> 1)
          {
            unint64_t v32 = v14 + 1;
            unint64_t v19 = v12;
            unint64_t v20 = *((void *)v12 + 2);
            unint64_t v21 = sub_1C8D5F148((char *)(v15 > 1), v14 + 1, 1, v19);
            unint64_t v14 = v20;
            unint64_t v16 = v32;
            int v12 = v21;
            *a1 = v21;
          }
          *((void *)v12 + 2) = v16;
          unint64_t v17 = &v12[16 * v14];
          *((void *)v17 + 4) = v10;
          *((void *)v17 + 5) = v11;
          sub_1C8CA3D5C(v10, v11);
          *a1 = v12;
          char v7 = *(unsigned char **)(v1 + 40);
          if (v7 != v5 && *v7 == 93) {
            goto LABEL_7;
          }
          sub_1C8CB2098();
          unint64_t v18 = *(unsigned char **)(v1 + 40);
          if (v18 == v5 || *v18 != 44) {
            goto LABEL_18;
          }
          *(void *)(v1 + 40) = v18 + 1;
          sub_1C8CB2098();
        }
      }
      else
      {
LABEL_7:
        *(void *)(v1 + 40) = v7 + 1;
        sub_1C8CB2098();
      }
    }
  }
}

void sub_1C8D3652C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_1C8D88620();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v7, v9);
  int v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10, v13);
  unint64_t v15 = (char *)v23 - v14;
  unint64_t v16 = sub_1C8CB422C();
  if (!v3)
  {
    if (v18)
    {
      sub_1C8CB2BE8();
      if (v21 != (int)v21)
      {
        sub_1C8CB47EC();
        swift_allocError();
        *uint64_t v22 = 0;
        goto LABEL_8;
      }
      (*(void (**)(void))(a2 + 32))();
      uint64_t v19 = *(void *)(a1 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v12, 1, a1) == 1)
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
        goto LABEL_5;
      }
    }
    else
    {
      sub_1C8CB4D28(v16, v17, a1, a2, (uint64_t)v15);
      uint64_t v19 = *(void *)(a1 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v15, 1, a1) == 1)
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v15, v7);
LABEL_5:
        sub_1C8CB47EC();
        swift_allocError();
        *unint64_t v20 = 8;
LABEL_8:
        swift_willThrow();
        return;
      }
      int v12 = v15;
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(a3, v12, a1);
  }
}

void sub_1C8D367CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1, a2);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C8CB2098();
  uint64_t v11 = *(unsigned char **)(v3 + 40);
  if (v11 == *(unsigned char **)(v3 + 48) || *v11 != 58)
  {
    sub_1C8CB47EC();
    swift_allocError();
    *uint64_t v13 = 0;
    swift_willThrow();
  }
  else
  {
    *(void *)(v3 + 40) = v11 + 1;
    sub_1C8CB2098();
    sub_1C8D3652C(a2, a3, (uint64_t)v10);
    if (!v4)
    {
      uint64_t v12 = sub_1C8D88620();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a1, v12);
      (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v10, a2);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, a2);
    }
  }
}

void sub_1C8D36974(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1, a2);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C8CB2098();
  uint64_t v11 = *(unsigned char **)(v3 + 40);
  if (v11 == *(unsigned char **)(v3 + 48) || *v11 != 58)
  {
    sub_1C8CB47EC();
    swift_allocError();
    *uint64_t v12 = 0;
    swift_willThrow();
  }
  else
  {
    *(void *)(v3 + 40) = v11 + 1;
    sub_1C8CB2098();
    sub_1C8D3652C(a2, a3, (uint64_t)v10);
    if (!v4)
    {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, a2);
      (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v10, a2);
    }
  }
}

void sub_1C8D36AD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v37[1] = a1;
  uint64_t v6 = *(void *)(a2 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](a1, a2);
  uint64_t v9 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v7, v10);
  uint64_t v13 = (char *)v37 - v12;
  MEMORY[0x1F4188790](v11, v14);
  unint64_t v16 = (char *)v37 - v15;
  sub_1C8CB2098();
  unint64_t v17 = *(unsigned char **)(v3 + 40);
  char v18 = *(unsigned char **)(v3 + 48);
  if (v17 == v18 || *v17 != 58)
  {
LABEL_47:
    sub_1C8CB47EC();
    swift_allocError();
    *uint64_t v35 = 0;
    swift_willThrow();
  }
  else
  {
    *(void *)(v3 + 40) = v17 + 1;
    sub_1C8CB2098();
    uint64_t v19 = *(unsigned char **)(v3 + 40);
    if (v19 != v18 && *v19 == 91)
    {
      *(void *)(v3 + 40) = v19 + 1;
      sub_1C8CB2098();
      v37[0] = v6 + 8;
      for (char i = 1; ; char i = 0)
      {
        uint64_t v22 = *(unsigned __int8 **)(v3 + 40);
        uint64_t v21 = *(unsigned __int8 **)(v3 + 48);
        if (v22 == v21) {
          break;
        }
        unsigned int v23 = *v22;
        if (v23 == 93)
        {
          *(void *)(v3 + 40) = v22 + 1;
          sub_1C8CB2098();
          return;
        }
        if ((i & 1) == 0)
        {
          for (; v23 <= 0x23; unsigned int v23 = *v22)
          {
            if (((1 << v23) & 0x100002600) != 0)
            {
              *(void *)(v3 + 40) = ++v22;
            }
            else
            {
              if (v23 != 35) {
                break;
              }
              *(void *)(v3 + 40) = v22 + 1;
              if (v22 + 1 == v21) {
                goto LABEL_47;
              }
              int v24 = v22[1];
              *(void *)(v3 + 40) = v22 + 2;
              if (v24 == 10 || v24 == 13)
              {
                v22 += 2;
              }
              else
              {
                if (v22 + 2 == v21) {
                  goto LABEL_47;
                }
                int v25 = v22[2];
                for (v22 += 3; ; ++v22)
                {
                  *(void *)(v3 + 40) = v22;
                  if (v25 == 10 || v25 == 13) {
                    break;
                  }
                  if (v22 == v21) {
                    goto LABEL_47;
                  }
                  int v26 = *v22;
                  int v25 = v26;
                }
              }
            }
            if (v22 == v21) {
              goto LABEL_47;
            }
          }
LABEL_27:
          if (v22 == v21 || *v22 != 44) {
            goto LABEL_47;
          }
          int v27 = v22 + 1;
          *(void *)(v3 + 40) = v22 + 1;
          if (v22 + 1 != v21)
          {
            do
            {
              uint64_t v30 = *v27;
              if (v30 > 0x23) {
                break;
              }
              if (((1 << v30) & 0x100002600) != 0)
              {
                unint64_t v29 = v27 + 1;
                *(void *)(v3 + 40) = v27 + 1;
              }
              else
              {
                if (v30 != 35) {
                  break;
                }
                *(void *)(v3 + 40) = v27 + 1;
                if (v27 + 1 == v21) {
                  break;
                }
                int v31 = v27[1];
                unint64_t v29 = v27 + 2;
                *(void *)(v3 + 40) = v27 + 2;
                if (v31 != 10 && v31 != 13)
                {
                  if (v29 == v21) {
                    break;
                  }
                  int v32 = v27[2];
                  unint64_t v29 = v27 + 3;
                  *(void *)(v3 + 40) = v27 + 3;
                  if (v32 != 10 && v32 != 13)
                  {
                    while (v29 != v21)
                    {
                      int v34 = *v29++;
                      int v33 = v34;
                      *(void *)(v3 + 40) = v29;
                      if (v34 == 10 || v33 == 13) {
                        goto LABEL_33;
                      }
                    }
                    break;
                  }
                }
              }
LABEL_33:
              int v27 = v29;
            }
            while (v29 != v21);
          }
        }
LABEL_30:
        uint64_t v28 = v38;
        sub_1C8D3652C(a2, a3, (uint64_t)v16);
        uint64_t v38 = v28;
        if (v28) {
          return;
        }
        (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v13, v16, a2);
        sub_1C8D88550();
        sub_1C8D88530();
        (*(void (**)(char *, uint64_t))v37[0])(v16, a2);
      }
      if (i) {
        goto LABEL_30;
      }
      goto LABEL_27;
    }
    uint64_t v36 = v38;
    sub_1C8D3652C(a2, a3, (uint64_t)v9);
    if (!v36)
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v13, v9, a2);
      sub_1C8D88550();
      sub_1C8D88530();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, a2);
    }
  }
}

uint64_t sub_1C8D36F34(char *a1, ValueMetadata *a2, uint64_t a3)
{
  uint64_t v66 = a3;
  Description = a2[-1].Description;
  MEMORY[0x1F4188790](a1, a2);
  uint64_t v58 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_1C8D88620();
  uint64_t v67 = *(void *)(v80 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v80, v8);
  uint64_t v57 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9, v11);
  uint64_t v61 = (char *)&v56 - v13;
  uint64_t v15 = MEMORY[0x1F4188790](v12, v14);
  unint64_t v17 = (char *)&v56 - v16;
  MEMORY[0x1F4188790](v15, v18);
  unint64_t v20 = (char *)&v56 - v19;
  uint64_t v21 = *(unsigned char **)(v3 + 40);
  if (v21 != *(unsigned char **)(v3 + 48) && *v21 == 58)
  {
    *(void *)(v3 + 40) = v21 + 1;
    sub_1C8CB2098();
  }
  uint64_t v22 = v3;
  uint64_t v23 = v67;
  int v24 = *(void (**)(char *, uint64_t, uint64_t))(v67 + 16);
  uint64_t v65 = a1;
  uint64_t v25 = v80;
  uint64_t v60 = v67 + 16;
  uint64_t v59 = v24;
  v24(v20, (uint64_t)a1, v80);
  uint64_t v64 = Description;
  uint64_t v63 = (uint64_t (*)(char *, uint64_t, ValueMetadata *))Description[6];
  int v26 = v63(v20, 1, a2);
  uint64_t v27 = v25;
  uint64_t v28 = *(void (**)(char *, uint64_t))(v23 + 8);
  v28(v20, v27);
  if (v26 == 1)
  {
    (*(void (**)(ValueMetadata *))(v66 + 16))(a2);
    ((void (*)(char *, void, uint64_t, ValueMetadata *))v64[7])(v17, 0, 1, a2);
    (*(void (**)(char *, char *, uint64_t))(v67 + 40))(v65, v17, v80);
  }
  unint64_t v29 = *(unsigned __int8 **)(v22 + 40);
  if (v29 == *(unsigned __int8 **)(v22 + 48)) {
    goto LABEL_10;
  }
  uint64_t v30 = v22;
  int v31 = *v29;
  *(void *)(v22 + 40) = v29 + 1;
  sub_1C8CB2098();
  if (v31 != 60)
  {
    if (v31 == 123)
    {
      unsigned __int8 v32 = 125;
      goto LABEL_12;
    }
LABEL_10:
    sub_1C8CB47EC();
    swift_allocError();
    *int v33 = 0;
    return swift_willThrow();
  }
  unsigned __int8 v32 = 62;
LABEL_12:
  sub_1C8D3354C(v22, (uint64_t)&v71);
  uint64_t v75 = 0;
  __int16 v76 = 256;
  long long v77 = 0u;
  long long v78 = 0u;
  long long v79 = 0u;
  sub_1C8D3354C((uint64_t)&v71, (uint64_t)v74);
  __int16 v76 = v32;
  uint64_t v35 = swift_conformsToProtocol2();
  if (v35) {
    uint64_t v36 = v35;
  }
  else {
    uint64_t v36 = 0;
  }
  if (v35) {
    char v37 = a2;
  }
  else {
    char v37 = 0;
  }
  if (!v37)
  {
    sub_1C8CB47EC();
    swift_allocError();
    *int v41 = 6;
    swift_willThrow();
    sub_1C8D335A8((uint64_t)&v71);
    return sub_1C8D335FC((uint64_t)v74);
  }
  (*(void (**)(long long *__return_ptr))(v36 + 8))(&v68);
  sub_1C8D335A8((uint64_t)&v71);
  long long v56 = v68;
  uint64_t v38 = v69;
  unint64_t v39 = v70;
  sub_1C8CA469C(v77);
  long long v77 = v56;
  *(void *)&long long v78 = v38;
  *((void *)&v78 + 1) = v39;
  *(void *)&long long v79 = a2;
  *((void *)&v79 + 1) = v66;
  if (a2 != &type metadata for Google_Protobuf_Any)
  {
    if (v63(v65, 1, a2) != 1)
    {
      uint64_t v40 = v62;
      (*(void (**)(unsigned char *, ValueMetadata *, _UNKNOWN **, ValueMetadata *))(v66 + 64))(v74, &type metadata for TextFormatDecoder, &off_1F2355738, a2);
      if (!v40)
      {
LABEL_22:
        sub_1C8D3354C((uint64_t)v74, (uint64_t)&v71);
        sub_1C8D335FC((uint64_t)v74);
        return sub_1C8D3B8B0((uint64_t)&v71, v30);
      }
      return sub_1C8D335FC((uint64_t)v74);
    }
    __break(1u);
    goto LABEL_40;
  }
  unint64_t v39 = v61;
  v59(v61, (uint64_t)v65, v80);
  if (v63(v39, 1, &type metadata for Google_Protobuf_Any) == 1)
  {
LABEL_40:
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v28)(v39, v80);
    __break(1u);
    return result;
  }
  ((void (*)(char *, char *, ValueMetadata *))v64[4])(v58, v39, &type metadata for Google_Protobuf_Any);
  swift_dynamicCast();
  uint64_t v42 = v71;
  unint64_t v43 = v72;
  uint64_t v44 = v73;
  uint64_t v45 = v62;
  uint64_t v46 = sub_1C8CB42BC();
  if (!v45)
  {
    unint64_t v48 = v47;
    if (v47)
    {
      uint64_t v49 = (uint64_t)v46;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for AnyMessageStorage();
        swift_allocObject();
        uint64_t v50 = swift_retain();
        uint64_t v51 = sub_1C8D66554(v50);
        swift_release();
        uint64_t v44 = v51;
      }
      swift_retain();
      sub_1C8D63E8C(v49, v48, (uint64_t)v74);
      swift_bridgeObjectRelease();
      uint64_t v55 = v57;
    }
    else
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for AnyMessageStorage();
        swift_allocObject();
        uint64_t v52 = swift_retain();
        uint64_t v53 = sub_1C8D66554(v52);
        swift_release();
        uint64_t v44 = v53;
      }
      uint64_t v54 = swift_retain();
      sub_1C8D4D0AC(v54, (uint64_t)v74);
      uint64_t v55 = v57;
    }
    swift_release();
    if (v44)
    {
      uint64_t v71 = v42;
      unint64_t v72 = v43;
      uint64_t v73 = v44;
      sub_1C8CA3CF8(v42, v43);
      swift_retain();
      swift_dynamicCast();
      ((void (*)(char *, void, uint64_t, ValueMetadata *))v64[7])(v55, 0, 1, &type metadata for Google_Protobuf_Any);
    }
    else
    {
      ((void (*)(char *, uint64_t, uint64_t, ValueMetadata *))v64[7])(v55, 1, 1, &type metadata for Google_Protobuf_Any);
    }
    (*(void (**)(char *, char *, uint64_t))(v67 + 40))(v65, v55, v80);
    sub_1C8CB6084(v42, v43, v44);
    goto LABEL_22;
  }
  sub_1C8D335FC((uint64_t)v74);
  return sub_1C8CB6084(v42, v43, v44);
}

void sub_1C8D37744(uint64_t a1, ValueMetadata *a2, uint64_t a3)
{
  uint64_t v5 = v4;
  uint64_t v6 = v3;
  uint64_t v117 = a3;
  Description = (char *)a2[-1].Description;
  uint64_t v10 = MEMORY[0x1F4188790](a1, a2);
  uint64_t v12 = (char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v10, v13);
  char v95 = (char *)&v81 - v15;
  MEMORY[0x1F4188790](v14, v16);
  uint64_t v96 = (char *)&v81 - v17;
  uint64_t v18 = *(unsigned char **)(v3 + 40);
  uint64_t v19 = *(unsigned char **)(v3 + 48);
  if (v18 != v19 && *v18 == 58)
  {
    *(void *)(v3 + 40) = v18 + 1;
    sub_1C8CB2098();
    uint64_t v18 = *(unsigned char **)(v3 + 40);
  }
  if (v18 == v19) {
    goto LABEL_105;
  }
  int v20 = *v18;
  *(void *)(v3 + 40) = v18 + 1;
  sub_1C8CB2098();
  if (v20 == 60)
  {
    __int16 v77 = 62;
  }
  else
  {
    if (v20 != 123)
    {
      if (v20 == 91)
      {
        uint64_t v92 = a1;
        uint64_t v93 = &v105;
        uint64_t v89 = v117 + 64;
        uint64_t v90 = v117 + 16;
        unint64_t v88 = (void (**)(char *, char *, ValueMetadata *))(Description + 16);
        int64_t v91 = (void (**)(char *, ValueMetadata *))(Description + 8);
        uint64_t v21 = &type metadata for Google_Protobuf_Any;
        long long v87 = xmmword_1C8D8AD80;
        for (char i = 1; ; char i = 0)
        {
          int v24 = *(unsigned __int8 **)(v6 + 40);
          uint64_t v25 = *(unsigned __int8 **)(v6 + 48);
          if (v24 != v25 && *v24 == 93)
          {
            *(void *)(v6 + 40) = v24 + 1;
            sub_1C8CB2098();
            return;
          }
          if ((i & 1) == 0)
          {
            sub_1C8CB2098();
            int v26 = *(unsigned __int8 **)(v6 + 40);
            if (v26 == v25 || *v26 != 44) {
              break;
            }
            *(void *)(v6 + 40) = v26 + 1;
            sub_1C8CB2098();
            int v24 = *(unsigned __int8 **)(v6 + 40);
          }
          if (v24 == v25) {
            break;
          }
          int v29 = *v24;
          uint64_t v28 = v24 + 1;
          int v27 = v29;
          *(void *)(v6 + 40) = v28;
          if (v28 != v25)
          {
            do
            {
              uint64_t v32 = *v28;
              if (v32 > 0x23) {
                break;
              }
              if (((1 << v32) & 0x100002600) != 0)
              {
                int v31 = v28 + 1;
                *(void *)(v6 + 40) = v28 + 1;
              }
              else
              {
                if (v32 != 35) {
                  break;
                }
                *(void *)(v6 + 40) = v28 + 1;
                if (v28 + 1 == v25) {
                  break;
                }
                int v33 = v28[1];
                int v31 = v28 + 2;
                *(void *)(v6 + 40) = v28 + 2;
                if (v33 != 10 && v33 != 13)
                {
                  if (v31 == v25) {
                    break;
                  }
                  int v34 = v28[2];
                  int v31 = v28 + 3;
                  *(void *)(v6 + 40) = v28 + 3;
                  if (v34 != 10 && v34 != 13)
                  {
                    while (v31 != v25)
                    {
                      int v36 = *v31++;
                      int v35 = v36;
                      *(void *)(v6 + 40) = v31;
                      if (v36 == 10 || v35 == 13) {
                        goto LABEL_24;
                      }
                    }
                    break;
                  }
                }
              }
LABEL_24:
              uint64_t v28 = v31;
            }
            while (v31 != v25);
          }
          if (v27 == 60)
          {
            unsigned __int8 v30 = 62;
          }
          else
          {
            if (v27 != 123) {
              break;
            }
            unsigned __int8 v30 = 125;
          }
          sub_1C8D3354C(v6, (uint64_t)&v108);
          *(void *)&long long v104 = 0;
          WORD4(v104) = 256;
          char v37 = v93;
          long long *v93 = 0u;
          v37[1] = 0u;
          void v37[2] = 0u;
          sub_1C8D3354C((uint64_t)&v108, (uint64_t)&v100);
          WORD4(v104) = v30;
          uint64_t v38 = swift_conformsToProtocol2();
          if (v38) {
            uint64_t v39 = v38;
          }
          else {
            uint64_t v39 = 0;
          }
          if (v38) {
            uint64_t v40 = a2;
          }
          else {
            uint64_t v40 = 0;
          }
          if (!v40)
          {
            sub_1C8CB47EC();
            swift_allocError();
            *uint64_t v80 = 6;
            swift_willThrow();
            sub_1C8D335A8((uint64_t)&v108);
            sub_1C8D335FC((uint64_t)&v100);
            return;
          }
          (*(void (**)(long long *__return_ptr))(v39 + 8))(&v97);
          sub_1C8D335A8((uint64_t)&v108);
          long long v94 = v97;
          uint64_t v41 = v98;
          uint64_t v42 = v99;
          sub_1C8CA469C(v105);
          long long v105 = v94;
          *(void *)&long long v106 = v41;
          *((void *)&v106 + 1) = v42;
          uint64_t v43 = v117;
          *(void *)&long long v107 = a2;
          *((void *)&v107 + 1) = v117;
          v110[0] = v100;
          v110[1] = v101;
          long long v111 = v102;
          long long v112 = v103;
          long long v113 = v104;
          long long v114 = v94;
          long long v115 = v106;
          long long v116 = v107;
          if (a2 == v21)
          {
            if (qword_1EA565C88 != -1) {
              swift_once();
            }
            *(void *)&long long v94 = qword_1EA575078;
            unint64_t v48 = (unsigned __int8 *)*((void *)&v111 + 1);
            unint64_t v47 = (unsigned __int8 *)v112;
            if (*((void *)&v111 + 1) != (void)v112)
            {
              while (1)
              {
                uint64_t v51 = *v48;
                if (v51 > 0x23) {
                  break;
                }
                if (((1 << v51) & 0x100002600) != 0)
                {
                  j = v48 + 1;
                  *((void *)&v111 + 1) = v48 + 1;
                }
                else
                {
                  if (v51 != 35) {
                    break;
                  }
                  *((void *)&v111 + 1) = v48 + 1;
                  if (v48 + 1 == (unsigned __int8 *)v112) {
                    goto LABEL_88;
                  }
                  int v52 = v48[1];
                  j = v48 + 2;
                  *((void *)&v111 + 1) = v48 + 2;
                  if (v52 != 10 && v52 != 13)
                  {
                    if (j == (unsigned __int8 *)v112) {
                      goto LABEL_88;
                    }
                    int v53 = v48[2];
                    for (j = v48 + 3; ; ++j)
                    {
                      *((void *)&v111 + 1) = j;
                      if (v53 == 10 || v53 == 13) {
                        break;
                      }
                      if (j == (unsigned __int8 *)v112) {
                        goto LABEL_88;
                      }
                      int v54 = *j;
                      int v53 = v54;
                    }
                  }
                }
                unint64_t v48 = j;
                if (j == (unsigned __int8 *)v112) {
                  goto LABEL_88;
                }
              }
            }
            if (v48 == (unsigned __int8 *)v112 || *v48 != 91)
            {
LABEL_88:
              uint64_t v61 = v94;
              swift_retain();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                type metadata accessor for AnyMessageStorage();
                swift_allocObject();
                uint64_t v68 = swift_retain();
                uint64_t v69 = sub_1C8D66554(v68);
                swift_release();
                uint64_t v61 = v69;
              }
              uint64_t v23 = swift_retain();
              sub_1C8D4D0AC(v23, (uint64_t)v110);
              if (v5) {
                goto LABEL_124;
              }
            }
            else
            {
              *((void *)&v111 + 1) = v48 + 1;
              if (v48 + 1 == (unsigned __int8 *)v112) {
                goto LABEL_114;
              }
              if ((v48[1] & 0xDFu) - 91 < 0xFFFFFFE6) {
                goto LABEL_114;
              }
              *((void *)&v111 + 1) = v48 + 2;
              if (v48 + 2 == (unsigned __int8 *)v112) {
                goto LABEL_114;
              }
              uint64_t v49 = 0;
              while (1)
              {
                int v55 = v48[v49 + 2];
                BOOL v56 = (v55 - 58) > 0xFFFFFFF5 || (v55 & 0xFFFFFFDF) - 91 > 0xFFFFFFE5;
                if (!v56 && (v55 - 46) >= 2 && v55 != 95) {
                  break;
                }
                *((void *)&v111 + 1) = &v48[v49++ + 3];
                if (&v48[v49 + 2] == (unsigned __int8 *)v112) {
                  goto LABEL_114;
                }
              }
              if (v55 != 93)
              {
LABEL_114:
                swift_retain();
                goto LABEL_115;
              }
              uint64_t v86 = v49 + 1;
              swift_retain();
              uint64_t v57 = sub_1C8CA96A4((char *)v48 + 1, v86);
              if (!v58) {
                goto LABEL_115;
              }
              uint64_t v59 = &v48[v49 + 2];
              if (v59 == v47 || *v59 != 93)
              {
                swift_bridgeObjectRelease();
LABEL_115:
                sub_1C8CB47EC();
                swift_allocError();
                *long long v79 = 0;
                swift_willThrow();
LABEL_116:
                sub_1C8CA3D5C(0, 0xC000000000000000);
                swift_release();
                sub_1C8D335FC((uint64_t)v110);
                return;
              }
              uint64_t v60 = &v48[v49 + 3];
              *((void *)&v111 + 1) = v60;
              uint64_t v21 = &type metadata for Google_Protobuf_Any;
              uint64_t v61 = v94;
              if (v60 != v47)
              {
                do
                {
                  uint64_t v71 = *v60;
                  if (v71 > 0x23) {
                    break;
                  }
                  if (((1 << v71) & 0x100002600) != 0)
                  {
                    char v70 = v60 + 1;
                    *((void *)&v111 + 1) = v60 + 1;
                  }
                  else
                  {
                    if (v71 != 35) {
                      break;
                    }
                    *((void *)&v111 + 1) = v60 + 1;
                    if (v60 + 1 == v47) {
                      break;
                    }
                    int v72 = v60[1];
                    char v70 = v60 + 2;
                    *((void *)&v111 + 1) = v60 + 2;
                    if (v72 != 10 && v72 != 13)
                    {
                      if (v70 == v47) {
                        break;
                      }
                      int v73 = v60[2];
                      char v70 = v60 + 3;
                      *((void *)&v111 + 1) = v60 + 3;
                      if (v73 != 10 && v73 != 13)
                      {
                        while (v70 != v47)
                        {
                          int v75 = *v70++;
                          int v74 = v75;
                          *((void *)&v111 + 1) = v70;
                          if (v75 == 10 || v74 == 13) {
                            goto LABEL_91;
                          }
                        }
                        break;
                      }
                    }
                  }
LABEL_91:
                  uint64_t v60 = v70;
                }
                while (v70 != v47);
              }
              uint64_t v85 = v57;
              uint64_t v86 = v58;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                type metadata accessor for AnyMessageStorage();
                uint64_t v62 = swift_allocObject();
                *(void *)(v62 + 16) = 0;
                uint64_t v63 = (void *)(v62 + 16);
                *(void *)(v62 + 24) = 0xE000000000000000;
                *(_OWORD *)(v62 + 32) = v87;
                uint64_t v83 = v62 + 32;
                uint64_t v84 = v62;
                *(unsigned char *)(v62 + 72) = 0;
                swift_beginAccess();
                uint64_t v64 = *(void *)(v61 + 16);
                uint64_t v81 = *(void *)(v61 + 24);
                uint64_t v82 = v64;
                swift_beginAccess();
                uint64_t v65 = v84;
                *uint64_t v63 = v82;
                *(void *)(v65 + 24) = v81;
                swift_retain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                swift_beginAccess();
                sub_1C8D3B90C(v61 + 32, (uint64_t)&v100);
                swift_release();
                uint64_t v66 = v83;
                swift_beginAccess();
                sub_1C8D3B968((uint64_t)&v100, v66);
                swift_endAccess();
                swift_release();
                uint64_t v61 = v84;
              }
              unint64_t v67 = v86;
              swift_retain();
              sub_1C8D63E8C((uint64_t)v85, v67, (uint64_t)v110);
              if (v5)
              {
                swift_bridgeObjectRelease();
LABEL_124:
                swift_release();
                goto LABEL_116;
              }
              swift_bridgeObjectRelease();
            }
            swift_release();
            long long v100 = v87;
            *(void *)&long long v101 = v61;
            sub_1C8CA3CF8(0, 0xC000000000000000);
            swift_retain();
            swift_dynamicCast();
            sub_1C8D88550();
            sub_1C8D88530();
            sub_1C8CA3D5C(0, 0xC000000000000000);
            swift_release();
          }
          else
          {
            uint64_t v44 = v5;
            uint64_t v45 = v21;
            uint64_t v46 = v95;
            (*(void (**)(ValueMetadata *, uint64_t))(v117 + 16))(a2, v117);
            (*(void (**)(_OWORD *, ValueMetadata *, _UNKNOWN **, ValueMetadata *, uint64_t))(v43 + 64))(v110, &type metadata for TextFormatDecoder, &off_1F2355738, a2, v43);
            if (v44)
            {
              (*v91)(v46, a2);
              sub_1C8D335FC((uint64_t)v110);
              return;
            }
            (*v88)(v96, v46, a2);
            sub_1C8D88550();
            sub_1C8D88530();
            (*v91)(v46, a2);
            uint64_t v21 = v45;
            uint64_t v5 = 0;
          }
          sub_1C8D3354C((uint64_t)v110, (uint64_t)&v100);
          sub_1C8D335FC((uint64_t)v110);
          sub_1C8D3B8B0((uint64_t)&v100, v6);
        }
      }
LABEL_105:
      sub_1C8CB47EC();
      swift_allocError();
      *__int16 v76 = 0;
      swift_willThrow();
      return;
    }
    __int16 v77 = 125;
  }
  sub_1C8D3354C(v6, (uint64_t)&v100);
  sub_1C8D331E8((uint64_t)a2, v117, (uint64_t)&v100, v77, (uint64_t)v110);
  if (!v4)
  {
    if (a2 == &type metadata for Google_Protobuf_Any)
    {
      long long v100 = xmmword_1C8D8AD80;
      if (qword_1EA565C88 != -1) {
        swift_once();
      }
      *(void *)&long long v101 = qword_1EA575078;
      swift_retain();
      sub_1C8D4CF74((uint64_t)v110);
      long long v108 = v100;
      uint64_t v109 = v101;
      sub_1C8CA3CF8(v100, *((unint64_t *)&v100 + 1));
      swift_retain();
      swift_dynamicCast();
      sub_1C8D88550();
      sub_1C8D88530();
      sub_1C8CA3D5C(v100, *((unint64_t *)&v100 + 1));
      swift_release();
    }
    else
    {
      uint64_t v78 = v117;
      (*(void (**)(ValueMetadata *, uint64_t))(v117 + 16))(a2, v117);
      (*(void (**)(_OWORD *, ValueMetadata *, _UNKNOWN **, ValueMetadata *, uint64_t))(v78 + 64))(v110, &type metadata for TextFormatDecoder, &off_1F2355738, a2, v78);
      (*((void (**)(char *, char *, ValueMetadata *))Description + 2))(v96, v12, a2);
      sub_1C8D88550();
      sub_1C8D88530();
      (*((void (**)(char *, ValueMetadata *))Description + 1))(v12, a2);
    }
    sub_1C8D3354C((uint64_t)v110, (uint64_t)&v100);
    sub_1C8D335FC((uint64_t)v110);
    sub_1C8D3B8B0((uint64_t)&v100, v6);
  }
}

uint64_t sub_1C8D38424(char *a1, ValueMetadata *a2, uint64_t a3)
{
  return sub_1C8D36F34(a1, a2, a3);
}

void sub_1C8D3843C(uint64_t a1, ValueMetadata *a2, uint64_t a3)
{
}

uint64_t (*sub_1C8D38454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  uint64_t v6 = v5;
  uint64_t v110 = a1;
  uint64_t v116 = *(void *)(a5 + 8);
  uint64_t v108 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness, v11);
  long long v113 = (char *)&v101 - v12;
  uint64_t v119 = *(void *)(a4 + 8);
  uint64_t v122 = a2;
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v13, v15);
  long long v112 = (char *)&v101 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16, v18);
  v120 = (char *)&v101 - v19;
  uint64_t v20 = sub_1C8D88620();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v23 = MEMORY[0x1F4188790](v20, v22);
  uint64_t v109 = (char *)&v101 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x1F4188790](v23, v25);
  long long v111 = (char *)&v101 - v27;
  MEMORY[0x1F4188790](v26, v28);
  unsigned __int8 v30 = (char *)&v101 - v29;
  uint64_t v31 = sub_1C8D88620();
  uint64_t v124 = *(void *)(v31 - 8);
  uint64_t v33 = MEMORY[0x1F4188790](v31, v32);
  long long v114 = (char *)&v101 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v33, v35);
  uint64_t v115 = v14;
  int v36 = *(void (**)(void))(v14 + 56);
  v126 = (char *)&v101 - v37;
  uint64_t v121 = v13;
  v36();
  uint64_t v117 = v10;
  uint64_t v40 = *(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56);
  uint64_t v39 = v10 + 56;
  uint64_t v38 = v40;
  v125 = v30;
  v40(v30, 1, 1, AssociatedTypeWitness);
  uint64_t v41 = *(unsigned __int8 **)(v6 + 40);
  uint64_t v42 = *(unsigned __int8 **)(v6 + 48);
  if (v41 == v42) {
    goto LABEL_6;
  }
  uint64_t v104 = AssociatedTypeWitness;
  uint64_t v118 = v31;
  int v43 = *v41;
  *(void *)(v6 + 40) = v41 + 1;
  sub_1C8CB2098();
  if (v43 == 60)
  {
    uint64_t v102 = v39;
    long long v103 = v38;
    uint64_t v105 = v21;
    uint64_t v106 = v20;
    int v44 = 62;
  }
  else
  {
    BOOL v82 = v43 == 123;
    uint64_t v31 = v118;
    if (!v82)
    {
LABEL_6:
      sub_1C8CB47EC();
      swift_allocError();
      *uint64_t v45 = 0;
      swift_willThrow();
      goto LABEL_7;
    }
    uint64_t v102 = v39;
    long long v103 = v38;
    uint64_t v105 = v21;
    uint64_t v106 = v20;
    int v44 = 125;
  }
  uint64_t v101 = v116 + 32;
  uint64_t v48 = v119;
  uint64_t v49 = v120;
  uint64_t v107 = v119 + 32;
  uint64_t v50 = *(unsigned __int8 **)(v6 + 40);
  uint64_t v51 = v123;
  while (1)
  {
    do
    {
LABEL_10:
      if (v50 == v42)
      {
LABEL_29:
        char i = (char *)v42;
      }
      else
      {
        unsigned int v52 = *v50;
        if (v52 == v44)
        {
          long long v87 = v49;
          *(void *)(v6 + 40) = v50 + 1;
          sub_1C8CB2098();
          uint64_t v46 = v124;
          unint64_t v88 = v114;
          uint64_t v31 = v118;
          (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v114, v126, v118);
          uint64_t v89 = v115;
          uint64_t v90 = v121;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v115 + 48))(v88, 1, v121) == 1)
          {
            (*(void (**)(char *, uint64_t))(v46 + 8))(v88, v31);
            uint64_t v21 = v105;
            uint64_t v20 = v106;
            unint64_t v47 = v125;
          }
          else
          {
            uint64_t v123 = v51;
            int64_t v91 = v87;
            (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v87, v88, v90);
            uint64_t v21 = v105;
            uint64_t v20 = v106;
            uint64_t v92 = v111;
            unint64_t v47 = v125;
            (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v111, v125, v106);
            uint64_t v93 = v89;
            uint64_t v94 = v104;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v117 + 48))(v92, 1, v104) != 1)
            {
              (*(void (**)(char *, char *, uint64_t))(v117 + 32))(v113, v92, v94);
              uint64_t v96 = v91;
              uint64_t v97 = v121;
              (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v112, v96, v121);
              uint64_t v98 = v109;
              (*(void (**)(char *, char *, uint64_t))(v117 + 16))(v109, v113, v94);
              v103(v98, 0, 1, v94);
              swift_getAssociatedConformanceWitness();
              sub_1C8D88290();
              sub_1C8D882B0();
              (*(void (**)(char *, uint64_t))(v117 + 8))(v113, v94);
              (*(void (**)(char *, uint64_t))(v93 + 8))(v120, v97);
              (*(void (**)(char *, uint64_t))(v21 + 8))(v47, v20);
              return (uint64_t (*)())(*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v126, v31);
            }
            (*(void (**)(char *, uint64_t))(v93 + 8))(v91, v121);
            (*(void (**)(char *, uint64_t))(v21 + 8))(v92, v20);
          }
          sub_1C8CB47EC();
          swift_allocError();
          *char v95 = 0;
          swift_willThrow();
          goto LABEL_117;
        }
        for (i = (char *)v50; v52 <= 0x23; unsigned int v52 = *i)
        {
          if (((1 << v52) & 0x100002600) != 0)
          {
            *(void *)(v6 + 40) = ++i;
          }
          else
          {
            if (v52 != 35) {
              break;
            }
            *(void *)(v6 + 40) = i + 1;
            if (i + 1 == (char *)v42) {
              goto LABEL_29;
            }
            int v54 = i[1];
            *(void *)(v6 + 40) = i + 2;
            if (v54 == 10 || v54 == 13)
            {
              i += 2;
            }
            else
            {
              if (i + 2 == (char *)v42) {
                goto LABEL_29;
              }
              int v55 = i[2];
              for (i += 3; ; ++i)
              {
                *(void *)(v6 + 40) = i;
                if (v55 == 10 || v55 == 13) {
                  break;
                }
                if (i == (char *)v42) {
                  goto LABEL_29;
                }
                int v56 = *i;
                int v55 = v56;
              }
            }
          }
          if (i == (char *)v42) {
            goto LABEL_29;
          }
        }
      }
      uint64_t v50 = v42;
    }
    while (i == (char *)v42);
    int v57 = *i;
    if (v57 == 91
      || ((v57 - 58) <= 0xFFFFFFF6 ? (BOOL v58 = (v57 & 0xFFFFFFDF) - 91 >= 0xFFFFFFE6) : (BOOL v58 = 1), !v58))
    {
      sub_1C8CB47EC();
      swift_allocError();
      *uint64_t v99 = 0;
      goto LABEL_120;
    }
    uint64_t v59 = 0;
    while (1)
    {
      int v60 = i[v59];
      if ((v60 & 0xFFFFFFDF) - 91 <= 0xFFFFFFE5 && v60 != 95 && (v60 - 48) > 9) {
        break;
      }
      *(void *)(v6 + 40) = &i[++v59];
      if (&i[v59] == (char *)v42)
      {
        uint64_t v59 = v42 - (unsigned __int8 *)i;
        goto LABEL_63;
      }
    }
    uint64_t v62 = (unsigned __int8 *)&i[v59];
    if (&i[v59] != (char *)v42)
    {
      do
      {
        uint64_t v64 = *v62;
        if (v64 > 0x23) {
          break;
        }
        if (((1 << v64) & 0x100002600) != 0)
        {
          uint64_t v63 = v62 + 1;
          *(void *)(v6 + 40) = v62 + 1;
        }
        else
        {
          if (v64 != 35) {
            break;
          }
          *(void *)(v6 + 40) = v62 + 1;
          if (v62 + 1 == v42) {
            break;
          }
          int v65 = v62[1];
          uint64_t v63 = v62 + 2;
          *(void *)(v6 + 40) = v62 + 2;
          if (v65 != 10 && v65 != 13)
          {
            if (v63 == v42) {
              break;
            }
            int v66 = v62[2];
            uint64_t v63 = v62 + 3;
            *(void *)(v6 + 40) = v62 + 3;
            if (v66 != 10 && v66 != 13)
            {
              while (v63 != v42)
              {
                int v68 = *v63++;
                int v67 = v68;
                *(void *)(v6 + 40) = v63;
                if (v68 == 10 || v67 == 13) {
                  goto LABEL_48;
                }
              }
              break;
            }
          }
        }
LABEL_48:
        uint64_t v62 = v63;
      }
      while (v63 != v42);
    }
LABEL_63:
    uint64_t result = sub_1C8CA96A4(i, v59);
    if (!v70)
    {
      __break(1u);
      return result;
    }
    uint64_t v71 = result;
    uint64_t v72 = v70;
    if (result == (uint64_t (*)())7955819 && v70 == 0xE300000000000000
      || (sub_1C8D887C0() & 1) != 0
      || v71 == (uint64_t (*)())49 && v72 == 0xE100000000000000
      || (sub_1C8D887C0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v73 = v51;
      (*(void (**)(char *, uint64_t, ValueMetadata *, _UNKNOWN **))(v48 + 32))(v126, v6, &type metadata for TextFormatDecoder, &off_1F2355738);
      goto LABEL_71;
    }
    if (v71 != (uint64_t (*)())0x65756C6176 || v72 != 0xE500000000000000)
    {
      char v83 = sub_1C8D887C0();
      BOOL v84 = v71 == (uint64_t (*)())50 && v72 == 0xE100000000000000;
      BOOL v85 = v84;
      if ((v83 & 1) == 0 && !v85) {
        break;
      }
    }
    swift_bridgeObjectRelease();
LABEL_109:
    uint64_t v73 = v51;
    (*(void (**)(char *, uint64_t, ValueMetadata *, _UNKNOWN **))(v116 + 32))(v125, v6, &type metadata for TextFormatDecoder, &off_1F2355738);
LABEL_71:
    uint64_t v51 = v73;
    if (v73) {
      goto LABEL_121;
    }
    uint64_t v50 = *(unsigned __int8 **)(v6 + 40);
    uint64_t v42 = *(unsigned __int8 **)(v6 + 48);
    if (v50 != v42)
    {
      int v74 = *v50;
      if (v74 == 59 || v74 == 44)
      {
        int v75 = v50 + 1;
        *(void *)(v6 + 40) = v50 + 1;
        uint64_t v50 = v42;
        if (v75 != v42)
        {
          uint64_t v50 = v75;
          while (1)
          {
            uint64_t v77 = *v50;
            if (v77 > 0x23) {
              break;
            }
            if (((1 << v77) & 0x100002600) != 0)
            {
              __int16 v76 = v50 + 1;
              *(void *)(v6 + 40) = v50 + 1;
            }
            else
            {
              if (v77 != 35) {
                goto LABEL_10;
              }
              *(void *)(v6 + 40) = v50 + 1;
              if (v50 + 1 == v42)
              {
                uint64_t v50 = v42;
                goto LABEL_10;
              }
              int v78 = v50[1];
              __int16 v76 = v50 + 2;
              *(void *)(v6 + 40) = v50 + 2;
              if (v78 != 10 && v78 != 13)
              {
                if (v76 == v42)
                {
                  uint64_t v50 = v42;
                  goto LABEL_10;
                }
                int v79 = v50[2];
                __int16 v76 = v50 + 3;
                *(void *)(v6 + 40) = v50 + 3;
                if (v79 != 10 && v79 != 13)
                {
                  while (v76 != v42)
                  {
                    int v81 = *v76++;
                    int v80 = v81;
                    *(void *)(v6 + 40) = v76;
                    BOOL v82 = v81 == 10 || v80 == 13;
                    if (v82) {
                      goto LABEL_78;
                    }
                  }
                  uint64_t v50 = v42;
                  goto LABEL_10;
                }
              }
            }
LABEL_78:
            uint64_t v50 = v76;
            if (v76 == v42)
            {
              uint64_t v50 = v42;
              goto LABEL_10;
            }
          }
        }
      }
    }
  }
  char v86 = sub_1C8D887C0();
  swift_bridgeObjectRelease();
  if (v86) {
    goto LABEL_109;
  }
  sub_1C8CB47EC();
  swift_allocError();
  *long long v100 = 7;
LABEL_120:
  swift_willThrow();
LABEL_121:
  uint64_t v21 = v105;
  uint64_t v20 = v106;
  uint64_t v31 = v118;
LABEL_7:
  uint64_t v46 = v124;
  unint64_t v47 = v125;
LABEL_117:
  (*(void (**)(char *, uint64_t))(v21 + 8))(v47, v20);
  return (uint64_t (*)())(*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v126, v31);
}

uint64_t (*sub_1C8D39074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  uint64_t v6 = v5;
  uint64_t v99 = a5;
  uint64_t v100 = a1;
  uint64_t v8 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1, a2);
  uint64_t v105 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = *(void *)(v10 + 8);
  uint64_t v111 = v11;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v15 = MEMORY[0x1F4188790](AssociatedTypeWitness, v14);
  long long v103 = (char *)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15, v17);
  uint64_t v108 = (char *)&v93 - v18;
  uint64_t v19 = sub_1C8D88620();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v19, v21);
  uint64_t v102 = (char *)&v93 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x1F4188790](v22, v24);
  uint64_t v101 = (char *)&v93 - v26;
  MEMORY[0x1F4188790](v25, v27);
  uint64_t v29 = (char *)&v93 - v28;
  uint64_t v30 = sub_1C8D88620();
  uint64_t v114 = *(void *)(v30 - 8);
  uint64_t v32 = MEMORY[0x1F4188790](v30, v31);
  uint64_t v106 = (char *)&v93 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v32, v34);
  uint64_t v107 = v13;
  uint64_t v35 = *(void (**)(void))(v13 + 56);
  uint64_t v116 = (char *)&v93 - v36;
  uint64_t v113 = AssociatedTypeWitness;
  v35();
  uint64_t v104 = v8;
  uint64_t v38 = v8 + 56;
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  uint64_t v115 = v29;
  uint64_t v39 = a3;
  v37(v29, 1, 1, a3);
  uint64_t v40 = *(unsigned __int8 **)(v6 + 40);
  uint64_t v41 = *(unsigned __int8 **)(v6 + 48);
  if (v40 == v41) {
    goto LABEL_6;
  }
  uint64_t v109 = v30;
  int v42 = *v40;
  *(void *)(v6 + 40) = v40 + 1;
  sub_1C8CB2098();
  if (v42 == 60)
  {
    uint64_t v94 = v38;
    char v95 = v37;
    uint64_t v96 = v20;
    uint64_t v97 = v19;
    int v43 = 62;
  }
  else
  {
    BOOL v79 = v42 == 123;
    uint64_t v30 = v109;
    if (!v79)
    {
LABEL_6:
      sub_1C8CB47EC();
      swift_allocError();
      *int v44 = 0;
      swift_willThrow();
      goto LABEL_7;
    }
    uint64_t v94 = v38;
    char v95 = v37;
    uint64_t v96 = v20;
    uint64_t v97 = v19;
    int v43 = 125;
  }
  uint64_t v47 = v110;
  uint64_t v98 = v110 + 32;
  uint64_t v48 = *(unsigned __int8 **)(v6 + 40);
  uint64_t v49 = v112;
  while (1)
  {
    do
    {
LABEL_10:
      if (v48 == v41)
      {
LABEL_29:
        char i = (char *)v41;
      }
      else
      {
        unsigned int v50 = *v48;
        if (v50 == v43)
        {
          *(void *)(v6 + 40) = v48 + 1;
          sub_1C8CB2098();
          uint64_t v45 = v114;
          BOOL v84 = v106;
          uint64_t v30 = v109;
          (*(void (**)(char *, char *, uint64_t))(v114 + 16))(v106, v116, v109);
          uint64_t v85 = v107;
          uint64_t v86 = v113;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v107 + 48))(v84, 1, v113) == 1)
          {
            (*(void (**)(char *, uint64_t))(v45 + 8))(v84, v30);
            uint64_t v20 = v96;
            uint64_t v19 = v97;
            uint64_t v46 = (uint64_t)v115;
          }
          else
          {
            uint64_t v112 = v49;
            (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v108, v84, v86);
            uint64_t v20 = v96;
            uint64_t v19 = v97;
            long long v87 = v101;
            uint64_t v46 = (uint64_t)v115;
            (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v101, v115, v97);
            uint64_t v88 = v104;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v104 + 48))(v87, 1, v39) != 1)
            {
              (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v105, v87, v39);
              (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v103, v108, v113);
              uint64_t v90 = v102;
              (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v102, v105, v39);
              v95(v90, 0, 1, v39);
              swift_getAssociatedConformanceWitness();
              sub_1C8D88290();
              sub_1C8D882B0();
              (*(void (**)(char *, uint64_t))(v88 + 8))(v105, v39);
              (*(void (**)(char *, uint64_t))(v85 + 8))(v108, v113);
              (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v46, v19);
              return (uint64_t (*)())(*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v116, v30);
            }
            (*(void (**)(char *, uint64_t))(v85 + 8))(v108, v113);
            (*(void (**)(char *, uint64_t))(v20 + 8))(v87, v19);
          }
          sub_1C8CB47EC();
          swift_allocError();
          *uint64_t v89 = 0;
          swift_willThrow();
          goto LABEL_117;
        }
        for (i = (char *)v48; v50 <= 0x23; unsigned int v50 = *i)
        {
          if (((1 << v50) & 0x100002600) != 0)
          {
            *(void *)(v6 + 40) = ++i;
          }
          else
          {
            if (v50 != 35) {
              break;
            }
            *(void *)(v6 + 40) = i + 1;
            if (i + 1 == (char *)v41) {
              goto LABEL_29;
            }
            int v52 = i[1];
            *(void *)(v6 + 40) = i + 2;
            if (v52 == 10 || v52 == 13)
            {
              i += 2;
            }
            else
            {
              if (i + 2 == (char *)v41) {
                goto LABEL_29;
              }
              int v53 = i[2];
              for (i += 3; ; ++i)
              {
                *(void *)(v6 + 40) = i;
                if (v53 == 10 || v53 == 13) {
                  break;
                }
                if (i == (char *)v41) {
                  goto LABEL_29;
                }
                int v54 = *i;
                int v53 = v54;
              }
            }
          }
          if (i == (char *)v41) {
            goto LABEL_29;
          }
        }
      }
      uint64_t v48 = v41;
    }
    while (i == (char *)v41);
    int v55 = *i;
    if (v55 == 91
      || ((v55 - 58) <= 0xFFFFFFF6 ? (BOOL v56 = (v55 & 0xFFFFFFDF) - 91 >= 0xFFFFFFE6) : (BOOL v56 = 1), !v56))
    {
      sub_1C8CB47EC();
      swift_allocError();
      unsigned char *v91 = 0;
      goto LABEL_120;
    }
    uint64_t v57 = 0;
    while (1)
    {
      int v58 = i[v57];
      if ((v58 & 0xFFFFFFDF) - 91 <= 0xFFFFFFE5 && v58 != 95 && (v58 - 48) > 9) {
        break;
      }
      *(void *)(v6 + 40) = &i[++v57];
      if (&i[v57] == (char *)v41)
      {
        uint64_t v57 = v41 - (unsigned __int8 *)i;
        goto LABEL_63;
      }
    }
    int v60 = (unsigned __int8 *)&i[v57];
    if (&i[v57] != (char *)v41)
    {
      do
      {
        uint64_t v62 = *v60;
        if (v62 > 0x23) {
          break;
        }
        if (((1 << v62) & 0x100002600) != 0)
        {
          uint64_t v61 = v60 + 1;
          *(void *)(v6 + 40) = v60 + 1;
        }
        else
        {
          if (v62 != 35) {
            break;
          }
          *(void *)(v6 + 40) = v60 + 1;
          if (v60 + 1 == v41) {
            break;
          }
          int v63 = v60[1];
          uint64_t v61 = v60 + 2;
          *(void *)(v6 + 40) = v60 + 2;
          if (v63 != 10 && v63 != 13)
          {
            if (v61 == v41) {
              break;
            }
            int v64 = v60[2];
            uint64_t v61 = v60 + 3;
            *(void *)(v6 + 40) = v60 + 3;
            if (v64 != 10 && v64 != 13)
            {
              while (v61 != v41)
              {
                int v66 = *v61++;
                int v65 = v66;
                *(void *)(v6 + 40) = v61;
                if (v66 == 10 || v65 == 13) {
                  goto LABEL_48;
                }
              }
              break;
            }
          }
        }
LABEL_48:
        int v60 = v61;
      }
      while (v61 != v41);
    }
LABEL_63:
    uint64_t result = sub_1C8CA96A4(i, v57);
    if (!v68)
    {
      __break(1u);
      return result;
    }
    uint64_t v69 = result;
    uint64_t v70 = v68;
    if (result == (uint64_t (*)())7955819 && v68 == 0xE300000000000000
      || (sub_1C8D887C0() & 1) != 0
      || v69 == (uint64_t (*)())49 && v70 == 0xE100000000000000
      || (sub_1C8D887C0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t, ValueMetadata *, _UNKNOWN **))(v47 + 32))(v116, v6, &type metadata for TextFormatDecoder, &off_1F2355738);
      if (v49) {
        goto LABEL_121;
      }
      goto LABEL_71;
    }
    if (v69 == (uint64_t (*)())0x65756C6176 && v70 == 0xE500000000000000
      || ((char v80 = sub_1C8D887C0(), v69 == (uint64_t (*)())50) ? (v81 = v70 == 0xE100000000000000) : (v81 = 0),
          !v81 ? (char v82 = 0) : (char v82 = 1),
          (v80 & 1) != 0 || (v82 & 1) != 0))
    {
      swift_bridgeObjectRelease();
      goto LABEL_108;
    }
    char v83 = sub_1C8D887C0();
    swift_bridgeObjectRelease();
    if ((v83 & 1) == 0) {
      break;
    }
LABEL_108:
    sub_1C8D367CC((uint64_t)v115, v39, v99);
    if (v49) {
      goto LABEL_121;
    }
LABEL_71:
    uint64_t v48 = *(unsigned __int8 **)(v6 + 40);
    uint64_t v41 = *(unsigned __int8 **)(v6 + 48);
    if (v48 != v41)
    {
      int v71 = *v48;
      if (v71 == 59 || v71 == 44)
      {
        uint64_t v72 = v48 + 1;
        *(void *)(v6 + 40) = v48 + 1;
        uint64_t v48 = v41;
        if (v72 != v41)
        {
          uint64_t v48 = v72;
          while (1)
          {
            uint64_t v74 = *v48;
            if (v74 > 0x23) {
              break;
            }
            if (((1 << v74) & 0x100002600) != 0)
            {
              uint64_t v73 = v48 + 1;
              *(void *)(v6 + 40) = v48 + 1;
            }
            else
            {
              if (v74 != 35) {
                goto LABEL_10;
              }
              *(void *)(v6 + 40) = v48 + 1;
              if (v48 + 1 == v41)
              {
                uint64_t v48 = v41;
                goto LABEL_10;
              }
              int v75 = v48[1];
              uint64_t v73 = v48 + 2;
              *(void *)(v6 + 40) = v48 + 2;
              if (v75 != 10 && v75 != 13)
              {
                if (v73 == v41)
                {
                  uint64_t v48 = v41;
                  goto LABEL_10;
                }
                int v76 = v48[2];
                uint64_t v73 = v48 + 3;
                *(void *)(v6 + 40) = v48 + 3;
                if (v76 != 10 && v76 != 13)
                {
                  while (v73 != v41)
                  {
                    int v78 = *v73++;
                    int v77 = v78;
                    *(void *)(v6 + 40) = v73;
                    BOOL v79 = v78 == 10 || v77 == 13;
                    if (v79) {
                      goto LABEL_77;
                    }
                  }
                  uint64_t v48 = v41;
                  goto LABEL_10;
                }
              }
            }
LABEL_77:
            uint64_t v48 = v73;
            if (v73 == v41)
            {
              uint64_t v48 = v41;
              goto LABEL_10;
            }
          }
        }
      }
    }
  }
  sub_1C8CB47EC();
  swift_allocError();
  *uint64_t v92 = 7;
LABEL_120:
  swift_willThrow();
LABEL_121:
  uint64_t v20 = v96;
  uint64_t v19 = v97;
  uint64_t v30 = v109;
LABEL_7:
  uint64_t v45 = v114;
  uint64_t v46 = (uint64_t)v115;
LABEL_117:
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v46, v19);
  return (uint64_t (*)())(*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v116, v30);
}

void sub_1C8D39C18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v14 = *(unsigned char **)(v6 + 40);
  uint64_t v15 = *(unsigned char **)(v6 + 48);
  if (v14 != v15 && *v14 == 58)
  {
    *(void *)(v6 + 40) = v14 + 1;
    sub_1C8CB2098();
    uint64_t v14 = *(unsigned char **)(v6 + 40);
  }
  if (v14 == v15 || *v14 != 91)
  {
    a6(a1, a2, a3, a4, a5);
  }
  else
  {
    *(void *)(v6 + 40) = v14 + 1;
    sub_1C8CB2098();
    uint64_t v16 = *(unsigned char **)(v6 + 40);
    if (v16 == *(unsigned char **)(v6 + 48) || *v16 != 93)
    {
      while (1)
      {
        a6(a1, a2, a3, a4, a5);
        if (v7) {
          break;
        }
        uint64_t v16 = *(unsigned char **)(v6 + 40);
        uint64_t v17 = *(unsigned char **)(v6 + 48);
        if (v16 != v17 && *v16 == 93) {
          goto LABEL_8;
        }
        sub_1C8CB2098();
        uint64_t v18 = *(unsigned char **)(v6 + 40);
        if (v18 == v17 || *v18 != 44)
        {
          sub_1C8CB47EC();
          swift_allocError();
          *uint64_t v19 = 0;
          swift_willThrow();
          return;
        }
        *(void *)(v6 + 40) = v18 + 1;
        sub_1C8CB2098();
      }
    }
    else
    {
LABEL_8:
      *(void *)(v6 + 40) = v16 + 1;
      sub_1C8CB2098();
    }
  }
}

uint64_t (*sub_1C8D39D9C(uint64_t a1, uint64_t a2, ValueMetadata *a3, uint64_t a4, uint64_t a5))()
{
  uint64_t v6 = v5;
  uint64_t v99 = a5;
  uint64_t v100 = a1;
  Description = a3[-1].Description;
  MEMORY[0x1F4188790](a1, a2);
  uint64_t v105 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = *(void *)(v10 + 8);
  uint64_t v111 = v11;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v15 = MEMORY[0x1F4188790](AssociatedTypeWitness, v14);
  long long v103 = (char *)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15, v17);
  uint64_t v108 = (char *)&v93 - v18;
  uint64_t v19 = sub_1C8D88620();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v19, v21);
  uint64_t v102 = (char *)&v93 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x1F4188790](v22, v24);
  uint64_t v101 = (char *)&v93 - v26;
  MEMORY[0x1F4188790](v25, v27);
  uint64_t v29 = (char *)&v93 - v28;
  uint64_t v30 = sub_1C8D88620();
  uint64_t v114 = *(void *)(v30 - 8);
  uint64_t v32 = MEMORY[0x1F4188790](v30, v31);
  uint64_t v106 = (char *)&v93 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v32, v34);
  uint64_t v107 = v13;
  uint64_t v35 = *(void (**)(void))(v13 + 56);
  uint64_t v116 = (char *)&v93 - v36;
  uint64_t v113 = AssociatedTypeWitness;
  v35();
  uint64_t v104 = Description;
  uint64_t v38 = Description + 7;
  uint64_t v37 = (void (*)(char *, uint64_t, uint64_t, ValueMetadata *))Description[7];
  uint64_t v115 = v29;
  uint64_t v39 = a3;
  v37(v29, 1, 1, a3);
  uint64_t v40 = *(unsigned __int8 **)(v6 + 40);
  uint64_t v41 = *(unsigned __int8 **)(v6 + 48);
  if (v40 == v41) {
    goto LABEL_6;
  }
  uint64_t v109 = v30;
  int v42 = *v40;
  *(void *)(v6 + 40) = v40 + 1;
  sub_1C8CB2098();
  if (v42 == 60)
  {
    uint64_t v94 = v38;
    char v95 = v37;
    uint64_t v96 = v20;
    uint64_t v97 = v19;
    int v43 = 62;
  }
  else
  {
    BOOL v79 = v42 == 123;
    uint64_t v30 = v109;
    if (!v79)
    {
LABEL_6:
      sub_1C8CB47EC();
      swift_allocError();
      *int v44 = 0;
      swift_willThrow();
      goto LABEL_7;
    }
    uint64_t v94 = v38;
    char v95 = v37;
    uint64_t v96 = v20;
    uint64_t v97 = v19;
    int v43 = 125;
  }
  uint64_t v47 = v110;
  uint64_t v98 = v110 + 32;
  uint64_t v48 = *(unsigned __int8 **)(v6 + 40);
  uint64_t v49 = v112;
  while (1)
  {
    do
    {
LABEL_10:
      if (v48 == v41)
      {
LABEL_29:
        char i = (char *)v41;
      }
      else
      {
        unsigned int v50 = *v48;
        if (v50 == v43)
        {
          *(void *)(v6 + 40) = v48 + 1;
          sub_1C8CB2098();
          uint64_t v45 = v114;
          BOOL v84 = v106;
          uint64_t v30 = v109;
          (*(void (**)(char *, char *, uint64_t))(v114 + 16))(v106, v116, v109);
          uint64_t v85 = v107;
          uint64_t v86 = v113;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v107 + 48))(v84, 1, v113) == 1)
          {
            (*(void (**)(char *, uint64_t))(v45 + 8))(v84, v30);
            uint64_t v20 = v96;
            uint64_t v19 = v97;
            uint64_t v46 = v115;
          }
          else
          {
            uint64_t v112 = v49;
            (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v108, v84, v86);
            uint64_t v20 = v96;
            uint64_t v19 = v97;
            long long v87 = v101;
            uint64_t v46 = v115;
            (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v101, v115, v97);
            uint64_t v88 = v104;
            if (((unsigned int (*)(char *, uint64_t, ValueMetadata *))v104[6])(v87, 1, v39) != 1)
            {
              ((void (*)(char *, char *, ValueMetadata *))v88[4])(v105, v87, v39);
              (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v103, v108, v113);
              uint64_t v90 = v102;
              ((void (*)(char *, char *, ValueMetadata *))v88[2])(v102, v105, v39);
              v95(v90, 0, 1, v39);
              swift_getAssociatedConformanceWitness();
              sub_1C8D88290();
              sub_1C8D882B0();
              ((void (*)(char *, ValueMetadata *))v88[1])(v105, v39);
              (*(void (**)(char *, uint64_t))(v85 + 8))(v108, v113);
              (*(void (**)(char *, uint64_t))(v20 + 8))(v46, v19);
              return (uint64_t (*)())(*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v116, v30);
            }
            (*(void (**)(char *, uint64_t))(v85 + 8))(v108, v113);
            (*(void (**)(char *, uint64_t))(v20 + 8))(v87, v19);
          }
          sub_1C8CB47EC();
          swift_allocError();
          *uint64_t v89 = 0;
          swift_willThrow();
          goto LABEL_117;
        }
        for (i = (char *)v48; v50 <= 0x23; unsigned int v50 = *i)
        {
          if (((1 << v50) & 0x100002600) != 0)
          {
            *(void *)(v6 + 40) = ++i;
          }
          else
          {
            if (v50 != 35) {
              break;
            }
            *(void *)(v6 + 40) = i + 1;
            if (i + 1 == (char *)v41) {
              goto LABEL_29;
            }
            int v52 = i[1];
            *(void *)(v6 + 40) = i + 2;
            if (v52 == 10 || v52 == 13)
            {
              i += 2;
            }
            else
            {
              if (i + 2 == (char *)v41) {
                goto LABEL_29;
              }
              int v53 = i[2];
              for (i += 3; ; ++i)
              {
                *(void *)(v6 + 40) = i;
                if (v53 == 10 || v53 == 13) {
                  break;
                }
                if (i == (char *)v41) {
                  goto LABEL_29;
                }
                int v54 = *i;
                int v53 = v54;
              }
            }
          }
          if (i == (char *)v41) {
            goto LABEL_29;
          }
        }
      }
      uint64_t v48 = v41;
    }
    while (i == (char *)v41);
    int v55 = *i;
    if (v55 == 91
      || ((v55 - 58) <= 0xFFFFFFF6 ? (BOOL v56 = (v55 & 0xFFFFFFDF) - 91 >= 0xFFFFFFE6) : (BOOL v56 = 1), !v56))
    {
      sub_1C8CB47EC();
      swift_allocError();
      unsigned char *v91 = 0;
      goto LABEL_120;
    }
    uint64_t v57 = 0;
    while (1)
    {
      int v58 = i[v57];
      if ((v58 & 0xFFFFFFDF) - 91 <= 0xFFFFFFE5 && v58 != 95 && (v58 - 48) > 9) {
        break;
      }
      *(void *)(v6 + 40) = &i[++v57];
      if (&i[v57] == (char *)v41)
      {
        uint64_t v57 = v41 - (unsigned __int8 *)i;
        goto LABEL_63;
      }
    }
    int v60 = (unsigned __int8 *)&i[v57];
    if (&i[v57] != (char *)v41)
    {
      do
      {
        uint64_t v62 = *v60;
        if (v62 > 0x23) {
          break;
        }
        if (((1 << v62) & 0x100002600) != 0)
        {
          uint64_t v61 = v60 + 1;
          *(void *)(v6 + 40) = v60 + 1;
        }
        else
        {
          if (v62 != 35) {
            break;
          }
          *(void *)(v6 + 40) = v60 + 1;
          if (v60 + 1 == v41) {
            break;
          }
          int v63 = v60[1];
          uint64_t v61 = v60 + 2;
          *(void *)(v6 + 40) = v60 + 2;
          if (v63 != 10 && v63 != 13)
          {
            if (v61 == v41) {
              break;
            }
            int v64 = v60[2];
            uint64_t v61 = v60 + 3;
            *(void *)(v6 + 40) = v60 + 3;
            if (v64 != 10 && v64 != 13)
            {
              while (v61 != v41)
              {
                int v66 = *v61++;
                int v65 = v66;
                *(void *)(v6 + 40) = v61;
                if (v66 == 10 || v65 == 13) {
                  goto LABEL_48;
                }
              }
              break;
            }
          }
        }
LABEL_48:
        int v60 = v61;
      }
      while (v61 != v41);
    }
LABEL_63:
    uint64_t result = sub_1C8CA96A4(i, v57);
    if (!v68)
    {
      __break(1u);
      return result;
    }
    uint64_t v69 = result;
    uint64_t v70 = v68;
    if (result == (uint64_t (*)())7955819 && v68 == 0xE300000000000000
      || (sub_1C8D887C0() & 1) != 0
      || v69 == (uint64_t (*)())49 && v70 == 0xE100000000000000
      || (sub_1C8D887C0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t, ValueMetadata *, _UNKNOWN **))(v47 + 32))(v116, v6, &type metadata for TextFormatDecoder, &off_1F2355738);
      if (v49) {
        goto LABEL_121;
      }
      goto LABEL_71;
    }
    if (v69 == (uint64_t (*)())0x65756C6176 && v70 == 0xE500000000000000
      || ((char v80 = sub_1C8D887C0(), v69 == (uint64_t (*)())50) ? (v81 = v70 == 0xE100000000000000) : (v81 = 0),
          !v81 ? (char v82 = 0) : (char v82 = 1),
          (v80 & 1) != 0 || (v82 & 1) != 0))
    {
      swift_bridgeObjectRelease();
      goto LABEL_108;
    }
    char v83 = sub_1C8D887C0();
    swift_bridgeObjectRelease();
    if ((v83 & 1) == 0) {
      break;
    }
LABEL_108:
    sub_1C8D36F34(v115, v39, v99);
    if (v49) {
      goto LABEL_121;
    }
LABEL_71:
    uint64_t v48 = *(unsigned __int8 **)(v6 + 40);
    uint64_t v41 = *(unsigned __int8 **)(v6 + 48);
    if (v48 != v41)
    {
      int v71 = *v48;
      if (v71 == 59 || v71 == 44)
      {
        uint64_t v72 = v48 + 1;
        *(void *)(v6 + 40) = v48 + 1;
        uint64_t v48 = v41;
        if (v72 != v41)
        {
          uint64_t v48 = v72;
          while (1)
          {
            uint64_t v74 = *v48;
            if (v74 > 0x23) {
              break;
            }
            if (((1 << v74) & 0x100002600) != 0)
            {
              uint64_t v73 = v48 + 1;
              *(void *)(v6 + 40) = v48 + 1;
            }
            else
            {
              if (v74 != 35) {
                goto LABEL_10;
              }
              *(void *)(v6 + 40) = v48 + 1;
              if (v48 + 1 == v41)
              {
                uint64_t v48 = v41;
                goto LABEL_10;
              }
              int v75 = v48[1];
              uint64_t v73 = v48 + 2;
              *(void *)(v6 + 40) = v48 + 2;
              if (v75 != 10 && v75 != 13)
              {
                if (v73 == v41)
                {
                  uint64_t v48 = v41;
                  goto LABEL_10;
                }
                int v76 = v48[2];
                uint64_t v73 = v48 + 3;
                *(void *)(v6 + 40) = v48 + 3;
                if (v76 != 10 && v76 != 13)
                {
                  while (v73 != v41)
                  {
                    int v78 = *v73++;
                    int v77 = v78;
                    *(void *)(v6 + 40) = v73;
                    BOOL v79 = v78 == 10 || v77 == 13;
                    if (v79) {
                      goto LABEL_77;
                    }
                  }
                  uint64_t v48 = v41;
                  goto LABEL_10;
                }
              }
            }
LABEL_77:
            uint64_t v48 = v73;
            if (v73 == v41)
            {
              uint64_t v48 = v41;
              goto LABEL_10;
            }
          }
        }
      }
    }
  }
  sub_1C8CB47EC();
  swift_allocError();
  *uint64_t v92 = 7;
LABEL_120:
  swift_willThrow();
LABEL_121:
  uint64_t v20 = v96;
  uint64_t v19 = v97;
  uint64_t v30 = v109;
LABEL_7:
  uint64_t v45 = v114;
  uint64_t v46 = v115;
LABEL_117:
  (*(void (**)(char *, uint64_t))(v20 + 8))(v46, v19);
  return (uint64_t (*)())(*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v116, v30);
}

void sub_1C8D3A940(uint64_t a1, uint64_t a2, ValueMetadata *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = *(unsigned char **)(v5 + 40);
  uint64_t v13 = *(unsigned char **)(v5 + 48);
  if (v12 != v13 && *v12 == 58)
  {
    *(void *)(v5 + 40) = v12 + 1;
    sub_1C8CB2098();
    uint64_t v12 = *(unsigned char **)(v5 + 40);
  }
  if (v12 == v13 || *v12 != 91)
  {
    sub_1C8D39D9C(a1, a2, a3, a4, a5);
  }
  else
  {
    *(void *)(v5 + 40) = v12 + 1;
    sub_1C8CB2098();
    uint64_t v14 = *(unsigned char **)(v5 + 40);
    if (v14 == *(unsigned char **)(v5 + 48) || *v14 != 93)
    {
      while (1)
      {
        sub_1C8D39D9C(a1, a2, a3, a4, a5);
        if (v6) {
          break;
        }
        uint64_t v14 = *(unsigned char **)(v5 + 40);
        uint64_t v15 = *(unsigned char **)(v5 + 48);
        if (v14 != v15 && *v14 == 93) {
          goto LABEL_8;
        }
        sub_1C8CB2098();
        uint64_t v16 = *(unsigned char **)(v5 + 40);
        if (v16 == v15 || *v16 != 44)
        {
          sub_1C8CB47EC();
          swift_allocError();
          *uint64_t v17 = 0;
          swift_willThrow();
          return;
        }
        *(void *)(v5 + 40) = v16 + 1;
        sub_1C8CB2098();
      }
    }
    else
    {
LABEL_8:
      *(void *)(v5 + 40) = v14 + 1;
      sub_1C8CB2098();
    }
  }
}

uint64_t sub_1C8D3AAC4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = v4;
  uint64_t v7 = v4[3];
  if (!v7)
  {
    uint64_t v35 = 0;
    long long v33 = 0u;
    long long v34 = 0u;
    return sub_1C8D33174((uint64_t)&v33, &qword_1EA567230);
  }
  uint64_t v29 = a1;
  uint64_t v11 = v6[4];
  uint64_t v12 = __swift_project_boxed_opaque_existential_1(v6, v7);
  uint64_t v39 = v5;
  uint64_t v13 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v12, v12);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v13 + 16))(v15);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8))(&v33, a2, a3, a4, v7, v11);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v7);
  uint64_t v16 = v39;
  if (!*((void *)&v34 + 1)) {
    return sub_1C8D33174((uint64_t)&v33, &qword_1EA567230);
  }
  sub_1C8CA4528(&v33, (uint64_t)v36);
  uint64_t v17 = *v29;
  if (*(void *)(*v29 + 16) && (unint64_t v18 = sub_1C8CA5D14(a4), (v19 & 1) != 0))
  {
    sub_1C8CA425C(*(void *)(v17 + 56) + 40 * v18, (uint64_t)&v33);
  }
  else
  {
    uint64_t v35 = 0;
    long long v33 = 0u;
    long long v34 = 0u;
  }
  sub_1C8CB5788((uint64_t)&v33, (uint64_t)v31);
  uint64_t v21 = v32;
  uint64_t result = sub_1C8D33174((uint64_t)v31, &qword_1EA565EA0);
  if (!v21)
  {
    uint64_t v24 = v37;
    uint64_t v25 = v38;
    __swift_project_boxed_opaque_existential_1(v36, v37);
    (*(void (**)(void *__return_ptr, void *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v25 + 32))(v31, v6, &type metadata for TextFormatDecoder, &off_1F2355738, v24, v25);
    if (!v16)
    {
      sub_1C8D3B7F8((uint64_t)v31, (uint64_t)&v33);
      goto LABEL_15;
    }
LABEL_18:
    sub_1C8D33174((uint64_t)&v33, &qword_1EA565EA0);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  }
  uint64_t v22 = *((void *)&v34 + 1);
  if (*((void *)&v34 + 1))
  {
    uint64_t v23 = v35;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v33, *((uint64_t *)&v34 + 1));
    (*(void (**)(void *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v23 + 40))(v6, &type metadata for TextFormatDecoder, &off_1F2355738, v22, v23);
    if (!v16)
    {
LABEL_15:
      sub_1C8CB5788((uint64_t)&v33, (uint64_t)v31);
      uint64_t v26 = v32;
      sub_1C8D33174((uint64_t)v31, &qword_1EA565EA0);
      if (v26)
      {
        sub_1C8CB5788((uint64_t)&v33, (uint64_t)v31);
        sub_1C8CB5788((uint64_t)v31, (uint64_t)v30);
        sub_1C8CB5E04((uint64_t)v30, a4);
        sub_1C8D33174((uint64_t)v31, &qword_1EA565EA0);
      }
      else
      {
        sub_1C8CB47EC();
        swift_allocError();
        *uint64_t v27 = 10;
        swift_willThrow();
      }
      goto LABEL_18;
    }
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C8D3AE38()
{
  sub_1C8CB47EC();
  swift_allocError();
  *uint64_t v0 = 9;
  return swift_willThrow();
}

uint64_t sub_1C8D3AE88()
{
  uint64_t result = sub_1C8D33324();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1C8D3AEAC(_DWORD *a1)
{
  return sub_1C8D3362C(a1);
}

uint64_t sub_1C8D3AEC4(uint64_t a1)
{
  return sub_1C8D336C8(a1);
}

void sub_1C8D3AEDC(char **a1)
{
}

uint64_t sub_1C8D3AEF4(void *a1)
{
  return sub_1C8D33D04(a1);
}

uint64_t sub_1C8D3AF0C(uint64_t a1)
{
  return sub_1C8D33DA0(a1);
}

void sub_1C8D3AF24(char **a1)
{
}

void sub_1C8D3AF3C(_DWORD *a1)
{
}

void sub_1C8D3AF54(uint64_t a1)
{
}

void sub_1C8D3AF6C(char **a1)
{
}

uint64_t sub_1C8D3AF84(uint64_t *a1)
{
  return sub_1C8D352FC(a1, (uint64_t (*)(void))sub_1C8CB2BE8);
}

uint64_t sub_1C8D3AFB0(uint64_t a1)
{
  return sub_1C8D353A0(a1, (uint64_t (*)(void))sub_1C8CB2BE8);
}

void sub_1C8D3AFDC(char **a1)
{
}

void sub_1C8D3AFF4(_DWORD *a1)
{
}

void sub_1C8D3B00C(uint64_t a1)
{
}

void sub_1C8D3B024(char **a1)
{
}

uint64_t sub_1C8D3B03C(uint64_t *a1)
{
  return sub_1C8D352FC(a1, (uint64_t (*)(void))sub_1C8CB2970);
}

uint64_t sub_1C8D3B068(uint64_t a1)
{
  return sub_1C8D353A0(a1, (uint64_t (*)(void))sub_1C8CB2970);
}

void sub_1C8D3B094(char **a1)
{
}

uint64_t sub_1C8D3B0AC(uint64_t *a1)
{
  return sub_1C8D357F4(a1, (uint64_t (*)(void))sub_1C8CB2BE8);
}

uint64_t sub_1C8D3B0D8(uint64_t a1)
{
  return sub_1C8D35898(a1, (uint64_t (*)(void))sub_1C8CB2BE8);
}

uint64_t sub_1C8D3B104(uint64_t *a1)
{
  return sub_1C8D357F4(a1, (uint64_t (*)(void))sub_1C8CB2970);
}

uint64_t sub_1C8D3B130(uint64_t a1)
{
  return sub_1C8D35898(a1, (uint64_t (*)(void))sub_1C8CB2970);
}

uint64_t sub_1C8D3B15C(unsigned char *a1)
{
  return sub_1C8D35940(a1);
}

void sub_1C8D3B174(char **a1)
{
}

uint64_t sub_1C8D3B18C(uint64_t *a1)
{
  return sub_1C8D35D94(a1);
}

void sub_1C8D3B1A4(char **a1)
{
}

uint64_t sub_1C8D3B1BC(uint64_t *a1)
{
  return sub_1C8D361F0(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1C8CA3D5C);
}

uint64_t destroy for TextFormatDecoder(uint64_t a1)
{
  if (*(void *)(a1 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  swift_release();
  uint64_t result = *(void *)(a1 + 80);
  if (result)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for TextFormatDecoder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  uint64_t v7 = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  swift_retain();
  if (v7)
  {
    uint64_t v9 = *(void *)(a2 + 88);
    uint64_t v10 = *(void *)(a2 + 96);
    *(void *)(a1 + 80) = v7;
    *(void *)(a1 + 88) = v9;
    uint64_t v11 = *(void *)(a2 + 104);
    *(void *)(a1 + 96) = v10;
    *(void *)(a1 + 104) = v11;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v12 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v12;
  }
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  return a1;
}

uint64_t assignWithCopy for TextFormatDecoder(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 3);
  if (*(void *)(a1 + 24))
  {
    if (v4)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  else if (v4)
  {
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
    goto LABEL_8;
  }
  long long v5 = *a2;
  long long v6 = a2[1];
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  *(_OWORD *)a1 = v5;
  *(_OWORD *)(a1 + 16) = v6;
LABEL_8:
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  *(void *)(a1 + 56) = *((void *)a2 + 7);
  swift_retain();
  swift_release();
  uint64_t v7 = (_OWORD *)(a1 + 80);
  uint64_t v8 = *(void *)(a1 + 80);
  *(void *)(a1 + 64) = *((void *)a2 + 8);
  *(_WORD *)(a1 + 72) = *((_WORD *)a2 + 36);
  uint64_t v10 = a2 + 5;
  uint64_t v9 = *((void *)a2 + 10);
  if (v8)
  {
    if (v9)
    {
      *(void *)(a1 + 80) = v9;
      swift_retain();
      swift_release();
      *(void *)(a1 + 88) = *((void *)a2 + 11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 96) = *((void *)a2 + 12);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 104) = *((void *)a2 + 13);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C8D2D768(a1 + 80);
      long long v11 = a2[6];
      *uint64_t v7 = *v10;
      *(_OWORD *)(a1 + 96) = v11;
    }
  }
  else if (v9)
  {
    *(void *)(a1 + 80) = v9;
    *(void *)(a1 + 88) = *((void *)a2 + 11);
    *(void *)(a1 + 96) = *((void *)a2 + 12);
    *(void *)(a1 + 104) = *((void *)a2 + 13);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v12 = a2[6];
    *uint64_t v7 = *v10;
    *(_OWORD *)(a1 + 96) = v12;
  }
  *(_OWORD *)(a1 + 112) = a2[7];
  return a1;
}

uint64_t assignWithTake for TextFormatDecoder(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  uint64_t v5 = *(void *)(a1 + 80);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  long long v6 = (_OWORD *)(a2 + 80);
  if (!v5) {
    goto LABEL_7;
  }
  if (!*(void *)v6)
  {
    sub_1C8D2D768(a1 + 80);
LABEL_7:
    long long v7 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *v6;
    *(_OWORD *)(a1 + 96) = v7;
    goto LABEL_8;
  }
  *(void *)(a1 + 80) = *(void *)v6;
  swift_release();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
LABEL_8:
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for TextFormatDecoder(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 128)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TextFormatDecoder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 128) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 128) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextFormatDecoder()
{
  return &type metadata for TextFormatDecoder;
}

uint64_t sub_1C8D3B6B4(uint64_t *a1)
{
  return sub_1C8D361F0(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1C8CAA9F0);
}

void sub_1C8D3B6E0(char **a1)
{
}

void sub_1C8D3B6F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1C8D3B710(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1C8D3B728(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1C8D3B740(char *a1, ValueMetadata *a2, uint64_t a3)
{
  return sub_1C8D38424(a1, a2, a3);
}

void sub_1C8D3B758(uint64_t a1, ValueMetadata *a2, uint64_t a3)
{
}

void sub_1C8D3B770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

void sub_1C8D3B79C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

void sub_1C8D3B7C8(uint64_t a1, uint64_t a2, ValueMetadata *a3, uint64_t a4, uint64_t a5)
{
}

uint64_t sub_1C8D3B7E0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8D3AAC4(a1, a2, a3, a4);
}

uint64_t sub_1C8D3B7F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA565EA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_1C8D3B8B0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C8D3B90C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C8D3B968(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_1C8D3B9C4(_DWORD *a1)
{
}

void sub_1C8D3B9DC(uint64_t a1)
{
}

void sub_1C8D3B9F4(char **a1)
{
}

void sub_1C8D3BA0C(char **a1)
{
}

uint64_t sub_1C8D3BA24()
{
  return sub_1C8D88880();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitSingularFloatField(value:fieldNumber:)(Swift::Float value, Swift::Int fieldNumber)
{
  (*(void (**)(Swift::Int, double))(v2 + 16))(fieldNumber, value);
}

uint64_t sub_1C8D3BA94()
{
  return sub_1C8D88880();
}

uint64_t sub_1C8D3BACC(int a1, unint64_t a2)
{
  unint64_t v4 = a1;
  sub_1C8CA5968(a2);
  sub_1C8CA6060((uint64_t)": ", 2, v5);
  if (a1 < 0)
  {
    long long v6 = *v2;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t *v2 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      long long v6 = sub_1C8D5EB50(0, *((void *)v6 + 2) + 1, 1, v6);
      uint64_t *v2 = v6;
    }
    unint64_t v9 = *((void *)v6 + 2);
    unint64_t v8 = *((void *)v6 + 3);
    if (v9 >= v8 >> 1) {
      long long v6 = sub_1C8D5EB50((char *)(v8 > 1), v9 + 1, 1, v6);
    }
    *((void *)v6 + 2) = v9 + 1;
    v6[v9 + 32] = 45;
    uint64_t *v2 = v6;
    unint64_t v4 = -(uint64_t)v4;
  }
  sub_1C8D5C98C(v4);
  uint64_t v10 = (uint64_t)*v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v2 = (char *)v10;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50(0, *(void *)(v10 + 16) + 1, 1, (char *)v10);
    uint64_t v10 = result;
    uint64_t *v2 = (char *)result;
  }
  unint64_t v13 = *(void *)(v10 + 16);
  unint64_t v12 = *(void *)(v10 + 24);
  if (v13 >= v12 >> 1)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v12 > 1), v13 + 1, 1, (char *)v10);
    uint64_t v10 = result;
  }
  *(void *)(v10 + 16) = v13 + 1;
  *(unsigned char *)(v10 + v13 + 32) = 10;
  uint64_t *v2 = (char *)v10;
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitSingularInt32Field(value:fieldNumber:)(Swift::Int32 value, Swift::Int fieldNumber)
{
  (*(void (**)(void, Swift::Int))(v2 + 32))(value, fieldNumber);
}

uint64_t sub_1C8D3BC54()
{
  return sub_1C8D88880();
}

uint64_t sub_1C8D3BC8C(unsigned int a1, unint64_t a2)
{
  unint64_t v3 = a1;
  sub_1C8CA5968(a2);
  sub_1C8CA6060((uint64_t)": ", 2, v4);
  sub_1C8D5C98C(v3);
  uint64_t v5 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v2 = v5;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50(0, *(void *)(v5 + 16) + 1, 1, (char *)v5);
    uint64_t v5 = result;
    uint64_t *v2 = result;
  }
  unint64_t v8 = *(void *)(v5 + 16);
  unint64_t v7 = *(void *)(v5 + 24);
  if (v8 >= v7 >> 1)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v7 > 1), v8 + 1, 1, (char *)v5);
    uint64_t v5 = result;
  }
  *(void *)(v5 + 16) = v8 + 1;
  *(unsigned char *)(v5 + v8 + 32) = 10;
  uint64_t *v2 = v5;
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitSingularUInt32Field(value:fieldNumber:)(Swift::UInt32 value, Swift::Int fieldNumber)
{
  (*(void (**)(void, Swift::Int))(v2 + 48))(value, fieldNumber);
}

uint64_t sub_1C8D3BD84()
{
  return sub_1C8D3BA94();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitSingularSInt32Field(value:fieldNumber:)(Swift::Int32 value, Swift::Int fieldNumber)
{
  (*(void (**)(void, Swift::Int))(v2 + 24))(*(void *)&value, fieldNumber);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitSingularSInt64Field(value:fieldNumber:)(Swift::Int64 value, Swift::Int fieldNumber)
{
  (*(void (**)(Swift::Int64, Swift::Int))(v2 + 32))(value, fieldNumber);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitSingularFixed32Field(value:fieldNumber:)(Swift::UInt32 value, Swift::Int fieldNumber)
{
  (*(void (**)(void, Swift::Int))(v2 + 40))(*(void *)&value, fieldNumber);
}

uint64_t sub_1C8D3BE14(unint64_t a1, unint64_t a2)
{
  sub_1C8CA5968(a2);
  sub_1C8CA6060((uint64_t)": ", 2, v4);
  sub_1C8D5C98C(a1);
  uint64_t v5 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v2 = v5;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50(0, *(void *)(v5 + 16) + 1, 1, (char *)v5);
    uint64_t v5 = result;
    uint64_t *v2 = result;
  }
  unint64_t v8 = *(void *)(v5 + 16);
  unint64_t v7 = *(void *)(v5 + 24);
  if (v8 >= v7 >> 1)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v7 > 1), v8 + 1, 1, (char *)v5);
    uint64_t v5 = result;
  }
  *(void *)(v5 + 16) = v8 + 1;
  *(unsigned char *)(v5 + v8 + 32) = 10;
  uint64_t *v2 = v5;
  return result;
}

uint64_t sub_1C8D3BEE0(unint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C8D22E68(a2);
  if (!v3)
  {
    long long v6 = *v2;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t *v2 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      long long v6 = sub_1C8D5EB50(0, *((void *)v6 + 2) + 1, 1, v6);
      uint64_t *v2 = v6;
    }
    unint64_t v9 = *((void *)v6 + 2);
    unint64_t v8 = *((void *)v6 + 3);
    if (v9 >= v8 >> 1) {
      long long v6 = sub_1C8D5EB50((char *)(v8 > 1), v9 + 1, 1, v6);
    }
    *((void *)v6 + 2) = v9 + 1;
    v6[v9 + 32] = 34;
    uint64_t *v2 = v6;
    sub_1C8D29538(a1);
    uint64_t v10 = (uint64_t)*v2;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    uint64_t *v2 = (char *)v10;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1C8D5EB50(0, *(void *)(v10 + 16) + 1, 1, (char *)v10);
      uint64_t v10 = result;
      uint64_t *v2 = (char *)result;
    }
    unint64_t v12 = *(void *)(v10 + 16);
    unint64_t v11 = *(void *)(v10 + 24);
    if (v12 >= v11 >> 1)
    {
      uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v11 > 1), v12 + 1, 1, (char *)v10);
      uint64_t v10 = result;
    }
    *(void *)(v10 + 16) = v12 + 1;
    *(unsigned char *)(v10 + v12 + 32) = 34;
    uint64_t *v2 = (char *)v10;
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitSingularFixed64Field(value:fieldNumber:)(Swift::UInt64 value, Swift::Int fieldNumber)
{
  (*(void (**)(Swift::UInt64, Swift::Int))(v2 + 48))(value, fieldNumber);
}

uint64_t sub_1C8D3C04C(unint64_t a1, unint64_t a2)
{
  sub_1C8CA5968(a2);
  sub_1C8CA6060((uint64_t)": ", 2, v4);
  if ((a1 & 0x8000000000000000) != 0)
  {
    uint64_t v5 = *v2;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t *v2 = v5;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v5 = sub_1C8D5EB50(0, *((void *)v5 + 2) + 1, 1, v5);
      uint64_t *v2 = v5;
    }
    unint64_t v8 = *((void *)v5 + 2);
    unint64_t v7 = *((void *)v5 + 3);
    if (v8 >= v7 >> 1) {
      uint64_t v5 = sub_1C8D5EB50((char *)(v7 > 1), v8 + 1, 1, v5);
    }
    *((void *)v5 + 2) = v8 + 1;
    v5[v8 + 32] = 45;
    uint64_t *v2 = v5;
    a1 = -(uint64_t)a1;
  }
  sub_1C8D5C98C(a1);
  uint64_t v9 = (uint64_t)*v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v2 = (char *)v9;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50(0, *(void *)(v9 + 16) + 1, 1, (char *)v9);
    uint64_t v9 = result;
    uint64_t *v2 = (char *)result;
  }
  unint64_t v12 = *(void *)(v9 + 16);
  unint64_t v11 = *(void *)(v9 + 24);
  if (v12 >= v11 >> 1)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v11 > 1), v12 + 1, 1, (char *)v9);
    uint64_t v9 = result;
  }
  *(void *)(v9 + 16) = v12 + 1;
  *(unsigned char *)(v9 + v12 + 32) = 10;
  uint64_t *v2 = (char *)v9;
  return result;
}

uint64_t sub_1C8D3C1A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return Visitor.visitSingularGroupField<A>(value:fieldNumber:)(a1, a2, a5, a3, a6, a4);
}

uint64_t Visitor.visitSingularGroupField<A>(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 136))(a1, a2, a4, a6, a3, a5);
}

uint64_t sub_1C8D3C20C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8D3C578(a1, a2, a3, a4, sub_1C8D4067C);
}

uint64_t sub_1C8D3C238(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C8D22E68(a2);
  if (v3) {
    return result;
  }
  long long v6 = *(char **)v2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)uint64_t v2 = v6;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    long long v6 = sub_1C8D5EB50(0, *((void *)v6 + 2) + 1, 1, v6);
    *(void *)uint64_t v2 = v6;
  }
  unint64_t v9 = *((void *)v6 + 2);
  unint64_t v8 = *((void *)v6 + 3);
  if (v9 >= v8 >> 1) {
    long long v6 = sub_1C8D5EB50((char *)(v8 > 1), v9 + 1, 1, v6);
  }
  *((void *)v6 + 2) = v9 + 1;
  v6[v9 + 32] = 91;
  *(void *)uint64_t v2 = v6;
  *(_WORD *)(v2 + 8) = 256;
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    float v11 = *(float *)(a1 + 32);
    swift_bridgeObjectRetain();
    if ((~LODWORD(v11) & 0x7F800000) != 0)
    {
      uint64_t v15 = sub_1C8D88590();
      sub_1C8CA69C8(v15, v16);
      uint64_t v17 = v10 - 1;
      if (v10 == 1)
      {
LABEL_16:
        swift_bridgeObjectRelease();
        long long v6 = *(char **)v2;
        goto LABEL_17;
      }
    }
    else
    {
      if ((LODWORD(v11) & 0x7FFFFF) != 0)
      {
        unint64_t v13 = "\"NaN\"";
        uint64_t v14 = 5;
      }
      else if (v11 >= 0.0)
      {
        unint64_t v13 = "\"Infinity\"";
        uint64_t v14 = 10;
      }
      else
      {
        unint64_t v13 = "\"-Infinity\"";
        uint64_t v14 = 11;
      }
      sub_1C8CA6060((uint64_t)v13, v14, v12);
      uint64_t v17 = v10 - 1;
      if (v10 == 1) {
        goto LABEL_16;
      }
    }
    uint64_t v20 = (float *)(a1 + 36);
    do
    {
      float v23 = *v20;
      uint64_t v24 = *(char **)v2;
      char v25 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)uint64_t v2 = v24;
      if ((v25 & 1) == 0)
      {
        uint64_t v24 = sub_1C8D5EB50(0, *((void *)v24 + 2) + 1, 1, v24);
        *(void *)uint64_t v2 = v24;
      }
      unint64_t v27 = *((void *)v24 + 2);
      unint64_t v26 = *((void *)v24 + 3);
      if (v27 >= v26 >> 1) {
        uint64_t v24 = sub_1C8D5EB50((char *)(v26 > 1), v27 + 1, 1, v24);
      }
      *((void *)v24 + 2) = v27 + 1;
      v24[v27 + 32] = 44;
      *(void *)uint64_t v2 = v24;
      if ((~LODWORD(v23) & 0x7F800000) != 0)
      {
        uint64_t v21 = sub_1C8D88590();
        sub_1C8CA69C8(v21, v22);
      }
      else if ((LODWORD(v23) & 0x7FFFFF) != 0)
      {
        sub_1C8CA6060((uint64_t)"\"NaN\"", 5, (unsigned __int8 *)LODWORD(v23));
      }
      else if (v23 >= 0.0)
      {
        sub_1C8CA6060((uint64_t)"\"Infinity\"", 10, (unsigned __int8 *)LODWORD(v23));
      }
      else
      {
        sub_1C8CA6060((uint64_t)"\"-Infinity\"", 11, (unsigned __int8 *)LODWORD(v23));
      }
      ++v20;
      --v17;
    }
    while (v17);
    goto LABEL_16;
  }
LABEL_17:
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *(void *)uint64_t v2 = v6;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50(0, *((void *)v6 + 2) + 1, 1, v6);
    long long v6 = (char *)result;
    *(void *)uint64_t v2 = result;
  }
  unint64_t v19 = *((void *)v6 + 2);
  unint64_t v18 = *((void *)v6 + 3);
  if (v19 >= v18 >> 1)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v18 > 1), v19 + 1, 1, v6);
    long long v6 = (char *)result;
  }
  *((void *)v6 + 2) = v19 + 1;
  v6[v19 + 32] = 93;
  *(void *)uint64_t v2 = v6;
  *(_WORD *)(v2 + 8) = 44;
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitPackedFloatField(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  (*(void (**)(void *, Swift::Int))(v2 + 152))(value._rawValue, fieldNumber);
}

uint64_t sub_1C8D3C54C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8D3C578(a1, a2, a3, a4, sub_1C8D40624);
}

uint64_t sub_1C8D3C578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  sub_1C8D88850();
  return a5(v5, a1);
}

uint64_t sub_1C8D3C5C4(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C8D22E68(a2);
  if (v3) {
    return result;
  }
  long long v6 = *(char **)v2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)uint64_t v2 = v6;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    long long v6 = sub_1C8D5EB50(0, *((void *)v6 + 2) + 1, 1, v6);
    *(void *)uint64_t v2 = v6;
  }
  unint64_t v9 = *((void *)v6 + 2);
  unint64_t v8 = *((void *)v6 + 3);
  if (v9 >= v8 >> 1) {
    long long v6 = sub_1C8D5EB50((char *)(v8 > 1), v9 + 1, 1, v6);
  }
  *((void *)v6 + 2) = v9 + 1;
  v6[v9 + 32] = 91;
  *(void *)uint64_t v2 = v6;
  *(_WORD *)(v2 + 8) = 256;
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    double v11 = *(double *)(a1 + 32);
    swift_bridgeObjectRetain();
    if ((~*(void *)&v11 & 0x7FF0000000000000) != 0)
    {
      uint64_t v15 = sub_1C8D88580();
      sub_1C8CA69C8(v15, v16);
      uint64_t v17 = v10 - 1;
      if (v10 == 1)
      {
LABEL_16:
        swift_bridgeObjectRelease();
        long long v6 = *(char **)v2;
        goto LABEL_17;
      }
    }
    else
    {
      if ((*(void *)&v11 & 0xFFFFFFFFFFFFFLL) != 0)
      {
        unint64_t v13 = "\"NaN\"";
        uint64_t v14 = 5;
      }
      else if (v11 >= 0.0)
      {
        unint64_t v13 = "\"Infinity\"";
        uint64_t v14 = 10;
      }
      else
      {
        unint64_t v13 = "\"-Infinity\"";
        uint64_t v14 = 11;
      }
      sub_1C8CA6060((uint64_t)v13, v14, v12);
      uint64_t v17 = v10 - 1;
      if (v10 == 1) {
        goto LABEL_16;
      }
    }
    uint64_t v20 = (double *)(a1 + 40);
    do
    {
      double v23 = *v20;
      uint64_t v24 = *(char **)v2;
      char v25 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)uint64_t v2 = v24;
      if ((v25 & 1) == 0)
      {
        uint64_t v24 = sub_1C8D5EB50(0, *((void *)v24 + 2) + 1, 1, v24);
        *(void *)uint64_t v2 = v24;
      }
      unint64_t v27 = *((void *)v24 + 2);
      unint64_t v26 = *((void *)v24 + 3);
      if (v27 >= v26 >> 1) {
        uint64_t v24 = sub_1C8D5EB50((char *)(v26 > 1), v27 + 1, 1, v24);
      }
      *((void *)v24 + 2) = v27 + 1;
      v24[v27 + 32] = 44;
      *(void *)uint64_t v2 = v24;
      if ((~*(void *)&v23 & 0x7FF0000000000000) != 0)
      {
        uint64_t v21 = sub_1C8D88580();
        sub_1C8CA69C8(v21, v22);
      }
      else if ((*(void *)&v23 & 0xFFFFFFFFFFFFFLL) != 0)
      {
        sub_1C8CA6060((uint64_t)"\"NaN\"", 5, *(unsigned __int8 **)&v23);
      }
      else if (v23 >= 0.0)
      {
        sub_1C8CA6060((uint64_t)"\"Infinity\"", 10, *(unsigned __int8 **)&v23);
      }
      else
      {
        sub_1C8CA6060((uint64_t)"\"-Infinity\"", 11, *(unsigned __int8 **)&v23);
      }
      ++v20;
      --v17;
    }
    while (v17);
    goto LABEL_16;
  }
LABEL_17:
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *(void *)uint64_t v2 = v6;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50(0, *((void *)v6 + 2) + 1, 1, v6);
    long long v6 = (char *)result;
    *(void *)uint64_t v2 = result;
  }
  unint64_t v19 = *((void *)v6 + 2);
  unint64_t v18 = *((void *)v6 + 3);
  if (v19 >= v18 >> 1)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v18 > 1), v19 + 1, 1, v6);
    long long v6 = (char *)result;
  }
  *((void *)v6 + 2) = v19 + 1;
  v6[v19 + 32] = 93;
  *(void *)uint64_t v2 = v6;
  *(_WORD *)(v2 + 8) = 44;
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitPackedDoubleField(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  (*(void (**)(void *, Swift::Int))(v2 + 160))(value._rawValue, fieldNumber);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitPackedInt32Field(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  (*(void (**)(void *, Swift::Int))(v2 + 168))(value._rawValue, fieldNumber);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitPackedInt64Field(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  (*(void (**)(void *, Swift::Int))(v2 + 176))(value._rawValue, fieldNumber);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitPackedUInt32Field(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  (*(void (**)(void *, Swift::Int))(v2 + 184))(value._rawValue, fieldNumber);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitPackedUInt64Field(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  (*(void (**)(void *, Swift::Int))(v2 + 192))(value._rawValue, fieldNumber);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitPackedSInt32Field(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  (*(void (**)(void *, Swift::Int))(v2 + 312))(value._rawValue, fieldNumber);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitPackedSInt64Field(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  (*(void (**)(void *, Swift::Int))(v2 + 320))(value._rawValue, fieldNumber);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitPackedFixed32Field(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  (*(void (**)(void *, Swift::Int))(v2 + 328))(value._rawValue, fieldNumber);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitPackedFixed64Field(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  (*(void (**)(void *, Swift::Int))(v2 + 336))(value._rawValue, fieldNumber);
}

uint64_t sub_1C8D3CA18(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C8D22E68(a2);
  if (!v3)
  {
    long long v6 = *(char **)v2;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)uint64_t v2 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      long long v6 = sub_1C8D5EB50(0, *((void *)v6 + 2) + 1, 1, v6);
      *(void *)uint64_t v2 = v6;
    }
    unint64_t v9 = *((void *)v6 + 2);
    unint64_t v8 = *((void *)v6 + 3);
    if (v9 >= v8 >> 1) {
      long long v6 = sub_1C8D5EB50((char *)(v8 > 1), v9 + 1, 1, v6);
    }
    *((void *)v6 + 2) = v9 + 1;
    v6[v9 + 32] = 91;
    *(void *)uint64_t v2 = v6;
    *(_WORD *)(v2 + 8) = 256;
    uint64_t v10 = *(void *)(a1 + 16);
    if (v10)
    {
      swift_bridgeObjectRetain();
      double v11 = (unsigned __int8 *)*(unsigned __int8 *)(a1 + 32);
      if (v11)
      {
        unint64_t v12 = "true";
        uint64_t v13 = 4;
      }
      else
      {
        unint64_t v12 = "false";
        uint64_t v13 = 5;
      }
      sub_1C8CA6060((uint64_t)v12, v13, v11);
      uint64_t v14 = v10 - 1;
      if (v10 != 1)
      {
        uint64_t v17 = (unsigned __int8 *)(a1 + 33);
        do
        {
          int v20 = *v17;
          uint64_t v21 = *(char **)v2;
          char v22 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)uint64_t v2 = v21;
          if ((v22 & 1) == 0)
          {
            uint64_t v21 = sub_1C8D5EB50(0, *((void *)v21 + 2) + 1, 1, v21);
            *(void *)uint64_t v2 = v21;
          }
          unint64_t v24 = *((void *)v21 + 2);
          unint64_t v23 = *((void *)v21 + 3);
          if (v24 >= v23 >> 1) {
            uint64_t v21 = sub_1C8D5EB50((char *)(v23 > 1), v24 + 1, 1, v21);
          }
          *((void *)v21 + 2) = v24 + 1;
          v21[v24 + 32] = 44;
          *(void *)uint64_t v2 = v21;
          if (v20)
          {
            unint64_t v18 = "true";
            uint64_t v19 = 4;
          }
          else
          {
            unint64_t v18 = "false";
            uint64_t v19 = 5;
          }
          sub_1C8CA6060((uint64_t)v18, v19, (unsigned __int8 *)&v21[v24]);
          ++v17;
          --v14;
        }
        while (v14);
      }
      swift_bridgeObjectRelease();
      long long v6 = *(char **)v2;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *(void *)uint64_t v2 = v6;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1C8D5EB50(0, *((void *)v6 + 2) + 1, 1, v6);
      long long v6 = (char *)result;
      *(void *)uint64_t v2 = result;
    }
    unint64_t v16 = *((void *)v6 + 2);
    unint64_t v15 = *((void *)v6 + 3);
    if (v16 >= v15 >> 1)
    {
      uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v15 > 1), v16 + 1, 1, v6);
      long long v6 = (char *)result;
    }
    *((void *)v6 + 2) = v16 + 1;
    v6[v16 + 32] = 93;
    *(void *)uint64_t v2 = v6;
    *(_WORD *)(v2 + 8) = 44;
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitPackedBoolField(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  (*(void (**)(void *, Swift::Int))(v2 + 248))(value._rawValue, fieldNumber);
}

uint64_t sub_1C8D3CCA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return Visitor.visitPackedEnumField<A>(value:fieldNumber:)(a1, a2, a5, a3, a6, a4);
}

uint64_t Visitor.visitPackedEnumField<A>(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 272))(a1, a2, a4, a6, a3, a5);
}

uint64_t sub_1C8D3CD0C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D3D3BC(v3, a2, a3, *a1);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitExtensionFields(fields:start:end:)(SiriOntologyProtobuf::ExtensionFieldValueSet fields, Swift::Int start, Swift::Int end)
{
  ExtensionFieldValueSet.traverse<A>(visitor:start:end:)(v5, start, end, v3, v4);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitExtensionFieldsAsMessageSet(fields:start:end:)(SiriOntologyProtobuf::ExtensionFieldValueSet fields, Swift::Int start, Swift::Int end)
{
  uint64_t v4 = *(void *)fields.values._rawValue;
  (*(void (**)(uint64_t *, Swift::Int, Swift::Int))(v3 + 432))(&v4, start, end);
}

uint64_t sub_1C8D3CD9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v36 = a1;
  uint64_t v7 = a4 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a4 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a4 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v12 = 0;
  uint64_t v13 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v32 = a3;
  while (1)
  {
    if (v10)
    {
      unint64_t v14 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_21;
    }
    if (__OFADD__(v12++, 1))
    {
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v12 >= v11) {
      goto LABEL_32;
    }
    unint64_t v17 = *(void *)(v7 + 8 * v12);
    if (v17) {
      goto LABEL_20;
    }
    int64_t v18 = v12 + 1;
    if (v12 + 1 >= v11) {
      goto LABEL_32;
    }
    unint64_t v17 = *(void *)(v7 + 8 * v18);
    if (!v17)
    {
      int64_t v18 = v12 + 2;
      if (v12 + 2 >= v11) {
        goto LABEL_32;
      }
      unint64_t v17 = *(void *)(v7 + 8 * v18);
      if (!v17)
      {
        int64_t v18 = v12 + 3;
        if (v12 + 3 >= v11) {
          goto LABEL_32;
        }
        unint64_t v17 = *(void *)(v7 + 8 * v18);
        if (!v17)
        {
          int64_t v18 = v12 + 4;
          if (v12 + 4 >= v11) {
            goto LABEL_32;
          }
          unint64_t v17 = *(void *)(v7 + 8 * v18);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_19:
    int64_t v12 = v18;
LABEL_20:
    unint64_t v10 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_21:
    uint64_t v19 = *(void *)(*(void *)(a4 + 48) + 8 * v15);
    if (v19 >= a2 && v19 < a3)
    {
      v33[0] = v13;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C8CB75F4(0, *((void *)v13 + 2) + 1, 1);
        uint64_t v13 = v33[0];
      }
      unint64_t v21 = *((void *)v13 + 2);
      unint64_t v20 = *((void *)v13 + 3);
      unint64_t v22 = v21 + 1;
      if (v21 >= v20 >> 1)
      {
        sub_1C8CB75F4((char *)(v20 > 1), v21 + 1, 1);
        unint64_t v22 = v21 + 1;
        uint64_t v13 = v33[0];
      }
      *((void *)v13 + 2) = v22;
      *(void *)&v13[8 * v21 + 32] = v19;
      a3 = v32;
    }
  }
  int64_t v18 = v12 + 5;
  if (v12 + 5 >= v11)
  {
LABEL_32:
    swift_release();
    v33[0] = v13;
    swift_bridgeObjectRetain();
    sub_1C8CB6BF4(v33);
    if (v31) {
      goto LABEL_43;
    }
    swift_release();
    unint64_t v23 = v33[0];
    uint64_t v24 = *((void *)v33[0] + 2);
    if (!v24) {
      return swift_release();
    }
    uint64_t v25 = 0;
    while (*(void *)(a4 + 16))
    {
      unint64_t v26 = sub_1C8CA5D14(*(void *)&v23[8 * v25 + 32]);
      if ((v27 & 1) == 0) {
        goto LABEL_41;
      }
      sub_1C8CA425C(*(void *)(a4 + 56) + 40 * v26, (uint64_t)v33);
      uint64_t v28 = v34;
      uint64_t v29 = v35;
      __swift_project_boxed_opaque_existential_1(v33, v34);
      (*(void (**)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v29 + 48))(v36, &type metadata for TextFormatEncodingVisitor, &off_1F23554E0, v28, v29);
      ++v25;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
      if (v24 == v25) {
        return swift_release();
      }
    }
    goto LABEL_40;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v18);
  if (v17) {
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v11) {
      goto LABEL_32;
    }
    unint64_t v17 = *(void *)(v7 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_20;
    }
  }
LABEL_42:
  __break(1u);
LABEL_43:
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1C8D3D0B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v40 = a6;
  uint64_t v9 = a4 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(a4 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(a4 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v14 = 0;
  unint64_t v15 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v34 = a3;
  while (1)
  {
    if (v12)
    {
      unint64_t v16 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_21;
    }
    if (__OFADD__(v14++, 1))
    {
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v14 >= v13) {
      goto LABEL_32;
    }
    unint64_t v19 = *(void *)(v9 + 8 * v14);
    if (v19) {
      goto LABEL_20;
    }
    int64_t v20 = v14 + 1;
    if (v14 + 1 >= v13) {
      goto LABEL_32;
    }
    unint64_t v19 = *(void *)(v9 + 8 * v20);
    if (!v19)
    {
      int64_t v20 = v14 + 2;
      if (v14 + 2 >= v13) {
        goto LABEL_32;
      }
      unint64_t v19 = *(void *)(v9 + 8 * v20);
      if (!v19)
      {
        int64_t v20 = v14 + 3;
        if (v14 + 3 >= v13) {
          goto LABEL_32;
        }
        unint64_t v19 = *(void *)(v9 + 8 * v20);
        if (!v19)
        {
          int64_t v20 = v14 + 4;
          if (v14 + 4 >= v13) {
            goto LABEL_32;
          }
          unint64_t v19 = *(void *)(v9 + 8 * v20);
          if (!v19) {
            break;
          }
        }
      }
    }
LABEL_19:
    int64_t v14 = v20;
LABEL_20:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_21:
    uint64_t v21 = *(void *)(*(void *)(a4 + 48) + 8 * v17);
    if (v21 >= a2 && v21 < a3)
    {
      v37[0] = v15;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C8CB75F4(0, *((void *)v15 + 2) + 1, 1);
        unint64_t v15 = v37[0];
      }
      unint64_t v23 = *((void *)v15 + 2);
      unint64_t v22 = *((void *)v15 + 3);
      unint64_t v24 = v23 + 1;
      if (v23 >= v22 >> 1)
      {
        sub_1C8CB75F4((char *)(v22 > 1), v23 + 1, 1);
        unint64_t v24 = v23 + 1;
        unint64_t v15 = v37[0];
      }
      *((void *)v15 + 2) = v24;
      *(void *)&v15[8 * v23 + 32] = v21;
      a3 = v34;
    }
  }
  int64_t v20 = v14 + 5;
  if (v14 + 5 >= v13)
  {
LABEL_32:
    swift_release();
    v37[0] = v15;
    swift_bridgeObjectRetain();
    sub_1C8CB6BF4(v37);
    if (v33) {
      goto LABEL_43;
    }
    swift_release();
    uint64_t v25 = v37[0];
    uint64_t v26 = *((void *)v37[0] + 2);
    if (!v26) {
      return swift_release();
    }
    uint64_t v27 = 0;
    while (*(void *)(a4 + 16))
    {
      unint64_t v28 = sub_1C8CA5D14(*(void *)&v25[8 * v27 + 32]);
      if ((v29 & 1) == 0) {
        goto LABEL_41;
      }
      sub_1C8CA425C(*(void *)(a4 + 56) + 40 * v28, (uint64_t)v37);
      uint64_t v30 = v38;
      uint64_t v31 = v39;
      __swift_project_boxed_opaque_existential_1(v37, v38);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 48))(a1, a5, v40, v30, v31);
      ++v27;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
      if (v26 == v27) {
        return swift_release();
      }
    }
    goto LABEL_40;
  }
  unint64_t v19 = *(void *)(v9 + 8 * v20);
  if (v19) {
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v13) {
      goto LABEL_32;
    }
    unint64_t v19 = *(void *)(v9 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_20;
    }
  }
LABEL_42:
  __break(1u);
LABEL_43:
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1C8D3D3BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v36 = a1;
  uint64_t v7 = a4 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a4 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a4 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v12 = 0;
  int64_t v13 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v32 = a3;
  while (1)
  {
    if (v10)
    {
      unint64_t v14 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_23;
    }
    if (__OFADD__(v12++, 1))
    {
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v12 >= v11) {
      goto LABEL_34;
    }
    unint64_t v17 = *(void *)(v7 + 8 * v12);
    if (v17) {
      goto LABEL_22;
    }
    int64_t v18 = v12 + 1;
    if (v12 + 1 >= v11) {
      goto LABEL_34;
    }
    unint64_t v17 = *(void *)(v7 + 8 * v18);
    if (!v17)
    {
      int64_t v18 = v12 + 2;
      if (v12 + 2 >= v11) {
        goto LABEL_34;
      }
      unint64_t v17 = *(void *)(v7 + 8 * v18);
      if (!v17)
      {
        int64_t v18 = v12 + 3;
        if (v12 + 3 >= v11) {
          goto LABEL_34;
        }
        unint64_t v17 = *(void *)(v7 + 8 * v18);
        if (!v17)
        {
          int64_t v18 = v12 + 4;
          if (v12 + 4 >= v11) {
            goto LABEL_34;
          }
          unint64_t v17 = *(void *)(v7 + 8 * v18);
          if (!v17)
          {
            int64_t v18 = v12 + 5;
            if (v12 + 5 >= v11) {
              goto LABEL_34;
            }
            unint64_t v17 = *(void *)(v7 + 8 * v18);
            if (!v17) {
              break;
            }
          }
        }
      }
    }
LABEL_21:
    int64_t v12 = v18;
LABEL_22:
    unint64_t v10 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_23:
    uint64_t v19 = *(void *)(*(void *)(a4 + 48) + 8 * v15);
    if (v19 >= a2 && v19 < a3)
    {
      v33[0] = v13;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C8CB75F4(0, *((void *)v13 + 2) + 1, 1);
        int64_t v13 = v33[0];
      }
      unint64_t v21 = *((void *)v13 + 2);
      unint64_t v20 = *((void *)v13 + 3);
      unint64_t v22 = v21 + 1;
      if (v21 >= v20 >> 1)
      {
        sub_1C8CB75F4((char *)(v20 > 1), v21 + 1, 1);
        unint64_t v22 = v21 + 1;
        int64_t v13 = v33[0];
      }
      *((void *)v13 + 2) = v22;
      *(void *)&v13[8 * v21 + 32] = v19;
      a3 = v32;
    }
  }
  int64_t v18 = v12 + 6;
  if (v12 + 6 >= v11)
  {
LABEL_34:
    swift_release();
    v33[0] = v13;
    swift_bridgeObjectRetain();
    sub_1C8CB6BF4(v33);
    if (v31) {
      goto LABEL_45;
    }
    swift_release();
    unint64_t v23 = v33[0];
    uint64_t v24 = *((void *)v33[0] + 2);
    if (!v24) {
      return swift_release();
    }
    uint64_t v25 = 0;
    while (*(void *)(a4 + 16))
    {
      unint64_t v26 = sub_1C8CA5D14(*(void *)&v23[8 * v25 + 32]);
      if ((v27 & 1) == 0) {
        goto LABEL_43;
      }
      sub_1C8CA425C(*(void *)(a4 + 56) + 40 * v26, (uint64_t)v33);
      uint64_t v28 = v34;
      uint64_t v29 = v35;
      __swift_project_boxed_opaque_existential_1(v33, v34);
      (*(void (**)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v29 + 48))(v36, &type metadata for HashVisitor, &off_1F2350658, v28, v29);
      ++v25;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
      if (v24 == v25) {
        return swift_release();
      }
    }
    goto LABEL_42;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v18);
  if (v17) {
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v11) {
      goto LABEL_34;
    }
    unint64_t v17 = *(void *)(v7 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_22;
    }
  }
LABEL_44:
  __break(1u);
LABEL_45:
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1C8D3D6E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8D3D734(a1, a2, a3, a4, (uint64_t)&type metadata for BinaryEncodingSizeVisitor.BinaryEncodingMessageSetSizeVisitor, (uint64_t)&off_1F2354700);
}

uint64_t sub_1C8D3D70C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8D3D734(a1, a2, a3, a4, (uint64_t)&type metadata for BinaryEncodingVisitor.BinaryEncodingMessageSetVisitor, (uint64_t)&off_1F2355288);
}

uint64_t sub_1C8D3D734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v40 = a6;
  uint64_t v9 = a4 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(a4 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(a4 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v14 = 0;
  unint64_t v15 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v34 = a3;
  while (1)
  {
    if (v12)
    {
      unint64_t v16 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_23;
    }
    if (__OFADD__(v14++, 1))
    {
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v14 >= v13) {
      goto LABEL_34;
    }
    unint64_t v19 = *(void *)(v9 + 8 * v14);
    if (v19) {
      goto LABEL_22;
    }
    int64_t v20 = v14 + 1;
    if (v14 + 1 >= v13) {
      goto LABEL_34;
    }
    unint64_t v19 = *(void *)(v9 + 8 * v20);
    if (!v19)
    {
      int64_t v20 = v14 + 2;
      if (v14 + 2 >= v13) {
        goto LABEL_34;
      }
      unint64_t v19 = *(void *)(v9 + 8 * v20);
      if (!v19)
      {
        int64_t v20 = v14 + 3;
        if (v14 + 3 >= v13) {
          goto LABEL_34;
        }
        unint64_t v19 = *(void *)(v9 + 8 * v20);
        if (!v19)
        {
          int64_t v20 = v14 + 4;
          if (v14 + 4 >= v13) {
            goto LABEL_34;
          }
          unint64_t v19 = *(void *)(v9 + 8 * v20);
          if (!v19)
          {
            int64_t v20 = v14 + 5;
            if (v14 + 5 >= v13) {
              goto LABEL_34;
            }
            unint64_t v19 = *(void *)(v9 + 8 * v20);
            if (!v19) {
              break;
            }
          }
        }
      }
    }
LABEL_21:
    int64_t v14 = v20;
LABEL_22:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_23:
    uint64_t v21 = *(void *)(*(void *)(a4 + 48) + 8 * v17);
    if (v21 >= a2 && v21 < a3)
    {
      v37[0] = v15;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C8CB75F4(0, *((void *)v15 + 2) + 1, 1);
        unint64_t v15 = v37[0];
      }
      unint64_t v23 = *((void *)v15 + 2);
      unint64_t v22 = *((void *)v15 + 3);
      unint64_t v24 = v23 + 1;
      if (v23 >= v22 >> 1)
      {
        sub_1C8CB75F4((char *)(v22 > 1), v23 + 1, 1);
        unint64_t v24 = v23 + 1;
        unint64_t v15 = v37[0];
      }
      *((void *)v15 + 2) = v24;
      *(void *)&v15[8 * v23 + 32] = v21;
      a3 = v34;
    }
  }
  int64_t v20 = v14 + 6;
  if (v14 + 6 >= v13)
  {
LABEL_34:
    swift_release();
    v37[0] = v15;
    swift_bridgeObjectRetain();
    sub_1C8CB6BF4(v37);
    if (v33) {
      goto LABEL_45;
    }
    swift_release();
    uint64_t v25 = v37[0];
    uint64_t v26 = *((void *)v37[0] + 2);
    if (!v26) {
      return swift_release();
    }
    uint64_t v27 = 0;
    while (*(void *)(a4 + 16))
    {
      unint64_t v28 = sub_1C8CA5D14(*(void *)&v25[8 * v27 + 32]);
      if ((v29 & 1) == 0) {
        goto LABEL_43;
      }
      sub_1C8CA425C(*(void *)(a4 + 56) + 40 * v28, (uint64_t)v37);
      uint64_t v30 = v38;
      uint64_t v31 = v39;
      __swift_project_boxed_opaque_existential_1(v37, v38);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 48))(a1, a5, v40, v30, v31);
      ++v27;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
      if (v26 == v27) {
        return swift_release();
      }
    }
    goto LABEL_42;
  }
  unint64_t v19 = *(void *)(v9 + 8 * v20);
  if (v19) {
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v13) {
      goto LABEL_34;
    }
    unint64_t v19 = *(void *)(v9 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_22;
    }
  }
LABEL_44:
  __break(1u);
LABEL_45:
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1C8D3DA54(uint64_t a1, unsigned int a2)
{
  return sub_1C8D3E904(a1, a2);
}

uint64_t sub_1C8D3DA6C(uint64_t result, int a2)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v4 = *v2;
    unint64_t v5 = (8 * a2) | 5;
    uint64_t v6 = result + 32;
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    do
    {
      int v9 = *(_DWORD *)(v6 + 4 * v7);
      if (v5 < 0x80)
      {
        LOBYTE(v8) = v5;
      }
      else
      {
        unint64_t v10 = v5;
        do
        {
          *v4++ = v10 | 0x80;
          unint64_t v8 = v10 >> 7;
          unint64_t v11 = v10 >> 14;
          v10 >>= 7;
        }
        while (v11);
      }
      ++v7;
      *uint64_t v4 = v8;
      *(_DWORD *)(v4 + 1) = v9;
      v4 += 5;
    }
    while (v7 != v3);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t *v2 = v4;
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitRepeatedFloatField(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  uint64_t v5 = v4;
  uint64_t v13 = v2;
  uint64_t v6 = *((void *)value._rawValue + 2);
  if (v6)
  {
    uint64_t v7 = v3;
    unint64_t v10 = *(void (**)(Swift::Int, uint64_t, uint64_t, float))(v3 + 8);
    swift_bridgeObjectRetain();
    uint64_t v11 = 0;
    do
    {
      v10(fieldNumber, v13, v7, *((float *)value._rawValue + v11 + 8));
      if (v5) {
        break;
      }
    }
    while (v6 - 1 != v11++);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C8D3DBF8(uint64_t a1, unsigned int a2)
{
  return sub_1C8D3EA1C(a1, a2);
}

uint64_t sub_1C8D3DC10(uint64_t result, int a2)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v4 = *v2;
    unint64_t v5 = (8 * a2) | 1;
    uint64_t v6 = result + 32;
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    do
    {
      uint64_t v9 = *(void *)(v6 + 8 * v7);
      if (v5 < 0x80)
      {
        LOBYTE(v8) = v5;
      }
      else
      {
        unint64_t v10 = v5;
        do
        {
          *v4++ = v10 | 0x80;
          unint64_t v8 = v10 >> 7;
          unint64_t v11 = v10 >> 14;
          v10 >>= 7;
        }
        while (v11);
      }
      ++v7;
      *uint64_t v4 = v8;
      *(void *)(v4 + 1) = v9;
      v4 += 9;
    }
    while (v7 != v3);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t *v2 = v4;
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitRepeatedDoubleField(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  uint64_t v5 = v4;
  uint64_t v13 = v2;
  uint64_t v6 = *((void *)value._rawValue + 2);
  if (v6)
  {
    uint64_t v7 = v3;
    unint64_t v10 = *(void (**)(Swift::Int, uint64_t, uint64_t, double))(v3 + 16);
    swift_bridgeObjectRetain();
    uint64_t v11 = 0;
    do
    {
      v10(fieldNumber, v13, v7, *((double *)value._rawValue + v11 + 4));
      if (v5) {
        break;
      }
    }
    while (v6 - 1 != v11++);
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_1C8D3DD98(unint64_t result, int a2)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v5 = (int *)(result + 32);
    uint64_t v6 = v3 - 1;
    do
    {
      uint64_t v7 = v6;
      unint64_t v8 = *v5++;
      uint64_t result = sub_1C8CAAC84(v8, a2);
      if (v2) {
        break;
      }
      uint64_t v6 = v7 - 1;
    }
    while (v7);
  }
  return result;
}

uint64_t sub_1C8D3DDEC(uint64_t result, int a2)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = *v2;
    do
    {
      unint64_t v7 = *(int *)(result + 32 + 4 * v4);
      if ((8 * a2) < 0x80uLL)
      {
        LOBYTE(v9) = 8 * a2;
      }
      else
      {
        unint64_t v8 = (8 * a2);
        do
        {
          *v5++ = v8 | 0x80;
          unint64_t v9 = v8 >> 7;
          unint64_t v10 = v8 >> 14;
          v8 >>= 7;
        }
        while (v10);
      }
      *uint64_t v5 = v9;
      uint64_t v11 = v5 + 1;
      if (v7 < 0x80)
      {
        LOBYTE(v6) = v7;
      }
      else
      {
        do
        {
          *v11++ = v7 | 0x80;
          unint64_t v6 = v7 >> 7;
          unint64_t v12 = v7 >> 14;
          v7 >>= 7;
        }
        while (v12);
      }
      ++v4;
      *uint64_t v11 = v6;
      uint64_t v5 = v11 + 1;
    }
    while (v4 != v3);
    uint64_t *v2 = v5;
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitRepeatedInt32Field(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  uint64_t v5 = v4;
  uint64_t v13 = v2;
  uint64_t v6 = *((void *)value._rawValue + 2);
  if (v6)
  {
    uint64_t v7 = v3;
    unint64_t v10 = *(void (**)(void, Swift::Int, uint64_t, uint64_t))(v3 + 24);
    swift_bridgeObjectRetain();
    uint64_t v11 = 0;
    do
    {
      v10(*((unsigned int *)value._rawValue + v11 + 8), fieldNumber, v13, v7);
      if (v5) {
        break;
      }
    }
    while (v6 - 1 != v11++);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C8D3DF30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8D3E238(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1C8CAAC84);
}

uint64_t sub_1C8D3DF5C(uint64_t result, int a2)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = *v2;
    do
    {
      unint64_t v7 = *(void *)(result + 32 + 8 * v4);
      if ((8 * a2) < 0x80uLL)
      {
        LOBYTE(v9) = 8 * a2;
      }
      else
      {
        unint64_t v8 = (8 * a2);
        do
        {
          *v5++ = v8 | 0x80;
          unint64_t v9 = v8 >> 7;
          unint64_t v10 = v8 >> 14;
          v8 >>= 7;
        }
        while (v10);
      }
      *uint64_t v5 = v9;
      uint64_t v11 = v5 + 1;
      if (v7 < 0x80)
      {
        LOBYTE(v6) = v7;
      }
      else
      {
        do
        {
          *v11++ = v7 | 0x80;
          unint64_t v6 = v7 >> 7;
          unint64_t v12 = v7 >> 14;
          v7 >>= 7;
        }
        while (v12);
      }
      ++v4;
      *uint64_t v11 = v6;
      uint64_t v5 = v11 + 1;
    }
    while (v4 != v3);
    uint64_t *v2 = v5;
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitRepeatedInt64Field(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  uint64_t v5 = v4;
  uint64_t v13 = v2;
  uint64_t v6 = *((void *)value._rawValue + 2);
  if (v6)
  {
    uint64_t v7 = v3;
    unint64_t v10 = *(void (**)(void, Swift::Int, uint64_t, uint64_t))(v3 + 32);
    swift_bridgeObjectRetain();
    uint64_t v11 = 0;
    do
    {
      v10(*((void *)value._rawValue + v11 + 4), fieldNumber, v13, v7);
      if (v5) {
        break;
      }
    }
    while (v6 - 1 != v11++);
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_1C8D3E0A0(unint64_t result, int a2)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v5 = (unsigned int *)(result + 32);
    uint64_t v6 = v3 - 1;
    do
    {
      uint64_t v7 = v6;
      unsigned int v8 = *v5++;
      uint64_t result = sub_1C8CAAC84(v8, a2);
      if (v2) {
        break;
      }
      uint64_t v6 = v7 - 1;
    }
    while (v7);
  }
  return result;
}

uint64_t sub_1C8D3E0F4(uint64_t result, int a2)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = *v2;
    do
    {
      unint64_t v7 = *(unsigned int *)(result + 32 + 4 * v4);
      if ((8 * a2) < 0x80uLL)
      {
        LOBYTE(v9) = 8 * a2;
      }
      else
      {
        unint64_t v8 = (8 * a2);
        do
        {
          *v5++ = v8 | 0x80;
          unint64_t v9 = v8 >> 7;
          unint64_t v10 = v8 >> 14;
          v8 >>= 7;
        }
        while (v10);
      }
      *uint64_t v5 = v9;
      uint64_t v11 = v5 + 1;
      if (v7 < 0x80)
      {
        LOBYTE(v6) = v7;
      }
      else
      {
        do
        {
          *v11++ = v7 | 0x80;
          unint64_t v6 = v7 >> 7;
          unint64_t v12 = v7 >> 14;
          v7 >>= 7;
        }
        while (v12);
      }
      ++v4;
      *uint64_t v11 = v6;
      uint64_t v5 = v11 + 1;
    }
    while (v4 != v3);
    uint64_t *v2 = v5;
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitRepeatedUInt32Field(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  uint64_t v5 = v4;
  uint64_t v13 = v2;
  uint64_t v6 = *((void *)value._rawValue + 2);
  if (v6)
  {
    uint64_t v7 = v3;
    unint64_t v10 = *(void (**)(void, Swift::Int, uint64_t, uint64_t))(v3 + 40);
    swift_bridgeObjectRetain();
    uint64_t v11 = 0;
    do
    {
      v10(*((unsigned int *)value._rawValue + v11 + 8), fieldNumber, v13, v7);
      if (v5) {
        break;
      }
    }
    while (v6 - 1 != v11++);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C8D3E238(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(result + 16);
  if (v6)
  {
    unint64_t v9 = (uint64_t *)(result + 32);
    uint64_t v10 = v6 - 1;
    do
    {
      uint64_t v11 = v10;
      uint64_t v12 = *v9++;
      uint64_t result = a5(v12, a2);
      if (v5) {
        break;
      }
      uint64_t v10 = v11 - 1;
    }
    while (v11);
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitRepeatedUInt64Field(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  uint64_t v5 = v4;
  uint64_t v13 = v2;
  uint64_t v6 = *((void *)value._rawValue + 2);
  if (v6)
  {
    uint64_t v7 = v3;
    uint64_t v10 = *(void (**)(void, Swift::Int, uint64_t, uint64_t))(v3 + 48);
    swift_bridgeObjectRetain();
    uint64_t v11 = 0;
    do
    {
      v10(*((void *)value._rawValue + v11 + 4), fieldNumber, v13, v7);
      if (v5) {
        break;
      }
    }
    while (v6 - 1 != v11++);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C8D3E348(uint64_t a1, unsigned int a2)
{
  return sub_1C8D3E360(a1, a2);
}

uint64_t sub_1C8D3E360(uint64_t result, unsigned int a2)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    unsigned int v4 = 8 * a2;
    uint64_t v5 = *v2;
    uint64_t v6 = (int *)(result + 32);
    if (((a2 >> 25) & 0xF) != 0) {
      uint64_t v7 = 5;
    }
    else {
      uint64_t v7 = 4;
    }
    uint64_t v8 = 1;
    if (v4 >= 0x80) {
      uint64_t v8 = 2;
    }
    if (v4 < 0x200000) {
      uint64_t v7 = 3;
    }
    if (v4 >= 0x4000) {
      uint64_t v9 = v7;
    }
    else {
      uint64_t v9 = v8;
    }
    while (1)
    {
      int v10 = *v6++;
      unsigned int v11 = (2 * v10) ^ (v10 >> 31);
      if (v11 >= 0x80)
      {
        if (v11 >> 14)
        {
          if (v11 >= 0x200000) {
            uint64_t v12 = v11 >> 28 ? 5 : 4;
          }
          else {
            uint64_t v12 = 3;
          }
        }
        else
        {
          uint64_t v12 = 2;
        }
      }
      else
      {
        uint64_t v12 = 1;
      }
      uint64_t v13 = v12 + v9;
      BOOL v14 = __OFADD__(v5, v13);
      v5 += v13;
      if (v14) {
        break;
      }
      if (!--v3)
      {
        uint64_t *v2 = v5;
        return result;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D3E40C(uint64_t result, int a2)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = *v2;
    do
    {
      uint64_t v7 = *(int *)(result + 32 + 4 * v4);
      if ((8 * a2) < 0x80uLL)
      {
        LOBYTE(v9) = 8 * a2;
      }
      else
      {
        unint64_t v8 = (8 * a2);
        do
        {
          *v5++ = v8 | 0x80;
          unint64_t v9 = v8 >> 7;
          unint64_t v10 = v8 >> 14;
          v8 >>= 7;
        }
        while (v10);
      }
      unint64_t v11 = (2 * v7) ^ (v7 >> 63);
      *uint64_t v5 = v9;
      uint64_t v12 = v5 + 1;
      if (v11 < 0x80)
      {
        LOBYTE(v6) = v11;
      }
      else
      {
        do
        {
          *v12++ = v11 | 0x80;
          unint64_t v6 = v11 >> 7;
          unint64_t v13 = v11 >> 14;
          v11 >>= 7;
        }
        while (v13);
      }
      ++v4;
      *uint64_t v12 = v6;
      uint64_t v5 = v12 + 1;
    }
    while (v4 != v3);
    uint64_t *v2 = v5;
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitRepeatedSInt32Field(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  uint64_t v5 = v4;
  uint64_t v13 = v2;
  uint64_t v6 = *((void *)value._rawValue + 2);
  if (v6)
  {
    uint64_t v7 = v3;
    unint64_t v10 = *(void (**)(void, Swift::Int, uint64_t, uint64_t))(v3 + 56);
    swift_bridgeObjectRetain();
    uint64_t v11 = 0;
    do
    {
      v10(*((unsigned int *)value._rawValue + v11 + 8), fieldNumber, v13, v7);
      if (v5) {
        break;
      }
    }
    while (v6 - 1 != v11++);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C8D3E558(uint64_t a1, unsigned int a2)
{
  return sub_1C8D3E570(a1, a2);
}

uint64_t sub_1C8D3E570(uint64_t result, unsigned int a2)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    unsigned int v4 = 8 * a2;
    uint64_t v5 = *v2;
    uint64_t v6 = (uint64_t *)(result + 32);
    uint64_t v7 = 4;
    if (((a2 >> 25) & 0xF) != 0) {
      uint64_t v7 = 5;
    }
    uint64_t v8 = 1;
    if (v4 >= 0x80) {
      uint64_t v8 = 2;
    }
    if (v4 < 0x200000) {
      uint64_t v7 = 3;
    }
    if (v4 >= 0x4000) {
      uint64_t v9 = v7;
    }
    else {
      uint64_t v9 = v8;
    }
    while (1)
    {
      uint64_t v10 = *v6++;
      unint64_t v11 = (2 * v10) ^ (v10 >> 63);
      if (v11 < 0x80)
      {
        uint64_t v12 = 1;
        goto LABEL_26;
      }
      if ((v11 & 0x8000000000000000) != 0)
      {
        uint64_t v12 = 10;
        goto LABEL_26;
      }
      if (v11 >> 35)
      {
        if (v11 >> 49)
        {
          v11 >>= 28;
          uint64_t v12 = 8;
LABEL_24:
          if (!(v11 >> 28)) {
            goto LABEL_26;
          }
LABEL_25:
          ++v12;
          goto LABEL_26;
        }
        uint64_t v12 = 6;
        if (v11 >> 42) {
          goto LABEL_25;
        }
      }
      else
      {
        if (v11 >= 0x200000)
        {
          uint64_t v12 = 4;
          goto LABEL_24;
        }
        uint64_t v12 = 2;
        if (v11 >= 0x4000) {
          goto LABEL_25;
        }
      }
LABEL_26:
      BOOL v13 = __OFADD__(v5, v12 + v9);
      v5 += v12 + v9;
      if (v13)
      {
        __break(1u);
        return result;
      }
      if (!--v3)
      {
        uint64_t *v2 = v5;
        return result;
      }
    }
  }
  return result;
}

uint64_t sub_1C8D3E650(uint64_t result, int a2)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = *v2;
    do
    {
      uint64_t v7 = *(void *)(result + 32 + 8 * v4);
      if ((8 * a2) < 0x80uLL)
      {
        LOBYTE(v9) = 8 * a2;
      }
      else
      {
        unint64_t v8 = (8 * a2);
        do
        {
          *v5++ = v8 | 0x80;
          unint64_t v9 = v8 >> 7;
          unint64_t v10 = v8 >> 14;
          v8 >>= 7;
        }
        while (v10);
      }
      unint64_t v11 = (2 * v7) ^ (v7 >> 63);
      *uint64_t v5 = v9;
      uint64_t v12 = v5 + 1;
      if (v11 < 0x80)
      {
        LOBYTE(v6) = v11;
      }
      else
      {
        do
        {
          *v12++ = v11 | 0x80;
          unint64_t v6 = v11 >> 7;
          unint64_t v13 = v11 >> 14;
          v11 >>= 7;
        }
        while (v13);
      }
      ++v4;
      *uint64_t v12 = v6;
      uint64_t v5 = v12 + 1;
    }
    while (v4 != v3);
    uint64_t *v2 = v5;
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitRepeatedSInt64Field(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  uint64_t v5 = v4;
  uint64_t v13 = v2;
  uint64_t v6 = *((void *)value._rawValue + 2);
  if (v6)
  {
    uint64_t v7 = v3;
    unint64_t v10 = *(void (**)(void, Swift::Int, uint64_t, uint64_t))(v3 + 64);
    swift_bridgeObjectRetain();
    uint64_t v11 = 0;
    do
    {
      v10(*((void *)value._rawValue + v11 + 4), fieldNumber, v13, v7);
      if (v5) {
        break;
      }
    }
    while (v6 - 1 != v11++);
    swift_bridgeObjectRelease();
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitRepeatedFixed32Field(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  uint64_t v5 = v4;
  uint64_t v13 = v2;
  uint64_t v6 = *((void *)value._rawValue + 2);
  if (v6)
  {
    uint64_t v7 = v3;
    unint64_t v10 = *(void (**)(void, Swift::Int, uint64_t, uint64_t))(v3 + 72);
    swift_bridgeObjectRetain();
    uint64_t v11 = 0;
    do
    {
      v10(*((unsigned int *)value._rawValue + v11 + 8), fieldNumber, v13, v7);
      if (v5) {
        break;
      }
    }
    while (v6 - 1 != v11++);
    swift_bridgeObjectRelease();
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitRepeatedFixed64Field(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  uint64_t v5 = v4;
  uint64_t v13 = v2;
  uint64_t v6 = *((void *)value._rawValue + 2);
  if (v6)
  {
    uint64_t v7 = v3;
    unint64_t v10 = *(void (**)(void, Swift::Int, uint64_t, uint64_t))(v3 + 80);
    swift_bridgeObjectRetain();
    uint64_t v11 = 0;
    do
    {
      v10(*((void *)value._rawValue + v11 + 4), fieldNumber, v13, v7);
      if (v5) {
        break;
      }
    }
    while (v6 - 1 != v11++);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C8D3E904(uint64_t result, unsigned int a2)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v4 = *v2;
    unsigned int v5 = 8 * a2;
    uint64_t v6 = 4;
    if (((a2 >> 25) & 0xF) != 0) {
      uint64_t v6 = 5;
    }
    uint64_t v7 = 1;
    if (v5 >= 0x80) {
      uint64_t v7 = 2;
    }
    if (v5 < 0x200000) {
      uint64_t v6 = 3;
    }
    if (v5 >= 0x4000) {
      uint64_t v8 = v6;
    }
    else {
      uint64_t v8 = v7;
    }
    uint64_t v9 = v8 + 4;
    while (1)
    {
      uint64_t v10 = v4 + v9;
      if (__OFADD__(v4, v9)) {
        break;
      }
      v4 += v9;
      if (!--v3)
      {
        uint64_t *v2 = v10;
        return result;
      }
    }
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitRepeatedSFixed32Field(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  uint64_t v5 = v4;
  uint64_t v13 = v2;
  uint64_t v6 = *((void *)value._rawValue + 2);
  if (v6)
  {
    uint64_t v7 = v3;
    uint64_t v10 = *(void (**)(void, Swift::Int, uint64_t, uint64_t))(v3 + 88);
    swift_bridgeObjectRetain();
    uint64_t v11 = 0;
    do
    {
      v10(*((unsigned int *)value._rawValue + v11 + 8), fieldNumber, v13, v7);
      if (v5) {
        break;
      }
    }
    while (v6 - 1 != v11++);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C8D3EA1C(uint64_t result, unsigned int a2)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v4 = *v2;
    unsigned int v5 = 8 * a2;
    uint64_t v6 = 4;
    if (((a2 >> 25) & 0xF) != 0) {
      uint64_t v6 = 5;
    }
    uint64_t v7 = 1;
    if (v5 >= 0x80) {
      uint64_t v7 = 2;
    }
    if (v5 < 0x200000) {
      uint64_t v6 = 3;
    }
    if (v5 >= 0x4000) {
      uint64_t v8 = v6;
    }
    else {
      uint64_t v8 = v7;
    }
    uint64_t v9 = v8 | 8;
    while (1)
    {
      uint64_t v10 = v4 + v9;
      if (__OFADD__(v4, v9)) {
        break;
      }
      v4 += v9;
      if (!--v3)
      {
        uint64_t *v2 = v10;
        return result;
      }
    }
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitRepeatedSFixed64Field(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  uint64_t v5 = v4;
  uint64_t v13 = v2;
  uint64_t v6 = *((void *)value._rawValue + 2);
  if (v6)
  {
    uint64_t v7 = v3;
    uint64_t v10 = *(void (**)(void, Swift::Int, uint64_t, uint64_t))(v3 + 96);
    swift_bridgeObjectRetain();
    uint64_t v11 = 0;
    do
    {
      v10(*((void *)value._rawValue + v11 + 4), fieldNumber, v13, v7);
      if (v5) {
        break;
      }
    }
    while (v6 - 1 != v11++);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C8D3EB34(uint64_t a1, unsigned int a2)
{
  return sub_1C8D3EB4C(a1, a2);
}

uint64_t sub_1C8D3EB4C(uint64_t result, unsigned int a2)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v4 = *v2;
    unsigned int v5 = 8 * a2;
    uint64_t v6 = 4;
    if (((a2 >> 25) & 0xF) != 0) {
      uint64_t v6 = 5;
    }
    uint64_t v7 = 1;
    if (v5 >= 0x80) {
      uint64_t v7 = 2;
    }
    if (v5 < 0x200000) {
      uint64_t v6 = 3;
    }
    if (v5 >= 0x4000) {
      uint64_t v8 = v6;
    }
    else {
      uint64_t v8 = v7;
    }
    uint64_t v9 = v8 + 1;
    while (1)
    {
      uint64_t v10 = v4 + v9;
      if (__OFADD__(v4, v9)) {
        break;
      }
      v4 += v9;
      if (!--v3)
      {
        uint64_t *v2 = v10;
        return result;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D3EBB0(uint64_t result, int a2)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v4 = 0;
    unsigned int v5 = *v2;
    do
    {
      char v7 = *(unsigned char *)(result + 32 + v4);
      if ((8 * a2) < 0x80uLL)
      {
        LOBYTE(v6) = 8 * a2;
      }
      else
      {
        unint64_t v8 = (8 * a2);
        do
        {
          *v5++ = v8 | 0x80;
          unint64_t v6 = v8 >> 7;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
        }
        while (v9);
      }
      ++v4;
      *unsigned int v5 = v6;
      v5[1] = v7;
      v5 += 2;
    }
    while (v4 != v3);
    uint64_t *v2 = v5;
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitRepeatedBoolField(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  uint64_t v5 = v4;
  uint64_t v13 = v2;
  uint64_t v6 = *((void *)value._rawValue + 2);
  if (v6)
  {
    uint64_t v7 = v3;
    uint64_t v10 = *(void (**)(void, Swift::Int, uint64_t, uint64_t))(v3 + 104);
    swift_bridgeObjectRetain();
    uint64_t v11 = 0;
    do
    {
      v10(*((unsigned __int8 *)value._rawValue + v11 + 32), fieldNumber, v13, v7);
      if (v5) {
        break;
      }
    }
    while (v6 - 1 != v11++);
    swift_bridgeObjectRelease();
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitRepeatedStringField(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  uint64_t v5 = v4;
  uint64_t v13 = v2;
  uint64_t v6 = *((void *)value._rawValue + 2);
  if (v6)
  {
    uint64_t v7 = v3;
    unint64_t v9 = *(void (**)(uint64_t, uint64_t, Swift::Int, uint64_t, uint64_t))(v3 + 112);
    uint64_t v10 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    while (1)
    {
      uint64_t v11 = *(v10 - 1);
      uint64_t v12 = *v10;
      swift_bridgeObjectRetain();
      v9(v11, v12, fieldNumber, v13, v7);
      if (v5) {
        break;
      }
      v10 += 2;
      swift_bridgeObjectRelease();
      if (!--v6) {
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
LABEL_7:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C8D3ED9C(uint64_t a1, unsigned int a2)
{
  return sub_1C8D3EDB4(a1, a2);
}

uint64_t sub_1C8D3EDB4(uint64_t result, unsigned int a2)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    unsigned int v4 = 8 * a2;
    uint64_t v5 = *v2;
    uint64_t v6 = 4;
    if (((a2 >> 25) & 0xF) != 0) {
      uint64_t v6 = 5;
    }
    uint64_t v7 = 1;
    if (v4 >= 0x80) {
      uint64_t v7 = 2;
    }
    if (v4 < 0x200000) {
      uint64_t v6 = 3;
    }
    if (v4 >= 0x4000) {
      uint64_t v8 = v6;
    }
    else {
      uint64_t v8 = v7;
    }
    unint64_t v9 = (uint64_t *)(result + 40);
    while (2)
    {
      uint64_t v10 = *(v9 - 1);
      uint64_t v11 = *v9;
      unint64_t v12 = (unint64_t)*v9 >> 62;
      v9 += 2;
      uint64_t v13 = 1;
      unint64_t v14 = 0;
      switch(v12)
      {
        case 1uLL:
          LODWORD(v14) = HIDWORD(v10) - v10;
          if (__OFSUB__(HIDWORD(v10), v10)) {
            goto LABEL_41;
          }
          unint64_t v14 = (int)v14;
LABEL_17:
          if (v14 < 0x80)
          {
            uint64_t v13 = 1;
            goto LABEL_34;
          }
          if ((v14 & 0x8000000000000000) != 0)
          {
            uint64_t v13 = 10;
            goto LABEL_34;
          }
          if (v14 >> 35)
          {
            if (!(v14 >> 49))
            {
              if (!(v14 >> 42))
              {
                uint64_t v13 = 6;
                goto LABEL_34;
              }
              uint64_t v13 = 6;
              goto LABEL_33;
            }
            unint64_t v18 = v14 >> 28;
            uint64_t v13 = 8;
          }
          else
          {
            if (v14 < 0x200000)
            {
              uint64_t v13 = 2;
              if (v14 < 0x4000) {
                goto LABEL_34;
              }
              goto LABEL_33;
            }
            uint64_t v13 = 4;
            unint64_t v18 = v14;
          }
          if (!(v18 >> 28)) {
            goto LABEL_34;
          }
LABEL_33:
          ++v13;
LABEL_34:
          uint64_t v19 = v13 + v8;
          BOOL v17 = __OFADD__(v19, v14);
          unint64_t v20 = v19 + v14;
          if (v17)
          {
            __break(1u);
LABEL_40:
            __break(1u);
LABEL_41:
            __break(1u);
LABEL_42:
            __break(1u);
            JUMPOUT(0x1C8D3EF04);
          }
          BOOL v17 = __OFADD__(v5, v20);
          v5 += v20;
          if (v17) {
            goto LABEL_40;
          }
          if (--v3) {
            continue;
          }
          uint64_t *v2 = v5;
          break;
        case 2uLL:
          uint64_t v16 = *(void *)(v10 + 16);
          uint64_t v15 = *(void *)(v10 + 24);
          BOOL v17 = __OFSUB__(v15, v16);
          unint64_t v14 = v15 - v16;
          if (!v17) {
            goto LABEL_17;
          }
          goto LABEL_42;
        case 3uLL:
          goto LABEL_34;
        default:
          unint64_t v14 = BYTE6(v11);
          goto LABEL_17;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_1C8D3EF14(uint64_t result, int a2)
{
  uint64_t v52 = *MEMORY[0x1E4F143B8];
  uint64_t v43 = *(void *)(result + 16);
  if (v43)
  {
    uint64_t v3 = *v2;
    unint64_t v4 = (8 * a2) | 2;
    uint64_t v5 = result + 32;
    swift_bridgeObjectRetain();
    uint64_t v6 = v5;
    uint64_t v7 = 0;
    uint64_t v8 = v43;
    uint64_t v44 = v6;
    unint64_t v45 = v4;
    while (1)
    {
      uint64_t v11 = (uint64_t *)(v6 + 16 * v7);
      uint64_t v13 = *v11;
      unint64_t v12 = v11[1];
      if (v4 < 0x80)
      {
        LOBYTE(v15) = v4;
      }
      else
      {
        unint64_t v14 = v4;
        do
        {
          *v3++ = v14 | 0x80;
          unint64_t v15 = v14 >> 7;
          unint64_t v16 = v14 >> 14;
          v14 >>= 7;
        }
        while (v16);
      }
      ++v7;
      *uint64_t v3 = v15;
      BOOL v17 = v3 + 1;
      unint64_t v18 = v12 >> 62;
      switch(v12 >> 62)
      {
        case 1uLL:
          LODWORD(v19) = HIDWORD(v13) - v13;
          if (__OFSUB__(HIDWORD(v13), v13)) {
            goto LABEL_74;
          }
          unint64_t v19 = (int)v19;
LABEL_16:
          if (v19 < 0x80)
          {
            LOBYTE(v23) = v19;
          }
          else
          {
            do
            {
              *v17++ = v19 | 0x80;
              unint64_t v23 = v19 >> 7;
              unint64_t v24 = v19 >> 14;
              v19 >>= 7;
            }
            while (v24);
          }
          break;
        case 2uLL:
          uint64_t v21 = *(void *)(v13 + 16);
          uint64_t v20 = *(void *)(v13 + 24);
          BOOL v22 = __OFSUB__(v20, v21);
          unint64_t v19 = v20 - v21;
          if (!v22) {
            goto LABEL_16;
          }
          goto LABEL_75;
        case 3uLL:
          *BOOL v17 = 0;
LABEL_4:
          uint64_t v9 = 0;
          uint64_t v10 = v17 + 1;
          goto LABEL_5;
        default:
          unint64_t v19 = BYTE6(v12);
          goto LABEL_16;
      }
      *BOOL v17 = v23;
      uint64_t v25 = v18;
      switch((int)v18)
      {
        case 1:
          if (__OFSUB__(HIDWORD(v13), v13)) {
            goto LABEL_76;
          }
          uint64_t v9 = HIDWORD(v13) - (int)v13;
LABEL_25:
          if (v9 < 0)
          {
            __break(1u);
LABEL_72:
            __break(1u);
LABEL_73:
            __break(1u);
LABEL_74:
            __break(1u);
LABEL_75:
            __break(1u);
LABEL_76:
            __break(1u);
LABEL_77:
            __break(1u);
LABEL_78:
            __break(1u);
LABEL_79:
            __break(1u);
LABEL_80:
            __break(1u);
LABEL_81:
            __break(1u);
LABEL_82:
            __break(1u);
LABEL_83:
            __break(1u);
LABEL_84:
            __break(1u);
          }
LABEL_26:
          uint64_t v10 = v17 + 1;
          if (!v9) {
            goto LABEL_5;
          }
          if (v18)
          {
            if (v18 == 1) {
              uint64_t v25 = (int)v13;
            }
            else {
              uint64_t v25 = *(void *)(v13 + 16);
            }
          }
          uint64_t v28 = v25 + v9;
          if (__OFADD__(v25, v9)) {
            goto LABEL_72;
          }
          size_t v29 = v9;
          if (v28 < v25) {
            goto LABEL_73;
          }
          if (v28 == v25) {
            goto LABEL_5;
          }
          if (v18)
          {
            if (v18 == 1)
            {
              if (v13 >> 32 < v28 || v25 < (int)v13 || v13 >> 32 < v25 || v28 < (int)v13) {
                goto LABEL_78;
              }
              sub_1C8CA3CF8(v13, v12);
              uint64_t v30 = sub_1C8D88110();
              if (v30)
              {
                uint64_t v31 = v30;
                uint64_t v32 = sub_1C8D88140();
                BOOL v22 = __OFSUB__(v25, v32);
                uint64_t v33 = v25 - v32;
                if (v22) {
                  goto LABEL_83;
                }
                uint64_t v34 = sub_1C8D88130();
                uint64_t v35 = (const void *)(v31 + v33);
                if (v34 >= v9) {
                  size_t v36 = v9;
                }
                else {
                  size_t v36 = v34;
                }
                uint64_t v37 = v10;
LABEL_63:
                memmove(v37, v35, v36);
              }
              else
              {
                sub_1C8D88130();
              }
            }
            else
            {
              if (v25 < *(void *)(v13 + 16)) {
                goto LABEL_80;
              }
              uint64_t v38 = *(void *)(v13 + 24);
              if (v38 < v28 || v38 < v25) {
                goto LABEL_81;
              }
              sub_1C8CA3CF8(v13, v12);
              uint64_t v39 = sub_1C8D88110();
              if (v39)
              {
                uint64_t v40 = sub_1C8D88140();
                if (__OFSUB__(v25, v40)) {
                  goto LABEL_84;
                }
                v39 += v25 - v40;
              }
              if (__OFSUB__(v28, v25)) {
                goto LABEL_82;
              }
              uint64_t v41 = sub_1C8D88130();
              if (v39)
              {
                if (v41 >= v9) {
                  size_t v36 = v9;
                }
                else {
                  size_t v36 = v41;
                }
                uint64_t v37 = v10;
                uint64_t v35 = (const void *)v39;
                goto LABEL_63;
              }
            }
            sub_1C8CA3D5C(v13, v12);
            uint64_t v8 = v43;
            goto LABEL_68;
          }
          if (v25 > (unint64_t)BYTE6(v12) || v28 > (unint64_t)BYTE6(v12)) {
            goto LABEL_79;
          }
          uint64_t v46 = v13;
          __int16 v47 = v12;
          char v48 = BYTE2(v12);
          char v49 = BYTE3(v12);
          char v50 = BYTE4(v12);
          char v51 = BYTE5(v12);
          if (v9 > 13)
          {
            size_t v29 = 14;
          }
          else if (v9 < 1)
          {
            goto LABEL_68;
          }
          memmove(v10, (char *)&v46 + v25, v29);
LABEL_68:
          uint64_t v6 = v44;
          unint64_t v4 = v45;
LABEL_5:
          uint64_t v3 = &v10[v9];
          if (v7 == v8)
          {
            uint64_t result = swift_bridgeObjectRelease();
            *int v42 = v3;
            return result;
          }
          break;
        case 2:
          uint64_t v27 = *(void *)(v13 + 16);
          uint64_t v26 = *(void *)(v13 + 24);
          uint64_t v9 = v26 - v27;
          if (!__OFSUB__(v26, v27)) {
            goto LABEL_25;
          }
          goto LABEL_77;
        case 3:
          goto LABEL_4;
        default:
          uint64_t v9 = BYTE6(v12);
          goto LABEL_26;
      }
    }
  }
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitRepeatedBytesField(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
  uint64_t v12 = v2;
  uint64_t v5 = *((void *)value._rawValue + 2);
  if (v5)
  {
    uint64_t v6 = v3;
    uint64_t v7 = *(void (**)(uint64_t, unint64_t, Swift::Int, uint64_t, uint64_t))(v3 + 120);
    for (char i = (unint64_t *)(swift_bridgeObjectRetain() + 40); ; i += 2)
    {
      uint64_t v9 = *(i - 1);
      unint64_t v10 = *i;
      sub_1C8CA3CF8(v9, *i);
      v7(v9, v10, fieldNumber, v12, v6);
      if (v4) {
        break;
      }
      sub_1C8CA3D5C(v9, v10);
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    swift_bridgeObjectRelease();
    sub_1C8CA3D5C(v9, v10);
  }
}

uint64_t sub_1C8D3F408(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D3D0B0(v3, a2, a3, *a1, (uint64_t)&type metadata for BinaryEncodingSizeVisitor, (uint64_t)&off_1F2354500);
}

uint64_t sub_1C8D3F438(unint64_t a1, uint64_t a2)
{
  return sub_1C8D3F468(a1, a2);
}

uint64_t sub_1C8D3F450(unint64_t a1, uint64_t a2)
{
  return sub_1C8D3BEE0(a1, a2);
}

uint64_t sub_1C8D3F468(unint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C8D22E68(a2);
  if (!v2) {
    return sub_1C8D284C4(a1);
  }
  return result;
}

uint64_t sub_1C8D3F4A4(uint64_t a1, uint64_t a2)
{
  return sub_1C8D3C238(a1, a2);
}

uint64_t sub_1C8D3F4BC(uint64_t a1, uint64_t a2)
{
  return sub_1C8D3C5C4(a1, a2);
}

uint64_t sub_1C8D3F4D4(uint64_t a1, uint64_t a2)
{
  return sub_1C8D3CA18(a1, a2);
}

uint64_t sub_1C8D3F4EC(uint64_t a1, int a2)
{
  return sub_1C8D3DA6C(a1, a2);
}

uint64_t sub_1C8D3F504(uint64_t a1, int a2)
{
  return sub_1C8D3DC10(a1, a2);
}

uint64_t sub_1C8D3F51C(uint64_t a1, int a2)
{
  return sub_1C8D3DDEC(a1, a2);
}

uint64_t sub_1C8D3F534(uint64_t a1, int a2)
{
  return sub_1C8D3DF5C(a1, a2);
}

uint64_t sub_1C8D3F54C(uint64_t a1, int a2)
{
  return sub_1C8D3E0F4(a1, a2);
}

uint64_t sub_1C8D3F564(uint64_t a1, int a2)
{
  return sub_1C8D3E40C(a1, a2);
}

uint64_t sub_1C8D3F57C(uint64_t a1, int a2)
{
  return sub_1C8D3E650(a1, a2);
}

uint64_t sub_1C8D3F594(uint64_t a1, int a2)
{
  return sub_1C8D3EBB0(a1, a2);
}

uint64_t sub_1C8D3F5AC(uint64_t a1, int a2)
{
  return sub_1C8D3EF14(a1, a2);
}

uint64_t sub_1C8D3F5C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return Visitor.visitRepeatedEnumField<A>(value:fieldNumber:)(a1, a2, a5, a3, a6, a4);
}

uint64_t Visitor.visitRepeatedEnumField<A>(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v29 = a3;
  uint64_t v30 = a6;
  uint64_t v28 = a2;
  uint64_t v10 = *(void *)(a4 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = MEMORY[0x1F4188790](a1, a2);
  uint64_t v13 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12, v14);
  uint64_t v31 = (char *)&v21 - v15;
  uint64_t v16 = swift_bridgeObjectRetain();
  if (!MEMORY[0x1CB773090](v16, a4)) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v17 = 0;
  uint64_t v26 = a5;
  unint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 128);
  uint64_t v25 = a5 + 128;
  uint64_t v27 = (void (**)(char *, uint64_t *, uint64_t))(v10 + 16);
  uint64_t v22 = v11;
  unint64_t v23 = (void (**)(char *, char *, uint64_t))(v10 + 32);
  while (1)
  {
    char v18 = sub_1C8D88510();
    sub_1C8D884D0();
    if (v18)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v31, a1+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v17, a4);
      uint64_t v19 = v17 + 1;
      if (__OFADD__(v17, 1)) {
        goto LABEL_11;
      }
      goto LABEL_5;
    }
    uint64_t result = sub_1C8D886B0();
    if (v22 != 8) {
      break;
    }
    uint64_t v32 = result;
    (*v27)(v31, &v32, a4);
    swift_unknownObjectRelease();
    uint64_t v19 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_11:
      __break(1u);
      return swift_bridgeObjectRelease();
    }
LABEL_5:
    (*v23)(v13, v31, a4);
    v24(v13, v28, a4, v30, v29, v26);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, a4);
    if (!v6)
    {
      ++v17;
      if (v19 != MEMORY[0x1CB773090](a1, a4)) {
        continue;
      }
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C8D3F858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return Visitor.visitRepeatedGroupField<A>(value:fieldNumber:)(a1, a2, a5, a3, a6, a4);
}

uint64_t Visitor.visitRepeatedGroupField<A>(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v29 = a3;
  uint64_t v30 = a6;
  uint64_t v28 = a2;
  uint64_t v10 = *(void *)(a4 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = MEMORY[0x1F4188790](a1, a2);
  uint64_t v13 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12, v14);
  uint64_t v31 = (char *)&v21 - v15;
  uint64_t v16 = swift_bridgeObjectRetain();
  if (!MEMORY[0x1CB773090](v16, a4)) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v17 = 0;
  uint64_t v26 = a5;
  unint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 144);
  uint64_t v25 = a5 + 144;
  uint64_t v27 = (void (**)(char *, uint64_t *, uint64_t))(v10 + 16);
  uint64_t v22 = v11;
  unint64_t v23 = (void (**)(char *, char *, uint64_t))(v10 + 32);
  while (1)
  {
    char v18 = sub_1C8D88510();
    sub_1C8D884D0();
    if (v18)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v31, a1+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v17, a4);
      uint64_t v19 = v17 + 1;
      if (__OFADD__(v17, 1)) {
        goto LABEL_11;
      }
      goto LABEL_5;
    }
    uint64_t result = sub_1C8D886B0();
    if (v22 != 8) {
      break;
    }
    uint64_t v32 = result;
    (*v27)(v31, &v32, a4);
    swift_unknownObjectRelease();
    uint64_t v19 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_11:
      __break(1u);
      return swift_bridgeObjectRelease();
    }
LABEL_5:
    (*v23)(v13, v31, a4);
    v24(v13, v28, a4, v30, v29, v26);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, a4);
    if (!v6)
    {
      ++v17;
      if (v19 != MEMORY[0x1CB773090](a1, a4)) {
        continue;
      }
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C8D3FAEC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D3D0B0(v3, a2, a3, *a1, (uint64_t)&type metadata for BinaryEncodingVisitor, (uint64_t)&off_1F2355030);
}

uint64_t sub_1C8D3FB1C(int a1, unint64_t a2)
{
  return sub_1C8D3BACC(a1, a2);
}

uint64_t sub_1C8D3FB34(unsigned int a1, unint64_t a2)
{
  return sub_1C8D3BC8C(a1, a2);
}

uint64_t sub_1C8D3FB4C(unint64_t a1, unint64_t a2)
{
  return sub_1C8D3C04C(a1, a2);
}

uint64_t sub_1C8D3FB64(unint64_t a1, unint64_t a2)
{
  return sub_1C8D3BE14(a1, a2);
}

uint64_t sub_1C8D3FB7C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D3CD9C(v3, a2, a3, *a1);
}

void sub_1C8D3FB9C(Swift::Int a1, Swift::Float a2)
{
}

void sub_1C8D3FBB4(Swift::Int32 a1, Swift::Int a2)
{
}

void sub_1C8D3FBCC(Swift::UInt32 a1, Swift::Int a2)
{
}

void sub_1C8D3FBE4(Swift::Int32 a1, Swift::Int a2)
{
}

void sub_1C8D3FBFC(Swift::Int64 a1, Swift::Int a2)
{
}

void sub_1C8D3FC14(Swift::UInt32 a1, Swift::Int a2)
{
}

void sub_1C8D3FC2C(Swift::UInt64 a1, Swift::Int a2)
{
}

void sub_1C8D3FC44(Swift::OpaquePointer a1, Swift::Int a2)
{
}

void sub_1C8D3FC5C(Swift::OpaquePointer a1, Swift::Int a2)
{
}

void sub_1C8D3FC74(Swift::OpaquePointer a1, Swift::Int a2)
{
}

void sub_1C8D3FC8C(Swift::OpaquePointer a1, Swift::Int a2)
{
}

void sub_1C8D3FCA4(Swift::OpaquePointer a1, Swift::Int a2)
{
}

void sub_1C8D3FCBC(Swift::OpaquePointer a1, Swift::Int a2)
{
}

void sub_1C8D3FCD4(Swift::OpaquePointer a1, Swift::Int a2)
{
}

void sub_1C8D3FCEC(Swift::OpaquePointer a1, Swift::Int a2)
{
}

void sub_1C8D3FD04(Swift::OpaquePointer a1, Swift::Int a2)
{
}

void sub_1C8D3FD1C(Swift::OpaquePointer a1, Swift::Int a2)
{
}

void sub_1C8D3FD34(Swift::OpaquePointer a1, Swift::Int a2)
{
}

void sub_1C8D3FD4C(Swift::OpaquePointer a1, Swift::Int a2)
{
}

void sub_1C8D3FD64(Swift::OpaquePointer a1, Swift::Int a2)
{
}

void sub_1C8D3FD7C(Swift::OpaquePointer a1, Swift::Int a2)
{
}

void sub_1C8D3FD94(Swift::OpaquePointer a1, Swift::Int a2)
{
}

void sub_1C8D3FDAC(Swift::OpaquePointer a1, Swift::Int a2)
{
}

void sub_1C8D3FDC4(Swift::OpaquePointer a1, Swift::Int a2)
{
}

void sub_1C8D3FDDC(Swift::OpaquePointer a1, Swift::Int a2)
{
}

void sub_1C8D3FDF4(Swift::OpaquePointer a1, Swift::Int a2)
{
}

void sub_1C8D3FE0C(Swift::OpaquePointer a1, Swift::Int a2)
{
}

void sub_1C8D3FE24(Swift::OpaquePointer a1, Swift::Int a2)
{
}

void sub_1C8D3FE3C(Swift::OpaquePointer a1, Swift::Int a2)
{
}

void sub_1C8D3FE54(Swift::OpaquePointer a1, Swift::Int a2)
{
}

void sub_1C8D3FE6C(Swift::OpaquePointer a1, Swift::Int a2)
{
}

void sub_1C8D3FE84(Swift::OpaquePointer a1, Swift::Int a2)
{
}

void sub_1C8D3FE9C(Swift::OpaquePointer a1, Swift::Int a2)
{
}

void sub_1C8D3FEB4(SiriOntologyProtobuf::ExtensionFieldValueSet a1, Swift::Int a2, Swift::Int a3)
{
}

void sub_1C8D3FECC(SiriOntologyProtobuf::ExtensionFieldValueSet a1, Swift::Int a2, Swift::Int a3)
{
}

uint64_t dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of Visitor.visitSingularInt64Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of Visitor.visitSingularSInt32Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of Visitor.visitSingularSInt64Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of Visitor.visitSingularFixed32Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t dispatch thunk of Visitor.visitSingularFixed64Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t dispatch thunk of Visitor.visitSingularSFixed32Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

uint64_t dispatch thunk of Visitor.visitSingularSFixed64Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 96))();
}

uint64_t dispatch thunk of Visitor.visitSingularBytesField(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 120))();
}

uint64_t dispatch thunk of Visitor.visitSingularGroupField<A>(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 144))();
}

uint64_t dispatch thunk of Visitor.visitRepeatedFloatField(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 152))();
}

uint64_t dispatch thunk of Visitor.visitRepeatedDoubleField(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 160))();
}

uint64_t dispatch thunk of Visitor.visitRepeatedInt32Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 168))();
}

uint64_t dispatch thunk of Visitor.visitRepeatedInt64Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 176))();
}

uint64_t dispatch thunk of Visitor.visitRepeatedUInt32Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 184))();
}

uint64_t dispatch thunk of Visitor.visitRepeatedUInt64Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 192))();
}

uint64_t dispatch thunk of Visitor.visitRepeatedSInt32Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 200))();
}

uint64_t dispatch thunk of Visitor.visitRepeatedSInt64Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 208))();
}

uint64_t dispatch thunk of Visitor.visitRepeatedFixed32Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 216))();
}

uint64_t dispatch thunk of Visitor.visitRepeatedFixed64Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 224))();
}

uint64_t dispatch thunk of Visitor.visitRepeatedSFixed32Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 232))();
}

uint64_t dispatch thunk of Visitor.visitRepeatedSFixed64Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 240))();
}

uint64_t dispatch thunk of Visitor.visitRepeatedBoolField(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 248))();
}

uint64_t dispatch thunk of Visitor.visitRepeatedBytesField(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 264))();
}

uint64_t dispatch thunk of Visitor.visitRepeatedEnumField<A>(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 272))();
}

uint64_t dispatch thunk of Visitor.visitRepeatedGroupField<A>(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 288))();
}

uint64_t dispatch thunk of Visitor.visitPackedFloatField(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 296))();
}

uint64_t dispatch thunk of Visitor.visitPackedDoubleField(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 304))();
}

uint64_t dispatch thunk of Visitor.visitPackedInt32Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 312))();
}

uint64_t dispatch thunk of Visitor.visitPackedInt64Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 320))();
}

uint64_t dispatch thunk of Visitor.visitPackedUInt32Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 328))();
}

uint64_t dispatch thunk of Visitor.visitPackedUInt64Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 336))();
}

uint64_t dispatch thunk of Visitor.visitPackedSInt32Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 344))();
}

uint64_t dispatch thunk of Visitor.visitPackedSInt64Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 352))();
}

uint64_t dispatch thunk of Visitor.visitPackedFixed32Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 360))();
}

uint64_t dispatch thunk of Visitor.visitPackedFixed64Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 368))();
}

uint64_t dispatch thunk of Visitor.visitPackedSFixed32Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 376))();
}

uint64_t dispatch thunk of Visitor.visitPackedSFixed64Field(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 384))();
}

uint64_t dispatch thunk of Visitor.visitPackedBoolField(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 392))();
}

uint64_t dispatch thunk of Visitor.visitPackedEnumField<A>(value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 400))();
}

uint64_t dispatch thunk of Visitor.visitMapField<A, B>(fieldType:value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 408))();
}

{
  return (*(uint64_t (**)(void))(a8 + 416))();
}

uint64_t dispatch thunk of Visitor.visitMapField<A, B>(fieldType:value:fieldNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t))(a9 + 424))(a1);
}

uint64_t dispatch thunk of Visitor.visitExtensionFields(fields:start:end:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 432))();
}

uint64_t dispatch thunk of Visitor.visitExtensionFieldsAsMessageSet(fields:start:end:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 440))();
}

uint64_t dispatch thunk of Visitor.visitUnknown(bytes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 448))();
}

uint64_t sub_1C8D40624(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_1C8D88850();
  if (v3)
  {
    uint64_t v5 = a2 + 32;
    do
    {
      v5 += 8;
      uint64_t result = sub_1C8D88880();
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_1C8D4067C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_1C8D88850();
  if (v3)
  {
    uint64_t v5 = a2 + 32;
    do
    {
      v5 += 4;
      uint64_t result = sub_1C8D88870();
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_1C8D406D4(uint64_t a1, uint64_t a2)
{
  return sub_1C8D27C78(a1, a2);
}

uint64_t sub_1C8D406EC(uint64_t a1, uint64_t a2)
{
  return sub_1C8D27C90(a1, a2);
}

uint64_t sub_1C8D40704(int a1, unint64_t a2)
{
  return sub_1C8D3FB1C(a1, a2);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitSingularSFixed32Field(value:fieldNumber:)(Swift::Int32 value, Swift::Int fieldNumber)
{
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitSingularSFixed64Field(value:fieldNumber:)(Swift::Int64 value, Swift::Int fieldNumber)
{
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitPackedSFixed32Field(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Visitor.visitPackedSFixed64Field(value:fieldNumber:)(Swift::OpaquePointer value, Swift::Int fieldNumber)
{
}

uint64_t static Message.jsonString<A>(from:options:)(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = sub_1C8D88340();
  MEMORY[0x1F4188790](v13 - 8, v14);
  uint64_t v16 = &v25[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0) - 2];
  char v17 = a2[1];
  v25[0] = *a2;
  v25[1] = v17;
  uint64_t v18 = static Message.jsonUTF8Data<A>(from:options:)(a1, v25, a3, a4, a5, a6);
  if (v6) {
    return (uint64_t)v16;
  }
  uint64_t v20 = v18;
  unint64_t v21 = v19;
  sub_1C8D88330();
  uint64_t result = sub_1C8D88300();
  if (v23)
  {
    uint64_t v16 = (char *)result;
    sub_1C8CA3D5C(v20, v21);
    return (uint64_t)v16;
  }
  __break(1u);
  return result;
}

uint64_t static Message.jsonUTF8Data<A>(from:options:)(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v61 = a5;
  uint64_t v9 = a3;
  uint64_t v65 = a1;
  uint64_t v63 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1, a2);
  int v76 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C8D88620();
  uint64_t v14 = MEMORY[0x1F4188790](v12 - 8, v13);
  uint64_t v16 = (char *)&v59 - v15;
  uint64_t v17 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](v14, v18);
  uint64_t v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedConformanceWitness = *(void *)(a6 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v60 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness, v21);
  int v67 = (char *)&v59 - v22;
  char v23 = *a2;
  char v24 = a2[1];
  uint64_t v25 = swift_conformsToProtocol2();
  if (v25) {
    uint64_t v26 = v25;
  }
  else {
    uint64_t v26 = 0;
  }
  if (v25) {
    uint64_t v27 = v9;
  }
  else {
    uint64_t v27 = 0;
  }
  if (!v27)
  {
    sub_1C8CC552C();
    swift_allocError();
    unsigned char *v38 = 4;
    swift_willThrow();
LABEL_36:
    swift_bridgeObjectRelease();
    return v9;
  }
  (*(void (**)(_OWORD *__return_ptr))(v26 + 8))(v69);
  long long v72 = v69[0];
  long long v73 = v69[1];
  char v74 = v23;
  char v75 = v24;
  uint64_t v28 = sub_1C8D5EB50(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v30 = *((void *)v28 + 2);
  unint64_t v29 = *((void *)v28 + 3);
  if (v30 >= v29 >> 1) {
    uint64_t v28 = sub_1C8D5EB50((char *)(v29 > 1), v30 + 1, 1, v28);
  }
  uint64_t v31 = v65;
  *((void *)v28 + 2) = v30 + 1;
  v28[v30 + 32] = 91;
  uint64_t v70 = v28;
  __int16 v71 = 256;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v20, v31, a4);
  sub_1C8D884C0();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_1C8D88630();
  uint64_t v32 = v63;
  int v64 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48);
  uint64_t v65 = v63 + 48;
  if (v64(v16, 1, v9) != 1)
  {
    uint64_t v40 = *(void *)(v32 + 32);
    uint64_t v39 = v32 + 32;
    uint64_t v41 = v61;
    uint64_t v62 = v61 + 72;
    uint64_t v63 = v40;
    int v42 = (void (**)(char *, uint64_t))(v39 - 24);
    uint64_t v43 = v76;
    while (1)
    {
      uint64_t v44 = v39;
      ((void (*)(char *, char *, uint64_t))v63)(v43, v16, v9);
      unint64_t v45 = v70;
      if ((v71 & 0x100) == 0)
      {
        char v46 = v71;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v70 = v45;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v45 = sub_1C8D5EB50(0, *((void *)v45 + 2) + 1, 1, v45);
          uint64_t v70 = v45;
        }
        unint64_t v49 = *((void *)v45 + 2);
        unint64_t v48 = *((void *)v45 + 3);
        if (v49 >= v48 >> 1) {
          unint64_t v45 = sub_1C8D5EB50((char *)(v48 > 1), v49 + 1, 1, v45);
        }
        *((void *)v45 + 2) = v49 + 1;
        v45[v49 + 32] = v46;
        uint64_t v70 = v45;
        uint64_t v41 = v61;
      }
      char v50 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v70 = v45;
      if ((v50 & 1) == 0)
      {
        unint64_t v45 = sub_1C8D5EB50(0, *((void *)v45 + 2) + 1, 1, v45);
        uint64_t v70 = v45;
      }
      unint64_t v52 = *((void *)v45 + 2);
      unint64_t v51 = *((void *)v45 + 3);
      if (v52 >= v51 >> 1) {
        unint64_t v45 = sub_1C8D5EB50((char *)(v51 > 1), v52 + 1, 1, v45);
      }
      *((void *)v45 + 2) = v52 + 1;
      v45[v52 + 32] = 123;
      uint64_t v70 = v45;
      __int16 v71 = 256;
      int v53 = v76;
      (*(void (**)(char **, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v41 + 72))(&v70, &type metadata for JSONEncodingVisitor, &off_1F2354C58, v9, v41);
      if (v6) {
        break;
      }
      int v54 = v70;
      char v55 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v70 = v54;
      if ((v55 & 1) == 0)
      {
        int v54 = sub_1C8D5EB50(0, *((void *)v54 + 2) + 1, 1, v54);
        uint64_t v70 = v54;
      }
      unint64_t v57 = *((void *)v54 + 2);
      unint64_t v56 = *((void *)v54 + 3);
      if (v57 >= v56 >> 1) {
        int v54 = sub_1C8D5EB50((char *)(v56 > 1), v57 + 1, 1, v54);
      }
      *((void *)v54 + 2) = v57 + 1;
      v54[v57 + 32] = 125;
      uint64_t v70 = v54;
      __int16 v71 = 44;
      uint64_t v43 = v76;
      (*v42)(v76, v9);
      sub_1C8D88630();
      uint64_t v39 = v44;
      if (v64(v16, 1, v9) == 1) {
        goto LABEL_11;
      }
    }
    (*v42)(v53, v9);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v67, AssociatedTypeWitness);
    uint64_t v9 = v72;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_36;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t))(v60 + 8))(v67, AssociatedTypeWitness);
  uint64_t v33 = v70;
  char v34 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v70 = v33;
  if ((v34 & 1) == 0)
  {
    uint64_t v33 = sub_1C8D5EB50(0, *((void *)v33 + 2) + 1, 1, v33);
    uint64_t v70 = v33;
  }
  unint64_t v36 = *((void *)v33 + 2);
  unint64_t v35 = *((void *)v33 + 3);
  if (v36 >= v35 >> 1) {
    uint64_t v33 = sub_1C8D5EB50((char *)(v35 > 1), v36 + 1, 1, v33);
  }
  *((void *)v33 + 2) = v36 + 1;
  v33[v36 + 32] = 93;
  uint64_t v70 = v33;
  __int16 v71 = 44;
  uint64_t v37 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_1C8D5F914(v37);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t static Message.array(fromJSONString:options:)(uint64_t a1, unint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_1C8D88340();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10, v12);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v15 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v15
    && (uint64_t v25 = a4,
        uint64_t v16 = *a3,
        char v17 = *((unsigned char *)a3 + 8),
        sub_1C8D88330(),
        uint64_t v18 = sub_1C8D882F0(),
        unint64_t v20 = v19,
        (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10),
        v20 >> 60 != 15))
  {
    uint64_t v23 = v16;
    char v24 = v17;
    uint64_t v5 = static Message.array(fromJSONUTF8Data:options:)();
    sub_1C8CAA9F0(v18, v20);
  }
  else
  {
    sub_1C8CAC5B0();
    swift_allocError();
    *uint64_t v21 = xmmword_1C8D8AD20;
    swift_willThrow();
  }
  return v5;
}

uint64_t static Message.array(fromJSONUTF8Data:options:)()
{
  sub_1C8D88550();
  uint64_t result = sub_1C8D881C0();
  if (!v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1C8D4124C@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t *a5@<X8>)
{
  uint64_t result = sub_1C8D88270();
  uint64_t v21 = result;
  if (!a1) {
    goto LABEL_13;
  }
  uint64_t v12 = a2 - (void)a1;
  if (a2 - (uint64_t)a1 < 1) {
    goto LABEL_13;
  }
  type metadata accessor for DoubleParser();
  uint64_t v13 = swift_allocObject();
  uint64_t v14 = swift_slowAlloc();
  *(void *)(v13 + 16) = v14;
  *(void *)(v13 + 24) = v14 + 128;
  sub_1C8D56864((uint64_t)&v21, a3, a4);
  if (v5)
  {
    swift_release();
    sub_1C8CA469C(0);
    return swift_bridgeObjectRelease();
  }
  uint64_t v15 = v12;
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v16 = a1;
  while (1)
  {
    unsigned int v17 = *v16++;
    uint64_t v18 = (1 << v17) & 0x100002600;
    if (v17 > 0x20 || v18 == 0) {
      break;
    }
    if (!--v15) {
      goto LABEL_12;
    }
  }
  if (!v15)
  {
LABEL_12:
    swift_release();
    sub_1C8CA469C(0);
    uint64_t result = v21;
LABEL_13:
    *a5 = result;
    return result;
  }
  swift_bridgeObjectRelease();
  sub_1C8CAC5B0();
  swift_allocError();
  *unint64_t v20 = xmmword_1C8D8F6F0;
  swift_willThrow();
  swift_release();
  return sub_1C8CA469C(0);
}

uint64_t sub_1C8D41444@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C8D4124C(a1, a2, *(void *)(v3 + 16), *(void *)(v3 + 24), a3);
}

uint64_t Google_Protobuf_Empty.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_1C8CA3CF8(v2, v3);
}

uint64_t Google_Protobuf_Empty.unknownFields.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C8CA3D5C(*(void *)v1, *(void *)(v1 + 8));
  *(void *)uint64_t v1 = v2;
  *(void *)(v1 + 8) = v3;
  return result;
}

uint64_t (*Google_Protobuf_Empty.unknownFields.modify())()
{
  return nullsub_1;
}

double Google_Protobuf_Empty.init()@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = xmmword_1C8D8AD80;
  return result;
}

unint64_t static Google_Protobuf_Empty.protoMessageName.getter()
{
  return 0xD000000000000015;
}

unint64_t sub_1C8D414F4()
{
  type metadata accessor for InternPool();
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *(void *)(v0 + 16) = MEMORY[0x1E4FBC860];
  unint64_t v2 = sub_1C8D841F8(v1);
  unint64_t v3 = sub_1C8D84418(v1);
  unint64_t result = sub_1C8D84418(v1);
  qword_1EA567238 = v0;
  unk_1EA567240 = v2;
  qword_1EA567248 = v3;
  unk_1EA567250 = result;
  return result;
}

uint64_t static Google_Protobuf_Empty._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565C10 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA567240;
  uint64_t v3 = qword_1EA567248;
  uint64_t v4 = unk_1EA567250;
  *a1 = qword_1EA567238;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_Empty.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  do
    uint64_t result = v6(a2, a3);
  while (!v3 && (v8 & 1) == 0);
  return result;
}

uint64_t Google_Protobuf_Empty.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t static Google_Protobuf_Empty.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_1C8CA3CF8(*a1, v3);
  sub_1C8CA3CF8(v4, v5);
  char v6 = sub_1C8D01FBC(v2, v3, v4, v5);
  sub_1C8CA3D5C(v4, v5);
  sub_1C8CA3D5C(v2, v3);
  return v6 & 1;
}

uint64_t Google_Protobuf_Empty.hashValue.getter()
{
  uint64_t v2 = *v0;
  unint64_t v1 = v0[1];
  sub_1C8D88840();
  switch(v1 >> 62)
  {
    case 1uLL:
      if ((int)v2 != v2 >> 32) {
        goto LABEL_7;
      }
      break;
    case 2uLL:
      if (*(void *)(v2 + 16) != *(void *)(v2 + 24))
      {
LABEL_7:
        sub_1C8CA3CF8(v2, v1);
        goto LABEL_8;
      }
      break;
    case 3uLL:
      goto LABEL_3;
    default:
      if ((v1 & 0xFF000000000000) != 0)
      {
LABEL_8:
        sub_1C8D881D0();
        sub_1C8CA3D5C(v2, v1);
      }
      else
      {
LABEL_3:
        sub_1C8CA3D5C(v2, v1);
      }
      break;
  }
  return sub_1C8D888A0();
}

double sub_1C8D4185C@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = xmmword_1C8D8AD80;
  return result;
}

unint64_t sub_1C8D4186C()
{
  return 0xD000000000000015;
}

uint64_t sub_1C8D41888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_Empty.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8D418A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_Empty.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8D418B8@<X0>(void *a1@<X8>)
{
  if (qword_1EA565C10 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA567240;
  uint64_t v3 = qword_1EA567248;
  uint64_t v4 = unk_1EA567250;
  *a1 = qword_1EA567238;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8D41950()
{
  return sub_1C8D6B5F0(*(void *)v0, *(void *)(v0 + 8));
}

uint64_t sub_1C8D4195C()
{
  uint64_t v2 = *v0;
  unint64_t v1 = v0[1];
  sub_1C8D88840();
  switch(v1 >> 62)
  {
    case 1uLL:
      if ((int)v2 != v2 >> 32) {
        goto LABEL_7;
      }
      break;
    case 2uLL:
      if (*(void *)(v2 + 16) != *(void *)(v2 + 24))
      {
LABEL_7:
        sub_1C8CA3CF8(v2, v1);
        goto LABEL_8;
      }
      break;
    case 3uLL:
      goto LABEL_3;
    default:
      if ((v1 & 0xFF000000000000) != 0)
      {
LABEL_8:
        sub_1C8D881D0();
        sub_1C8CA3D5C(v2, v1);
      }
      else
      {
LABEL_3:
        sub_1C8CA3D5C(v2, v1);
      }
      break;
  }
  return sub_1C8D888A0();
}

uint64_t sub_1C8D41AA0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_1C8CA3CF8(*a1, v3);
  sub_1C8CA3CF8(v4, v5);
  char v6 = sub_1C8D01FBC(v2, v3, v4, v5);
  sub_1C8CA3D5C(v4, v5);
  sub_1C8CA3D5C(v2, v3);
  return v6 & 1;
}

unint64_t sub_1C8D41B20(uint64_t a1)
{
  unint64_t result = sub_1C8D41B48();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D41B48()
{
  unint64_t result = qword_1EA567258;
  if (!qword_1EA567258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567258);
  }
  return result;
}

unint64_t sub_1C8D41B9C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C8D41BCC();
  unint64_t result = sub_1C8D41C20();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C8D41BCC()
{
  unint64_t result = qword_1EA567260;
  if (!qword_1EA567260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567260);
  }
  return result;
}

unint64_t sub_1C8D41C20()
{
  unint64_t result = qword_1EA567268;
  if (!qword_1EA567268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567268);
  }
  return result;
}

unint64_t sub_1C8D41C78()
{
  unint64_t result = qword_1EA567270;
  if (!qword_1EA567270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567270);
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_Empty()
{
  return &type metadata for Google_Protobuf_Empty;
}

uint64_t Google_Protobuf_Any.init()@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_1C8D8AD80;
  if (qword_1EA565C88 != -1) {
    swift_once();
  }
  *(void *)(a1 + 16) = qword_1EA575078;
  return swift_retain();
}

uint64_t Google_Protobuf_Any.typeURL.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C8D41DA4(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for AnyMessageStorage();
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(a2 + 16) = sub_1C8D66554(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(a2 + 16);
  swift_beginAccess();
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v3;
  return swift_bridgeObjectRelease();
}

uint64_t Google_Protobuf_Any.typeURL.setter(uint64_t a1, uint64_t a2)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for AnyMessageStorage();
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v2 + 16) = sub_1C8D66554(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v2 + 16);
  swift_beginAccess();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  return swift_bridgeObjectRelease();
}

void (*Google_Protobuf_Any.typeURL.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 24);
  v3[9] = *(void *)(v4 + 16);
  v3[10] = v5;
  swift_bridgeObjectRetain();
  return sub_1C8D41F80;
}

void sub_1C8D41F80(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 72);
  uint64_t v4 = *(void *)(*(void *)a1 + 80);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = v2[11];
      type metadata accessor for AnyMessageStorage();
      swift_allocObject();
      uint64_t v6 = swift_retain();
      *(void *)(v5 + 16) = sub_1C8D66554(v6);
      swift_release();
    }
    uint64_t v7 = *(void *)(v2[11] + 16);
    swift_beginAccess();
    *(void *)(v7 + 16) = v3;
    *(void *)(v7 + 24) = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v8 = v2[11];
      type metadata accessor for AnyMessageStorage();
      swift_allocObject();
      uint64_t v9 = swift_retain();
      *(void *)(v8 + 16) = sub_1C8D66554(v9);
      swift_release();
    }
    uint64_t v10 = *(void *)(v2[11] + 16);
    swift_beginAccess();
    *(void *)(v10 + 16) = v3;
    *(void *)(v10 + 24) = v4;
  }
  swift_bridgeObjectRelease();
  free(v2);
}

uint64_t Google_Protobuf_Any.value.getter()
{
  return sub_1C8D661C8();
}

uint64_t sub_1C8D42100@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  sub_1C8CA3CF8(*a1, v4);
  swift_retain();
  uint64_t v5 = sub_1C8D661C8();
  uint64_t v7 = v6;
  sub_1C8CA3D5C(v3, v4);
  uint64_t result = swift_release();
  *a2 = v5;
  a2[1] = v7;
  return result;
}

uint64_t Google_Protobuf_Any.value.setter(uint64_t a1, uint64_t a2)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for AnyMessageStorage();
    swift_allocObject();
    uint64_t v5 = swift_retain();
    *(void *)(v2 + 16) = sub_1C8D66554(v5);
    swift_release();
  }
  uint64_t v6 = *(void *)(v2 + 16);
  v9[0] = a1;
  v9[1] = a2;
  char v10 = 0;
  sub_1C8D42C3C((uint64_t)v9, (uint64_t)v8);
  swift_beginAccess();
  swift_retain();
  sub_1C8D3B968((uint64_t)v8, v6 + 32);
  swift_endAccess();
  return swift_release();
}

uint64_t (*Google_Protobuf_Any.value.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  *a1 = sub_1C8D661C8();
  a1[1] = v3;
  return sub_1C8D42298;
}

uint64_t sub_1C8D42298(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  if ((a2 & 1) == 0) {
    return Google_Protobuf_Any.value.setter(*a1, v3);
  }
  sub_1C8CA3CF8(*a1, v3);
  Google_Protobuf_Any.value.setter(v2, v3);
  return sub_1C8CA3D5C(v2, v3);
}

uint64_t Google_Protobuf_Any.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_1C8CA3CF8(v2, v3);
}

uint64_t Google_Protobuf_Any.unknownFields.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C8CA3D5C(*(void *)v1, *(void *)(v1 + 8));
  *(void *)uint64_t v1 = v2;
  *(void *)(v1 + 8) = v3;
  return result;
}

uint64_t (*Google_Protobuf_Any.unknownFields.modify())()
{
  return nullsub_1;
}

unint64_t static Google_Protobuf_Any.protoMessageName.getter()
{
  return 0xD000000000000013;
}

uint64_t sub_1C8D42390()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234E2C8, &qword_1EA567278);
}

uint64_t static Google_Protobuf_Any._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565C18 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA567280;
  uint64_t v3 = qword_1EA567288;
  uint64_t v4 = unk_1EA567290;
  *a1 = qword_1EA567278;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_Any.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for AnyMessageStorage();
    swift_allocObject();
    uint64_t v7 = swift_retain();
    *(void *)(v3 + 16) = sub_1C8D66554(v7);
    swift_release();
  }
  uint64_t v8 = swift_retain();
  sub_1C8D424F4(v8, a1, a2, a3);
  return swift_release();
}

uint64_t sub_1C8D424F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 16);
  uint64_t result = v8(a3, a4);
  if (!v4)
  {
    uint64_t v11 = a1 + 32;
    uint64_t v18 = a1;
    uint64_t v12 = a1 + 16;
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        *(void *)&long long v17 = sub_1C8D661C8();
        *((void *)&v17 + 1) = v13;
        (*(void (**)(long long *, uint64_t, uint64_t))(a4 + 360))(&v17, a3, a4);
        long long v15 = v17;
        char v16 = 0;
        sub_1C8D42C3C((uint64_t)&v15, (uint64_t)v14);
        swift_beginAccess();
        sub_1C8D3B968((uint64_t)v14, v11);
        swift_endAccess();
      }
      else if (result == 1)
      {
        swift_beginAccess();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 336))(v12, a3, a4);
        swift_endAccess();
      }
      uint64_t result = v8(a3, a4);
    }
  }
  return result;
}

uint64_t Google_Protobuf_Any.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = swift_retain();
  sub_1C8D42778(v7, a1, a2, a3);
  uint64_t result = swift_release();
  if (!v3) {
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_1C8D42778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = sub_1C8D66CB4();
  if (!v4)
  {
    swift_beginAccess();
    uint64_t v9 = *(void *)(a1 + 16);
    unint64_t v10 = *(void *)(a1 + 24);
    uint64_t v11 = HIBYTE(v10) & 0xF;
    if ((v10 & 0x2000000000000000) == 0) {
      uint64_t v11 = v9 & 0xFFFFFFFFFFFFLL;
    }
    if (v11)
    {
      uint64_t v12 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(a4 + 112);
      swift_bridgeObjectRetain();
      v12(v9, v10, 1, a3, a4);
      swift_bridgeObjectRelease();
    }
    uint64_t v13 = sub_1C8D661C8();
    uint64_t v15 = v13;
    unint64_t v16 = v14;
    switch(v14 >> 62)
    {
      case 1uLL:
        uint64_t result = sub_1C8CA3D5C(v13, v14);
        if ((int)v15 != v15 >> 32) {
          goto LABEL_13;
        }
        break;
      case 2uLL:
        uint64_t v17 = *(void *)(v13 + 16);
        uint64_t v18 = *(void *)(v13 + 24);
        uint64_t result = sub_1C8CA3D5C(v13, v14);
        if (v17 != v18) {
          goto LABEL_13;
        }
        break;
      case 3uLL:
        goto LABEL_14;
      default:
        uint64_t result = sub_1C8CA3D5C(v13, v14);
        if ((v16 & 0xFF000000000000) != 0)
        {
LABEL_13:
          uint64_t v19 = sub_1C8D661C8();
          unint64_t v16 = v20;
          (*(void (**)(void))(a4 + 120))();
          uint64_t v13 = v19;
LABEL_14:
          uint64_t result = sub_1C8CA3D5C(v13, v16);
        }
        break;
    }
  }
  return result;
}

uint64_t Google_Protobuf_Any.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1C8D88840();
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 16);
  unint64_t v2 = *(void *)(v1 + 24);
  uint64_t v4 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v4 = v3 & 0xFFFFFFFFFFFFLL;
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_1C8D883C0();
    swift_bridgeObjectRelease();
  }
  return sub_1C8D888A0();
}

uint64_t sub_1C8D429C8@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_1C8D8AD80;
  if (qword_1EA565C88 != -1) {
    swift_once();
  }
  *(void *)(a1 + 16) = qword_1EA575078;
  return swift_retain();
}

unint64_t sub_1C8D42A40()
{
  return 0xD000000000000013;
}

uint64_t sub_1C8D42A5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_Any.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8D42A74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_Any.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8D42A8C@<X0>(void *a1@<X8>)
{
  if (qword_1EA565C18 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA567280;
  uint64_t v3 = qword_1EA567288;
  uint64_t v4 = unk_1EA567290;
  *a1 = qword_1EA567278;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

ValueMetadata *sub_1C8D42B24()
{
  return sub_1C8D6B2D8(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16));
}

uint64_t sub_1C8D42B34()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t result = swift_beginAccess();
  uint64_t v4 = *(void *)(v1 + 16);
  unint64_t v3 = *(void *)(v1 + 24);
  uint64_t v5 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0) {
    uint64_t v5 = v4 & 0xFFFFFFFFFFFFLL;
  }
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_1C8D883C0();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C8D42BB4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1C8D88840();
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 16);
  unint64_t v2 = *(void *)(v1 + 24);
  uint64_t v4 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v4 = v3 & 0xFFFFFFFFFFFFLL;
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_1C8D883C0();
    swift_bridgeObjectRelease();
  }
  return sub_1C8D888A0();
}

uint64_t sub_1C8D42C3C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t _s20SiriOntologyProtobuf07Google_C4_AnyV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = *a2;
  unint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  if (v4 != v7 && (sub_1C8D631A8(v7) & 1) == 0) {
    return 0;
  }
  sub_1C8CA3CF8(v2, v3);
  sub_1C8CA3CF8(v5, v6);
  char v8 = sub_1C8D01FBC(v2, v3, v5, v6);
  sub_1C8CA3D5C(v5, v6);
  sub_1C8CA3D5C(v2, v3);
  return v8 & 1;
}

unint64_t sub_1C8D42D38(uint64_t a1)
{
  unint64_t result = sub_1C8D42D60();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D42D60()
{
  unint64_t result = qword_1EA567298;
  if (!qword_1EA567298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567298);
  }
  return result;
}

unint64_t sub_1C8D42DB4(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C8CC415C();
  unint64_t result = sub_1C8D42DE4();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C8D42DE4()
{
  unint64_t result = qword_1EA5672A0;
  if (!qword_1EA5672A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5672A0);
  }
  return result;
}

unint64_t sub_1C8D42E3C()
{
  unint64_t result = qword_1EA5672A8[0];
  if (!qword_1EA5672A8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA5672A8);
  }
  return result;
}

uint64_t sub_1C8D42E90@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8D42EE4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = a1[1];
  sub_1C8CA3CF8(*a1, v2);
  return Google_Protobuf_Any.value.setter(v1, v2);
}

ValueMetadata *type metadata accessor for Google_Protobuf_Any()
{
  return &type metadata for Google_Protobuf_Any;
}

uint64_t type metadata accessor for _ProtobufMap()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1C8D42F50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 40);
}

uint64_t type metadata accessor for _ProtobufMessageMap()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for _ProtobufEnumMap()
{
  return swift_getGenericMetadata();
}

SiriOntologyProtobuf::JSONEncodingOptions __swiftcall JSONEncodingOptions.init()()
{
  *uint64_t v0 = 0;
  return result;
}

uint64_t JSONEncodingOptions.alwaysPrintEnumsAsInts.getter()
{
  return *v0;
}

uint64_t JSONEncodingOptions.alwaysPrintEnumsAsInts.setter(uint64_t result)
{
  unsigned char *v1 = result;
  return result;
}

uint64_t (*JSONEncodingOptions.alwaysPrintEnumsAsInts.modify())()
{
  return nullsub_1;
}

uint64_t JSONEncodingOptions.preserveProtoFieldNames.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t JSONEncodingOptions.preserveProtoFieldNames.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  return result;
}

uint64_t (*JSONEncodingOptions.preserveProtoFieldNames.modify())()
{
  return nullsub_1;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *SiriOntologyProtobuf::JSONEncodingOptions result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for JSONEncodingOptions(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 65281 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65281 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65281;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for JSONEncodingOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)SiriOntologyProtobuf::JSONEncodingOptions result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C8D4316CLL);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)SiriOntologyProtobuf::JSONEncodingOptions result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JSONEncodingOptions()
{
  return &type metadata for JSONEncodingOptions;
}

uint64_t sub_1C8D431A4(uint64_t result, int a2)
{
  if ((result & 0x80000000) != 0)
  {
    if (a2) {
      return (((int)result + 1) / a2 - 1);
    }
  }
  else
  {
    if (a2) {
      return ((int)result / a2);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C8D431D0(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    if (a2) {
      return (result + 1) / a2 - 1;
    }
  }
  else
  {
    if (a2)
    {
      result /= a2;
      return result;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

char *sub_1C8D431FC(unint64_t a1, unint64_t a2)
{
  unint64_t v3 = a1;
  unint64_t v4 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_37;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
  }
LABEL_5:
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (!v5) {
    return (char *)v6;
  }
  uint64_t v20 = MEMORY[0x1E4FBC860];
  SiriOntologyProtobuf::JSONEncodingOptions result = sub_1C8CB75F4(0, v5 & ~(v5 >> 63), 0);
  if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = (v3 >> 59) & 1;
    if ((a2 & 0x1000000000000000) == 0) {
      LOBYTE(v8) = 1;
    }
    uint64_t v9 = 4 << v8;
    uint64_t v10 = v3 & 0xFFFFFFFFFFFFLL;
    if ((a2 & 0x2000000000000000) != 0) {
      uint64_t v10 = v4;
    }
    uint64_t v17 = v3;
    unint64_t v18 = v10;
    unint64_t v11 = 15;
    while (1)
    {
      unint64_t v12 = v11;
      if ((v11 & 0xC) == v9) {
        unint64_t v12 = sub_1C8D62E14(v11, v3, a2);
      }
      unint64_t v13 = v12 >> 16;
      if (v12 >> 16 >= v18)
      {
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        uint64_t v5 = sub_1C8D88420();
        goto LABEL_5;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        unsigned __int8 v15 = sub_1C8D88460();
      }
      else if ((a2 & 0x2000000000000000) != 0)
      {
        v19[0] = v3;
        v19[1] = a2 & 0xFFFFFFFFFFFFFFLL;
        unsigned __int8 v15 = *((unsigned char *)v19 + v13);
      }
      else
      {
        uint64_t v14 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if ((v3 & 0x1000000000000000) == 0) {
          uint64_t v14 = sub_1C8D886C0();
        }
        unsigned __int8 v15 = *(unsigned char *)(v14 + v13);
      }
      uint64_t v6 = v20;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C8CB75F4(0, *(void *)(v6 + 16) + 1, 1);
        uint64_t v6 = v20;
      }
      unint64_t v4 = *(void *)(v6 + 16);
      unint64_t v16 = *(void *)(v6 + 24);
      if (v4 >= v16 >> 1)
      {
        sub_1C8CB75F4((char *)(v16 > 1), v4 + 1, 1);
        uint64_t v6 = v20;
      }
      *(void *)(v6 + 16) = v4 + 1;
      *(void *)(v6 + 8 * v4 + 32) = v15;
      if ((v11 & 0xC) == v9)
      {
        unint64_t v3 = v17;
        unint64_t v11 = sub_1C8D62E14(v11, v17, a2);
        if ((a2 & 0x1000000000000000) == 0) {
          goto LABEL_12;
        }
LABEL_29:
        if (v18 <= v11 >> 16) {
          goto LABEL_36;
        }
        unint64_t v11 = sub_1C8D88430();
        if (!--v5) {
          return (char *)v6;
        }
      }
      else
      {
        unint64_t v3 = v17;
        if ((a2 & 0x1000000000000000) != 0) {
          goto LABEL_29;
        }
LABEL_12:
        unint64_t v11 = (v11 & 0xFFFFFFFFFFFF0000) + 65540;
        if (!--v5) {
          return (char *)v6;
        }
      }
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1C8D4345C(unint64_t a1, unint64_t a2)
{
  swift_bridgeObjectRetain();
  BOOL v7 = sub_1C8D431FC(a1, a2);
  swift_bridgeObjectRelease();
  unint64_t v8 = *((void *)v7 + 2);
  if (v8 <= 0x13) {
    goto LABEL_2;
  }
  uint64_t v10 = v7 + 32;
  unint64_t result = sub_1C8D43B48(*((void *)v7 + 4), *((void *)v7 + 5), *((void *)v7 + 6), *((void *)v7 + 7), 48, 57);
  if (v2)
  {
LABEL_5:
    swift_bridgeObjectRelease();
    return a2;
  }
  unint64_t v19 = *((void *)v7 + 2);
  if (v19 < 5)
  {
    __break(1u);
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  if (*((void *)v7 + 8) != 45 || (uint64_t)result < 1) {
    goto LABEL_2;
  }
  unint64_t v12 = result >> 4;
  if (result >> 4 >= 0x271) {
    goto LABEL_2;
  }
  if (v19 < 6) {
    goto LABEL_59;
  }
  if (v19 == 6)
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  unint64_t v12 = *((void *)v7 + 9);
  if (v12 - 58 < 0xFFFFFFFFFFFFFFF6) {
    goto LABEL_100;
  }
  uint64_t v21 = *((void *)v7 + 10);
  if (v21 < 48 || v21 >= 58) {
    goto LABEL_100;
  }
  if (v19 < 8)
  {
    __break(1u);
LABEL_106:
    __break(1u);
    goto LABEL_107;
  }
  if (*((void *)v7 + 11) != 45) {
    goto LABEL_2;
  }
  unint64_t v22 = v21 + 10 * v12;
  unint64_t v12 = v22 - 528;
  if (v22 == 528 || v12 >= 0xD) {
    goto LABEL_2;
  }
  if (v19 < 9) {
    goto LABEL_106;
  }
  if (v19 == 9)
  {
LABEL_107:
    __break(1u);
LABEL_108:
    uint64_t v57 = 0;
    int v58 = 0;
    uint64_t v59 = 100000000;
    while (1)
    {
      uint64_t v60 = v59 * (v18 - 48);
      if (v60 < (uint64_t)0xFFFFFFFF80000000) {
        goto LABEL_130;
      }
      if (v60 > 0x7FFFFFFF) {
        goto LABEL_131;
      }
      BOOL v32 = __OFADD__(v58, v60);
      v58 += v60;
      if (v32) {
        goto LABEL_132;
      }
      if (v12 == v57) {
        goto LABEL_117;
      }
      if (v21 == v57) {
        goto LABEL_133;
      }
      v59 /= 10;
      uint64_t v18 = *(void *)&v7[8 * v57++ + 200];
      if ((unint64_t)(v18 - 58) <= 0xFFFFFFFFFFFFFFF5)
      {
        unint64_t v44 = v57 + 20;
        goto LABEL_77;
      }
    }
  }
  uint64_t v23 = *((void *)v7 + 12);
  if ((unint64_t)(v23 - 58) < 0xFFFFFFFFFFFFFFF6) {
    goto LABEL_100;
  }
  uint64_t v24 = *((void *)v7 + 13);
  if (v24 < 48 || v24 >= 58) {
    goto LABEL_100;
  }
  if (v19 < 0xB)
  {
    __break(1u);
LABEL_117:
    unint64_t v44 = v8;
    goto LABEL_77;
  }
  if (*((void *)v7 + 14) != 84) {
    goto LABEL_2;
  }
  uint64_t v14 = v24 + 10 * v23;
  if (v14 == 528 || (unint64_t)(v14 - 528) >= 0x20) {
    goto LABEL_2;
  }
  if (v19 < 0xC)
  {
    __break(1u);
    goto LABEL_119;
  }
  if (v19 == 12)
  {
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
    goto LABEL_121;
  }
  uint64_t v25 = *((void *)v7 + 15);
  if ((unint64_t)(v25 - 58) < 0xFFFFFFFFFFFFFFF6) {
    goto LABEL_100;
  }
  uint64_t v26 = *((void *)v7 + 16);
  if (v26 < 48 || v26 >= 58) {
    goto LABEL_100;
  }
  if (v19 < 0xE) {
    goto LABEL_120;
  }
  if (*((void *)v7 + 17) != 58) {
    goto LABEL_2;
  }
  unint64_t v13 = v26 + 10 * v25 - 528;
  if (v13 >= 0x18) {
    goto LABEL_2;
  }
  if (v19 < 0xF)
  {
    __break(1u);
    goto LABEL_126;
  }
  if (v19 == 15)
  {
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
    goto LABEL_129;
  }
  uint64_t v27 = *((void *)v7 + 18);
  if ((unint64_t)(v27 - 58) < 0xFFFFFFFFFFFFFFF6) {
    goto LABEL_100;
  }
  uint64_t v28 = *((void *)v7 + 19);
  if (v28 < 48 || v28 >= 58) {
    goto LABEL_100;
  }
  if (v19 < 0x11) {
    goto LABEL_127;
  }
  if (*((void *)v7 + 20) != 58) {
    goto LABEL_2;
  }
  unint64_t v16 = v28 + 10 * v27 - 528;
  if (v16 >= 0x3C) {
    goto LABEL_2;
  }
  if (v19 < 0x12) {
    goto LABEL_128;
  }
  if (v19 == 18)
  {
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
    goto LABEL_134;
  }
  uint64_t v29 = *((void *)v7 + 21);
  if ((unint64_t)(v29 - 58) < 0xFFFFFFFFFFFFFFF6) {
    goto LABEL_100;
  }
  uint64_t v30 = *((void *)v7 + 22);
  if (v30 < 48 || v30 >= 58) {
    goto LABEL_100;
  }
  unint64_t v17 = v30 + 10 * v29 - 528;
  if (v17 >= 0x3E) {
    goto LABEL_2;
  }
  uint64_t v15 = qword_1F234F630[v22 - 525];
  HIDWORD(v31) = -1030792151 * (unsigned __int16)result;
  LODWORD(v31) = HIDWORD(v31);
  if ((v31 >> 4) >= 0xA3D70B)
  {
    if ((result & 3) != 0 || !((unsigned __int16)result % 0x64u) || v12 <= 2) {
      goto LABEL_63;
    }
LABEL_62:
    BOOL v32 = __OFADD__(v15++, 1);
    if (v32)
    {
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
      goto LABEL_146;
    }
    goto LABEL_63;
  }
LABEL_61:
  if (v12 >= 3) {
    goto LABEL_62;
  }
LABEL_63:
  uint64_t v33 = v15 + v14 - 529;
  if (__OFADD__(v15, v14 - 529))
  {
LABEL_134:
    __break(1u);
    goto LABEL_135;
  }
  uint64_t v34 = 365 * result - 719527;
  BOOL v32 = __OFADD__(v33, v34);
  uint64_t v35 = v33 + v34;
  if (v32)
  {
LABEL_135:
    __break(1u);
    goto LABEL_136;
  }
  unsigned __int16 v36 = result - 1;
  BOOL v32 = __OFADD__(v35, (result - 1) >> 2);
  uint64_t v37 = v35 + ((result - 1) >> 2);
  if (v32)
  {
LABEL_136:
    __break(1u);
    goto LABEL_137;
  }
  uint64_t v38 = v36 / 0x64u;
  BOOL v32 = __OFSUB__(v37, v38);
  uint64_t v39 = v37 - v38;
  if (v32)
  {
LABEL_137:
    __break(1u);
    goto LABEL_138;
  }
  uint64_t v40 = v36 / 0x190u;
  BOOL v32 = __OFADD__(v39, v40);
  uint64_t v41 = v39 + v40;
  if (v32)
  {
LABEL_138:
    __break(1u);
    goto LABEL_139;
  }
  uint64_t v42 = 86400 * v41;
  if ((unsigned __int128)(v41 * (__int128)86400) >> 64 != (86400 * v41) >> 63)
  {
LABEL_139:
    __break(1u);
    goto LABEL_140;
  }
  unint64_t v43 = v17 + 60 * (v16 + 60 * v13);
  a2 = v42 + v43;
  if (__OFADD__(v42, v43))
  {
LABEL_140:
    __break(1u);
    goto LABEL_141;
  }
  if (v19 < 0x14)
  {
LABEL_141:
    __break(1u);
    goto LABEL_142;
  }
  if (*((void *)v7 + 23) == 46)
  {
    unint64_t v12 = v8 - 21;
    if (v8 < 0x15) {
      goto LABEL_75;
    }
    uint64_t v21 = v19 - 21;
    if (v19 < 0x15)
    {
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
      goto LABEL_149;
    }
    uint64_t v18 = *((void *)v7 + 24);
    if ((unint64_t)(v18 - 58) < 0xFFFFFFFFFFFFFFF6)
    {
LABEL_75:
      unint64_t v44 = 20;
      goto LABEL_77;
    }
    goto LABEL_108;
  }
  unint64_t v44 = 19;
LABEL_77:
  if (v44 >= v19)
  {
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
    goto LABEL_144;
  }
  uint64_t v45 = *(void *)&v10[8 * v44];
  if (v45 != 45 && v45 != 43)
  {
    unint64_t v56 = v44;
    swift_bridgeObjectRelease();
    if (v45 != 90) {
      goto LABEL_3;
    }
    int64_t v3 = v56 + 1;
LABEL_103:
    if (v3 == v8) {
      return a2;
    }
    goto LABEL_3;
  }
  uint64_t v62 = *(void *)&v10[8 * v44];
  int64_t v3 = v44 + 6;
  if (__OFADD__(v44, 6)) {
    goto LABEL_143;
  }
  if ((uint64_t)v8 < v3) {
    goto LABEL_2;
  }
  unint64_t v46 = v44;
  unint64_t v47 = v44 + 1;
  if (v47 >= v19) {
    goto LABEL_145;
  }
  if (v46 + 2 >= v19)
  {
LABEL_146:
    __break(1u);
    goto LABEL_147;
  }
  uint64_t v48 = *(void *)&v10[8 * v47];
  if ((unint64_t)(v48 - 58) < 0xFFFFFFFFFFFFFFF6) {
    goto LABEL_100;
  }
  uint64_t v49 = *(void *)&v10[8 * v46 + 16];
  if (v49 < 48 || v49 >= 58) {
    goto LABEL_100;
  }
  if (v46 + 4 >= v19) {
    goto LABEL_148;
  }
  if (v46 + 5 >= v19)
  {
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
    goto LABEL_151;
  }
  uint64_t v50 = *(void *)&v10[8 * v46 + 32];
  if ((unint64_t)(v50 - 58) < 0xFFFFFFFFFFFFFFF6) {
    goto LABEL_100;
  }
  uint64_t v51 = *(void *)&v10[8 * v46 + 40];
  if (v51 < 48 || v51 >= 58) {
    goto LABEL_100;
  }
  unint64_t v52 = v49 + 10 * v48 - 528;
  if (v52 > 0xD || (unint64_t v4 = v51 + 10 * v50 - 528, v4 > 0x3B))
  {
LABEL_2:
    swift_bridgeObjectRelease();
LABEL_3:
    sub_1C8CAC5B0();
    swift_allocError();
    *uint64_t v9 = xmmword_1C8D8F9B0;
    swift_willThrow();
    return a2;
  }
  uint64_t v53 = *(void *)&v10[8 * v46 + 24];
  unint64_t result = swift_bridgeObjectRelease();
  if (v53 != 58) {
    goto LABEL_3;
  }
  unint64_t v19 = 3600 * v52;
  if (v62 == 43)
  {
    BOOL v32 = __OFSUB__(a2, v19);
    unint64_t v54 = a2 - v19;
    if (!v32)
    {
      a2 = v54 - 60 * v4;
      if (!__OFSUB__(v54, 60 * v4))
      {
LABEL_123:
        if (a2 - 0x3AFFF44180 <= 0xFFFFFFB68879C77FLL) {
          goto LABEL_3;
        }
        goto LABEL_103;
      }
      __break(1u);
LABEL_100:
      sub_1C8CAC5B0();
      swift_allocError();
      *char v55 = xmmword_1C8D8F9B0;
      swift_willThrow();
      goto LABEL_5;
    }
    goto LABEL_150;
  }
LABEL_121:
  BOOL v32 = __OFADD__(a2, v19);
  unint64_t v61 = a2 + v19;
  if (v32)
  {
LABEL_151:
    __break(1u);
    goto LABEL_152;
  }
  a2 = v61 + 60 * v4;
  if (!__OFADD__(v61, 60 * v4)) {
    goto LABEL_123;
  }
LABEL_152:
  __break(1u);
  return result;
}

uint64_t sub_1C8D43B48(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (result < a5 || a6 < result || a2 < a5 || a6 < a2 || a3 < a5 || a6 < a3 || a4 < a5 || a6 < a4)
  {
    sub_1C8CAC5B0();
    swift_allocError();
    *unint64_t v13 = xmmword_1C8D8F9B0;
    return swift_willThrow();
  }
  uint64_t v6 = 1000 * result;
  if ((unsigned __int128)(result * (__int128)1000) >> 64 != (1000 * result) >> 63)
  {
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v7 = 100 * a2;
  if ((unsigned __int128)(a2 * (__int128)100) >> 64 != (100 * a2) >> 63)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  BOOL v8 = __OFADD__(v6, v7);
  uint64_t v9 = v6 + v7;
  if (v8)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v10 = 10 * a3;
  if ((unsigned __int128)(a3 * (__int128)10) >> 64 != (10 * a3) >> 63)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  BOOL v8 = __OFADD__(v9, v10);
  uint64_t v11 = v9 + v10;
  if (v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  BOOL v8 = __OFADD__(v11, a4);
  uint64_t v12 = v11 + a4;
  if (v8)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  unint64_t result = v12 - 53328;
  if (__OFADD__(v12, -53328)) {
LABEL_24:
  }
    __break(1u);
  return result;
}

uint64_t sub_1C8D43C64(uint64_t result, int a2)
{
  signed int v2 = a2 / 0x3B9ACA00u;
  if (a2 < 0) {
    signed int v2 = ~(~a2 / 0x3B9ACA00u);
  }
  uint64_t v3 = result + v2;
  if (__OFADD__(result, v2))
  {
    __break(1u);
  }
  else
  {
    if (a2 % 1000000000 >= 0) {
      int v4 = a2 % 1000000000;
    }
    else {
      int v4 = a2 % 1000000000 + 1000000000;
    }
    if ((unint64_t)(v3 - 0x3AFFF44180) >= 0xFFFFFFB68879C780)
    {
      unint64_t v5 = sub_1C8D2D1F0(v3);
      int v6 = v5;
      int v8 = v7;
      unint64_t v9 = HIDWORD(v5);
      unint64_t v10 = sub_1C8D2D2AC(v3);
      int v11 = v10;
      int v13 = v12;
      unint64_t v14 = HIDWORD(v10);
      if (v4)
      {
        if (v4 % 1000000)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EA566BD8);
          uint64_t v15 = swift_allocObject();
          *(_OWORD *)(v15 + 16) = xmmword_1C8D8F9C0;
          uint64_t v16 = MEMORY[0x1E4FBC150];
          uint64_t v17 = MEMORY[0x1E4FBC1C0];
          *(void *)(v15 + 56) = MEMORY[0x1E4FBC150];
          *(void *)(v15 + 64) = v17;
          *(_DWORD *)(v15 + 32) = v11;
          *(void *)(v15 + 96) = v16;
          *(void *)(v15 + 104) = v17;
          *(_DWORD *)(v15 + 72) = v14;
          *(void *)(v15 + 136) = v16;
          *(void *)(v15 + 144) = v17;
          *(_DWORD *)(v15 + 112) = v13;
          *(void *)(v15 + 176) = v16;
          *(void *)(v15 + 184) = v17;
          *(_DWORD *)(v15 + 152) = v6;
          *(void *)(v15 + 216) = v16;
          *(void *)(v15 + 224) = v17;
          *(_DWORD *)(v15 + 192) = v9;
          *(void *)(v15 + 256) = v16;
          *(void *)(v15 + 264) = v17;
          *(_DWORD *)(v15 + 232) = v8;
          *(void *)(v15 + 296) = v16;
          *(void *)(v15 + 304) = v17;
          if (v4 % 1000) {
            *(_DWORD *)(v15 + 272) = v4;
          }
          else {
            *(_DWORD *)(v15 + 272) = v4 / 1000;
          }
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EA566BD8);
          uint64_t v21 = swift_allocObject();
          uint64_t v22 = MEMORY[0x1E4FBC150];
          *(_OWORD *)(v21 + 16) = xmmword_1C8D8F9C0;
          uint64_t v23 = MEMORY[0x1E4FBC1C0];
          *(void *)(v21 + 56) = v22;
          *(void *)(v21 + 64) = v23;
          *(_DWORD *)(v21 + 32) = v11;
          *(void *)(v21 + 96) = v22;
          *(void *)(v21 + 104) = v23;
          *(_DWORD *)(v21 + 72) = v14;
          *(void *)(v21 + 136) = v22;
          *(void *)(v21 + 144) = v23;
          *(_DWORD *)(v21 + 112) = v13;
          *(void *)(v21 + 176) = v22;
          *(void *)(v21 + 184) = v23;
          *(_DWORD *)(v21 + 152) = v6;
          *(void *)(v21 + 216) = v22;
          *(void *)(v21 + 224) = v23;
          *(_DWORD *)(v21 + 192) = v9;
          *(void *)(v21 + 256) = v22;
          *(void *)(v21 + 264) = v23;
          *(_DWORD *)(v21 + 232) = v8;
          *(void *)(v21 + 296) = v22;
          *(void *)(v21 + 304) = v23;
          *(_DWORD *)(v21 + 272) = v4 / 1000000;
        }
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA566BD8);
        uint64_t v18 = swift_allocObject();
        *(_OWORD *)(v18 + 16) = xmmword_1C8D8F9D0;
        uint64_t v19 = MEMORY[0x1E4FBC150];
        uint64_t v20 = MEMORY[0x1E4FBC1C0];
        *(void *)(v18 + 56) = MEMORY[0x1E4FBC150];
        *(void *)(v18 + 64) = v20;
        *(_DWORD *)(v18 + 32) = v11;
        *(void *)(v18 + 96) = v19;
        *(void *)(v18 + 104) = v20;
        *(_DWORD *)(v18 + 72) = v14;
        *(void *)(v18 + 136) = v19;
        *(void *)(v18 + 144) = v20;
        *(_DWORD *)(v18 + 112) = v13;
        *(void *)(v18 + 176) = v19;
        *(void *)(v18 + 184) = v20;
        *(_DWORD *)(v18 + 152) = v6;
        *(void *)(v18 + 216) = v19;
        *(void *)(v18 + 224) = v20;
        *(_DWORD *)(v18 + 192) = v9;
        *(void *)(v18 + 256) = v19;
        *(void *)(v18 + 264) = v20;
        *(_DWORD *)(v18 + 232) = v8;
      }
      return sub_1C8D88320();
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C8D43F24(uint64_t a1, int a2)
{
  signed int v2 = a2 / 0x3B9ACA00u;
  if (a2 < 0) {
    signed int v2 = ~(~a2 / 0x3B9ACA00u);
  }
  BOOL v3 = __OFADD__(a1, v2);
  uint64_t result = a1 + v2;
  if (v3) {
    __break(1u);
  }
  return result;
}

double Google_Protobuf_Timestamp.init(seconds:nanos:)@<D0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  *(void *)a3 = a1;
  *(_DWORD *)(a3 + 8) = a2;
  double result = 0.0;
  *(_OWORD *)(a3 + 16) = xmmword_1C8D8AD80;
  return result;
}

uint64_t sub_1C8D43F7C()
{
  sub_1C8D43C64(*(void *)v0, *(_DWORD *)(v0 + 8));
  if (v1)
  {
    sub_1C8D88400();
    swift_bridgeObjectRelease();
    sub_1C8D88400();
    return 34;
  }
  else
  {
    sub_1C8CC552C();
    swift_allocError();
    *BOOL v3 = 1;
    return swift_willThrow();
  }
}

uint64_t sub_1C8D44028()
{
  return sub_1C8D43F7C();
}

unint64_t sub_1C8D44040()
{
  unint64_t result = (unint64_t)sub_1C8CADB68();
  if (!v1)
  {
    unint64_t v4 = sub_1C8D4345C(result, v3);
    int v6 = v5;
    unint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v0 = v4;
    *(_DWORD *)(v0 + 8) = v6;
  }
  return result;
}

void Google_Protobuf_Timestamp.init(timeIntervalSince1970:)(uint64_t a1@<X8>, double a2@<D0>)
{
  double v3 = floor(a2);
  if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v3 >= 9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  double v4 = round((a2 - v3) * 1000000000.0);
  if ((~*(void *)&v4 & 0x7FF0000000000000) == 0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v4 <= -2147483650.0)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v4 < 2147483650.0)
  {
    *(void *)a1 = sub_1C8D43F24((uint64_t)v3, (int)v4);
    *(_DWORD *)(a1 + 8) = v5;
    *(_OWORD *)(a1 + 16) = xmmword_1C8D8AD80;
    return;
  }
LABEL_13:
  __break(1u);
}

void Google_Protobuf_Timestamp.init(timeIntervalSinceReferenceDate:)(uint64_t a1@<X8>, double a2@<D0>)
{
  double v3 = floor(a2);
  if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v3 >= 9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1C8D88230();
  if ((~*(void *)&v5 & 0x7FF0000000000000) == 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v5 <= -9.22337204e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v5 >= 9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v6 = (uint64_t)v3 + (uint64_t)v5;
  if (__OFADD__((uint64_t)v3, (uint64_t)v5))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  double v7 = round((a2 - v3) * 1000000000.0);
  if ((~*(void *)&v7 & 0x7FF0000000000000) == 0)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v7 <= -2147483650.0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v7 < 2147483650.0)
  {
    *(void *)a1 = sub_1C8D43F24(v6, (int)v7);
    *(_DWORD *)(a1 + 8) = v8;
    *(_OWORD *)(a1 + 16) = xmmword_1C8D8AD80;
    return;
  }
LABEL_21:
  __break(1u);
}

__n128 Google_Protobuf_Timestamp.init(date:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  sub_1C8D88220();
  Google_Protobuf_Timestamp.init(timeIntervalSinceReferenceDate:)((uint64_t)&v8, v4);
  uint64_t v5 = sub_1C8D88240();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  unsigned __int32 v6 = v9;
  __n128 result = v10;
  a2->n128_u64[0] = v8;
  a2->n128_u32[2] = v6;
  a2[1] = result;
  return result;
}

double Google_Protobuf_Timestamp.timeIntervalSince1970.getter()
{
  return (double)*(int *)(v0 + 8) / 1000000000.0 + (double)*(uint64_t *)v0;
}

uint64_t Google_Protobuf_Timestamp.timeIntervalSinceReferenceDate.getter()
{
  uint64_t v1 = *v0;
  uint64_t result = sub_1C8D88230();
  if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v3 >= 9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (__OFSUB__(v1, (uint64_t)v3)) {
LABEL_9:
  }
    __break(1u);
  return result;
}

uint64_t Google_Protobuf_Timestamp.date.getter()
{
  uint64_t v1 = *v0;
  int v2 = *((_DWORD *)v0 + 2);
  uint64_t v3 = sub_1C8D88230();
  if ((~v4.n128_u64[0] & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4.n128_f64[0] <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v4.n128_f64[0] >= 9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (__OFSUB__(v1, (uint64_t)v4.n128_f64[0]))
  {
LABEL_11:
    __break(1u);
    return MEMORY[0x1F40E4ED0](v3, v4);
  }
  v4.n128_f64[0] = (double)v2 / 1000000000.0 + (double)(v1 - (uint64_t)v4.n128_f64[0]);
  return MEMORY[0x1F40E4ED0](v3, v4);
}

uint64_t _s20SiriOntologyProtobuf1poiyAA07Google_C10_TimestampVAD_AA0d1_C9_DurationVtF_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  BOOL v5 = __OFADD__(*(void *)a1, *(void *)a2);
  uint64_t result = *(void *)a1 + *(void *)a2;
  if (v5)
  {
    __break(1u);
  }
  else
  {
    int v7 = *(_DWORD *)(a2 + 8);
    int v8 = *(_DWORD *)(a1 + 8);
    if (!__OFADD__(v8, v7))
    {
      uint64_t result = sub_1C8D43F24(result, v8 + v7);
      *(void *)a3 = result;
      *(_DWORD *)(a3 + 8) = v9;
      *(_OWORD *)(a3 + 16) = xmmword_1C8D8AD80;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t - infix(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  BOOL v5 = __OFSUB__(*(void *)a1, *(void *)a2);
  uint64_t result = *(void *)a1 - *(void *)a2;
  if (v5)
  {
    __break(1u);
  }
  else
  {
    int v7 = *(_DWORD *)(a2 + 8);
    int v8 = *(_DWORD *)(a1 + 8);
    if (!__OFSUB__(v8, v7))
    {
      uint64_t result = sub_1C8D43F24(result, v8 - v7);
      *(void *)a3 = result;
      *(_DWORD *)(a3 + 8) = v9;
      *(_OWORD *)(a3 + 16) = xmmword_1C8D8AD80;
      return result;
    }
  }
  __break(1u);
  return result;
}

double static ProtobufFloat.proto3DefaultValue.getter()
{
  return 0.0;
}

uint64_t static ProtobufFloat.decodeSingular<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 32))(a1, a3, a4);
}

uint64_t static ProtobufFloat.decodeRepeated<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 40))(a1, a3, a4);
}

uint64_t static ProtobufFloat.visitSingular<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 8))(a1, a3, a4);
}

uint64_t static ProtobufFloat.visitRepeated<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 152))(a1, a2, a4, a5);
}

uint64_t static ProtobufFloat.visitPacked<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 296))(a1, a2, a4, a5);
}

void sub_1C8D446D8(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1C8D446E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufFloat.decodeSingular<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C8D446F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufFloat.decodeRepeated<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C8D44710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufFloat.visitSingular<A>(value:fieldNumber:with:)(a2, a3, a4, a5);
}

uint64_t sub_1C8D4473C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufFloat.visitRepeated<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1C8D44754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufFloat.visitPacked<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

double static ProtobufDouble.proto3DefaultValue.getter()
{
  return 0.0;
}

uint64_t static ProtobufDouble.decodeSingular<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 56))(a1, a3, a4);
}

uint64_t static ProtobufDouble.decodeRepeated<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 64))(a1, a3, a4);
}

uint64_t static ProtobufDouble.visitSingular<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 16))(a1, a3, a4);
}

uint64_t static ProtobufDouble.visitRepeated<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 160))(a1, a2, a4, a5);
}

uint64_t static ProtobufDouble.visitPacked<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 304))(a1, a2, a4, a5);
}

void sub_1C8D448A0(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1C8D448A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufDouble.decodeSingular<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C8D448C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufDouble.decodeRepeated<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C8D448D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufDouble.visitSingular<A>(value:fieldNumber:with:)(a2, a3, a4, a5);
}

uint64_t sub_1C8D44904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufDouble.visitRepeated<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1C8D4491C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufDouble.visitPacked<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t static ProtobufInt32.proto3DefaultValue.getter()
{
  return 0;
}

uint64_t static ProtobufInt32.decodeSingular<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 80))(a1, a3, a4);
}

uint64_t static ProtobufInt32.decodeRepeated<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 88))(a1, a3, a4);
}

uint64_t static ProtobufInt32.visitSingular<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 24))(a1, a2, a4, a5);
}

uint64_t static ProtobufInt32.visitRepeated<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 168))(a1, a2, a4, a5);
}

uint64_t static ProtobufInt32.visitPacked<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 312))(a1, a2, a4, a5);
}

uint64_t sub_1C8D44A68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufInt32.decodeSingular<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C8D44A80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufInt32.decodeRepeated<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C8D44A98(unsigned int *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufInt32.visitSingular<A>(value:fieldNumber:with:)(*a1, a2, a3, a4, a5);
}

uint64_t sub_1C8D44AB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufInt32.visitRepeated<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1C8D44ACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufInt32.visitPacked<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t static ProtobufInt64.proto3DefaultValue.getter()
{
  return 0;
}

uint64_t static ProtobufInt64.decodeSingular<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 104))(a1, a3, a4);
}

uint64_t static ProtobufInt64.decodeRepeated<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 112))(a1, a3, a4);
}

uint64_t static ProtobufInt64.visitSingular<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 32))(a1, a2, a4, a5);
}

uint64_t static ProtobufInt64.visitRepeated<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 176))(a1, a2, a4, a5);
}

uint64_t static ProtobufInt64.visitPacked<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 320))(a1, a2, a4, a5);
}

uint64_t sub_1C8D44C18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufInt64.decodeSingular<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C8D44C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufInt64.decodeRepeated<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C8D44C48(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufInt64.visitSingular<A>(value:fieldNumber:with:)(*a1, a2, a3, a4, a5);
}

uint64_t sub_1C8D44C64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufInt64.visitRepeated<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1C8D44C7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufInt64.visitPacked<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t static ProtobufUInt32.proto3DefaultValue.getter()
{
  return 0;
}

uint64_t static ProtobufUInt32.decodeSingular<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 128))(a1, a3, a4);
}

uint64_t static ProtobufUInt32.decodeRepeated<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 136))(a1, a3, a4);
}

uint64_t static ProtobufUInt32.visitSingular<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 40))(a1, a2, a4, a5);
}

uint64_t static ProtobufUInt32.visitRepeated<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 184))(a1, a2, a4, a5);
}

uint64_t static ProtobufUInt32.visitPacked<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 328))(a1, a2, a4, a5);
}

uint64_t sub_1C8D44DC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufUInt32.decodeSingular<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C8D44DE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufUInt32.decodeRepeated<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C8D44DF8(unsigned int *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufUInt32.visitSingular<A>(value:fieldNumber:with:)(*a1, a2, a3, a4, a5);
}

uint64_t sub_1C8D44E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufUInt32.visitRepeated<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1C8D44E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufUInt32.visitPacked<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t static ProtobufUInt64.proto3DefaultValue.getter()
{
  return 0;
}

uint64_t static ProtobufUInt64.decodeSingular<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 152))(a1, a3, a4);
}

uint64_t static ProtobufUInt64.decodeRepeated<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 160))(a1, a3, a4);
}

uint64_t static ProtobufUInt64.visitSingular<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 48))(a1, a2, a4, a5);
}

uint64_t static ProtobufUInt64.visitRepeated<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 192))(a1, a2, a4, a5);
}

uint64_t static ProtobufUInt64.visitPacked<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 336))(a1, a2, a4, a5);
}

uint64_t sub_1C8D44F78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufUInt64.decodeSingular<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C8D44F90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufUInt64.decodeRepeated<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C8D44FA8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufUInt64.visitSingular<A>(value:fieldNumber:with:)(*a1, a2, a3, a4, a5);
}

uint64_t sub_1C8D44FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufUInt64.visitRepeated<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1C8D44FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufUInt64.visitPacked<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t static ProtobufSInt32.proto3DefaultValue.getter()
{
  return 0;
}

uint64_t static ProtobufSInt32.decodeSingular<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 176))(a1, a3, a4);
}

uint64_t static ProtobufSInt32.decodeRepeated<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 184))(a1, a3, a4);
}

uint64_t static ProtobufSInt32.visitSingular<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 56))(a1, a2, a4, a5);
}

uint64_t static ProtobufSInt32.visitRepeated<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 200))(a1, a2, a4, a5);
}

uint64_t static ProtobufSInt32.visitPacked<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 344))(a1, a2, a4, a5);
}

uint64_t sub_1C8D45128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufSInt32.decodeSingular<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C8D45140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufSInt32.decodeRepeated<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C8D45158(unsigned int *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufSInt32.visitSingular<A>(value:fieldNumber:with:)(*a1, a2, a3, a4, a5);
}

uint64_t sub_1C8D45174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufSInt32.visitRepeated<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1C8D4518C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufSInt32.visitPacked<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t static ProtobufSInt64.proto3DefaultValue.getter()
{
  return 0;
}

uint64_t static ProtobufSInt64.decodeSingular<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 200))(a1, a3, a4);
}

uint64_t static ProtobufSInt64.decodeRepeated<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 208))(a1, a3, a4);
}

uint64_t static ProtobufSInt64.visitSingular<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 64))(a1, a2, a4, a5);
}

uint64_t static ProtobufSInt64.visitRepeated<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 208))(a1, a2, a4, a5);
}

uint64_t static ProtobufSInt64.visitPacked<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 352))(a1, a2, a4, a5);
}

uint64_t sub_1C8D452D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufSInt64.decodeSingular<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C8D452F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufSInt64.decodeRepeated<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C8D45308(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufSInt64.visitSingular<A>(value:fieldNumber:with:)(*a1, a2, a3, a4, a5);
}

uint64_t sub_1C8D45324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufSInt64.visitRepeated<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1C8D4533C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufSInt64.visitPacked<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t static ProtobufFixed32.proto3DefaultValue.getter()
{
  return 0;
}

uint64_t static ProtobufFixed32.decodeSingular<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 224))(a1, a3, a4);
}

uint64_t static ProtobufFixed32.decodeRepeated<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 232))(a1, a3, a4);
}

uint64_t static ProtobufFixed32.visitSingular<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 72))(a1, a2, a4, a5);
}

uint64_t static ProtobufFixed32.visitRepeated<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 216))(a1, a2, a4, a5);
}

uint64_t static ProtobufFixed32.visitPacked<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 360))(a1, a2, a4, a5);
}

uint64_t sub_1C8D45488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufFixed32.decodeSingular<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C8D454A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufFixed32.decodeRepeated<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C8D454B8(unsigned int *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufFixed32.visitSingular<A>(value:fieldNumber:with:)(*a1, a2, a3, a4, a5);
}

uint64_t sub_1C8D454D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufFixed32.visitRepeated<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1C8D454EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufFixed32.visitPacked<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t static ProtobufFixed64.proto3DefaultValue.getter()
{
  return 0;
}

uint64_t static ProtobufFixed64.decodeSingular<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 248))(a1, a3, a4);
}

uint64_t static ProtobufFixed64.decodeRepeated<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 256))(a1, a3, a4);
}

uint64_t static ProtobufFixed64.visitSingular<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 80))(a1, a2, a4, a5);
}

uint64_t static ProtobufFixed64.visitRepeated<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 224))(a1, a2, a4, a5);
}

uint64_t static ProtobufFixed64.visitPacked<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 368))(a1, a2, a4, a5);
}

uint64_t sub_1C8D45638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufFixed64.decodeSingular<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C8D45650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufFixed64.decodeRepeated<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C8D45668(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufFixed64.visitSingular<A>(value:fieldNumber:with:)(*a1, a2, a3, a4, a5);
}

uint64_t sub_1C8D45684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufFixed64.visitRepeated<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1C8D4569C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufFixed64.visitPacked<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t static ProtobufSFixed32.proto3DefaultValue.getter()
{
  return 0;
}

uint64_t static ProtobufSFixed32.decodeSingular<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 272))(a1, a3, a4);
}

uint64_t static ProtobufSFixed32.decodeRepeated<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 280))(a1, a3, a4);
}

uint64_t static ProtobufSFixed32.visitSingular<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 88))(a1, a2, a4, a5);
}

uint64_t static ProtobufSFixed32.visitRepeated<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 232))(a1, a2, a4, a5);
}

uint64_t static ProtobufSFixed32.visitPacked<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 376))(a1, a2, a4, a5);
}

uint64_t sub_1C8D457E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufSFixed32.decodeSingular<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C8D45800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufSFixed32.decodeRepeated<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C8D45818(unsigned int *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufSFixed32.visitSingular<A>(value:fieldNumber:with:)(*a1, a2, a3, a4, a5);
}

uint64_t sub_1C8D45834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufSFixed32.visitRepeated<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1C8D4584C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufSFixed32.visitPacked<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t static ProtobufSFixed64.proto3DefaultValue.getter()
{
  return 0;
}

uint64_t static ProtobufSFixed64.decodeSingular<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 296))(a1, a3, a4);
}

uint64_t static ProtobufSFixed64.decodeRepeated<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 304))(a1, a3, a4);
}

uint64_t static ProtobufSFixed64.visitSingular<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 96))(a1, a2, a4, a5);
}

uint64_t static ProtobufSFixed64.visitRepeated<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 240))(a1, a2, a4, a5);
}

uint64_t static ProtobufSFixed64.visitPacked<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 384))(a1, a2, a4, a5);
}

uint64_t sub_1C8D45998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufSFixed64.decodeSingular<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C8D459B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufSFixed64.decodeRepeated<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C8D459C8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufSFixed64.visitSingular<A>(value:fieldNumber:with:)(*a1, a2, a3, a4, a5);
}

uint64_t sub_1C8D459E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufSFixed64.visitRepeated<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1C8D459FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufSFixed64.visitPacked<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t static ProtobufBool.proto3DefaultValue.getter()
{
  return 0;
}

uint64_t static ProtobufBool.decodeSingular<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 320))(a1, a3, a4);
}

uint64_t static ProtobufBool.decodeRepeated<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 328))(a1, a3, a4);
}

uint64_t static ProtobufBool.visitSingular<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 104))(a1, a2, a4, a5);
}

uint64_t static ProtobufBool.visitRepeated<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 248))(a1, a2, a4, a5);
}

uint64_t static ProtobufBool.visitPacked<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 392))(a1, a2, a4, a5);
}

uint64_t sub_1C8D45B48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufBool.decodeSingular<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C8D45B60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufBool.decodeRepeated<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C8D45B78(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufBool.visitSingular<A>(value:fieldNumber:with:)(*a1, a2, a3, a4, a5);
}

uint64_t sub_1C8D45B94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufBool.visitRepeated<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1C8D45BAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufBool.visitPacked<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t static ProtobufString.proto3DefaultValue.getter()
{
  return 0;
}

uint64_t static ProtobufString.decodeRepeated<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 352))(a1, a3, a4);
}

uint64_t static ProtobufString.visitSingular<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 112))(a1, a2, a3, a5, a6);
}

uint64_t static ProtobufString.visitRepeated<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 256))(a1, a2, a4, a5);
}

void sub_1C8D45C84(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
}

uint64_t sub_1C8D45C90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufString.decodeRepeated<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C8D45CA8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufString.visitSingular<A>(value:fieldNumber:with:)(*a1, a1[1], a2, a3, a4, a5);
}

uint64_t sub_1C8D45CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufString.visitRepeated<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1C8D45CF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return nullsub_1(a3, a4, a5);
}

uint64_t static ProtobufBytes.proto3DefaultValue.getter()
{
  return 0;
}

uint64_t static ProtobufBytes.decodeSingular<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 368))(a1, a3, a4);
}

uint64_t static ProtobufBytes.decodeRepeated<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 376))(a1, a3, a4);
}

uint64_t static ProtobufBytes.visitSingular<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 120))(a1, a2, a3, a5, a6);
}

uint64_t static ProtobufBytes.visitRepeated<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 264))(a1, a2, a4, a5);
}

uint64_t static ProtobufBytes.visitPacked<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return nullsub_1(a3, a4, a5);
}

uint64_t sub_1C8D45E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufBytes.decodeSingular<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C8D45E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ProtobufBytes.decodeRepeated<A>(value:from:)(a1, a2, a3, a4);
}

uint64_t sub_1C8D45E64(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufBytes.visitSingular<A>(value:fieldNumber:with:)(*a1, a1[1], a2, a3, a4, a5);
}

uint64_t sub_1C8D45E94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufBytes.visitRepeated<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1C8D45EAC()
{
  return MEMORY[0x1E4FBB490];
}

uint64_t sub_1C8D45EB8()
{
  return MEMORY[0x1E4FBB3F0];
}

uint64_t sub_1C8D45EC4()
{
  return MEMORY[0x1E4FBC160];
}

uint64_t sub_1C8D45ED0()
{
  return MEMORY[0x1E4FBC1D8];
}

uint64_t sub_1C8D45EDC()
{
  return MEMORY[0x1E4FBC4D0];
}

uint64_t sub_1C8D45EE8()
{
  return MEMORY[0x1E4FBC548];
}

uint64_t sub_1C8D45EF4()
{
  return MEMORY[0x1E4FBB3A0];
}

uint64_t sub_1C8D45F00()
{
  return MEMORY[0x1E4FBB1B0];
}

unint64_t sub_1C8D45F10()
{
  unint64_t result = qword_1EA567430;
  if (!qword_1EA567430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567430);
  }
  return result;
}

unint64_t sub_1C8D45F64(uint64_t a1)
{
  unint64_t result = sub_1C8D45F8C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D45F8C()
{
  unint64_t result = qword_1EA567438;
  if (!qword_1EA567438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567438);
  }
  return result;
}

uint64_t dispatch thunk of static FieldType.proto3DefaultValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of static FieldType.decodeSingular<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 32))();
}

uint64_t dispatch thunk of static FieldType.decodeRepeated<A>(value:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 40))();
}

uint64_t dispatch thunk of static FieldType.visitSingular<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 48))();
}

uint64_t dispatch thunk of static FieldType.visitRepeated<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 56))();
}

uint64_t dispatch thunk of static FieldType.visitPacked<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 64))();
}

ValueMetadata *type metadata accessor for ProtobufFloat()
{
  return &type metadata for ProtobufFloat;
}

ValueMetadata *type metadata accessor for ProtobufDouble()
{
  return &type metadata for ProtobufDouble;
}

ValueMetadata *type metadata accessor for ProtobufInt32()
{
  return &type metadata for ProtobufInt32;
}

ValueMetadata *type metadata accessor for ProtobufInt64()
{
  return &type metadata for ProtobufInt64;
}

ValueMetadata *type metadata accessor for ProtobufUInt32()
{
  return &type metadata for ProtobufUInt32;
}

ValueMetadata *type metadata accessor for ProtobufUInt64()
{
  return &type metadata for ProtobufUInt64;
}

ValueMetadata *type metadata accessor for ProtobufSInt32()
{
  return &type metadata for ProtobufSInt32;
}

ValueMetadata *type metadata accessor for ProtobufSInt64()
{
  return &type metadata for ProtobufSInt64;
}

ValueMetadata *type metadata accessor for ProtobufFixed32()
{
  return &type metadata for ProtobufFixed32;
}

ValueMetadata *type metadata accessor for ProtobufFixed64()
{
  return &type metadata for ProtobufFixed64;
}

ValueMetadata *type metadata accessor for ProtobufSFixed32()
{
  return &type metadata for ProtobufSFixed32;
}

ValueMetadata *type metadata accessor for ProtobufSFixed64()
{
  return &type metadata for ProtobufSFixed64;
}

ValueMetadata *type metadata accessor for ProtobufBool()
{
  return &type metadata for ProtobufBool;
}

ValueMetadata *type metadata accessor for ProtobufBytes()
{
  return &type metadata for ProtobufBytes;
}

uint64_t static ProtobufString.visitPacked<A>(value:fieldNumber:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static ProtobufBytes.visitPacked<A>(value:fieldNumber:with:)(a1, a2, a3, a4, a5);
}

uint64_t Message.init(textFormatString:extensions:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v42 = a3;
  v43[2] = *MEMORY[0x1E4F143B8];
  uint64_t v11 = sub_1C8D88340();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11, v13);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(a5 + 16);
  uint64_t v39 = a6;
  uint64_t v40 = a4;
  uint64_t v17 = a4;
  uint64_t v18 = a5;
  v16(v17, a5);
  uint64_t v19 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v19 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v19)
  {
    swift_bridgeObjectRelease();
    uint64_t v26 = v42;
    return sub_1C8CA4F3C(v26);
  }
  uint64_t v20 = v42;
  sub_1C8D88330();
  uint64_t v21 = sub_1C8D882F0();
  unint64_t v23 = v22;
  swift_bridgeObjectRelease();
  uint64_t v24 = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  if (v23 >> 60 == 15)
  {
    uint64_t v26 = v20;
    return sub_1C8CA4F3C(v26);
  }
  MEMORY[0x1F4188790](v24, v25);
  uint64_t v28 = v40;
  *(&v38 - 4) = v40;
  *(&v38 - 3) = v18;
  uint64_t v29 = v18;
  uint64_t v30 = v39;
  *(&v38 - 2) = v20;
  *(&v38 - 1) = v30;
  switch(v23 >> 62)
  {
    case 1uLL:
      if (v21 >> 32 < (int)v21) {
        __break(1u);
      }
      swift_retain();
      uint64_t v32 = v41;
      sub_1C8D0DFE8((int)v21, v21 >> 32, sub_1C8D4686C);
      uint64_t v33 = v32;
      sub_1C8CAA9F0(v21, v23);
      break;
    case 2uLL:
      uint64_t v34 = *(void *)(v21 + 16);
      uint64_t v35 = *(void *)(v21 + 24);
      swift_retain();
      swift_retain();
      uint64_t v36 = v41;
      sub_1C8D0DFE8(v34, v35, sub_1C8D4686C);
      uint64_t v33 = v36;
      swift_release();
      swift_release();
      break;
    case 3uLL:
      memset(v43, 0, 14);
      unint64_t v31 = (char *)v43;
      goto LABEL_14;
    default:
      v43[0] = v21;
      LOWORD(v43[1]) = v23;
      BYTE2(v43[1]) = BYTE2(v23);
      BYTE3(v43[1]) = BYTE3(v23);
      BYTE4(v43[1]) = BYTE4(v23);
      BYTE5(v43[1]) = BYTE5(v23);
      unint64_t v31 = (char *)v43 + BYTE6(v23);
LABEL_14:
      uint64_t v37 = v41;
      sub_1C8D46588((uint64_t)v43, (uint64_t)v31, v20, v30, v28, v29);
      uint64_t v33 = v37;
      break;
  }
  sub_1C8CAA9F0(v21, v23);
  if (!v33) {
    return sub_1C8CA4F3C(v20);
  }
  sub_1C8CA4F3C(v20);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v30, v28);
}

uint64_t sub_1C8D46588(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (result)
  {
    uint64_t v7 = result;
    uint64_t v8 = a2 - result;
    if (a2 - result >= 1)
    {
      sub_1C8CA87D8(a3, (uint64_t)v32);
      uint64_t v38 = 0;
      __int16 v39 = 256;
      long long v40 = 0u;
      long long v41 = 0u;
      long long v42 = 0u;
      sub_1C8CA87D8((uint64_t)v32, (uint64_t)&v29);
      type metadata accessor for DoubleParser();
      memset(v33, 0, sizeof(v33));
      uint64_t v34 = 0;
      uint64_t v11 = swift_allocObject();
      uint64_t v12 = swift_slowAlloc();
      *(void *)(v11 + 16) = v12;
      *(void *)(v11 + 24) = v12 + 128;
      uint64_t v35 = (unsigned __int8 *)v7;
      uint64_t v36 = (unsigned __int8 *)(v7 + v8);
      uint64_t v37 = v11;
      sub_1C8D4688C((uint64_t)&v29, (uint64_t)v33);
      uint64_t v13 = v35;
      if (v35 != v36)
      {
        do
        {
          uint64_t v15 = *v13;
          if (v15 > 0x23) {
            break;
          }
          if (((1 << v15) & 0x100002600) != 0)
          {
            uint64_t v14 = v13 + 1;
            uint64_t v35 = v13 + 1;
          }
          else
          {
            if (v15 != 35) {
              break;
            }
            uint64_t v35 = v13 + 1;
            if (v13 + 1 == v36) {
              break;
            }
            int v16 = v13[1];
            uint64_t v14 = v13 + 2;
            uint64_t v35 = v13 + 2;
            if (v16 != 10 && v16 != 13)
            {
              if (v14 == v36) {
                break;
              }
              int v17 = v13[2];
              uint64_t v14 = v13 + 3;
              uint64_t v35 = v13 + 3;
              if (v17 != 10 && v17 != 13)
              {
                while (v14 != v36)
                {
                  int v19 = *v14++;
                  int v18 = v19;
                  uint64_t v35 = v14;
                  if (v19 == 10 || v18 == 13) {
                    goto LABEL_6;
                  }
                }
                break;
              }
            }
          }
LABEL_6:
          uint64_t v13 = v14;
        }
        while (v14 != v36);
      }
      sub_1C8CA4F3C((uint64_t)&v29);
      uint64_t v21 = swift_conformsToProtocol2();
      if (v21) {
        uint64_t v22 = v21;
      }
      else {
        uint64_t v22 = 0;
      }
      if (v21) {
        uint64_t v23 = a5;
      }
      else {
        uint64_t v23 = 0;
      }
      if (v23)
      {
        (*(void (**)(long long *__return_ptr))(v22 + 8))(&v29);
        sub_1C8CA4F3C((uint64_t)v32);
        long long v28 = v29;
        uint64_t v24 = v30;
        uint64_t v25 = v31;
        sub_1C8CA469C(v40);
        long long v40 = v28;
        *(void *)&long long v41 = v24;
        *((void *)&v41 + 1) = v25;
        *(void *)&long long v42 = a5;
        *((void *)&v42 + 1) = a6;
        (*(void (**)(_OWORD *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(a6 + 64))(v33, &type metadata for TextFormatDecoder, &off_1F2355738, a5, a6);
        if (!v6 && v35 != v36)
        {
          sub_1C8CB47EC();
          swift_allocError();
          unsigned char *v26 = 2;
          swift_willThrow();
        }
      }
      else
      {
        sub_1C8CB47EC();
        swift_allocError();
        *uint64_t v27 = 6;
        swift_willThrow();
        sub_1C8CA4F3C((uint64_t)v32);
      }
      return sub_1C8D335FC((uint64_t)v33);
    }
  }
  return result;
}

uint64_t sub_1C8D4686C(uint64_t a1, uint64_t a2)
{
  return sub_1C8D46588(a1, a2, v2[4], v2[5], v2[2], v2[3]);
}

uint64_t sub_1C8D4688C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBCB2D10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

double Google_Protobuf_DoubleValue.value.getter()
{
  return *(double *)v0;
}

void Google_Protobuf_DoubleValue.value.setter(double a1)
{
  double *v1 = a1;
}

uint64_t (*Google_Protobuf_DoubleValue.value.modify())(void, void, void)
{
  return nullsub_1;
}

uint64_t (*Google_Protobuf_DoubleValue.unknownFields.modify())(void, void, void)
{
  return nullsub_1;
}

void Google_Protobuf_DoubleValue.init()(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0xC000000000000000;
}

float Google_Protobuf_FloatValue.value.getter()
{
  return *(float *)v0;
}

void Google_Protobuf_FloatValue.value.setter(float a1)
{
  float *v1 = a1;
}

uint64_t (*Google_Protobuf_FloatValue.value.modify())(void, void, void)
{
  return nullsub_1;
}

uint64_t (*Google_Protobuf_FloatValue.unknownFields.modify())(void, void, void)
{
  return nullsub_1;
}

double Google_Protobuf_FloatValue.init()@<D0>(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C8D8AD80;
  return result;
}

uint64_t Google_Protobuf_Int64Value.value.getter()
{
  return *(void *)v0;
}

uint64_t Google_Protobuf_Int64Value.value.setter(uint64_t result)
{
  void *v1 = result;
  return result;
}

uint64_t (*Google_Protobuf_Int64Value.value.modify())(void, void, void)
{
  return nullsub_1;
}

uint64_t (*Google_Protobuf_Int64Value.unknownFields.modify())(void, void, void)
{
  return nullsub_1;
}

void Google_Protobuf_Int64Value.init()(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0xC000000000000000;
}

uint64_t Google_Protobuf_UInt64Value.value.getter()
{
  return *(void *)v0;
}

uint64_t (*Google_Protobuf_UInt64Value.value.modify())(void, void, void)
{
  return nullsub_1;
}

uint64_t (*Google_Protobuf_UInt64Value.unknownFields.modify())(void, void, void)
{
  return nullsub_1;
}

uint64_t (*Google_Protobuf_Int32Value.value.modify())(void, void, void)
{
  return nullsub_1;
}

uint64_t (*Google_Protobuf_Int32Value.unknownFields.modify())(void, void, void)
{
  return nullsub_1;
}

uint64_t Google_Protobuf_UInt32Value.value.getter()
{
  return *v0;
}

uint64_t (*Google_Protobuf_UInt32Value.value.modify())(void, void, void)
{
  return nullsub_1;
}

uint64_t (*Google_Protobuf_UInt32Value.unknownFields.modify())(void, void, void)
{
  return nullsub_1;
}

uint64_t Google_Protobuf_BoolValue.value.getter()
{
  return *v0;
}

uint64_t Google_Protobuf_BoolValue.value.setter(uint64_t result)
{
  unsigned char *v1 = result;
  return result;
}

uint64_t (*Google_Protobuf_BoolValue.value.modify())(void, void, void)
{
  return nullsub_1;
}

uint64_t Google_Protobuf_BoolValue.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  unint64_t v3 = *(void *)(v1 + 16);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C8CA3CF8(v2, v3);
}

uint64_t (*Google_Protobuf_BoolValue.unknownFields.modify())(void, void, void)
{
  return nullsub_1;
}

double Google_Protobuf_BoolValue.init()@<D0>(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C8D8AD80;
  return result;
}

uint64_t (*Google_Protobuf_StringValue.value.modify())(void, void, void)
{
  return nullsub_1;
}

uint64_t (*Google_Protobuf_StringValue.unknownFields.modify())(void, void, void)
{
  return nullsub_1;
}

uint64_t Google_Protobuf_BytesValue.value.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_1C8CA3CF8(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t Google_Protobuf_BytesValue.value.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C8CA3D5C(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t (*Google_Protobuf_BytesValue.value.modify())(void, void, void)
{
  return nullsub_1;
}

uint64_t Google_Protobuf_BytesValue.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  unint64_t v3 = *(void *)(v1 + 24);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C8CA3CF8(v2, v3);
}

uint64_t (*Google_Protobuf_BytesValue.unknownFields.modify())(void, void, void)
{
  return nullsub_1;
}

double Google_Protobuf_BytesValue.init()@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = xmmword_1C8D8AD80;
  a1[1] = xmmword_1C8D8AD80;
  return result;
}

unint64_t static Google_Protobuf_DoubleValue.protoMessageName.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1C8D46CA0()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234BA98, &qword_1EA567440);
}

uint64_t static Google_Protobuf_DoubleValue._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565C20 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA567448;
  uint64_t v3 = qword_1EA567450;
  uint64_t v4 = unk_1EA567458;
  *a1 = qword_1EA567440;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_DoubleValue.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  uint64_t result = v7(a2, a3);
  if (!v4)
  {
    while ((v9 & 1) == 0)
    {
      if (result == 1) {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 48))(v3, a2, a3);
      }
      uint64_t result = v7(a2, a3);
    }
  }
  return result;
}

uint64_t Google_Protobuf_DoubleValue.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*v3 == 0.0) {
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, double))(a3 + 16))(1, a2, a3, *v3);
  if (!v4) {
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t static Google_Protobuf_DoubleValue.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2) {
    return 0;
  }
  uint64_t v3 = *(void *)(a2 + 8);
  unint64_t v2 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a1 + 8);
  unint64_t v4 = *(void *)(a1 + 16);
  sub_1C8CA3CF8(v5, v4);
  sub_1C8CA3CF8(v3, v2);
  char v6 = sub_1C8D01FBC(v5, v4, v3, v2);
  sub_1C8CA3D5C(v3, v2);
  sub_1C8CA3D5C(v5, v4);
  return v6 & 1;
}

uint64_t Google_Protobuf_DoubleValue.hashValue.getter()
{
  double v1 = *v0;
  uint64_t v2 = *((void *)v0 + 1);
  unint64_t v3 = *((void *)v0 + 2);
  sub_1C8D88840();
  sub_1C8CBD760(v5, v2, v3, v1);
  return sub_1C8D888A0();
}

void sub_1C8D46F84(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0xC000000000000000;
}

unint64_t sub_1C8D46F94()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1C8D46FB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_DoubleValue.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8D46FC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_DoubleValue.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8D46FE0@<X0>(void *a1@<X8>)
{
  if (qword_1EA565C20 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA567448;
  uint64_t v3 = qword_1EA567450;
  uint64_t v4 = unk_1EA567458;
  *a1 = qword_1EA567440;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8D47078()
{
  return sub_1C8D6AFB0(*(void *)(v0 + 8), *(void *)(v0 + 16), *(double *)v0);
}

uint64_t sub_1C8D47084()
{
  double v1 = *v0;
  uint64_t v2 = *((void *)v0 + 1);
  unint64_t v3 = *((void *)v0 + 2);
  sub_1C8D88840();
  sub_1C8CBD760(v5, v2, v3, v1);
  return sub_1C8D888A0();
}

uint64_t sub_1C8D470E0()
{
  double v1 = *v0;
  uint64_t v2 = *((void *)v0 + 1);
  unint64_t v3 = *((void *)v0 + 2);
  sub_1C8D88840();
  sub_1C8CBD760(v5, v2, v3, v1);
  return sub_1C8D888A0();
}

uint64_t sub_1C8D47138(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2) {
    return 0;
  }
  uint64_t v3 = *(void *)(a2 + 8);
  unint64_t v2 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a1 + 8);
  unint64_t v4 = *(void *)(a1 + 16);
  sub_1C8CA3CF8(v5, v4);
  sub_1C8CA3CF8(v3, v2);
  char v6 = sub_1C8D01FBC(v5, v4, v3, v2);
  sub_1C8CA3D5C(v3, v2);
  sub_1C8CA3D5C(v5, v4);
  return v6 & 1;
}

unint64_t static Google_Protobuf_FloatValue.protoMessageName.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1C8D471EC()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234B990, &qword_1EA567460);
}

uint64_t static Google_Protobuf_FloatValue._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565C28 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA567468;
  uint64_t v3 = qword_1EA567470;
  uint64_t v4 = unk_1EA567478;
  *a1 = qword_1EA567460;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_FloatValue.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  uint64_t result = v7(a2, a3);
  if (!v4)
  {
    while ((v9 & 1) == 0)
    {
      if (result == 1) {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 24))(v3, a2, a3);
      }
      uint64_t result = v7(a2, a3);
    }
  }
  return result;
}

uint64_t Google_Protobuf_FloatValue.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*v3 == 0.0) {
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, float))(a3 + 8))(1, a2, a3, *v3);
  if (!v4) {
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t static Google_Protobuf_FloatValue.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(float *)a1 != *(float *)a2) {
    return 0;
  }
  uint64_t v3 = *(void *)(a2 + 8);
  unint64_t v2 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a1 + 8);
  unint64_t v4 = *(void *)(a1 + 16);
  sub_1C8CA3CF8(v5, v4);
  sub_1C8CA3CF8(v3, v2);
  char v6 = sub_1C8D01FBC(v5, v4, v3, v2);
  sub_1C8CA3D5C(v3, v2);
  sub_1C8CA3D5C(v5, v4);
  return v6 & 1;
}

uint64_t Google_Protobuf_FloatValue.hashValue.getter()
{
  float v1 = *(float *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  unint64_t v3 = *(void *)(v0 + 16);
  sub_1C8D88840();
  sub_1C8CBDAB4(v5, v2, v3, v1);
  return sub_1C8D888A0();
}

double sub_1C8D474D0@<D0>(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C8D8AD80;
  return result;
}

unint64_t sub_1C8D474E4()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1C8D47500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_FloatValue.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8D47518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_FloatValue.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8D47530@<X0>(void *a1@<X8>)
{
  if (qword_1EA565C28 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA567468;
  uint64_t v3 = qword_1EA567470;
  uint64_t v4 = unk_1EA567478;
  *a1 = qword_1EA567460;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8D475C8()
{
  return sub_1C8D6AE98(*(void *)(v0 + 8), *(void *)(v0 + 16), *(float *)v0);
}

uint64_t sub_1C8D475D4()
{
  float v1 = *(float *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  unint64_t v3 = *(void *)(v0 + 16);
  sub_1C8D88840();
  sub_1C8CBDAB4(v5, v2, v3, v1);
  return sub_1C8D888A0();
}

uint64_t sub_1C8D47630()
{
  float v1 = *(float *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  unint64_t v3 = *(void *)(v0 + 16);
  sub_1C8D88840();
  sub_1C8CBDAB4(v5, v2, v3, v1);
  return sub_1C8D888A0();
}

uint64_t sub_1C8D47688(uint64_t a1, uint64_t a2)
{
  if (*(float *)a1 != *(float *)a2) {
    return 0;
  }
  uint64_t v3 = *(void *)(a2 + 8);
  unint64_t v2 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a1 + 8);
  unint64_t v4 = *(void *)(a1 + 16);
  sub_1C8CA3CF8(v5, v4);
  sub_1C8CA3CF8(v3, v2);
  char v6 = sub_1C8D01FBC(v5, v4, v3, v2);
  sub_1C8CA3D5C(v3, v2);
  sub_1C8CA3D5C(v5, v4);
  return v6 & 1;
}

unint64_t static Google_Protobuf_Int64Value.protoMessageName.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1C8D4773C()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234BA40, &qword_1EA567480);
}

uint64_t static Google_Protobuf_Int64Value._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565C30 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA567488;
  uint64_t v3 = qword_1EA567490;
  uint64_t v4 = unk_1EA567498;
  *a1 = qword_1EA567480;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_Int64Value.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  uint64_t result = v7(a2, a3);
  if (!v4)
  {
    while ((v9 & 1) == 0)
    {
      if (result == 1) {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 96))(v3, a2, a3);
      }
      uint64_t result = v7(a2, a3);
    }
  }
  return result;
}

uint64_t Google_Protobuf_Int64Value.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*v3) {
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(a3 + 32))(*v3, 1, a2, a3);
  if (!v4) {
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

unint64_t sub_1C8D47930()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1C8D4794C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_Int64Value.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8D47964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_Int64Value.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8D4797C@<X0>(void *a1@<X8>)
{
  if (qword_1EA565C30 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA567488;
  uint64_t v3 = qword_1EA567490;
  uint64_t v4 = unk_1EA567498;
  *a1 = qword_1EA567480;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8D47A14()
{
  return sub_1C8D6AF88(*v0, v0[1], v0[2]);
}

unint64_t static Google_Protobuf_UInt64Value.protoMessageName.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1C8D47A48()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234C1E8, &qword_1EA5674A0);
}

uint64_t static Google_Protobuf_UInt64Value._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565C38 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA5674A8;
  uint64_t v3 = qword_1EA5674B0;
  uint64_t v4 = unk_1EA5674B8;
  *a1 = qword_1EA5674A0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_UInt64Value.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  uint64_t result = v7(a2, a3);
  if (!v4)
  {
    while ((v9 & 1) == 0)
    {
      if (result == 1) {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 144))(v3, a2, a3);
      }
      uint64_t result = v7(a2, a3);
    }
  }
  return result;
}

uint64_t Google_Protobuf_UInt64Value.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*v3) {
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(a3 + 48))(*v3, 1, a2, a3);
  if (!v4) {
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t _s20SiriOntologyProtobuf07Google_C11_Int64ValueV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  uint64_t v3 = a2[1];
  unint64_t v2 = a2[2];
  uint64_t v5 = a1[1];
  unint64_t v4 = a1[2];
  sub_1C8CA3CF8(v5, v4);
  sub_1C8CA3CF8(v3, v2);
  char v6 = sub_1C8D01FBC(v5, v4, v3, v2);
  sub_1C8CA3D5C(v3, v2);
  sub_1C8CA3D5C(v5, v4);
  return v6 & 1;
}

uint64_t _s20SiriOntologyProtobuf07Google_C11_Int64ValueV04hashF0Sivg_0()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  unint64_t v3 = v0[2];
  sub_1C8D88840();
  if (v2)
  {
    sub_1C8D88850();
    sub_1C8D88880();
  }
  switch(v3 >> 62)
  {
    case 1uLL:
      if ((int)v1 != v1 >> 32) {
        goto LABEL_9;
      }
      break;
    case 2uLL:
      if (*(void *)(v1 + 16) != *(void *)(v1 + 24))
      {
LABEL_9:
        sub_1C8CA3CF8(v1, v3);
        goto LABEL_10;
      }
      break;
    case 3uLL:
      goto LABEL_11;
    default:
      if ((v3 & 0xFF000000000000) != 0) {
LABEL_10:
      }
        sub_1C8D881D0();
LABEL_11:
      sub_1C8CA3D5C(v1, v3);
      break;
  }
  return sub_1C8D888A0();
}

unint64_t sub_1C8D47E14()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1C8D47E30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_UInt64Value.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8D47E48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_UInt64Value.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8D47E60@<X0>(void *a1@<X8>)
{
  if (qword_1EA565C38 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA5674A8;
  uint64_t v3 = qword_1EA5674B0;
  uint64_t v4 = unk_1EA5674B8;
  *a1 = qword_1EA5674A0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8D47EF8()
{
  return sub_1C8D6B280(*v0, v0[1], v0[2]);
}

uint64_t sub_1C8D47F04()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  unint64_t v3 = v0[2];
  sub_1C8D88840();
  if (v2)
  {
    sub_1C8D88850();
    sub_1C8D88880();
  }
  switch(v3 >> 62)
  {
    case 1uLL:
      if ((int)v1 != v1 >> 32) {
        goto LABEL_9;
      }
      break;
    case 2uLL:
      if (*(void *)(v1 + 16) != *(void *)(v1 + 24))
      {
LABEL_9:
        sub_1C8CA3CF8(v1, v3);
        goto LABEL_10;
      }
      break;
    case 3uLL:
      goto LABEL_11;
    default:
      if ((v3 & 0xFF000000000000) != 0) {
LABEL_10:
      }
        sub_1C8D881D0();
LABEL_11:
      sub_1C8CA3D5C(v1, v3);
      break;
  }
  return sub_1C8D888A0();
}

unint64_t static Google_Protobuf_Int32Value.protoMessageName.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1C8D4805C()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234B9E8, &qword_1EA5674C0);
}

uint64_t static Google_Protobuf_Int32Value._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565C40 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA5674C8;
  uint64_t v3 = qword_1EA5674D0;
  uint64_t v4 = unk_1EA5674D8;
  *a1 = qword_1EA5674C0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_Int32Value.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  uint64_t result = v7(a2, a3);
  if (!v4)
  {
    while ((v9 & 1) == 0)
    {
      if (result == 1) {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 72))(v3, a2, a3);
      }
      uint64_t result = v7(a2, a3);
    }
  }
  return result;
}

uint64_t Google_Protobuf_Int32Value.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *v3;
  if (!v8) {
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 24))(v8, 1, a2, a3);
  if (!v4) {
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t Google_Protobuf_Int32Value.hashValue.getter()
{
  int v1 = *v0;
  uint64_t v2 = *((void *)v0 + 1);
  unint64_t v3 = *((void *)v0 + 2);
  sub_1C8D88840();
  if (v1)
  {
    sub_1C8D88850();
    sub_1C8D88880();
  }
  switch(v3 >> 62)
  {
    case 1uLL:
      if ((int)v2 != v2 >> 32) {
        goto LABEL_9;
      }
      break;
    case 2uLL:
      if (*(void *)(v2 + 16) != *(void *)(v2 + 24))
      {
LABEL_9:
        sub_1C8CA3CF8(v2, v3);
        goto LABEL_10;
      }
      break;
    case 3uLL:
      goto LABEL_11;
    default:
      if ((v3 & 0xFF000000000000) != 0) {
LABEL_10:
      }
        sub_1C8D881D0();
LABEL_11:
      sub_1C8CA3D5C(v2, v3);
      break;
  }
  return sub_1C8D888A0();
}

unint64_t sub_1C8D48388()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1C8D483A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_Int32Value.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8D483BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_Int32Value.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8D483D4@<X0>(void *a1@<X8>)
{
  if (qword_1EA565C40 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA5674C8;
  uint64_t v3 = qword_1EA5674D0;
  uint64_t v4 = unk_1EA5674D8;
  *a1 = qword_1EA5674C0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8D4846C()
{
  return sub_1C8D6AF60(*v0, *((void *)v0 + 1), *((void *)v0 + 2));
}

uint64_t sub_1C8D4847C()
{
  int v1 = *v0;
  uint64_t v2 = *((void *)v0 + 1);
  unint64_t v3 = *((void *)v0 + 2);
  sub_1C8D88840();
  if (v1)
  {
    sub_1C8D88850();
    sub_1C8D88880();
  }
  switch(v3 >> 62)
  {
    case 1uLL:
      if ((int)v2 != v2 >> 32) {
        goto LABEL_9;
      }
      break;
    case 2uLL:
      if (*(void *)(v2 + 16) != *(void *)(v2 + 24))
      {
LABEL_9:
        sub_1C8CA3CF8(v2, v3);
        goto LABEL_10;
      }
      break;
    case 3uLL:
      goto LABEL_11;
    default:
      if ((v3 & 0xFF000000000000) != 0) {
LABEL_10:
      }
        sub_1C8D881D0();
LABEL_11:
      sub_1C8CA3D5C(v2, v3);
      break;
  }
  return sub_1C8D888A0();
}

unint64_t static Google_Protobuf_UInt32Value.protoMessageName.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1C8D485D8()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234C190, &qword_1EA5674E0);
}

uint64_t static Google_Protobuf_UInt32Value._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565C48 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA5674E8;
  uint64_t v3 = qword_1EA5674F0;
  uint64_t v4 = unk_1EA5674F8;
  *a1 = qword_1EA5674E0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_UInt32Value.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  uint64_t result = v7(a2, a3);
  if (!v4)
  {
    while ((v9 & 1) == 0)
    {
      if (result == 1) {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 120))(v3, a2, a3);
      }
      uint64_t result = v7(a2, a3);
    }
  }
  return result;
}

uint64_t Google_Protobuf_UInt32Value.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *v3;
  if (!v8) {
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 40))(v8, 1, a2, a3);
  if (!v4) {
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t Google_Protobuf_UInt32Value.hashValue.getter()
{
  int v1 = *v0;
  uint64_t v2 = *((void *)v0 + 1);
  unint64_t v3 = *((void *)v0 + 2);
  sub_1C8D88840();
  if (v1)
  {
    sub_1C8D88850();
    sub_1C8D88880();
  }
  switch(v3 >> 62)
  {
    case 1uLL:
      if ((int)v2 != v2 >> 32) {
        goto LABEL_9;
      }
      break;
    case 2uLL:
      if (*(void *)(v2 + 16) != *(void *)(v2 + 24))
      {
LABEL_9:
        sub_1C8CA3CF8(v2, v3);
        goto LABEL_10;
      }
      break;
    case 3uLL:
      goto LABEL_11;
    default:
      if ((v3 & 0xFF000000000000) != 0) {
LABEL_10:
      }
        sub_1C8D881D0();
LABEL_11:
      sub_1C8CA3D5C(v2, v3);
      break;
  }
  return sub_1C8D888A0();
}

unint64_t sub_1C8D48908()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1C8D48924(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_UInt32Value.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8D4893C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_UInt32Value.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8D48954@<X0>(void *a1@<X8>)
{
  if (qword_1EA565C48 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA5674E8;
  uint64_t v3 = qword_1EA5674F0;
  uint64_t v4 = unk_1EA5674F8;
  *a1 = qword_1EA5674E0;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8D489EC()
{
  return sub_1C8D6B194(*v0, *((void *)v0 + 1), *((void *)v0 + 2));
}

uint64_t sub_1C8D489FC()
{
  int v1 = *v0;
  uint64_t v2 = *((void *)v0 + 1);
  unint64_t v3 = *((void *)v0 + 2);
  sub_1C8D88840();
  if (v1)
  {
    sub_1C8D88850();
    sub_1C8D88880();
  }
  switch(v3 >> 62)
  {
    case 1uLL:
      if ((int)v2 != v2 >> 32) {
        goto LABEL_9;
      }
      break;
    case 2uLL:
      if (*(void *)(v2 + 16) != *(void *)(v2 + 24))
      {
LABEL_9:
        sub_1C8CA3CF8(v2, v3);
        goto LABEL_10;
      }
      break;
    case 3uLL:
      goto LABEL_11;
    default:
      if ((v3 & 0xFF000000000000) != 0) {
LABEL_10:
      }
        sub_1C8D881D0();
LABEL_11:
      sub_1C8CA3D5C(v2, v3);
      break;
  }
  return sub_1C8D888A0();
}

unint64_t static Google_Protobuf_BoolValue.protoMessageName.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_1C8D48B54()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234B680, &qword_1EA567500);
}

uint64_t static Google_Protobuf_BoolValue._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565C50 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA567508;
  uint64_t v3 = qword_1EA567510;
  uint64_t v4 = unk_1EA567518;
  *a1 = qword_1EA567500;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_BoolValue.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  uint64_t result = v7(a2, a3);
  if (!v4)
  {
    while ((v9 & 1) == 0)
    {
      if (result == 1) {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 312))(v3, a2, a3);
      }
      uint64_t result = v7(a2, a3);
    }
  }
  return result;
}

uint64_t Google_Protobuf_BoolValue.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*v3 != 1) {
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 104))(1, 1, a2, a3);
  if (!v4) {
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t static Google_Protobuf_BoolValue.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  uint64_t v4 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  uint64_t v6 = *((void *)a1 + 1);
  unint64_t v5 = *((void *)a1 + 2);
  sub_1C8CA3CF8(v6, v5);
  sub_1C8CA3CF8(v4, v3);
  char v7 = sub_1C8D01FBC(v6, v5, v4, v3);
  sub_1C8CA3D5C(v4, v3);
  sub_1C8CA3D5C(v6, v5);
  return v7 & 1;
}

uint64_t Google_Protobuf_BoolValue.hashValue.getter()
{
  int v1 = *v0;
  uint64_t v2 = *((void *)v0 + 1);
  unint64_t v3 = *((void *)v0 + 2);
  sub_1C8D88840();
  if (v1 == 1)
  {
    sub_1C8D88850();
    sub_1C8D88860();
  }
  switch(v3 >> 62)
  {
    case 1uLL:
      if ((int)v2 != v2 >> 32) {
        goto LABEL_9;
      }
      break;
    case 2uLL:
      if (*(void *)(v2 + 16) != *(void *)(v2 + 24))
      {
LABEL_9:
        sub_1C8CA3CF8(v2, v3);
        goto LABEL_10;
      }
      break;
    case 3uLL:
      goto LABEL_11;
    default:
      if ((v3 & 0xFF000000000000) != 0) {
LABEL_10:
      }
        sub_1C8D881D0();
LABEL_11:
      sub_1C8CA3D5C(v2, v3);
      break;
  }
  return sub_1C8D888A0();
}

double sub_1C8D48F24@<D0>(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C8D8AD80;
  return result;
}

unint64_t sub_1C8D48F38()
{
  return 0xD000000000000019;
}

uint64_t sub_1C8D48F54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_BoolValue.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8D48F6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_BoolValue.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8D48F84@<X0>(void *a1@<X8>)
{
  if (qword_1EA565C50 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA567508;
  uint64_t v3 = qword_1EA567510;
  uint64_t v4 = unk_1EA567518;
  *a1 = qword_1EA567500;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8D4901C()
{
  return sub_1C8D6AC7C(*(unsigned char *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16));
}

uint64_t sub_1C8D4902C()
{
  int v1 = *v0;
  uint64_t v2 = *((void *)v0 + 1);
  unint64_t v3 = *((void *)v0 + 2);
  sub_1C8D88840();
  if (v1 == 1)
  {
    sub_1C8D88850();
    sub_1C8D88860();
  }
  switch(v3 >> 62)
  {
    case 1uLL:
      if ((int)v2 != v2 >> 32) {
        goto LABEL_9;
      }
      break;
    case 2uLL:
      if (*(void *)(v2 + 16) != *(void *)(v2 + 24))
      {
LABEL_9:
        sub_1C8CA3CF8(v2, v3);
        goto LABEL_10;
      }
      break;
    case 3uLL:
      goto LABEL_11;
    default:
      if ((v3 & 0xFF000000000000) != 0) {
LABEL_10:
      }
        sub_1C8D881D0();
LABEL_11:
      sub_1C8CA3D5C(v2, v3);
      break;
  }
  return sub_1C8D888A0();
}

uint64_t sub_1C8D4916C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  uint64_t v4 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  uint64_t v6 = *((void *)a1 + 1);
  unint64_t v5 = *((void *)a1 + 2);
  sub_1C8CA3CF8(v6, v5);
  sub_1C8CA3CF8(v4, v3);
  char v7 = sub_1C8D01FBC(v6, v5, v4, v3);
  sub_1C8CA3D5C(v4, v3);
  sub_1C8CA3D5C(v6, v5);
  return v7 & 1;
}

unint64_t static Google_Protobuf_StringValue.protoMessageName.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1C8D49220()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234C138, &qword_1EA567520);
}

uint64_t static Google_Protobuf_StringValue._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565C58 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA567528;
  uint64_t v3 = qword_1EA567530;
  uint64_t v4 = unk_1EA567538;
  *a1 = qword_1EA567520;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_StringValue.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  uint64_t result = v7(a2, a3);
  if (!v4)
  {
    while ((v9 & 1) == 0)
    {
      if (result == 1) {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 336))(v3, a2, a3);
      }
      uint64_t result = v7(a2, a3);
    }
  }
  return result;
}

uint64_t Google_Protobuf_StringValue.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v8 = v3[1];
  uint64_t v9 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0) {
    uint64_t v9 = *v3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v9) {
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  uint64_t result = (*(uint64_t (**)(void))(a3 + 112))();
  if (!v4) {
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t Google_Protobuf_StringValue.hashValue.getter()
{
  return sub_1C8D49878((void (*)(unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C8CBC9DC);
}

unint64_t sub_1C8D49438()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1C8D49458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_StringValue.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8D49470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_StringValue.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8D49488@<X0>(void *a1@<X8>)
{
  if (qword_1EA565C58 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA567528;
  uint64_t v3 = qword_1EA567530;
  uint64_t v4 = unk_1EA567538;
  *a1 = qword_1EA567520;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8D49520()
{
  return sub_1C8D6B078(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C8D4952C(uint64_t a1, uint64_t a2)
{
  return sub_1C8D49A00(a1, a2, (void (*)(unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C8CBC9DC);
}

uint64_t sub_1C8D49544(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D49A88(a1, a2, a3, (void (*)(unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C8CBC9DC);
}

unint64_t static Google_Protobuf_BytesValue.protoMessageName.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1C8D49578()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234B938, &qword_1EA567540);
}

uint64_t static Google_Protobuf_BytesValue._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565C60 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA567548;
  uint64_t v3 = qword_1EA567550;
  uint64_t v4 = unk_1EA567558;
  *a1 = qword_1EA567540;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_BytesValue.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  uint64_t result = v7(a2, a3);
  if (!v4)
  {
    while ((v9 & 1) == 0)
    {
      if (result == 1) {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 360))(v3, a2, a3);
      }
      uint64_t result = v7(a2, a3);
    }
  }
  return result;
}

uint64_t Google_Protobuf_BytesValue.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  unint64_t v8 = v3[1];
  switch(v8 >> 62)
  {
    case 1uLL:
      if ((int)v7 != v7 >> 32) {
        goto LABEL_7;
      }
      return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
    case 2uLL:
      if (*(void *)(v7 + 16) != *(void *)(v7 + 24)) {
        goto LABEL_7;
      }
      return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
    case 3uLL:
      return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
    default:
      if ((v8 & 0xFF000000000000) == 0) {
        return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
      }
LABEL_7:
      uint64_t result = (*(uint64_t (**)(uint64_t))(a3 + 120))(v7);
      if (!v4) {
        return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
      }
      return result;
  }
}

uint64_t static Google_Protobuf_BytesValue.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  unint64_t v5 = a2[3];
  if ((sub_1C8D01FBC(*a1, a1[1], *a2, a2[1]) & 1) == 0) {
    return 0;
  }
  sub_1C8CA3CF8(v2, v3);
  sub_1C8CA3CF8(v4, v5);
  char v6 = sub_1C8D01FBC(v2, v3, v4, v5);
  sub_1C8CA3D5C(v4, v5);
  sub_1C8CA3D5C(v2, v3);
  return v6 & 1;
}

uint64_t Google_Protobuf_BytesValue.hashValue.getter()
{
  return sub_1C8D49878((void (*)(unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C8CBDBD8);
}

uint64_t sub_1C8D49878(void (*a1)(unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  uint64_t v5 = v1[3];
  sub_1C8D88840();
  a1(v8, v3, v4, v6, v5);
  return sub_1C8D888A0();
}

double sub_1C8D498E8@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = xmmword_1C8D8AD80;
  a1[1] = xmmword_1C8D8AD80;
  return result;
}

unint64_t sub_1C8D498F8()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1C8D49914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_BytesValue.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8D4992C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_BytesValue.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8D49944@<X0>(void *a1@<X8>)
{
  if (qword_1EA565C60 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA567548;
  uint64_t v3 = qword_1EA567550;
  uint64_t v4 = unk_1EA567558;
  *a1 = qword_1EA567540;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8D499DC()
{
  return sub_1C8D6AD9C(*v0, v0[1], v0[2], v0[3]);
}

uint64_t sub_1C8D499E8(uint64_t a1, uint64_t a2)
{
  return sub_1C8D49A00(a1, a2, (void (*)(unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C8CBDBD8);
}

uint64_t sub_1C8D49A00(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *v3;
  uint64_t v6 = v3[1];
  uint64_t v8 = v3[2];
  uint64_t v7 = v3[3];
  sub_1C8D88840();
  a3(v10, v5, v6, v8, v7);
  return sub_1C8D888A0();
}

uint64_t sub_1C8D49A70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D49A88(a1, a2, a3, (void (*)(unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C8CBDBD8);
}

uint64_t sub_1C8D49A88(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *v4;
  uint64_t v7 = v4[1];
  uint64_t v9 = v4[2];
  uint64_t v8 = v4[3];
  sub_1C8D88840();
  a4(v11, v6, v7, v9, v8);
  return sub_1C8D888A0();
}

uint64_t sub_1C8D49AF4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  unint64_t v5 = a2[3];
  if ((sub_1C8D01FBC(*a1, a1[1], *a2, a2[1]) & 1) == 0) {
    return 0;
  }
  sub_1C8CA3CF8(v2, v3);
  sub_1C8CA3CF8(v4, v5);
  char v6 = sub_1C8D01FBC(v2, v3, v4, v5);
  sub_1C8CA3D5C(v4, v5);
  sub_1C8CA3D5C(v2, v3);
  return v6 & 1;
}

unint64_t sub_1C8D49B94(uint64_t a1)
{
  unint64_t result = sub_1C8D49BBC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D49BBC()
{
  unint64_t result = qword_1EA567560;
  if (!qword_1EA567560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567560);
  }
  return result;
}

uint64_t sub_1C8D49C10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D4A97C(a1, a2, a3, (uint64_t (*)(void))sub_1C8D49C3C, (uint64_t (*)(void))sub_1C8D49C90);
}

unint64_t sub_1C8D49C3C()
{
  unint64_t result = qword_1EA567568;
  if (!qword_1EA567568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567568);
  }
  return result;
}

unint64_t sub_1C8D49C90()
{
  unint64_t result = qword_1EA567570;
  if (!qword_1EA567570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567570);
  }
  return result;
}

unint64_t sub_1C8D49CE8()
{
  unint64_t result = qword_1EA567578;
  if (!qword_1EA567578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567578);
  }
  return result;
}

unint64_t sub_1C8D49D3C(uint64_t a1)
{
  unint64_t result = sub_1C8D49D64();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D49D64()
{
  unint64_t result = qword_1EA567580;
  if (!qword_1EA567580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567580);
  }
  return result;
}

uint64_t sub_1C8D49DB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D4A97C(a1, a2, a3, (uint64_t (*)(void))sub_1C8D49DE4, (uint64_t (*)(void))sub_1C8D49E38);
}

unint64_t sub_1C8D49DE4()
{
  unint64_t result = qword_1EA567588;
  if (!qword_1EA567588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567588);
  }
  return result;
}

unint64_t sub_1C8D49E38()
{
  unint64_t result = qword_1EA567590;
  if (!qword_1EA567590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567590);
  }
  return result;
}

unint64_t sub_1C8D49E90()
{
  unint64_t result = qword_1EA567598;
  if (!qword_1EA567598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567598);
  }
  return result;
}

unint64_t sub_1C8D49EE4(uint64_t a1)
{
  unint64_t result = sub_1C8D49F0C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D49F0C()
{
  unint64_t result = qword_1EA5675A0;
  if (!qword_1EA5675A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5675A0);
  }
  return result;
}

uint64_t sub_1C8D49F60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D4A97C(a1, a2, a3, (uint64_t (*)(void))sub_1C8D49F8C, (uint64_t (*)(void))sub_1C8D49FE0);
}

unint64_t sub_1C8D49F8C()
{
  unint64_t result = qword_1EA5675A8;
  if (!qword_1EA5675A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5675A8);
  }
  return result;
}

unint64_t sub_1C8D49FE0()
{
  unint64_t result = qword_1EA5675B0;
  if (!qword_1EA5675B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5675B0);
  }
  return result;
}

unint64_t sub_1C8D4A038()
{
  unint64_t result = qword_1EA5675B8;
  if (!qword_1EA5675B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5675B8);
  }
  return result;
}

unint64_t sub_1C8D4A08C(uint64_t a1)
{
  unint64_t result = sub_1C8D4A0B4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D4A0B4()
{
  unint64_t result = qword_1EA5675C0;
  if (!qword_1EA5675C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5675C0);
  }
  return result;
}

uint64_t sub_1C8D4A108(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D4A97C(a1, a2, a3, (uint64_t (*)(void))sub_1C8D4A134, (uint64_t (*)(void))sub_1C8D4A188);
}

unint64_t sub_1C8D4A134()
{
  unint64_t result = qword_1EA5675C8;
  if (!qword_1EA5675C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5675C8);
  }
  return result;
}

unint64_t sub_1C8D4A188()
{
  unint64_t result = qword_1EA5675D0;
  if (!qword_1EA5675D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5675D0);
  }
  return result;
}

unint64_t sub_1C8D4A1E0()
{
  unint64_t result = qword_1EA5675D8;
  if (!qword_1EA5675D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5675D8);
  }
  return result;
}

unint64_t sub_1C8D4A234(uint64_t a1)
{
  unint64_t result = sub_1C8D4A25C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D4A25C()
{
  unint64_t result = qword_1EA5675E0;
  if (!qword_1EA5675E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5675E0);
  }
  return result;
}

uint64_t sub_1C8D4A2B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D4A97C(a1, a2, a3, (uint64_t (*)(void))sub_1C8D4A2DC, (uint64_t (*)(void))sub_1C8D4A330);
}

unint64_t sub_1C8D4A2DC()
{
  unint64_t result = qword_1EA5675E8;
  if (!qword_1EA5675E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5675E8);
  }
  return result;
}

unint64_t sub_1C8D4A330()
{
  unint64_t result = qword_1EA5675F0;
  if (!qword_1EA5675F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5675F0);
  }
  return result;
}

unint64_t sub_1C8D4A388()
{
  unint64_t result = qword_1EA5675F8;
  if (!qword_1EA5675F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5675F8);
  }
  return result;
}

unint64_t sub_1C8D4A3DC(uint64_t a1)
{
  unint64_t result = sub_1C8D4A404();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D4A404()
{
  unint64_t result = qword_1EA567600;
  if (!qword_1EA567600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567600);
  }
  return result;
}

uint64_t sub_1C8D4A458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D4A97C(a1, a2, a3, (uint64_t (*)(void))sub_1C8D4A484, (uint64_t (*)(void))sub_1C8D4A4D8);
}

unint64_t sub_1C8D4A484()
{
  unint64_t result = qword_1EA567608;
  if (!qword_1EA567608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567608);
  }
  return result;
}

unint64_t sub_1C8D4A4D8()
{
  unint64_t result = qword_1EA567610;
  if (!qword_1EA567610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567610);
  }
  return result;
}

unint64_t sub_1C8D4A530()
{
  unint64_t result = qword_1EA567618;
  if (!qword_1EA567618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567618);
  }
  return result;
}

unint64_t sub_1C8D4A584(uint64_t a1)
{
  unint64_t result = sub_1C8D4A5AC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D4A5AC()
{
  unint64_t result = qword_1EA567620;
  if (!qword_1EA567620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567620);
  }
  return result;
}

uint64_t sub_1C8D4A600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D4A97C(a1, a2, a3, (uint64_t (*)(void))sub_1C8D4A62C, (uint64_t (*)(void))sub_1C8D4A680);
}

unint64_t sub_1C8D4A62C()
{
  unint64_t result = qword_1EA567628;
  if (!qword_1EA567628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567628);
  }
  return result;
}

unint64_t sub_1C8D4A680()
{
  unint64_t result = qword_1EA567630;
  if (!qword_1EA567630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567630);
  }
  return result;
}

unint64_t sub_1C8D4A6D8()
{
  unint64_t result = qword_1EA567638;
  if (!qword_1EA567638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567638);
  }
  return result;
}

unint64_t sub_1C8D4A72C(uint64_t a1)
{
  unint64_t result = sub_1C8D4A754();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D4A754()
{
  unint64_t result = qword_1EA567640;
  if (!qword_1EA567640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567640);
  }
  return result;
}

uint64_t sub_1C8D4A7A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D4A97C(a1, a2, a3, (uint64_t (*)(void))sub_1C8D4A7D4, (uint64_t (*)(void))sub_1C8D4A828);
}

unint64_t sub_1C8D4A7D4()
{
  unint64_t result = qword_1EA567648;
  if (!qword_1EA567648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567648);
  }
  return result;
}

unint64_t sub_1C8D4A828()
{
  unint64_t result = qword_1EA567650;
  if (!qword_1EA567650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567650);
  }
  return result;
}

unint64_t sub_1C8D4A880()
{
  unint64_t result = qword_1EA567658;
  if (!qword_1EA567658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567658);
  }
  return result;
}

unint64_t sub_1C8D4A8D4(uint64_t a1)
{
  unint64_t result = sub_1C8D4A8FC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D4A8FC()
{
  unint64_t result = qword_1EA567660;
  if (!qword_1EA567660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567660);
  }
  return result;
}

uint64_t sub_1C8D4A950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D4A97C(a1, a2, a3, (uint64_t (*)(void))sub_1C8D4A9B8, (uint64_t (*)(void))sub_1C8D4AA0C);
}

uint64_t sub_1C8D4A97C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C8D4A9B8()
{
  unint64_t result = qword_1EA567668;
  if (!qword_1EA567668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567668);
  }
  return result;
}

unint64_t sub_1C8D4AA0C()
{
  unint64_t result = qword_1EA567670;
  if (!qword_1EA567670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567670);
  }
  return result;
}

unint64_t sub_1C8D4AA64()
{
  unint64_t result = qword_1EA567678;
  if (!qword_1EA567678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567678);
  }
  return result;
}

void *assignWithCopy for Google_Protobuf_DoubleValue(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a2[1];
  unint64_t v4 = a2[2];
  sub_1C8CA3CF8(v3, v4);
  uint64_t v5 = a1[1];
  unint64_t v6 = a1[2];
  a1[1] = v3;
  a1[2] = v4;
  sub_1C8CA3D5C(v5, v6);
  return a1;
}

void *assignWithTake for Google_Protobuf_DoubleValue(void *a1, uint64_t a2)
{
  *a1 = *(void *)a2;
  uint64_t v3 = a1[1];
  unint64_t v4 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  sub_1C8CA3D5C(v3, v4);
  return a1;
}

uint64_t assignWithCopy for Google_Protobuf_FloatValue(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  unint64_t v4 = *(void *)(a2 + 16);
  sub_1C8CA3CF8(v3, v4);
  uint64_t v5 = *(void *)(a1 + 8);
  unint64_t v6 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  sub_1C8CA3D5C(v5, v6);
  return a1;
}

uint64_t assignWithTake for Google_Protobuf_FloatValue(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a1 + 8);
  unint64_t v4 = *(void *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_1C8CA3D5C(v3, v4);
  return a1;
}

ValueMetadata *type metadata accessor for Google_Protobuf_FloatValue()
{
  return &type metadata for Google_Protobuf_FloatValue;
}

void *_s20SiriOntologyProtobuf27Google_Protobuf_DoubleValueVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  unint64_t v4 = a2[2];
  sub_1C8CA3CF8(v3, v4);
  a1[1] = v3;
  a1[2] = v4;
  return a1;
}

void *_s20SiriOntologyProtobuf26Google_Protobuf_Int64ValueVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a2[1];
  unint64_t v4 = a2[2];
  sub_1C8CA3CF8(v3, v4);
  uint64_t v5 = a1[1];
  unint64_t v6 = a1[2];
  a1[1] = v3;
  a1[2] = v4;
  sub_1C8CA3D5C(v5, v6);
  return a1;
}

uint64_t _s20SiriOntologyProtobuf26Google_Protobuf_Int64ValueVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a1 + 8);
  unint64_t v5 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  sub_1C8CA3D5C(v4, v5);
  return a1;
}

ValueMetadata *type metadata accessor for Google_Protobuf_UInt64Value()
{
  return &type metadata for Google_Protobuf_UInt64Value;
}

uint64_t _s20SiriOntologyProtobuf26Google_Protobuf_FloatValueVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  unint64_t v4 = *(void *)(a2 + 16);
  sub_1C8CA3CF8(v3, v4);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  return a1;
}

uint64_t _s20SiriOntologyProtobuf26Google_Protobuf_Int32ValueVwca_0(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  unint64_t v4 = *(void *)(a2 + 16);
  sub_1C8CA3CF8(v3, v4);
  uint64_t v5 = *(void *)(a1 + 8);
  unint64_t v6 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  sub_1C8CA3D5C(v5, v6);
  return a1;
}

uint64_t _s20SiriOntologyProtobuf26Google_Protobuf_Int32ValueVwta_0(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a1 + 8);
  unint64_t v4 = *(void *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_1C8CA3D5C(v3, v4);
  return a1;
}

ValueMetadata *type metadata accessor for Google_Protobuf_UInt32Value()
{
  return &type metadata for Google_Protobuf_UInt32Value;
}

uint64_t sub_1C8D4ADE0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  unint64_t v4 = *(void *)(a2 + 16);
  sub_1C8CA3CF8(v3, v4);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  return a1;
}

uint64_t assignWithCopy for Google_Protobuf_BoolValue(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  unint64_t v4 = *(void *)(a2 + 16);
  sub_1C8CA3CF8(v3, v4);
  uint64_t v5 = *(void *)(a1 + 8);
  unint64_t v6 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  sub_1C8CA3D5C(v5, v6);
  return a1;
}

uint64_t assignWithTake for Google_Protobuf_BoolValue(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a1 + 8);
  unint64_t v4 = *(void *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_1C8CA3D5C(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for Google_Protobuf_BoolValue(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[24]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for Google_Protobuf_BoolValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_BoolValue()
{
  return &type metadata for Google_Protobuf_BoolValue;
}

uint64_t destroy for Google_Protobuf_BytesValue(uint64_t *a1)
{
  sub_1C8CA3D5C(*a1, a1[1]);
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  return sub_1C8CA3D5C(v2, v3);
}

uint64_t *initializeWithCopy for Google_Protobuf_BytesValue(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_1C8CA3CF8(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  uint64_t v7 = a2[2];
  unint64_t v6 = a2[3];
  sub_1C8CA3CF8(v7, v6);
  a1[2] = v7;
  a1[3] = v6;
  return a1;
}

uint64_t *assignWithCopy for Google_Protobuf_BytesValue(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_1C8CA3CF8(*a2, v5);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_1C8CA3D5C(v6, v7);
  uint64_t v9 = a2[2];
  unint64_t v8 = a2[3];
  sub_1C8CA3CF8(v9, v8);
  uint64_t v10 = a1[2];
  unint64_t v11 = a1[3];
  a1[2] = v9;
  a1[3] = v8;
  sub_1C8CA3D5C(v10, v11);
  return a1;
}

uint64_t *assignWithTake for Google_Protobuf_BytesValue(uint64_t *a1, _OWORD *a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_1C8CA3D5C(v4, v5);
  uint64_t v6 = a1[2];
  unint64_t v7 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  sub_1C8CA3D5C(v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for Google_Protobuf_BytesValue(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for Google_Protobuf_BytesValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 13;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_BytesValue()
{
  return &type metadata for Google_Protobuf_BytesValue;
}

uint64_t Google_Protobuf_FieldMask.paths.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_FieldMask.paths.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*Google_Protobuf_FieldMask.paths.modify())(void, void, void)
{
  return nullsub_1;
}

uint64_t Google_Protobuf_FieldMask.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  unint64_t v3 = *(void *)(v1 + 16);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C8CA3CF8(v2, v3);
}

uint64_t Google_Protobuf_FieldMask.unknownFields.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C8CA3D5C(*(void *)(v1 + 8), *(void *)(v1 + 16));
  *(void *)(v1 + 8) = v2;
  *(void *)(v1 + 16) = v3;
  return result;
}

uint64_t (*Google_Protobuf_FieldMask.unknownFields.modify())(void, void, void)
{
  return nullsub_1;
}

double Google_Protobuf_FieldMask.init()@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = MEMORY[0x1E4FBC860];
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C8D8AD80;
  return result;
}

unint64_t static Google_Protobuf_FieldMask.protoMessageName.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_1C8D4B288()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234B7A0, &qword_1EA567680);
}

uint64_t static Google_Protobuf_FieldMask._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565C68 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA567688;
  uint64_t v3 = qword_1EA567690;
  uint64_t v4 = unk_1EA567698;
  *a1 = qword_1EA567680;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_FieldMask.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  uint64_t result = v7(a2, a3);
  if (!v4)
  {
    while ((v9 & 1) == 0)
    {
      if (result == 1) {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 352))(v3, a2, a3);
      }
      uint64_t result = v7(a2, a3);
    }
  }
  return result;
}

uint64_t Google_Protobuf_FieldMask.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(*(void *)v3 + 16)) {
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  uint64_t result = (*(uint64_t (**)(void))(a3 + 256))();
  if (!v4) {
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t static Google_Protobuf_FieldMask.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  if ((sub_1C8CFBFEC(*(void **)a1, *(void **)a2) & 1) == 0) {
    return 0;
  }
  sub_1C8CA3CF8(v2, v3);
  sub_1C8CA3CF8(v4, v5);
  char v6 = sub_1C8D01FBC(v2, v3, v4, v5);
  sub_1C8CA3D5C(v4, v5);
  sub_1C8CA3D5C(v2, v3);
  return v6 & 1;
}

uint64_t Google_Protobuf_FieldMask.hashValue.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  unint64_t v3 = v0[2];
  sub_1C8D88840();
  sub_1C8CBDE78(v5, v1, v2, v3);
  return sub_1C8D888A0();
}

unint64_t sub_1C8D4B574()
{
  return 0xD000000000000019;
}

uint64_t sub_1C8D4B590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_FieldMask.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8D4B5A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_FieldMask.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8D4B5C0@<X0>(void *a1@<X8>)
{
  if (qword_1EA565C68 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA567688;
  uint64_t v3 = qword_1EA567690;
  uint64_t v4 = unk_1EA567698;
  *a1 = qword_1EA567680;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8D4B658()
{
  return sub_1C8D6AD44(*v0, v0[1], v0[2]);
}

uint64_t sub_1C8D4B664()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  unint64_t v3 = v0[2];
  sub_1C8D88840();
  sub_1C8CBDE78(v5, v1, v2, v3);
  return sub_1C8D888A0();
}

uint64_t sub_1C8D4B6C0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  unint64_t v3 = v0[2];
  sub_1C8D88840();
  sub_1C8CBDE78(v5, v1, v2, v3);
  return sub_1C8D888A0();
}

uint64_t sub_1C8D4B718(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  if ((sub_1C8CFBFEC(*(void **)a1, *(void **)a2) & 1) == 0) {
    return 0;
  }
  sub_1C8CA3CF8(v2, v3);
  sub_1C8CA3CF8(v4, v5);
  char v6 = sub_1C8D01FBC(v2, v3, v4, v5);
  sub_1C8CA3D5C(v4, v5);
  sub_1C8CA3D5C(v2, v3);
  return v6 & 1;
}

unint64_t sub_1C8D4B7B8(uint64_t a1)
{
  unint64_t result = sub_1C8D4B7E0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D4B7E0()
{
  unint64_t result = qword_1EA5676A0;
  if (!qword_1EA5676A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5676A0);
  }
  return result;
}

unint64_t sub_1C8D4B834(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C8D4B864();
  unint64_t result = sub_1C8D4B8B8();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C8D4B864()
{
  unint64_t result = qword_1EA5676A8;
  if (!qword_1EA5676A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5676A8);
  }
  return result;
}

unint64_t sub_1C8D4B8B8()
{
  unint64_t result = qword_1EA5676B0;
  if (!qword_1EA5676B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5676B0);
  }
  return result;
}

unint64_t sub_1C8D4B910()
{
  unint64_t result = qword_1EA5676B8;
  if (!qword_1EA5676B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5676B8);
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_FieldMask()
{
  return &type metadata for Google_Protobuf_FieldMask;
}

uint64_t sub_1C8D4B974(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return 0;
  }
  sub_1C8D883E0();
  return sub_1C8D88480();
}

uint64_t sub_1C8D4B9F4(uint64_t result, unint64_t a2)
{
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = result & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v3 = 4 * v2;
  unint64_t v4 = 15;
  if (v2)
  {
    do
    {
      while (1)
      {
        uint64_t v6 = sub_1C8D88480();
        uint64_t v8 = v7;
        unint64_t v9 = sub_1C8D883D0();
        if (v6 != 47 || v8 != 0xE100000000000000) {
          break;
        }
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v4 = v9;
        if (v3 <= v9 >> 14) {
          goto LABEL_12;
        }
      }
      char v5 = sub_1C8D887C0();
      unint64_t result = swift_bridgeObjectRelease();
      if (v5) {
        unint64_t v4 = v9;
      }
    }
    while (v3 > v9 >> 14);
  }
LABEL_12:
  if (v3 < v4 >> 14)
  {
    __break(1u);
  }
  else
  {
    uint64_t v10 = sub_1C8D884B0();
    uint64_t v11 = MEMORY[0x1CB772ED0](v10);
    swift_bridgeObjectRelease();
    return v11;
  }
  return result;
}

uint64_t sub_1C8D4BB40()
{
  uint64_t v0 = sub_1C8D88600();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0, v2);
  unint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C8D885F0();
  MEMORY[0x1F4188790](v5, v6);
  uint64_t v7 = sub_1C8D88260();
  MEMORY[0x1F4188790](v7 - 8, v8);
  sub_1C8D4CBDC();
  sub_1C8D88250();
  v10[1] = MEMORY[0x1E4FBC860];
  sub_1C8D4CC1C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567708);
  sub_1C8D4CC74();
  sub_1C8D88640();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, *MEMORY[0x1E4FBCC58], v0);
  uint64_t result = sub_1C8D88610();
  qword_1EA5676C0 = result;
  return result;
}

void *sub_1C8D4BD40()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5676D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C8D90810;
  *(void *)(inited + 32) = 0xD000000000000013;
  *(void *)(inited + 40) = 0x80000001C8D8A6D0;
  unint64_t v1 = sub_1C8CC415C();
  *(void *)(inited + 48) = &type metadata for Google_Protobuf_Any;
  *(void *)(inited + 56) = v1;
  *(void *)(inited + 64) = 0xD000000000000019;
  *(void *)(inited + 72) = 0x80000001C8D8A8A0;
  unint64_t v2 = sub_1C8D4A62C();
  *(void *)(inited + 80) = &type metadata for Google_Protobuf_BoolValue;
  *(void *)(inited + 88) = v2;
  *(void *)(inited + 96) = 0xD00000000000001ALL;
  *(void *)(inited + 104) = 0x80000001C8D8A8E0;
  unint64_t v3 = sub_1C8D4A9B8();
  *(void *)(inited + 112) = &type metadata for Google_Protobuf_BytesValue;
  *(void *)(inited + 120) = v3;
  *(void *)(inited + 128) = 0xD00000000000001BLL;
  *(void *)(inited + 136) = 0x80000001C8D8A7E0;
  unint64_t v4 = sub_1C8D49C3C();
  *(void *)(inited + 144) = &type metadata for Google_Protobuf_DoubleValue;
  *(void *)(inited + 152) = v4;
  *(void *)(inited + 160) = 0xD000000000000018;
  *(void *)(inited + 168) = 0x80000001C8D8A930;
  unint64_t v5 = sub_1C8D4CA8C();
  *(void *)(inited + 176) = &type metadata for Google_Protobuf_Duration;
  *(void *)(inited + 184) = v5;
  *(void *)(inited + 192) = 0xD000000000000015;
  *(void *)(inited + 200) = 0x80000001C8D8A6B0;
  unint64_t v6 = sub_1C8D41BCC();
  *(void *)(inited + 208) = &type metadata for Google_Protobuf_Empty;
  *(void *)(inited + 216) = v6;
  *(void *)(inited + 224) = 0xD000000000000019;
  *(void *)(inited + 232) = 0x80000001C8D8A900;
  unint64_t v7 = sub_1C8D4B864();
  *(void *)(inited + 240) = &type metadata for Google_Protobuf_FieldMask;
  *(void *)(inited + 248) = v7;
  *(void *)(inited + 256) = 0xD00000000000001ALL;
  *(void *)(inited + 264) = 0x80000001C8D8A800;
  unint64_t v8 = sub_1C8D49DE4();
  *(void *)(inited + 272) = &type metadata for Google_Protobuf_FloatValue;
  *(void *)(inited + 280) = v8;
  *(void *)(inited + 288) = 0xD00000000000001ALL;
  *(void *)(inited + 296) = 0x80000001C8D8A860;
  unint64_t v9 = sub_1C8D4A2DC();
  *(void *)(inited + 304) = &type metadata for Google_Protobuf_Int32Value;
  *(void *)(inited + 312) = v9;
  *(void *)(inited + 320) = 0xD00000000000001ALL;
  *(void *)(inited + 328) = 0x80000001C8D8A820;
  unint64_t v10 = sub_1C8D49F8C();
  *(void *)(inited + 336) = &type metadata for Google_Protobuf_Int64Value;
  *(void *)(inited + 344) = v10;
  *(void *)(inited + 352) = 0xD000000000000019;
  *(void *)(inited + 360) = 0x80000001C8D8A950;
  unint64_t v11 = sub_1C8D4CAE0();
  *(void *)(inited + 368) = &type metadata for Google_Protobuf_ListValue;
  *(void *)(inited + 376) = v11;
  *(void *)(inited + 384) = 0xD00000000000001BLL;
  *(void *)(inited + 392) = 0x80000001C8D8A8C0;
  unint64_t v12 = sub_1C8D4A7D4();
  *(void *)(inited + 400) = &type metadata for Google_Protobuf_StringValue;
  *(void *)(inited + 408) = v12;
  *(void *)(inited + 416) = 0xD000000000000016;
  *(void *)(inited + 424) = 0x80000001C8D8A970;
  unint64_t v13 = sub_1C8D4CB34();
  *(void *)(inited + 432) = &type metadata for Google_Protobuf_Struct;
  *(void *)(inited + 440) = v13;
  *(void *)(inited + 448) = 0xD000000000000019;
  *(void *)(inited + 456) = 0x80000001C8D8A5B0;
  unint64_t v14 = sub_1C8D22778();
  *(void *)(inited + 464) = &type metadata for Google_Protobuf_Timestamp;
  *(void *)(inited + 472) = v14;
  *(void *)(inited + 480) = 0xD00000000000001BLL;
  *(void *)(inited + 488) = 0x80000001C8D8A880;
  unint64_t v15 = sub_1C8D4A484();
  *(void *)(inited + 496) = &type metadata for Google_Protobuf_UInt32Value;
  *(void *)(inited + 504) = v15;
  *(void *)(inited + 512) = 0xD00000000000001BLL;
  *(void *)(inited + 520) = 0x80000001C8D8A840;
  unint64_t v16 = sub_1C8D4A134();
  *(void *)(inited + 528) = &type metadata for Google_Protobuf_UInt64Value;
  *(void *)(inited + 536) = v16;
  *(void *)(inited + 544) = 0xD000000000000015;
  *(void *)(inited + 552) = 0x80000001C8D8A990;
  unint64_t v17 = sub_1C8D4CB88();
  *(void *)(inited + 560) = &type metadata for Google_Protobuf_Value;
  *(void *)(inited + 568) = v17;
  uint64_t result = (void *)sub_1C8D84700(inited);
  off_1EA5676C8 = result;
  return result;
}

uint64_t static Google_Protobuf_Any.register(messageType:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (*(uint64_t (**)(void))(a2 + 24))();
  uint64_t v6 = v5;
  unsigned __int8 v15 = 0;
  if (qword_1EA565C70 != -1) {
    swift_once();
  }
  unint64_t v7 = (void *)qword_1EA5676C0;
  unint64_t v8 = (void *)swift_allocObject();
  v8[2] = v4;
  v8[3] = v6;
  void v8[4] = &v15;
  v8[5] = a1;
  v8[6] = a2;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1C8D4C3AC;
  *(void *)(v9 + 24) = v8;
  aBlock[4] = sub_1C8D4C3F4;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C8D4C41C;
  aBlock[3] = &block_descriptor;
  unint64_t v10 = _Block_copy(aBlock);
  unint64_t v11 = v7;
  swift_retain();
  swift_release();
  dispatch_sync(v11, v10);

  _Block_release(v10);
  LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v10)
  {
    __break(1u);
  }
  else
  {
    uint64_t v13 = v15;
    swift_release();
    return v13;
  }
  return result;
}

uint64_t sub_1C8D4C200(uint64_t a1, uint64_t a2, BOOL *a3, uint64_t a4, uint64_t a5)
{
  if (qword_1EA565C78 != -1) {
    swift_once();
  }
  swift_beginAccess();
  unint64_t v10 = off_1EA5676C8;
  if (!*((void *)off_1EA5676C8 + 2)) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_1C8CA5C9C(a1, a2);
  if ((v12 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    swift_endAccess();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v17 = off_1EA5676C8;
    off_1EA5676C8 = (_UNKNOWN *)0x8000000000000000;
    sub_1C8D864E0(a4, a5, a1, a2, isUniquelyReferenced_nonNull_native);
    off_1EA5676C8 = v17;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_endAccess();
    BOOL v15 = 1;
    goto LABEL_8;
  }
  uint64_t v13 = *(void *)(v10[7] + 16 * v11);
  swift_endAccess();
  uint64_t result = swift_bridgeObjectRelease();
  BOOL v15 = v13 == a4;
LABEL_8:
  *a3 = v15;
  return result;
}

uint64_t sub_1C8D4C374()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1C8D4C3AC()
{
  return sub_1C8D4C200(*(void *)(v0 + 16), *(void *)(v0 + 24), *(BOOL **)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_1C8D4C3BC(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1C8D4C3E4()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C8D4C3F4()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1C8D4C41C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t static Google_Protobuf_Any.messageType(forTypeURL:)(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_1C8D4B9F4(a1, a2);
  uint64_t v4 = v3;
  v13[0] = 0;
  v13[1] = 0;
  if (qword_1EA565C70 != -1) {
    swift_once();
  }
  uint64_t v5 = (void *)qword_1EA5676C0;
  uint64_t v6 = (void *)swift_allocObject();
  _OWORD v6[2] = v13;
  v6[3] = v2;
  v6[4] = v4;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1C8D4C89C;
  *(void *)(v7 + 24) = v6;
  uint64_t v12[4] = sub_1C8D4CCD0;
  v12[5] = v7;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 1107296256;
  char v12[2] = sub_1C8D4C41C;
  v12[3] = &block_descriptor_13;
  unint64_t v8 = _Block_copy(v12);
  uint64_t v9 = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v8);

  _Block_release(v8);
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v8)
  {
    __break(1u);
  }
  else
  {
    uint64_t v11 = v13[0];
    swift_bridgeObjectRelease();
    swift_release();
    return v11;
  }
  return result;
}

uint64_t static Google_Protobuf_Any.messageType(forMessageName:)(uint64_t a1, uint64_t a2)
{
  v13[0] = 0;
  v13[1] = 0;
  if (qword_1EA565C70 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)qword_1EA5676C0;
  uint64_t v5 = (void *)swift_allocObject();
  long long v5[2] = v13;
  v5[3] = a1;
  long long v5[4] = a2;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_1C8D4CCE8;
  *(void *)(v6 + 24) = v5;
  uint64_t v12[4] = sub_1C8D4CCD0;
  v12[5] = v6;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 1107296256;
  char v12[2] = sub_1C8D4C41C;
  v12[3] = &block_descriptor_24;
  uint64_t v7 = _Block_copy(v12);
  unint64_t v8 = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v8, v7);

  _Block_release(v7);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    uint64_t v11 = v13[0];
    swift_release();
    return v11;
  }
  return result;
}

__n128 sub_1C8D4C7C8(__n128 *a1, uint64_t a2, uint64_t a3)
{
  if (qword_1EA565C78 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v6 = off_1EA5676C8;
  __n128 v10 = 0u;
  if (*((void *)off_1EA5676C8 + 2))
  {
    swift_bridgeObjectRetain();
    unint64_t v7 = sub_1C8CA5C9C(a2, a3);
    if (v8) {
      __n128 v10 = *(__n128 *)(v6[7] + 16 * v7);
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  __n128 result = v10;
  *a1 = v10;
  return result;
}

double sub_1C8D4C89C()
{
  *(void *)&double result = sub_1C8D4C7C8((__n128 *)v0[2], v0[3], v0[4]).n128_u64[0];
  return result;
}

uint64_t sub_1C8D4C8A8()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C8D4C8B8()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C8D4C8F0()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C8D4C900(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v16 = a4;
  uint64_t v17 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v15);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(boxed_opaque_existential_1, a1, a4);
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v10 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v10 = a2 & 0xFFFFFFFFFFFFLL;
  }
  swift_bridgeObjectRetain();
  if (!v10) {
    goto LABEL_10;
  }
  uint64_t v11 = sub_1C8D4B974(a2, a3);
  if (!v12) {
    goto LABEL_10;
  }
  if (v11 != 47 || v12 != 0xE100000000000000)
  {
    char v13 = sub_1C8D887C0();
    swift_bridgeObjectRelease();
    if (v13) {
      goto LABEL_11;
    }
LABEL_10:
    sub_1C8D88400();
    goto LABEL_11;
  }
  swift_bridgeObjectRelease();
LABEL_11:
  __swift_project_boxed_opaque_existential_1(v15, v16);
  swift_getDynamicType();
  (*(void (**)(void))(v17 + 24))();
  swift_bridgeObjectRetain();
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  return a2;
}

unint64_t sub_1C8D4CA8C()
{
  unint64_t result = qword_1EA5676D8;
  if (!qword_1EA5676D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5676D8);
  }
  return result;
}

unint64_t sub_1C8D4CAE0()
{
  unint64_t result = qword_1EA5676E0;
  if (!qword_1EA5676E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5676E0);
  }
  return result;
}

unint64_t sub_1C8D4CB34()
{
  unint64_t result = qword_1EA5676E8;
  if (!qword_1EA5676E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5676E8);
  }
  return result;
}

unint64_t sub_1C8D4CB88()
{
  unint64_t result = qword_1EA5676F0;
  if (!qword_1EA5676F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5676F0);
  }
  return result;
}

unint64_t sub_1C8D4CBDC()
{
  unint64_t result = qword_1EA5676F8;
  if (!qword_1EA5676F8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA5676F8);
  }
  return result;
}

unint64_t sub_1C8D4CC1C()
{
  unint64_t result = qword_1EA567700;
  if (!qword_1EA567700)
  {
    sub_1C8D885F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567700);
  }
  return result;
}

unint64_t sub_1C8D4CC74()
{
  unint64_t result = qword_1EA567710;
  if (!qword_1EA567710)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA567708);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567710);
  }
  return result;
}

BOOL static TextFormatDecodingError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t TextFormatDecodingError.hash(into:)()
{
  return sub_1C8D88850();
}

uint64_t TextFormatDecodingError.hashValue.getter()
{
  return sub_1C8D888A0();
}

unint64_t sub_1C8D4CD78()
{
  unint64_t result = qword_1EA567718;
  if (!qword_1EA567718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567718);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TextFormatDecodingError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TextFormatDecodingError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C8D4CF28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextFormatDecodingError()
{
  return &type metadata for TextFormatDecodingError;
}

uint64_t dispatch thunk of static _ProtoNameProviding._protobuf_nameMap.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t (*sub_1C8D4CF74(uint64_t a1))()
{
  unint64_t result = sub_1C8CB42BC();
  if (!v2)
  {
    unint64_t v6 = v5;
    if (v5)
    {
      uint64_t v7 = (uint64_t)result;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for AnyMessageStorage();
        swift_allocObject();
        uint64_t v8 = swift_retain();
        *(void *)(v1 + 16) = sub_1C8D66554(v8);
        swift_release();
      }
      swift_retain();
      sub_1C8D63E8C(v7, v6, a1);
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for AnyMessageStorage();
        swift_allocObject();
        uint64_t v9 = swift_retain();
        *(void *)(v1 + 16) = sub_1C8D66554(v9);
        swift_release();
      }
      uint64_t v10 = swift_retain();
      sub_1C8D4D0AC(v10, a1);
    }
    return (uint64_t (*)())swift_release();
  }
  return result;
}

void sub_1C8D4D0AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = a1 + 32;
  swift_beginAccess();
  swift_beginAccess();
LABEL_2:
  char v6 = *(unsigned char *)(a2 + 73);
  uint64_t v7 = *(unsigned __int8 **)(a2 + 40);
  uint64_t v8 = *(unsigned __int8 **)(a2 + 48);
  if ((v6 & 1) == 0 && v7 != v8 && *v7 == *(unsigned __int8 *)(a2 + 72))
  {
    *(void *)(a2 + 40) = v7 + 1;
    sub_1C8CB2098();
    return;
  }
  uint64_t v9 = *(void *)(a2 + 64);
  if (v9 >= 1 && v7 != v8)
  {
    int v11 = *v7;
    if (v11 == 44 || v11 == 59)
    {
      *(void *)(a2 + 40) = ++v7;
      if (v7 == v8) {
        goto LABEL_29;
      }
      while (1)
      {
        uint64_t v13 = *v7;
        if (v13 > 0x23) {
          break;
        }
        if (((1 << v13) & 0x100002600) != 0)
        {
          uint64_t v12 = v7 + 1;
          *(void *)(a2 + 40) = v7 + 1;
        }
        else
        {
          if (v13 != 35) {
            break;
          }
          *(void *)(a2 + 40) = v7 + 1;
          if (v7 + 1 == v8) {
            goto LABEL_29;
          }
          int v14 = v7[1];
          uint64_t v12 = v7 + 2;
          *(void *)(a2 + 40) = v7 + 2;
          if (v14 != 10 && v14 != 13)
          {
            if (v12 == v8) {
              goto LABEL_29;
            }
            int v15 = v7[2];
            uint64_t v12 = v7 + 3;
            *(void *)(a2 + 40) = v7 + 3;
            if (v15 != 10 && v15 != 13)
            {
              while (v12 != v8)
              {
                int v17 = *v12++;
                int v16 = v17;
                *(void *)(a2 + 40) = v12;
                if (v17 == 10 || v16 == 13) {
                  goto LABEL_14;
                }
              }
              goto LABEL_29;
            }
          }
        }
LABEL_14:
        uint64_t v7 = v12;
        if (v12 == v8) {
          goto LABEL_29;
        }
      }
    }
  }
  if (v7 == v8) {
    goto LABEL_29;
  }
  while (1)
  {
    uint64_t v29 = *v7;
    if (v29 > 0x23)
    {
LABEL_98:
      if (v7 == v8 || v29 != 91) {
        goto LABEL_29;
      }
      uint64_t v65 = (char *)(v7 + 1);
      *(void *)(a2 + 40) = v7 + 1;
      if (v7 + 1 == v8) {
        goto LABEL_158;
      }
      if ((*v65 & 0xDFu) - 91 < 0xFFFFFFE6) {
        goto LABEL_158;
      }
      *(void *)(a2 + 40) = v7 + 2;
      if (v7 + 2 == v8) {
        goto LABEL_158;
      }
      uint64_t v66 = 0;
      while (1)
      {
        int v67 = v7[v66 + 2];
        BOOL v68 = (v67 - 58) > 0xFFFFFFF5 || (v67 & 0xFFFFFFDF) - 91 > 0xFFFFFFE5;
        if (!v68 && (v67 - 46) >= 2 && v67 != 95) {
          break;
        }
        *(void *)(a2 + 40) = &v7[v66++ + 3];
        if (&v7[v66 + 2] == v8) {
          goto LABEL_158;
        }
      }
      if (v67 != 93) {
        goto LABEL_158;
      }
      uint64_t v69 = sub_1C8CA96A4(v65, v66 + 1);
      if (!v70) {
        goto LABEL_158;
      }
      uint64_t v71 = v70;
      long long v72 = *(unsigned __int8 **)(a2 + 40);
      if (v72 == v8 || *v72 != 93) {
        goto LABEL_157;
      }
      long long v73 = v69;
      char v74 = v72 + 1;
      *(void *)(a2 + 40) = v72 + 1;
      char v75 = *(unsigned __int8 **)(a2 + 48);
      if (v74 != v75)
      {
        do
        {
          uint64_t v84 = *v74;
          if (v84 > 0x23) {
            break;
          }
          if (((1 << v84) & 0x100002600) != 0)
          {
            char v83 = v74 + 1;
            *(void *)(a2 + 40) = v74 + 1;
          }
          else
          {
            if (v84 != 35) {
              break;
            }
            *(void *)(a2 + 40) = v74 + 1;
            if (v74 + 1 == v75) {
              break;
            }
            int v85 = v74[1];
            char v83 = v74 + 2;
            *(void *)(a2 + 40) = v74 + 2;
            if (v85 != 10 && v85 != 13)
            {
              if (v83 == v75) {
                break;
              }
              int v86 = v74[2];
              char v83 = v74 + 3;
              *(void *)(a2 + 40) = v74 + 3;
              if (v86 != 10 && v86 != 13)
              {
                while (v83 != v75)
                {
                  int v88 = *v83++;
                  int v87 = v88;
                  *(void *)(a2 + 40) = v83;
                  if (v88 == 10 || v87 == 13) {
                    goto LABEL_126;
                  }
                }
                break;
              }
            }
          }
LABEL_126:
          char v74 = v83;
        }
        while (v83 != v75);
      }
      if (!*(void *)(a2 + 24))
      {
        swift_bridgeObjectRelease();
LABEL_161:
        sub_1C8CB47EC();
        swift_allocError();
        char v99 = 7;
        goto LABEL_152;
      }
      sub_1C8CA425C(a2, (uint64_t)&aBlock);
      int v76 = v110;
      int v77 = v111;
      __swift_project_boxed_opaque_existential_1(&aBlock, (uint64_t)v110);
      uint64_t v78 = *(void *)(a2 + 112);
      if (!v78) {
        goto LABEL_165;
      }
      uint64_t v22 = (*((uint64_t (**)(uint64_t, void, uint64_t (*)(), uint64_t, void *, uint64_t (*)()))v77
             + 2))(v78, *(void *)(a2 + 120), v73, v71, v76, v77);
      char v80 = v79;
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
      if (v80) {
        goto LABEL_161;
      }
      uint64_t v81 = *(void *)(a2 + 64);
      BOOL v82 = __OFADD__(v81, 1);
      uint64_t v21 = v81 + 1;
      if (v82) {
        goto LABEL_163;
      }
LABEL_34:
      *(void *)(a2 + 64) = v21;
      if (v22 != 1)
      {
        if (v22 != 2) {
          goto LABEL_2;
        }
        sub_1C8D3B90C(v5, (uint64_t)&v113);
        uint64_t v105 = v5;
        if (!v116)
        {
          unint64_t v51 = *((void *)&v113 + 1);
          uint64_t v27 = v113;
          goto LABEL_143;
        }
        if (v116 == 1)
        {
          sub_1C8CA4528(&v113, (uint64_t)&aBlock);
          uint64_t v23 = (uint64_t)v110;
          uint64_t v24 = (uint64_t)v111;
          __swift_project_boxed_opaque_existential_1(&aBlock, (uint64_t)v110);
          uint64_t v25 = Message.serializedData(partial:)(1, v23, v24);
          if (v3)
          {
            MEMORY[0x1CB7736A0](v3);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
            uint64_t v27 = 0;
            uint64_t v3 = 0;
LABEL_142:
            unint64_t v51 = 0xC000000000000000;
LABEL_143:
            sub_1C8CB2098();
            int64_t v91 = *(unsigned char **)(a2 + 40);
            if (v91 == *(unsigned char **)(a2 + 48) || *v91 != 58)
            {
              sub_1C8CB47EC();
              swift_allocError();
              *uint64_t v100 = 0;
              swift_willThrow();
LABEL_154:
              uint64_t aBlock = v27;
              *(void *)&long long v109 = v51;
              LOBYTE(v112) = 0;
              sub_1C8D42C3C((uint64_t)&aBlock, (uint64_t)&v113);
              swift_beginAccess();
              sub_1C8D3B968((uint64_t)&v113, v105);
LABEL_148:
              swift_endAccess();
              return;
            }
            *(void *)(a2 + 40) = v91 + 1;
            sub_1C8CB2098();
            uint64_t v92 = sub_1C8CB2F5C();
            if (v3) {
              goto LABEL_154;
            }
            uint64_t v94 = v92;
            uint64_t v95 = v93;
            sub_1C8CA3D5C(v27, v51);
            uint64_t aBlock = v94;
            *(void *)&long long v109 = v95;
            LOBYTE(v112) = 0;
            sub_1C8D42C3C((uint64_t)&aBlock, (uint64_t)&v113);
            uint64_t v5 = v105;
            swift_beginAccess();
            sub_1C8D3B968((uint64_t)&v113, v105);
            swift_endAccess();
            goto LABEL_2;
          }
          uint64_t v27 = v25;
          unint64_t v51 = v26;
LABEL_123:
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
          goto LABEL_143;
        }
        long long v52 = v113;
        uint64_t v103 = v114;
        char v102 = v115;
        uint64_t v54 = *(void *)(a1 + 16);
        unint64_t v53 = *(void *)(a1 + 24);
        swift_bridgeObjectRetain();
        uint64_t v55 = sub_1C8D4B9F4(v54, v53);
        uint64_t v57 = v56;
        uint64_t v106 = 0;
        uint64_t v107 = 0;
        if (qword_1EA565C70 != -1) {
          swift_once();
        }
        int v58 = (void *)qword_1EA5676C0;
        uint64_t v59 = (void *)swift_allocObject();
        v59[2] = &v106;
        v59[3] = v55;
        v59[4] = v57;
        uint64_t v60 = swift_allocObject();
        *(void *)(v60 + 16) = sub_1C8D4C89C;
        *(void *)(v60 + 24) = v59;
        uint64_t v111 = sub_1C8D4E6EC;
        uint64_t v112 = v60;
        uint64_t aBlock = MEMORY[0x1E4F143A8];
        *(void *)&long long v109 = 1107296256;
        *((void *)&v109 + 1) = sub_1C8D4C41C;
        uint64_t v110 = &block_descriptor_0;
        unint64_t v61 = _Block_copy(&aBlock);
        uint64_t v62 = v58;
        swift_bridgeObjectRetain();
        swift_retain();
        swift_release();
        dispatch_sync(v62, v61);

        _Block_release(v61);
        LOBYTE(v61) = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if (v61)
        {
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
          return;
        }
        uint64_t v63 = v106;
        uint64_t v64 = v107;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        if (v63)
        {
          uint64_t v106 = v103;
          LOBYTE(v107) = v102;
          sub_1C8D65ABC(v52, *((unint64_t *)&v52 + 1), (uint64_t)&v106, v63, v64, &aBlock);
          if (!v3)
          {
            uint64_t v89 = (uint64_t)v110;
            uint64_t v90 = (uint64_t)v111;
            __swift_project_boxed_opaque_existential_1(&aBlock, (uint64_t)v110);
            uint64_t v27 = Message.serializedData(partial:)(1, v89, v90);
            unint64_t v51 = v96;
            sub_1C8CA3D5C(v52, *((unint64_t *)&v52 + 1));
            goto LABEL_123;
          }
          MEMORY[0x1CB7736A0](v3);
          sub_1C8CA3D5C(v52, *((unint64_t *)&v52 + 1));
          uint64_t v3 = 0;
        }
        else
        {
          sub_1C8CA3D5C(v52, *((unint64_t *)&v52 + 1));
        }
        uint64_t v27 = 0;
        goto LABEL_142;
      }
      swift_beginAccess();
      uint64_t v35 = *(unsigned __int8 **)(a2 + 40);
      uint64_t v34 = *(unsigned __int8 **)(a2 + 48);
      if (v35 != v34)
      {
        while (1)
        {
          uint64_t v40 = *v35;
          if (v40 > 0x23) {
            break;
          }
          if (((1 << v40) & 0x100002600) != 0)
          {
            __int16 v39 = v35 + 1;
            *(void *)(a2 + 40) = v35 + 1;
          }
          else
          {
            if (v40 != 35) {
              break;
            }
            *(void *)(a2 + 40) = v35 + 1;
            if (v35 + 1 == v34) {
              goto LABEL_147;
            }
            int v41 = v35[1];
            __int16 v39 = v35 + 2;
            *(void *)(a2 + 40) = v35 + 2;
            if (v41 != 10 && v41 != 13)
            {
              if (v39 == v34) {
                goto LABEL_147;
              }
              int v42 = v35[2];
              __int16 v39 = v35 + 3;
              *(void *)(a2 + 40) = v35 + 3;
              if (v42 != 10 && v42 != 13)
              {
                while (v39 != v34)
                {
                  int v44 = *v39++;
                  int v43 = v44;
                  *(void *)(a2 + 40) = v39;
                  if (v44 == 10 || v43 == 13) {
                    goto LABEL_62;
                  }
                }
                goto LABEL_147;
              }
            }
          }
LABEL_62:
          uint64_t v35 = v39;
          if (v39 == v34) {
            goto LABEL_147;
          }
        }
      }
      if (v35 == v34 || *v35 != 58)
      {
LABEL_147:
        sub_1C8CB47EC();
        swift_allocError();
        *uint64_t v97 = 0;
        swift_willThrow();
        goto LABEL_148;
      }
      uint64_t v36 = v35 + 1;
      *(void *)(a2 + 40) = v36;
      if (v36 != v34)
      {
        do
        {
          uint64_t v46 = *v36;
          if (v46 > 0x23) {
            break;
          }
          if (((1 << v46) & 0x100002600) != 0)
          {
            uint64_t v45 = v36 + 1;
            *(void *)(a2 + 40) = v36 + 1;
          }
          else
          {
            if (v46 != 35) {
              break;
            }
            *(void *)(a2 + 40) = v36 + 1;
            if (v36 + 1 == v34) {
              break;
            }
            int v47 = v36[1];
            uint64_t v45 = v36 + 2;
            *(void *)(a2 + 40) = v36 + 2;
            if (v47 != 10 && v47 != 13)
            {
              if (v45 == v34) {
                break;
              }
              int v48 = v36[2];
              uint64_t v45 = v36 + 3;
              *(void *)(a2 + 40) = v36 + 3;
              if (v48 != 10 && v48 != 13)
              {
                while (v45 != v34)
                {
                  int v50 = *v45++;
                  int v49 = v50;
                  *(void *)(a2 + 40) = v45;
                  if (v50 == 10 || v49 == 13) {
                    goto LABEL_77;
                  }
                }
                break;
              }
            }
          }
LABEL_77:
          uint64_t v36 = v45;
        }
        while (v45 != v34);
      }
      uint64_t v37 = sub_1C8CB2CA4();
      if (v3) {
        goto LABEL_148;
      }
      *(void *)(a1 + 16) = v37;
      *(void *)(a1 + 24) = v38;
      swift_endAccess();
      swift_bridgeObjectRelease();
      goto LABEL_2;
    }
    if (((1 << v29) & 0x100002600) != 0)
    {
      long long v28 = v7 + 1;
      *(void *)(a2 + 40) = v7 + 1;
      goto LABEL_41;
    }
    if (v29 != 35) {
      goto LABEL_98;
    }
    *(void *)(a2 + 40) = v7 + 1;
    if (v7 + 1 == v8) {
      goto LABEL_29;
    }
    int v30 = v7[1];
    long long v28 = v7 + 2;
    *(void *)(a2 + 40) = v7 + 2;
    if (v30 != 10 && v30 != 13)
    {
      if (v28 == v8) {
        goto LABEL_29;
      }
      int v31 = v7[2];
      long long v28 = v7 + 3;
      *(void *)(a2 + 40) = v7 + 3;
      if (v31 != 10 && v31 != 13) {
        break;
      }
    }
LABEL_41:
    uint64_t v7 = v28;
    if (v28 == v8) {
      goto LABEL_29;
    }
  }
  while (v28 != v8)
  {
    int v33 = *v28++;
    int v32 = v33;
    *(void *)(a2 + 40) = v28;
    if (v33 == 10 || v32 == 13) {
      goto LABEL_41;
    }
  }
LABEL_29:
  if (!*(void *)(a2 + 80)) {
    goto LABEL_164;
  }
  int v18 = *(void **)(a2 + 104);
  uint64_t aBlock = *(void *)(a2 + 80);
  long long v109 = *(_OWORD *)(a2 + 88);
  uint64_t v110 = v18;
  uint64_t v19 = sub_1C8CB438C((uint64_t)&aBlock);
  if (!v3)
  {
    if (v20)
    {
      if ((v6 & 1) == 0)
      {
        sub_1C8CB47EC();
        swift_allocError();
        char v99 = 3;
LABEL_152:
        *uint64_t v98 = v99;
        goto LABEL_159;
      }
    }
    else
    {
      uint64_t v21 = v9 + 1;
      if (!__OFADD__(v9, 1))
      {
        uint64_t v22 = v19;
        goto LABEL_34;
      }
      __break(1u);
LABEL_157:
      swift_bridgeObjectRelease();
LABEL_158:
      sub_1C8CB47EC();
      swift_allocError();
      *uint64_t v101 = 0;
LABEL_159:
      swift_willThrow();
    }
  }
}

uint64_t Google_Protobuf_Any.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t result = swift_beginAccess();
  uint64_t v4 = *(void *)(v1 + 16);
  unint64_t v3 = *(void *)(v1 + 24);
  uint64_t v5 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0) {
    uint64_t v5 = v4 & 0xFFFFFFFFFFFFLL;
  }
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_1C8D883C0();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t defaultAnyTypeURLPrefix.getter()
{
  return 0xD000000000000013;
}

uint64_t Google_Protobuf_Any.init(message:partial:typePrefix:)@<X0>(long long *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  sub_1C8CA425C((uint64_t)a1, (uint64_t)v25);
  if (a2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  }
  else
  {
    uint64_t v10 = v26;
    uint64_t v11 = v27;
    __swift_project_boxed_opaque_existential_1(v25, v26);
    char v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 32))(v10, v11);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    if ((v12 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      sub_1C8D0DC70();
      swift_allocError();
      *uint64_t v23 = 1;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    }
  }
  if (qword_1EA565C88 != -1) {
    swift_once();
  }
  uint64_t v13 = qword_1EA575078;
  uint64_t v14 = *((void *)a1 + 3);
  uint64_t v15 = *((void *)a1 + 4);
  int v16 = __swift_project_boxed_opaque_existential_1(a1, v14);
  swift_retain();
  uint64_t v17 = sub_1C8D4C900((uint64_t)v16, a3, a4, v14, v15);
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for AnyMessageStorage();
    swift_allocObject();
    uint64_t v20 = swift_retain();
    uint64_t v21 = sub_1C8D66554(v20);
    swift_release();
    uint64_t v13 = v21;
  }
  swift_beginAccess();
  *(void *)(v13 + 16) = v17;
  *(void *)(v13 + 24) = v19;
  swift_bridgeObjectRelease();
  sub_1C8CA4528(a1, (uint64_t)v25);
  char v28 = 1;
  sub_1C8D42C3C((uint64_t)v25, (uint64_t)v24);
  swift_beginAccess();
  swift_retain();
  sub_1C8D3B968((uint64_t)v24, v13 + 32);
  swift_endAccess();
  uint64_t result = swift_release();
  *(_OWORD *)a5 = xmmword_1C8D8AD80;
  *(void *)(a5 + 16) = v13;
  return result;
}

uint64_t Google_Protobuf_Any.init(textFormatString:extensions:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  uint64_t v10 = sub_1C8D88340();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10, v12);
  uint64_t v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA565C88 != -1) {
    swift_once();
  }
  long long v27 = xmmword_1C8D8AD80;
  uint64_t v28 = qword_1EA575078;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v15 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v15 = a1 & 0xFFFFFFFFFFFFLL;
  }
  swift_retain();
  if (v15)
  {
    sub_1C8D88330();
    uint64_t v16 = sub_1C8D882F0();
    unint64_t v18 = v17;
    swift_bridgeObjectRelease();
    uint64_t v19 = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    if (v18 >> 60 != 15)
    {
      MEMORY[0x1F4188790](v19, v20);
      v26[-2] = a3;
      v26[-1] = &v27;
      switch(v18 >> 62)
      {
        case 1uLL:
          if (v16 >> 32 < (int)v16) {
            __break(1u);
          }
          swift_retain();
          sub_1C8D0DFE8((int)v16, v16 >> 32, sub_1C8D4E688);
          sub_1C8CAA9F0(v16, v18);
          break;
        case 2uLL:
          uint64_t v22 = *(void *)(v16 + 16);
          uint64_t v23 = *(void *)(v16 + 24);
          swift_retain();
          swift_retain();
          sub_1C8D0DFE8(v22, v23, sub_1C8D4E688);
          swift_release();
          swift_release();
          break;
        case 3uLL:
          memset(v26, 0, 14);
          uint64_t v21 = (char *)v26;
          goto LABEL_15;
        default:
          v26[0] = v16;
          LOWORD(v26[1]) = v18;
          BYTE2(v26[1]) = BYTE2(v18);
          BYTE3(v26[1]) = BYTE3(v18);
          BYTE4(v26[1]) = BYTE4(v18);
          BYTE5(v26[1]) = BYTE5(v18);
          uint64_t v21 = (char *)v26 + BYTE6(v18);
LABEL_15:
          sub_1C8D4E300((uint64_t)v26, (uint64_t)v21, a3);
          break;
      }
      sub_1C8CAA9F0(v16, v18);
      if (v5)
      {
        sub_1C8CA4F3C(a3);
        sub_1C8CA3D5C(v27, *((unint64_t *)&v27 + 1));
        return swift_release();
      }
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t result = sub_1C8CA4F3C(a3);
  uint64_t v25 = v28;
  *(_OWORD *)a4 = v27;
  *(void *)(a4 + 16) = v25;
  return result;
}

uint64_t sub_1C8D4E300(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = a2 - result;
    if (a2 - result >= 1)
    {
      unint64_t v7 = sub_1C8CC415C();
      sub_1C8CA87D8(a3, (uint64_t)v25);
      uint64_t v31 = 0;
      __int16 v32 = 256;
      long long v33 = 0u;
      long long v34 = 0u;
      long long v35 = 0u;
      sub_1C8CA87D8((uint64_t)v25, (uint64_t)&v22);
      type metadata accessor for DoubleParser();
      memset(v26, 0, sizeof(v26));
      uint64_t v27 = 0;
      uint64_t v8 = swift_allocObject();
      uint64_t v9 = swift_slowAlloc();
      *(void *)(v8 + 16) = v9;
      *(void *)(v8 + 24) = v9 + 128;
      uint64_t v28 = (unsigned __int8 *)v4;
      uint64_t v29 = (unsigned __int8 *)(v4 + v5);
      uint64_t v30 = v8;
      sub_1C8D4688C((uint64_t)&v22, (uint64_t)v26);
      uint64_t v10 = v28;
      if (v28 != v29)
      {
        do
        {
          uint64_t v12 = *v10;
          if (v12 > 0x23) {
            break;
          }
          if (((1 << v12) & 0x100002600) != 0)
          {
            uint64_t v11 = v10 + 1;
            uint64_t v28 = v10 + 1;
          }
          else
          {
            if (v12 != 35) {
              break;
            }
            uint64_t v28 = v10 + 1;
            if (v10 + 1 == v29) {
              break;
            }
            int v13 = v10[1];
            uint64_t v11 = v10 + 2;
            uint64_t v28 = v10 + 2;
            if (v13 != 10 && v13 != 13)
            {
              if (v11 == v29) {
                break;
              }
              int v14 = v10[2];
              uint64_t v11 = v10 + 3;
              uint64_t v28 = v10 + 3;
              if (v14 != 10 && v14 != 13)
              {
                while (v11 != v29)
                {
                  int v16 = *v11++;
                  int v15 = v16;
                  uint64_t v28 = v11;
                  if (v16 == 10 || v15 == 13) {
                    goto LABEL_6;
                  }
                }
                break;
              }
            }
          }
LABEL_6:
          uint64_t v10 = v11;
        }
        while (v11 != v29);
      }
      sub_1C8CA4F3C((uint64_t)&v22);
      uint64_t result = swift_conformsToProtocol2();
      if (result)
      {
        (*(void (**)(long long *__return_ptr, ValueMetadata *, uint64_t))(result + 8))(&v22, &type metadata for Google_Protobuf_Any, result);
        sub_1C8CA4F3C((uint64_t)v25);
        long long v21 = v22;
        uint64_t v18 = v23;
        uint64_t v19 = v24;
        sub_1C8CA469C(v33);
        long long v33 = v21;
        *(void *)&long long v34 = v18;
        *((void *)&v34 + 1) = v19;
        *(void *)&long long v35 = &type metadata for Google_Protobuf_Any;
        *((void *)&v35 + 1) = v7;
        sub_1C8D4CF74((uint64_t)v26);
        if (!v3 && v28 != v29)
        {
          sub_1C8CB47EC();
          swift_allocError();
          *uint64_t v20 = 2;
          swift_willThrow();
        }
        return sub_1C8D335FC((uint64_t)v26);
      }
      else
      {
        __break(1u);
      }
    }
  }
  return result;
}

uint64_t Google_Protobuf_Any.isA<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D66658(a1, a2, a3) & 1;
}

uint64_t sub_1C8D4E5B0(char *a1)
{
  char v1 = a1[1];
  v3[0] = *a1;
  v3[1] = v1;
  return sub_1C8D644EC(v3);
}

uint64_t sub_1C8D4E5E8(uint64_t *a1)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for AnyMessageStorage();
    swift_allocObject();
    uint64_t v3 = swift_retain();
    *(void *)(v1 + 16) = sub_1C8D66554(v3);
    swift_release();
  }
  swift_retain();
  sub_1C8D64CA8(a1);
  return swift_release();
}

uint64_t sub_1C8D4E688(uint64_t a1, uint64_t a2)
{
  return sub_1C8D4E300(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1C8D4E6A4()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C8D4E6DC()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C8D4E6EC()
{
  return sub_1C8D4C3BC(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

_DWORD *sub_1C8D4E70C(_DWORD *result)
{
  if (*(unsigned char *)(v1 + 33) == 5)
  {
    uint64_t v2 = *(void *)(v1 + 8);
    BOOL v3 = v2 < 4;
    uint64_t v4 = v2 - 4;
    if (v3)
    {
      sub_1C8D0E090();
      swift_allocError();
      *uint64_t v5 = 1;
      return (_DWORD *)swift_willThrow();
    }
    else
    {
      uint64_t v6 = *(void *)v1 + 4;
      *uint64_t result = **(_DWORD **)v1;
      *(void *)uint64_t v1 = v6;
      *(void *)(v1 + 8) = v4;
      *(unsigned char *)(v1 + 32) = 1;
    }
  }
  return result;
}

void sub_1C8D4E794()
{
  uint64_t v1 = v0[1];
  BOOL v2 = v1 < 4;
  uint64_t v3 = v1 - 4;
  if (v2)
  {
    sub_1C8D0E090();
    swift_allocError();
    *uint64_t v4 = 1;
    swift_willThrow();
  }
  else
  {
    *v0 += 4;
    v0[1] = v3;
  }
}

void sub_1C8D4E838(char **a1)
{
  int v4 = *((unsigned __int8 *)v1 + 33);
  if (v4 == 2)
  {
    unint64_t v11 = sub_1C8CA91C4();
    if (v2) {
      return;
    }
    unint64_t v12 = v11;
    if (!v11) {
      goto LABEL_29;
    }
    if ((v11 & 3) != 0) {
      goto LABEL_23;
    }
    unint64_t v13 = v11 >> 2;
    unint64_t v7 = *a1;
    int64_t v14 = *((void *)*a1 + 2);
    int64_t v15 = v14 + (v11 >> 2);
    if (__OFADD__(v14, v11 >> 2))
    {
      __break(1u);
    }
    else
    {
      char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
      *a1 = v7;
      if (!isUniquelyReferenced_nonNull_native || v15 > *((void *)v7 + 3) >> 1)
      {
        if (v14 <= v15) {
          int64_t v17 = v14 + (v12 >> 2);
        }
        else {
          int64_t v17 = v14;
        }
        unint64_t v7 = sub_1C8D5F24C(isUniquelyReferenced_nonNull_native, v17, 0, v7);
      }
      *a1 = v7;
      if (v12 >= 4)
      {
        uint64_t v18 = (uint64_t)v1[1];
        if (v18 >= 4)
        {
          do
          {
            int v20 = *(*v1)++;
            v1[1] = (int *)(v18 - 4);
            unint64_t v21 = *((void *)v7 + 2);
            unint64_t v22 = *((void *)v7 + 3);
            unint64_t v23 = v21 + 1;
            if (v21 >= v22 >> 1)
            {
              uint64_t v24 = v7;
              unint64_t v25 = *((void *)v7 + 2);
              uint64_t v26 = sub_1C8D5F24C((char *)(v22 > 1), v21 + 1, 1, v24);
              unint64_t v21 = v25;
              unint64_t v7 = v26;
            }
            *((void *)v7 + 2) = v23;
            *(_DWORD *)&v7[4 * v21 + 32] = v20;
            if (!--v13) {
              goto LABEL_9;
            }
            uint64_t v18 = (uint64_t)v1[1];
          }
          while (v18 > 3);
        }
        *a1 = v7;
LABEL_23:
        sub_1C8D0E090();
        swift_allocError();
        *uint64_t v19 = 1;
        swift_willThrow();
        return;
      }
    }
    __break(1u);
  }
  if (v4 == 5)
  {
    sub_1C8D4E794();
    if (!v2)
    {
      int v6 = v5;
      unint64_t v7 = *a1;
      char v8 = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v7;
      if ((v8 & 1) == 0)
      {
        unint64_t v7 = sub_1C8D5F24C(0, *((void *)v7 + 2) + 1, 1, v7);
        *a1 = v7;
      }
      unint64_t v10 = *((void *)v7 + 2);
      unint64_t v9 = *((void *)v7 + 3);
      if (v10 >= v9 >> 1) {
        unint64_t v7 = sub_1C8D5F24C((char *)(v9 > 1), v10 + 1, 1, v7);
      }
      *((void *)v7 + 2) = v10 + 1;
      *(_DWORD *)&v7[4 * v10 + 32] = v6;
LABEL_9:
      *a1 = v7;
LABEL_29:
      *((unsigned char *)v1 + 32) = 1;
    }
  }
}

void sub_1C8D4EA8C(char **a1)
{
  int v4 = *((unsigned __int8 *)v1 + 33);
  if (v4 == 2)
  {
    unint64_t v11 = sub_1C8CA91C4();
    if (v2) {
      return;
    }
    unint64_t v12 = v11;
    if (!v11) {
      goto LABEL_29;
    }
    if ((v11 & 7) != 0) {
      goto LABEL_23;
    }
    unint64_t v13 = v11 >> 3;
    unint64_t v7 = *a1;
    int64_t v14 = *((void *)*a1 + 2);
    int64_t v15 = v14 + (v11 >> 3);
    if (__OFADD__(v14, v11 >> 3))
    {
      __break(1u);
    }
    else
    {
      char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
      *a1 = v7;
      if (!isUniquelyReferenced_nonNull_native || v15 > *((void *)v7 + 3) >> 1)
      {
        if (v14 <= v15) {
          int64_t v17 = v14 + (v12 >> 3);
        }
        else {
          int64_t v17 = v14;
        }
        unint64_t v7 = sub_1C8D5F360(isUniquelyReferenced_nonNull_native, v17, 0, v7);
      }
      *a1 = v7;
      if (v12 >= 8)
      {
        uint64_t v18 = (uint64_t)v1[1];
        if (v18 >= 8)
        {
          do
          {
            uint64_t v20 = *(*v1)++;
            v1[1] = (uint64_t *)(v18 - 8);
            unint64_t v21 = *((void *)v7 + 2);
            unint64_t v22 = *((void *)v7 + 3);
            unint64_t v23 = v21 + 1;
            if (v21 >= v22 >> 1)
            {
              uint64_t v24 = v7;
              unint64_t v25 = *((void *)v7 + 2);
              uint64_t v26 = sub_1C8D5F360((char *)(v22 > 1), v21 + 1, 1, v24);
              unint64_t v21 = v25;
              unint64_t v7 = v26;
            }
            *((void *)v7 + 2) = v23;
            *(void *)&v7[8 * v21 + 32] = v20;
            if (!--v13) {
              goto LABEL_9;
            }
            uint64_t v18 = (uint64_t)v1[1];
          }
          while (v18 > 7);
        }
        *a1 = v7;
LABEL_23:
        sub_1C8D0E090();
        swift_allocError();
        *uint64_t v19 = 1;
        swift_willThrow();
        return;
      }
    }
    __break(1u);
  }
  if (v4 == 1)
  {
    sub_1C8CA9C40();
    if (!v2)
    {
      uint64_t v6 = v5;
      unint64_t v7 = *a1;
      char v8 = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v7;
      if ((v8 & 1) == 0)
      {
        unint64_t v7 = sub_1C8D5F360(0, *((void *)v7 + 2) + 1, 1, v7);
        *a1 = v7;
      }
      unint64_t v10 = *((void *)v7 + 2);
      unint64_t v9 = *((void *)v7 + 3);
      if (v10 >= v9 >> 1) {
        unint64_t v7 = sub_1C8D5F360((char *)(v9 > 1), v10 + 1, 1, v7);
      }
      *((void *)v7 + 2) = v10 + 1;
      *(void *)&v7[8 * v10 + 32] = v6;
LABEL_9:
      *a1 = v7;
LABEL_29:
      *((unsigned char *)v1 + 32) = 1;
    }
  }
}

uint64_t sub_1C8D4ECE0(uint64_t result, uint64_t (*a2)(void))
{
  uint64_t v5 = (uint64_t *)result;
  if (*(unsigned char *)(v2 + 33) != 2)
  {
    if (*(unsigned char *)(v2 + 33)) {
      return result;
    }
    uint64_t result = sub_1C8CA91C4();
    if (v3) {
      return result;
    }
    int v6 = result;
    uint64_t v7 = *v5;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v5 = v7;
    if ((result & 1) == 0)
    {
      uint64_t result = ((uint64_t (*)(void, uint64_t, uint64_t, uint64_t))a2)(0, *(void *)(v7 + 16) + 1, 1, v7);
      uint64_t v7 = result;
      *uint64_t v5 = result;
    }
    unint64_t v9 = *(void *)(v7 + 16);
    unint64_t v8 = *(void *)(v7 + 24);
    unint64_t v10 = v9 + 1;
    if (v9 >= v8 >> 1)
    {
      uint64_t result = ((uint64_t (*)(BOOL, unint64_t, uint64_t, uint64_t))a2)(v8 > 1, v9 + 1, 1, v7);
      unint64_t v10 = v9 + 1;
      uint64_t v7 = result;
    }
    *(void *)(v7 + 16) = v10;
    *(_DWORD *)(v7 + 4 * v9 + 32) = v6;
    *uint64_t v5 = v7;
LABEL_9:
    *(unsigned char *)(v2 + 32) = 1;
    return result;
  }
  uint64_t result = sub_1C8CA91C4();
  if (v3) {
    return result;
  }
  unint64_t v11 = *(void *)(v2 + 8);
  if ((v11 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_47;
  }
  uint64_t v12 = result;
  BOOL v13 = v11 >= result;
  unint64_t v14 = v11 - result;
  if (!v13)
  {
    sub_1C8D0E090();
    swift_allocError();
    *int64_t v15 = 1;
    return swift_willThrow();
  }
  int v16 = *(char **)v2;
  *(void *)v2 += result;
  *(void *)(v2 + 8) = v14;
  if (result >= 1)
  {
    uint64_t v17 = 0;
    uint64_t v18 = v16;
    uint64_t v19 = result;
    while (1)
    {
      int v20 = *v18++;
      if ((v20 & 0x80000000) == 0 && __OFADD__(v17++, 1)) {
        break;
      }
      if (!--v19) {
        goto LABEL_22;
      }
    }
    __break(1u);
  }
  uint64_t v17 = 0;
LABEL_22:
  uint64_t v55 = v16;
  uint64_t v22 = *v5;
  uint64_t v23 = *(void *)(*v5 + 16);
  uint64_t v24 = v23 + v17;
  if (__OFADD__(v23, v17))
  {
LABEL_47:
    __break(1u);
    return result;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v5 = v22;
  if (!isUniquelyReferenced_nonNull_native || v24 > *(void *)(v22 + 24) >> 1) {
    uint64_t v22 = a2();
  }
  *uint64_t v5 = v22;
  sub_1C8CA92A4(v2, (uint64_t)v47);
  uint64_t v26 = v48[7];
  char v27 = v49;
  sub_1C8CA9434((uint64_t)v48, (uint64_t)v46, (uint64_t *)&unk_1EBCB2D10);
  *(_WORD *)int v41 = 1;
  memset(&v41[8], 0, 56);
  LOBYTE(v42) = 1;
  long long v44 = xmmword_1C8D8BEE0;
  long long v45 = xmmword_1C8D8BEE0;
  *(void *)&long long v39 = v55;
  *((void *)&v39 + 1) = v12;
  long long v40 = (unint64_t)v55;
  sub_1C8CA88A8((uint64_t)v46, (uint64_t)&v41[16], (uint64_t *)&unk_1EBCB2D10);
  *((void *)&v42 + 1) = v26;
  LOBYTE(v43) = v27;
  *((void *)&v43 + 1) = v26;
  long long v53 = v44;
  long long v54 = v45;
  v51[2] = *(_OWORD *)v41;
  v51[3] = *(_OWORD *)&v41[16];
  v51[4] = *(_OWORD *)&v41[32];
  v51[5] = *(_OWORD *)&v41[48];
  v51[0] = v39;
  v51[1] = v40;
  v51[6] = v42;
  long long v52 = v43;
  uint64_t v28 = v50;
  sub_1C8CA9498((uint64_t)v47);
  *((void *)&v52 + 1) = v28;
  uint64_t v29 = *((void *)&v51[0] + 1);
  if (!*((void *)&v51[0] + 1))
  {
LABEL_41:
    uint64_t result = sub_1C8CA9498((uint64_t)v51);
    goto LABEL_9;
  }
  if (*((uint64_t *)&v51[0] + 1) < 1)
  {
    char v34 = 1;
    goto LABEL_43;
  }
  while (1)
  {
    int v30 = (char)**(unsigned char **)&v51[0];
    LODWORD(v31) = v30;
    --v29;
    if (v30 < 0) {
      break;
    }
    ++*(void *)&v51[0];
LABEL_38:
    *((void *)&v51[0] + 1) = v29;
    *uint64_t v5 = v22;
    unint64_t v37 = *(void *)(v22 + 16);
    unint64_t v36 = *(void *)(v22 + 24);
    if (v37 >= v36 >> 1) {
      uint64_t v22 = ((uint64_t (*)(BOOL, unint64_t, uint64_t, uint64_t))a2)(v36 > 1, v37 + 1, 1, v22);
    }
    *(void *)(v22 + 16) = v37 + 1;
    *(_DWORD *)(v22 + 4 * v37 + 32) = v31;
    *uint64_t v5 = v22;
    if (!v29) {
      goto LABEL_41;
    }
  }
  if (v29 >= 1)
  {
    v31 &= 0x7Fu;
    uint64_t v32 = *(void *)&v51[0] + 2;
    unint64_t v33 = 7;
    while (1)
    {
      v31 |= (unint64_t)(*(unsigned char *)(v32 - 1) & 0x7F) << v33;
      if ((*(unsigned char *)(v32 - 1) & 0x80) == 0) {
        break;
      }
      char v34 = 3;
      if ((unint64_t)v29 >= 2)
      {
        ++v32;
        --v29;
        BOOL v35 = v33 > 0x38;
        v33 += 7;
        if (!v35) {
          continue;
        }
      }
      goto LABEL_43;
    }
    --v29;
    *(void *)&v51[0] = v32;
    goto LABEL_38;
  }
  char v34 = 3;
LABEL_43:
  sub_1C8D0E090();
  swift_allocError();
  char *v38 = v34;
  swift_willThrow();
  return sub_1C8CA9498((uint64_t)v51);
}

uint64_t sub_1C8D4F0E0(uint64_t result, uint64_t (*a2)(void))
{
  uint64_t v5 = (uint64_t *)result;
  if (*(unsigned char *)(v2 + 33) != 2)
  {
    if (*(unsigned char *)(v2 + 33)) {
      return result;
    }
    uint64_t result = sub_1C8CA91C4();
    if (v3) {
      return result;
    }
    uint64_t v6 = result;
    uint64_t v7 = *v5;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v5 = v7;
    if ((result & 1) == 0)
    {
      uint64_t result = ((uint64_t (*)(void, uint64_t, uint64_t, uint64_t))a2)(0, *(void *)(v7 + 16) + 1, 1, v7);
      uint64_t v7 = result;
      *uint64_t v5 = result;
    }
    unint64_t v9 = *(void *)(v7 + 16);
    unint64_t v8 = *(void *)(v7 + 24);
    unint64_t v10 = v9 + 1;
    if (v9 >= v8 >> 1)
    {
      uint64_t result = ((uint64_t (*)(BOOL, unint64_t, uint64_t, uint64_t))a2)(v8 > 1, v9 + 1, 1, v7);
      unint64_t v10 = v9 + 1;
      uint64_t v7 = result;
    }
    *(void *)(v7 + 16) = v10;
    *(void *)(v7 + 8 * v9 + 32) = v6;
    *uint64_t v5 = v7;
LABEL_9:
    *(unsigned char *)(v2 + 32) = 1;
    return result;
  }
  uint64_t result = sub_1C8CA91C4();
  if (v3) {
    return result;
  }
  unint64_t v11 = *(void *)(v2 + 8);
  if ((v11 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_47;
  }
  uint64_t v12 = result;
  BOOL v13 = v11 >= result;
  unint64_t v14 = v11 - result;
  if (!v13)
  {
    sub_1C8D0E090();
    swift_allocError();
    *int64_t v15 = 1;
    return swift_willThrow();
  }
  int v16 = *(char **)v2;
  *(void *)v2 += result;
  *(void *)(v2 + 8) = v14;
  if (result >= 1)
  {
    uint64_t v17 = 0;
    uint64_t v18 = v16;
    uint64_t v19 = result;
    while (1)
    {
      int v20 = *v18++;
      if ((v20 & 0x80000000) == 0 && __OFADD__(v17++, 1)) {
        break;
      }
      if (!--v19) {
        goto LABEL_22;
      }
    }
    __break(1u);
  }
  uint64_t v17 = 0;
LABEL_22:
  uint64_t v55 = v16;
  uint64_t v22 = *v5;
  uint64_t v23 = *(void *)(*v5 + 16);
  uint64_t v24 = v23 + v17;
  if (__OFADD__(v23, v17))
  {
LABEL_47:
    __break(1u);
    return result;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v5 = v22;
  if (!isUniquelyReferenced_nonNull_native || v24 > *(void *)(v22 + 24) >> 1) {
    uint64_t v22 = a2();
  }
  *uint64_t v5 = v22;
  sub_1C8CA92A4(v2, (uint64_t)v47);
  uint64_t v26 = v48[7];
  char v27 = v49;
  sub_1C8CA9434((uint64_t)v48, (uint64_t)v46, (uint64_t *)&unk_1EBCB2D10);
  *(_WORD *)int v41 = 1;
  memset(&v41[8], 0, 56);
  LOBYTE(v42) = 1;
  long long v44 = xmmword_1C8D8BEE0;
  long long v45 = xmmword_1C8D8BEE0;
  *(void *)&long long v39 = v55;
  *((void *)&v39 + 1) = v12;
  long long v40 = (unint64_t)v55;
  sub_1C8CA88A8((uint64_t)v46, (uint64_t)&v41[16], (uint64_t *)&unk_1EBCB2D10);
  *((void *)&v42 + 1) = v26;
  LOBYTE(v43) = v27;
  *((void *)&v43 + 1) = v26;
  long long v53 = v44;
  long long v54 = v45;
  v51[2] = *(_OWORD *)v41;
  v51[3] = *(_OWORD *)&v41[16];
  v51[4] = *(_OWORD *)&v41[32];
  v51[5] = *(_OWORD *)&v41[48];
  v51[0] = v39;
  v51[1] = v40;
  v51[6] = v42;
  long long v52 = v43;
  uint64_t v28 = v50;
  sub_1C8CA9498((uint64_t)v47);
  *((void *)&v52 + 1) = v28;
  uint64_t v29 = *((void *)&v51[0] + 1);
  if (!*((void *)&v51[0] + 1))
  {
LABEL_41:
    uint64_t result = sub_1C8CA9498((uint64_t)v51);
    goto LABEL_9;
  }
  if (*((uint64_t *)&v51[0] + 1) < 1)
  {
    char v34 = 1;
    goto LABEL_43;
  }
  while (1)
  {
    int v30 = (char)**(unsigned char **)&v51[0];
    uint64_t v31 = v30;
    --v29;
    if (v30 < 0) {
      break;
    }
    ++*(void *)&v51[0];
LABEL_38:
    *((void *)&v51[0] + 1) = v29;
    *uint64_t v5 = v22;
    unint64_t v37 = *(void *)(v22 + 16);
    unint64_t v36 = *(void *)(v22 + 24);
    if (v37 >= v36 >> 1) {
      uint64_t v22 = ((uint64_t (*)(BOOL, unint64_t, uint64_t, uint64_t))a2)(v36 > 1, v37 + 1, 1, v22);
    }
    *(void *)(v22 + 16) = v37 + 1;
    *(void *)(v22 + 8 * v37 + 32) = v31;
    *uint64_t v5 = v22;
    if (!v29) {
      goto LABEL_41;
    }
  }
  if (v29 >= 1)
  {
    v31 &= 0x7Fu;
    uint64_t v32 = *(void *)&v51[0] + 2;
    unint64_t v33 = 7;
    while (1)
    {
      v31 |= (unint64_t)(*(unsigned char *)(v32 - 1) & 0x7F) << v33;
      if ((*(unsigned char *)(v32 - 1) & 0x80) == 0) {
        break;
      }
      char v34 = 3;
      if ((unint64_t)v29 >= 2)
      {
        ++v32;
        --v29;
        BOOL v35 = v33 > 0x38;
        v33 += 7;
        if (!v35) {
          continue;
        }
      }
      goto LABEL_43;
    }
    --v29;
    *(void *)&v51[0] = v32;
    goto LABEL_38;
  }
  char v34 = 3;
LABEL_43:
  sub_1C8D0E090();
  swift_allocError();
  char *v38 = v34;
  swift_willThrow();
  return sub_1C8CA9498((uint64_t)v51);
}

uint64_t sub_1C8D4F4E0(uint64_t result)
{
  uint64_t v3 = (char **)result;
  if (*(unsigned char *)(v1 + 33) != 2)
  {
    if (*(unsigned char *)(v1 + 33)) {
      return result;
    }
    uint64_t result = sub_1C8CA91C4();
    if (v2) {
      return result;
    }
    unsigned int v4 = result;
    int v5 = result & 1;
    uint64_t v6 = *v3;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v3 = v6;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1C8D5F348(0, *((void *)v6 + 2) + 1, 1, v6);
      uint64_t v6 = (char *)result;
      *uint64_t v3 = (char *)result;
    }
    int v7 = -v5;
    unint64_t v9 = *((void *)v6 + 2);
    unint64_t v8 = *((void *)v6 + 3);
    unint64_t v10 = v9 + 1;
    if (v9 >= v8 >> 1)
    {
      uint64_t result = (uint64_t)sub_1C8D5F348((char *)(v8 > 1), v9 + 1, 1, v6);
      unint64_t v10 = v9 + 1;
      uint64_t v6 = (char *)result;
    }
    *((void *)v6 + 2) = v10;
    *(_DWORD *)&v6[4 * v9 + 32] = v7 ^ (v4 >> 1);
    *uint64_t v3 = v6;
LABEL_9:
    *(unsigned char *)(v1 + 32) = 1;
    return result;
  }
  uint64_t result = sub_1C8CA91C4();
  if (v2) {
    return result;
  }
  unint64_t v11 = *(void *)(v1 + 8);
  if ((v11 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_50;
  }
  uint64_t v12 = result;
  BOOL v13 = v11 >= result;
  unint64_t v14 = v11 - result;
  if (!v13)
  {
    sub_1C8D0E090();
    swift_allocError();
    *int64_t v15 = 1;
    return swift_willThrow();
  }
  int v16 = *(char **)v1;
  *(void *)v1 += result;
  *(void *)(v1 + 8) = v14;
  if (result >= 1)
  {
    uint64_t v17 = 0;
    uint64_t v18 = v16;
    uint64_t v19 = result;
    while (1)
    {
      int v20 = *v18++;
      if ((v20 & 0x80000000) == 0 && __OFADD__(v17++, 1)) {
        break;
      }
      if (!--v19) {
        goto LABEL_22;
      }
    }
    __break(1u);
  }
  uint64_t v17 = 0;
LABEL_22:
  uint64_t v22 = *v3;
  int64_t v23 = *((void *)*v3 + 2);
  int64_t v24 = v23 + v17;
  if (__OFADD__(v23, v17))
  {
LABEL_50:
    __break(1u);
    return result;
  }
  int isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v3 = v22;
  if (!isUniquelyReferenced_nonNull_native || v24 > *((void *)v22 + 3) >> 1)
  {
    if (v23 <= v24) {
      int64_t v26 = v24;
    }
    else {
      int64_t v26 = v23;
    }
    uint64_t v22 = sub_1C8D5F348(isUniquelyReferenced_nonNull_native, v26, 0, v22);
  }
  *uint64_t v3 = v22;
  sub_1C8CA92A4(v1, (uint64_t)v47);
  uint64_t v27 = v48[7];
  char v28 = v49;
  sub_1C8CA9434((uint64_t)v48, (uint64_t)v46, (uint64_t *)&unk_1EBCB2D10);
  *(_WORD *)int v41 = 1;
  memset(&v41[8], 0, 56);
  LOBYTE(v42) = 1;
  long long v44 = xmmword_1C8D8BEE0;
  long long v45 = xmmword_1C8D8BEE0;
  *(void *)&long long v40 = v16;
  *((void *)&v40 + 1) = v12;
  sub_1C8CA88A8((uint64_t)v46, (uint64_t)&v41[16], (uint64_t *)&unk_1EBCB2D10);
  *((void *)&v42 + 1) = v27;
  LOBYTE(v43) = v28;
  *((void *)&v43 + 1) = v27;
  long long v53 = v44;
  long long v54 = v45;
  v51[2] = *(_OWORD *)v41;
  v51[3] = *(_OWORD *)&v41[16];
  v51[4] = *(_OWORD *)&v41[32];
  v51[5] = *(_OWORD *)&v41[48];
  v51[0] = v40;
  v51[1] = (unint64_t)v16;
  v51[6] = v42;
  long long v52 = v43;
  uint64_t v29 = v50;
  sub_1C8CA9498((uint64_t)v47);
  *((void *)&v52 + 1) = v29;
  uint64_t v30 = *((void *)&v51[0] + 1);
  if (!*((void *)&v51[0] + 1))
  {
LABEL_44:
    uint64_t result = sub_1C8CA9498((uint64_t)v51);
    goto LABEL_9;
  }
  if (*((uint64_t *)&v51[0] + 1) < 1)
  {
    char v35 = 1;
    goto LABEL_46;
  }
  while (1)
  {
    int v31 = (char)**(unsigned char **)&v51[0];
    LODWORD(v32) = v31;
    --v30;
    if (v31 < 0) {
      break;
    }
    ++*(void *)&v51[0];
LABEL_41:
    *((void *)&v51[0] + 1) = v30;
    *uint64_t v3 = v22;
    unint64_t v38 = *((void *)v22 + 2);
    unint64_t v37 = *((void *)v22 + 3);
    if (v38 >= v37 >> 1) {
      uint64_t v22 = sub_1C8D5F348((char *)(v37 > 1), v38 + 1, 1, v22);
    }
    *((void *)v22 + 2) = v38 + 1;
    *(_DWORD *)&v22[4 * v38 + 32] = -(v32 & 1) ^ (v32 >> 1);
    *uint64_t v3 = v22;
    if (!v30) {
      goto LABEL_44;
    }
  }
  if (v30 >= 1)
  {
    v32 &= 0x7Fu;
    uint64_t v33 = *(void *)&v51[0] + 2;
    unint64_t v34 = 7;
    while (1)
    {
      v32 |= (unint64_t)(*(unsigned char *)(v33 - 1) & 0x7F) << v34;
      if ((*(unsigned char *)(v33 - 1) & 0x80) == 0) {
        break;
      }
      char v35 = 3;
      if ((unint64_t)v30 >= 2)
      {
        ++v33;
        --v30;
        BOOL v36 = v34 > 0x38;
        v34 += 7;
        if (!v36) {
          continue;
        }
      }
      goto LABEL_46;
    }
    --v30;
    *(void *)&v51[0] = v33;
    goto LABEL_41;
  }
  char v35 = 3;
LABEL_46:
  sub_1C8D0E090();
  swift_allocError();
  *long long v39 = v35;
  swift_willThrow();
  return sub_1C8CA9498((uint64_t)v51);
}

uint64_t sub_1C8D4F8DC(uint64_t result)
{
  uint64_t v3 = (char **)result;
  if (*(unsigned char *)(v1 + 33) != 2)
  {
    if (*(unsigned char *)(v1 + 33)) {
      return result;
    }
    uint64_t result = sub_1C8CA91C4();
    if (v2) {
      return result;
    }
    unint64_t v4 = result;
    uint64_t v5 = result & 1;
    uint64_t v6 = *v3;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v3 = v6;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1C8D5F354(0, *((void *)v6 + 2) + 1, 1, v6);
      uint64_t v6 = (char *)result;
      *uint64_t v3 = (char *)result;
    }
    uint64_t v7 = -v5;
    unint64_t v9 = *((void *)v6 + 2);
    unint64_t v8 = *((void *)v6 + 3);
    unint64_t v10 = v9 + 1;
    if (v9 >= v8 >> 1)
    {
      uint64_t result = (uint64_t)sub_1C8D5F354((char *)(v8 > 1), v9 + 1, 1, v6);
      unint64_t v10 = v9 + 1;
      uint64_t v6 = (char *)result;
    }
    *((void *)v6 + 2) = v10;
    *(void *)&v6[8 * v9 + 32] = v7 ^ (v4 >> 1);
    *uint64_t v3 = v6;
LABEL_9:
    *(unsigned char *)(v1 + 32) = 1;
    return result;
  }
  uint64_t result = sub_1C8CA91C4();
  if (v2) {
    return result;
  }
  unint64_t v11 = *(void *)(v1 + 8);
  if ((v11 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_50;
  }
  uint64_t v12 = result;
  BOOL v13 = v11 >= result;
  unint64_t v14 = v11 - result;
  if (!v13)
  {
    sub_1C8D0E090();
    swift_allocError();
    *int64_t v15 = 1;
    return swift_willThrow();
  }
  int v16 = *(char **)v1;
  *(void *)v1 += result;
  *(void *)(v1 + 8) = v14;
  if (result >= 1)
  {
    uint64_t v17 = 0;
    uint64_t v18 = v16;
    uint64_t v19 = result;
    while (1)
    {
      int v20 = *v18++;
      if ((v20 & 0x80000000) == 0 && __OFADD__(v17++, 1)) {
        break;
      }
      if (!--v19) {
        goto LABEL_22;
      }
    }
    __break(1u);
  }
  uint64_t v17 = 0;
LABEL_22:
  uint64_t v22 = *v3;
  int64_t v23 = *((void *)*v3 + 2);
  int64_t v24 = v23 + v17;
  if (__OFADD__(v23, v17))
  {
LABEL_50:
    __break(1u);
    return result;
  }
  int isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v3 = v22;
  if (!isUniquelyReferenced_nonNull_native || v24 > *((void *)v22 + 3) >> 1)
  {
    if (v23 <= v24) {
      int64_t v26 = v24;
    }
    else {
      int64_t v26 = v23;
    }
    uint64_t v22 = sub_1C8D5F354(isUniquelyReferenced_nonNull_native, v26, 0, v22);
  }
  *uint64_t v3 = v22;
  sub_1C8CA92A4(v1, (uint64_t)v47);
  uint64_t v27 = v48[7];
  char v28 = v49;
  sub_1C8CA9434((uint64_t)v48, (uint64_t)v46, (uint64_t *)&unk_1EBCB2D10);
  *(_WORD *)int v41 = 1;
  memset(&v41[8], 0, 56);
  LOBYTE(v42) = 1;
  long long v44 = xmmword_1C8D8BEE0;
  long long v45 = xmmword_1C8D8BEE0;
  *(void *)&long long v40 = v16;
  *((void *)&v40 + 1) = v12;
  sub_1C8CA88A8((uint64_t)v46, (uint64_t)&v41[16], (uint64_t *)&unk_1EBCB2D10);
  *((void *)&v42 + 1) = v27;
  LOBYTE(v43) = v28;
  *((void *)&v43 + 1) = v27;
  long long v53 = v44;
  long long v54 = v45;
  v51[2] = *(_OWORD *)v41;
  v51[3] = *(_OWORD *)&v41[16];
  v51[4] = *(_OWORD *)&v41[32];
  v51[5] = *(_OWORD *)&v41[48];
  v51[0] = v40;
  v51[1] = (unint64_t)v16;
  v51[6] = v42;
  long long v52 = v43;
  uint64_t v29 = v50;
  sub_1C8CA9498((uint64_t)v47);
  *((void *)&v52 + 1) = v29;
  uint64_t v30 = *((void *)&v51[0] + 1);
  if (!*((void *)&v51[0] + 1))
  {
LABEL_44:
    uint64_t result = sub_1C8CA9498((uint64_t)v51);
    goto LABEL_9;
  }
  if (*((uint64_t *)&v51[0] + 1) < 1)
  {
    char v35 = 1;
    goto LABEL_46;
  }
  while (1)
  {
    int v31 = (char)**(unsigned char **)&v51[0];
    unint64_t v32 = v31;
    --v30;
    if (v31 < 0) {
      break;
    }
    ++*(void *)&v51[0];
LABEL_41:
    *((void *)&v51[0] + 1) = v30;
    *uint64_t v3 = v22;
    unint64_t v38 = *((void *)v22 + 2);
    unint64_t v37 = *((void *)v22 + 3);
    if (v38 >= v37 >> 1) {
      uint64_t v22 = sub_1C8D5F354((char *)(v37 > 1), v38 + 1, 1, v22);
    }
    *((void *)v22 + 2) = v38 + 1;
    *(void *)&v22[8 * v38 + 32] = -(uint64_t)(v32 & 1) ^ (v32 >> 1);
    *uint64_t v3 = v22;
    if (!v30) {
      goto LABEL_44;
    }
  }
  if (v30 >= 1)
  {
    v32 &= 0x7Fu;
    uint64_t v33 = *(void *)&v51[0] + 2;
    unint64_t v34 = 7;
    while (1)
    {
      v32 |= (unint64_t)(*(unsigned char *)(v33 - 1) & 0x7F) << v34;
      if ((*(unsigned char *)(v33 - 1) & 0x80) == 0) {
        break;
      }
      char v35 = 3;
      if ((unint64_t)v30 >= 2)
      {
        ++v33;
        --v30;
        BOOL v36 = v34 > 0x38;
        v34 += 7;
        if (!v36) {
          continue;
        }
      }
      goto LABEL_46;
    }
    --v30;
    *(void *)&v51[0] = v33;
    goto LABEL_41;
  }
  char v35 = 3;
LABEL_46:
  sub_1C8D0E090();
  swift_allocError();
  *long long v39 = v35;
  swift_willThrow();
  return sub_1C8CA9498((uint64_t)v51);
}

_DWORD *sub_1C8D4FCD8(_DWORD *result)
{
  if (*((unsigned char *)v1 + 33) == 5)
  {
    uint64_t v2 = (uint64_t)v1[1];
    BOOL v3 = v2 < 4;
    uint64_t v4 = v2 - 4;
    if (v3)
    {
      sub_1C8D0E090();
      swift_allocError();
      *uint64_t v5 = 1;
      return (_DWORD *)swift_willThrow();
    }
    else
    {
      int v6 = *(*v1)++;
      v1[1] = (int *)v4;
      *uint64_t result = v6;
      *((unsigned char *)v1 + 32) = 1;
    }
  }
  return result;
}

uint64_t sub_1C8D4FD94(uint64_t result)
{
  if (*((unsigned char *)v1 + 33) == 5)
  {
    uint64_t v2 = (uint64_t)v1[1];
    BOOL v3 = v2 < 4;
    uint64_t v4 = v2 - 4;
    if (v3)
    {
      sub_1C8D0E090();
      swift_allocError();
      *uint64_t v5 = 1;
      return swift_willThrow();
    }
    else
    {
      int v6 = *(*v1)++;
      v1[1] = (int *)v4;
      *(_DWORD *)uint64_t result = v6;
      *(unsigned char *)(result + 4) = 0;
      *((unsigned char *)v1 + 32) = 1;
    }
  }
  return result;
}

unint64_t sub_1C8D4FE54(unint64_t result, uint64_t (*a2)(void))
{
  uint64_t v5 = (uint64_t *)result;
  uint64_t v57 = *MEMORY[0x1E4F143B8];
  int v6 = *(unsigned __int8 *)(v2 + 33);
  if (v6 != 2)
  {
    if (v6 != 5) {
      return result;
    }
    uint64_t v7 = *(void *)(v2 + 8);
    if (v7 > 3)
    {
      int v8 = **(_DWORD **)v2;
      *(void *)v2 += 4;
      *(void *)(v2 + 8) = v7 - 4;
      unint64_t v9 = *(void *)result;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v5 = v9;
      if ((result & 1) == 0)
      {
        uint64_t result = ((uint64_t (*)(void, uint64_t, uint64_t, unint64_t))a2)(0, *(void *)(v9 + 16) + 1, 1, v9);
        unint64_t v9 = result;
        *uint64_t v5 = result;
      }
      unint64_t v11 = *(void *)(v9 + 16);
      unint64_t v10 = *(void *)(v9 + 24);
      if (v11 >= v10 >> 1)
      {
        uint64_t result = ((uint64_t (*)(BOOL, unint64_t, uint64_t, unint64_t))a2)(v10 > 1, v11 + 1, 1, v9);
        unint64_t v9 = result;
      }
      *(void *)(v9 + 16) = v11 + 1;
      *(_DWORD *)(v9 + 4 * v11 + 32) = v8;
      *uint64_t v5 = v9;
      goto LABEL_9;
    }
    goto LABEL_13;
  }
  uint64_t result = sub_1C8CA91C4();
  if (v3) {
    return result;
  }
  unint64_t v12 = *(void *)(v2 + 8);
  if ((v12 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_31;
  }
  unint64_t v13 = result;
  BOOL v14 = v12 >= result;
  unint64_t v15 = v12 - result;
  if (v14)
  {
    int v41 = a2;
    uint64_t v17 = *(int **)v2;
    *(void *)v2 += result;
    *(void *)(v2 + 8) = v15;
    uint64_t v18 = *v5;
    uint64_t v19 = *(void *)(*v5 + 16);
    uint64_t v20 = v19 + (result >> 2);
    if (!__OFADD__(v19, result >> 2))
    {
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v5 = v18;
      if (!isUniquelyReferenced_nonNull_native || v20 > *(void *)(v18 + 24) >> 1) {
        uint64_t v18 = v41();
      }
      *uint64_t v5 = v18;
      sub_1C8CA92A4(v2, (uint64_t)v49);
      uint64_t v22 = v50[7];
      char v23 = v51;
      sub_1C8CA9434((uint64_t)v50, (uint64_t)v48, (uint64_t *)&unk_1EBCB2D10);
      *(_WORD *)long long v43 = 1;
      memset(&v43[8], 0, 56);
      LOBYTE(v44) = 1;
      long long v46 = xmmword_1C8D8BEE0;
      long long v47 = xmmword_1C8D8BEE0;
      *(void *)&long long v42 = v17;
      *((void *)&v42 + 1) = v13;
      sub_1C8CA88A8((uint64_t)v48, (uint64_t)&v43[16], (uint64_t *)&unk_1EBCB2D10);
      *((void *)&v44 + 1) = v22;
      LOBYTE(v45) = v23;
      *((void *)&v45 + 1) = v22;
      long long v55 = v46;
      long long v56 = v47;
      v53[2] = *(_OWORD *)v43;
      _OWORD v53[3] = *(_OWORD *)&v43[16];
      v53[4] = *(_OWORD *)&v43[32];
      v53[5] = *(_OWORD *)&v43[48];
      v53[0] = v42;
      v53[1] = (unint64_t)v17;
      v53[6] = v44;
      long long v54 = v45;
      uint64_t v24 = v52;
      sub_1C8CA9498((uint64_t)v49);
      *((void *)&v54 + 1) = v24;
      uint64_t v25 = *((void *)&v53[0] + 1);
      if (*((void *)&v53[0] + 1))
      {
        uint64_t v26 = *((void *)&v53[0] + 1) - 4;
        if (*((uint64_t *)&v53[0] + 1) < 4)
        {
LABEL_29:
          sub_1C8D0E090();
          swift_allocError();
          *unint64_t v37 = 1;
          swift_willThrow();
          return sub_1C8CA9498((uint64_t)v53);
        }
        uint64_t v27 = 0;
        uint64_t v28 = *(void *)&v53[0];
        unint64_t v29 = *(void *)(v18 + 16);
        uint64_t v30 = 4 * v29 + 32;
        unint64_t v31 = *((void *)&v53[0] + 1) + 4;
        while (1)
        {
          int v32 = *(_DWORD *)(v28 + v27);
          unint64_t v33 = *(void *)(v18 + 24);
          if (v29 >= v33 >> 1)
          {
            uint64_t v34 = v18;
            uint64_t v39 = v25;
            uint64_t v40 = v28;
            uint64_t v35 = v26;
            uint64_t v38 = v30;
            uint64_t v36 = ((uint64_t (*)(BOOL, unint64_t, uint64_t, uint64_t))v41)(v33 > 1, v29 + 1, 1, v34);
            uint64_t v30 = v38;
            uint64_t v25 = v39;
            uint64_t v26 = v35;
            uint64_t v28 = v40;
            uint64_t v18 = v36;
          }
          *(void *)(v18 + 16) = v29 + 1;
          *(_DWORD *)(v18 + v30 + v27) = v32;
          if (v26 == v27) {
            break;
          }
          v27 += 4;
          v31 -= 4;
          ++v29;
          if (v31 <= 7)
          {
            *uint64_t v5 = v18;
            *(void *)&v53[0] = v28 + v27;
            *((void *)&v53[0] + 1) = v25 - v27;
            goto LABEL_29;
          }
        }
        *uint64_t v5 = v18;
        v53[0] = (unint64_t)(v28 + v27 + 4);
      }
      uint64_t result = sub_1C8CA9498((uint64_t)v53);
LABEL_9:
      *(unsigned char *)(v2 + 32) = 1;
      return result;
    }
LABEL_31:
    __break(1u);
  }
LABEL_13:
  sub_1C8D0E090();
  swift_allocError();
  *int v16 = 1;
  return swift_willThrow();
}

void *sub_1C8D50230(void *result)
{
  if (*((unsigned char *)v1 + 33) == 1)
  {
    uint64_t v2 = (uint64_t)v1[1];
    BOOL v3 = v2 < 8;
    uint64_t v4 = v2 - 8;
    if (v3)
    {
      sub_1C8D0E090();
      swift_allocError();
      *uint64_t v5 = 1;
      return (void *)swift_willThrow();
    }
    else
    {
      uint64_t v6 = *(*v1)++;
      v1[1] = (uint64_t *)v4;
      *uint64_t result = v6;
      *((unsigned char *)v1 + 32) = 1;
    }
  }
  return result;
}

uint64_t sub_1C8D502EC(uint64_t result)
{
  if (*((unsigned char *)v1 + 33) == 1)
  {
    uint64_t v2 = (uint64_t)v1[1];
    BOOL v3 = v2 < 8;
    uint64_t v4 = v2 - 8;
    if (v3)
    {
      sub_1C8D0E090();
      swift_allocError();
      *uint64_t v5 = 1;
      return swift_willThrow();
    }
    else
    {
      uint64_t v6 = *(*v1)++;
      v1[1] = (uint64_t *)v4;
      *(void *)uint64_t result = v6;
      *(unsigned char *)(result + 8) = 0;
      *((unsigned char *)v1 + 32) = 1;
    }
  }
  return result;
}

unint64_t sub_1C8D503AC(unint64_t result, uint64_t (*a2)(void))
{
  uint64_t v5 = (uint64_t *)result;
  uint64_t v57 = *MEMORY[0x1E4F143B8];
  int v6 = *(unsigned __int8 *)(v2 + 33);
  if (v6 != 2)
  {
    if (v6 != 1) {
      return result;
    }
    uint64_t v7 = *(void *)(v2 + 8);
    if (v7 > 7)
    {
      uint64_t v8 = **(void **)v2;
      *(void *)v2 += 8;
      *(void *)(v2 + 8) = v7 - 8;
      unint64_t v9 = *(void *)result;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v5 = v9;
      if ((result & 1) == 0)
      {
        uint64_t result = ((uint64_t (*)(void, uint64_t, uint64_t, unint64_t))a2)(0, *(void *)(v9 + 16) + 1, 1, v9);
        unint64_t v9 = result;
        *uint64_t v5 = result;
      }
      unint64_t v11 = *(void *)(v9 + 16);
      unint64_t v10 = *(void *)(v9 + 24);
      if (v11 >= v10 >> 1)
      {
        uint64_t result = ((uint64_t (*)(BOOL, unint64_t, uint64_t, unint64_t))a2)(v10 > 1, v11 + 1, 1, v9);
        unint64_t v9 = result;
      }
      *(void *)(v9 + 16) = v11 + 1;
      *(void *)(v9 + 8 * v11 + 32) = v8;
      *uint64_t v5 = v9;
      goto LABEL_9;
    }
    goto LABEL_13;
  }
  uint64_t result = sub_1C8CA91C4();
  if (v3) {
    return result;
  }
  unint64_t v12 = *(void *)(v2 + 8);
  if ((v12 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_31;
  }
  unint64_t v13 = result;
  BOOL v14 = v12 >= result;
  unint64_t v15 = v12 - result;
  if (v14)
  {
    int v41 = a2;
    uint64_t v17 = *(uint64_t **)v2;
    *(void *)v2 += result;
    *(void *)(v2 + 8) = v15;
    uint64_t v18 = *v5;
    uint64_t v19 = *(void *)(*v5 + 16);
    uint64_t v20 = v19 + (result >> 3);
    if (!__OFADD__(v19, result >> 3))
    {
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v5 = v18;
      if (!isUniquelyReferenced_nonNull_native || v20 > *(void *)(v18 + 24) >> 1) {
        uint64_t v18 = v41();
      }
      *uint64_t v5 = v18;
      sub_1C8CA92A4(v2, (uint64_t)v49);
      uint64_t v22 = v50[7];
      char v23 = v51;
      sub_1C8CA9434((uint64_t)v50, (uint64_t)v48, (uint64_t *)&unk_1EBCB2D10);
      *(_WORD *)long long v43 = 1;
      memset(&v43[8], 0, 56);
      LOBYTE(v44) = 1;
      long long v46 = xmmword_1C8D8BEE0;
      long long v47 = xmmword_1C8D8BEE0;
      *(void *)&long long v42 = v17;
      *((void *)&v42 + 1) = v13;
      sub_1C8CA88A8((uint64_t)v48, (uint64_t)&v43[16], (uint64_t *)&unk_1EBCB2D10);
      *((void *)&v44 + 1) = v22;
      LOBYTE(v45) = v23;
      *((void *)&v45 + 1) = v22;
      long long v55 = v46;
      long long v56 = v47;
      v53[2] = *(_OWORD *)v43;
      _OWORD v53[3] = *(_OWORD *)&v43[16];
      v53[4] = *(_OWORD *)&v43[32];
      v53[5] = *(_OWORD *)&v43[48];
      v53[0] = v42;
      v53[1] = (unint64_t)v17;
      v53[6] = v44;
      long long v54 = v45;
      uint64_t v24 = v52;
      sub_1C8CA9498((uint64_t)v49);
      *((void *)&v54 + 1) = v24;
      uint64_t v25 = *((void *)&v53[0] + 1);
      if (*((void *)&v53[0] + 1))
      {
        uint64_t v26 = *((void *)&v53[0] + 1) - 8;
        if (*((uint64_t *)&v53[0] + 1) < 8)
        {
LABEL_29:
          sub_1C8D0E090();
          swift_allocError();
          *unint64_t v37 = 1;
          swift_willThrow();
          return sub_1C8CA9498((uint64_t)v53);
        }
        uint64_t v27 = 0;
        uint64_t v28 = *(void *)&v53[0];
        unint64_t v29 = *(void *)(v18 + 16);
        uint64_t v30 = 8 * v29 + 32;
        unint64_t v31 = *((void *)&v53[0] + 1) + 8;
        while (1)
        {
          uint64_t v32 = *(void *)(v28 + v27);
          unint64_t v33 = *(void *)(v18 + 24);
          if (v29 >= v33 >> 1)
          {
            uint64_t v34 = v18;
            uint64_t v39 = v25;
            uint64_t v40 = v28;
            uint64_t v35 = v26;
            uint64_t v38 = v30;
            uint64_t v36 = ((uint64_t (*)(BOOL, unint64_t, uint64_t, uint64_t))v41)(v33 > 1, v29 + 1, 1, v34);
            uint64_t v30 = v38;
            uint64_t v25 = v39;
            uint64_t v26 = v35;
            uint64_t v28 = v40;
            uint64_t v18 = v36;
          }
          *(void *)(v18 + 16) = v29 + 1;
          *(void *)(v18 + v30 + v27) = v32;
          if (v26 == v27) {
            break;
          }
          v27 += 8;
          v31 -= 8;
          ++v29;
          if (v31 <= 0xF)
          {
            *uint64_t v5 = v18;
            *(void *)&v53[0] = v28 + v27;
            *((void *)&v53[0] + 1) = v25 - v27;
            goto LABEL_29;
          }
        }
        *uint64_t v5 = v18;
        v53[0] = (unint64_t)(v28 + v27 + 8);
      }
      uint64_t result = sub_1C8CA9498((uint64_t)v53);
LABEL_9:
      *(unsigned char *)(v2 + 32) = 1;
      return result;
    }
LABEL_31:
    __break(1u);
  }
LABEL_13:
  sub_1C8D0E090();
  swift_allocError();
  *int v16 = 1;
  return swift_willThrow();
}

uint64_t sub_1C8D50788(uint64_t result)
{
  uint64_t v3 = (char **)result;
  if (*(unsigned char *)(v1 + 33) != 2)
  {
    if (*(unsigned char *)(v1 + 33)) {
      return result;
    }
    uint64_t result = sub_1C8CA91C4();
    if (v2) {
      return result;
    }
    uint64_t v4 = result;
    uint64_t v5 = *v3;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v3 = v5;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1C8D5F05C(0, *((void *)v5 + 2) + 1, 1, v5);
      uint64_t v5 = (char *)result;
      *uint64_t v3 = (char *)result;
    }
    unint64_t v7 = *((void *)v5 + 2);
    unint64_t v6 = *((void *)v5 + 3);
    unint64_t v8 = v7 + 1;
    if (v7 >= v6 >> 1)
    {
      uint64_t result = (uint64_t)sub_1C8D5F05C((char *)(v6 > 1), v7 + 1, 1, v5);
      unint64_t v8 = v7 + 1;
      uint64_t v5 = (char *)result;
    }
    *((void *)v5 + 2) = v8;
    v5[v7 + 32] = v4 != 0;
    *uint64_t v3 = v5;
LABEL_9:
    *(unsigned char *)(v1 + 32) = 1;
    return result;
  }
  uint64_t result = sub_1C8CA91C4();
  if (v2) {
    return result;
  }
  unint64_t v9 = *(void *)(v1 + 8);
  if ((v9 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_50;
  }
  uint64_t v10 = result;
  BOOL v11 = v9 >= result;
  unint64_t v12 = v9 - result;
  if (!v11)
  {
    sub_1C8D0E090();
    swift_allocError();
    *unint64_t v13 = 1;
    return swift_willThrow();
  }
  BOOL v14 = *(char **)v1;
  *(void *)v1 += result;
  *(void *)(v1 + 8) = v12;
  if (result >= 1)
  {
    uint64_t v15 = 0;
    int v16 = v14;
    uint64_t v17 = result;
    while (1)
    {
      int v18 = *v16++;
      if ((v18 & 0x80000000) == 0 && __OFADD__(v15++, 1)) {
        break;
      }
      if (!--v17) {
        goto LABEL_22;
      }
    }
    __break(1u);
  }
  uint64_t v15 = 0;
LABEL_22:
  uint64_t v20 = *v3;
  int64_t v21 = *((void *)*v3 + 2);
  int64_t v22 = v21 + v15;
  if (__OFADD__(v21, v15))
  {
LABEL_50:
    __break(1u);
    return result;
  }
  int isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v3 = v20;
  if (!isUniquelyReferenced_nonNull_native || v22 > *((void *)v20 + 3) >> 1)
  {
    if (v21 <= v22) {
      int64_t v24 = v22;
    }
    else {
      int64_t v24 = v21;
    }
    uint64_t v20 = sub_1C8D5F05C(isUniquelyReferenced_nonNull_native, v24, 0, v20);
  }
  *uint64_t v3 = v20;
  sub_1C8CA92A4(v1, (uint64_t)v45);
  uint64_t v25 = v46[7];
  char v26 = v47;
  sub_1C8CA9434((uint64_t)v46, (uint64_t)v44, (uint64_t *)&unk_1EBCB2D10);
  *(_WORD *)uint64_t v39 = 1;
  memset(&v39[8], 0, 56);
  LOBYTE(v40) = 1;
  long long v42 = xmmword_1C8D8BEE0;
  long long v43 = xmmword_1C8D8BEE0;
  *(void *)&long long v38 = v14;
  *((void *)&v38 + 1) = v10;
  sub_1C8CA88A8((uint64_t)v44, (uint64_t)&v39[16], (uint64_t *)&unk_1EBCB2D10);
  *((void *)&v40 + 1) = v25;
  LOBYTE(v41) = v26;
  *((void *)&v41 + 1) = v25;
  long long v51 = v42;
  long long v52 = v43;
  v49[2] = *(_OWORD *)v39;
  v49[3] = *(_OWORD *)&v39[16];
  v49[4] = *(_OWORD *)&v39[32];
  v49[5] = *(_OWORD *)&v39[48];
  v49[0] = v38;
  v49[1] = (unint64_t)v14;
  v49[6] = v40;
  long long v50 = v41;
  uint64_t v27 = v48;
  sub_1C8CA9498((uint64_t)v45);
  *((void *)&v50 + 1) = v27;
  uint64_t v28 = *((void *)&v49[0] + 1);
  if (!*((void *)&v49[0] + 1))
  {
LABEL_44:
    uint64_t result = sub_1C8CA9498((uint64_t)v49);
    goto LABEL_9;
  }
  if (*((uint64_t *)&v49[0] + 1) < 1)
  {
    char v33 = 1;
    goto LABEL_46;
  }
  while (1)
  {
    int v29 = (char)**(unsigned char **)&v49[0];
    uint64_t v30 = v29;
    --v28;
    if (v29 < 0) {
      break;
    }
    ++*(void *)&v49[0];
LABEL_41:
    *((void *)&v49[0] + 1) = v28;
    *uint64_t v3 = v20;
    unint64_t v36 = *((void *)v20 + 2);
    unint64_t v35 = *((void *)v20 + 3);
    if (v36 >= v35 >> 1) {
      uint64_t v20 = sub_1C8D5F05C((char *)(v35 > 1), v36 + 1, 1, v20);
    }
    *((void *)v20 + 2) = v36 + 1;
    v20[v36 + 32] = v30 != 0;
    *uint64_t v3 = v20;
    if (!v28) {
      goto LABEL_44;
    }
  }
  if (v28 >= 1)
  {
    v30 &= 0x7Fu;
    uint64_t v31 = *(void *)&v49[0] + 2;
    unint64_t v32 = 7;
    while (1)
    {
      v30 |= (unint64_t)(*(unsigned char *)(v31 - 1) & 0x7F) << v32;
      if ((*(unsigned char *)(v31 - 1) & 0x80) == 0) {
        break;
      }
      char v33 = 3;
      if ((unint64_t)v28 >= 2)
      {
        ++v31;
        --v28;
        BOOL v34 = v32 > 0x38;
        v32 += 7;
        if (!v34) {
          continue;
        }
      }
      goto LABEL_46;
    }
    --v28;
    *(void *)&v49[0] = v31;
    goto LABEL_41;
  }
  char v33 = 3;
LABEL_46:
  sub_1C8D0E090();
  swift_allocError();
  *unint64_t v37 = v33;
  swift_willThrow();
  return sub_1C8CA9498((uint64_t)v49);
}

unint64_t sub_1C8D50B7C(unint64_t result, void (*a2)(void, void))
{
  if (*(unsigned char *)(v2 + 33) == 2)
  {
    uint64_t v5 = (void *)result;
    uint64_t result = sub_1C8CA91C4();
    if (!v3)
    {
      unint64_t v6 = *(void *)(v2 + 8);
      if ((v6 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else
      {
        uint64_t v7 = result;
        BOOL v8 = v6 >= result;
        unint64_t v9 = v6 - result;
        if (v8)
        {
          BOOL v11 = *(unsigned char **)v2;
          *(void *)v2 += result;
          *(void *)(v2 + 8) = v9;
          a2(*v5, v5[1]);
          uint64_t result = sub_1C8D32844(v11, v7);
          *uint64_t v5 = result;
          v5[1] = v12;
          *(unsigned char *)(v2 + 32) = 1;
        }
        else
        {
          sub_1C8D0E090();
          swift_allocError();
          *uint64_t v10 = 1;
          return swift_willThrow();
        }
      }
    }
  }
  return result;
}

unint64_t sub_1C8D50C50(unint64_t result)
{
  if (*(unsigned char *)(v1 + 33) != 2) {
    return result;
  }
  unint64_t v6 = (unint64_t *)result;
  uint64_t result = sub_1C8CA91C4();
  if (v2) {
    return result;
  }
  unint64_t v7 = *(void *)(v1 + 8);
  if ((v7 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = result;
    BOOL v9 = v7 >= result;
    unint64_t v10 = v7 - result;
    if (!v9)
    {
      sub_1C8D0E090();
      swift_allocError();
      *BOOL v11 = 1;
      return swift_willThrow();
    }
    uint64_t v12 = *(unsigned char **)v1;
    *(void *)v1 += v8;
    *(void *)(v1 + 8) = v10;
    uint64_t v3 = sub_1C8D32844(v12, v8);
    uint64_t v4 = v13;
    unint64_t v5 = *v6;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *unint64_t v6 = v5;
    if (result) {
      goto LABEL_7;
    }
  }
  uint64_t result = (unint64_t)sub_1C8D5F148(0, *(void *)(v5 + 16) + 1, 1, (char *)v5);
  unint64_t v5 = result;
  *unint64_t v6 = result;
LABEL_7:
  unint64_t v14 = *(void *)(v5 + 16);
  unint64_t v15 = *(void *)(v5 + 24);
  unint64_t v16 = v14 + 1;
  if (v14 >= v15 >> 1)
  {
    unint64_t v20 = v14 + 1;
    int v18 = (char *)v5;
    unint64_t v19 = *(void *)(v5 + 16);
    uint64_t result = (unint64_t)sub_1C8D5F148((char *)(v15 > 1), v14 + 1, 1, v18);
    unint64_t v14 = v19;
    unint64_t v16 = v20;
    unint64_t v5 = result;
  }
  *(void *)(v5 + 16) = v16;
  unint64_t v17 = v5 + 16 * v14;
  *(void *)(v17 + 32) = v3;
  *(void *)(v17 + 40) = v4;
  *unint64_t v6 = v5;
  *(unsigned char *)(v1 + 32) = 1;
  return result;
}

uint64_t sub_1C8D50D98(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v9 = sub_1C8D88620();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v9, v11);
  unint64_t v14 = (char *)&v25 - v13;
  uint64_t result = MEMORY[0x1F4188790](v12, v15);
  unint64_t v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(unsigned char *)(v5 + 33))
  {
    uint64_t v27 = v17;
    char v26 = a1;
    uint64_t result = sub_1C8CA91C4();
    if (!v4)
    {
      (*(void (**)(void, uint64_t, uint64_t))(a3 + 32))((int)result, a2, a3);
      uint64_t v20 = v27;
      int v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48))(v14, 1, a2);
      int64_t v22 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
      if (v21 == 1)
      {
        return v22(v14, v9);
      }
      else
      {
        char v23 = v26;
        v22(v26, v9);
        int64_t v24 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
        v24(v19, v14, a2);
        v24(v23, v19, a2);
        uint64_t result = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v23, 0, 1, a2);
        *(unsigned char *)(v5 + 32) = 1;
      }
    }
  }
  return result;
}

uint64_t sub_1C8D50FE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v9 = sub_1C8D88620();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t result = MEMORY[0x1F4188790](v9, v11);
  unint64_t v14 = (char *)&v16 - v13;
  if (!*(unsigned char *)(v3 + 33))
  {
    uint64_t result = sub_1C8CA91C4();
    if (!v4)
    {
      (*(void (**)(void, uint64_t, uint64_t))(a3 + 32))((int)result, a2, a3);
      uint64_t v15 = *(void *)(a2 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, a2) == 1)
      {
        return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v14, v9);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a1, a2);
        uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(a1, v14, a2);
        *(unsigned char *)(v5 + 32) = 1;
      }
    }
  }
  return result;
}

uint64_t sub_1C8D511A0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v104 = a3;
  int v86 = a1;
  uint64_t v6 = sub_1C8D88620();
  uint64_t v8 = MEMORY[0x1F4188790](v6, v7);
  uint64_t v10 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v8, v11);
  unint64_t v14 = (char *)&v76 - v13;
  uint64_t v15 = *(void *)(a2 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v12, v16);
  unint64_t v19 = (char *)&v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v17, v20);
  uint64_t result = MEMORY[0x1F4188790](v21, v22);
  uint64_t v27 = (char *)&v76 - v26;
  if (*(unsigned char *)(v3 + 33) == 2)
  {
    BOOL v82 = v25;
    uint64_t v83 = result;
    uint64_t v85 = v24;
    uint64_t result = sub_1C8CA91C4();
    if (v4) {
      return swift_bridgeObjectRelease();
    }
    unint64_t v31 = *(void *)(v3 + 8);
    if ((v31 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v32 = result;
      BOOL v33 = v31 >= result;
      unint64_t v34 = v31 - result;
      if (!v33)
      {
        sub_1C8D0E090();
        swift_allocError();
        *unint64_t v35 = 1;
        swift_willThrow();
        return swift_bridgeObjectRelease();
      }
      unint64_t v36 = *(char **)v3;
      *(void *)v3 += result;
      *(void *)(v3 + 8) = v34;
      uint64_t v84 = v3;
      if (result >= 1)
      {
        uint64_t v37 = 0;
        long long v38 = v36;
        uint64_t v39 = result;
        while (1)
        {
          int v40 = *v38++;
          if ((v40 & 0x80000000) == 0)
          {
            BOOL v41 = __OFADD__(v37++, 1);
            if (v41) {
              break;
            }
          }
          if (!--v39) {
            goto LABEL_21;
          }
        }
        __break(1u);
      }
      uint64_t v37 = 0;
LABEL_21:
      uint64_t v81 = v36;
      uint64_t result = MEMORY[0x1CB773070](*v86, a2);
      if (!__OFADD__(result, v37))
      {
        uint64_t v79 = sub_1C8D88550();
        sub_1C8D884E0();
        sub_1C8CA92A4(v84, (uint64_t)&v95);
        uint64_t v42 = v97[7];
        char v43 = v98;
        sub_1C8CA9434((uint64_t)v97, (uint64_t)v94, (uint64_t *)&unk_1EBCB2D10);
        LOWORD(v89[0]) = 1;
        *(_OWORD *)((char *)v89 + 8) = 0u;
        *(_OWORD *)((char *)&v89[1] + 8) = 0u;
        *(_OWORD *)((char *)&v89[2] + 8) = 0u;
        *((void *)&v89[3] + 1) = 0;
        LOBYTE(v90) = 1;
        long long v92 = xmmword_1C8D8BEE0;
        long long v93 = xmmword_1C8D8BEE0;
        *(void *)&long long v87 = v81;
        *((void *)&v87 + 1) = v32;
        long long v88 = (unint64_t)v81;
        sub_1C8CA88A8((uint64_t)v94, (uint64_t)&v89[1], (uint64_t *)&unk_1EBCB2D10);
        *((void *)&v90 + 1) = v42;
        LOBYTE(v91) = v43;
        *((void *)&v91 + 1) = v42;
        long long v102 = v92;
        long long v103 = v93;
        void v100[2] = v89[0];
        v100[3] = v89[1];
        v100[4] = v89[2];
        v100[5] = v89[3];
        v100[0] = v87;
        v100[1] = v88;
        v100[6] = v90;
        long long v101 = v91;
        uint64_t v44 = v99;
        sub_1C8CA9498((uint64_t)&v95);
        *((void *)&v101 + 1) = v44;
        uint64_t v45 = *((void *)&v100[0] + 1);
        if (*((void *)&v100[0] + 1))
        {
          if (*((uint64_t *)&v100[0] + 1) < 1)
          {
            char v52 = 1;
LABEL_70:
            sub_1C8D0E090();
            swift_allocError();
            *BOOL v68 = v52;
            swift_willThrow();
            sub_1C8CA9498((uint64_t)v100);
            return swift_bridgeObjectRelease();
          }
          uint64_t v81 = 0;
          uint64_t v80 = v104 + 32;
          long long v46 = (unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
          int v77 = (void (**)(uint64_t, char *, uint64_t))(v15 + 16);
          uint64_t v78 = (void (**)(char *, char *, uint64_t))(v15 + 32);
          int v76 = (uint64_t (**)(char *, uint64_t))(v15 + 8);
          ++v82;
          while (1)
          {
            int v47 = (char)**(unsigned char **)&v100[0];
            LODWORD(v48) = v47;
            unint64_t v49 = v45 - 1;
            if (v47 < 0)
            {
              if (!v49)
              {
                char v52 = 3;
                goto LABEL_70;
              }
              v48 &= 0x7Fu;
              uint64_t v50 = *(void *)&v100[0] + 2;
              unint64_t v51 = 7;
              while (1)
              {
                v48 |= (unint64_t)(*(unsigned char *)(v50 - 1) & 0x7F) << v51;
                if ((*(unsigned char *)(v50 - 1) & 0x80) == 0) {
                  break;
                }
                char v52 = 3;
                if (v49 >= 2)
                {
                  ++v50;
                  --v49;
                  BOOL v53 = v51 > 0x38;
                  v51 += 7;
                  if (!v53) {
                    continue;
                  }
                }
                goto LABEL_70;
              }
              --v49;
              *(void *)&v100[0] = v50;
            }
            else
            {
              ++*(void *)&v100[0];
            }
            *((void *)&v100[0] + 1) = v49;
            (*(void (**)(void, uint64_t))(v104 + 32))((int)v48, a2);
            if ((*v46)(v10, 1, a2) == 1)
            {
              uint64_t result = (*v82)(v10, v83);
              if ((*(unsigned char *)(v84 + 112) & 1) == 0)
              {
                long long v54 = v81;
                if (!v81) {
                  long long v54 = (char *)MEMORY[0x1E4FBC860];
                }
                uint64_t result = swift_isUniquelyReferenced_nonNull_native();
                if ((result & 1) == 0)
                {
                  uint64_t result = (uint64_t)sub_1C8D5F348(0, *((void *)v54 + 2) + 1, 1, v54);
                  long long v54 = (char *)result;
                }
                unint64_t v56 = *((void *)v54 + 2);
                unint64_t v55 = *((void *)v54 + 3);
                uint64_t v81 = v54;
                if (v56 >= v55 >> 1)
                {
                  uint64_t result = (uint64_t)sub_1C8D5F348((char *)(v55 > 1), v56 + 1, 1, v81);
                  uint64_t v81 = (char *)result;
                }
                uint64_t v57 = v81;
                *((void *)v81 + 2) = v56 + 1;
                *(_DWORD *)&v57[4 * v56 + 32] = v48;
              }
            }
            else
            {
              (*v78)(v19, v10, a2);
              (*v77)(v85, v19, a2);
              sub_1C8D88530();
              uint64_t result = (*v76)(v19, a2);
            }
            uint64_t v45 = *((void *)&v100[0] + 1);
            if (!*((void *)&v100[0] + 1)) {
              break;
            }
            if (*((uint64_t *)&v100[0] + 1) < 1)
            {
              char v52 = 1;
              goto LABEL_70;
            }
          }
          if (!v81) {
            goto LABEL_67;
          }
          int v58 = *(_DWORD *)(v84 + 40);
          unsigned int v59 = 8 * v58;
          *(void *)&long long v87 = 0;
          uint64_t v60 = *((void *)v81 + 2);
          if (v60)
          {
            unint64_t v61 = 0;
            uint64_t v62 = v81 + 32;
            while (1)
            {
              unsigned int v64 = *(_DWORD *)v62;
              v62 += 4;
              unsigned int v63 = v64;
              if (v64 >= 0x80)
              {
                if ((v63 & 0x80000000) != 0)
                {
                  uint64_t v65 = 10;
                }
                else if (v63 >> 21)
                {
                  uint64_t v65 = v63 >> 28 ? 5 : 4;
                }
                else
                {
                  uint64_t v65 = v63 >= 0x4000 ? 3 : 2;
                }
              }
              else
              {
                uint64_t v65 = 1;
              }
              BOOL v41 = __OFADD__(v61, v65);
              v61 += v65;
              if (v41) {
                goto LABEL_90;
              }
              if (!--v60)
              {
                *(void *)&long long v87 = v61;
                if (v59 < 0x80)
                {
                  uint64_t v66 = 1;
                  goto LABEL_85;
                }
                if (!(v59 >> 14)) {
                  goto LABEL_78;
                }
                if (v59 < 0x200000)
                {
                  uint64_t v66 = 3;
                  goto LABEL_85;
                }
                if (v59 >> 28) {
                  goto LABEL_84;
                }
                goto LABEL_82;
              }
            }
          }
          if (v59 >= 0x80)
          {
            if (v59 >= 0x4000)
            {
              if (v59 >= 0x200000)
              {
                unint64_t v61 = 0;
                if (v59 >> 28) {
LABEL_84:
                }
                  uint64_t v66 = 5;
                else {
LABEL_82:
                }
                  uint64_t v66 = 4;
              }
              else
              {
                unint64_t v61 = 0;
                uint64_t v66 = 3;
              }
            }
            else
            {
              unint64_t v61 = 0;
LABEL_78:
              uint64_t v66 = 2;
            }
          }
          else
          {
            unint64_t v61 = 0;
            uint64_t v66 = 1;
          }
LABEL_85:
          uint64_t result = sub_1C8CA7C20(v61);
          uint64_t v69 = v66 + result;
          if (__OFADD__(v66, result)) {
            goto LABEL_91;
          }
          uint64_t v70 = v69 + v61;
          if (__OFADD__(v69, v61))
          {
LABEL_92:
            __break(1u);
            return result;
          }
          uint64_t v71 = v81;
          swift_bridgeObjectRetain();
          uint64_t v95 = sub_1C8CA4A2C(v70);
          uint64_t v96 = v72;
          sub_1C8D55AB8(&v95, (8 * v58) | 2, (unint64_t *)&v87, (uint64_t)v71);
          sub_1C8CA9498((uint64_t)v100);
          uint64_t v73 = v95;
          uint64_t v74 = v96;
          uint64_t v75 = v84;
          sub_1C8CAA9F0(*(void *)(v84 + 144), *(void *)(v84 + 152));
          *(void *)(v75 + 144) = v73;
          *(void *)(v75 + 152) = v74;
          uint64_t v67 = v75;
        }
        else
        {
LABEL_67:
          sub_1C8CA9498((uint64_t)v100);
          uint64_t v67 = v84;
        }
        *(unsigned char *)(v67 + 32) = 1;
        return swift_bridgeObjectRelease();
      }
    }
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  if (!*(unsigned char *)(v3 + 33))
  {
    uint64_t v28 = v15;
    int v29 = v25;
    uint64_t v85 = v24;
    uint64_t v30 = result;
    uint64_t result = sub_1C8CA91C4();
    if (!v4)
    {
      uint64_t v84 = v3;
      (*(void (**)(void, uint64_t))(v104 + 32))((int)result, a2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v14, 1, a2) == 1)
      {
        return v29[1](v14, v30);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v27, v14, a2);
        (*(void (**)(uint64_t, char *, uint64_t))(v28 + 16))(v85, v27, a2);
        sub_1C8D88550();
        sub_1C8D88530();
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v27, a2);
        *(unsigned char *)(v84 + 32) = 1;
      }
    }
  }
  return result;
}

unsigned char *sub_1C8D51A7C(unsigned char *result, uint64_t a2, unsigned int a3, unint64_t *a4, uint64_t a5)
{
  if (result && a2 - (uint64_t)result >= 1)
  {
    unint64_t v5 = a3;
    if (a3 < 0x80)
    {
      LOBYTE(v6) = a3;
    }
    else
    {
      do
      {
        *result++ = v5 | 0x80;
        unint64_t v6 = v5 >> 7;
        unint64_t v7 = v5 >> 14;
        v5 >>= 7;
      }
      while (v7);
    }
    *result++ = v6;
    unint64_t v8 = *a4;
    if (*a4 < 0x80)
    {
      unint64_t v9 = *a4;
    }
    else
    {
      do
      {
        *result++ = v8 | 0x80;
        unint64_t v9 = v8 >> 7;
        unint64_t v10 = v8 >> 14;
        v8 >>= 7;
      }
      while (v10);
    }
    *uint64_t result = v9;
    uint64_t v11 = *(void *)(a5 + 16);
    if (v11)
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        ++result;
        unint64_t v14 = *(int *)(a5 + 32 + 4 * i);
        if (v14 < 0x80)
        {
          LODWORD(v13) = *(_DWORD *)(a5 + 32 + 4 * i);
        }
        else
        {
          do
          {
            *result++ = v14 | 0x80;
            unint64_t v13 = v14 >> 7;
            unint64_t v15 = v14 >> 14;
            v14 >>= 7;
          }
          while (v15);
        }
        *uint64_t result = v13;
      }
    }
  }
  return result;
}

uint64_t sub_1C8D51B44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1C8D88620();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v8, v10);
  unint64_t v13 = (char *)&v23 - v12;
  uint64_t v14 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](v11, v15);
  uint64_t v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v24 = a1;
  v18(v13, a1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, a2) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v17, v13, a2);
  }
  uint64_t v19 = v25;
  char v20 = sub_1C8D51DD8((uint64_t)v17, *(void *)(v4 + 40), a2, a3);
  if (v19 || (v20 & 1) == 0) {
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, a2);
  }
  uint64_t v21 = v24;
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v24, v8);
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v21, v17, a2);
  uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v21, 0, 1, a2);
  *(unsigned char *)(v4 + 32) = 1;
  return result;
}

uint64_t sub_1C8D51DD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(unsigned char *)(v4 + 33) != 3)
  {
    char v19 = 0;
    return v19 & 1;
  }
  uint64_t v6 = *(void *)(v4 + 120);
  uint64_t v7 = v6 - 1;
  if (__OFSUB__(v6, 1))
  {
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  *(void *)(v4 + 120) = v7;
  if (v7 < 0)
  {
    sub_1C8D0E090();
    swift_allocError();
    *char v20 = 6;
    swift_willThrow();
    return v19 & 1;
  }
  sub_1C8CA92A4(v4, (uint64_t)v24);
  uint64_t v29 = a2;
  char v30 = 0;
  char v26 = 1;
  (*(void (**)(unsigned char *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(a4 + 64))(v24, &type metadata for BinaryDecoder, &off_1F2356D48, a3, a4);
  if (v5)
  {
LABEL_17:
    sub_1C8CA9498((uint64_t)v24);
    return v19 & 1;
  }
  if (v28 != a2 || v27 != 4)
  {
    sub_1C8D0E090();
    swift_allocError();
    *uint64_t v21 = 1;
    swift_willThrow();
    goto LABEL_17;
  }
  unint64_t v11 = v32;
  if (v32 >> 60 != 15)
  {
    uint64_t v12 = v31;
    BOOL v33 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(a4 + 56);
    sub_1C8CA3CF8(v31, v32);
    unint64_t v13 = (void (*)(unsigned char *, void))v33(v23, a3, a4);
    sub_1C8D881E0();
    v13(v23, 0);
    sub_1C8CAA9F0(v12, v11);
  }
  uint64_t v14 = *(void *)(v4 + 8);
  uint64_t v15 = v14 - v25;
  if (__OFSUB__(v14, v25)) {
    goto LABEL_20;
  }
  BOOL v16 = __OFSUB__(v14, v15);
  uint64_t v17 = v25;
  if (v16)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  *(void *)v4 += v15;
  *(void *)(v4 + 8) = v17;
  uint64_t v18 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  *(void *)(v4 + 120) = v18;
  if (*(void *)(v4 + 104) >= v18)
  {
    sub_1C8CA9498((uint64_t)v24);
    char v19 = 1;
    return v19 & 1;
  }
LABEL_23:
  uint64_t result = sub_1C8D88750();
  __break(1u);
  return result;
}

uint64_t sub_1C8D52068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(a2 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](a1, a2);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8, v11);
  unint64_t v13 = (char *)v18 - v12;
  (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v15, v14);
  char v16 = sub_1C8D51DD8((uint64_t)v13, *(void *)(v3 + 40), a2, a3);
  if (v4 || (v16 & 1) == 0) {
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v13, a2);
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v13, a2);
  sub_1C8D88550();
  sub_1C8D88530();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v13, a2);
  *(unsigned char *)(v3 + 32) = 1;
  return result;
}

unint64_t sub_1C8D52210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v90 = a1;
  uint64_t v96 = *(void *)(a4 + 8);
  uint64_t v94 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v98 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = MEMORY[0x1F4188790](AssociatedTypeWitness, v9);
  long long v91 = (char *)v78 - v11;
  uint64_t v92 = a3;
  uint64_t v12 = *(void *)(a5 + 8);
  uint64_t v13 = v10;
  uint64_t v95 = v12;
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v15 = sub_1C8D88620();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v15, v17);
  uint64_t v89 = (char *)v78 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v18, v20);
  long long v88 = (char *)v78 - v22;
  MEMORY[0x1F4188790](v21, v23);
  uint64_t v25 = (char *)v78 - v24;
  uint64_t v26 = sub_1C8D88620();
  uint64_t v28 = MEMORY[0x1F4188790](v26, v27);
  MEMORY[0x1F4188790](v28, v29);
  unint64_t result = (unint64_t)v78 - v30;
  if (*(unsigned char *)(v5 + 33) != 2) {
    return result;
  }
  uint64_t v86 = v16;
  uint64_t v87 = v32;
  uint64_t v85 = v31;
  uint64_t v97 = v15;
  unint64_t v34 = *(void (**)(void))(v98 + 56);
  long long v93 = (char *)v78 - v30;
  v34();
  uint64_t v35 = *(void *)(v14 - 8);
  unint64_t v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56);
  v36(v25, 1, 1, v14);
  uint64_t v37 = v121;
  unint64_t result = sub_1C8CA91C4();
  uint64_t v121 = v37;
  if (v37)
  {
LABEL_6:
    (*(void (**)(char *, uint64_t))(v86 + 8))(v25, v97);
    return (*(uint64_t (**)(char *, uint64_t))(v87 + 8))(v93, v26);
  }
  uint64_t v81 = v35;
  BOOL v82 = v36;
  uint64_t v83 = v35 + 56;
  uint64_t v84 = v13;
  unint64_t v38 = *(void *)(v5 + 8);
  if ((v38 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_61:
    __break(1u);
    return result;
  }
  unint64_t v39 = result;
  BOOL v40 = v38 >= result;
  unint64_t v41 = v38 - result;
  if (!v40)
  {
    sub_1C8D0E090();
    uint64_t v42 = swift_allocError();
    *char v43 = 1;
    uint64_t v121 = v42;
    swift_willThrow();
    goto LABEL_6;
  }
  uint64_t v79 = v5;
  uint64_t v80 = v26;
  unint64_t v44 = *(void *)v5;
  *(void *)v5 += result;
  *(void *)(v5 + 8) = v41;
  sub_1C8CA92A4(v5, (uint64_t)v107);
  uint64_t v45 = v108[7];
  char v46 = v109;
  sub_1C8CA9434((uint64_t)v108, (uint64_t)v106, (uint64_t *)&unk_1EBCB2D10);
  LOWORD(v101[0]) = 1;
  *(_OWORD *)((char *)v101 + 8) = 0u;
  *(_OWORD *)((char *)&v101[1] + 8) = 0u;
  *(_OWORD *)((char *)&v101[2] + 8) = 0u;
  *((void *)&v101[3] + 1) = 0;
  LOBYTE(v102) = 1;
  long long v104 = xmmword_1C8D8BEE0;
  long long v105 = xmmword_1C8D8BEE0;
  *(void *)&long long v99 = v44;
  *((void *)&v99 + 1) = v39;
  long long v100 = v44;
  sub_1C8CA88A8((uint64_t)v106, (uint64_t)&v101[1], (uint64_t *)&unk_1EBCB2D10);
  *((void *)&v102 + 1) = v45;
  LOBYTE(v103) = v46;
  *((void *)&v103 + 1) = v45;
  long long v119 = v104;
  long long v120 = v105;
  long long v113 = v101[0];
  long long v114 = v101[1];
  long long v115 = v101[2];
  long long v116 = v101[3];
  long long v111 = v99;
  long long v112 = v100;
  long long v117 = v102;
  long long v118 = v103;
  uint64_t v47 = v110;
  unint64_t result = sub_1C8CA9498((uint64_t)v107);
  *((void *)&v118 + 1) = v47;
  unint64_t v49 = *((void *)&v111 + 1);
  uint64_t v48 = (char *)v111;
  long long v112 = (unint64_t)v111;
  uint64_t v50 = v25;
  if (*((uint64_t *)&v111 + 1) >= 1)
  {
    uint64_t v51 = v97;
    v78[1] = v96 + 32;
    v78[2] = v95 + 32;
    uint64_t v52 = v87;
    uint64_t v53 = v80;
    uint64_t v54 = v121;
    uint64_t v55 = v14;
    uint64_t v14 = v98;
    while (1)
    {
      unint64_t v56 = (unsigned __int8 *)(v48 + 1);
      unint64_t v57 = *v48;
      --v49;
      if (*v48 < 0)
      {
        if (!v49) {
          goto LABEL_49;
        }
        v57 &= 0x7Fu;
        unint64_t v56 = (unsigned __int8 *)(v48 + 2);
        unint64_t v58 = 7;
        while (1)
        {
          v57 |= (unint64_t)(*(v56 - 1) & 0x7F) << v58;
          if ((*(v56 - 1) & 0x80) == 0) {
            break;
          }
          if (v49 >= 2)
          {
            ++v56;
            --v49;
            BOOL v60 = v58 > 0x38;
            v58 += 7;
            if (!v60) {
              continue;
            }
          }
          goto LABEL_49;
        }
        --v49;
        *(void *)&long long v111 = v56;
        *((void *)&v111 + 1) = v49;
        if (v57 >= 0xFFFFFFFF) {
          goto LABEL_49;
        }
      }
      else
      {
        *(void *)&long long v111 = v48 + 1;
        *((void *)&v111 + 1) = v49;
      }
      unsigned int v59 = v57 & 7;
      BOOL v60 = v57 < 8 || v59 > 5;
      if (v60) {
        goto LABEL_49;
      }
      if (v59 >= 4)
      {
        if (v59 == 4)
        {
          BYTE1(v113) = 4;
          *((void *)&v113 + 1) = v57 >> 3;
LABEL_49:
          sub_1C8D0E090();
          swift_allocError();
          *uint64_t v70 = 3;
          goto LABEL_50;
        }
        if (v59 != 5)
        {
          __break(1u);
          goto LABEL_43;
        }
      }
      BYTE1(v113) = v57 & 7;
      unint64_t v61 = v57 >> 3;
      *((void *)&v113 + 1) = v61;
      if (v61 == 2) {
        break;
      }
      if (v61 == 1)
      {
        uint64_t v62 = v54;
        unint64_t result = (*(uint64_t (**)(char *, long long *, ValueMetadata *, _UNKNOWN **))(v96 + 32))(v93, &v111, &type metadata for BinaryDecoder, &off_1F2356D48);
        goto LABEL_29;
      }
      int64_t v63 = v56 - (unsigned __int8 *)v48;
      BOOL v64 = __OFADD__(v49, v63);
      uint64_t v65 = v49 + v63;
      if (v64) {
        goto LABEL_61;
      }
      *(void *)&long long v111 = v48;
      *((void *)&v111 + 1) = v65;
      if (v65 < 1)
      {
        sub_1C8D0E090();
        swift_allocError();
        *int v77 = 1;
        swift_willThrow();
LABEL_59:
        uint64_t v51 = v97;
LABEL_51:
        sub_1C8CA9498((uint64_t)&v111);
        (*(void (**)(char *, uint64_t))(v86 + 8))(v50, v51);
        return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v93, v53);
      }
      unint64_t v66 = sub_1C8CA91C4();
      if (v54) {
        goto LABEL_59;
      }
      uint64_t v51 = v97;
      if (v66 > 0xFFFFFFFE || v66 < 8 || (v66 & 7) >= 6) {
        goto LABEL_49;
      }
      BYTE1(v113) = v66 & 7;
      *((void *)&v113 + 1) = v66 >> 3;
      unint64_t result = sub_1C8CAA5FC(v66);
LABEL_38:
      uint64_t v51 = v97;
      unint64_t v49 = *((void *)&v111 + 1);
      uint64_t v48 = (char *)v111;
      long long v112 = (unint64_t)v111;
      if (*((uint64_t *)&v111 + 1) < 1) {
        goto LABEL_44;
      }
    }
    uint64_t v62 = v54;
    unint64_t result = (*(uint64_t (**)(char *, long long *, ValueMetadata *, _UNKNOWN **))(v95 + 32))(v50, &v111, &type metadata for BinaryDecoder, &off_1F2356D48);
LABEL_29:
    uint64_t v54 = v62;
    if (v62)
    {
      sub_1C8CA9498((uint64_t)&v111);
      (*(void (**)(char *, uint64_t))(v86 + 8))(v50, v97);
      return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v93, v53);
    }
    goto LABEL_38;
  }
LABEL_43:
  uint64_t v52 = v87;
  uint64_t v53 = v80;
  uint64_t v55 = v14;
  uint64_t v51 = v97;
  uint64_t v14 = v98;
LABEL_44:
  if (v49)
  {
    sub_1C8D0E090();
    swift_allocError();
    *uint64_t v67 = 0;
LABEL_50:
    swift_willThrow();
    goto LABEL_51;
  }
  uint64_t v98 = v55;
  uint64_t v121 = (uint64_t)v50;
  uint64_t v68 = v85;
  (*(void (**)(uint64_t, char *, uint64_t))(v52 + 16))(v85, v93, v53);
  uint64_t v69 = v84;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v68, 1, v84) == 1)
  {
    (*(void (**)(void))(v96 + 24))();
    uint64_t v51 = v97;
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v68, v53);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v91, v68, v69);
  }
  uint64_t v71 = v86;
  uint64_t v72 = v89;
  (*(void (**)(char *, uint64_t, uint64_t))(v86 + 16))(v89, v121, v51);
  uint64_t v73 = v81;
  uint64_t v74 = v98;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48))(v72, 1, v98) == 1)
  {
    uint64_t v75 = v88;
    uint64_t v76 = v51;
    (*(void (**)(void))(v95 + 24))();
    (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v51);
  }
  else
  {
    uint64_t v75 = v88;
    (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v88, v72, v74);
    uint64_t v76 = v51;
  }
  v82(v75, 0, 1, v74);
  swift_getAssociatedConformanceWitness();
  sub_1C8D88290();
  sub_1C8D882B0();
  sub_1C8CA9498((uint64_t)&v111);
  (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v121, v76);
  unint64_t result = (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v93, v80);
  *(unsigned char *)(v79 + 32) = 1;
  return result;
}

unint64_t sub_1C8D52C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v109 = a5;
  uint64_t v9 = *(void *)(a4 + 8);
  uint64_t v111 = a2;
  uint64_t v112 = v9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v114 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness, v11);
  uint64_t v106 = (char *)&v90 - v12;
  uint64_t v113 = sub_1C8D88620();
  uint64_t v13 = *(void *)(v113 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v113, v14);
  long long v104 = (char *)&v90 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v15, v17);
  long long v105 = (char *)&v90 - v19;
  uint64_t v21 = MEMORY[0x1F4188790](v18, v20);
  uint64_t v23 = (char *)&v90 - v22;
  MEMORY[0x1F4188790](v21, v24);
  uint64_t v26 = (char *)&v90 - v25;
  uint64_t v27 = sub_1C8D88620();
  uint64_t v29 = MEMORY[0x1F4188790](v27, v28);
  MEMORY[0x1F4188790](v29, v30);
  unint64_t result = (unint64_t)&v90 - v31;
  if (*(unsigned char *)(v5 + 33) == 2)
  {
    uint64_t v107 = v33;
    uint64_t v108 = v13;
    long long v103 = v23;
    uint64_t v100 = v32;
    uint64_t v101 = a1;
    uint64_t v35 = *(void (**)(void))(v114 + 56);
    uint64_t v110 = (char *)&v90 - v31;
    v35();
    uint64_t v36 = *(void *)(a3 - 8);
    uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56);
    v37(v26, 1, 1, a3);
    uint64_t v38 = v137;
    unint64_t result = sub_1C8CA91C4();
    uint64_t v137 = v38;
    if (v38)
    {
LABEL_6:
      (*(void (**)(char *, uint64_t))(v108 + 8))(v26, v113);
      return (*(uint64_t (**)(char *, uint64_t))(v107 + 8))(v110, v27);
    }
    uint64_t v98 = AssociatedTypeWitness;
    uint64_t v99 = v36;
    uint64_t v94 = v37;
    uint64_t v95 = v36 + 56;
    uint64_t v97 = a3;
    long long v102 = v26;
    unint64_t v39 = *(void *)(v5 + 8);
    if ((v39 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
    }
    else
    {
      BOOL v40 = v39 >= result;
      unint64_t v41 = v39 - result;
      uint64_t v42 = v99;
      if (!v40)
      {
        sub_1C8D0E090();
        uint64_t v43 = swift_allocError();
        *unint64_t v44 = 1;
        uint64_t v137 = v43;
        swift_willThrow();
        uint64_t v26 = v102;
        goto LABEL_6;
      }
      uint64_t v45 = v5;
      uint64_t v96 = v27;
      unint64_t v46 = *(void *)v5;
      *(void *)v5 += result;
      *(void *)(v5 + 8) = v41;
      unint64_t v47 = result;
      sub_1C8CA92A4(v45, (uint64_t)v123);
      uint64_t v48 = v124[7];
      char v49 = v125;
      sub_1C8CA9434((uint64_t)v124, (uint64_t)v122, (uint64_t *)&unk_1EBCB2D10);
      LOWORD(v117[0]) = 1;
      *(_OWORD *)((char *)v117 + 8) = 0u;
      *(_OWORD *)((char *)&v117[1] + 8) = 0u;
      *(_OWORD *)((char *)&v117[2] + 8) = 0u;
      *((void *)&v117[3] + 1) = 0;
      LOBYTE(v118) = 1;
      long long v120 = xmmword_1C8D8BEE0;
      long long v121 = xmmword_1C8D8BEE0;
      *(void *)&long long v115 = v46;
      *((void *)&v115 + 1) = v47;
      long long v116 = v46;
      sub_1C8CA88A8((uint64_t)v122, (uint64_t)&v117[1], (uint64_t *)&unk_1EBCB2D10);
      *((void *)&v118 + 1) = v48;
      LOBYTE(v119) = v49;
      *((void *)&v119 + 1) = v48;
      long long v135 = v120;
      long long v136 = v121;
      long long v129 = v117[0];
      long long v130 = v117[1];
      long long v131 = v117[2];
      long long v132 = v117[3];
      long long v127 = v115;
      long long v128 = v116;
      long long v133 = v118;
      long long v134 = v119;
      uint64_t v50 = v126;
      unint64_t result = sub_1C8CA9498((uint64_t)v123);
      *((void *)&v134 + 1) = v50;
      uint64_t v52 = *((void *)&v127 + 1);
      uint64_t v51 = (char *)v127;
      long long v128 = (unint64_t)v127;
      if (*((uint64_t *)&v127 + 1) >= 1)
      {
        uint64_t v92 = (void (**)(char *, char *, uint64_t))(v108 + 16);
        long long v91 = (uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 48);
        uint64_t v53 = (void (**)(char *, uint64_t))(v108 + 8);
        uint64_t v93 = v112 + 32;
        uint64_t v54 = v107;
        uint64_t v55 = v96;
        unint64_t v56 = v102;
        uint64_t v57 = v98;
        while (1)
        {
          unint64_t v58 = (unsigned __int8 *)(v51 + 1);
          unint64_t v59 = *v51;
          unint64_t v60 = v52 - 1;
          if (*v51 < 0)
          {
            if (!v60) {
              goto LABEL_52;
            }
            v59 &= 0x7Fu;
            unint64_t v58 = (unsigned __int8 *)(v51 + 2);
            unint64_t v61 = 7;
            while (1)
            {
              v59 |= (unint64_t)(*(v58 - 1) & 0x7F) << v61;
              if ((*(v58 - 1) & 0x80) == 0) {
                break;
              }
              if (v60 >= 2)
              {
                ++v58;
                --v60;
                BOOL v63 = v61 > 0x38;
                v61 += 7;
                if (!v63) {
                  continue;
                }
              }
              goto LABEL_52;
            }
            --v60;
            *(void *)&long long v127 = v58;
            *((void *)&v127 + 1) = v60;
            if (v59 >= 0xFFFFFFFF) {
              goto LABEL_52;
            }
          }
          else
          {
            *(void *)&long long v127 = v51 + 1;
            *((void *)&v127 + 1) = v60;
          }
          unsigned int v62 = v59 & 7;
          BOOL v63 = v59 < 8 || v62 > 5;
          if (v63) {
            goto LABEL_52;
          }
          if ((v59 & 7) != 0 && v62 - 1 >= 3)
          {
            if (v62 == 4)
            {
              BYTE1(v129) = 4;
              *((void *)&v129 + 1) = v59 >> 3;
LABEL_52:
              sub_1C8D0E090();
              swift_allocError();
              *uint64_t v81 = 3;
              swift_willThrow();
LABEL_53:
              sub_1C8CA9498((uint64_t)&v127);
              (*v53)(v56, v113);
              return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v110, v55);
            }
            if (v62 != 5) {
              goto LABEL_68;
            }
          }
          BYTE1(v129) = v59 & 7;
          unint64_t v64 = v59 >> 3;
          *((void *)&v129 + 1) = v64;
          if (v64 == 2)
          {
            uint64_t v67 = v53;
            uint64_t v68 = v45;
            uint64_t v69 = v97;
            uint64_t v70 = v137;
            sub_1C8D50D98(v56, v97, v109);
            uint64_t v137 = v70;
            if (v70)
            {
              sub_1C8CA9498((uint64_t)&v127);
              (*v67)(v56, v113);
              return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v110, v55);
            }
            uint64_t v71 = v103;
            uint64_t v72 = v113;
            (*v92)(v103, v56, v113);
            int v73 = (*v91)(v71, 1, v69);
            uint64_t v74 = *v67;
            unint64_t result = ((uint64_t (*)(char *, uint64_t))*v67)(v71, v72);
            if (v73 == 1)
            {
              uint64_t v57 = v98;
              if (!v62)
              {
                sub_1C8CA9498((uint64_t)&v127);
                v74(v102, v113);
                return (*(uint64_t (**)(char *, uint64_t))(v107 + 8))(v110, v96);
              }
              uint64_t v45 = v68;
              unint64_t v56 = v102;
              uint64_t v55 = v96;
              uint64_t v54 = v107;
            }
            else
            {
              unint64_t v56 = v102;
              uint64_t v45 = v68;
              uint64_t v55 = v96;
              uint64_t v54 = v107;
              uint64_t v57 = v98;
            }
            uint64_t v66 = v114;
            uint64_t v53 = v67;
          }
          else
          {
            if (v64 == 1)
            {
              uint64_t v65 = v137;
              unint64_t result = (*(uint64_t (**)(char *, long long *, ValueMetadata *, _UNKNOWN **))(v112 + 32))(v110, &v127, &type metadata for BinaryDecoder, &off_1F2356D48);
              uint64_t v137 = v65;
              uint64_t v66 = v114;
              if (v65)
              {
                sub_1C8CA9498((uint64_t)&v127);
                (*v53)(v102, v113);
                return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v110, v55);
              }
            }
            else
            {
              int64_t v75 = v58 - (unsigned __int8 *)v51;
              BOOL v76 = __OFADD__(v60, v75);
              uint64_t v77 = v60 + v75;
              uint64_t v66 = v114;
              if (v76) {
                goto LABEL_67;
              }
              *(void *)&long long v127 = v51;
              *((void *)&v127 + 1) = v77;
              if (v77 < 1)
              {
                sub_1C8D0E090();
                swift_allocError();
                *uint64_t v89 = 1;
                swift_willThrow();
                unint64_t v56 = v102;
                goto LABEL_53;
              }
              uint64_t v78 = v137;
              unint64_t v79 = sub_1C8CA91C4();
              if (v78)
              {
                unint64_t v56 = v102;
                goto LABEL_53;
              }
              unint64_t v56 = v102;
              if (v79 > 0xFFFFFFFE || v79 < 8 || (v79 & 7) >= 6) {
                goto LABEL_52;
              }
              BYTE1(v129) = v79 & 7;
              *((void *)&v129 + 1) = v79 >> 3;
              unint64_t result = sub_1C8CAA5FC(v79);
              uint64_t v137 = 0;
            }
            unint64_t v56 = v102;
          }
          uint64_t v52 = *((void *)&v127 + 1);
          uint64_t v51 = (char *)v127;
          long long v128 = (unint64_t)v127;
          if (*((uint64_t *)&v127 + 1) < 1) {
            goto LABEL_49;
          }
        }
      }
      uint64_t v54 = v107;
      uint64_t v55 = v96;
      unint64_t v56 = v102;
      uint64_t v57 = v98;
      uint64_t v66 = v114;
LABEL_49:
      if (v52)
      {
        sub_1C8D0E090();
        swift_allocError();
        *uint64_t v80 = 0;
        swift_willThrow();
        sub_1C8CA9498((uint64_t)&v127);
        (*(void (**)(char *, uint64_t))(v108 + 8))(v56, v113);
        return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v110, v55);
      }
      else
      {
        uint64_t v82 = v55;
        uint64_t v83 = v100;
        (*(void (**)(uint64_t, char *, uint64_t))(v54 + 16))(v100, v110, v82);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v83, 1, v57) == 1)
        {
          (*(void (**)(void))(v112 + 24))();
          unint64_t v56 = v102;
          (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v83, v82);
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v66 + 32))(v106, v83, v57);
        }
        uint64_t v84 = v108;
        uint64_t v85 = v104;
        uint64_t v86 = v113;
        (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v104, v56, v113);
        uint64_t v87 = v99;
        uint64_t v88 = v97;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48))(v85, 1, v97) == 1)
        {
          (*(void (**)(uint64_t))(v109 + 24))(v97);
          uint64_t v88 = v97;
          (*(void (**)(char *, uint64_t))(v84 + 8))(v85, v86);
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v105, v85, v88);
        }
        v94(v105, 0, 1, v88);
        swift_getAssociatedConformanceWitness();
        sub_1C8D88290();
        sub_1C8D882B0();
        sub_1C8CA9498((uint64_t)&v127);
        (*(void (**)(char *, uint64_t))(v84 + 8))(v102, v86);
        unint64_t result = (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v110, v96);
        *(unsigned char *)(v45 + 32) = 1;
      }
    }
  }
  return result;
}

unint64_t sub_1C8D5376C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v98 = a5;
  uint64_t v96 = a1;
  uint64_t v101 = *(void *)(a4 + 8);
  uint64_t v99 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness, v10);
  uint64_t v97 = (char *)v81 - v11;
  uint64_t v125 = a3;
  uint64_t v12 = sub_1C8D88620();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v12, v14);
  uint64_t v95 = (char *)v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v15, v17);
  uint64_t v94 = (char *)v81 - v19;
  MEMORY[0x1F4188790](v18, v20);
  uint64_t v22 = (char *)v81 - v21;
  uint64_t v23 = sub_1C8D88620();
  uint64_t v25 = MEMORY[0x1F4188790](v23, v24);
  unint64_t result = MEMORY[0x1F4188790](v25, v26);
  uint64_t v32 = (char *)v81 - v28;
  if (*((unsigned char *)v5 + 33) != 2) {
    return result;
  }
  uint64_t v92 = v31;
  uint64_t v93 = v30;
  uint64_t v90 = v9;
  uint64_t v91 = v13;
  uint64_t v89 = v29;
  uint64_t v102 = v12;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))((char *)v81 - v28, 1, 1, AssociatedTypeWitness);
  uint64_t v33 = *(void *)(v125 - 8);
  unint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 56);
  v34(v22, 1, 1);
  uint64_t v35 = v32;
  unint64_t result = sub_1C8CA91C4();
  uint64_t v100 = v6;
  if (v6)
  {
LABEL_6:
    (*(void (**)(char *, uint64_t))(v91 + 8))(v22, v102);
    return (*(uint64_t (**)(char *, uint64_t))(v92 + 8))(v35, v93);
  }
  uint64_t v83 = v33;
  uint64_t v84 = v34;
  uint64_t v85 = v33 + 56;
  uint64_t v87 = AssociatedTypeWitness;
  uint64_t v36 = v125;
  uint64_t v88 = v35;
  unint64_t v37 = v5[1];
  if ((v37 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_61:
    __break(1u);
    return result;
  }
  unint64_t v38 = result;
  BOOL v39 = v37 >= result;
  unint64_t v40 = v37 - result;
  if (!v39)
  {
    sub_1C8D0E090();
    uint64_t v41 = swift_allocError();
    *uint64_t v42 = 1;
    uint64_t v100 = v41;
    swift_willThrow();
    uint64_t v35 = v88;
    goto LABEL_6;
  }
  uint64_t v43 = v5;
  unint64_t v44 = *v5;
  unint64_t v45 = v38;
  *uint64_t v43 = v44 + v38;
  v43[1] = v40;
  uint64_t v82 = v43;
  sub_1C8CA92A4((uint64_t)v43, (uint64_t)v111);
  uint64_t v46 = v112[7];
  char v47 = v113;
  sub_1C8CA9434((uint64_t)v112, (uint64_t)v110, (uint64_t *)&unk_1EBCB2D10);
  LOWORD(v105[0]) = 1;
  *(_OWORD *)((char *)v105 + 8) = 0u;
  *(_OWORD *)((char *)&v105[1] + 8) = 0u;
  *(_OWORD *)((char *)&v105[2] + 8) = 0u;
  *((void *)&v105[3] + 1) = 0;
  LOBYTE(v106) = 1;
  long long v108 = xmmword_1C8D8BEE0;
  long long v109 = xmmword_1C8D8BEE0;
  *(void *)&long long v103 = v44;
  *((void *)&v103 + 1) = v45;
  long long v104 = v44;
  sub_1C8CA88A8((uint64_t)v110, (uint64_t)&v105[1], (uint64_t *)&unk_1EBCB2D10);
  *((void *)&v106 + 1) = v46;
  LOBYTE(v107) = v47;
  *((void *)&v107 + 1) = v46;
  long long v123 = v108;
  long long v124 = v109;
  long long v117 = v105[0];
  long long v118 = v105[1];
  long long v119 = v105[2];
  long long v120 = v105[3];
  long long v115 = v103;
  long long v116 = v104;
  long long v121 = v106;
  long long v122 = v107;
  uint64_t v48 = v114;
  unint64_t result = sub_1C8CA9498((uint64_t)v111);
  *((void *)&v122 + 1) = v48;
  unint64_t v50 = *((void *)&v115 + 1);
  char v49 = (char *)v115;
  long long v116 = (unint64_t)v115;
  uint64_t v86 = v22;
  if (*((uint64_t *)&v115 + 1) >= 1)
  {
    uint64_t v51 = v102;
    v81[1] = v101 + 32;
    uint64_t v53 = v92;
    uint64_t v52 = v93;
    uint64_t v54 = v100;
    uint64_t v55 = v87;
    uint64_t v56 = v90;
    while (1)
    {
      uint64_t v57 = (unsigned __int8 *)(v49 + 1);
      unint64_t v58 = *v49;
      --v50;
      if (*v49 < 0)
      {
        if (!v50) {
          goto LABEL_49;
        }
        v58 &= 0x7Fu;
        uint64_t v57 = (unsigned __int8 *)(v49 + 2);
        unint64_t v59 = 7;
        while (1)
        {
          v58 |= (unint64_t)(*(v57 - 1) & 0x7F) << v59;
          if ((*(v57 - 1) & 0x80) == 0) {
            break;
          }
          if (v50 >= 2)
          {
            ++v57;
            --v50;
            BOOL v61 = v59 > 0x38;
            v59 += 7;
            if (!v61) {
              continue;
            }
          }
          goto LABEL_49;
        }
        --v50;
        *(void *)&long long v115 = v57;
        *((void *)&v115 + 1) = v50;
        if (v58 >= 0xFFFFFFFF) {
          goto LABEL_49;
        }
      }
      else
      {
        *(void *)&long long v115 = v49 + 1;
        *((void *)&v115 + 1) = v50;
      }
      unsigned int v60 = v58 & 7;
      BOOL v61 = v58 < 8 || v60 > 5;
      if (v61) {
        goto LABEL_49;
      }
      if (v60 >= 4)
      {
        if (v60 == 4)
        {
          BYTE1(v117) = 4;
          *((void *)&v117 + 1) = v58 >> 3;
LABEL_49:
          sub_1C8D0E090();
          swift_allocError();
          *uint64_t v71 = 3;
          goto LABEL_50;
        }
        if (v60 != 5)
        {
          __break(1u);
          goto LABEL_43;
        }
      }
      BYTE1(v117) = v58 & 7;
      unint64_t v62 = v58 >> 3;
      *((void *)&v117 + 1) = v62;
      if (v62 == 2) {
        break;
      }
      if (v62 == 1)
      {
        uint64_t v63 = v54;
        unint64_t result = (*(uint64_t (**)(char *, long long *, ValueMetadata *, _UNKNOWN **))(v101 + 32))(v88, &v115, &type metadata for BinaryDecoder, &off_1F2356D48);
        goto LABEL_29;
      }
      int64_t v64 = v57 - (unsigned __int8 *)v49;
      BOOL v65 = __OFADD__(v50, v64);
      uint64_t v66 = v50 + v64;
      if (v65) {
        goto LABEL_61;
      }
      *(void *)&long long v115 = v49;
      *((void *)&v115 + 1) = v66;
      if (v66 < 1)
      {
        sub_1C8D0E090();
        swift_allocError();
        *uint64_t v80 = 1;
        swift_willThrow();
LABEL_59:
        uint64_t v51 = v102;
LABEL_51:
        sub_1C8CA9498((uint64_t)&v115);
        (*(void (**)(char *, uint64_t))(v91 + 8))(v86, v51);
        return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v88, v52);
      }
      unint64_t v67 = sub_1C8CA91C4();
      if (v54) {
        goto LABEL_59;
      }
      uint64_t v51 = v102;
      if (v67 > 0xFFFFFFFE || v67 < 8 || (v67 & 7) >= 6) {
        goto LABEL_49;
      }
      BYTE1(v117) = v67 & 7;
      *((void *)&v117 + 1) = v67 >> 3;
      unint64_t result = sub_1C8CAA5FC(v67);
LABEL_38:
      uint64_t v51 = v102;
      unint64_t v50 = *((void *)&v115 + 1);
      char v49 = (char *)v115;
      long long v116 = (unint64_t)v115;
      if (*((uint64_t *)&v115 + 1) < 1) {
        goto LABEL_44;
      }
    }
    uint64_t v63 = v54;
    unint64_t result = sub_1C8CA9D8C((uint64_t)v86, v36, v98);
LABEL_29:
    uint64_t v54 = v63;
    if (v63)
    {
      sub_1C8CA9498((uint64_t)&v115);
      (*(void (**)(char *, uint64_t))(v91 + 8))(v86, v102);
      return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v88, v52);
    }
    goto LABEL_38;
  }
LABEL_43:
  uint64_t v53 = v92;
  uint64_t v52 = v93;
  uint64_t v51 = v102;
  uint64_t v55 = v87;
  uint64_t v56 = v90;
LABEL_44:
  if (v50)
  {
    sub_1C8D0E090();
    swift_allocError();
    *uint64_t v68 = 0;
LABEL_50:
    swift_willThrow();
    goto LABEL_51;
  }
  uint64_t v69 = v52;
  uint64_t v70 = v89;
  (*(void (**)(uint64_t, char *, uint64_t))(v53 + 16))(v89, v88, v69);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v70, 1, v55) == 1)
  {
    (*(void (**)(void))(v101 + 24))();
    uint64_t v51 = v102;
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v70, v69);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 32))(v97, v70, v55);
  }
  int v73 = v94;
  uint64_t v72 = v95;
  uint64_t v74 = v91;
  (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v95, v86, v51);
  uint64_t v75 = v83;
  uint64_t v76 = v125;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v72, 1, v125) == 1)
  {
    uint64_t v77 = v72;
    uint64_t v78 = v76;
    uint64_t v79 = v51;
    (*(void (**)(uint64_t))(v98 + 16))(v78);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v77, v51);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v73, v72, v76);
    uint64_t v78 = v76;
    uint64_t v79 = v51;
  }
  ((void (*)(char *, void, uint64_t, uint64_t))v84)(v73, 0, 1, v78);
  swift_getAssociatedConformanceWitness();
  sub_1C8D88290();
  sub_1C8D882B0();
  sub_1C8CA9498((uint64_t)&v115);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v86, v79);
  unint64_t result = (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v88, v93);
  *((unsigned char *)v82 + 32) = 1;
  return result;
}

uint64_t sub_1C8D54130(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 + 72);
  if (v6)
  {
    uint64_t v17 = a1;
    uint64_t v10 = *(void *)(v5 + 80);
    uint64_t v11 = __swift_project_boxed_opaque_existential_1((void *)(v5 + 48), v6);
    v21[6] = &v16;
    uint64_t v12 = *(void *)(v6 - 8);
    MEMORY[0x1F4188790](v11, v11);
    uint64_t v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v12 + 16))(v14);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8))(&v18, a2, a3, a4, v6, v10);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v6);
    if (*((void *)&v19 + 1))
    {
      sub_1C8CA4528(&v18, (uint64_t)v21);
      sub_1C8D56620(v17, a4, v21);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    }
  }
  else
  {
    uint64_t v20 = 0;
    long long v18 = 0u;
    long long v19 = 0u;
  }
  return sub_1C8D33174((uint64_t)&v18, &qword_1EA567230);
}

void sub_1C8D542E4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_1C8CA8B34();
  if (!v4)
  {
    while ((v9 & 1) == 0)
    {
      if (v8 == 1 && *(unsigned char *)(v3 + 33) == 3)
      {
        uint64_t v10 = *(void *)(v3 + 120);
        uint64_t v11 = v10 - 1;
        if (__OFSUB__(v10, 1))
        {
          __break(1u);
LABEL_21:
          __break(1u);
LABEL_22:
          __break(1u);
LABEL_23:
          __break(1u);
LABEL_24:
          sub_1C8D88750();
          __break(1u);
          return;
        }
        *(void *)(v3 + 120) = v11;
        if (v11 < 0)
        {
          sub_1C8D0E090();
          swift_allocError();
          *long long v18 = 6;
          swift_willThrow();
          return;
        }
        sub_1C8CA92A4(v3, (uint64_t)v20);
        uint64_t v23 = 1;
        char v24 = 0;
        char v22 = 1;
        char v12 = sub_1C8D544EC(a1, a2, a3);
        if (v12)
        {
          if (v12 != 1)
          {
            sub_1C8D0E090();
            swift_allocError();
            *long long v19 = 3;
            swift_willThrow();
            sub_1C8CA9498((uint64_t)v20);
            return;
          }
        }
        else
        {
          uint64_t v13 = *(void *)(v3 + 8);
          uint64_t v14 = v13 - v21;
          if (__OFSUB__(v13, v21)) {
            goto LABEL_22;
          }
          BOOL v15 = __OFSUB__(v13, v14);
          uint64_t v16 = v21;
          if (v15) {
            goto LABEL_23;
          }
          *(void *)v3 += v14;
          *(void *)(v3 + 8) = v16;
          *(unsigned char *)(v3 + 32) = 1;
        }
        uint64_t v17 = v11 + 1;
        if (__OFADD__(v11, 1)) {
          goto LABEL_21;
        }
        *(void *)(v3 + 120) = v17;
        if (*(void *)(v3 + 104) < v17) {
          goto LABEL_24;
        }
        sub_1C8CA9498((uint64_t)v20);
      }
      sub_1C8CA8B34();
    }
  }
}

uint64_t sub_1C8D544EC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v168 = *MEMORY[0x1E4F143B8];
  uint64_t v167 = 0;
  memset(v166, 0, sizeof(v166));
  sub_1C8CA8B34();
  if (v4)
  {
    unint64_t v11 = 0xF000000000000000;
    uint64_t v12 = 0;
    goto LABEL_3;
  }
  uint64_t v118 = a2;
  uint64_t v119 = a3;
  uint64_t v14 = 0;
  long long v116 = &v151;
  long long v117 = v3 + 6;
  uint64_t v114 = &v130;
  long long v115 = (long long *)((char *)&v129 + 8);
  uint64_t v112 = (long long *)&v164;
  char v113 = &v136;
  unint64_t v11 = 0xF000000000000000;
  BOOL v15 = &qword_1EA567230;
  long long v111 = xmmword_1C8D8BEE0;
LABEL_6:
  uint64_t v120 = v14;
  while (1)
  {
    if (v10)
    {
      sub_1C8CAA9F0(v120, v11);
      sub_1C8D33174((uint64_t)v166, &qword_1EA567230);
      return 0;
    }
    if (v9 != 3)
    {
      if (v9 != 2)
      {
        uint64_t v16 = (unsigned __int8 *)v5[3];
        if (!v16)
        {
          long long v18 = (unsigned __int8 *)v5[1];
          uint64_t v17 = (unsigned __int8 *)v5[2];
          long long v19 = (unsigned __int8 *)(*v5 - (void)v17);
          BOOL v20 = __OFADD__(v18, v19);
          uint64_t v21 = (uint64_t)&v19[(void)v18];
          if (v20)
          {
            __break(1u);
            sub_1C8CA9498((uint64_t)&v155);
            uint64_t v106 = v120;
            sub_1C8CAA9F0(v120, v11);
            sub_1C8CAA9F0(v106, v11);
            sub_1C8D33174((uint64_t)v166, &qword_1EA567230);
            return __swift_destroy_boxed_opaque_existential_1((uint64_t)v165);
          }
          goto LABEL_24;
        }
        goto LABEL_7;
      }
      if (*((unsigned char *)v5 + 33)) {
        goto LABEL_119;
      }
      uint64_t v33 = v5[1];
      BOOL v34 = v33 < 1;
      unint64_t v35 = v33 - 1;
      if (v34)
      {
        char v49 = 1;
LABEL_125:
        sub_1C8D0E090();
        swift_allocError();
        *long long v103 = v49;
        goto LABEL_118;
      }
      LODWORD(v36) = *(unsigned __int8 *)*v5;
      if (*(char *)*v5 < 0)
      {
        if (!v35)
        {
          char v49 = 3;
          goto LABEL_125;
        }
        v36 &= 0x7Fu;
        uint64_t v47 = *v5 + 2;
        unint64_t v48 = 7;
        while (1)
        {
          v36 |= (unint64_t)(*(unsigned char *)(v47 - 1) & 0x7F) << v48;
          if ((*(unsigned char *)(v47 - 1) & 0x80) == 0) {
            break;
          }
          char v49 = 3;
          if (v35 >= 2)
          {
            ++v47;
            --v35;
            BOOL v34 = v48 > 0x38;
            v48 += 7;
            if (!v34) {
              continue;
            }
          }
          goto LABEL_125;
        }
        --v35;
        *uint64_t v5 = v47;
      }
      else
      {
        ++*v5;
      }
      v5[1] = v35;
      *((unsigned char *)v5 + 32) = 1;
      if (!v36)
      {
LABEL_119:
        sub_1C8CAA9F0(v120, v11);
LABEL_120:
        sub_1C8D33174((uint64_t)v166, &qword_1EA567230);
        return 2;
      }
      uint64_t v50 = v5[9];
      if (!v50)
      {
        sub_1C8D33174((uint64_t)v166, &qword_1EA567230);
        long long v155 = 0u;
        long long v156 = 0u;
        *(void *)&long long v157 = 0;
LABEL_123:
        sub_1C8CAA9F0(v120, v11);
        sub_1C8D33174((uint64_t)&v155, &qword_1EA567230);
        return 1;
      }
      long long v109 = a1;
      uint64_t v51 = (unsigned __int8 *)v5[10];
      uint64_t v52 = __swift_project_boxed_opaque_existential_1(v117, v50);
      uint64_t v110 = &v107;
      uint64_t v53 = *(void *)(v50 - 8);
      MEMORY[0x1F4188790](v52, v52);
      uint64_t v55 = (char *)&v107 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v53 + 16))(v55);
      (*((void (**)(long long *__return_ptr, uint64_t, uint64_t, void, uint64_t, unsigned __int8 *))v51 + 1))(&v155, v118, v119, (int)v36, v50, v51);
      (*(void (**)(char *, uint64_t))(v53 + 8))(v55, v50);
      BOOL v15 = &qword_1EA567230;
      sub_1C8D33174((uint64_t)v166, &qword_1EA567230);
      if (!*((void *)&v156 + 1)) {
        goto LABEL_123;
      }
      sub_1C8CA4528(&v155, (uint64_t)v165);
      sub_1C8CA425C((uint64_t)v165, (uint64_t)v166);
      if (v11 >> 60 == 15)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v165);
        a1 = v109;
LABEL_112:
        sub_1C8CA8B34();
        uint64_t v14 = v120;
        goto LABEL_6;
      }
      switch(v11 >> 62)
      {
        case 1uLL:
          uint64_t v66 = v120;
          if (v66 >> 32 < (int)v66) {
            goto LABEL_134;
          }
          sub_1C8CA3CF8(v120, v11);
          sub_1C8CA3CF8(v66, v11);
          uint64_t v67 = sub_1C8D88110();
          if (!v67) {
            goto LABEL_63;
          }
          uint64_t v68 = sub_1C8D88140();
          if (__OFSUB__((int)v66, v68)) {
            goto LABEL_137;
          }
          v67 += (int)v66 - v68;
LABEL_63:
          a1 = v109;
          uint64_t v69 = sub_1C8D88130();
          if (v69 >= (v66 >> 32) - (int)v66) {
            uint64_t v70 = (v66 >> 32) - (int)v66;
          }
          else {
            uint64_t v70 = v69;
          }
          if (!v67 || v70 <= 0)
          {
            sub_1C8CAA9F0(v66, v11);
            sub_1C8CAA9F0(v66, v11);
            sub_1C8CA3D5C(v66, v11);
            goto LABEL_130;
          }
          sub_1C8CA92A4((uint64_t)v5, (uint64_t)&v149);
          uint64_t v71 = v152;
          LODWORD(v110) = v153;
          sub_1C8CA9434((uint64_t)v116, (uint64_t)v138, (uint64_t *)&unk_1EBCB2D10);
          LOWORD(v129) = 1;
          uint64_t v72 = (uint64_t)v114;
          int v73 = v115;
          *long long v115 = 0u;
          v73[1] = 0u;
          void v73[2] = 0u;
          *((void *)v73 + 6) = 0;
          LOBYTE(v133) = 1;
          long long v136 = v111;
          long long v137 = v111;
          *(void *)&long long v127 = v67;
          *((void *)&v127 + 1) = v70;
          long long v128 = (unint64_t)v67;
          sub_1C8CA88A8((uint64_t)v138, v72, (uint64_t *)&unk_1EBCB2D10);
          *((void *)&v133 + 1) = v71;
          long long v145 = v131;
          long long v146 = v132;
          long long v141 = v127;
          long long v142 = v128;
          long long v143 = v129;
          long long v144 = v130;
          long long v147 = v133;
          long long v74 = v113[1];
          long long v139 = *v113;
          LOBYTE(v134) = (_BYTE)v110;
          uint64_t v135 = v71;
          uint64_t v148 = v134;
          long long v140 = v74;
          uint64_t v75 = v154;
          sub_1C8CA9498((uint64_t)&v149);
          long long v159 = v145;
          long long v160 = v146;
          long long v161 = v147;
          long long v155 = v141;
          long long v156 = v142;
          long long v157 = v143;
          long long v158 = v144;
          uint64_t v162 = v148;
          uint64_t v163 = v75;
          long long v76 = v140;
          uint64_t v77 = v112;
          *uint64_t v112 = v139;
          v77[1] = v76;
          LOWORD(v157) = 512;
          sub_1C8D56620(a1, 2, v165);
          char v78 = v157;
          sub_1C8CA9498((uint64_t)&v155);
          uint64_t v79 = v120;
          sub_1C8CAA9F0(v120, v11);
          sub_1C8CAA9F0(v79, v11);
          sub_1C8CA3D5C(v79, v11);
          break;
        case 2uLL:
          uint64_t v81 = *(void *)(v120 + 16);
          uint64_t v80 = *(void *)(v120 + 24);
          sub_1C8D02DB8(v120, v11);
          swift_retain();
          swift_retain();
          uint64_t v82 = sub_1C8D88110();
          if (!v82) {
            goto LABEL_72;
          }
          uint64_t v83 = sub_1C8D88140();
          if (__OFSUB__(v81, v83)) {
            goto LABEL_138;
          }
          v82 += v81 - v83;
LABEL_72:
          BOOL v20 = __OFSUB__(v80, v81);
          uint64_t v84 = v80 - v81;
          if (v20) {
            goto LABEL_135;
          }
          uint64_t v110 = (uint64_t *)(v11 & 0x3FFFFFFFFFFFFFFFLL);
          uint64_t v85 = sub_1C8D88130();
          if (v85 >= v84) {
            uint64_t v86 = v84;
          }
          else {
            uint64_t v86 = v85;
          }
          a1 = v109;
          if (!v82 || v86 <= 0)
          {
            swift_release();
            uint64_t v105 = v120;
            swift_release();
LABEL_129:
            sub_1C8CAA9F0(v105, v11);
            sub_1C8CAA9F0(v105, v11);
LABEL_130:
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v165);
            goto LABEL_120;
          }
          sub_1C8CA92A4((uint64_t)v5, (uint64_t)&v149);
          uint64_t v87 = v152;
          LODWORD(v108) = v153;
          sub_1C8CA9434((uint64_t)v116, (uint64_t)v138, (uint64_t *)&unk_1EBCB2D10);
          LOWORD(v129) = 1;
          uint64_t v88 = (uint64_t)v114;
          uint64_t v89 = v115;
          *long long v115 = 0u;
          v89[1] = 0u;
          v89[2] = 0u;
          *((void *)v89 + 6) = 0;
          LOBYTE(v133) = 1;
          long long v136 = v111;
          long long v137 = v111;
          *(void *)&long long v127 = v82;
          *((void *)&v127 + 1) = v86;
          long long v128 = (unint64_t)v82;
          sub_1C8CA88A8((uint64_t)v138, v88, (uint64_t *)&unk_1EBCB2D10);
          *((void *)&v133 + 1) = v87;
          long long v145 = v131;
          long long v146 = v132;
          long long v141 = v127;
          long long v142 = v128;
          long long v143 = v129;
          long long v144 = v130;
          long long v147 = v133;
          long long v90 = v113[1];
          long long v139 = *v113;
          LOBYTE(v134) = v108;
          uint64_t v135 = v87;
          uint64_t v148 = v134;
          long long v140 = v90;
          uint64_t v91 = v154;
          sub_1C8CA9498((uint64_t)&v149);
          long long v159 = v145;
          long long v160 = v146;
          long long v161 = v147;
          long long v155 = v141;
          long long v156 = v142;
          long long v157 = v143;
          long long v158 = v144;
          uint64_t v162 = v148;
          uint64_t v163 = v91;
          long long v92 = v140;
          uint64_t v93 = v112;
          *uint64_t v112 = v139;
          v93[1] = v92;
          LOWORD(v157) = 512;
          sub_1C8D56620(a1, 2, v165);
          char v78 = v157;
          sub_1C8CA9498((uint64_t)&v155);
          swift_release();
          uint64_t v94 = v120;
          swift_release();
          sub_1C8CAA9F0(v94, v11);
          sub_1C8CAA9F0(v94, v11);
          break;
        case 3uLL:
          goto LABEL_126;
        default:
          uint64_t v121 = v120;
          __int16 v122 = v11;
          char v123 = BYTE2(v11);
          char v124 = BYTE3(v11);
          char v125 = BYTE4(v11);
          char v126 = BYTE5(v11);
          if (!BYTE6(v11))
          {
LABEL_126:
            uint64_t v105 = v120;
            goto LABEL_129;
          }
          sub_1C8CA92A4((uint64_t)v5, (uint64_t)&v149);
          uint64_t v108 = v152;
          LODWORD(v110) = v153;
          sub_1C8CA9434((uint64_t)v116, (uint64_t)v138, (uint64_t *)&unk_1EBCB2D10);
          LOWORD(v129) = 1;
          uint64_t v56 = (uint64_t)v114;
          uint64_t v57 = v115;
          *long long v115 = 0u;
          v57[1] = 0u;
          v57[2] = 0u;
          *((void *)v57 + 6) = 0;
          LOBYTE(v133) = 1;
          long long v136 = v111;
          long long v137 = v111;
          *(void *)&long long v127 = &v121;
          *((void *)&v127 + 1) = BYTE6(v11);
          *(void *)&long long v128 = &v121;
          *((void *)&v128 + 1) = 0;
          sub_1C8CA88A8((uint64_t)v138, v56, (uint64_t *)&unk_1EBCB2D10);
          *((void *)&v133 + 1) = v108;
          long long v145 = v131;
          long long v146 = v132;
          long long v141 = v127;
          long long v142 = v128;
          long long v143 = v129;
          long long v144 = v130;
          long long v147 = v133;
          long long v58 = v113[1];
          long long v139 = *v113;
          LOBYTE(v134) = (_BYTE)v110;
          uint64_t v135 = v108;
          uint64_t v148 = v134;
          long long v140 = v58;
          uint64_t v59 = v154;
          sub_1C8CA9498((uint64_t)&v149);
          long long v159 = v145;
          long long v160 = v146;
          long long v161 = v147;
          long long v155 = v141;
          long long v156 = v142;
          long long v157 = v143;
          long long v158 = v144;
          uint64_t v162 = v148;
          uint64_t v163 = v59;
          long long v60 = v140;
          BOOL v61 = v112;
          *uint64_t v112 = v139;
          v61[1] = v60;
          LOWORD(v157) = 512;
          a1 = v109;
          sub_1C8D56620(v109, 2, v165);
          LOBYTE(v59) = v157;
          sub_1C8CA9498((uint64_t)&v155);
          uint64_t v62 = v120;
          sub_1C8CAA9F0(v120, v11);
          sub_1C8CAA9F0(v62, v11);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v165);
          if ((v59 & 1) == 0) {
            goto LABEL_120;
          }
          uint64_t v120 = 0;
          unint64_t v11 = 0xF000000000000000;
          BOOL v15 = &qword_1EA567230;
          goto LABEL_112;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v165);
      if ((v78 & 1) == 0) {
        goto LABEL_120;
      }
      uint64_t v120 = 0;
      unint64_t v11 = 0xF000000000000000;
LABEL_111:
      BOOL v15 = &qword_1EA567230;
      goto LABEL_112;
    }
    sub_1C8CA9434((uint64_t)v166, (uint64_t)&v149, v15);
    if (!v150) {
      break;
    }
    char v22 = v15;
    sub_1C8CA4528(&v149, (uint64_t)&v155);
    uint64_t v23 = *((void *)&v156 + 1);
    char v24 = a1;
    uint64_t v25 = v157;
    __swift_project_boxed_opaque_existential_1(&v155, *((uint64_t *)&v156 + 1));
    uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t))(v25 + 8);
    uint64_t v27 = v25;
    a1 = v24;
    uint64_t v28 = v26(v23, v27);
    sub_1C8D56620(v24, v28, &v155);
    if ((v5[4] & 1) == 0)
    {
      sub_1C8CAA9F0(v120, v11);
      sub_1C8D33174((uint64_t)v166, &qword_1EA567230);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v155);
      return 2;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v155);
    BOOL v15 = v22;
LABEL_9:
    sub_1C8CA8B34();
  }
  sub_1C8D33174((uint64_t)&v149, v15);
  int v29 = *((unsigned __int8 *)v5 + 33);
  if (v11 >> 60 == 15)
  {
    if (v29 != 2) {
      goto LABEL_120;
    }
    int64_t v37 = sub_1C8CA91C4();
    unint64_t v38 = v5[1];
    if ((v38 & 0x8000000000000000) != 0) {
      goto LABEL_132;
    }
    unint64_t v39 = v37;
    BOOL v40 = v38 >= v37;
    uint64_t v41 = (unsigned __int8 *)(v38 - v37);
    if (!v40)
    {
      sub_1C8D0E090();
      swift_allocError();
      *long long v104 = 1;
      swift_willThrow();
      return sub_1C8D33174((uint64_t)v166, &qword_1EA567230);
    }
    uint64_t v42 = (const void *)*v5;
    *v5 += v37;
    v5[1] = (uint64_t)v41;
    if (!v37)
    {
      uint64_t v63 = 0;
      uint64_t v45 = 0;
      *((unsigned char *)v5 + 32) = 1;
      unint64_t v64 = 0xC000000000000000;
      uint64_t v65 = 1;
LABEL_101:
      uint64_t v97 = v65 + v63;
      if (__OFADD__(v65, v63)) {
        goto LABEL_133;
      }
      if (v97)
      {
        if (v97 < 15)
        {
          if (v97 < 0) {
            goto LABEL_136;
          }
          uint64_t v99 = 0;
          unint64_t v100 = (unint64_t)(v65 + v63) << 48;
        }
        else
        {
          sub_1C8D88150();
          swift_allocObject();
          uint64_t v98 = sub_1C8D88120();
          if ((unint64_t)v97 >= 0x7FFFFFFF)
          {
            sub_1C8D88190();
            uint64_t v99 = swift_allocObject();
            *(void *)(v99 + 16) = 0;
            *(void *)(v99 + 24) = v97;
            unint64_t v100 = v98 | 0x8000000000000000;
          }
          else
          {
            uint64_t v99 = v97 << 32;
            unint64_t v100 = v98 | 0x4000000000000000;
          }
        }
      }
      else
      {
        uint64_t v99 = 0;
        unint64_t v100 = 0xC000000000000000;
      }
      *(void *)&long long v155 = v99;
      *((void *)&v155 + 1) = v100;
      sub_1C8D55D74((uint64_t *)&v155, v45, v64);
      sub_1C8CA3D5C(v45, v64);
      unint64_t v11 = *((void *)&v155 + 1);
      uint64_t v120 = v155;
      goto LABEL_111;
    }
    if (v37 <= 14)
    {
      *(void *)((char *)&v155 + 6) = 0;
      *(void *)&long long v155 = 0;
      BYTE14(v155) = v37;
      memcpy(&v155, v42, v37);
      uint64_t v45 = v155;
      unint64_t v39 = BYTE14(v155);
      unint64_t v46 = DWORD2(v155) | ((unint64_t)BYTE12(v155) << 32) | ((unint64_t)BYTE13(v155) << 40) | ((unint64_t)BYTE14(v155) << 48);
      *((unsigned char *)v5 + 32) = 1;
    }
    else
    {
      sub_1C8D88150();
      swift_allocObject();
      uint64_t v43 = sub_1C8D88100();
      uint64_t v44 = v43;
      if (v39 >= 0x7FFFFFFF)
      {
        sub_1C8D88190();
        uint64_t v45 = swift_allocObject();
        *(void *)(v45 + 16) = 0;
        *(void *)(v45 + 24) = v39;
        *((unsigned char *)v5 + 32) = 1;
        swift_retain();
        swift_retain();
        if (!(v39 >> 35))
        {
          uint64_t v65 = 4;
          unint64_t v64 = v44 | 0x8000000000000000;
          goto LABEL_95;
        }
        if (!(v39 >> 49))
        {
          uint64_t v65 = 6;
          unint64_t v64 = v44 | 0x8000000000000000;
          if (!(v39 >> 42))
          {
LABEL_96:
            uint64_t v63 = 0;
            switch(v64 >> 62)
            {
              case 1uLL:
                LODWORD(v63) = HIDWORD(v45) - v45;
                if (__OFSUB__(HIDWORD(v45), v45)) {
                  goto LABEL_139;
                }
                uint64_t v63 = (int)v63;
                break;
              case 2uLL:
                uint64_t v96 = *(void *)(v45 + 16);
                uint64_t v95 = *(void *)(v45 + 24);
                BOOL v20 = __OFSUB__(v95, v96);
                uint64_t v63 = v95 - v96;
                if (!v20) {
                  goto LABEL_101;
                }
                goto LABEL_140;
              case 3uLL:
                goto LABEL_101;
              default:
                uint64_t v63 = BYTE6(v64);
                goto LABEL_101;
            }
            goto LABEL_101;
          }
LABEL_95:
          ++v65;
          goto LABEL_96;
        }
        v39 >>= 28;
        uint64_t v65 = 8;
        unint64_t v64 = v44 | 0x8000000000000000;
LABEL_94:
        if (!(v39 >> 28)) {
          goto LABEL_96;
        }
        goto LABEL_95;
      }
      uint64_t v45 = v39 << 32;
      unint64_t v46 = v43 | 0x4000000000000000;
      *((unsigned char *)v5 + 32) = 1;
      swift_retain();
    }
    unint64_t v64 = v46;
    if (v39 <= 0x7F)
    {
      uint64_t v65 = 1;
      goto LABEL_96;
    }
    if (v39 < 0x200000)
    {
      uint64_t v65 = 2;
      if (v39 < 0x4000) {
        goto LABEL_96;
      }
      goto LABEL_95;
    }
    uint64_t v65 = 4;
    goto LABEL_94;
  }
  if (v29 != 2) {
    goto LABEL_119;
  }
  uint64_t v16 = (unsigned __int8 *)v5[3];
  if (v16)
  {
LABEL_7:
    *uint64_t v5 = (uint64_t)v16;
LABEL_8:
    *((unsigned char *)v5 + 32) = 1;
    goto LABEL_9;
  }
  uint64_t v30 = (unsigned __int8 *)v5[1];
  uint64_t v17 = (unsigned __int8 *)v5[2];
  uint64_t v31 = (unsigned __int8 *)(*v5 - (void)v17);
  BOOL v20 = __OFADD__(v30, v31);
  uint64_t v21 = (uint64_t)&v31[(void)v30];
  if (v20)
  {
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
  }
LABEL_24:
  *uint64_t v5 = (uint64_t)v17;
  v5[1] = v21;
  if (v21 >= 1)
  {
    unint64_t v32 = sub_1C8CA91C4();
    if (v32 > 0xFFFFFFFE || v32 < 8 || (v32 & 7) >= 6)
    {
      sub_1C8D0E090();
      swift_allocError();
      char v102 = 3;
      goto LABEL_117;
    }
    *((unsigned char *)v5 + 33) = v32 & 7;
    v5[5] = v32 >> 3;
    sub_1C8CAA5FC(v32);
    v5[3] = *v5;
    goto LABEL_8;
  }
  sub_1C8D0E090();
  swift_allocError();
  char v102 = 1;
LABEL_117:
  *uint64_t v101 = v102;
LABEL_118:
  swift_willThrow();
  uint64_t v12 = v120;
LABEL_3:
  sub_1C8CAA9F0(v12, v11);
  return sub_1C8D33174((uint64_t)v166, &qword_1EA567230);
}

_DWORD *sub_1C8D55588(_DWORD *a1)
{
  return sub_1C8D4E70C(a1);
}

void sub_1C8D555A0(uint64_t a1)
{
  if (*(unsigned char *)(v1 + 33) == 5)
  {
    sub_1C8D4E794();
    if (!v2)
    {
      *(_DWORD *)a1 = v4;
      *(unsigned char *)(a1 + 4) = 0;
      *(unsigned char *)(v1 + 32) = 1;
    }
  }
}

void sub_1C8D555E4(char **a1)
{
}

void sub_1C8D555FC(char **a1)
{
}

uint64_t sub_1C8D55614(uint64_t a1)
{
  return sub_1C8D4ECE0(a1, (uint64_t (*)(void))sub_1C8D5F348);
}

uint64_t sub_1C8D55640(uint64_t a1)
{
  return sub_1C8D4F0E0(a1, (uint64_t (*)(void))sub_1C8D5F354);
}

uint64_t sub_1C8D5566C(uint64_t a1)
{
  return sub_1C8D4ECE0(a1, (uint64_t (*)(void))sub_1C8D5F45C);
}

uint64_t sub_1C8D55698(uint64_t a1)
{
  return sub_1C8D4F0E0(a1, (uint64_t (*)(void))sub_1C8D5F560);
}

uint64_t sub_1C8D556C4(uint64_t result)
{
  if (!*(unsigned char *)(v1 + 33))
  {
    uint64_t v3 = (_DWORD *)result;
    unint64_t result = sub_1C8CA91C4();
    if (!v2)
    {
      *uint64_t v3 = -(result & 1) ^ (result >> 1);
      *(unsigned char *)(v1 + 32) = 1;
    }
  }
  return result;
}

uint64_t sub_1C8D5570C(uint64_t result)
{
  if (!*(unsigned char *)(v1 + 33))
  {
    uint64_t v3 = result;
    unint64_t result = sub_1C8CA91C4();
    if (!v2)
    {
      *(_DWORD *)uint64_t v3 = -(result & 1) ^ (result >> 1);
      *(unsigned char *)(v3 + 4) = 0;
      *(unsigned char *)(v1 + 32) = 1;
    }
  }
  return result;
}

uint64_t sub_1C8D55758(uint64_t a1)
{
  return sub_1C8D4F4E0(a1);
}

unint64_t sub_1C8D55770(unint64_t result)
{
  if (!*(unsigned char *)(v1 + 33))
  {
    uint64_t v3 = (void *)result;
    unint64_t result = sub_1C8CA91C4();
    if (!v2)
    {
      *uint64_t v3 = -(uint64_t)(result & 1) ^ (result >> 1);
      *(unsigned char *)(v1 + 32) = 1;
    }
  }
  return result;
}

unint64_t sub_1C8D557B8(unint64_t result)
{
  if (!*(unsigned char *)(v1 + 33))
  {
    unint64_t v3 = result;
    unint64_t result = sub_1C8CA91C4();
    if (!v2)
    {
      *(void *)unint64_t v3 = -(uint64_t)(result & 1) ^ (result >> 1);
      *(unsigned char *)(v3 + 8) = 0;
      *(unsigned char *)(v1 + 32) = 1;
    }
  }
  return result;
}

uint64_t sub_1C8D55804(uint64_t a1)
{
  return sub_1C8D4F8DC(a1);
}

_DWORD *sub_1C8D5581C(_DWORD *a1)
{
  return sub_1C8D4FCD8(a1);
}

uint64_t sub_1C8D55834(uint64_t a1)
{
  return sub_1C8D4FD94(a1);
}

unint64_t sub_1C8D5584C(unint64_t a1)
{
  return sub_1C8D4FE54(a1, (uint64_t (*)(void))sub_1C8D5F45C);
}

void *sub_1C8D55878(void *a1)
{
  return sub_1C8D50230(a1);
}

uint64_t sub_1C8D55890(uint64_t a1)
{
  return sub_1C8D502EC(a1);
}

unint64_t sub_1C8D558A8(unint64_t a1)
{
  return sub_1C8D503AC(a1, (uint64_t (*)(void))sub_1C8D5F560);
}

unint64_t sub_1C8D558D4(unint64_t a1)
{
  return sub_1C8D4FE54(a1, (uint64_t (*)(void))sub_1C8D5F348);
}

unint64_t sub_1C8D55900(unint64_t a1)
{
  return sub_1C8D503AC(a1, (uint64_t (*)(void))sub_1C8D5F354);
}

uint64_t sub_1C8D5592C(uint64_t result)
{
  if (!*(unsigned char *)(v1 + 33))
  {
    unint64_t v3 = (unsigned char *)result;
    unint64_t result = sub_1C8CA91C4();
    if (!v2)
    {
      *unint64_t v3 = result != 0;
      *(unsigned char *)(v1 + 32) = 1;
    }
  }
  return result;
}

uint64_t sub_1C8D55970(uint64_t a1)
{
  return sub_1C8D50788(a1);
}

unint64_t sub_1C8D55988(unint64_t a1)
{
  return sub_1C8D50B7C(a1, (void (*)(void, void))sub_1C8CA3D5C);
}

unint64_t sub_1C8D559B4(unint64_t a1)
{
  return sub_1C8D50B7C(a1, (void (*)(void, void))sub_1C8CAA9F0);
}

unint64_t sub_1C8D559E0(unint64_t a1)
{
  return sub_1C8D50C50(a1);
}

uint64_t sub_1C8D559F8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D511A0(a1, a2, a3);
}

uint64_t sub_1C8D55A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D51B44(a1, a2, a3);
}

uint64_t sub_1C8D55A28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D52068(a1, a2, a3);
}

unint64_t sub_1C8D55A40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C8D52210(a1, a2, a3, a4, a5);
}

unint64_t sub_1C8D55A58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C8D52C00(a1, a2, a3, a4, a5);
}

unint64_t sub_1C8D55A70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C8D5376C(a1, a2, a3, a4, a5);
}

uint64_t sub_1C8D55A88(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8D54130(a1, a2, a3, a4);
}

void sub_1C8D55AA0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1C8D55AB8(void *a1, unsigned int a2, unint64_t *a3, uint64_t a4)
{
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  unint64_t v4 = a1[1];
  switch(v4 >> 62)
  {
    case 1uLL:
      *(void *)&long long v28 = *a1;
      *((void *)&v28 + 1) = v4 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)a1 = xmmword_1C8D8AD80;
      swift_bridgeObjectRetain();
      sub_1C8D5601C((int *)&v28, a2, a3, a4);
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v15 = *((void *)&v28 + 1) | 0x4000000000000000;
      *a1 = v28;
      a1[1] = v15;
      return result;
    case 2uLL:
      *(void *)&long long v28 = *a1;
      *((void *)&v28 + 1) = v4 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)a1 = xmmword_1C8D8AD80;
      swift_bridgeObjectRetain();
      sub_1C8D88160();
      uint64_t v16 = *((void *)&v28 + 1);
      uint64_t v17 = *(void *)(v28 + 16);
      uint64_t v27 = *(void *)(v28 + 24);
      uint64_t v18 = sub_1C8D88110();
      if (!v18)
      {
        swift_bridgeObjectRelease();
        __break(1u);
        JUMPOUT(0x1C8D55D64);
      }
      uint64_t v19 = v18;
      uint64_t v20 = sub_1C8D88140();
      uint64_t v21 = v17 - v20;
      if (__OFSUB__(v17, v20))
      {
        __break(1u);
LABEL_14:
        __break(1u);
      }
      BOOL v22 = __OFSUB__(v27, v17);
      uint64_t v23 = v27 - v17;
      if (v22) {
        goto LABEL_14;
      }
      uint64_t v24 = sub_1C8D88130();
      if (v24 >= v23) {
        uint64_t v25 = v23;
      }
      else {
        uint64_t v25 = v24;
      }
      sub_1C8D51A7C((unsigned char *)(v19 + v21), v19 + v21 + v25, a2, a3, a4);
      uint64_t result = swift_bridgeObjectRelease_n();
      *a1 = v28;
      a1[1] = v16 | 0x8000000000000000;
      return result;
    case 3uLL:
      *(void *)((char *)&v28 + 7) = 0;
      *(void *)&long long v28 = 0;
      sub_1C8D51A7C(&v28, (uint64_t)&v28, a2, a3, a4);
      return swift_bridgeObjectRelease();
    default:
      *(void *)&long long v28 = *a1;
      WORD4(v28) = v4;
      BYTE10(v28) = BYTE2(v4);
      BYTE11(v28) = BYTE3(v4);
      BYTE12(v28) = BYTE4(v4);
      BYTE13(v28) = BYTE5(v4);
      BYTE14(v28) = BYTE6(v4);
      sub_1C8D51A7C(&v28, (uint64_t)&v28 + BYTE6(v4), a2, a3, a4);
      uint64_t v9 = v28;
      uint64_t v10 = DWORD2(v28);
      uint64_t v11 = BYTE12(v28);
      uint64_t v12 = BYTE13(v28);
      uint64_t v13 = BYTE14(v28);
      uint64_t result = swift_bridgeObjectRelease();
      *a1 = v9;
      a1[1] = v10 | (v11 << 32) | (v12 << 40) | (v13 << 48);
      return result;
  }
}

uint64_t sub_1C8D55D74(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  unint64_t v3 = a1[1];
  switch(v3 >> 62)
  {
    case 1uLL:
      uint64_t v20 = *a1;
      uint64_t v21 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)a1 = xmmword_1C8D8AD80;
      sub_1C8CA3CF8(a2, a3);
      sub_1C8D560EC((int *)&v20, a2, a3);
      uint64_t result = sub_1C8CA3D5C(a2, a3);
      uint64_t v12 = v21 | 0x4000000000000000;
      *a1 = v20;
      a1[1] = v12;
      return result;
    case 2uLL:
      uint64_t v20 = *a1;
      uint64_t v21 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)a1 = xmmword_1C8D8AD80;
      sub_1C8D88160();
      uint64_t v13 = v21;
      uint64_t v15 = *(void *)(v20 + 16);
      uint64_t v14 = *(void *)(v20 + 24);
      if (!sub_1C8D88110())
      {
        __break(1u);
        JUMPOUT(0x1C8D5600CLL);
      }
      if (__OFSUB__(v15, sub_1C8D88140()))
      {
        __break(1u);
LABEL_18:
        __break(1u);
      }
      BOOL v16 = __OFSUB__(v14, v15);
      uint64_t v17 = v14 - v15;
      if (v16) {
        goto LABEL_18;
      }
      uint64_t v18 = sub_1C8D88130();
      if (v18 >= v17) {
        uint64_t v19 = v17;
      }
      else {
        uint64_t v19 = v18;
      }
      if (v19 >= 1) {
        sub_1C8CC4510(a2, a3);
      }
      uint64_t result = sub_1C8CA3D5C(a2, a3);
      *a1 = v20;
      a1[1] = v13 | 0x8000000000000000;
      return result;
    case 3uLL:
      return sub_1C8CA3D5C(a2, a3);
    default:
      uint64_t v20 = *a1;
      LOWORD(v21) = v3;
      BYTE2(v21) = BYTE2(v3);
      unint64_t v7 = HIDWORD(v3);
      BYTE3(v21) = BYTE3(v3);
      unint64_t v8 = v3 >> 40;
      BYTE4(v21) = BYTE4(v3);
      unint64_t v9 = HIWORD(v3);
      BYTE5(v21) = BYTE5(v3);
      BYTE6(v21) = BYTE6(v3);
      if ((v3 & 0xFF000000000000) != 0)
      {
        sub_1C8CC4510(a2, a3);
        LOBYTE(v7) = BYTE4(v21);
        LOBYTE(v8) = BYTE5(v21);
        LOBYTE(v9) = BYTE6(v21);
      }
      uint64_t v10 = v21;
      uint64_t result = sub_1C8CA3D5C(a2, a3);
      *a1 = v20;
      a1[1] = v10 | ((unint64_t)v7 << 32) | ((unint64_t)v8 << 40) | ((unint64_t)v9 << 48);
      return result;
  }
}

uint64_t sub_1C8D5601C(int *a1, unsigned int a2, unint64_t *a3, uint64_t a4)
{
  uint64_t result = sub_1C8D88170();
  uint64_t v9 = *a1;
  uint64_t v10 = a1[1];
  if ((int)v10 < (int)v9)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t result = sub_1C8D88110();
  if (!result)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v11 = result;
  uint64_t result = sub_1C8D88140();
  uint64_t v12 = v9 - result;
  if (__OFSUB__(v9, result))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v13 = v10 - v9;
  uint64_t v14 = sub_1C8D88130();
  if (v14 >= v13) {
    uint64_t v15 = v13;
  }
  else {
    uint64_t v15 = v14;
  }
  sub_1C8D51A7C((unsigned char *)(v11 + v12), v11 + v12 + v15, a2, a3, a4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C8D560EC(int *a1, uint64_t a2, unint64_t a3)
{
  uint64_t result = sub_1C8D88170();
  uint64_t v7 = *a1;
  uint64_t v8 = a1[1];
  if ((int)v8 < (int)v7)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t result = sub_1C8D88110();
  if (!result)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t result = sub_1C8D88140();
  if (__OFSUB__(v7, result))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v9 = v8 - v7;
  uint64_t v10 = sub_1C8D88130();
  if (v10 >= v9) {
    uint64_t v11 = v9;
  }
  else {
    uint64_t v11 = v10;
  }
  if (v11 >= 1) {
    sub_1C8CC4510(a2, a3);
  }
  return sub_1C8CA3D5C(a2, a3);
}

uint64_t assignWithCopy for BinaryDecoder(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v4 = a1 + 48;
  uint64_t v5 = (long long *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 72);
  if (*(void *)(a1 + 72))
  {
    if (v6)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 48), (uint64_t *)(a2 + 48));
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 48);
  }
  else if (v6)
  {
    *(void *)(a1 + 72) = v6;
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 48, a2 + 48);
    goto LABEL_8;
  }
  long long v7 = *v5;
  long long v8 = v5[1];
  *(void *)(v4 + 32) = *((void *)v5 + 4);
  *(_OWORD *)uint64_t v4 = v7;
  *(_OWORD *)(v4 + 16) = v8;
LABEL_8:
  uint64_t v9 = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 88) = v9;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  uint64_t v10 = (uint64_t *)(a2 + 128);
  unint64_t v11 = *(void *)(a2 + 136);
  if (*(void *)(a1 + 136) >> 60 == 15)
  {
    if (v11 >> 60 != 15)
    {
      uint64_t v12 = *v10;
      sub_1C8CA3CF8(*v10, *(void *)(a2 + 136));
      *(void *)(a1 + 128) = v12;
      *(void *)(a1 + 136) = v11;
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v11 >> 60 == 15)
  {
    sub_1C8D09CD4(a1 + 128);
LABEL_13:
    *(_OWORD *)(a1 + 128) = *(_OWORD *)v10;
    goto LABEL_15;
  }
  uint64_t v13 = *v10;
  sub_1C8CA3CF8(*v10, *(void *)(a2 + 136));
  uint64_t v14 = *(void *)(a1 + 128);
  unint64_t v15 = *(void *)(a1 + 136);
  *(void *)(a1 + 128) = v13;
  *(void *)(a1 + 136) = v11;
  sub_1C8CA3D5C(v14, v15);
LABEL_15:
  BOOL v16 = (uint64_t *)(a2 + 144);
  unint64_t v17 = *(void *)(a2 + 152);
  if (*(void *)(a1 + 152) >> 60 != 15)
  {
    if (v17 >> 60 != 15)
    {
      uint64_t v19 = *v16;
      sub_1C8CA3CF8(*v16, v17);
      uint64_t v20 = *(void *)(a1 + 144);
      unint64_t v21 = *(void *)(a1 + 152);
      *(void *)(a1 + 144) = v19;
      *(void *)(a1 + 152) = v17;
      sub_1C8CA3D5C(v20, v21);
      return a1;
    }
    sub_1C8D09CD4(a1 + 144);
    goto LABEL_20;
  }
  if (v17 >> 60 == 15)
  {
LABEL_20:
    *(_OWORD *)(a1 + 144) = *(_OWORD *)v16;
    return a1;
  }
  uint64_t v18 = *v16;
  sub_1C8CA3CF8(*v16, v17);
  *(void *)(a1 + 144) = v18;
  *(void *)(a1 + 152) = v17;
  return a1;
}

__n128 __swift_memcpy160_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(__n128 *)(a1 + 96) = result;
  *(_OWORD *)(a1 + 112) = v7;
  return result;
}

uint64_t assignWithTake for BinaryDecoder(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v4 = a1 + 48;
  uint64_t v5 = a2 + 48;
  if (*(void *)(a1 + 72)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 48);
  }
  long long v6 = *(_OWORD *)(v5 + 16);
  *(_OWORD *)uint64_t v4 = *(_OWORD *)v5;
  *(_OWORD *)(v4 + 16) = v6;
  *(void *)(v4 + 32) = *(void *)(v5 + 32);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  long long v7 = (_OWORD *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  unint64_t v8 = *(void *)(a1 + 136);
  if (v8 >> 60 == 15) {
    goto LABEL_6;
  }
  unint64_t v9 = *(void *)(a2 + 136);
  if (v9 >> 60 == 15)
  {
    sub_1C8D09CD4(a1 + 128);
LABEL_6:
    *(_OWORD *)(a1 + 128) = *v7;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(a1 + 128);
  *(void *)(a1 + 128) = *(void *)v7;
  *(void *)(a1 + 136) = v9;
  sub_1C8CA3D5C(v10, v8);
LABEL_8:
  unint64_t v11 = (void *)(a2 + 144);
  unint64_t v12 = *(void *)(a1 + 152);
  if (v12 >> 60 != 15)
  {
    unint64_t v13 = *(void *)(a2 + 152);
    if (v13 >> 60 != 15)
    {
      uint64_t v14 = *(void *)(a1 + 144);
      *(void *)(a1 + 144) = *v11;
      *(void *)(a1 + 152) = v13;
      sub_1C8CA3D5C(v14, v12);
      return a1;
    }
    sub_1C8D09CD4(a1 + 144);
  }
  *(_OWORD *)(a1 + 144) = *(_OWORD *)v11;
  return a1;
}

uint64_t getEnumTagSinglePayload for BinaryDecoder(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 160)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 72);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BinaryDecoder(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 160) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 160) = 0;
    }
    if (a2) {
      *(void *)(result + 72) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BinaryDecoder()
{
  return &type metadata for BinaryDecoder;
}

uint64_t sub_1C8D56620(uint64_t *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = v3;
  uint64_t v8 = *a1;
  if (*(void *)(*a1 + 16) && (unint64_t v9 = sub_1C8CA5D14(a2), (v10 & 1) != 0))
  {
    sub_1C8CA425C(*(void *)(v8 + 56) + 40 * v9, (uint64_t)&v22);
  }
  else
  {
    uint64_t v24 = 0;
    long long v22 = 0u;
    long long v23 = 0u;
  }
  sub_1C8CA9434((uint64_t)&v22, (uint64_t)v20, &qword_1EA565EA0);
  uint64_t v11 = v21;
  uint64_t result = sub_1C8D33174((uint64_t)v20, &qword_1EA565EA0);
  if (!v11)
  {
    uint64_t v15 = a3[3];
    uint64_t v16 = a3[4];
    __swift_project_boxed_opaque_existential_1(a3, v15);
    (*(void (**)(void *__return_ptr, uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v16 + 32))(v20, v5, &type metadata for BinaryDecoder, &off_1F2356D48, v15, v16);
    if (!v4)
    {
      sub_1C8CA88A8((uint64_t)v20, (uint64_t)&v22, &qword_1EA565EA0);
      goto LABEL_11;
    }
    return sub_1C8D33174((uint64_t)&v22, &qword_1EA565EA0);
  }
  uint64_t v13 = *((void *)&v23 + 1);
  if (*((void *)&v23 + 1))
  {
    uint64_t v14 = v24;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v22, *((uint64_t *)&v23 + 1));
    (*(void (**)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v14 + 40))(v5, &type metadata for BinaryDecoder, &off_1F2356D48, v13, v14);
    if (!v4)
    {
LABEL_11:
      if (*(unsigned char *)(v5 + 32) == 1)
      {
        sub_1C8CA9434((uint64_t)&v22, (uint64_t)v20, &qword_1EA565EA0);
        uint64_t v17 = v21;
        sub_1C8D33174((uint64_t)v20, &qword_1EA565EA0);
        if (v17)
        {
          sub_1C8CA9434((uint64_t)&v22, (uint64_t)v20, &qword_1EA565EA0);
          sub_1C8CA9434((uint64_t)v20, (uint64_t)v19, &qword_1EA565EA0);
          sub_1C8CB5E04((uint64_t)v19, a2);
          sub_1C8D33174((uint64_t)v20, &qword_1EA565EA0);
        }
        else
        {
          sub_1C8D0E090();
          swift_allocError();
          *uint64_t v18 = 5;
          swift_willThrow();
        }
      }
      return sub_1C8D33174((uint64_t)&v22, &qword_1EA565EA0);
    }
    return sub_1C8D33174((uint64_t)&v22, &qword_1EA565EA0);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C8D56864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v78 = a3;
  uint64_t v8 = sub_1C8D88620();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v12 = MEMORY[0x1F4188790](v8, v11);
  long long v76 = (char *)&v61 - v13;
  uint64_t v14 = *(void *)(a2 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v12, v15);
  uint64_t v86 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v16, v18);
  uint64_t v77 = (char *)&v61 - v20;
  MEMORY[0x1F4188790](v19, v21);
  uint64_t v75 = (char *)&v61 - v22;
  uint64_t result = sub_1C8CAF30C();
  if (result) {
    return result;
  }
  uint64_t result = sub_1C8CAFD2C(91);
  if (v4) {
    return result;
  }
  uint64_t result = sub_1C8CB049C();
  if (result) {
    return result;
  }
  unint64_t v64 = (unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  uint64_t v66 = (void (**)(uint64_t *, char *, uint64_t))(v14 + 32);
  uint64_t v62 = (void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v65 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  uint64_t v72 = (void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  int v73 = (void (**)(uint64_t, uint64_t))(v14 + 8);
  uint64_t v71 = v78 + 16;
  uint64_t v70 = &v85;
  uint64_t v25 = v3[1];
  uint64_t v24 = v5[2];
  uint64_t v26 = (uint64_t)v86;
  uint64_t v63 = v8;
  uint64_t v74 = a1;
  if (v24 == v25) {
    goto LABEL_14;
  }
LABEL_5:
  uint64_t v27 = *v5;
  while (1)
  {
    unsigned int v28 = *(unsigned __int8 *)(v27 + v24);
    BOOL v29 = v28 > 0x20;
    uint64_t v30 = (1 << v28) & 0x100002600;
    if (v29 || v30 == 0) {
      break;
    }
    long long v5[2] = ++v24;
    if (v25 == v24) {
      goto LABEL_25;
    }
  }
  if (v24 == v25)
  {
LABEL_25:
    uint64_t v36 = v78;
    (*(void (**)(uint64_t, uint64_t))(v78 + 16))(a2, v78);
    uint64_t v38 = v5[2];
    uint64_t v37 = v5[3];
    unsigned __int8 v39 = *((unsigned char *)v5 + 48);
    uint64_t v40 = v5[7];
    char v41 = *((unsigned char *)v5 + 64);
    *(_OWORD *)uint64_t v79 = *(_OWORD *)v5;
    *(void *)&v79[16] = v38;
    *(void *)&v79[24] = v37;
    *(_OWORD *)&v79[32] = *((_OWORD *)v5 + 2);
    unsigned __int8 v80 = v39;
    uint64_t v81 = v40;
    char v82 = v41;
    uint64_t v83 = 0;
    char v84 = 0;
    uint64_t v42 = v70;
    *(_OWORD *)uint64_t v70 = 0u;
    *((_OWORD *)v42 + 1) = 0u;
    swift_retain();
    sub_1C8D58D5C(v26, a2, v36);
    (*v72)(v77, v26, a2);
    sub_1C8D88550();
    sub_1C8D88530();
    (*v73)(v26, a2);
    uint64_t v25 = *(void *)&v79[8];
    uint64_t v43 = *(void *)v79;
    uint64_t v44 = *(void *)&v79[16];
    long long v69 = *(_OWORD *)&v79[24];
    uint64_t v68 = *(void *)&v79[40];
    int v67 = v80;
    sub_1C8CA469C(v85);
    uint64_t result = swift_release();
    *uint64_t v5 = v43;
    v5[1] = v25;
    long long v5[2] = v44;
    *(_OWORD *)(v5 + 3) = v69;
    v5[5] = v68;
    *((unsigned char *)v5 + 48) = v67;
    goto LABEL_26;
  }
  while (1)
  {
    if (*(unsigned char *)(*v5 + v24) != 110) {
      goto LABEL_25;
    }
    if ((sub_1C8CAF254((uint64_t)&unk_1F2350138) & 1) == 0)
    {
      uint64_t v26 = (uint64_t)v86;
      goto LABEL_25;
    }
    uint64_t result = swift_conformsToProtocol2();
    if (result) {
      uint64_t v33 = a2;
    }
    else {
      uint64_t v33 = 0;
    }
    if (!v33) {
      goto LABEL_55;
    }
    uint64_t v34 = result;
    if (!result)
    {
      __break(1u);
      return result;
    }
    *(void *)&long long v69 = &v61;
    MEMORY[0x1F4188790](result, v32);
    v35(a2, v34);
    if ((*v64)((char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), 1, a2) == 1)
    {
      (*v62)((char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v63);
      memset(v79, 0, 40);
    }
    else
    {
      *(void *)&v79[24] = a2;
      *(void *)&v79[32] = v34;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)v79);
      (*v66)(boxed_opaque_existential_1, (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
    }
    uint64_t v54 = v76;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567728);
    char v55 = swift_dynamicCast();
    uint64_t v56 = *v65;
    if ((v55 & 1) == 0) {
      break;
    }
    v56(v54, 0, 1, a2);
    uint64_t v57 = v75;
    (*v66)((uint64_t *)v75, v54, a2);
    (*v72)(v77, (uint64_t)v57, a2);
    sub_1C8D88550();
    sub_1C8D88530();
    uint64_t result = ((uint64_t (*)(char *, uint64_t))*v73)(v57, a2);
    uint64_t v25 = v5[1];
    uint64_t v44 = v5[2];
LABEL_26:
    uint64_t v26 = (uint64_t)v86;
    if (v44 != v25)
    {
      uint64_t v49 = *v5;
      while (1)
      {
        unsigned int v50 = *(unsigned __int8 *)(v49 + v44);
        BOOL v29 = v50 > 0x20;
        uint64_t v51 = (1 << v50) & 0x100002600;
        if (v29 || v51 == 0) {
          break;
        }
        long long v5[2] = ++v44;
        if (v25 == v44) {
          goto LABEL_49;
        }
      }
    }
    if (v44 == v25)
    {
LABEL_49:
      sub_1C8CAC5B0();
      swift_allocError();
      *long long v58 = xmmword_1C8D8AD20;
      return swift_willThrow();
    }
    uint64_t v45 = *v5;
    if (*(unsigned char *)(*v5 + v44) == 93)
    {
      long long v5[2] = v44 + 1;
      return result;
    }
    while (1)
    {
      unsigned int v46 = *(unsigned __int8 *)(v45 + v44);
      BOOL v29 = v46 > 0x20;
      uint64_t v47 = (1 << v46) & 0x100002600;
      if (v29 || v47 == 0) {
        break;
      }
      long long v5[2] = ++v44;
      if (v25 == v44) {
        goto LABEL_49;
      }
    }
    if (v25 == v44) {
      goto LABEL_49;
    }
    if (*(unsigned char *)(*v5 + v44) != 44)
    {
      sub_1C8CAC5B0();
      swift_allocError();
      *uint64_t v59 = 0;
      v59[1] = 0;
      return swift_willThrow();
    }
    uint64_t v24 = v44 + 1;
    long long v5[2] = v44 + 1;
    if (v44 + 1 != v25) {
      goto LABEL_5;
    }
LABEL_14:
    if (v24 == v25) {
      goto LABEL_25;
    }
  }
  v56(v54, 1, 1, a2);
  (*v62)(v54, v63);
LABEL_55:
  sub_1C8CAC5B0();
  swift_allocError();
  *long long v60 = xmmword_1C8D90980;
  return swift_willThrow();
}

uint64_t sub_1C8D57084()
{
  uint64_t result = sub_1C8CAFFD8();
  if (result) {
    return 0;
  }
  uint64_t v3 = *(void *)(v0 + 72);
  if (v3 < 1 || (uint64_t result = sub_1C8CAFD2C(44), !v1))
  {
    if (!*(void *)(v0 + 88))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    uint64_t v4 = *(void *)(v0 + 112);
    uint64_t v6 = *(void *)(v0 + 88);
    long long v7 = *(_OWORD *)(v0 + 96);
    uint64_t v8 = v4;
    uint64_t result = sub_1C8CAF78C((uint64_t)&v6);
    if (!v1 && (v5 & 1) == 0)
    {
      if (!__OFADD__(v3, 1))
      {
        *(void *)(v0 + 72) = v3 + 1;
        return result;
      }
      __break(1u);
      goto LABEL_13;
    }
  }
  return result;
}

uint64_t sub_1C8D5713C(uint64_t *a1)
{
  uint64_t result = sub_1C8CAF30C();
  if ((result & 1) == 0)
  {
    uint64_t result = sub_1C8CAFD2C(91);
    if (!v2)
    {
      uint64_t result = sub_1C8CB049C();
      if ((result & 1) == 0)
      {
        sub_1C8CAE208();
        for (int i = v5; ; int i = v22)
        {
          uint64_t v7 = *a1;
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          *a1 = v7;
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_1C8D5F24C(0, *(void *)(v7 + 16) + 1, 1, (char *)v7);
            uint64_t v7 = result;
            *a1 = result;
          }
          unint64_t v8 = *(void *)(v7 + 16);
          unint64_t v9 = *(void *)(v7 + 24);
          unint64_t v10 = v8 + 1;
          if (v8 >= v9 >> 1)
          {
            unint64_t v27 = v8 + 1;
            long long v23 = (char *)v7;
            unint64_t v24 = *(void *)(v7 + 16);
            uint64_t result = (uint64_t)sub_1C8D5F24C((char *)(v9 > 1), v8 + 1, 1, v23);
            unint64_t v8 = v24;
            unint64_t v10 = v27;
            uint64_t v7 = result;
          }
          *(void *)(v7 + 16) = v10;
          *(_DWORD *)(v7 + 4 * v8 + 32) = i;
          *a1 = v7;
          uint64_t v12 = v1[1];
          uint64_t v11 = v1[2];
          if (v11 == v12) {
            goto LABEL_28;
          }
          uint64_t v13 = *v1;
          while (1)
          {
            unsigned int v14 = *(unsigned __int8 *)(v13 + v11);
            BOOL v15 = v14 > 0x20;
            uint64_t v16 = (1 << v14) & 0x100002600;
            if (v15 || v16 == 0) {
              break;
            }
            v1[2] = ++v11;
            if (v12 == v11) {
              goto LABEL_28;
            }
          }
          if (v12 == v11)
          {
LABEL_28:
            sub_1C8CAC5B0();
            swift_allocError();
            *uint64_t v25 = xmmword_1C8D8AD20;
            return swift_willThrow();
          }
          uint64_t v18 = *v1;
          if (*(unsigned char *)(*v1 + v11) == 93) {
            break;
          }
          while (1)
          {
            unsigned int v19 = *(unsigned __int8 *)(v18 + v11);
            BOOL v15 = v19 > 0x20;
            uint64_t v20 = (1 << v19) & 0x100002600;
            if (v15 || v20 == 0) {
              break;
            }
            v1[2] = ++v11;
            if (v12 == v11) {
              goto LABEL_28;
            }
          }
          if (v12 == v11) {
            goto LABEL_28;
          }
          if (*(unsigned char *)(*v1 + v11) != 44)
          {
            sub_1C8CAC5B0();
            swift_allocError();
            void *v26 = 0;
            v26[1] = 0;
            return swift_willThrow();
          }
          v1[2] = v11 + 1;
          sub_1C8CAE208();
        }
        v1[2] = v11 + 1;
      }
    }
  }
  return result;
}

uint64_t sub_1C8D57370(uint64_t *a1)
{
  uint64_t result = sub_1C8CAF30C();
  if ((result & 1) == 0)
  {
    uint64_t result = sub_1C8CAFD2C(91);
    if (!v2)
    {
      uint64_t result = sub_1C8CB049C();
      if ((result & 1) == 0)
      {
        sub_1C8CAEA1C();
        for (uint64_t i = v5; ; uint64_t i = v22)
        {
          uint64_t v7 = *a1;
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          *a1 = v7;
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_1C8D5F360(0, *(void *)(v7 + 16) + 1, 1, (char *)v7);
            uint64_t v7 = result;
            *a1 = result;
          }
          unint64_t v8 = *(void *)(v7 + 16);
          unint64_t v9 = *(void *)(v7 + 24);
          unint64_t v10 = v8 + 1;
          if (v8 >= v9 >> 1)
          {
            unint64_t v27 = v8 + 1;
            long long v23 = (char *)v7;
            unint64_t v24 = *(void *)(v7 + 16);
            uint64_t result = (uint64_t)sub_1C8D5F360((char *)(v9 > 1), v8 + 1, 1, v23);
            unint64_t v8 = v24;
            unint64_t v10 = v27;
            uint64_t v7 = result;
          }
          *(void *)(v7 + 16) = v10;
          *(void *)(v7 + 8 * v8 + 32) = i;
          *a1 = v7;
          uint64_t v12 = v1[1];
          uint64_t v11 = v1[2];
          if (v11 == v12) {
            goto LABEL_28;
          }
          uint64_t v13 = *v1;
          while (1)
          {
            unsigned int v14 = *(unsigned __int8 *)(v13 + v11);
            BOOL v15 = v14 > 0x20;
            uint64_t v16 = (1 << v14) & 0x100002600;
            if (v15 || v16 == 0) {
              break;
            }
            v1[2] = ++v11;
            if (v12 == v11) {
              goto LABEL_28;
            }
          }
          if (v12 == v11)
          {
LABEL_28:
            sub_1C8CAC5B0();
            swift_allocError();
            *uint64_t v25 = xmmword_1C8D8AD20;
            return swift_willThrow();
          }
          uint64_t v18 = *v1;
          if (*(unsigned char *)(*v1 + v11) == 93) {
            break;
          }
          while (1)
          {
            unsigned int v19 = *(unsigned __int8 *)(v18 + v11);
            BOOL v15 = v19 > 0x20;
            uint64_t v20 = (1 << v19) & 0x100002600;
            if (v15 || v20 == 0) {
              break;
            }
            v1[2] = ++v11;
            if (v12 == v11) {
              goto LABEL_28;
            }
          }
          if (v12 == v11) {
            goto LABEL_28;
          }
          if (*(unsigned char *)(*v1 + v11) != 44)
          {
            sub_1C8CAC5B0();
            swift_allocError();
            void *v26 = 0;
            v26[1] = 0;
            return swift_willThrow();
          }
          v1[2] = v11 + 1;
          sub_1C8CAEA1C();
        }
        v1[2] = v11 + 1;
      }
    }
  }
  return result;
}

uint64_t sub_1C8D575A4(uint64_t a1)
{
  uint64_t result = sub_1C8CAF30C();
  if (result)
  {
    *(_DWORD *)a1 = 0;
    *(unsigned char *)(a1 + 4) = 1;
  }
  else
  {
    uint64_t result = sub_1C8CADC30();
    if (!v1)
    {
      if (result == (int)result)
      {
        *(_DWORD *)a1 = result;
        *(unsigned char *)(a1 + 4) = 0;
      }
      else
      {
        sub_1C8CAC5B0();
        swift_allocError();
        *uint64_t v4 = xmmword_1C8D8AD30;
        return swift_willThrow();
      }
    }
  }
  return result;
}

uint64_t sub_1C8D5763C(uint64_t *a1)
{
  uint64_t result = sub_1C8CAF30C();
  if ((result & 1) == 0)
  {
    uint64_t result = sub_1C8CAFD2C(91);
    if (!v2)
    {
      uint64_t result = sub_1C8CB049C();
      if ((result & 1) == 0)
      {
        for (uint64_t i = sub_1C8CADC30(); ; uint64_t i = sub_1C8CADC30())
        {
          if (i != (int)i)
          {
            sub_1C8CAC5B0();
            swift_allocError();
            long long v24 = xmmword_1C8D8AD30;
            goto LABEL_30;
          }
          uint64_t v6 = *a1;
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          *a1 = v6;
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_1C8D5F348(0, *(void *)(v6 + 16) + 1, 1, (char *)v6);
            uint64_t v6 = result;
            *a1 = result;
          }
          unint64_t v7 = *(void *)(v6 + 16);
          unint64_t v8 = *(void *)(v6 + 24);
          unint64_t v9 = v7 + 1;
          if (v7 >= v8 >> 1)
          {
            unint64_t v26 = v7 + 1;
            uint64_t v21 = (char *)v6;
            unint64_t v22 = *(void *)(v6 + 16);
            uint64_t result = (uint64_t)sub_1C8D5F348((char *)(v8 > 1), v7 + 1, 1, v21);
            unint64_t v7 = v22;
            unint64_t v9 = v26;
            uint64_t v6 = result;
          }
          *(void *)(v6 + 16) = v9;
          *(_DWORD *)(v6 + 4 * v7 + 32) = i;
          *a1 = v6;
          uint64_t v11 = v1[1];
          uint64_t v10 = v1[2];
          if (v10 == v11) {
            goto LABEL_29;
          }
          uint64_t v12 = *v1;
          while (1)
          {
            unsigned int v13 = *(unsigned __int8 *)(v12 + v10);
            BOOL v14 = v13 > 0x20;
            uint64_t v15 = (1 << v13) & 0x100002600;
            if (v14 || v15 == 0) {
              break;
            }
            v1[2] = ++v10;
            if (v11 == v10) {
              goto LABEL_29;
            }
          }
          if (v11 == v10)
          {
LABEL_29:
            sub_1C8CAC5B0();
            swift_allocError();
            long long v24 = xmmword_1C8D8AD20;
LABEL_30:
            *long long v23 = v24;
            return swift_willThrow();
          }
          uint64_t v17 = *v1;
          if (*(unsigned char *)(*v1 + v10) == 93) {
            break;
          }
          while (1)
          {
            unsigned int v18 = *(unsigned __int8 *)(v17 + v10);
            BOOL v14 = v18 > 0x20;
            uint64_t v19 = (1 << v18) & 0x100002600;
            if (v14 || v19 == 0) {
              break;
            }
            v1[2] = ++v10;
            if (v11 == v10) {
              goto LABEL_29;
            }
          }
          if (v11 == v10) {
            goto LABEL_29;
          }
          if (*(unsigned char *)(*v1 + v10) != 44)
          {
            sub_1C8CAC5B0();
            swift_allocError();
            *uint64_t v25 = 0;
            v25[1] = 0;
            return swift_willThrow();
          }
          v1[2] = v10 + 1;
        }
        v1[2] = v10 + 1;
      }
    }
  }
  return result;
}

uint64_t sub_1C8D5789C(uint64_t *a1)
{
  uint64_t result = sub_1C8CAF30C();
  if ((result & 1) == 0)
  {
    uint64_t result = sub_1C8CAFD2C(91);
    if (!v2)
    {
      uint64_t result = sub_1C8CB049C();
      if ((result & 1) == 0)
      {
        for (unint64_t i = sub_1C8CADAF4(); ; unint64_t i = sub_1C8CADAF4())
        {
          if (HIDWORD(i))
          {
            sub_1C8CAC5B0();
            swift_allocError();
            long long v24 = xmmword_1C8D8AD30;
            goto LABEL_30;
          }
          uint64_t v6 = *a1;
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          *a1 = v6;
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_1C8D5F45C(0, *(void *)(v6 + 16) + 1, 1, (char *)v6);
            uint64_t v6 = result;
            *a1 = result;
          }
          unint64_t v7 = *(void *)(v6 + 16);
          unint64_t v8 = *(void *)(v6 + 24);
          unint64_t v9 = v7 + 1;
          if (v7 >= v8 >> 1)
          {
            unint64_t v26 = v7 + 1;
            uint64_t v21 = (char *)v6;
            unint64_t v22 = *(void *)(v6 + 16);
            uint64_t result = (uint64_t)sub_1C8D5F45C((char *)(v8 > 1), v7 + 1, 1, v21);
            unint64_t v7 = v22;
            unint64_t v9 = v26;
            uint64_t v6 = result;
          }
          *(void *)(v6 + 16) = v9;
          *(_DWORD *)(v6 + 4 * v7 + 32) = i;
          *a1 = v6;
          uint64_t v11 = v1[1];
          uint64_t v10 = v1[2];
          if (v10 == v11) {
            goto LABEL_29;
          }
          uint64_t v12 = *v1;
          while (1)
          {
            unsigned int v13 = *(unsigned __int8 *)(v12 + v10);
            BOOL v14 = v13 > 0x20;
            uint64_t v15 = (1 << v13) & 0x100002600;
            if (v14 || v15 == 0) {
              break;
            }
            v1[2] = ++v10;
            if (v11 == v10) {
              goto LABEL_29;
            }
          }
          if (v11 == v10)
          {
LABEL_29:
            sub_1C8CAC5B0();
            swift_allocError();
            long long v24 = xmmword_1C8D8AD20;
LABEL_30:
            *long long v23 = v24;
            return swift_willThrow();
          }
          uint64_t v17 = *v1;
          if (*(unsigned char *)(*v1 + v10) == 93) {
            break;
          }
          while (1)
          {
            unsigned int v18 = *(unsigned __int8 *)(v17 + v10);
            BOOL v14 = v18 > 0x20;
            uint64_t v19 = (1 << v18) & 0x100002600;
            if (v14 || v19 == 0) {
              break;
            }
            v1[2] = ++v10;
            if (v11 == v10) {
              goto LABEL_29;
            }
          }
          if (v11 == v10) {
            goto LABEL_29;
          }
          if (*(unsigned char *)(*v1 + v10) != 44)
          {
            sub_1C8CAC5B0();
            swift_allocError();
            *uint64_t v25 = 0;
            v25[1] = 0;
            return swift_willThrow();
          }
          v1[2] = v10 + 1;
        }
        v1[2] = v10 + 1;
      }
    }
  }
  return result;
}

uint64_t sub_1C8D57AFC(uint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(BOOL, uint64_t, uint64_t, uint64_t))
{
  uint64_t result = sub_1C8CAF30C();
  if ((result & 1) == 0)
  {
    uint64_t result = sub_1C8CAFD2C(91);
    if (!v4)
    {
      uint64_t result = sub_1C8CB049C();
      if ((result & 1) == 0)
      {
        for (uint64_t i = a2(); ; uint64_t i = a2())
        {
          uint64_t v27 = i;
          uint64_t v10 = *a1;
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          *a1 = v10;
          if ((result & 1) == 0)
          {
            uint64_t result = a3(0, *(void *)(v10 + 16) + 1, 1, v10);
            uint64_t v10 = result;
            *a1 = result;
          }
          unint64_t v12 = *(void *)(v10 + 16);
          unint64_t v11 = *(void *)(v10 + 24);
          unint64_t v13 = v12 + 1;
          if (v12 >= v11 >> 1)
          {
            uint64_t result = a3(v11 > 1, v12 + 1, 1, v10);
            unint64_t v13 = v12 + 1;
            uint64_t v10 = result;
          }
          *(void *)(v10 + 16) = v13;
          *(void *)(v10 + 8 * v12 + 32) = v27;
          *a1 = v10;
          uint64_t v15 = v3[1];
          uint64_t v14 = v3[2];
          if (v14 == v15) {
            goto LABEL_28;
          }
          uint64_t v16 = *v3;
          while (1)
          {
            unsigned int v17 = *(unsigned __int8 *)(v16 + v14);
            BOOL v18 = v17 > 0x20;
            uint64_t v19 = (1 << v17) & 0x100002600;
            if (v18 || v19 == 0) {
              break;
            }
            char v3[2] = ++v14;
            if (v15 == v14) {
              goto LABEL_28;
            }
          }
          if (v15 == v14)
          {
LABEL_28:
            sub_1C8CAC5B0();
            swift_allocError();
            *uint64_t v25 = xmmword_1C8D8AD20;
            return swift_willThrow();
          }
          uint64_t v21 = *v3;
          if (*(unsigned char *)(*v3 + v14) == 93) {
            break;
          }
          while (1)
          {
            unsigned int v22 = *(unsigned __int8 *)(v21 + v14);
            BOOL v18 = v22 > 0x20;
            uint64_t v23 = (1 << v22) & 0x100002600;
            if (v18 || v23 == 0) {
              break;
            }
            char v3[2] = ++v14;
            if (v15 == v14) {
              goto LABEL_28;
            }
          }
          if (v15 == v14) {
            goto LABEL_28;
          }
          if (*(unsigned char *)(*v3 + v14) != 44)
          {
            sub_1C8CAC5B0();
            swift_allocError();
            void *v26 = 0;
            v26[1] = 0;
            return swift_willThrow();
          }
          char v3[2] = v14 + 1;
        }
        char v3[2] = v14 + 1;
      }
    }
  }
  return result;
}

uint64_t sub_1C8D57D40(char **a1)
{
  uint64_t result = sub_1C8CAF30C();
  if ((result & 1) == 0)
  {
    uint64_t result = sub_1C8CAFD2C(91);
    if (!v2)
    {
      uint64_t result = sub_1C8CB049C();
      if ((result & 1) == 0)
      {
        uint64_t v6 = v1[1];
        uint64_t v5 = v1[2];
        if (v5 == v6)
        {
          uint64_t v7 = 13;
        }
        else
        {
          uint64_t v9 = v6 - 1;
          uint64_t v7 = 13;
          do
          {
            uint64_t v10 = *v1;
            while (1)
            {
              unsigned int v11 = *(unsigned __int8 *)(v10 + v5);
              BOOL v12 = v11 > 0x20;
              uint64_t v13 = (1 << v11) & 0x100002600;
              if (v12 || v13 == 0) {
                break;
              }
              v1[2] = ++v5;
              if (v6 == v5) {
                goto LABEL_6;
              }
            }
            if (v6 == v5) {
              break;
            }
            uint64_t v30 = v9;
            uint64_t v15 = *v1;
            int v16 = *(unsigned __int8 *)(*v1 + v5);
            if (v16 == 102)
            {
              if ((sub_1C8CAF254((uint64_t)&unk_1F234F590) & 1) == 0) {
                goto LABEL_48;
              }
              char v31 = 0;
            }
            else
            {
              if (v16 != 116 || (sub_1C8CAF254((uint64_t)&unk_1F234F5B8) & 1) == 0)
              {
LABEL_48:
                uint64_t v7 = 4;
                break;
              }
              char v31 = 1;
            }
            unsigned int v17 = *a1;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *a1 = v17;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              unsigned int v17 = sub_1C8D5F05C(0, *((void *)v17 + 2) + 1, 1, v17);
              *a1 = v17;
            }
            unint64_t v20 = *((void *)v17 + 2);
            unint64_t v19 = *((void *)v17 + 3);
            unint64_t v21 = v20 + 1;
            if (v20 >= v19 >> 1)
            {
              uint64_t v27 = sub_1C8D5F05C((char *)(v19 > 1), v20 + 1, 1, v17);
              unint64_t v21 = v20 + 1;
              unsigned int v17 = v27;
            }
            *((void *)v17 + 2) = v21;
            v17[v20 + 32] = v31;
            *a1 = v17;
            uint64_t v22 = v1[2];
            uint64_t result = (uint64_t)&unk_1F234F590;
            if (v22 == v6) {
              goto LABEL_47;
            }
            while (1)
            {
              unsigned int v23 = *(unsigned __int8 *)(v15 + v22);
              if (v23 > 0x20 || ((1 << v23) & 0x100002600) == 0) {
                break;
              }
              v1[2] = ++v22;
              if (v6 == v22) {
                goto LABEL_47;
              }
            }
            if (v6 == v22)
            {
LABEL_47:
              sub_1C8CAC5B0();
              swift_allocError();
              *unsigned int v28 = xmmword_1C8D8AD20;
              return swift_willThrow();
            }
            if (v23 == 93)
            {
              v1[2] = v22 + 1;
              return result;
            }
            while (1)
            {
              unsigned int v25 = *(unsigned __int8 *)(v15 + v22);
              if (v25 > 0x20 || ((1 << v25) & 0x100002600) == 0) {
                break;
              }
              v1[2] = ++v22;
              if (v6 == v22) {
                goto LABEL_47;
              }
            }
            if (v6 == v22) {
              goto LABEL_47;
            }
            if (v25 != 44)
            {
              sub_1C8CAC5B0();
              swift_allocError();
              *BOOL v29 = 0;
              v29[1] = 0;
              return swift_willThrow();
            }
            uint64_t v5 = v22 + 1;
            v1[2] = v22 + 1;
            uint64_t v9 = v30;
            uint64_t v7 = 13;
          }
          while (v30 != v22);
        }
LABEL_6:
        sub_1C8CAC5B0();
        swift_allocError();
        *unint64_t v8 = 0;
        v8[1] = v7;
        return swift_willThrow();
      }
    }
  }
  return result;
}

uint64_t sub_1C8D58024(uint64_t *a1)
{
  uint64_t result = sub_1C8CAF30C();
  if ((result & 1) == 0)
  {
    uint64_t result = sub_1C8CAFD2C(91);
    if (!v2)
    {
      uint64_t result = sub_1C8CB049C();
      if ((result & 1) == 0)
      {
        uint64_t v6 = v1[1];
        uint64_t v5 = v1[2];
        if (v5 == v6)
        {
          uint64_t v7 = 13;
        }
        else
        {
          uint64_t v9 = v6 - 1;
          uint64_t v10 = v6 - 2;
          uint64_t v7 = 13;
          do
          {
            uint64_t v11 = *v1;
            while (1)
            {
              unsigned int v12 = *(unsigned __int8 *)(v11 + v5);
              BOOL v13 = v12 > 0x20;
              uint64_t v14 = (1 << v12) & 0x100002600;
              BOOL v15 = v13 || v14 == 0;
              if (v15) {
                break;
              }
              v1[2] = ++v5;
              if (v6 == v5) {
                goto LABEL_6;
              }
            }
            if (v6 == v5) {
              break;
            }
            uint64_t v16 = *v1;
            if (*(unsigned char *)(*v1 + v5) != 34 || (uint64_t v17 = v5 + 1, v1[2] = v5 + 1, v9 == v5))
            {
LABEL_63:
              uint64_t v7 = 5;
              break;
            }
            uint64_t result = v16 + v5 + 1;
            int v18 = *(unsigned __int8 *)result;
            if (v18 != 34)
            {
              char v19 = 0;
              uint64_t v20 = v17;
              while (1)
              {
                uint64_t v21 = v20 + 1;
                if (v18 == 92)
                {
                  if (v21 == v6 || (v20 += 2, v20 == v6))
                  {
LABEL_62:
                    v1[2] = v6;
                    goto LABEL_63;
                  }
                  char v19 = 1;
                }
                else
                {
                  ++v20;
                  if (v21 == v6) {
                    goto LABEL_62;
                  }
                }
                int v18 = *(unsigned __int8 *)(v16 + v20);
                if (v18 == 34)
                {
                  v1[2] = v20;
                  goto LABEL_30;
                }
              }
            }
            char v19 = 0;
            uint64_t v20 = v17;
LABEL_30:
            if (!v16) {
              goto LABEL_67;
            }
            char v43 = v19;
            uint64_t v38 = v10;
            uint64_t v42 = v9;
            if (__OFSUB__(v20, v17))
            {
              __break(1u);
LABEL_67:
              __break(1u);
              return result;
            }
            uint64_t v22 = sub_1C8CA96A4((char *)result, v20 - v17);
            uint64_t v24 = v20 + 1;
            v1[2] = v20 + 1;
            if (!v23) {
              goto LABEL_63;
            }
            unint64_t v45 = v23;
            if (v43)
            {
              uint64_t v44 = sub_1C8CAC864((uint64_t)v22, v23);
              unint64_t v39 = v25;
              swift_bridgeObjectRelease();
              if (!v39) {
                goto LABEL_63;
              }
              unint64_t v45 = v39;
            }
            else
            {
              uint64_t v44 = (uint64_t)v22;
            }
            uint64_t v40 = *a1;
            uint64_t result = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v26 = v40;
            *a1 = v40;
            if ((result & 1) == 0)
            {
              uint64_t result = (uint64_t)sub_1C8D5ED38(0, *(void *)(v40 + 16) + 1, 1, (char *)v40);
              uint64_t v26 = result;
              *a1 = result;
            }
            uint64_t v9 = v42;
            unint64_t v28 = *(void *)(v26 + 16);
            unint64_t v27 = *(void *)(v26 + 24);
            unint64_t v29 = v28 + 1;
            if (v28 >= v27 >> 1)
            {
              unint64_t v41 = v28 + 1;
              unint64_t v37 = *(void *)(v26 + 16);
              uint64_t result = (uint64_t)sub_1C8D5ED38((char *)(v27 > 1), v28 + 1, 1, (char *)v26);
              unint64_t v28 = v37;
              unint64_t v29 = v41;
              uint64_t v9 = v42;
              uint64_t v26 = result;
            }
            *(void *)(v26 + 16) = v29;
            unint64_t v30 = v26 + 16 * v28;
            *(void *)(v30 + 32) = v44;
            *(void *)(v30 + 40) = v45;
            *a1 = v26;
            if (v24 == v6) {
              goto LABEL_61;
            }
            while (1)
            {
              unsigned int v31 = *(unsigned __int8 *)(v16 + v24);
              if (v31 > 0x20 || ((1 << v31) & 0x100002600) == 0) {
                break;
              }
              v1[2] = ++v24;
              ++v20;
              if (v6 == v24) {
                goto LABEL_61;
              }
            }
            if (v6 == v24)
            {
LABEL_61:
              sub_1C8CAC5B0();
              swift_allocError();
              *unint64_t v35 = xmmword_1C8D8AD20;
              return swift_willThrow();
            }
            if (v31 == 93)
            {
              v1[2] = v24 + 1;
              return result;
            }
            while (1)
            {
              unsigned int v33 = *(unsigned __int8 *)(v16 + 1 + v20);
              if (v33 > 0x20 || ((1 << v33) & 0x100002600) == 0) {
                break;
              }
              v1[2] = v20 + 2;
              if (v9 == ++v20) {
                goto LABEL_61;
              }
            }
            if (v9 == v20) {
              goto LABEL_61;
            }
            if (v33 != 44)
            {
              sub_1C8CAC5B0();
              swift_allocError();
              *uint64_t v36 = 0;
              v36[1] = 0;
              return swift_willThrow();
            }
            uint64_t v5 = v20 + 2;
            v1[2] = v20 + 2;
            uint64_t v10 = v38;
            BOOL v15 = v38 == v20;
            uint64_t v7 = 13;
          }
          while (!v15);
        }
LABEL_6:
        sub_1C8CAC5B0();
        swift_allocError();
        *unint64_t v8 = 0;
        v8[1] = v7;
        return swift_willThrow();
      }
    }
  }
  return result;
}

uint64_t sub_1C8D583B4(uint64_t *a1, uint64_t (*a2)(uint64_t, uint64_t), __n128 a3)
{
  if (sub_1C8CAF30C())
  {
    uint64_t result = a2(*a1, a1[1]);
    *(__n128 *)a1 = a3;
  }
  else
  {
    sub_1C8CAD178();
    uint64_t v8 = v3[1];
    if (v3[2] == v8)
    {
      sub_1C8CAC5B0();
      swift_allocError();
      *uint64_t v9 = xmmword_1C8D8AD20;
      return swift_willThrow();
    }
    else
    {
      uint64_t result = sub_1C8CAC354(*v3, v8, v3 + 2, v3[1]);
      if (!v4)
      {
        uint64_t v11 = result;
        uint64_t v12 = v10;
        uint64_t result = a2(*a1, a1[1]);
        *a1 = v11;
        a1[1] = v12;
      }
    }
  }
  return result;
}

uint64_t sub_1C8D5849C(char **a1)
{
  uint64_t result = sub_1C8CAF30C();
  if ((result & 1) == 0)
  {
    uint64_t result = sub_1C8CAFD2C(91);
    if (!v2)
    {
      uint64_t result = sub_1C8CB049C();
      if ((result & 1) == 0)
      {
        uint64_t v6 = v1 + 2;
        uint64_t v5 = v1[2];
        uint64_t v7 = v1[1];
        if (v5 == v7)
        {
LABEL_5:
          sub_1C8CAC5B0();
          swift_allocError();
          *uint64_t v8 = xmmword_1C8D8AD20;
          return swift_willThrow();
        }
        else
        {
          uint64_t v9 = v7 - 1;
          while (1)
          {
            uint64_t v10 = *v1;
            while (1)
            {
              unsigned int v11 = *(unsigned __int8 *)(v10 + v5);
              BOOL v12 = v11 > 0x20;
              uint64_t v13 = (1 << v11) & 0x100002600;
              BOOL v14 = v12 || v13 == 0;
              if (v14) {
                break;
              }
              *uint64_t v6 = ++v5;
              if (v7 == v5) {
                goto LABEL_5;
              }
            }
            if (v7 == v5) {
              goto LABEL_5;
            }
            uint64_t v15 = *v1;
            uint64_t v36 = v9;
            uint64_t v37 = sub_1C8CAC354(*v1, v7, v1 + 2, v7);
            uint64_t v16 = *a1;
            unint64_t v38 = v17;
            sub_1C8CA3CF8(v37, v17);
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *a1 = v16;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              uint64_t v16 = sub_1C8D5F148(0, *((void *)v16 + 2) + 1, 1, v16);
              *a1 = v16;
            }
            unint64_t v20 = *((void *)v16 + 2);
            unint64_t v19 = *((void *)v16 + 3);
            unint64_t v21 = v20 + 1;
            uint64_t v22 = v37;
            unint64_t v23 = v38;
            if (v20 >= v19 >> 1)
            {
              unint64_t v30 = v16;
              unint64_t v31 = *((void *)v16 + 2);
              unint64_t v35 = v20 + 1;
              uint64_t v32 = sub_1C8D5F148((char *)(v19 > 1), v20 + 1, 1, v30);
              unint64_t v21 = v35;
              unint64_t v20 = v31;
              uint64_t v16 = v32;
              uint64_t v22 = v37;
              unint64_t v23 = v38;
            }
            *((void *)v16 + 2) = v21;
            uint64_t v24 = &v16[16 * v20];
            *((void *)v24 + 4) = v22;
            *((void *)v24 + 5) = v23;
            *a1 = v16;
            uint64_t v25 = *v6;
            if (*v6 == v7) {
              goto LABEL_40;
            }
            while (1)
            {
              unsigned int v26 = *(unsigned __int8 *)(v15 + v25);
              if (v26 > 0x20 || ((1 << v26) & 0x100002600) == 0) {
                break;
              }
              *uint64_t v6 = ++v25;
              if (v7 == v25) {
                goto LABEL_40;
              }
            }
            if (v7 == v25)
            {
LABEL_40:
              sub_1C8CAC5B0();
              swift_allocError();
              *unsigned int v33 = xmmword_1C8D8AD20;
LABEL_41:
              swift_willThrow();
              return sub_1C8CA3D5C(v37, v38);
            }
            if (v26 == 93) {
              break;
            }
            while (1)
            {
              unsigned int v28 = *(unsigned __int8 *)(v15 + v25);
              if (v28 > 0x20 || ((1 << v28) & 0x100002600) == 0) {
                break;
              }
              *uint64_t v6 = ++v25;
              if (v7 == v25) {
                goto LABEL_40;
              }
            }
            if (v7 == v25) {
              goto LABEL_40;
            }
            if (v28 != 44)
            {
              sub_1C8CAC5B0();
              swift_allocError();
              *uint64_t v34 = 0;
              v34[1] = 0;
              goto LABEL_41;
            }
            sub_1C8CA3D5C(v22, v23);
            uint64_t v5 = v25 + 1;
            *uint64_t v6 = v25 + 1;
            BOOL v14 = v36 == v25;
            uint64_t v9 = v36;
            if (v14) {
              goto LABEL_5;
            }
          }
          uint64_t result = sub_1C8CA3D5C(v22, v23);
          *uint64_t v6 = v25 + 1;
        }
      }
    }
  }
  return result;
}

void sub_1C8D58774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1C8D88620();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7, v9);
  unsigned int v11 = (char *)&v12 - v10;
  if (sub_1C8CAF30C())
  {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(a1, 1, 1, a2);
  }
  else
  {
    sub_1C8CB00D0(a2, a3, (uint64_t)v11);
    if (!v3)
    {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(v11, 0, 1, a2);
      (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v11, v7);
    }
  }
}

void sub_1C8D5891C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1, a2);
  uint64_t v9 = (char *)&v10 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1C8CAF30C())
  {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, a2);
    (*(void (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
  }
  else
  {
    sub_1C8CB00D0(a2, a3, (uint64_t)v9);
    if (!v3)
    {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, a2);
      (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v9, a2);
    }
  }
}

void sub_1C8D58A70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(a2 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](a1, a2);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8, v11);
  uint64_t v13 = (char *)&v28 - v12;
  if ((sub_1C8CAF30C() & 1) == 0)
  {
    sub_1C8CAFD2C(91);
    if (!v4 && (sub_1C8CB049C() & 1) == 0)
    {
      sub_1C8CB00D0(a2, a3, (uint64_t)v13);
      BOOL v14 = *(void (**)(void, void, void))(v7 + 16);
      unint64_t v30 = (void (**)(char *, uint64_t))(v7 + 8);
      for (i = v14; ; BOOL v14 = i)
      {
        v14(v10, v13, a2);
        sub_1C8D88550();
        sub_1C8D88530();
        uint64_t v16 = v3[1];
        uint64_t v15 = v3[2];
        if (v15 == v16) {
          goto LABEL_24;
        }
        uint64_t v17 = *v3;
        while (1)
        {
          unsigned int v18 = *(unsigned __int8 *)(v17 + v15);
          BOOL v19 = v18 > 0x20;
          uint64_t v20 = (1 << v18) & 0x100002600;
          if (v19 || v20 == 0) {
            break;
          }
          char v3[2] = ++v15;
          if (v16 == v15) {
            goto LABEL_24;
          }
        }
        if (v16 == v15)
        {
LABEL_24:
          sub_1C8CAC5B0();
          swift_allocError();
          _OWORD *v26 = xmmword_1C8D8AD20;
LABEL_25:
          swift_willThrow();
          goto LABEL_26;
        }
        uint64_t v22 = *v3;
        if (*(unsigned char *)(*v3 + v15) == 93) {
          break;
        }
        while (1)
        {
          unsigned int v23 = *(unsigned __int8 *)(v22 + v15);
          BOOL v19 = v23 > 0x20;
          uint64_t v24 = (1 << v23) & 0x100002600;
          if (v19 || v24 == 0) {
            break;
          }
          char v3[2] = ++v15;
          if (v16 == v15) {
            goto LABEL_24;
          }
        }
        if (v16 == v15) {
          goto LABEL_24;
        }
        if (*(unsigned char *)(*v3 + v15) != 44)
        {
          sub_1C8CAC5B0();
          swift_allocError();
          *unint64_t v27 = 0;
          v27[1] = 0;
          goto LABEL_25;
        }
        char v3[2] = v15 + 1;
        (*v30)(v13, a2);
        sub_1C8CB00D0(a2, a3, (uint64_t)v13);
      }
      char v3[2] = v15 + 1;
LABEL_26:
      (*v30)(v13, a2);
    }
  }
}

uint64_t sub_1C8D58D5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v9 = *(void *)(a2 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](a1, a2);
  uint64_t v12 = &v34[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x1F4188790](v10, v13);
  uint64_t v15 = &v34[-v14 - 8];
  uint64_t v16 = swift_conformsToProtocol2();
  if (v16) {
    uint64_t v17 = v16;
  }
  else {
    uint64_t v17 = 0;
  }
  if (v16) {
    uint64_t v18 = a2;
  }
  else {
    uint64_t v18 = 0;
  }
  if (!v18)
  {
    sub_1C8CAC5B0();
    swift_allocError();
    long long v26 = xmmword_1C8D90990;
LABEL_12:
    *uint64_t v25 = v26;
    return swift_willThrow();
  }
  uint64_t v41 = a3;
  uint64_t v19 = a1;
  (*(void (**)(long long *__return_ptr))(v17 + 8))(&v38);
  long long v33 = v38;
  uint64_t v20 = v39;
  uint64_t v21 = v40;
  sub_1C8CA469C(v5[11]);
  *(_OWORD *)(v5 + 11) = v33;
  v5[13] = v20;
  v5[14] = v21;
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  *(void *)&long long v33 = v19;
  v22(v15, v19, a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567720);
  if (swift_dynamicCast())
  {
    sub_1C8CA4528(&v35, (uint64_t)&v38);
    sub_1C8CA425C((uint64_t)&v38, (uint64_t)&v35);
    uint64_t v23 = *((void *)&v36 + 1);
    uint64_t v24 = v37;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v35, *((uint64_t *)&v36 + 1));
    (*(void (**)(void *, uint64_t, uint64_t))(v24 + 16))(v5, v23, v24);
    if (v4)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
    }
    else
    {
      uint64_t v32 = v33;
      (*(void (**)(void, uint64_t))(v9 + 8))(v33, a2);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
      sub_1C8CA425C((uint64_t)&v35, (uint64_t)v34);
      swift_dynamicCast();
      (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v32, v12, a2);
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v35);
  }
  uint64_t v37 = 0;
  long long v35 = 0u;
  long long v36 = 0u;
  sub_1C8D5BBC0((uint64_t)&v35);
  uint64_t result = sub_1C8CAFD2C(123);
  if (v4) {
    return result;
  }
  uint64_t v28 = v5[5];
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
    return result;
  }
  v5[5] = v30;
  uint64_t v31 = v41;
  if (v30 < 0)
  {
    sub_1C8CAC5B0();
    swift_allocError();
    long long v26 = xmmword_1C8D8AD70;
    goto LABEL_12;
  }
  uint64_t result = sub_1C8CAFFD8();
  if ((result & 1) == 0) {
    return (*(uint64_t (**)(void *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v31 + 64))(v5, &type metadata for JSONDecoder, &off_1F2356FB8, a2, v31);
  }
  return result;
}

uint64_t sub_1C8D590D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  *(void *)&long long v45 = a3;
  uint64_t v8 = sub_1C8D88620();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v12 = MEMORY[0x1F4188790](v8, v11);
  *(void *)&long long v44 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12, v13);
  uint64_t v16 = (char *)&v42 - v15;
  MEMORY[0x1F4188790](v14, v17);
  uint64_t v56 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v42 - v18);
  if ((sub_1C8CAF30C() & 1) == 0)
  {
    uint64_t v43 = v4;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v16, a1, v8);
    uint64_t v25 = *(void *)(a2 - 8);
    uint64_t v56 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
    int v26 = v56(v16, 1, a2);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v16, v8);
    if (v26 == 1)
    {
      uint64_t v27 = v44;
      (*(void (**)(uint64_t))(v45 + 16))(a2);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(v27, 0, 1, a2);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 40))(a1, v27, v8);
    }
    uint64_t v28 = *((void *)v5 + 2);
    uint64_t v29 = *((void *)v5 + 3);
    char v30 = *((unsigned char *)v5 + 48);
    uint64_t v31 = *((void *)v5 + 7);
    char v32 = *((unsigned char *)v5 + 64);
    long long v46 = *v5;
    *(void *)&long long v47 = v28;
    *((void *)&v47 + 1) = v29;
    long long v48 = v5[2];
    char v49 = v30;
    uint64_t v50 = v31;
    char v51 = v32;
    uint64_t v52 = 0;
    char v53 = 0;
    long long v54 = 0u;
    long long v55 = 0u;
    uint64_t result = v56((char *)a1, 1, a2);
    if (result != 1)
    {
      swift_retain();
      uint64_t v33 = v43;
      sub_1C8D58D5C(a1, a2, v45);
      if (v33)
      {
        uint64_t v34 = v54;
        swift_release();
        return sub_1C8CA469C(v34);
      }
      else
      {
        long long v44 = v47;
        long long v45 = v46;
        long long v35 = v48;
        char v36 = v49;
        sub_1C8CA469C(v54);
        uint64_t result = swift_release();
        long long v37 = v44;
        *uint64_t v5 = v45;
        v5[1] = v37;
        long long v5[2] = v35;
        *((unsigned char *)v5 + 48) = v36;
      }
      return result;
    }
    __break(1u);
LABEL_21:
    __break(1u);
    return result;
  }
  uint64_t result = swift_conformsToProtocol2();
  if (result) {
    uint64_t v21 = a2;
  }
  else {
    uint64_t v21 = 0;
  }
  if (!v21)
  {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(a1, 1, 1, a2);
  }
  uint64_t v22 = result;
  if (!result) {
    goto LABEL_21;
  }
  MEMORY[0x1F4188790](result, v20);
  uint64_t v23 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = v24(a2, v22);
  if (!v4)
  {
    uint64_t v38 = *(void *)(a2 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v23, 1, a2) == 1)
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v23, v8);
      *(void *)&long long v48 = 0;
      long long v46 = 0u;
      long long v47 = 0u;
    }
    else
    {
      *((void *)&v47 + 1) = a2;
      *(void *)&long long v48 = v22;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v46);
      (*(void (**)(uint64_t *, char *, uint64_t))(v38 + 32))(boxed_opaque_existential_1, v23, a2);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567728);
    uint64_t v40 = (char *)v56;
    int v41 = swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v40, v41 ^ 1u, 1, a2);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 40))(a1, v40, v8);
  }
  return result;
}

uint64_t sub_1C8D5961C()
{
  sub_1C8CAC5B0();
  swift_allocError();
  *uint64_t v0 = xmmword_1C8D8E4B0;
  return swift_willThrow();
}

uint64_t sub_1C8D59670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = v5;
  uint64_t v81 = a1;
  uint64_t v85 = *(void *)(a5 + 8);
  uint64_t v83 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v77 = *(char **)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness, v11);
  unsigned __int8 v80 = (char *)&v60 - v12;
  uint64_t v89 = *(void *)(a4 + 8);
  uint64_t v87 = a2;
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v13, v15);
  uint64_t v79 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16, v18);
  char v82 = (char *)&v60 - v19;
  uint64_t v86 = sub_1C8D88620();
  uint64_t v20 = *(void *)(v86 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v86, v21);
  uint64_t v78 = (char *)&v60 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x1F4188790](v22, v24);
  char v84 = (char *)&v60 - v26;
  MEMORY[0x1F4188790](v25, v27);
  long long v90 = (char *)&v60 - v28;
  uint64_t v88 = sub_1C8D88620();
  uint64_t v29 = *(void *)(v88 - 8);
  uint64_t v31 = MEMORY[0x1F4188790](v88, v30);
  uint64_t v33 = (char *)&v60 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v31, v34);
  uint64_t v91 = (char *)&v60 - v35;
  uint64_t result = sub_1C8CAF30C();
  if ((result & 1) == 0)
  {
    uint64_t result = sub_1C8CAFD2C(123);
    if (!v6)
    {
      uint64_t v37 = *(void *)(v7 + 40);
      BOOL v38 = __OFSUB__(v37, 1);
      uint64_t v39 = v37 - 1;
      if (v38)
      {
        __break(1u);
      }
      else
      {
        *(void *)(v7 + 40) = v39;
        if (v39 < 0)
        {
          sub_1C8CAC5B0();
          swift_allocError();
          long long v56 = xmmword_1C8D8AD70;
LABEL_17:
          *long long v55 = v56;
          return swift_willThrow();
        }
        uint64_t result = sub_1C8CAFFD8();
        if ((result & 1) == 0)
        {
          uint64_t v40 = sub_1C8CAD1C0();
          uint64_t v42 = v41;
          uint64_t v74 = v89 + 32;
          uint64_t v75 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
          long long v76 = (char **)(v77 + 56);
          uint64_t v73 = v85 + 32;
          uint64_t v70 = (uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
          uint64_t v71 = (void (**)(char *, char *, uint64_t))(v29 + 16);
          long long v69 = (void (**)(char *, char *, uint64_t))(v14 + 32);
          uint64_t v68 = (void (**)(char *, char *, uint64_t))(v20 + 16);
          int v67 = (unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48);
          unint64_t v64 = (void (**)(char *, char *, uint64_t))(v77 + 32);
          uint64_t v63 = (void (**)(char *, char *, uint64_t))(v14 + 16);
          uint64_t v62 = (void (**)(char *, char *, uint64_t))(v77 + 16);
          uint64_t v61 = (void (**)(char *, uint64_t))(v77 + 8);
          uint64_t v65 = (void (**)(char *, uint64_t))(v14 + 8);
          uint64_t v72 = (void (**)(char *, uint64_t))(v20 + 8);
          uint64_t v43 = (void (**)(char *, uint64_t))(v29 + 8);
          uint64_t v66 = (uint64_t (**)(char *, uint64_t))(v29 + 8);
          while (1)
          {
            if (v40 == 34 && v42 == 0xE100000000000000)
            {
              swift_bridgeObjectRelease();
              long long v44 = v84;
            }
            else
            {
              char v45 = sub_1C8D887C0();
              swift_bridgeObjectRelease();
              long long v44 = v84;
              if ((v45 & 1) == 0)
              {
                sub_1C8CAC5B0();
                swift_allocError();
                long long v56 = xmmword_1C8D909A0;
                goto LABEL_17;
              }
            }
            *(unsigned char *)(v7 + 80) = 1;
            long long v46 = v91;
            (*v75)(v91, 1, 1, v13);
            (*(void (**)(char *, uint64_t, ValueMetadata *, _UNKNOWN **))(v89 + 32))(v46, v7, &type metadata for JSONDecoder, &off_1F2356FB8);
            *(unsigned char *)(v7 + 80) = 0;
            sub_1C8CAFD2C(58);
            long long v47 = v90;
            uint64_t v77 = *v76;
            ((void (*)(char *, uint64_t, uint64_t, uint64_t))v77)(v90, 1, 1, AssociatedTypeWitness);
            (*(void (**)(char *, uint64_t, ValueMetadata *, _UNKNOWN **))(v85 + 32))(v47, v7, &type metadata for JSONDecoder, &off_1F2356FB8);
            (*v71)(v33, v91, v88);
            int v48 = (*v70)(v33, 1, v13);
            uint64_t v49 = v86;
            if (v48 == 1)
            {
              uint64_t v57 = v88;
              (*v43)(v33, v88);
              long long v58 = v72;
LABEL_20:
              sub_1C8CAC5B0();
              swift_allocError();
              *uint64_t v59 = xmmword_1C8D909B0;
              swift_willThrow();
              (*v58)(v90, v49);
              return ((uint64_t (*)(char *, uint64_t))*v43)(v91, v57);
            }
            uint64_t v50 = v82;
            (*v69)(v82, v33, v13);
            (*v68)(v44, v90, v49);
            if ((*v67)(v44, 1, AssociatedTypeWitness) == 1)
            {
              (*v65)(v50, v13);
              long long v58 = v72;
              (*v72)(v44, v49);
              uint64_t v57 = v88;
              uint64_t v43 = (void (**)(char *, uint64_t))v66;
              goto LABEL_20;
            }
            char v51 = v44;
            uint64_t v52 = v80;
            (*v64)(v80, v51, AssociatedTypeWitness);
            (*v63)(v79, v50, v13);
            char v53 = v78;
            (*v62)(v78, v52, AssociatedTypeWitness);
            ((void (*)(char *, void, uint64_t, uint64_t))v77)(v53, 0, 1, AssociatedTypeWitness);
            swift_getAssociatedConformanceWitness();
            sub_1C8D88290();
            sub_1C8D882B0();
            (*v61)(v52, AssociatedTypeWitness);
            (*v65)(v50, v13);
            if (sub_1C8CAFFD8())
            {
              (*v72)(v90, v86);
              return (*v66)(v91, v88);
            }
            sub_1C8CAFD2C(44);
            uint64_t v43 = (void (**)(char *, uint64_t))v66;
            (*v72)(v90, v86);
            (*v43)(v91, v88);
            uint64_t v40 = sub_1C8CAD1C0();
            uint64_t v42 = v54;
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C8D59FE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = v5;
  uint64_t v81 = a5;
  uint64_t v79 = a1;
  long long v76 = *(void (***)(char *, uint64_t))(a3 - 8);
  MEMORY[0x1F4188790](a1, a2);
  uint64_t v78 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = *(void *)(v10 + 8);
  uint64_t v85 = v11;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v15 = MEMORY[0x1F4188790](AssociatedTypeWitness, v14);
  uint64_t v83 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15, v17);
  unsigned __int8 v80 = (char *)&v62 - v18;
  uint64_t v84 = sub_1C8D88620();
  uint64_t v19 = *(void *)(v84 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v84, v20);
  uint64_t v77 = (char *)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x1F4188790](v21, v23);
  char v82 = (char *)&v62 - v25;
  MEMORY[0x1F4188790](v24, v26);
  uint64_t v88 = (char *)&v62 - v27;
  uint64_t v86 = sub_1C8D88620();
  uint64_t v28 = *(void *)(v86 - 8);
  uint64_t v30 = MEMORY[0x1F4188790](v86, v29);
  uint64_t v32 = (char *)&v62 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30, v33);
  uint64_t v89 = (char *)&v62 - v34;
  uint64_t result = sub_1C8CAF30C();
  if ((result & 1) == 0)
  {
    uint64_t result = sub_1C8CAFD2C(123);
    if (!v6)
    {
      uint64_t v36 = *(void *)(v5 + 40);
      BOOL v37 = __OFSUB__(v36, 1);
      uint64_t v38 = v36 - 1;
      if (v37)
      {
        __break(1u);
      }
      else
      {
        *(void *)(v5 + 40) = v38;
        if (v38 < 0)
        {
          sub_1C8CAC5B0();
          swift_allocError();
          long long v58 = xmmword_1C8D8AD70;
LABEL_17:
          *uint64_t v57 = v58;
          return swift_willThrow();
        }
        uint64_t result = sub_1C8CAFFD8();
        if ((result & 1) == 0)
        {
          uint64_t v39 = sub_1C8CAD1C0();
          uint64_t v41 = v40;
          uint64_t v73 = v87 + 32;
          uint64_t v74 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
          uint64_t v75 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v76 + 7);
          uint64_t v71 = (uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
          uint64_t v72 = (void (**)(char *, char *, uint64_t))(v28 + 16);
          long long v69 = (void (**)(char *, char *, uint64_t))(v19 + 16);
          uint64_t v70 = (void (**)(char *, char *, uint64_t))(v13 + 32);
          uint64_t v68 = (unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 6);
          uint64_t v65 = (void (**)(char *, char *, uint64_t))(v76 + 4);
          unint64_t v64 = (void (**)(char *, char *, uint64_t))(v13 + 16);
          uint64_t v63 = (void (**)(char *, char *, uint64_t))(v76 + 2);
          uint64_t v62 = v76 + 1;
          uint64_t v66 = (void (**)(char *, uint64_t))(v13 + 8);
          long long v76 = (void (**)(char *, uint64_t))(v19 + 8);
          uint64_t v42 = (void (**)(char *, uint64_t))(v28 + 8);
          int v67 = (uint64_t (**)(char *, uint64_t))(v28 + 8);
          while (1)
          {
            if (v39 == 34 && v41 == 0xE100000000000000)
            {
              swift_bridgeObjectRelease();
              uint64_t v43 = v82;
            }
            else
            {
              char v44 = sub_1C8D887C0();
              swift_bridgeObjectRelease();
              uint64_t v43 = v82;
              if ((v44 & 1) == 0)
              {
                sub_1C8CAC5B0();
                swift_allocError();
                long long v58 = xmmword_1C8D909A0;
                goto LABEL_17;
              }
            }
            *(unsigned char *)(v7 + 80) = 1;
            char v45 = v89;
            (*v74)(v89, 1, 1, AssociatedTypeWitness);
            (*(void (**)(char *, uint64_t, ValueMetadata *, _UNKNOWN **))(v87 + 32))(v45, v7, &type metadata for JSONDecoder, &off_1F2356FB8);
            *(unsigned char *)(v7 + 80) = 0;
            sub_1C8CAFD2C(58);
            long long v46 = *v75;
            uint64_t v47 = (uint64_t)v88;
            (*v75)(v88, 1, 1, a3);
            sub_1C8D58774(v47, a3, v81);
            (*v72)(v32, v89, v86);
            int v48 = (*v71)(v32, 1, AssociatedTypeWitness);
            uint64_t v49 = v84;
            if (v48 == 1)
            {
              uint64_t v59 = v86;
              (*v42)(v32, v86);
              uint64_t v60 = v76;
LABEL_20:
              sub_1C8CAC5B0();
              swift_allocError();
              *uint64_t v61 = xmmword_1C8D909B0;
              swift_willThrow();
              (*v60)(v88, v49);
              return ((uint64_t (*)(char *, uint64_t))*v42)(v89, v59);
            }
            uint64_t v50 = v80;
            (*v70)(v80, v32, AssociatedTypeWitness);
            (*v69)(v43, v88, v49);
            if ((*v68)(v43, 1, a3) == 1)
            {
              (*v66)(v50, AssociatedTypeWitness);
              uint64_t v60 = v76;
              (*v76)(v43, v49);
              uint64_t v59 = v86;
              uint64_t v42 = (void (**)(char *, uint64_t))v67;
              goto LABEL_20;
            }
            char v51 = v43;
            uint64_t v52 = v78;
            (*v65)(v78, v51, a3);
            (*v64)(v83, v50, AssociatedTypeWitness);
            char v53 = v46;
            uint64_t v54 = v77;
            (*v63)(v77, v52, a3);
            v53(v54, 0, 1, a3);
            swift_getAssociatedConformanceWitness();
            sub_1C8D88290();
            sub_1C8D882B0();
            (*v62)(v52, a3);
            (*v66)(v50, AssociatedTypeWitness);
            if (sub_1C8CAFFD8())
            {
              (*v76)(v88, v84);
              return (*v67)(v89, v86);
            }
            sub_1C8CAFD2C(44);
            uint64_t v55 = v86;
            uint64_t v42 = (void (**)(char *, uint64_t))v67;
            (*v76)(v88, v84);
            (*v42)(v89, v55);
            uint64_t v39 = sub_1C8CAD1C0();
            uint64_t v41 = v56;
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C8D5A908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = v5;
  uint64_t v81 = a5;
  uint64_t v79 = a1;
  long long v76 = *(void (***)(char *, uint64_t))(a3 - 8);
  MEMORY[0x1F4188790](a1, a2);
  uint64_t v78 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = *(void *)(v10 + 8);
  uint64_t v85 = v11;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v15 = MEMORY[0x1F4188790](AssociatedTypeWitness, v14);
  uint64_t v83 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15, v17);
  unsigned __int8 v80 = (char *)&v62 - v18;
  uint64_t v84 = sub_1C8D88620();
  uint64_t v19 = *(void *)(v84 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v84, v20);
  uint64_t v77 = (char *)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x1F4188790](v21, v23);
  char v82 = (char *)&v62 - v25;
  MEMORY[0x1F4188790](v24, v26);
  uint64_t v88 = (char *)&v62 - v27;
  uint64_t v86 = sub_1C8D88620();
  uint64_t v28 = *(void *)(v86 - 8);
  uint64_t v30 = MEMORY[0x1F4188790](v86, v29);
  uint64_t v32 = (char *)&v62 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30, v33);
  uint64_t v89 = (char *)&v62 - v34;
  uint64_t result = sub_1C8CAF30C();
  if ((result & 1) == 0)
  {
    uint64_t result = sub_1C8CAFD2C(123);
    if (!v6)
    {
      uint64_t v36 = *(void *)(v5 + 40);
      BOOL v37 = __OFSUB__(v36, 1);
      uint64_t v38 = v36 - 1;
      if (v37)
      {
        __break(1u);
      }
      else
      {
        *(void *)(v5 + 40) = v38;
        if (v38 < 0)
        {
          sub_1C8CAC5B0();
          swift_allocError();
          long long v58 = xmmword_1C8D8AD70;
LABEL_17:
          *uint64_t v57 = v58;
          return swift_willThrow();
        }
        uint64_t result = sub_1C8CAFFD8();
        if ((result & 1) == 0)
        {
          uint64_t v39 = sub_1C8CAD1C0();
          uint64_t v41 = v40;
          uint64_t v73 = v87 + 32;
          uint64_t v74 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
          uint64_t v75 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v76 + 7);
          uint64_t v71 = (uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
          uint64_t v72 = (void (**)(char *, char *, uint64_t))(v28 + 16);
          long long v69 = (void (**)(char *, char *, uint64_t))(v19 + 16);
          uint64_t v70 = (void (**)(char *, char *, uint64_t))(v13 + 32);
          uint64_t v68 = (unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 6);
          uint64_t v65 = (void (**)(char *, char *, uint64_t))(v76 + 4);
          unint64_t v64 = (void (**)(char *, char *, uint64_t))(v13 + 16);
          uint64_t v63 = (void (**)(char *, char *, uint64_t))(v76 + 2);
          uint64_t v62 = v76 + 1;
          uint64_t v66 = (void (**)(char *, uint64_t))(v13 + 8);
          long long v76 = (void (**)(char *, uint64_t))(v19 + 8);
          uint64_t v42 = (void (**)(char *, uint64_t))(v28 + 8);
          int v67 = (uint64_t (**)(char *, uint64_t))(v28 + 8);
          while (1)
          {
            if (v39 == 34 && v41 == 0xE100000000000000)
            {
              swift_bridgeObjectRelease();
              uint64_t v43 = v82;
            }
            else
            {
              char v44 = sub_1C8D887C0();
              swift_bridgeObjectRelease();
              uint64_t v43 = v82;
              if ((v44 & 1) == 0)
              {
                sub_1C8CAC5B0();
                swift_allocError();
                long long v58 = xmmword_1C8D909A0;
                goto LABEL_17;
              }
            }
            *(unsigned char *)(v7 + 80) = 1;
            char v45 = v89;
            (*v74)(v89, 1, 1, AssociatedTypeWitness);
            (*(void (**)(char *, uint64_t, ValueMetadata *, _UNKNOWN **))(v87 + 32))(v45, v7, &type metadata for JSONDecoder, &off_1F2356FB8);
            *(unsigned char *)(v7 + 80) = 0;
            sub_1C8CAFD2C(58);
            long long v46 = *v75;
            uint64_t v47 = (uint64_t)v88;
            (*v75)(v88, 1, 1, a3);
            sub_1C8D590D4(v47, a3, v81);
            (*v72)(v32, v89, v86);
            int v48 = (*v71)(v32, 1, AssociatedTypeWitness);
            uint64_t v49 = v84;
            if (v48 == 1)
            {
              uint64_t v59 = v86;
              (*v42)(v32, v86);
              uint64_t v60 = v76;
LABEL_20:
              sub_1C8CAC5B0();
              swift_allocError();
              *uint64_t v61 = xmmword_1C8D909B0;
              swift_willThrow();
              (*v60)(v88, v49);
              return ((uint64_t (*)(char *, uint64_t))*v42)(v89, v59);
            }
            uint64_t v50 = v80;
            (*v70)(v80, v32, AssociatedTypeWitness);
            (*v69)(v43, v88, v49);
            if ((*v68)(v43, 1, a3) == 1)
            {
              (*v66)(v50, AssociatedTypeWitness);
              uint64_t v60 = v76;
              (*v76)(v43, v49);
              uint64_t v59 = v86;
              uint64_t v42 = (void (**)(char *, uint64_t))v67;
              goto LABEL_20;
            }
            char v51 = v43;
            uint64_t v52 = v78;
            (*v65)(v78, v51, a3);
            (*v64)(v83, v50, AssociatedTypeWitness);
            char v53 = v46;
            uint64_t v54 = v77;
            (*v63)(v77, v52, a3);
            v53(v54, 0, 1, a3);
            swift_getAssociatedConformanceWitness();
            sub_1C8D88290();
            sub_1C8D882B0();
            (*v62)(v52, a3);
            (*v66)(v50, AssociatedTypeWitness);
            if (sub_1C8CAFFD8())
            {
              (*v76)(v88, v84);
              return (*v67)(v89, v86);
            }
            sub_1C8CAFD2C(44);
            uint64_t v55 = v86;
            uint64_t v42 = (void (**)(char *, uint64_t))v67;
            (*v76)(v88, v84);
            (*v42)(v89, v55);
            uint64_t v39 = sub_1C8CAD1C0();
            uint64_t v41 = v56;
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C8D5B230()
{
  sub_1C8CAC5B0();
  swift_allocError();
  *uint64_t v0 = xmmword_1C8D909C0;
  return swift_willThrow();
}

uint64_t sub_1C8D5B284()
{
  uint64_t result = sub_1C8D57084();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1C8D5B2A8(_DWORD *a1)
{
  uint64_t result = sub_1C8CAF30C();
  int v4 = 0;
  if ((result & 1) != 0 || (uint64_t result = sub_1C8CAE208(), !v1)) {
    *a1 = v4;
  }
  return result;
}

uint64_t sub_1C8D5B2F0(uint64_t a1)
{
  uint64_t result = sub_1C8CAF30C();
  char v4 = result;
  int v5 = 0;
  if ((result & 1) != 0 || (uint64_t result = sub_1C8CAE208(), !v1))
  {
    *(_DWORD *)a1 = v5;
    *(unsigned char *)(a1 + 4) = v4 & 1;
  }
  return result;
}

uint64_t sub_1C8D5B34C(uint64_t *a1)
{
  return sub_1C8D5713C(a1);
}

uint64_t sub_1C8D5B364(void *a1)
{
  uint64_t result = sub_1C8CAF30C();
  uint64_t v4 = 0;
  if ((result & 1) != 0 || (uint64_t result = sub_1C8CAEA1C(), !v1)) {
    *a1 = v4;
  }
  return result;
}

uint64_t sub_1C8D5B3AC(uint64_t a1)
{
  uint64_t result = sub_1C8CAF30C();
  char v4 = result;
  uint64_t v5 = 0;
  if ((result & 1) != 0 || (uint64_t result = sub_1C8CAEA1C(), !v1))
  {
    *(void *)a1 = v5;
    *(unsigned char *)(a1 + 8) = v4 & 1;
  }
  return result;
}

uint64_t sub_1C8D5B408(uint64_t *a1)
{
  return sub_1C8D57370(a1);
}

uint64_t sub_1C8D5B420(_DWORD *a1)
{
  uint64_t result = sub_1C8CAF30C();
  if (result)
  {
    *a1 = 0;
  }
  else
  {
    uint64_t result = sub_1C8CADC30();
    if (!v1)
    {
      if (result == (int)result)
      {
        *a1 = result;
      }
      else
      {
        sub_1C8CAC5B0();
        swift_allocError();
        *char v4 = xmmword_1C8D8AD30;
        return swift_willThrow();
      }
    }
  }
  return result;
}

uint64_t sub_1C8D5B4AC(uint64_t a1)
{
  return sub_1C8D575A4(a1);
}

uint64_t sub_1C8D5B4C4(uint64_t *a1)
{
  return sub_1C8D5763C(a1);
}

uint64_t sub_1C8D5B4DC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D5B6DC(a1, a2, a3, sub_1C8CADC30);
}

uint64_t sub_1C8D5B508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D5B764(a1, a2, a3, sub_1C8CADC30);
}

uint64_t sub_1C8D5B534(uint64_t *a1)
{
  return sub_1C8D57AFC(a1, sub_1C8CADC30, (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))sub_1C8D5F354);
}

unint64_t sub_1C8D5B574(_DWORD *a1)
{
  unint64_t result = sub_1C8CAF30C();
  if (result)
  {
    *a1 = 0;
  }
  else
  {
    unint64_t result = sub_1C8CADAF4();
    if (!v1)
    {
      if (HIDWORD(result))
      {
        sub_1C8CAC5B0();
        swift_allocError();
        *char v4 = xmmword_1C8D8AD30;
        return swift_willThrow();
      }
      else
      {
        *a1 = result;
      }
    }
  }
  return result;
}

unint64_t sub_1C8D5B600(uint64_t a1)
{
  unint64_t result = sub_1C8CAF30C();
  if (result)
  {
    *(_DWORD *)a1 = 0;
    *(unsigned char *)(a1 + 4) = 1;
  }
  else
  {
    unint64_t result = sub_1C8CADAF4();
    if (!v1)
    {
      if (HIDWORD(result))
      {
        sub_1C8CAC5B0();
        swift_allocError();
        *char v4 = xmmword_1C8D8AD30;
        return swift_willThrow();
      }
      else
      {
        *(_DWORD *)a1 = result;
        *(unsigned char *)(a1 + 4) = 0;
      }
    }
  }
  return result;
}

uint64_t sub_1C8D5B698(uint64_t *a1)
{
  return sub_1C8D5789C(a1);
}

uint64_t sub_1C8D5B6B0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D5B6DC(a1, a2, a3, sub_1C8CADAF4);
}

uint64_t sub_1C8D5B6DC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  if (sub_1C8CAF30C())
  {
    uint64_t result = 0;
  }
  else
  {
    uint64_t result = a4();
    if (v4) {
      return result;
    }
  }
  *a1 = result;
  return result;
}

uint64_t sub_1C8D5B738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D5B764(a1, a2, a3, sub_1C8CADAF4);
}

uint64_t sub_1C8D5B764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  char v7 = sub_1C8CAF30C();
  if (v7)
  {
    uint64_t result = 0;
  }
  else
  {
    uint64_t result = a4();
    if (v4) {
      return result;
    }
  }
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v7 & 1;
  return result;
}

uint64_t sub_1C8D5B7CC(uint64_t *a1)
{
  return sub_1C8D57AFC(a1, sub_1C8CADAF4, (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))sub_1C8D5F560);
}

uint64_t sub_1C8D5B80C(_DWORD *a1)
{
  return sub_1C8D5B420(a1);
}

uint64_t sub_1C8D5B824(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D5B8D4(a1, a2, a3, sub_1C8CADC30);
}

uint64_t sub_1C8D5B850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D5B930(a1, a2, a3, sub_1C8CADC30);
}

uint64_t sub_1C8D5B87C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D5B8D4(a1, a2, a3, sub_1C8CADAF4);
}

uint64_t sub_1C8D5B8A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D5B930(a1, a2, a3, sub_1C8CADAF4);
}

uint64_t sub_1C8D5B8D4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  if (sub_1C8CAF30C())
  {
    uint64_t result = 0;
  }
  else
  {
    uint64_t result = a4();
    if (v4) {
      return result;
    }
  }
  *a1 = result;
  return result;
}

uint64_t sub_1C8D5B930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  char v7 = sub_1C8CAF30C();
  if (v7)
  {
    uint64_t result = 0;
  }
  else
  {
    uint64_t result = a4();
    if (v4) {
      return result;
    }
  }
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v7 & 1;
  return result;
}

uint64_t sub_1C8D5B998(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D5B9D0(a1, a2, a3, 0);
}

uint64_t sub_1C8D5B9B4(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D5B9D0(a1, a2, a3, 2);
}

uint64_t sub_1C8D5B9D0(unsigned char *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result = sub_1C8CAF30C();
  if (result)
  {
    *a1 = a4;
    return result;
  }
  if (*(unsigned char *)(v4 + 80))
  {
    uint64_t result = sub_1C8CAF478();
    if (v5) {
      return result;
    }
  }
  else
  {
    uint64_t result = sub_1C8CAF37C();
    if (v5) {
      return result;
    }
  }
  *a1 = result & 1;
  return result;
}

uint64_t sub_1C8D5BA48(char **a1)
{
  return sub_1C8D57D40(a1);
}

uint64_t sub_1C8D5BA60(uint64_t *a1)
{
  if (sub_1C8CAF30C())
  {
    uint64_t result = swift_bridgeObjectRelease();
    *a1 = 0;
    a1[1] = 0xE000000000000000;
  }
  else
  {
    uint64_t result = (uint64_t)sub_1C8CADB68();
    if (!v1)
    {
      uint64_t v5 = result;
      uint64_t v6 = v4;
      uint64_t result = swift_bridgeObjectRelease();
      *a1 = v5;
      a1[1] = v6;
    }
  }
  return result;
}

uint64_t sub_1C8D5BAD0(uint64_t *a1)
{
  if (sub_1C8CAF30C())
  {
    uint64_t result = swift_bridgeObjectRelease();
    *a1 = 0;
    a1[1] = 0;
  }
  else
  {
    uint64_t result = (uint64_t)sub_1C8CADB68();
    if (!v1)
    {
      uint64_t v5 = result;
      uint64_t v6 = v4;
      uint64_t result = swift_bridgeObjectRelease();
      *a1 = v5;
      a1[1] = v6;
    }
  }
  return result;
}

uint64_t sub_1C8D5BB40(uint64_t *a1)
{
  return sub_1C8D58024(a1);
}

uint64_t sub_1C8D5BB58(uint64_t *a1)
{
  return sub_1C8D583B4(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1C8CA3D5C, (__n128)xmmword_1C8D8AD80);
}

uint64_t sub_1C8D5BB8C(uint64_t *a1)
{
  return sub_1C8D583B4(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1C8CAA9F0, (__n128)xmmword_1C8D8BEE0);
}

uint64_t sub_1C8D5BBC0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567728);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for JSONDecoder(uint64_t a1)
{
  swift_release();
  uint64_t result = *(void *)(a1 + 88);
  if (result)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for JSONDecoder(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v6 = (_OWORD *)(a2 + 88);
  uint64_t v5 = *(void *)(a2 + 88);
  swift_retain();
  if (v5)
  {
    uint64_t v7 = *(void *)(a2 + 96);
    uint64_t v8 = *(void *)(a2 + 104);
    *(void *)(a1 + 88) = v5;
    *(void *)(a1 + 96) = v7;
    uint64_t v9 = *(void *)(a2 + 112);
    *(void *)(a1 + 104) = v8;
    *(void *)(a1 + 112) = v9;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v10 = v6[1];
    *(_OWORD *)(a1 + 88) = *v6;
    *(_OWORD *)(a1 + 104) = v10;
  }
  return a1;
}

uint64_t assignWithCopy for JSONDecoder(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  uint64_t v4 = (_OWORD *)(a1 + 88);
  uint64_t v5 = *(void *)(a1 + 88);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v7 = (_OWORD *)(a2 + 88);
  uint64_t v6 = *(void *)(a2 + 88);
  if (v5)
  {
    if (v6)
    {
      *(void *)(a1 + 88) = v6;
      swift_retain();
      swift_release();
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C8D2D768(a1 + 88);
      long long v8 = *(_OWORD *)(a2 + 104);
      *uint64_t v4 = *v7;
      *(_OWORD *)(a1 + 104) = v8;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 88) = v6;
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v9 = *(_OWORD *)(a2 + 104);
    *uint64_t v4 = *v7;
    *(_OWORD *)(a1 + 104) = v9;
  }
  return a1;
}

uint64_t assignWithTake for JSONDecoder(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_release();
  uint64_t v5 = *(void *)(a2 + 88);
  uint64_t v6 = *(void *)(a1 + 88);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  if (!v6) {
    goto LABEL_5;
  }
  if (!v5)
  {
    sub_1C8D2D768(a1 + 88);
LABEL_5:
    long long v7 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v7;
    return a1;
  }
  *(void *)(a1 + 88) = v5;
  swift_release();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for JSONDecoder(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 120)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JSONDecoder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JSONDecoder()
{
  return &type metadata for JSONDecoder;
}

uint64_t sub_1C8D5C04C(char **a1)
{
  return sub_1C8D5849C(a1);
}

void sub_1C8D5C064(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1C8D5C07C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1C8D5C094(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1C8D5C0AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D590D4(a1, a2, a3);
}

uint64_t sub_1C8D5C0C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D56864(a1, a2, a3);
}

uint64_t sub_1C8D5C0DC()
{
  return sub_1C8D5961C();
}

uint64_t sub_1C8D5C0F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C8D59670(a1, a2, a3, a4, a5);
}

uint64_t sub_1C8D5C10C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C8D59FE0(a1, a2, a3, a4, a5);
}

uint64_t sub_1C8D5C124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C8D5A908(a1, a2, a3, a4, a5);
}

uint64_t sub_1C8D5C13C(uint64_t *a1)
{
  return sub_1C8D5B4C4(a1);
}

uint64_t sub_1C8D5C154(uint64_t *a1)
{
  return sub_1C8D5B534(a1);
}

uint64_t sub_1C8D5C16C(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = swift_bridgeObjectRetain();
  sub_1C8CA67D4(v5);
  uint64_t v6 = *v2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v2 = v6;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v6 = sub_1C8D5EB50(0, *((void *)v6 + 2) + 1, 1, v6);
    uint64_t *v2 = v6;
  }
  unint64_t v9 = *((void *)v6 + 2);
  unint64_t v8 = *((void *)v6 + 3);
  if (v9 >= v8 >> 1) {
    uint64_t v6 = sub_1C8D5EB50((char *)(v8 > 1), v9 + 1, 1, v6);
  }
  *((void *)v6 + 2) = v9 + 1;
  v6[v9 + 32] = 91;
  uint64_t *v2 = v6;
  swift_bridgeObjectRetain();
  sub_1C8CA69C8(a1, a2);
  uint64_t v10 = (uint64_t)*v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v2 = (char *)v10;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50(0, *(void *)(v10 + 16) + 1, 1, (char *)v10);
    uint64_t v10 = result;
    uint64_t *v2 = (char *)result;
  }
  unint64_t v13 = *(void *)(v10 + 16);
  unint64_t v12 = *(void *)(v10 + 24);
  if (v13 >= v12 >> 1)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v12 > 1), v13 + 1, 1, (char *)v10);
    uint64_t v10 = result;
  }
  *(void *)(v10 + 16) = v13 + 1;
  *(unsigned char *)(v10 + v13 + 32) = 93;
  uint64_t *v2 = (char *)v10;
  return result;
}

uint64_t sub_1C8D5C2B8()
{
  uint64_t v1 = *v0;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v0 = v1;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50(0, *(void *)(v1 + 16) + 1, 1, (char *)v1);
    uint64_t v1 = result;
    *uint64_t v0 = result;
  }
  unint64_t v4 = *(void *)(v1 + 16);
  unint64_t v3 = *(void *)(v1 + 24);
  if (v4 >= v3 >> 1)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v3 > 1), v4 + 1, 1, (char *)v1);
    uint64_t v1 = result;
  }
  *(void *)(v1 + 16) = v4 + 1;
  *(unsigned char *)(v1 + v4 + 32) = 10;
  *uint64_t v0 = v1;
  return result;
}

uint64_t sub_1C8D5C358(uint64_t a1, unint64_t a2)
{
  v19[3] = *MEMORY[0x1E4F143B8];
  uint64_t v5 = (char *)*v2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v2 = (uint64_t)v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v5 = sub_1C8D5EB50(0, *((void *)v5 + 2) + 1, 1, v5);
    uint64_t *v2 = (uint64_t)v5;
  }
  unint64_t v8 = *((void *)v5 + 2);
  unint64_t v7 = *((void *)v5 + 3);
  if (v8 >= v7 >> 1) {
    uint64_t v5 = sub_1C8D5EB50((char *)(v7 > 1), v8 + 1, 1, v5);
  }
  *((void *)v5 + 2) = v8 + 1;
  unint64_t v9 = (unsigned __int8 *)&v5[v8];
  v5[v8 + 32] = 34;
  uint64_t *v2 = (uint64_t)v5;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1) {
        __break(1u);
      }
      swift_retain();
      sub_1C8D5D030((int)a1, a1 >> 32, v2, v11);
      sub_1C8CA3D5C(a1, a2);
      break;
    case 2uLL:
      uint64_t v12 = *(void *)(a1 + 16);
      uint64_t v13 = *(void *)(a1 + 24);
      swift_retain();
      swift_retain();
      sub_1C8D5D030(v12, v13, v2, v14);
      swift_release();
      swift_release();
      break;
    case 3uLL:
      memset(v19, 0, 14);
      uint64_t v10 = (char *)v19;
      goto LABEL_11;
    default:
      v19[0] = a1;
      LOWORD(v19[1]) = a2;
      BYTE2(v19[1]) = BYTE2(a2);
      unint64_t v9 = (unsigned __int8 *)(a2 >> 40);
      BYTE3(v19[1]) = BYTE3(a2);
      BYTE4(v19[1]) = BYTE4(a2);
      BYTE5(v19[1]) = BYTE5(a2);
      uint64_t v10 = (char *)v19 + BYTE6(a2);
LABEL_11:
      sub_1C8D5CCE4((uint64_t)v19, (uint64_t)v10, v2, v9);
      break;
  }
  uint64_t v15 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v2 = v15;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50(0, *(void *)(v15 + 16) + 1, 1, (char *)v15);
    uint64_t v15 = result;
    uint64_t *v2 = result;
  }
  unint64_t v18 = *(void *)(v15 + 16);
  unint64_t v17 = *(void *)(v15 + 24);
  if (v18 >= v17 >> 1)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v17 > 1), v18 + 1, 1, (char *)v15);
    uint64_t v15 = result;
  }
  *(void *)(v15 + 16) = v18 + 1;
  *(unsigned char *)(v15 + v18 + 32) = 34;
  uint64_t *v2 = v15;
  return result;
}

uint64_t sub_1C8D5C610(float a1)
{
  if ((~LODWORD(a1) & 0x7F800000) == 0)
  {
    if ((LODWORD(a1) & 0x7FFFFF) != 0)
    {
      uint64_t v1 = "nan";
    }
    else
    {
      if (a1 < 0.0)
      {
        uint64_t v1 = "-inf";
        uint64_t v5 = 4;
LABEL_11:
        return sub_1C8CA6060((uint64_t)v1, v5, (unsigned __int8 *)LODWORD(a1));
      }
      uint64_t v1 = "inf";
    }
    uint64_t v5 = 3;
    goto LABEL_11;
  }
  uint64_t v2 = sub_1C8D88590();
  return sub_1C8CA69C8(v2, v3);
}

uint64_t sub_1C8D5C698(double a1)
{
  if ((~*(void *)&a1 & 0x7FF0000000000000) == 0)
  {
    if ((*(void *)&a1 & 0xFFFFFFFFFFFFFLL) != 0)
    {
      uint64_t v1 = "nan";
    }
    else
    {
      if (a1 < 0.0)
      {
        uint64_t v1 = "-inf";
        uint64_t v5 = 4;
LABEL_11:
        return sub_1C8CA6060((uint64_t)v1, v5, *(unsigned __int8 **)&a1);
      }
      uint64_t v1 = "inf";
    }
    uint64_t v5 = 3;
    goto LABEL_11;
  }
  uint64_t v2 = sub_1C8D88580();
  return sub_1C8CA69C8(v2, v3);
}

uint64_t sub_1C8D5C720(unint64_t a1)
{
  unint64_t v2 = a1;
  if ((a1 & 0x8000000000000000) != 0)
  {
    unint64_t v3 = *v1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    const char *v1 = v3;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v3 = sub_1C8D5EB50(0, *((void *)v3 + 2) + 1, 1, v3);
      const char *v1 = v3;
    }
    unint64_t v6 = *((void *)v3 + 2);
    unint64_t v5 = *((void *)v3 + 3);
    if (v6 >= v5 >> 1) {
      unint64_t v3 = sub_1C8D5EB50((char *)(v5 > 1), v6 + 1, 1, v3);
    }
    *((void *)v3 + 2) = v6 + 1;
    v3[v6 + 32] = 45;
    const char *v1 = v3;
    unint64_t v2 = -(uint64_t)v2;
  }
  return sub_1C8D5C98C(v2);
}

uint64_t sub_1C8D5C854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  sub_1C8CB5340(a2, a3, (uint64_t)v18);
  sub_1C8CCC4E8((uint64_t)v18, (uint64_t)v19);
  if (v20 == 255)
  {
    unint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 40))(a2, a3);
    unint64_t v8 = v7;
    if ((v7 & 0x8000000000000000) != 0)
    {
      uint64_t v10 = *v4;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *unint64_t v4 = v10;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v10 = sub_1C8D5EB50(0, *((void *)v10 + 2) + 1, 1, v10);
        *unint64_t v4 = v10;
      }
      unint64_t v12 = *((void *)v10 + 2);
      unint64_t v13 = *((void *)v10 + 3);
      unint64_t v14 = v12 + 1;
      if (v12 >= v13 >> 1)
      {
        uint64_t v15 = v10;
        unint64_t v16 = *((void *)v10 + 2);
        unint64_t v17 = sub_1C8D5EB50((char *)(v13 > 1), v12 + 1, 1, v15);
        unint64_t v12 = v16;
        uint64_t v10 = v17;
      }
      *((void *)v10 + 2) = v14;
      v10[v12 + 32] = 45;
      *unint64_t v4 = v10;
      unint64_t v7 = -(uint64_t)v8;
    }
    return sub_1C8D5C98C(v7);
  }
  else
  {
    sub_1C8CA6060(v19[0], v19[1], (unsigned __int8 *)v20);
    return sub_1C8CCC5AC((uint64_t)v18);
  }
}

uint64_t sub_1C8D5C98C(unint64_t a1)
{
  if (a1 >= 0x3E8)
  {
    sub_1C8D5C98C(a1 / 0x3E8);
  }
  else if (a1 < 0x64)
  {
    unint64_t v3 = *v1;
    if (a1 < 0xA) {
      goto LABEL_16;
    }
    goto LABEL_11;
  }
  unint64_t v3 = *v1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  const char *v1 = v3;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v3 = sub_1C8D5EB50(0, *((void *)v3 + 2) + 1, 1, v3);
    const char *v1 = v3;
  }
  unint64_t v6 = *((void *)v3 + 2);
  unint64_t v5 = *((void *)v3 + 3);
  if (v6 >= v5 >> 1) {
    unint64_t v3 = sub_1C8D5EB50((char *)(v5 > 1), v6 + 1, 1, v3);
  }
  *((void *)v3 + 2) = v6 + 1;
  v3[v6 + 32] = (a1 / 0x64 - 10 * ((a1 / 0x64 * (unsigned __int128)0x199999999999999AuLL) >> 64)) | 0x30;
  const char *v1 = v3;
LABEL_11:
  char v7 = swift_isUniquelyReferenced_nonNull_native();
  const char *v1 = v3;
  if ((v7 & 1) == 0)
  {
    unint64_t v3 = sub_1C8D5EB50(0, *((void *)v3 + 2) + 1, 1, v3);
    const char *v1 = v3;
  }
  unint64_t v9 = *((void *)v3 + 2);
  unint64_t v8 = *((void *)v3 + 3);
  if (v9 >= v8 >> 1) {
    unint64_t v3 = sub_1C8D5EB50((char *)(v8 > 1), v9 + 1, 1, v3);
  }
  *((void *)v3 + 2) = v9 + 1;
  v3[v9 + 32] = (a1 / 0xA - 10 * ((a1 / 0xA * (unsigned __int128)0x199999999999999AuLL) >> 64)) | 0x30;
  const char *v1 = v3;
LABEL_16:
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  const char *v1 = v3;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50(0, *((void *)v3 + 2) + 1, 1, v3);
    unint64_t v3 = (char *)result;
    const char *v1 = (char *)result;
  }
  unint64_t v12 = *((void *)v3 + 2);
  unint64_t v11 = *((void *)v3 + 3);
  if (v12 >= v11 >> 1)
  {
    uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v11 > 1), v12 + 1, 1, v3);
    unint64_t v3 = (char *)result;
  }
  *((void *)v3 + 2) = v12 + 1;
  v3[v12 + 32] = (a1 % 0xA) | 0x30;
  const char *v1 = v3;
  return result;
}

uint64_t sub_1C8D5CBDC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X8>)
{
  if (a2)
  {
    BOOL v6 = __OFSUB__(a2, 1);
    uint64_t v7 = a2 - 1;
    if (v6)
    {
      __break(1u);
    }
    else
    {
      char v8 = a1;
      sub_1C8D5CBDC(a1 >> 4, v7);
      if ((v8 & 0xFu) >= 0xA) {
        char v5 = (v8 & 0xF) + 55;
      }
      else {
        char v5 = v8 & 0xF | 0x30;
      }
      uint64_t v3 = *v4;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      *unint64_t v4 = v3;
      if (result) {
        goto LABEL_7;
      }
    }
    uint64_t result = (uint64_t)sub_1C8D5EB50(0, *(void *)(v3 + 16) + 1, 1, (char *)v3);
    uint64_t v3 = result;
    *unint64_t v4 = result;
LABEL_7:
    unint64_t v11 = *(void *)(v3 + 16);
    unint64_t v10 = *(void *)(v3 + 24);
    if (v11 >= v10 >> 1)
    {
      uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v10 > 1), v11 + 1, 1, (char *)v3);
      uint64_t v3 = result;
    }
    *(void *)(v3 + 16) = v11 + 1;
    *(unsigned char *)(v3 + v11 + 32) = v5;
    *unint64_t v4 = v3;
    return result;
  }
  return sub_1C8CA6060((uint64_t)"0x", 2, a3);
}

uint64_t sub_1C8D5CCE4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, unsigned __int8 *a4@<X8>)
{
  if (result)
  {
    unint64_t v4 = (unsigned __int8 *)result;
    uint64_t v5 = a2 - result;
    if (a2 - result >= 1)
    {
      while (2)
      {
        unsigned int v9 = *v4++;
        unsigned int v8 = v9;
        switch(v9)
        {
          case 8u:
            uint64_t v7 = "\\b";
            goto LABEL_5;
          case 9u:
            uint64_t v7 = "\\t";
            goto LABEL_5;
          case 0xAu:
            uint64_t v7 = "\\n";
            goto LABEL_5;
          case 0xBu:
            uint64_t v7 = "\\v";
            goto LABEL_5;
          case 0xCu:
            uint64_t v7 = "\\f";
            goto LABEL_5;
          case 0xDu:
            uint64_t v7 = "\\r";
            goto LABEL_5;
          case 0xEu:
          case 0xFu:
          case 0x10u:
          case 0x11u:
          case 0x12u:
          case 0x13u:
          case 0x14u:
          case 0x15u:
          case 0x16u:
          case 0x17u:
          case 0x18u:
          case 0x19u:
          case 0x1Au:
          case 0x1Bu:
          case 0x1Cu:
          case 0x1Du:
          case 0x1Eu:
          case 0x1Fu:
          case 0x20u:
          case 0x21u:
            goto LABEL_11;
          case 0x22u:
            uint64_t v7 = "\\\"";
            goto LABEL_5;
          default:
            if (v8 == 92)
            {
              uint64_t v7 = "\\\\"";
LABEL_5:
              uint64_t result = sub_1C8CA6060((uint64_t)v7, 2, a4);
            }
            else
            {
LABEL_11:
              uint64_t v10 = *a3;
              uint64_t result = swift_isUniquelyReferenced_nonNull_native();
              *a3 = v10;
              if (v8 - 127 >= 0xFFFFFFA1)
              {
                if ((result & 1) == 0)
                {
                  uint64_t result = (uint64_t)sub_1C8D5EB50(0, *(void *)(v10 + 16) + 1, 1, (char *)v10);
                  uint64_t v10 = result;
                  *a3 = result;
                }
                unint64_t v20 = *(void *)(v10 + 16);
                unint64_t v19 = *(void *)(v10 + 24);
                if (v20 >= v19 >> 1)
                {
                  uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v19 > 1), v20 + 1, 1, (char *)v10);
                  uint64_t v10 = result;
                }
                *(void *)(v10 + 16) = v20 + 1;
                a4 = (unsigned __int8 *)(v10 + v20);
                *(unsigned char *)(v10 + v20 + 32) = v8;
                *a3 = v10;
              }
              else
              {
                if ((result & 1) == 0)
                {
                  uint64_t result = (uint64_t)sub_1C8D5EB50(0, *(void *)(v10 + 16) + 1, 1, (char *)v10);
                  uint64_t v10 = result;
                  *a3 = result;
                }
                unint64_t v12 = *(void *)(v10 + 16);
                unint64_t v11 = *(void *)(v10 + 24);
                unint64_t v13 = v12 + 1;
                if (v12 >= v11 >> 1)
                {
                  uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v11 > 1), v12 + 1, 1, (char *)v10);
                  uint64_t v10 = result;
                }
                *(void *)(v10 + 16) = v13;
                *(unsigned char *)(v10 + v12 + 32) = 92;
                *a3 = v10;
                unint64_t v14 = *(void *)(v10 + 24);
                unint64_t v15 = v12 + 2;
                if ((uint64_t)(v12 + 2) > (uint64_t)(v14 >> 1))
                {
                  uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v14 > 1), v12 + 2, 1, (char *)v10);
                  uint64_t v10 = result;
                }
                *(void *)(v10 + 16) = v15;
                *(unsigned char *)(v10 + v13 + 32) = (v8 >> 6) | 0x30;
                *a3 = v10;
                unint64_t v16 = *(void *)(v10 + 24);
                unint64_t v17 = v12 + 3;
                if ((uint64_t)(v12 + 3) > (uint64_t)(v16 >> 1))
                {
                  uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v16 > 1), v12 + 3, 1, (char *)v10);
                  uint64_t v10 = result;
                }
                *(void *)(v10 + 16) = v17;
                *(unsigned char *)(v10 + v15 + 32) = (v8 >> 3) & 7 | 0x30;
                *a3 = v10;
                unint64_t v18 = *(void *)(v10 + 24);
                if ((uint64_t)(v12 + 4) > (uint64_t)(v18 >> 1))
                {
                  uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v18 > 1), v12 + 4, 1, (char *)v10);
                  uint64_t v10 = result;
                }
                a4 = (unsigned __int8 *)(v8 & 7 | 0x30);
                *(void *)(v10 + 16) = v12 + 4;
                *(unsigned char *)(v10 + v17 + 32) = v8 & 7 | 0x30;
                *a3 = v10;
              }
            }
            if (--v5) {
              continue;
            }
            return result;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C8D5D030@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X3>, unsigned __int8 *a4@<X8>)
{
  uint64_t result = sub_1C8D88110();
  uint64_t v9 = result;
  if (result)
  {
    uint64_t result = sub_1C8D88140();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v9 += a1 - result;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v12 = sub_1C8D88130();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  uint64_t v14 = v9 + v13;
  if (v9) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = 0;
  }
  return sub_1C8D5CCE4(v9, v15, a3, a4);
}

uint64_t destroy for TextFormatEncoder()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s20SiriOntologyProtobuf17TextFormatEncoderVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for TextFormatEncoder(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for TextFormatEncoder(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TextFormatEncoder(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TextFormatEncoder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextFormatEncoder()
{
  return &type metadata for TextFormatEncoder;
}

double Google_Protobuf_Duration.init()@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(_DWORD *)(a1 + 8) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 16) = xmmword_1C8D8AD80;
  return result;
}

uint64_t Google_Protobuf_Duration.seconds.getter()
{
  return *(void *)v0;
}

uint64_t Google_Protobuf_Duration.seconds.setter(uint64_t result)
{
  void *v1 = result;
  return result;
}

uint64_t (*Google_Protobuf_Duration.seconds.modify())(void, void, void)
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Duration.nanos.getter()
{
  return *(unsigned int *)(v0 + 8);
}

uint64_t Google_Protobuf_Duration.nanos.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*Google_Protobuf_Duration.nanos.modify())(void, void, void)
{
  return nullsub_1;
}

uint64_t Google_Protobuf_Duration.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  unint64_t v3 = *(void *)(v1 + 24);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C8CA3CF8(v2, v3);
}

uint64_t Google_Protobuf_Duration.unknownFields.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C8CA3D5C(*(void *)(v1 + 16), *(void *)(v1 + 24));
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = v3;
  return result;
}

uint64_t (*Google_Protobuf_Duration.unknownFields.modify())(void, void, void)
{
  return nullsub_1;
}

unint64_t static Google_Protobuf_Duration.protoMessageName.getter()
{
  return 0xD000000000000018;
}

uint64_t sub_1C8D5D374()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234F460, &qword_1EA567730);
}

uint64_t static Google_Protobuf_Duration._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565C80 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA567738;
  uint64_t v3 = qword_1EA567740;
  uint64_t v4 = unk_1EA567748;
  *a1 = qword_1EA567730;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_Duration.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  uint64_t result = v7(a2, a3);
  if (!v4)
  {
    while ((v9 & 1) == 0)
    {
      if (result == 2)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 72))(v3 + 8, a2, a3);
      }
      else if (result == 1)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 96))(v3, a2, a3);
      }
      uint64_t result = v7(a2, a3);
    }
  }
  return result;
}

uint64_t Google_Protobuf_Duration.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(unsigned int *)(v3 + 8);
  if (!*(void *)v3
    || (uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(a3 + 32))(*(void *)v3, 1, a2, a3),
        !v4))
  {
    if (!v8) {
      return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
    }
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 24))(v8, 2, a2, a3);
    if (!v4) {
      return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
    }
  }
  return result;
}

uint64_t Google_Protobuf_Duration.hashValue.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *((unsigned int *)v0 + 2);
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  sub_1C8D88840();
  sub_1C8CBC748(v6, v1, v2, v4, v3);
  return sub_1C8D888A0();
}

unint64_t sub_1C8D5D63C()
{
  return 0xD000000000000018;
}

uint64_t sub_1C8D5D658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_Duration.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8D5D670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_Duration.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8D5D688@<X0>(void *a1@<X8>)
{
  if (qword_1EA565C80 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1EA567738;
  uint64_t v3 = qword_1EA567740;
  uint64_t v4 = unk_1EA567748;
  *a1 = qword_1EA567730;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8D5D720()
{
  return sub_1C8D6BABC(*(void *)v0, *(_DWORD *)(v0 + 8), *(void *)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t sub_1C8D5D730(uint64_t a1)
{
  unint64_t result = sub_1C8D5D758();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D5D758()
{
  unint64_t result = qword_1EA567750;
  if (!qword_1EA567750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567750);
  }
  return result;
}

unint64_t sub_1C8D5D7AC(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C8D4CA8C();
  unint64_t result = sub_1C8D5D7DC();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C8D5D7DC()
{
  unint64_t result = qword_1EA567758;
  if (!qword_1EA567758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567758);
  }
  return result;
}

unint64_t sub_1C8D5D834()
{
  unint64_t result = qword_1EA567760;
  if (!qword_1EA567760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567760);
  }
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_Duration()
{
  return &type metadata for Google_Protobuf_Duration;
}

uint64_t sub_1C8D5D898()
{
  return sub_1C8D888A0();
}

uint64_t sub_1C8D5D8E0()
{
  return sub_1C8D88860();
}

uint64_t sub_1C8D5D90C()
{
  return sub_1C8D888A0();
}

uint64_t sub_1C8D5D950@<X0>(unsigned __int8 *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1C8D5D988(*a1);
  *a2 = result;
  return result;
}

void sub_1C8D5D97C(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1C8D5D988(uint64_t result)
{
  if (result >= 6u) {
    return 6;
  }
  else {
    return result;
  }
}

unsigned char *storeEnumTagSinglePayload for WireFormat(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C8D5DA68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WireFormat()
{
  return &type metadata for WireFormat;
}

unint64_t sub_1C8D5DAA4()
{
  unint64_t result = qword_1EA567768;
  if (!qword_1EA567768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567768);
  }
  return result;
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Message.jsonString(options:)(SiriOntologyProtobuf::JSONEncodingOptions options)
{
  uint64_t v4 = v2;
  uint64_t v5 = v1;
  unsigned int v6 = *(char **)&options.alwaysPrintEnumsAsInts;
  uint64_t v7 = sub_1C8D88340();
  MEMORY[0x1F4188790](v7 - 8, v8);
  BOOL v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 2];
  char v11 = v6[1];
  v20[0] = *v6;
  v20[1] = v11;
  uint64_t v12 = Message.jsonUTF8Data(options:)(v20, v5, v4);
  if (!v3)
  {
    uint64_t v14 = v12;
    unint64_t v15 = v13;
    sub_1C8D88330();
    uint64_t v16 = sub_1C8D88300();
    if (!v17)
    {
      __break(1u);
      goto LABEL_6;
    }
    BOOL v10 = (char *)v16;
    uint64_t v5 = (uint64_t)v17;
    sub_1C8CA3D5C(v14, v15);
  }
  uint64_t v16 = (uint64_t)v10;
  unint64_t v17 = (void *)v5;
LABEL_6:
  result._object = v17;
  result._countAndFlagsBits = v16;
  return result;
}

uint64_t Message.jsonUTF8Data(options:)(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1C8D88340();
  uint64_t v41 = *(void *)(v8 - 8);
  uint64_t v42 = v8;
  uint64_t v10 = MEMORY[0x1F4188790](v8, v9);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](v10, v14);
  char v16 = *a1;
  char v17 = a1[1];
  unint64_t v20 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v13 + 16);
  uint64_t v19 = v13 + 16;
  unint64_t v18 = v20;
  v20((uint64_t *)((char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0)), v4, a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567720);
  if (!swift_dynamicCast())
  {
    uint64_t v50 = 0;
    long long v48 = 0u;
    long long v49 = 0u;
    sub_1C8D5BBC0((uint64_t)&v48);
    *((void *)&v49 + 1) = a2;
    uint64_t v50 = a3;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v48);
    v18(boxed_opaque_existential_1, v4, a2);
    v51[0] = v16;
    v51[1] = v17;
    uint64_t v24 = v43;
    sub_1C8D22D04((uint64_t)&v48, v51, (uint64_t)&v44);
    if (!v24)
    {
      uint64_t v25 = a3;
      uint64_t v26 = v44;
      if ((v45 & 0x100) == 0)
      {
        char v27 = v45;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v26 = sub_1C8D5EB50(0, *((void *)v26 + 2) + 1, 1, v26);
        }
        unint64_t v29 = *((void *)v26 + 2);
        unint64_t v28 = *((void *)v26 + 3);
        if (v29 >= v28 >> 1) {
          uint64_t v26 = sub_1C8D5EB50((char *)(v28 > 1), v29 + 1, 1, v26);
        }
        *((void *)v26 + 2) = v29 + 1;
        v26[v29 + 32] = v27;
        char v44 = v26;
      }
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      char v44 = v26;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v26 = sub_1C8D5EB50(0, *((void *)v26 + 2) + 1, 1, v26);
        char v44 = v26;
      }
      unint64_t v32 = *((void *)v26 + 2);
      unint64_t v31 = *((void *)v26 + 3);
      if (v32 >= v31 >> 1) {
        uint64_t v26 = sub_1C8D5EB50((char *)(v31 > 1), v32 + 1, 1, v26);
      }
      *((void *)v26 + 2) = v32 + 1;
      v26[v32 + 32] = 123;
      char v44 = v26;
      __int16 v45 = 256;
      (*(void (**)(char **, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v25 + 72))(&v44, &type metadata for JSONEncodingVisitor, &off_1F2354C58, a2, v25);
      uint64_t v33 = v44;
      char v37 = swift_isUniquelyReferenced_nonNull_native();
      char v44 = v33;
      if ((v37 & 1) == 0)
      {
        uint64_t v33 = sub_1C8D5EB50(0, *((void *)v33 + 2) + 1, 1, v33);
        char v44 = v33;
      }
      unint64_t v39 = *((void *)v33 + 2);
      unint64_t v38 = *((void *)v33 + 3);
      if (v39 >= v38 >> 1) {
        uint64_t v33 = sub_1C8D5EB50((char *)(v38 > 1), v39 + 1, 1, v33);
      }
      *((void *)v33 + 2) = v39 + 1;
      v33[v39 + 32] = 125;
      char v44 = v33;
      __int16 v45 = 44;
      uint64_t v40 = swift_bridgeObjectRetain();
      uint64_t v19 = sub_1C8D5F914(v40);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
    }
    return v19;
  }
  sub_1C8CA4528(&v48, (uint64_t)&v44);
  uint64_t v19 = v46;
  uint64_t v21 = v47;
  __swift_project_boxed_opaque_existential_1(&v44, v46);
  LOBYTE(v48) = v16;
  BYTE1(v48) = v17;
  uint64_t v22 = v43;
  (*(void (**)(long long *, uint64_t, uint64_t))(v21 + 8))(&v48, v19, v21);
  if (v22
    || (sub_1C8D88330(),
        uint64_t v19 = sub_1C8D882F0(),
        unint64_t v35 = v34,
        swift_bridgeObjectRelease(),
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v12, v42),
        v35 >> 60 != 15))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
    return v19;
  }
  __break(1u);
  return result;
}

uint64_t Message.init(jsonString:options:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v29 = a5;
  uint64_t v26 = a4;
  uint64_t v12 = sub_1C8D88340();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12, v14);
  char v16 = (char *)v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v17 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v17)
  {
    v25[1] = v6;
    char v25[2] = v7;
    uint64_t v18 = *a3;
    char v19 = *((unsigned char *)a3 + 8);
    sub_1C8D88330();
    uint64_t v20 = sub_1C8D882F0();
    unint64_t v22 = v21;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    if (v22 >> 60 != 15)
    {
      uint64_t v27 = v18;
      char v28 = v19;
      return Message.init(jsonUTF8Data:options:)(v20, v22, (uint64_t)&v27, v26, v29, a6);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1C8CAC5B0();
  swift_allocError();
  _OWORD *v24 = xmmword_1C8D8AD20;
  return swift_willThrow();
}

uint64_t Message.init(jsonUTF8Data:options:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v7 = v6;
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  uint64_t v13 = *(void *)a3;
  char v14 = *(unsigned char *)(a3 + 8);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a5 + 16))(a6, a4, a5);
  v20[4] = a4;
  v20[5] = a5;
  v20[6] = v13;
  char v21 = v14;
  unint64_t v22 = a6;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1) {
        __break(1u);
      }
      swift_retain();
      sub_1C8D0DFE8((int)a1, a1 >> 32, sub_1C8D5F9B0);
      uint64_t v16 = v6;
      sub_1C8CA3D5C(a1, a2);
      break;
    case 2uLL:
      uint64_t v18 = *(void *)(a1 + 16);
      uint64_t v17 = *(void *)(a1 + 24);
      swift_retain();
      swift_retain();
      sub_1C8D0DFE8(v18, v17, sub_1C8D5F9B0);
      uint64_t v16 = v7;
      swift_release();
      swift_release();
      break;
    case 3uLL:
      memset(v20, 0, 14);
      uint64_t v15 = (char *)v20;
      goto LABEL_7;
    default:
      v20[0] = a1;
      LOWORD(v20[1]) = a2;
      BYTE2(v20[1]) = BYTE2(a2);
      BYTE3(v20[1]) = BYTE3(a2);
      BYTE4(v20[1]) = BYTE4(a2);
      BYTE5(v20[1]) = BYTE5(a2);
      uint64_t v15 = (char *)v20 + BYTE6(a2);
LABEL_7:
      sub_1C8D5E53C((uint64_t)v20, (uint64_t)v15, v13, v14, (uint64_t)a6, a4, a5);
      uint64_t v16 = v6;
      break;
  }
  uint64_t result = sub_1C8CA3D5C(a1, a2);
  if (v16) {
    return (*(uint64_t (**)(void *, uint64_t))(*(void *)(a4 - 8) + 8))(a6, a4);
  }
  return result;
}

uint64_t sub_1C8D5E53C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result = MEMORY[0x1F4188790](a1, a2);
  uint64_t v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!result) {
    return result;
  }
  char v19 = (char *)(v14 - a1);
  if (v14 - a1 < 1) {
    return result;
  }
  long long v49 = (char *)(v14 - a1 - 1);
  uint64_t v48 = v16;
  uint64_t v50 = v7;
  uint64_t v68 = v15;
  type metadata accessor for DoubleParser();
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = swift_slowAlloc();
  uint64_t v22 = v68;
  uint64_t v23 = 0;
  *(void *)(v20 + 16) = v21;
  *(void *)(v20 + 24) = v21 + 128;
  uint64_t v55 = a1;
  uint64_t v56 = v19;
  uint64_t v58 = v20;
  uint64_t v59 = a3;
  uint64_t v60 = a3;
  char v61 = a4 & 1;
  uint64_t v62 = a3;
  char v63 = a4 & 1;
  uint64_t v64 = 0;
  char v65 = 0;
  long long v66 = 0u;
  long long v67 = 0u;
  while (1)
  {
    unsigned int v24 = v23[a1];
    BOOL v25 = v24 > 0x20;
    uint64_t v26 = (1 << v24) & 0x100002600;
    if (v25 || v26 == 0) {
      break;
    }
    if (v19 == ++v23)
    {
      uint64_t v23 = v19;
      goto LABEL_10;
    }
  }
  uint64_t v57 = v23;
  if (v19 == v23
    || v23[a1] != 110
    || v49 == v23
    || v23[a1 + 1] != 117
    || v19 - 2 == v23
    || v23[a1 + 2] != byte_1F23500E2
    || v19 - 3 == v23
    || v23[a1 + 3] != byte_1F23500E3)
  {
LABEL_11:
    uint64_t v28 = v50;
    sub_1C8D58D5C(v22, a6, a7);
    if (v28) {
      goto LABEL_22;
    }
    char v19 = v56;
    uint64_t v29 = v57;
    if (v57 != v56) {
      goto LABEL_13;
    }
LABEL_19:
    if (v29 != v19)
    {
      sub_1C8CAC5B0();
      swift_allocError();
      long long v34 = xmmword_1C8D8F6F0;
LABEL_21:
      *uint64_t v33 = v34;
      swift_willThrow();
    }
LABEL_22:
    uint64_t v35 = v66;
    swift_release();
    return sub_1C8CA469C(v35);
  }
  uint64_t v29 = v23 + 4;
  uint64_t v57 = v23 + 4;
  if (v19 - 4 != v23 && (v23[a1 + 4] & 0xDFu) - 91 > 0xFFFFFFE5)
  {
LABEL_10:
    uint64_t v57 = v23;
    goto LABEL_11;
  }
  uint64_t result = swift_conformsToProtocol2();
  if (result) {
    uint64_t v36 = a6;
  }
  else {
    uint64_t v36 = 0;
  }
  if (!v36) {
    goto LABEL_43;
  }
  uint64_t v37 = result;
  if (result)
  {
    uint64_t v47 = *(void (**)(uint64_t, uint64_t))(result + 24);
    uint64_t v38 = sub_1C8D88620();
    long long v49 = (char *)&v45;
    uint64_t v46 = v38;
    uint64_t v45 = *(void *)(v38 - 8);
    MEMORY[0x1F4188790](v38, v39);
    uint64_t v41 = (char *)&v45 - v40;
    uint64_t v42 = v50;
    v47(a6, v37);
    if (v42)
    {
      swift_release();
      return sub_1C8CA469C(0);
    }
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v41, 1, a6) == 1)
    {
      (*(void (**)(char *, uint64_t))(v45 + 8))(v41, v46);
LABEL_43:
      sub_1C8CAC5B0();
      swift_allocError();
      long long v34 = xmmword_1C8D90980;
      goto LABEL_21;
    }
    uint64_t v52 = a6;
    uint64_t v53 = v37;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v51);
    uint64_t v44 = v48;
    (*(void (**)(uint64_t *, char *, uint64_t))(v48 + 32))(boxed_opaque_existential_1, v41, a6);
    sub_1C8CA4528(&v51, (uint64_t)v54);
    sub_1C8CA4528(v54, (uint64_t)&v51);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567720);
    swift_dynamicCast();
    (*(void (**)(uint64_t, char *, uint64_t))(v44 + 40))(v68, v18, a6);
    if (v29 != v19)
    {
LABEL_13:
      while (1)
      {
        unsigned int v30 = v29[v55];
        BOOL v25 = v30 > 0x20;
        uint64_t v31 = (1 << v30) & 0x100002600;
        if (v25 || v31 == 0) {
          break;
        }
        if (v19 == ++v29)
        {
          uint64_t v29 = v19;
          goto LABEL_19;
        }
      }
    }
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

char *sub_1C8D5EAA8()
{
  uint64_t v1 = *v0;
  uint64_t result = (char *)swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v0 = v1;
  if (!result)
  {
    uint64_t result = sub_1C8D5EB50(result, *((void *)v1 + 2) + 1, 1, v1);
    *uint64_t v0 = result;
  }
  return result;
}

char *sub_1C8D5EAF4(char *result)
{
  unint64_t v2 = *((void *)*v1 + 3);
  if ((uint64_t)(result + 1) > (uint64_t)(v2 >> 1))
  {
    uint64_t result = sub_1C8D5EB50((char *)(v2 > 1), (int64_t)(result + 1), 1, *v1);
    char *v1 = result;
  }
  return result;
}

uint64_t sub_1C8D5EB38(uint64_t result, char a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 16) = result + 1;
  *(unsigned char *)(v3 + result + 32) = a2;
  return result;
}

char *sub_1C8D5EB50(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2D08);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1C8D5EC3C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567788);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1C8D5ED38(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2BF8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1C8D5EE3C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567770);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1C8D5EF58(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567778);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1C8D5F05C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567798);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1C8D5F148(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567790);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1C8D5F24C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5677C8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 4 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1C8D5F348(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1C8D5F468(a1, a2, a3, a4, &qword_1EA5677A8);
}

char *sub_1C8D5F354(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1C8D5F56C(a1, a2, a3, a4, &qword_1EA5677A0);
}

char *sub_1C8D5F360(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5677C0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 8 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1C8D5F45C(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1C8D5F468(a1, a2, a3, a4, &qword_1EA5677B8);
}

char *sub_1C8D5F468(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    int64_t v11 = (char *)swift_allocObject();
    int64_t v12 = _swift_stdlib_malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 29;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 2);
  }
  else
  {
    int64_t v11 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v14 = v11 + 32;
  uint64_t v15 = a4 + 32;
  if (v6)
  {
    if (v11 != a4 || v14 >= &v15[4 * v9]) {
      memmove(v14, v15, 4 * v9);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 4 * v9);
  }
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_1C8D5F560(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1C8D5F56C(a1, a2, a3, a4, &qword_1EA5677B0);
}

char *sub_1C8D5F56C(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    int64_t v11 = (char *)swift_allocObject();
    int64_t v12 = _swift_stdlib_malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    int64_t v11 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v14 = v11 + 32;
  uint64_t v15 = a4 + 32;
  if (v6)
  {
    if (v11 != a4 || v14 >= &v15[8 * v9]) {
      memmove(v14, v15, 8 * v9);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 8 * v9);
  }
  swift_bridgeObjectRelease();
  return v11;
}

void *sub_1C8D5F664(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA565EB8);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    void v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[5 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA565EC0);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

unsigned char *sub_1C8D5F79C@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    uint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    uint64_t result = (unsigned char *)sub_1C8CAA92C(result, a2);
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    uint64_t result = (unsigned char *)sub_1C8D5F814((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    uint64_t result = (unsigned char *)sub_1C8D5F890((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_1C8D5F814(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_1C8D88150();
  swift_allocObject();
  uint64_t result = sub_1C8D88100();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1C8D88190();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_1C8D5F890(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_1C8D88150();
  swift_allocObject();
  uint64_t result = sub_1C8D88100();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1C8D5F914(uint64_t a1)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
  unint64_t v10 = sub_1C8D5F9D8();
  v8[0] = a1;
  uint64_t v2 = __swift_project_boxed_opaque_existential_1(v8, v9);
  uint64_t v3 = (unsigned char *)(*v2 + 32);
  uint64_t v4 = &v3[*(void *)(*v2 + 16)];
  swift_bridgeObjectRetain();
  sub_1C8D5F79C(v3, v4, &v7);
  uint64_t v5 = v7;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v5;
}

uint64_t sub_1C8D5F9B0(uint64_t a1, uint64_t a2)
{
  return sub_1C8D5E53C(a1, a2, *(void *)(v2 + 32), *(unsigned char *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 16), *(void *)(v2 + 24));
}

unint64_t sub_1C8D5F9D8()
{
  unint64_t result = qword_1EA567780;
  if (!qword_1EA567780)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBCB2CE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567780);
  }
  return result;
}

uint64_t sub_1C8D5FA34()
{
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_1C8D88410();
  uint64_t v2 = v1;
  if (!v1)
  {
LABEL_30:
    swift_bridgeObjectRelease();
    return v2;
  }
  uint64_t v3 = v0;
  while ((v3 != 95 || v2 != 0xE100000000000000) && (sub_1C8D887C0() & 1) == 0)
  {
    uint64_t result = sub_1C8D887C0();
    if (result) {
      goto LABEL_32;
    }
    if (v3 == 65 && v2 == 0xE100000000000000) {
      goto LABEL_20;
    }
    if ((sub_1C8D887C0() & 1) == 0)
    {
      if (v3 == 90 && v2 == 0xE100000000000000)
      {
LABEL_26:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v2 = 0;
        goto LABEL_30;
      }
LABEL_20:
      if ((sub_1C8D887C0() & 1) == 0) {
        goto LABEL_26;
      }
    }
    MEMORY[0x1CB772F40](v3, v2);
LABEL_5:
    swift_bridgeObjectRelease();
    uint64_t v3 = sub_1C8D88410();
    uint64_t v2 = v4;
    if (!v4)
    {
      uint64_t v2 = 0;
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1C8D88410();
  uint64_t v2 = v6;
  if (!v6)
  {
    swift_bridgeObjectRelease();
    goto LABEL_30;
  }
  uint64_t v7 = v5;
  uint64_t result = sub_1C8D887C0();
  if ((result & 1) == 0)
  {
    if (v7 == 97 && v2 == 0xE100000000000000) {
      goto LABEL_3;
    }
    if (sub_1C8D887C0()) {
      goto LABEL_26;
    }
    if (v7 != 122 || v2 != 0xE100000000000000)
    {
LABEL_3:
      if (sub_1C8D887C0()) {
        goto LABEL_26;
      }
    }
    sub_1C8D88370();
    swift_bridgeObjectRelease();
    sub_1C8D88400();
    goto LABEL_5;
  }
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1C8D5FCA4()
{
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_1C8D88410();
  uint64_t v2 = v1;
  if (!v1)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    return v2;
  }
  uint64_t v3 = v0;
  while (1)
  {
    if (v3 == 95 && v2 == 0xE100000000000000 || (sub_1C8D887C0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v2 = 0;
      goto LABEL_19;
    }
    uint64_t result = sub_1C8D887C0();
    if (result) {
      break;
    }
    if (v3 != 65 || v2 != 0xE100000000000000)
    {
      if (sub_1C8D887C0()) {
        goto LABEL_3;
      }
      if (v3 == 90 && v2 == 0xE100000000000000)
      {
LABEL_16:
        MEMORY[0x1CB772F40](95, 0xE100000000000000);
        sub_1C8D88350();
        swift_bridgeObjectRelease();
        sub_1C8D88400();
        goto LABEL_4;
      }
    }
    if ((sub_1C8D887C0() & 1) == 0) {
      goto LABEL_16;
    }
LABEL_3:
    MEMORY[0x1CB772F40](v3, v2);
LABEL_4:
    swift_bridgeObjectRelease();
    uint64_t v3 = sub_1C8D88410();
    uint64_t v2 = v4;
    if (!v4)
    {
      uint64_t v2 = 0;
      goto LABEL_19;
    }
  }
  __break(1u);
  return result;
}

char *sub_1C8D5FE80(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v22 = 0;
  unint64_t v23 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  uint64_t v3 = (char *)MEMORY[0x1E4FBC860];
LABEL_5:
  uint64_t v4 = 0;
  while (1)
  {
    uint64_t v5 = sub_1C8D88410();
    if (!v6) {
      break;
    }
    uint64_t v7 = v5;
    uint64_t v8 = v6;
    if (v5 == 44 && v6 == 0xE100000000000000 || (sub_1C8D887C0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      if (!v4)
      {
        swift_bridgeObjectRelease();
LABEL_27:
        swift_bridgeObjectRelease();
        goto LABEL_28;
      }
      uint64_t v11 = sub_1C8D5FCA4();
      uint64_t v13 = v12;
      swift_bridgeObjectRelease();
      if (!v13) {
        goto LABEL_27;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v3 = sub_1C8D5ED38(0, *((void *)v3 + 2) + 1, 1, v3);
      }
      unint64_t v15 = *((void *)v3 + 2);
      unint64_t v14 = *((void *)v3 + 3);
      if (v15 >= v14 >> 1) {
        uint64_t v3 = sub_1C8D5ED38((char *)(v14 > 1), v15 + 1, 1, v3);
      }
      *((void *)v3 + 2) = v15 + 1;
      uint64_t v16 = &v3[16 * v15];
      *((void *)v16 + 4) = v11;
      *((void *)v16 + 5) = v13;
      uint64_t v22 = 0;
      unint64_t v23 = 0xE000000000000000;
      goto LABEL_5;
    }
    uint64_t v9 = &v22;
    MEMORY[0x1CB772F40](v7, v8);
    swift_bridgeObjectRelease();
    if (__OFADD__(v4++, 1))
    {
      __break(1u);
LABEL_32:
      uint64_t v3 = sub_1C8D5ED38(0, *((void *)v3 + 2) + 1, 1, v3);
      goto LABEL_23;
    }
  }
  swift_bridgeObjectRelease();
  if (!v4) {
    goto LABEL_27;
  }
  uint64_t v9 = (uint64_t *)sub_1C8D5FCA4();
  uint64_t v8 = v17;
  swift_bridgeObjectRelease();
  if (!v8)
  {
LABEL_28:
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_32;
  }
LABEL_23:
  unint64_t v19 = *((void *)v3 + 2);
  unint64_t v18 = *((void *)v3 + 3);
  if (v19 >= v18 >> 1) {
    uint64_t v3 = sub_1C8D5ED38((char *)(v18 > 1), v19 + 1, 1, v3);
  }
  *((void *)v3 + 2) = v19 + 1;
  uint64_t v20 = &v3[16 * v19];
  *((void *)v20 + 4) = v9;
  *((void *)v20 + 5) = v8;
  return v3;
}

double Google_Protobuf_FieldMask.init(protoPaths:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = a1;
  double result = 0.0;
  *(_OWORD *)(a2 + 8) = xmmword_1C8D8AD80;
  return result;
}

{
  double result;

  *(void *)a2 = a1;
  double result = 0.0;
  *(_OWORD *)(a2 + 8) = xmmword_1C8D8AD80;
  return result;
}

double Google_Protobuf_FieldMask.init(jsonPaths:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = sub_1C8D6016C(a1);
  swift_bridgeObjectRelease();
  *(void *)a2 = v3;
  double result = 0.0;
  *(_OWORD *)(a2 + 8) = xmmword_1C8D8AD80;
  return result;
}

char *sub_1C8D6016C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = swift_bridgeObjectRetain() + 40;
  uint64_t v3 = (char *)MEMORY[0x1E4FBC860];
  do
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C8D5FCA4();
    uint64_t v7 = v6;
    swift_bridgeObjectRelease();
    if (v7)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v3 = sub_1C8D5ED38(0, *((void *)v3 + 2) + 1, 1, v3);
      }
      unint64_t v9 = *((void *)v3 + 2);
      unint64_t v8 = *((void *)v3 + 3);
      if (v9 >= v8 >> 1) {
        uint64_t v3 = sub_1C8D5ED38((char *)(v8 > 1), v9 + 1, 1, v3);
      }
      *((void *)v3 + 2) = v9 + 1;
      uint64_t v4 = &v3[16 * v9];
      *((void *)v4 + 4) = v5;
      *((void *)v4 + 5) = v7;
    }
    v2 += 16;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1C8D60288()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = v1 + 40;
    uint64_t v4 = (char *)MEMORY[0x1E4FBC860];
    while (1)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_1C8D5FA34();
      uint64_t v7 = v6;
      swift_bridgeObjectRelease();
      if (!v7) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v4 = sub_1C8D5ED38(0, *((void *)v4 + 2) + 1, 1, v4);
      }
      unint64_t v9 = *((void *)v4 + 2);
      unint64_t v8 = *((void *)v4 + 3);
      if (v9 >= v8 >> 1) {
        uint64_t v4 = sub_1C8D5ED38((char *)(v8 > 1), v9 + 1, 1, v4);
      }
      v3 += 16;
      *((void *)v4 + 2) = v9 + 1;
      unint64_t v10 = &v4[16 * v9];
      *((void *)v10 + 4) = v5;
      *((void *)v10 + 5) = v7;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CC552C();
    swift_allocError();
    *uint64_t v11 = 3;
    return swift_willThrow();
  }
  else
  {
LABEL_12:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA566BF8);
    sub_1C8D13630();
    sub_1C8D882D0();
    swift_bridgeObjectRelease();
    sub_1C8D88400();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C8D88400();
    swift_bridgeObjectRelease();
    return 34;
  }
}

uint64_t sub_1C8D60480()
{
  return sub_1C8D60288();
}

uint64_t sub_1C8D60498()
{
  uint64_t result = (uint64_t)sub_1C8CADB68();
  if (!v1)
  {
    uint64_t v4 = sub_1C8D5FE80(result, v3);
    swift_bridgeObjectRelease();
    if (v4)
    {
      uint64_t result = swift_bridgeObjectRelease();
      *uint64_t v0 = v4;
    }
    else
    {
      sub_1C8CAC5B0();
      swift_allocError();
      *uint64_t v5 = xmmword_1C8D90BE0;
      return swift_willThrow();
    }
  }
  return result;
}

void sub_1C8D60530(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v5 = sub_1C8D88340();
  MEMORY[0x1F4188790](v5 - 8, v6);
  LOWORD(v7) = *a2;
  int v8 = a2[1];
  uint64_t v9 = *(void *)(v2 + 16);
  uint64_t v11 = *(void *)(v9 + 16);
  unint64_t v10 = *(void *)(v9 + 24);
  unint64_t v12 = *(void *)(v9 + 32);
  int v13 = *(unsigned __int8 *)(v9 + 40);
  if ((~v12 & 0x3000000000000000) != 0 || v13 != 255)
  {
    char v15 = v13 & 1;
    switch((v12 >> 60) & 3 | (4 * (v13 & 1u)))
    {
      case 1uLL:
        sub_1C8D281F0(*(double *)&v11);
        return;
      case 2uLL:
        sub_1C8CC55A4(v11, v10, v12, v15);
        sub_1C8D288BC(v11, v10);
        goto LABEL_22;
      case 3uLL:
        if (v11)
        {
          uint64_t v16 = "true";
LABEL_24:
          uint64_t v17 = 4;
        }
        else
        {
          uint64_t v16 = "false";
          uint64_t v17 = 5;
        }
        sub_1C8CA6060((uint64_t)v16, v17, (unsigned __int8 *)0x3000000000000000);
        return;
      case 4uLL:
        sub_1C8CC55A4(v11, v10, v12, v15);
        if (v8) {
          __int16 v18 = 256;
        }
        else {
          __int16 v18 = 0;
        }
        uint64_t v19 = sub_1C8D61070(v18 | (unsigned __int16)v7, v11, v10, v12, (uint64_t)&type metadata for Google_Protobuf_Struct, (uint64_t)&off_1F2351A10, (void (*)(__int16 *))sub_1C8CCCEE0);
        if (v3) {
          goto LABEL_22;
        }
        uint64_t v21 = v19;
        unint64_t v7 = v20;
        sub_1C8D88330();
        uint64_t v22 = sub_1C8D88300();
        if (v23) {
          goto LABEL_21;
        }
        __break(1u);
LABEL_16:
        sub_1C8CC55A4(v11, v10, v12, v15);
        if (v8) {
          __int16 v24 = 256;
        }
        else {
          __int16 v24 = 0;
        }
        uint64_t v25 = sub_1C8D61070(v24 | (unsigned __int16)v7, v11, v10, v12 & 0xCFFFFFFFFFFFFFFFLL, (uint64_t)&type metadata for Google_Protobuf_ListValue, (uint64_t)&off_1F2351260, (void (*)(__int16 *))sub_1C8CC4740);
        if (!v3)
        {
          uint64_t v21 = v25;
          unint64_t v7 = v26;
          sub_1C8D88330();
          uint64_t v22 = sub_1C8D88300();
          if (!v23)
          {
            __break(1u);
            JUMPOUT(0x1C8D60808);
          }
LABEL_21:
          uint64_t v27 = v22;
          unint64_t v28 = v23;
          sub_1C8CA3D5C(v21, v7);
          sub_1C8CA69C8(v27, v28);
        }
LABEL_22:
        sub_1C8CC5640(v11, v10, v12, v13);
        break;
      case 5uLL:
        goto LABEL_16;
      default:
        uint64_t v16 = "null";
        goto LABEL_24;
    }
  }
  else
  {
    sub_1C8CC552C();
    swift_allocError();
    *unint64_t v14 = 5;
    swift_willThrow();
  }
}

void sub_1C8D60820(uint64_t *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1C8CAD1C0();
  if (v2) {
    return;
  }
  uint64_t v7 = v5;
  uint64_t v8 = v6;
  if ((v5 != 110 || v6 != 0xE100000000000000) && (sub_1C8D887C0() & 1) == 0)
  {
    if (v7 == 91 && v8 == 0xE100000000000000 || (sub_1C8D887C0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v64 = MEMORY[0x1E4FBC860];
      sub_1C8CC4D9C(a1);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        uint64_t v21 = *(void *)(v3 + 16);
        type metadata accessor for Google_Protobuf_Value._StorageClass();
        uint64_t v22 = swift_allocObject();
        uint64_t v23 = *(void *)(v21 + 16);
        uint64_t v24 = *(void *)(v21 + 24);
        unint64_t v25 = *(void *)(v21 + 32);
        unsigned __int8 v26 = *(unsigned char *)(v21 + 40);
        *(void *)(v22 + 16) = v23;
        *(void *)(v22 + 24) = v24;
        *(void *)(v22 + 32) = v25;
        *(unsigned char *)(v22 + 40) = v26;
        sub_1C8CC5580(v23, v24, v25, v26);
        sub_1C8CC5640(0, 0, 0x3000000000000000uLL, 0xFFu);
        *(void *)(v3 + 16) = v22;
        swift_release();
      }
      uint64_t v27 = *(void *)(v3 + 16);
      uint64_t v28 = *(void *)(v27 + 16);
      uint64_t v29 = *(void *)(v27 + 24);
      unint64_t v30 = *(void *)(v27 + 32);
      *(void *)(v27 + 16) = v64;
      *(void *)(v27 + 24) = 0;
      *(void *)(v27 + 32) = 0xD000000000000000;
LABEL_17:
      unsigned __int8 v31 = *(unsigned char *)(v27 + 40);
      *(unsigned char *)(v27 + 40) = 1;
      sub_1C8CC5640(v28, v29, v30, v31);
      return;
    }
    if (v7 == 123 && v8 == 0xE100000000000000 || (sub_1C8D887C0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      unint64_t v65 = sub_1C8D845B8(MEMORY[0x1E4FBC860]);
      sub_1C8CCD3C0(a1);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        uint64_t v32 = *(void *)(v3 + 16);
        type metadata accessor for Google_Protobuf_Value._StorageClass();
        uint64_t v33 = swift_allocObject();
        uint64_t v34 = *(void *)(v32 + 16);
        uint64_t v35 = *(void *)(v32 + 24);
        unint64_t v36 = *(void *)(v32 + 32);
        unsigned __int8 v37 = *(unsigned char *)(v32 + 40);
        *(void *)(v33 + 16) = v34;
        *(void *)(v33 + 24) = v35;
        *(void *)(v33 + 32) = v36;
        *(unsigned char *)(v33 + 40) = v37;
        sub_1C8CC5580(v34, v35, v36, v37);
        sub_1C8CC5640(0, 0, 0x3000000000000000uLL, 0xFFu);
        *(void *)(v3 + 16) = v33;
        swift_release();
      }
      uint64_t v27 = *(void *)(v3 + 16);
      uint64_t v28 = *(void *)(v27 + 16);
      uint64_t v29 = *(void *)(v27 + 24);
      unint64_t v30 = *(void *)(v27 + 32);
      *(void *)(v27 + 16) = v65;
      *(void *)(v27 + 24) = 0;
      *(void *)(v27 + 32) = 0xC000000000000000;
      goto LABEL_17;
    }
    if (v7 == 116 && v8 == 0xE100000000000000
      || (sub_1C8D887C0() & 1) != 0
      || v7 == 102 && v8 == 0xE100000000000000
      || (sub_1C8D887C0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v38 = sub_1C8CAF37C() & 1;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        uint64_t v39 = *(void *)(v3 + 16);
        type metadata accessor for Google_Protobuf_Value._StorageClass();
        uint64_t v40 = swift_allocObject();
        uint64_t v41 = *(void *)(v39 + 16);
        uint64_t v42 = *(void *)(v39 + 24);
        unint64_t v43 = *(void *)(v39 + 32);
        unsigned __int8 v44 = *(unsigned char *)(v39 + 40);
        *(void *)(v40 + 16) = v41;
        *(void *)(v40 + 24) = v42;
        *(void *)(v40 + 32) = v43;
        *(unsigned char *)(v40 + 40) = v44;
        sub_1C8CC5580(v41, v42, v43, v44);
        sub_1C8CC5640(0, 0, 0x3000000000000000uLL, 0xFFu);
        *(void *)(v3 + 16) = v40;
        swift_release();
      }
      uint64_t v15 = *(void *)(v3 + 16);
      uint64_t v16 = *(void *)(v15 + 16);
      uint64_t v17 = *(void *)(v15 + 24);
      unint64_t v18 = *(void *)(v15 + 32);
      *(void *)(v15 + 16) = v38;
      long long v45 = xmmword_1C8D90C10;
    }
    else
    {
      if (v7 == 34 && v8 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_39:
        uint64_t v47 = sub_1C8CADB68();
        uint64_t v49 = v48;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          uint64_t v50 = *(void *)(v3 + 16);
          type metadata accessor for Google_Protobuf_Value._StorageClass();
          uint64_t v51 = swift_allocObject();
          uint64_t v52 = *(void *)(v50 + 16);
          uint64_t v53 = *(void *)(v50 + 24);
          unint64_t v54 = *(void *)(v50 + 32);
          unsigned __int8 v55 = *(unsigned char *)(v50 + 40);
          *(void *)(v51 + 16) = v52;
          *(void *)(v51 + 24) = v53;
          *(void *)(v51 + 32) = v54;
          *(unsigned char *)(v51 + 40) = v55;
          sub_1C8CC5580(v52, v53, v54, v55);
          sub_1C8CC5640(0, 0, 0x3000000000000000uLL, 0xFFu);
          *(void *)(v3 + 16) = v51;
          swift_release();
        }
        uint64_t v15 = *(void *)(v3 + 16);
        uint64_t v16 = *(void *)(v15 + 16);
        uint64_t v17 = *(void *)(v15 + 24);
        unint64_t v18 = *(void *)(v15 + 32);
        *(void *)(v15 + 16) = v47;
        *(void *)(v15 + 24) = v49;
        *(void *)(v15 + 32) = 0x2000000000000000;
        goto LABEL_9;
      }
      char v46 = sub_1C8D887C0();
      swift_bridgeObjectRelease();
      if (v46) {
        goto LABEL_39;
      }
      sub_1C8CAEA1C();
      uint64_t v57 = v56;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        uint64_t v58 = *(void *)(v3 + 16);
        type metadata accessor for Google_Protobuf_Value._StorageClass();
        uint64_t v59 = swift_allocObject();
        uint64_t v60 = *(void *)(v58 + 16);
        uint64_t v61 = *(void *)(v58 + 24);
        unint64_t v62 = *(void *)(v58 + 32);
        unsigned __int8 v63 = *(unsigned char *)(v58 + 40);
        *(void *)(v59 + 16) = v60;
        *(void *)(v59 + 24) = v61;
        *(void *)(v59 + 32) = v62;
        *(unsigned char *)(v59 + 40) = v63;
        sub_1C8CC5580(v60, v61, v62, v63);
        sub_1C8CC5640(0, 0, 0x3000000000000000uLL, 0xFFu);
        *(void *)(v3 + 16) = v59;
        swift_release();
      }
      uint64_t v15 = *(void *)(v3 + 16);
      uint64_t v16 = *(void *)(v15 + 16);
      uint64_t v17 = *(void *)(v15 + 24);
      unint64_t v18 = *(void *)(v15 + 32);
      *(void *)(v15 + 16) = v57;
      long long v45 = xmmword_1C8D90C00;
    }
    *(_OWORD *)(v15 + 24) = v45;
LABEL_9:
    unsigned __int8 v19 = *(unsigned char *)(v15 + 40);
    *(unsigned char *)(v15 + 40) = 0;
    sub_1C8CC5640(v16, v17, v18, v19);
    return;
  }
  swift_bridgeObjectRelease();
  if (sub_1C8CAF30C())
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = *(void *)(v3 + 16);
      type metadata accessor for Google_Protobuf_Value._StorageClass();
      uint64_t v10 = swift_allocObject();
      uint64_t v11 = *(void *)(v9 + 16);
      uint64_t v12 = *(void *)(v9 + 24);
      unint64_t v13 = *(void *)(v9 + 32);
      unsigned __int8 v14 = *(unsigned char *)(v9 + 40);
      *(void *)(v10 + 16) = v11;
      *(void *)(v10 + 24) = v12;
      *(void *)(v10 + 32) = v13;
      *(unsigned char *)(v10 + 40) = v14;
      sub_1C8CC5580(v11, v12, v13, v14);
      sub_1C8CC5640(0, 0, 0x3000000000000000uLL, 0xFFu);
      *(void *)(v3 + 16) = v10;
      swift_release();
    }
    uint64_t v15 = *(void *)(v3 + 16);
    uint64_t v16 = *(void *)(v15 + 16);
    uint64_t v17 = *(void *)(v15 + 24);
    unint64_t v18 = *(void *)(v15 + 32);
    *(_OWORD *)(v15 + 16) = xmmword_1C8D8AD40;
    *(void *)(v15 + 32) = 0;
    goto LABEL_9;
  }
  sub_1C8CAC5B0();
  swift_allocError();
  *unint64_t v20 = 0;
  v20[1] = 0;
  swift_willThrow();
}

uint64_t sub_1C8D60E48(__int16 a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_1C8D88340();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10, v12);
  unsigned __int8 v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28[3] = &type metadata for Google_Protobuf_Value;
  v28[4] = &off_1F23573E0;
  v28[0] = a2;
  v28[1] = a3;
  v28[2] = a4;
  uint64_t v15 = __swift_project_boxed_opaque_existential_1(v28, (uint64_t)&type metadata for Google_Protobuf_Value);
  uint64_t v16 = v15[2];
  __int16 v27 = 256;
  long long v24 = *(_OWORD *)v15;
  uint64_t v25 = v16;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  __int16 v23 = a1 & 0x101;
  sub_1C8CA3CF8(a2, a3);
  swift_retain();
  sub_1C8D60530((uint64_t)&v26, (unsigned __int8 *)&v23);
  if (v4)
  {
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    return v5;
  }
  *(void *)&long long v24 = v26;
  swift_bridgeObjectRetain();
  sub_1C8D88330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
  sub_1C8CA4790();
  sub_1C8D88310();
  uint64_t v18 = v17;
  uint64_t result = swift_bridgeObjectRelease();
  if (v18)
  {
    swift_bridgeObjectRelease();
    sub_1C8D88330();
    uint64_t v5 = sub_1C8D882F0();
    unint64_t v21 = v20;
    swift_bridgeObjectRelease();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    if (v21 >> 60 != 15)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
      return v5;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C8D61070(__int16 a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(__int16 *))
{
  uint64_t v15 = sub_1C8D88340();
  uint64_t v23 = *(void *)(v15 - 8);
  uint64_t v24 = v15;
  MEMORY[0x1F4188790](v15, v16);
  uint64_t v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  void v25[3] = a5;
  v25[4] = a6;
  v25[0] = a2;
  v25[1] = a3;
  char v25[2] = a4;
  __swift_project_boxed_opaque_existential_1(v25, a5);
  __int16 v26 = a1 & 0x101;
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(a3, a4);
  a7(&v26);
  if (!v7
    && (sub_1C8D88330(),
        a7 = (void (*)(__int16 *))sub_1C8D882F0(),
        unint64_t v20 = v19,
        swift_bridgeObjectRelease(),
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v18, v24),
        v20 >> 60 == 15))
  {
    __break(1u);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    return (uint64_t)a7;
  }
  return result;
}

double Google_Protobuf_Value.init(integerLiteral:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for Google_Protobuf_Value._StorageClass();
  uint64_t inited = swift_initStaticObject();
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    uint64_t v5 = *(void *)(inited + 16);
    uint64_t v6 = *(void *)(inited + 24);
    unint64_t v7 = *(void *)(inited + 32);
    unsigned __int8 v8 = *(unsigned char *)(inited + 40);
  }
  else
  {
    uint64_t v9 = swift_allocObject();
    uint64_t v5 = *(void *)(inited + 16);
    uint64_t v6 = *(void *)(inited + 24);
    unint64_t v7 = *(void *)(inited + 32);
    unsigned __int8 v8 = *(unsigned char *)(inited + 40);
    *(void *)(v9 + 16) = v5;
    *(void *)(v9 + 24) = v6;
    *(void *)(v9 + 32) = v7;
    *(unsigned char *)(v9 + 40) = v8;
    sub_1C8CC5580(v5, v6, v7, v8);
    sub_1C8CC5640(0, 0, 0x3000000000000000uLL, 0xFFu);
    swift_release();
    uint64_t inited = v9;
  }
  *(double *)(inited + 16) = (double)a1;
  *(_OWORD *)(inited + 24) = xmmword_1C8D90C00;
  *(unsigned char *)(inited + 40) = 0;
  sub_1C8CC5640(v5, v6, v7, v8);
  double result = 0.0;
  *(_OWORD *)a2 = xmmword_1C8D8AD80;
  *(void *)(a2 + 16) = inited;
  return result;
}

double sub_1C8D61328@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return Google_Protobuf_Value.init(integerLiteral:)(*a1, a2);
}

uint64_t sub_1C8D61334(double *a1)
{
  return Google_Protobuf_Value.init(numberValue:)(*a1);
}

uint64_t sub_1C8D61340(unsigned __int8 *a1)
{
  return Google_Protobuf_Value.init(BOOLValue:)(*a1);
}

uint64_t sub_1C8D61354(void *a1)
{
  return Google_Protobuf_Value.init(stringValue:)(*a1, a1[1]);
}

double Google_Protobuf_Value.init(nilLiteral:)@<D0>(uint64_t a1@<X8>)
{
  type metadata accessor for Google_Protobuf_Value._StorageClass();
  uint64_t inited = swift_initStaticObject();
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    uint64_t v3 = *(void *)(inited + 16);
    uint64_t v4 = *(void *)(inited + 24);
    unint64_t v5 = *(void *)(inited + 32);
    unsigned __int8 v6 = *(unsigned char *)(inited + 40);
  }
  else
  {
    uint64_t v7 = swift_allocObject();
    uint64_t v3 = *(void *)(inited + 16);
    uint64_t v4 = *(void *)(inited + 24);
    unint64_t v5 = *(void *)(inited + 32);
    unsigned __int8 v6 = *(unsigned char *)(inited + 40);
    *(void *)(v7 + 16) = v3;
    *(void *)(v7 + 24) = v4;
    *(void *)(v7 + 32) = v5;
    *(unsigned char *)(v7 + 40) = v6;
    sub_1C8CC5580(v3, v4, v5, v6);
    sub_1C8CC5640(0, 0, 0x3000000000000000uLL, 0xFFu);
    swift_release();
    uint64_t inited = v7;
  }
  *(_OWORD *)(inited + 16) = xmmword_1C8D8AD40;
  *(void *)(inited + 32) = 0;
  *(unsigned char *)(inited + 40) = 0;
  sub_1C8CC5640(v3, v4, v5, v6);
  double result = 0.0;
  *(_OWORD *)a1 = xmmword_1C8D8AD80;
  *(void *)(a1 + 16) = inited;
  return result;
}

uint64_t sub_1C8D61468(unsigned char *a1)
{
  uint64_t v4 = sub_1C8D88340();
  MEMORY[0x1F4188790](v4 - 8, v5);
  uint64_t v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 2];
  LOBYTE(v6) = *a1;
  unsigned __int8 v8 = a1[1];
  uint64_t v9 = *((void *)v1 + 2);
  uint64_t v17 = MEMORY[0x1E4FBC860];
  __int16 v18 = 256;
  long long v15 = *v1;
  uint64_t v16 = v9;
  v14[0] = v6;
  v14[1] = v8;
  sub_1C8D60530((uint64_t)&v17, v14);
  if (v2) {
    goto LABEL_3;
  }
  *(void *)&long long v15 = v17;
  swift_bridgeObjectRetain();
  sub_1C8D88330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
  sub_1C8CA4790();
  uint64_t v7 = (unsigned __int8 *)sub_1C8D88310();
  uint64_t v11 = v10;
  uint64_t result = swift_bridgeObjectRelease();
  if (v11)
  {
LABEL_3:
    swift_bridgeObjectRelease();
    return (uint64_t)v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_1C8D615A8@<D0>(uint64_t a1@<X8>)
{
  type metadata accessor for Google_Protobuf_Value._StorageClass();
  uint64_t inited = swift_initStaticObject();
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    uint64_t v3 = *(void *)(inited + 16);
    uint64_t v4 = *(void *)(inited + 24);
    unint64_t v5 = *(void *)(inited + 32);
    unsigned __int8 v6 = *(unsigned char *)(inited + 40);
  }
  else
  {
    uint64_t v7 = swift_allocObject();
    uint64_t v3 = *(void *)(inited + 16);
    uint64_t v4 = *(void *)(inited + 24);
    unint64_t v5 = *(void *)(inited + 32);
    unsigned __int8 v6 = *(unsigned char *)(inited + 40);
    *(void *)(v7 + 16) = v3;
    *(void *)(v7 + 24) = v4;
    *(void *)(v7 + 32) = v5;
    *(unsigned char *)(v7 + 40) = v6;
    sub_1C8CC5580(v3, v4, v5, v6);
    sub_1C8CC5640(0, 0, 0x3000000000000000uLL, 0xFFu);
    swift_release();
    uint64_t inited = v7;
  }
  *(_OWORD *)(inited + 16) = xmmword_1C8D8AD40;
  *(void *)(inited + 32) = 0;
  *(unsigned char *)(inited + 40) = 0;
  sub_1C8CC5640(v3, v4, v5, v6);
  double result = 0.0;
  *(_OWORD *)a1 = xmmword_1C8D8AD80;
  *(void *)(a1 + 16) = inited;
  return result;
}

uint64_t sub_1C8D616AC(unsigned char *a1)
{
  return sub_1C8D61468(a1);
}

void sub_1C8D616C4(uint64_t *a1)
{
}

double sub_1C8D616DC@<D0>(uint64_t a1@<X8>)
{
  return sub_1C8D615A8(a1);
}

double _s20SiriOntologyProtobuf07Google_C6_ValueV12floatLiteralACSd_tcfC_0@<D0>(uint64_t a1@<X8>, double a2@<D0>)
{
  type metadata accessor for Google_Protobuf_Value._StorageClass();
  uint64_t inited = swift_initStaticObject();
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    uint64_t v5 = *(void *)(inited + 16);
    uint64_t v6 = *(void *)(inited + 24);
    unint64_t v7 = *(void *)(inited + 32);
    unsigned __int8 v8 = *(unsigned char *)(inited + 40);
  }
  else
  {
    uint64_t v9 = swift_allocObject();
    uint64_t v5 = *(void *)(inited + 16);
    uint64_t v6 = *(void *)(inited + 24);
    unint64_t v7 = *(void *)(inited + 32);
    unsigned __int8 v8 = *(unsigned char *)(inited + 40);
    *(void *)(v9 + 16) = v5;
    *(void *)(v9 + 24) = v6;
    *(void *)(v9 + 32) = v7;
    *(unsigned char *)(v9 + 40) = v8;
    sub_1C8CC5580(v5, v6, v7, v8);
    sub_1C8CC5640(0, 0, 0x3000000000000000uLL, 0xFFu);
    swift_release();
    uint64_t inited = v9;
  }
  *(double *)(inited + 16) = a2;
  *(_OWORD *)(inited + 24) = xmmword_1C8D90C00;
  *(unsigned char *)(inited + 40) = 0;
  sub_1C8CC5640(v5, v6, v7, v8);
  double result = 0.0;
  *(_OWORD *)a1 = xmmword_1C8D8AD80;
  *(void *)(a1 + 16) = inited;
  return result;
}

double _s20SiriOntologyProtobuf07Google_C6_ValueV13stringLiteralACSS_tcfC_0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  type metadata accessor for Google_Protobuf_Value._StorageClass();
  uint64_t inited = swift_initStaticObject();
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    uint64_t v7 = *(void *)(inited + 16);
    uint64_t v8 = *(void *)(inited + 24);
    unint64_t v9 = *(void *)(inited + 32);
    unsigned __int8 v10 = *(unsigned char *)(inited + 40);
  }
  else
  {
    uint64_t v11 = swift_allocObject();
    uint64_t v7 = *(void *)(inited + 16);
    uint64_t v8 = *(void *)(inited + 24);
    unint64_t v9 = *(void *)(inited + 32);
    unsigned __int8 v10 = *(unsigned char *)(inited + 40);
    *(void *)(v11 + 16) = v7;
    *(void *)(v11 + 24) = v8;
    *(void *)(v11 + 32) = v9;
    *(unsigned char *)(v11 + 40) = v10;
    sub_1C8CC5580(v7, v8, v9, v10);
    sub_1C8CC5640(0, 0, 0x3000000000000000uLL, 0xFFu);
    swift_release();
    uint64_t inited = v11;
  }
  *(void *)(inited + 16) = a1;
  *(void *)(inited + 24) = a2;
  *(void *)(inited + 32) = 0x2000000000000000;
  *(unsigned char *)(inited + 40) = 0;
  sub_1C8CC5640(v7, v8, v9, v10);
  double result = 0.0;
  *(_OWORD *)a3 = xmmword_1C8D8AD80;
  *(void *)(a3 + 16) = inited;
  return result;
}

double _s20SiriOntologyProtobuf07Google_C6_ValueV14BOOLeanLiteralACSb_tcfC_0@<D0>(char a1@<W0>, uint64_t a2@<X8>)
{
  type metadata accessor for Google_Protobuf_Value._StorageClass();
  uint64_t inited = swift_initStaticObject();
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    uint64_t v5 = *(void *)(inited + 16);
    uint64_t v6 = *(void *)(inited + 24);
    unint64_t v7 = *(void *)(inited + 32);
    unsigned __int8 v8 = *(unsigned char *)(inited + 40);
  }
  else
  {
    uint64_t v9 = swift_allocObject();
    uint64_t v5 = *(void *)(inited + 16);
    uint64_t v6 = *(void *)(inited + 24);
    unint64_t v7 = *(void *)(inited + 32);
    unsigned __int8 v8 = *(unsigned char *)(inited + 40);
    *(void *)(v9 + 16) = v5;
    *(void *)(v9 + 24) = v6;
    *(void *)(v9 + 32) = v7;
    *(unsigned char *)(v9 + 40) = v8;
    sub_1C8CC5580(v5, v6, v7, v8);
    sub_1C8CC5640(0, 0, 0x3000000000000000uLL, 0xFFu);
    swift_release();
    uint64_t inited = v9;
  }
  *(void *)(inited + 16) = a1 & 1;
  *(_OWORD *)(inited + 24) = xmmword_1C8D90C10;
  *(unsigned char *)(inited + 40) = 0;
  sub_1C8CC5640(v5, v6, v7, v8);
  double result = 0.0;
  *(_OWORD *)a2 = xmmword_1C8D8AD80;
  *(void *)(a2 + 16) = inited;
  return result;
}

double Google_Protobuf_Value.init(structValue:)@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  type metadata accessor for Google_Protobuf_Value._StorageClass();
  uint64_t inited = swift_initStaticObject();
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    uint64_t v7 = *(void *)(inited + 16);
    uint64_t v8 = *(void *)(inited + 24);
    unint64_t v9 = *(void *)(inited + 32);
    unsigned __int8 v10 = *(unsigned char *)(inited + 40);
  }
  else
  {
    uint64_t v11 = swift_allocObject();
    uint64_t v7 = *(void *)(inited + 16);
    uint64_t v8 = *(void *)(inited + 24);
    unint64_t v9 = *(void *)(inited + 32);
    unsigned __int8 v10 = *(unsigned char *)(inited + 40);
    *(void *)(v11 + 16) = v7;
    *(void *)(v11 + 24) = v8;
    *(void *)(v11 + 32) = v9;
    *(unsigned char *)(v11 + 40) = v10;
    sub_1C8CC5580(v7, v8, v9, v10);
    sub_1C8CC5640(0, 0, 0x3000000000000000uLL, 0xFFu);
    swift_release();
    uint64_t inited = v11;
  }
  *(void *)(inited + 16) = v3;
  *(void *)(inited + 24) = v4;
  *(void *)(inited + 32) = v5;
  *(unsigned char *)(inited + 40) = 1;
  sub_1C8CC5640(v7, v8, v9, v10);
  double result = 0.0;
  *(_OWORD *)a2 = xmmword_1C8D8AD80;
  *(void *)(a2 + 16) = inited;
  return result;
}

double Google_Protobuf_Value.init(listValue:)@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  type metadata accessor for Google_Protobuf_Value._StorageClass();
  uint64_t inited = swift_initStaticObject();
  if (swift_isUniquelyReferenced_nonNull_native())
  {
    uint64_t v7 = *(void *)(inited + 16);
    uint64_t v8 = *(void *)(inited + 24);
    unint64_t v9 = *(void *)(inited + 32);
    unsigned __int8 v10 = *(unsigned char *)(inited + 40);
  }
  else
  {
    uint64_t v11 = swift_allocObject();
    uint64_t v7 = *(void *)(inited + 16);
    uint64_t v8 = *(void *)(inited + 24);
    unint64_t v9 = *(void *)(inited + 32);
    unsigned __int8 v10 = *(unsigned char *)(inited + 40);
    *(void *)(v11 + 16) = v7;
    *(void *)(v11 + 24) = v8;
    *(void *)(v11 + 32) = v9;
    *(unsigned char *)(v11 + 40) = v10;
    sub_1C8CC5580(v7, v8, v9, v10);
    sub_1C8CC5640(0, 0, 0x3000000000000000uLL, 0xFFu);
    swift_release();
    uint64_t inited = v11;
  }
  *(void *)(inited + 16) = v3;
  *(void *)(inited + 24) = v4;
  *(void *)(inited + 32) = v5 | 0x1000000000000000;
  *(unsigned char *)(inited + 40) = 1;
  sub_1C8CC5640(v7, v8, v9, v10);
  double result = 0.0;
  *(_OWORD *)a2 = xmmword_1C8D8AD80;
  *(void *)(a2 + 16) = inited;
  return result;
}

uint64_t sub_1C8D61C60()
{
  return MEMORY[0x1E4FBC238];
}

uint64_t sub_1C8D61C6C()
{
  return MEMORY[0x1E4FBB3C0];
}

unint64_t sub_1C8D61C7C()
{
  unint64_t result = qword_1EA5677D0;
  if (!qword_1EA5677D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5677D0);
  }
  return result;
}

uint64_t sub_1C8D61CD0()
{
  return MEMORY[0x1E4FBB220];
}

unint64_t sub_1C8D61CE0()
{
  unint64_t result = qword_1EA5677D8;
  if (!qword_1EA5677D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5677D8);
  }
  return result;
}

uint64_t sub_1C8D61D34()
{
  return MEMORY[0x1E4FBB230];
}

uint64_t sub_1C8D61D40()
{
  return MEMORY[0x1E4FBB228];
}

void SimpleExtensionMap.init()(void *a1@<X8>)
{
  *a1 = MEMORY[0x1E4FBC868];
}

uint64_t SimpleExtensionMap.init(arrayLiteral:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = MEMORY[0x1E4FBC868];
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = a1 + 32;
    do
    {
      sub_1C8CA425C(v3, (uint64_t)v5);
      SimpleExtensionMap.insert(_:)(v5);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
      v3 += 40;
      --v2;
    }
    while (v2);
    return swift_bridgeObjectRelease();
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

Swift::Void __swiftcall SimpleExtensionMap.insert(contentsOf:)(Swift::OpaquePointer contentsOf)
{
  uint64_t v1 = *((void *)contentsOf._rawValue + 2);
  if (v1)
  {
    uint64_t v2 = (char *)contentsOf._rawValue + 32;
    swift_bridgeObjectRetain();
    do
    {
      SimpleExtensionMap.insert(_:)(v2);
      v2 += 5;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
}

uint64_t SimpleExtensionMap.init(_:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v10 = MEMORY[0x1E4FBC868];
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    for (uint64_t i = 0; i != v4; ++i)
    {
      uint64_t v6 = *(void *)(a1 + 8 * i + 32);
      uint64_t v9 = v6;
      SimpleExtensionMap.formUnion(_:)(&v9);
    }
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v8 = v10;
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v8 = MEMORY[0x1E4FBC868];
  }
  *a2 = v8;
  return result;
}

uint64_t SimpleExtensionMap.formUnion(_:)(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *a1;
  uint64_t v44 = v3 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(v3 + 64);
  int64_t v45 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v46 = v3;
  swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v7 << 6);
      goto LABEL_19;
    }
    BOOL v11 = __OFADD__(v7++, 1);
    if (v11) {
      goto LABEL_50;
    }
    if (v7 >= v45) {
      break;
    }
    unint64_t v12 = *(void *)(v44 + 8 * v7);
    if (!v12)
    {
      int64_t v13 = v7 + 1;
      if (v7 + 1 >= v45) {
        break;
      }
      unint64_t v12 = *(void *)(v44 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v7 + 2;
        if (v7 + 2 >= v45) {
          break;
        }
        unint64_t v12 = *(void *)(v44 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v7 + 3;
          if (v7 + 3 >= v45) {
            break;
          }
          unint64_t v12 = *(void *)(v44 + 8 * v13);
          if (!v12)
          {
            while (1)
            {
              int64_t v7 = v13 + 1;
              if (__OFADD__(v13, 1)) {
                goto LABEL_53;
              }
              if (v7 >= v45) {
                goto LABEL_46;
              }
              unint64_t v12 = *(void *)(v44 + 8 * v7);
              ++v13;
              if (v12) {
                goto LABEL_18;
              }
            }
          }
        }
      }
      int64_t v7 = v13;
    }
LABEL_18:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v7 << 6);
LABEL_19:
    uint64_t v14 = 8 * v10;
    uint64_t v15 = *(void *)(*(void *)(v46 + 48) + v14);
    uint64_t v16 = *(void **)(*(void *)(v46 + 56) + v14);
    if (*(void *)(*v2 + 16) && (sub_1C8CA5D14(v15), (v17 & 1) != 0))
    {
      swift_bridgeObjectRetain_n();
      uint64_t v18 = swift_bridgeObjectRetain();
      uint64_t v19 = sub_1C8D62F68(v18, (uint64_t)v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C8CA68C0(v16);
      uint64_t v16 = (void *)v19;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v21 = (void *)*v2;
      uint64_t v47 = (void *)*v2;
      uint64_t *v2 = 0x8000000000000000;
      unint64_t v23 = sub_1C8CA5D14(v15);
      uint64_t v24 = v21[2];
      BOOL v25 = (v22 & 1) == 0;
      uint64_t v26 = v24 + v25;
      if (__OFADD__(v24, v25)) {
        goto LABEL_52;
      }
      char v27 = v22;
      if (v21[3] >= v26)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          unint64_t v30 = v47;
          if (v22) {
            goto LABEL_4;
          }
        }
        else
        {
          sub_1C8D8726C();
          unint64_t v30 = v47;
          if (v27) {
            goto LABEL_4;
          }
        }
      }
      else
      {
        sub_1C8D85C1C(v26, isUniquelyReferenced_nonNull_native);
        unint64_t v28 = sub_1C8CA5D14(v15);
        if ((v27 & 1) != (v29 & 1)) {
          goto LABEL_54;
        }
        unint64_t v23 = v28;
        unint64_t v30 = v47;
        if (v27) {
          goto LABEL_4;
        }
      }
      sub_1C8D868F4(v23, v15, (uint64_t)v16, v30);
    }
    else
    {
      swift_bridgeObjectRetain();
      char v31 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v32 = (void *)*v2;
      uint64_t v48 = (void *)*v2;
      uint64_t *v2 = 0x8000000000000000;
      unint64_t v23 = sub_1C8CA5D14(v15);
      uint64_t v34 = v32[2];
      BOOL v35 = (v33 & 1) == 0;
      uint64_t v36 = v34 + v35;
      if (__OFADD__(v34, v35))
      {
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        uint64_t result = sub_1C8D887E0();
        __break(1u);
        return result;
      }
      char v37 = v33;
      if (v32[3] >= v36)
      {
        if (v31)
        {
          unint64_t v30 = v48;
          if (v33) {
            goto LABEL_4;
          }
        }
        else
        {
          sub_1C8D8726C();
          unint64_t v30 = v48;
          if (v37) {
            goto LABEL_4;
          }
        }
      }
      else
      {
        sub_1C8D85C1C(v36, v31);
        unint64_t v38 = sub_1C8CA5D14(v15);
        if ((v37 & 1) != (v39 & 1)) {
          goto LABEL_54;
        }
        unint64_t v23 = v38;
        unint64_t v30 = v48;
        if (v37)
        {
LABEL_4:
          uint64_t v8 = v30[7];
          swift_bridgeObjectRelease();
          *(void *)(v8 + 8 * v23) = v16;
          goto LABEL_5;
        }
      }
      v30[(v23 >> 6) + 8] |= 1 << v23;
      uint64_t v40 = 8 * v23;
      *(void *)(v30[6] + v40) = v15;
      *(void *)(v30[7] + v40) = v16;
      uint64_t v41 = v30[2];
      BOOL v11 = __OFADD__(v41, 1);
      uint64_t v42 = v41 + 1;
      if (v11) {
        goto LABEL_51;
      }
      v30[2] = v42;
    }
LABEL_5:
    uint64_t *v2 = (uint64_t)v30;
    swift_bridgeObjectRelease();
  }
LABEL_46:
  return swift_release();
}

uint64_t SimpleExtensionMap.subscript.getter@<X0>(uint64_t result@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = *v3;
  if (*(void *)(v5 + 16)
    && (v6 = result, uint64_t result = sub_1C8CA5D14(a2), (v7 & 1) != 0)
    && (uint64_t v8 = *(void *)(*(void *)(v5 + 56) + 8 * result), (v9 = *(void *)(v8 + 16)) != 0))
  {
    uint64_t v10 = v8 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1C8CA425C(v10, (uint64_t)v13);
      uint64_t v11 = v14;
      uint64_t v12 = v15;
      __swift_project_boxed_opaque_existential_1(v13, v14);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v12 + 24))(v11, v12) == v6) {
        break;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
      v10 += 40;
      if (!--v9)
      {
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease();
    sub_1C8CA425C((uint64_t)v13, a3);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  else
  {
LABEL_8:
    *(void *)(a3 + 32) = 0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t SimpleExtensionMap.fieldNumberForProto(messageType:protoFieldName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = *(void *)v4 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(*(void *)v4 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(*(void *)v4 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  int64_t v33 = v11;
  uint64_t v34 = result;
LABEL_5:
  while (v10)
  {
    unint64_t v14 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v15 = v14 | (v13 << 6);
LABEL_21:
    uint64_t v19 = *(void *)(*(void *)(result + 56) + 8 * v15);
    uint64_t v20 = *(void *)(v19 + 16);
    if (v20)
    {
      int64_t v36 = v13;
      uint64_t v21 = v19 + 32;
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_1C8CA425C(v21, (uint64_t)v40);
        uint64_t v22 = v41;
        uint64_t v23 = v42;
        __swift_project_boxed_opaque_existential_1(v40, v41);
        if ((*(uint64_t (**)(uint64_t, uint64_t))(v23 + 16))(v22, v23) == a3 && v24 == a4)
        {
          swift_bridgeObjectRelease();
          sub_1C8CA425C((uint64_t)v40, (uint64_t)v37);
        }
        else
        {
          char v26 = sub_1C8D887C0();
          swift_bridgeObjectRelease();
          sub_1C8CA425C((uint64_t)v40, (uint64_t)v37);
          if ((v26 & 1) == 0)
          {
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
            goto LABEL_24;
          }
        }
        uint64_t v27 = v38;
        uint64_t v28 = v39;
        __swift_project_boxed_opaque_existential_1(v37, v38);
        uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 24))(v27, v28);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
        if (v29 == a1)
        {
          swift_bridgeObjectRelease();
          uint64_t v30 = v41;
          uint64_t v31 = v42;
          __swift_project_boxed_opaque_existential_1(v40, v41);
          uint64_t v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 8))(v30, v31);
          swift_release();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
          return v32;
        }
LABEL_24:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
        v21 += 40;
        if (!--v20)
        {
          swift_bridgeObjectRelease();
          int64_t v11 = v33;
          uint64_t result = v34;
          int64_t v13 = v36;
          goto LABEL_5;
        }
      }
    }
  }
  int64_t v16 = v13 + 1;
  if (__OFADD__(v13, 1))
  {
    __break(1u);
LABEL_37:
    __break(1u);
    return result;
  }
  if (v16 >= v11) {
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v35 + 8 * v16);
  ++v13;
  if (v17) {
    goto LABEL_20;
  }
  int64_t v13 = v16 + 1;
  if (v16 + 1 >= v11) {
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v35 + 8 * v13);
  if (v17) {
    goto LABEL_20;
  }
  int64_t v13 = v16 + 2;
  if (v16 + 2 >= v11) {
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v35 + 8 * v13);
  if (v17)
  {
LABEL_20:
    unint64_t v10 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
    goto LABEL_21;
  }
  int64_t v18 = v16 + 3;
  if (v18 < v11)
  {
    unint64_t v17 = *(void *)(v35 + 8 * v18);
    if (!v17)
    {
      while (1)
      {
        int64_t v13 = v18 + 1;
        if (__OFADD__(v18, 1)) {
          goto LABEL_37;
        }
        if (v13 >= v11) {
          goto LABEL_35;
        }
        unint64_t v17 = *(void *)(v35 + 8 * v13);
        ++v18;
        if (v17) {
          goto LABEL_20;
        }
      }
    }
    int64_t v13 = v18;
    goto LABEL_20;
  }
LABEL_35:
  swift_release();
  return 0;
}

uint64_t SimpleExtensionMap.insert(_:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  uint64_t v7 = v6;
  uint64_t v8 = *v1;
  if (!*(void *)(*v2 + 16) || (unint64_t v9 = sub_1C8CA5D14(v6), (v10 & 1) == 0))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA565EB8);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1C8D8E570;
    sub_1C8CA425C((uint64_t)a1, v24 + 32);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v34 = *v2;
    void *v2 = 0x8000000000000000;
    uint64_t v26 = v24;
    uint64_t v27 = v7;
    goto LABEL_20;
  }
  uint64_t v32 = v7;
  uint64_t v11 = *(void *)(*(void *)(v8 + 56) + 8 * v9);
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  unint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 24);
  swift_bridgeObjectRetain();
  uint64_t v15 = v14(v12, v13);
  int64_t v16 = (void *)MEMORY[0x1E4FBC860];
  char v37 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v17 = *(void *)(v11 + 16);
  if (v17)
  {
    uint64_t v18 = v15;
    uint64_t v31 = v2;
    unint64_t v19 = 0;
    int64_t v16 = (void *)(v11 + 32);
    uint64_t v2 = (void *)MEMORY[0x1E4FBC860];
    while (v19 < *(void *)(v11 + 16))
    {
      sub_1C8CA425C((uint64_t)v16, (uint64_t)&v34);
      uint64_t v20 = v35;
      uint64_t v21 = v36;
      __swift_project_boxed_opaque_existential_1(&v34, v35);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v21 + 24))(v20, v21) == v18)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v34);
      }
      else
      {
        sub_1C8CA4528(&v34, (uint64_t)v33);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1C8CB7614(0, v2[2] + 1, 1);
        }
        uint64_t v2 = v37;
        unint64_t v23 = v37[2];
        unint64_t v22 = v37[3];
        if (v23 >= v22 >> 1)
        {
          sub_1C8CB7614((void *)(v22 > 1), v23 + 1, 1);
          uint64_t v2 = v37;
        }
        v2[2] = v23 + 1;
        sub_1C8CA4528(v33, (uint64_t)&v2[5 * v23 + 4]);
      }
      ++v19;
      v16 += 5;
      if (v17 == v19)
      {
        int64_t v16 = v37;
        uint64_t v2 = v31;
        goto LABEL_16;
      }
    }
    __break(1u);
    goto LABEL_22;
  }
LABEL_16:
  swift_bridgeObjectRelease();
  sub_1C8CA425C((uint64_t)a1, (uint64_t)&v34);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_22:
  }
    int64_t v16 = sub_1C8D5F664(0, v16[2] + 1, 1, v16);
  unint64_t v29 = v16[2];
  unint64_t v28 = v16[3];
  if (v29 >= v28 >> 1) {
    int64_t v16 = sub_1C8D5F664((void *)(v28 > 1), v29 + 1, 1, v16);
  }
  _OWORD v16[2] = v29 + 1;
  sub_1C8CA4528(&v34, (uint64_t)&v16[5 * v29 + 4]);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v34 = *v2;
  void *v2 = 0x8000000000000000;
  uint64_t v26 = (uint64_t)v16;
  uint64_t v27 = v32;
LABEL_20:
  sub_1C8D86660(v26, v27, isUniquelyReferenced_nonNull_native);
  void *v2 = v34;
  return swift_bridgeObjectRelease();
}

uint64_t SimpleExtensionMap.union(_:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  *a2 = *v2;
  uint64_t v6 = v4;
  swift_bridgeObjectRetain();
  return SimpleExtensionMap.formUnion(_:)(&v6);
}

uint64_t SimpleExtensionMap.debugDescription.getter()
{
  uint64_t v1 = *v0;
  uint64_t v24 = *v0 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(*v0 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(*v0 + 64);
  int64_t v25 = (unint64_t)(v2 + 63) >> 6;
  uint64_t v26 = v1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v6 = 0;
  uint64_t v7 = (char *)MEMORY[0x1E4FBC860];
  while (v4)
  {
    unint64_t v8 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    unint64_t v9 = v8 | (v6 << 6);
LABEL_20:
    uint64_t v13 = *(void *)(*(void *)(v26 + 56) + 8 * v9);
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      int64_t v27 = v6;
      uint64_t v15 = v13 + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_1C8CA425C(v15, (uint64_t)&v30);
        uint64_t v16 = v32;
        uint64_t v17 = v33;
        __swift_project_boxed_opaque_existential_1(&v30, v32);
        uint64_t v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 16))(v16, v17);
        uint64_t v29 = v18;
        sub_1C8D88400();
        uint64_t v19 = v32;
        uint64_t v20 = v33;
        __swift_project_boxed_opaque_existential_1(&v30, v32);
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v20);
        sub_1C8D887A0();
        sub_1C8D88400();
        swift_bridgeObjectRelease();
        sub_1C8D88400();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v7 = sub_1C8D5ED38(0, *((void *)v7 + 2) + 1, 1, v7);
        }
        unint64_t v22 = *((void *)v7 + 2);
        unint64_t v21 = *((void *)v7 + 3);
        if (v22 >= v21 >> 1) {
          uint64_t v7 = sub_1C8D5ED38((char *)(v21 > 1), v22 + 1, 1, v7);
        }
        *((void *)v7 + 2) = v22 + 1;
        unint64_t v23 = &v7[16 * v22];
        *((void *)v23 + 4) = v28;
        *((void *)v23 + 5) = v29;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
        v15 += 40;
        --v14;
      }
      while (v14);
      uint64_t result = swift_bridgeObjectRelease();
      int64_t v6 = v27;
    }
  }
  int64_t v10 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v10 >= v25) {
    goto LABEL_28;
  }
  unint64_t v11 = *(void *)(v24 + 8 * v10);
  ++v6;
  if (v11) {
    goto LABEL_19;
  }
  int64_t v6 = v10 + 1;
  if (v10 + 1 >= v25) {
    goto LABEL_28;
  }
  unint64_t v11 = *(void *)(v24 + 8 * v6);
  if (v11) {
    goto LABEL_19;
  }
  int64_t v6 = v10 + 2;
  if (v10 + 2 >= v25) {
    goto LABEL_28;
  }
  unint64_t v11 = *(void *)(v24 + 8 * v6);
  if (v11)
  {
LABEL_19:
    unint64_t v4 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v6 << 6);
    goto LABEL_20;
  }
  int64_t v12 = v10 + 3;
  if (v12 >= v25)
  {
LABEL_28:
    swift_release();
    unint64_t v30 = (unint64_t)v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA566BF8);
    sub_1C8D13630();
    sub_1C8D882D0();
    swift_bridgeObjectRelease();
    unint64_t v30 = 0;
    unint64_t v31 = 0xE000000000000000;
    sub_1C8D88680();
    swift_bridgeObjectRelease();
    unint64_t v30 = 0xD000000000000013;
    unint64_t v31 = 0x80000001C8D8AA70;
    sub_1C8D88400();
    swift_bridgeObjectRelease();
    sub_1C8D88400();
    return v30;
  }
  unint64_t v11 = *(void *)(v24 + 8 * v12);
  if (v11)
  {
    int64_t v6 = v12;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v6 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v6 >= v25) {
      goto LABEL_28;
    }
    unint64_t v11 = *(void *)(v24 + 8 * v6);
    ++v12;
    if (v11) {
      goto LABEL_19;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C8D62DF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return SimpleExtensionMap.fieldNumberForProto(messageType:protoFieldName:)(a1, a2, a3, a4);
}

uint64_t sub_1C8D62E14(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_1C8D88470();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x1CB772F90](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t sub_1C8D62E90(uint64_t result, uint64_t a2, uint64_t a3, __int16 a4)
{
  if (!a2)
  {
    BOOL v6 = 0;
    a3 = 0;
    goto LABEL_14;
  }
  if (!a3)
  {
    BOOL v6 = 0;
LABEL_14:
    unsigned __int8 v7 = a4;
LABEL_15:
    *(_WORD *)uint64_t result = a4;
    *(unsigned char *)(result + 2) = v7;
    *(unsigned char *)(result + 3) = v6;
    return a3;
  }
  if (a3 < 0) {
    goto LABEL_17;
  }
  uint64_t v4 = 0;
  unsigned __int8 v5 = a4;
  while (1)
  {
    BOOL v6 = v5 == (unsigned __int16)(a4 & 0xFF00) >> 8;
    if (v5 != (unsigned __int16)(a4 & 0xFF00) >> 8) {
      break;
    }
    unsigned __int8 v7 = 0;
LABEL_8:
    *(unsigned char *)(a2 + v4) = v5;
    if (a3 - 1 == v4) {
      goto LABEL_15;
    }
    ++v4;
    BOOL v8 = v5 == (unsigned __int16)(a4 & 0xFF00) >> 8;
    unsigned __int8 v5 = v7;
    if (v8)
    {
      BOOL v6 = 1;
      a3 = v4;
      goto LABEL_15;
    }
  }
  unsigned __int8 v7 = v5 + 1;
  if (((v5 + 1) & 0x100) == 0) {
    goto LABEL_8;
  }
  __break(1u);
LABEL_17:
  __break(1u);
  return result;
}

unsigned char *sub_1C8D62F34(unsigned char *result, __int16 a2)
{
  if ((a2 & 0x100) != 0)
  {
    __break(1u);
  }
  else
  {
    *uint64_t result = a2;
    return nullsub_1;
  }
  return result;
}

uint64_t sub_1C8D62F68(uint64_t a1, uint64_t a2)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v23 = MEMORY[0x1E4FBC860];
  uint64_t v18 = *(void *)(a1 + 16);
  if (v18)
  {
    uint64_t v5 = 0;
    uint64_t v17 = a1 + 32;
    uint64_t v16 = (void *)(a2 + 32);
    uint64_t v6 = MEMORY[0x1E4FBC860];
    do
    {
      sub_1C8CA425C(v17 + 40 * v5, (uint64_t)&v20);
      uint64_t v7 = *(void *)(a2 + 16);
      if (v7)
      {
        swift_bridgeObjectRetain();
        BOOL v8 = v16;
        do
        {
          uint64_t v9 = v21;
          uint64_t v10 = v22;
          __swift_project_boxed_opaque_existential_1(&v20, v21);
          uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10);
          uint64_t v12 = v8[3];
          uint64_t v13 = v8[4];
          __swift_project_boxed_opaque_existential_1(v8, v12);
          if (v11 == (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 24))(v12, v13))
          {
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
            goto LABEL_4;
          }
          v8 += 5;
          --v7;
        }
        while (v7);
        swift_bridgeObjectRelease();
      }
      sub_1C8CA4528(&v20, (uint64_t)v19);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1C8CB7614(0, *(void *)(v6 + 16) + 1, 1);
      }
      uint64_t v6 = v23;
      unint64_t v15 = *(void *)(v23 + 16);
      unint64_t v14 = *(void *)(v23 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1C8CB7614((void *)(v14 > 1), v15 + 1, 1);
        uint64_t v6 = v23;
      }
      *(void *)(v6 + 16) = v15 + 1;
      sub_1C8CA4528(v19, v6 + 40 * v15 + 32);
LABEL_4:
      ++v5;
    }
    while (v5 != v18);
    return v23;
  }
  return result;
}

ValueMetadata *type metadata accessor for SimpleExtensionMap()
{
  return &type metadata for SimpleExtensionMap;
}

unint64_t sub_1C8D63150()
{
  unint64_t result = qword_1EA5677E0;
  if (!qword_1EA5677E0)
  {
    sub_1C8D881F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5677E0);
  }
  return result;
}

uint64_t sub_1C8D631A8(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  swift_beginAccess();
  BOOL v5 = v3 == *(void *)(a1 + 16) && v4 == *(void *)(a1 + 24);
  if (v5 || (char v6 = 0, (sub_1C8D887C0() & 1) != 0))
  {
    uint64_t v7 = v1 + 32;
    swift_beginAccess();
    sub_1C8D3B90C(v7, (uint64_t)v19);
    if (v20 == 1)
    {
      sub_1C8CA4528(v19, (uint64_t)v21);
      swift_beginAccess();
      sub_1C8D3B90C(a1 + 32, (uint64_t)v19);
      if (v20 == 1)
      {
        sub_1C8CA4528(v19, (uint64_t)v18);
        __swift_project_boxed_opaque_existential_1(v21, v22);
        uint64_t DynamicType = swift_getDynamicType();
        __swift_project_boxed_opaque_existential_1(v18, v18[3]);
        if (DynamicType == swift_getDynamicType())
        {
          uint64_t v16 = v22;
          uint64_t v17 = v23;
          __swift_project_boxed_opaque_existential_1(v21, v22);
          char v6 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 88))(v18, v16, v17);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
          return v6 & 1;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      }
      else
      {
        sub_1C8D673E0((uint64_t)v19);
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    }
    else
    {
      sub_1C8D673E0((uint64_t)v19);
    }
    sub_1C8D3B90C(v7, (uint64_t)v19);
    if (!v20)
    {
      long long v9 = v19[0];
      swift_beginAccess();
      sub_1C8D3B90C(a1 + 32, (uint64_t)v19);
      if (!v20)
      {
        long long v14 = v19[0];
        char v15 = sub_1C8D01FBC(v9, *((unint64_t *)&v9 + 1), *(uint64_t *)&v19[0], *((unint64_t *)&v19[0] + 1));
        sub_1C8CA3D5C(v9, *((unint64_t *)&v9 + 1));
        sub_1C8CA3D5C(v14, *((unint64_t *)&v14 + 1));
        if (v15)
        {
LABEL_26:
          char v6 = 1;
          return v6 & 1;
        }
LABEL_17:
        sub_1C8D3B90C(v7, (uint64_t)v19);
        if (v20 == 2)
        {
          long long v10 = v19[0];
          swift_beginAccess();
          sub_1C8D3B90C(a1 + 32, (uint64_t)v19);
          if (v20 == 2)
          {
            long long v11 = v19[0];
            char v12 = sub_1C8D01FBC(v10, *((unint64_t *)&v10 + 1), *(uint64_t *)&v19[0], *((unint64_t *)&v19[0] + 1));
            sub_1C8CA3D5C(v10, *((unint64_t *)&v10 + 1));
            sub_1C8CA3D5C(v11, *((unint64_t *)&v11 + 1));
            if (v12) {
              goto LABEL_26;
            }
            goto LABEL_23;
          }
          sub_1C8CA3D5C(v10, *((unint64_t *)&v10 + 1));
        }
        sub_1C8D673E0((uint64_t)v19);
LABEL_23:
        char v6 = 0;
        return v6 & 1;
      }
      sub_1C8CA3D5C(v9, *((unint64_t *)&v9 + 1));
    }
    sub_1C8D673E0((uint64_t)v19);
    goto LABEL_17;
  }
  return v6 & 1;
}

uint64_t sub_1C8D634A0(char **a1)
{
  uint64_t v2 = v1;
  uint64_t v88 = *MEMORY[0x1E4F143B8];
  swift_beginAccess();
  sub_1C8D3B90C(v1 + 32, (uint64_t)&v84);
  if (!v87)
  {
    unint64_t v10 = *((void *)&v84 + 1);
    uint64_t v72 = v84;
    swift_beginAccess();
    uint64_t v12 = *(void *)(v1 + 16);
    long long v11 = *(char **)(v1 + 24);
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1C8D4B9F4(v12, (unint64_t)v11);
    uint64_t v15 = v14;
    v75[0] = 0uLL;
    if (qword_1EA565C70 != -1) {
      swift_once();
    }
    uint64_t v16 = (void *)qword_1EA5676C0;
    uint64_t v17 = (void *)swift_allocObject();
    v17[2] = v75;
    v17[3] = v13;
    _OWORD v17[4] = v15;
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = sub_1C8D4CCE8;
    *(void *)(v18 + 24) = v17;
    *((void *)&v82 + 1) = sub_1C8D677C4;
    uint64_t v83 = v18;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v80 = 1107296256;
    uint64_t v81 = sub_1C8D4C41C;
    *(void *)&long long v82 = &block_descriptor_59;
    uint64_t v19 = _Block_copy(&aBlock);
    char v20 = v16;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    dispatch_sync(v20, v19);

    _Block_release(v19);
    unint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      long long v22 = v75[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v23 = v72;
      if ((void)v22)
      {
        uint64_t v76 = 0;
        memset(v75, 0, sizeof(v75));
        uint64_t v73 = 100;
        char v74 = 0;
        long long v82 = v22;
        uint64_t v24 = __swift_allocate_boxed_opaque_existential_1(&aBlock);
        sub_1C8CA3CF8(v72, v10);
        Message.init(serializedData:extensions:partial:options:)(v72, v10, (uint64_t)v75, 1, &v73, v22, *((uint64_t *)&v22 + 1), (uint64_t)v24);
        uint64_t v55 = *(void *)(v2 + 16);
        unint64_t v56 = *(void *)(v2 + 24);
        swift_bridgeObjectRetain();
        sub_1C8D674CC((uint64_t)a1, (uint64_t)v24, v55, v56, v22, *((uint64_t *)&v22 + 1));
        sub_1C8CA3D5C(v72, v10);
        goto LABEL_4;
      }
      uint64_t v26 = *(void *)(v2 + 16);
      unint64_t v25 = *(void *)(v2 + 24);
      uint64_t v27 = HIBYTE(v25) & 0xF;
      if ((v25 & 0x2000000000000000) == 0) {
        uint64_t v27 = v26 & 0xFFFFFFFFFFFFLL;
      }
      if (!v27) {
        goto LABEL_18;
      }
      swift_bridgeObjectRetain();
      sub_1C8CA5968(1uLL);
      sub_1C8CA6060((uint64_t)": ", 2, v28);
      sub_1C8CA6D2C(v26, v25);
      long long v11 = *a1;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v11;
      if (isUniquelyReferenced_nonNull_native)
      {
LABEL_15:
        unint64_t v31 = *((void *)v11 + 2);
        unint64_t v30 = *((void *)v11 + 3);
        if (v31 >= v30 >> 1)
        {
          long long v11 = sub_1C8D5EB50((char *)(v30 > 1), v31 + 1, 1, v11);
          *a1 = v11;
        }
        *((void *)v11 + 2) = v31 + 1;
        v11[v31 + 32] = 10;
        swift_bridgeObjectRelease();
        *a1 = v11;
LABEL_18:
        switch(v10 >> 62)
        {
          case 1uLL:
            if ((int)v23 != v23 >> 32) {
              goto LABEL_20;
            }
            goto LABEL_41;
          case 2uLL:
            if (*(void *)(v23 + 16) == *(void *)(v23 + 24)) {
              goto LABEL_41;
            }
            goto LABEL_20;
          case 3uLL:
            goto LABEL_41;
          default:
            if ((v10 & 0xFF000000000000) == 0)
            {
LABEL_41:
              uint64_t v68 = v23;
              unint64_t v69 = v10;
              return sub_1C8CA3D5C(v68, v69);
            }
LABEL_20:
            sub_1C8CA5968(2uLL);
            sub_1C8CA6060((uint64_t)": ", 2, v32);
            sub_1C8D5C358(v23, v10);
            uint64_t v33 = *a1;
            char v34 = swift_isUniquelyReferenced_nonNull_native();
            *a1 = v33;
            if ((v34 & 1) == 0)
            {
              uint64_t v33 = sub_1C8D5EB50(0, *((void *)v33 + 2) + 1, 1, v33);
              *a1 = v33;
            }
            unint64_t v36 = *((void *)v33 + 2);
            unint64_t v35 = *((void *)v33 + 3);
            if (v36 >= v35 >> 1)
            {
              uint64_t v33 = sub_1C8D5EB50((char *)(v35 > 1), v36 + 1, 1, v33);
              *a1 = v33;
            }
            *((void *)v33 + 2) = v36 + 1;
            v33[v36 + 32] = 10;
            uint64_t result = sub_1C8CA3D5C(v23, v10);
            *a1 = v33;
            break;
        }
        return result;
      }
LABEL_46:
      long long v11 = sub_1C8D5EB50(0, *((void *)v11 + 2) + 1, 1, v11);
      *a1 = v11;
      goto LABEL_15;
    }
    __break(1u);
    goto LABEL_44;
  }
  if (v87 == 1)
  {
    sub_1C8CA4528(&v84, (uint64_t)&aBlock);
    swift_beginAccess();
    uint64_t v4 = *(void *)(v1 + 16);
    unint64_t v5 = *(void *)(v2 + 24);
    uint64_t v7 = *((void *)&v82 + 1);
    uint64_t v6 = v82;
    BOOL v8 = __swift_project_boxed_opaque_existential_1(&aBlock, v82);
    swift_bridgeObjectRetain();
    sub_1C8D674CC((uint64_t)a1, (uint64_t)v8, v4, v5, v6, v7);
LABEL_4:
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
  }
  unint64_t isEscapingClosureAtFileLocation = *((void *)&v84 + 1);
  uint64_t v71 = v85;
  uint64_t v72 = v84;
  char v70 = v86;
  swift_beginAccess();
  uint64_t v37 = *(void *)(v1 + 16);
  long long v11 = *(char **)(v1 + 24);
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1C8D4B9F4(v37, (unint64_t)v11);
  uint64_t v15 = v38;
  uint64_t v77 = 0;
  unint64_t v78 = 0;
  if (qword_1EA565C70 != -1) {
LABEL_44:
  }
    swift_once();
  uint64_t v39 = (void *)qword_1EA5676C0;
  uint64_t v40 = (void *)swift_allocObject();
  v40[2] = &v77;
  void v40[3] = v18;
  v40[4] = v15;
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = sub_1C8D4CCE8;
  *(void *)(v41 + 24) = v40;
  *((void *)&v82 + 1) = sub_1C8D677C4;
  uint64_t v83 = v41;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v80 = 1107296256;
  uint64_t v81 = sub_1C8D4C41C;
  *(void *)&long long v82 = &block_descriptor_47;
  uint64_t v42 = _Block_copy(&aBlock);
  uint64_t v23 = v83;
  unint64_t v43 = v39;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v43, v42);

  _Block_release(v42);
  unint64_t v10 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v10)
  {
    __break(1u);
    goto LABEL_46;
  }
  uint64_t v44 = v77;
  uint64_t v45 = v78;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (v44)
  {
    uint64_t v77 = v71;
    LOBYTE(v78) = v70;
    sub_1C8D65ABC(v72, isEscapingClosureAtFileLocation, (uint64_t)&v77, v44, v45, &aBlock);
    uint64_t v57 = *(void *)(v2 + 16);
    unint64_t v58 = *(void *)(v2 + 24);
    uint64_t v60 = *((void *)&v82 + 1);
    uint64_t v59 = v82;
    uint64_t v61 = __swift_project_boxed_opaque_existential_1(&aBlock, v82);
    swift_bridgeObjectRetain();
    sub_1C8D674CC((uint64_t)a1, (uint64_t)v61, v57, v58, v59, v60);
    swift_bridgeObjectRelease();
    sub_1C8CA3D5C(v72, isEscapingClosureAtFileLocation);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
  }
  uint64_t v47 = *(void *)(v2 + 16);
  unint64_t v46 = *(void *)(v2 + 24);
  uint64_t v48 = HIBYTE(v46) & 0xF;
  if ((v46 & 0x2000000000000000) == 0) {
    uint64_t v48 = v47 & 0xFFFFFFFFFFFFLL;
  }
  if (v48)
  {
    swift_bridgeObjectRetain();
    sub_1C8CA5968(1uLL);
    sub_1C8CA6060((uint64_t)": ", 2, v49);
    sub_1C8CA6D2C(v47, v46);
    uint64_t v50 = *a1;
    char v51 = swift_isUniquelyReferenced_nonNull_native();
    *a1 = v50;
    if ((v51 & 1) == 0)
    {
      uint64_t v50 = sub_1C8D5EB50(0, *((void *)v50 + 2) + 1, 1, v50);
      *a1 = v50;
    }
    unint64_t v53 = *((void *)v50 + 2);
    unint64_t v52 = *((void *)v50 + 3);
    if (v53 >= v52 >> 1)
    {
      uint64_t v50 = sub_1C8D5EB50((char *)(v52 > 1), v53 + 1, 1, v50);
      *a1 = v50;
    }
    *((void *)v50 + 2) = v53 + 1;
    v50[v53 + 32] = 10;
    swift_bridgeObjectRelease();
    *a1 = v50;
  }
  uint64_t v77 = sub_1C8D5F914((uint64_t)&unk_1F2350110);
  unint64_t v78 = v54;
  sub_1C8D881E0();
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5677E8);
  *(void *)&long long v82 = v62;
  *((void *)&v82 + 1) = sub_1C8D676FC(&qword_1EA5677F0, &qword_1EA5677E8);
  LOBYTE(aBlock) = 125;
  LOBYTE(v73) = *(unsigned char *)__swift_project_boxed_opaque_existential_1(&aBlock, v62);
  sub_1C8D881A0();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
  uint64_t v63 = v77;
  unint64_t v64 = v78;
  uint64_t v65 = swift_bridgeObjectRetain();
  sub_1C8CA67D4(v65);
  sub_1C8CA6060((uint64_t)"#json: ", 7, v66);
  sub_1C8D5C358(v63, v64);
  sub_1C8CA6060((uint64_t)"\n", 1, v67);
  sub_1C8CA3D5C(v63, v64);
  uint64_t v68 = v72;
  unint64_t v69 = isEscapingClosureAtFileLocation;
  return sub_1C8CA3D5C(v68, v69);
}

uint64_t sub_1C8D63E8C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  swift_beginAccess();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_1C8D4B9F4(a1, a2);
  uint64_t v10 = v9;
  long long v53 = 0uLL;
  if (qword_1EA565C70 != -1) {
    swift_once();
  }
  long long v11 = (void *)qword_1EA5676C0;
  uint64_t v12 = (void *)swift_allocObject();
  char v12[2] = &v53;
  v12[3] = v8;
  uint64_t v12[4] = v10;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_1C8D4CCE8;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_1C8D677C4;
  uint64_t v59 = (ValueMetadata *)v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C8D4C41C;
  aBlock[3] = &block_descriptor_36;
  uint64_t v14 = _Block_copy(aBlock);
  uint64_t v15 = v59;
  uint64_t v16 = v11;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v16, v14);

  _Block_release(v14);
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v14)
  {
    __break(1u);
LABEL_38:
    swift_once();
    goto LABEL_23;
  }
  long long v17 = v53;
  swift_bridgeObjectRelease();
  swift_release();
  if (!(void)v17) {
    goto LABEL_9;
  }
  uint64_t v18 = *(unsigned __int8 **)(a3 + 40);
  if (v18 == *(unsigned __int8 **)(a3 + 48)) {
    goto LABEL_9;
  }
  int v19 = *v18;
  *(void *)(a3 + 40) = v18 + 1;
  sub_1C8CB2098();
  if (v19 != 60)
  {
    if (v19 == 123)
    {
      unsigned __int8 v20 = 125;
      goto LABEL_11;
    }
LABEL_9:
    sub_1C8CB47EC();
    swift_allocError();
    *uint64_t v21 = 0;
    return swift_willThrow();
  }
  unsigned __int8 v20 = 62;
LABEL_11:
  sub_1C8D3354C(a3, (uint64_t)&v53);
  uint64_t v60 = 0;
  __int16 v61 = 256;
  long long v62 = 0u;
  long long v63 = 0u;
  long long v64 = 0u;
  sub_1C8D3354C((uint64_t)&v53, (uint64_t)aBlock);
  __int16 v61 = v20;
  uint64_t v23 = swift_conformsToProtocol2();
  if (v23) {
    uint64_t v24 = v23;
  }
  else {
    uint64_t v24 = 0;
  }
  if (v23) {
    uint64_t v25 = v17;
  }
  else {
    uint64_t v25 = 0;
  }
  if (!v25)
  {
    sub_1C8CB47EC();
    swift_allocError();
    *uint64_t v32 = 6;
    swift_willThrow();
    sub_1C8D335A8((uint64_t)&v53);
    return sub_1C8D335FC((uint64_t)aBlock);
  }
  (*(void (**)(long long *__return_ptr))(v24 + 8))(&v48);
  sub_1C8D335A8((uint64_t)&v53);
  long long v47 = v48;
  uint64_t v26 = v49;
  uint64_t v27 = v50;
  sub_1C8CA469C(v62);
  long long v62 = v47;
  *(void *)&long long v63 = v26;
  *((void *)&v63 + 1) = v27;
  long long v64 = v17;
  uint64_t v15 = &type metadata for Google_Protobuf_Any;
  if ((ValueMetadata *)v17 != &type metadata for Google_Protobuf_Any)
  {
    uint64_t v28 = *(void (**)(void, void))(*((void *)&v17 + 1) + 16);
    long long v52 = v17;
    __swift_allocate_boxed_opaque_existential_1(v51);
    v28(v17, *((void *)&v17 + 1));
    uint64_t v30 = *((void *)&v52 + 1);
    uint64_t v29 = v52;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v51, v52);
    uint64_t v31 = v65;
    (*(void (**)(void *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(*((void *)&v17 + 1) + 64))(aBlock, &type metadata for TextFormatDecoder, &off_1F2355738, v29, v30);
    if (v31)
    {
      sub_1C8D335FC((uint64_t)aBlock);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
    }
    sub_1C8CA425C((uint64_t)v51, (uint64_t)&v53);
    char v57 = 1;
    sub_1C8D42C3C((uint64_t)&v53, (uint64_t)&v48);
    swift_beginAccess();
    sub_1C8D3B968((uint64_t)&v48, v4 + 32);
    swift_endAccess();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
    goto LABEL_29;
  }
  if (qword_1EA565C88 != -1) {
    goto LABEL_38;
  }
LABEL_23:
  uint64_t v33 = qword_1EA575078;
  swift_retain();
  uint64_t v34 = v65;
  unint64_t v35 = sub_1C8CB42BC();
  if (!v34)
  {
    uint64_t v37 = v36;
    if (v36)
    {
      uint64_t v38 = v35;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for AnyMessageStorage();
        uint64_t v39 = swift_allocObject();
        uint64_t v40 = swift_retain();
        sub_1C8D66554(v40);
        swift_release();
        uint64_t v33 = v39;
      }
      swift_retain();
      sub_1C8D63E8C(v38, v37, aBlock);
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for AnyMessageStorage();
        uint64_t v43 = swift_allocObject();
        uint64_t v44 = swift_retain();
        sub_1C8D66554(v44);
        swift_release();
        uint64_t v33 = v43;
      }
      uint64_t v45 = swift_retain();
      sub_1C8D4D0AC(v45, (uint64_t)aBlock);
    }
    swift_release();
    uint64_t v55 = v15;
    unint64_t v46 = sub_1C8CC415C();
    long long v53 = xmmword_1C8D8AD80;
    unint64_t v56 = v46;
    uint64_t v54 = v33;
    char v57 = 1;
    sub_1C8D42C3C((uint64_t)&v53, (uint64_t)&v48);
    swift_beginAccess();
    sub_1C8D3B968((uint64_t)&v48, v4 + 32);
    swift_endAccess();
LABEL_29:
    sub_1C8D676A0((uint64_t)aBlock, a3);
    sub_1C8D33324();
    if ((v41 & 1) == 0)
    {
      sub_1C8CB47EC();
      swift_allocError();
      *uint64_t v42 = 0;
      swift_willThrow();
    }
    return sub_1C8D335FC((uint64_t)aBlock);
  }
  sub_1C8CA3D5C(0, 0xC000000000000000);
  swift_release();
  return sub_1C8D335FC((uint64_t)aBlock);
}

uint64_t sub_1C8D644EC(char *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = sub_1C8D88340();
  MEMORY[0x1F4188790](v6 - 8, v7);
  char v8 = *a1;
  char v9 = a1[1];
  uint64_t v10 = v4 + 32;
  swift_beginAccess();
  sub_1C8D3B90C(v4 + 32, (uint64_t)v60);
  if (v61)
  {
    if (v61 == 1)
    {
      sub_1C8CA4528(v60, (uint64_t)aBlock);
      swift_beginAccess();
      uint64_t v11 = *(void *)(v4 + 16);
      unint64_t v12 = *(void *)(v4 + 24);
      uint64_t v13 = HIBYTE(v12) & 0xF;
      if ((v12 & 0x2000000000000000) == 0) {
        uint64_t v13 = v11 & 0xFFFFFFFFFFFFLL;
      }
      if (v13)
      {
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v41 = *((void *)&v57 + 1);
        uint64_t v10 = v57;
        uint64_t v42 = __swift_project_boxed_opaque_existential_1(aBlock, v57);
        uint64_t v11 = sub_1C8D4C900((uint64_t)v42, 0xD000000000000013, 0x80000001C8D8A9D0, v10, v41);
        unint64_t v12 = v43;
      }
      LOBYTE(v59) = v8;
      BYTE1(v59) = v9;
      uint64_t v44 = sub_1C8D65424(aBlock, v11, v12, (char *)&v59);
      if (v3)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
        swift_bridgeObjectRelease();
        return v10;
      }
      uint64_t v10 = v44;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
LABEL_29:
      swift_bridgeObjectRelease();
      return v10;
    }
    unint64_t v22 = *((void *)&v60[0] + 1);
    uint64_t v17 = *(void *)&v60[0];
    *(void *)&v54[0] = MEMORY[0x1E4FBC860];
    uint64_t v24 = sub_1C8D5EB50(0, 1, 1, MEMORY[0x1E4FBC860]);
    int v19 = (void *)*((void *)v24 + 2);
    unint64_t v25 = *((void *)v24 + 3);
    int64_t v30 = v25 >> 1;
    uint64_t v10 = (uint64_t)v19 + 1;
    if (v25 >> 1 > (unint64_t)v19)
    {
LABEL_14:
      *((void *)v24 + 2) = v10;
      *((unsigned char *)v19 + (void)v24 + 32) = 123;
      WORD4(v54[0]) = 256;
      int64_t v31 = (int64_t)v19 + 2;
      if (v30 < v31) {
        uint64_t v24 = sub_1C8D5EB50((char *)(v25 > 1), v31, 1, v24);
      }
      *((void *)v24 + 2) = v31;
      v24[v10 + 32] = 34;
      *(void *)&v54[0] = v24;
      sub_1C8CA69C8(0x6570797440, 0xE500000000000000);
      sub_1C8CA6060((uint64_t)"\":", 2, v32);
      WORD4(v54[0]) = 44;
      swift_beginAccess();
      uint64_t v33 = *(void *)(v4 + 16);
      unint64_t v34 = *(void *)(v4 + 24);
      swift_bridgeObjectRetain();
      sub_1C8D288BC(v33, v34);
      swift_bridgeObjectRelease();
      switch(v22 >> 62)
      {
        case 1uLL:
          unint64_t v35 = (unsigned __int8 *)(int)v17;
          if ((int)v17 != v17 >> 32) {
            goto LABEL_18;
          }
          break;
        case 2uLL:
          unint64_t v35 = *(unsigned __int8 **)(v17 + 16);
          if (v35 != *(unsigned __int8 **)(v17 + 24)) {
            goto LABEL_18;
          }
          break;
        case 3uLL:
          break;
        default:
          if ((v22 & 0xFF000000000000) != 0)
          {
LABEL_18:
            sub_1C8CA6060((uint64_t)",", 1, v35);
            sub_1C8CA3CF8(v17, v22);
            sub_1C8CA62B4(v17, v22);
          }
          break;
      }
      uint64_t v36 = *(char **)&v54[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v36 = sub_1C8D5EB50(0, *((void *)v36 + 2) + 1, 1, v36);
      }
      unint64_t v38 = *((void *)v36 + 2);
      unint64_t v37 = *((void *)v36 + 3);
      if (v38 >= v37 >> 1) {
        uint64_t v36 = sub_1C8D5EB50((char *)(v37 > 1), v38 + 1, 1, v36);
      }
      *((void *)v36 + 2) = v38 + 1;
      v36[v38 + 32] = 125;
      *(void *)&v54[0] = v36;
      WORD4(v54[0]) = 44;
      uint64_t v59 = v36;
      swift_bridgeObjectRetain();
      sub_1C8D88330();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
      sub_1C8D676FC((unint64_t *)&qword_1EBCB2CF0, &qword_1EBCB2CE8);
      uint64_t v10 = sub_1C8D88310();
      uint64_t v40 = v39;
      swift_bridgeObjectRelease();
      if (!v40)
      {
        __break(1u);
        JUMPOUT(0x1C8D64C98);
      }
      sub_1C8CA3D5C(v17, v22);
      goto LABEL_29;
    }
LABEL_38:
    uint64_t v24 = sub_1C8D5EB50((char *)(v25 > 1), v10, 1, v24);
    unint64_t v25 = *((void *)v24 + 3);
    int64_t v30 = v25 >> 1;
    goto LABEL_14;
  }
  char v49 = v8;
  char v50 = v9;
  unint64_t v62 = *((void *)&v60[0] + 1);
  uint64_t v51 = *(void *)&v60[0];
  swift_beginAccess();
  uint64_t v14 = *(void *)(v4 + 16);
  uint64_t v10 = *(void *)(v4 + 24);
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1C8D4B9F4(v14, v10);
  uint64_t v17 = v16;
  v54[0] = 0uLL;
  if (qword_1EA565C70 != -1) {
    swift_once();
  }
  uint64_t v18 = (void *)qword_1EA5676C0;
  int v19 = (void *)swift_allocObject();
  long long v19[2] = v54;
  v19[3] = v15;
  uint64_t v19[4] = v17;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_1C8D4CCE8;
  *(void *)(v20 + 24) = v19;
  *((void *)&v57 + 1) = sub_1C8D677C4;
  uint64_t v58 = v20;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1C8D4C41C;
  *(void *)&long long v57 = &block_descriptor_25;
  uint64_t v21 = _Block_copy(aBlock);
  unint64_t v22 = v18;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync((dispatch_queue_t)v22, v21);

  _Block_release(v21);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
    goto LABEL_38;
  }
  long long v26 = v54[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if ((void)v26)
  {
    uint64_t v55 = 0;
    memset(v54, 0, sizeof(v54));
    uint64_t v52 = 100;
    char v53 = 0;
    long long v57 = v26;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(aBlock);
    unint64_t v28 = v62;
    sub_1C8CA3CF8(v51, v62);
    uint64_t v29 = (uint64_t)boxed_opaque_existential_1;
    uint64_t v10 = v26;
    Message.init(serializedData:extensions:partial:options:)(v51, v28, (uint64_t)v54, 1, &v52, v26, *((uint64_t *)&v26 + 1), v29);
    if (v3)
    {
      sub_1C8CA3D5C(v51, v28);
      __swift_deallocate_boxed_opaque_existential_1((uint64_t)aBlock);
    }
    else
    {
      uint64_t v46 = *(void *)(v4 + 16);
      unint64_t v47 = *(void *)(v4 + 24);
      LOBYTE(v54[0]) = v49;
      BYTE1(v54[0]) = v50;
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_1C8D65424(aBlock, v46, v47, (char *)v54);
      swift_bridgeObjectRelease();
      sub_1C8CA3D5C(v51, v28);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
    }
  }
  else
  {
    sub_1C8CC552C();
    swift_allocError();
    *uint64_t v45 = 0;
    swift_willThrow();
    sub_1C8CA3D5C(v51, v62);
  }
  return v10;
}

uint64_t sub_1C8D64CA8(uint64_t *a1)
{
  uint64_t v3 = v1;
  uint64_t result = sub_1C8CAFD2C(123);
  if (v2) {
    return result;
  }
  uint64_t v6 = a1[5];
  BOOL v7 = __OFSUB__(v6, 1);
  uint64_t v8 = v6 - 1;
  if (v7)
  {
    __break(1u);
LABEL_90:
    sub_1C8CAC5B0();
    swift_allocError();
    *uint64_t v60 = xmmword_1C8D90E50;
    goto LABEL_86;
  }
  a1[5] = v8;
  if (v8 < 0)
  {
    sub_1C8CAC5B0();
    swift_allocError();
    *uint64_t v55 = xmmword_1C8D8AD70;
    return swift_willThrow();
  }
  swift_beginAccess();
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0xE000000000000000;
  swift_bridgeObjectRelease();
  long long v79 = xmmword_1C8D8AD80;
  char v82 = 0;
  sub_1C8D42C3C((uint64_t)&v79, (uint64_t)v78);
  uint64_t v9 = v1 + 32;
  swift_beginAccess();
  sub_1C8D3B968((uint64_t)v78, v1 + 32);
  swift_endAccess();
  uint64_t result = sub_1C8CAFFD8();
  if (result) {
    return result;
  }
  int v10 = 0;
  uint64_t v83 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v12 = a1[1];
  uint64_t v11 = a1[2];
  uint64_t v13 = 13;
  int v14 = 1;
  if (v11 == v12) {
    goto LABEL_14;
  }
LABEL_7:
  uint64_t v15 = *a1;
  while (1)
  {
    unsigned int v16 = *(unsigned __int8 *)(v15 + v11);
    BOOL v17 = v16 > 0x20;
    uint64_t v18 = (1 << v16) & 0x100002600;
    if (v17 || v18 == 0) {
      break;
    }
    a1[2] = ++v11;
    if (v12 == v11) {
      goto LABEL_85;
    }
  }
  while (1)
  {
LABEL_14:
    if (v11 == v12) {
      goto LABEL_85;
    }
    uint64_t v20 = *a1;
    if (*(unsigned char *)(*a1 + v11) != 34 || (v74 = v14, v73 = v10, uint64_t v21 = sub_1C8CAD9C4(), !v22))
    {
LABEL_84:
      uint64_t v13 = 5;
      goto LABEL_85;
    }
    unint64_t v23 = v22;
    uint64_t v24 = a1[2];
    if (v24 == v12) {
      goto LABEL_81;
    }
    while (1)
    {
      unsigned int v25 = *(unsigned __int8 *)(v20 + v24);
      if (v25 > 0x20 || ((1 << v25) & 0x100002600) == 0) {
        break;
      }
      a1[2] = ++v24;
      if (v12 == v24) {
        goto LABEL_81;
      }
    }
    if (v12 == v24)
    {
LABEL_81:
      sub_1C8CAC5B0();
      swift_allocError();
      *unint64_t v56 = xmmword_1C8D8AD20;
LABEL_82:
      swift_willThrow();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    if (v25 != 58)
    {
      sub_1C8CAC5B0();
      swift_allocError();
      *uint64_t v59 = 0;
      v59[1] = 0;
      goto LABEL_82;
    }
    uint64_t v71 = v9;
    uint64_t v27 = v24 + 1;
    uint64_t v72 = v12 - 1;
    a1[2] = v24 + 1;
    if (v21 == (char *)0x6570797440 && v22 == 0xE500000000000000
      || (uint64_t v69 = (uint64_t)v21, (sub_1C8D887C0() & 1) != 0))
    {
      swift_bridgeObjectRelease();
      if (v72 != v24)
      {
        while (1)
        {
          unsigned int v28 = *(unsigned __int8 *)(v20 + v27);
          if (v28 > 0x20 || ((1 << v28) & 0x100002600) == 0) {
            break;
          }
          a1[2] = ++v27;
          if (v12 == v27) {
            goto LABEL_83;
          }
        }
        if (v12 != v27)
        {
          uint64_t v9 = v71;
          if (v28 != 34) {
            goto LABEL_84;
          }
          uint64_t v46 = sub_1C8CAD9C4();
          if (!v47) {
            goto LABEL_84;
          }
          *(void *)(v3 + 16) = v46;
          *(void *)(v3 + 24) = v47;
          swift_bridgeObjectRelease();
          int v10 = v73;
          int v14 = v74;
          goto LABEL_61;
        }
      }
LABEL_83:
      uint64_t v13 = 13;
LABEL_85:
      sub_1C8CAC5B0();
      swift_allocError();
      *long long v57 = 0;
      v57[1] = v13;
      goto LABEL_86;
    }
    uint64_t v30 = (uint64_t)v83;
    if ((v74 & 1) == 0)
    {
      uint64_t v75 = v83;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v75 = sub_1C8D5EB50(0, *((void *)v75 + 2) + 1, 1, v75);
      }
      char v31 = v73;
      uint64_t v30 = (uint64_t)v75;
      unint64_t v33 = *((void *)v75 + 2);
      unint64_t v32 = *((void *)v75 + 3);
      unint64_t v34 = v33 + 1;
      if (v33 >= v32 >> 1)
      {
        unint64_t v68 = v33 + 1;
        unint64_t v77 = *((void *)v75 + 2);
        uint64_t v54 = sub_1C8D5EB50((char *)(v32 > 1), v33 + 1, 1, (char *)v30);
        unint64_t v33 = v77;
        char v31 = v73;
        unint64_t v34 = v68;
        uint64_t v30 = (uint64_t)v54;
      }
      *(void *)(v30 + 16) = v34;
      *(unsigned char *)(v30 + v33 + 32) = v31;
      uint64_t v83 = (char *)v30;
    }
    uint64_t v76 = (char *)v30;
    unint64_t v70 = v23;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v76 = sub_1C8D5EB50(0, *((void *)v76 + 2) + 1, 1, v76);
      uint64_t v83 = v76;
    }
    uint64_t v35 = (uint64_t)v76;
    unint64_t v37 = *((void *)v76 + 2);
    unint64_t v36 = *((void *)v76 + 3);
    unint64_t v38 = v37 + 1;
    if (v37 >= v36 >> 1)
    {
      char v53 = sub_1C8D5EB50((char *)(v36 > 1), v37 + 1, 1, v76);
      unint64_t v38 = v37 + 1;
      uint64_t v35 = (uint64_t)v53;
    }
    *(void *)(v35 + 16) = v38;
    *(unsigned char *)(v35 + v37 + 32) = 34;
    uint64_t v83 = (char *)v35;
    swift_bridgeObjectRetain();
    sub_1C8CA69C8(v69, v70);
    sub_1C8CA6060((uint64_t)"\":", 2, v39);
    swift_bridgeObjectRelease();
    if (v72 == v24)
    {
LABEL_52:
      uint64_t v27 = v12;
    }
    else
    {
      while (1)
      {
        unsigned int v40 = *(unsigned __int8 *)(v20 + v27);
        BOOL v17 = v40 > 0x20;
        uint64_t v41 = (1 << v40) & 0x100002600;
        if (v17 || v41 == 0) {
          break;
        }
        a1[2] = ++v27;
        if (v12 == v27) {
          goto LABEL_52;
        }
      }
    }
    sub_1C8CAFE14();
    uint64_t v20 = *a1;
    if (!*a1) {
      goto LABEL_97;
    }
    uint64_t v43 = a1[2];
    if (__OFSUB__(v43, v27))
    {
      __break(1u);
      goto LABEL_96;
    }
    uint64_t v44 = sub_1C8CA96A4((char *)(v20 + v27), v43 - v27);
    if (!v45) {
      goto LABEL_90;
    }
    sub_1C8CA69C8((uint64_t)v44, v45);
    int v14 = 0;
    int v10 = 44;
    uint64_t v9 = v71;
LABEL_61:
    uint64_t v12 = a1[1];
    uint64_t v48 = a1[2];
    if (v48 == v12) {
      goto LABEL_87;
    }
    while (1)
    {
      unsigned int v49 = *(unsigned __int8 *)(v20 + v48);
      if (v49 > 0x20 || ((1 << v49) & 0x100002600) == 0) {
        break;
      }
      a1[2] = ++v48;
      if (v12 == v48) {
        goto LABEL_87;
      }
    }
    if (v12 == v48)
    {
LABEL_87:
      sub_1C8CAC5B0();
      swift_allocError();
      *uint64_t v58 = xmmword_1C8D8AD20;
      goto LABEL_86;
    }
    if (v49 == 125) {
      break;
    }
    while (1)
    {
      unsigned int v51 = *(unsigned __int8 *)(v20 + v48);
      if (v51 > 0x20 || ((1 << v51) & 0x100002600) == 0) {
        break;
      }
      a1[2] = ++v48;
      if (v12 == v48) {
        goto LABEL_87;
      }
    }
    if (v12 == v48) {
      goto LABEL_87;
    }
    if (v51 != 44)
    {
      sub_1C8CAC5B0();
      swift_allocError();
      *long long v67 = 0;
      v67[1] = 0;
LABEL_86:
      swift_willThrow();
      return swift_bridgeObjectRelease();
    }
    uint64_t v11 = v48 + 1;
    a1[2] = v11;
    uint64_t v13 = 13;
    if (v11 != v12) {
      goto LABEL_7;
    }
  }
  a1[2] = v48 + 1;
  uint64_t v61 = a1[5];
  uint64_t v62 = v61 + 1;
  if (__OFADD__(v61, 1))
  {
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
  }
  else
  {
    a1[5] = v62;
    if (a1[4] >= v62)
    {
      char v63 = *((unsigned char *)a1 + 64);
      uint64_t v64 = sub_1C8D5F914((uint64_t)v83);
      uint64_t v66 = v65;
      swift_bridgeObjectRelease();
      *(void *)&long long v79 = v64;
      *((void *)&v79 + 1) = v66;
      uint64_t v80 = v62;
      char v81 = v63;
      char v82 = 2;
      sub_1C8D42C3C((uint64_t)&v79, (uint64_t)v78);
      swift_beginAccess();
      sub_1C8D3B968((uint64_t)v78, v71);
      return swift_endAccess();
    }
  }
  uint64_t result = sub_1C8D88750();
  __break(1u);
  return result;
}

uint64_t sub_1C8D65424(void *a1, uint64_t a2, unint64_t a3, char *a4)
{
  uint64_t v9 = sub_1C8D88340();
  MEMORY[0x1F4188790](v9 - 8, v10);
  uint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v13 = *a4;
  uint64_t v14 = a4[1];
  sub_1C8CA425C((uint64_t)a1, (uint64_t)v53);
  char v51 = v13;
  char v52 = v14;
  sub_1C8D22D04((uint64_t)v53, &v51, (uint64_t)&v56);
  if (v4) {
    return v14;
  }
  unsigned int v16 = v56;
  uint64_t v58 = v12;
  if ((v57 & 0x100) == 0)
  {
    int v48 = v57;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unsigned int v16 = sub_1C8D5EB50(0, *((void *)v16 + 2) + 1, 1, v16);
    }
    unint64_t v18 = *((void *)v16 + 2);
    unint64_t v17 = *((void *)v16 + 3);
    if (v18 >= v17 >> 1) {
      unsigned int v16 = sub_1C8D5EB50((char *)(v17 > 1), v18 + 1, 1, v16);
    }
    *((void *)v16 + 2) = v18 + 1;
    v16[v18 + 32] = v48;
    unint64_t v56 = v16;
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v56 = v16;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unsigned int v16 = sub_1C8D5EB50(0, *((void *)v16 + 2) + 1, 1, v16);
    unint64_t v56 = v16;
  }
  unint64_t v21 = *((void *)v16 + 2);
  unint64_t v20 = *((void *)v16 + 3);
  int64_t v22 = v20 >> 1;
  unint64_t v23 = v21 + 1;
  if (v20 >> 1 <= v21)
  {
    unsigned int v16 = sub_1C8D5EB50((char *)(v20 > 1), v21 + 1, 1, v16);
    unint64_t v20 = *((void *)v16 + 3);
    int64_t v22 = v20 >> 1;
  }
  *((void *)v16 + 2) = v23;
  v16[v21 + 32] = 123;
  __int16 v57 = 256;
  unint64_t v56 = v16;
  int64_t v24 = v21 + 2;
  if (v22 < v24) {
    unsigned int v16 = sub_1C8D5EB50((char *)(v20 > 1), v24, 1, v16);
  }
  *((void *)v16 + 2) = v24;
  v16[v23 + 32] = 34;
  unint64_t v56 = v16;
  sub_1C8CA69C8(0x6570797440, 0xE500000000000000);
  sub_1C8CA6060((uint64_t)"\":", 2, v25);
  __int16 v57 = 44;
  sub_1C8D288BC(a2, a3);
  sub_1C8CA425C((uint64_t)a1, (uint64_t)&v51);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CD8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567720);
  if (swift_dynamicCast())
  {
    sub_1C8CA4528(v49, (uint64_t)v53);
    uint64_t v26 = v54;
    uint64_t v27 = v55;
    __swift_project_boxed_opaque_existential_1(v53, v54);
    char v51 = v13;
    char v52 = v14;
    uint64_t v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 8))(&v51, v26, v27);
    unint64_t v32 = v31;
    unint64_t v33 = v56;
    if ((v57 & 0x100) == 0)
    {
      char v34 = v57;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v33 = sub_1C8D5EB50(0, *((void *)v33 + 2) + 1, 1, v33);
      }
      unint64_t v36 = *((void *)v33 + 2);
      unint64_t v35 = *((void *)v33 + 3);
      if (v36 >= v35 >> 1) {
        unint64_t v33 = sub_1C8D5EB50((char *)(v35 > 1), v36 + 1, 1, v33);
      }
      *((void *)v33 + 2) = v36 + 1;
      v33[v36 + 32] = v34;
      unint64_t v56 = v33;
    }
    char v37 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v56 = v33;
    if ((v37 & 1) == 0)
    {
      unint64_t v33 = sub_1C8D5EB50(0, *((void *)v33 + 2) + 1, 1, v33);
      unint64_t v56 = v33;
    }
    unint64_t v39 = *((void *)v33 + 2);
    unint64_t v38 = *((void *)v33 + 3);
    if (v39 >= v38 >> 1) {
      unint64_t v33 = sub_1C8D5EB50((char *)(v38 > 1), v39 + 1, 1, v33);
    }
    *((void *)v33 + 2) = v39 + 1;
    v33[v39 + 32] = 34;
    unint64_t v56 = v33;
    sub_1C8CA69C8(0x65756C6176, 0xE500000000000000);
    sub_1C8CA6060((uint64_t)"\":", 2, v40);
    __int16 v57 = 44;
    sub_1C8CA69C8(v30, v32);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  }
  else
  {
    uint64_t v50 = 0;
    memset(v49, 0, sizeof(v49));
    sub_1C8D5BBC0((uint64_t)v49);
    uint64_t v28 = a1[3];
    uint64_t v29 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v28);
    (*(void (**)(char **, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v29 + 72))(&v56, &type metadata for JSONEncodingVisitor, &off_1F2354C58, v28, v29);
  }
  uint64_t v41 = v56;
  char v42 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v56 = v41;
  if ((v42 & 1) == 0)
  {
    uint64_t v41 = sub_1C8D5EB50(0, *((void *)v41 + 2) + 1, 1, v41);
    unint64_t v56 = v41;
  }
  unint64_t v44 = *((void *)v41 + 2);
  unint64_t v43 = *((void *)v41 + 3);
  if (v44 >= v43 >> 1) {
    uint64_t v41 = sub_1C8D5EB50((char *)(v43 > 1), v44 + 1, 1, v41);
  }
  *((void *)v41 + 2) = v44 + 1;
  v41[v44 + 32] = 125;
  unint64_t v56 = v41;
  __int16 v57 = 44;
  v53[0] = v41;
  swift_bridgeObjectRetain_n();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8D88330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
  sub_1C8D676FC((unint64_t *)&qword_1EBCB2CF0, &qword_1EBCB2CE8);
  uint64_t v14 = sub_1C8D88310();
  uint64_t v46 = v45;
  uint64_t result = swift_bridgeObjectRelease();
  if (v46)
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_release_n();
    swift_bridgeObjectRelease_n();
    return v14;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C8D65ABC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v7 = v6;
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  char v13 = *(uint64_t (**)())a3;
  uint64_t v14 = *(unsigned __int8 *)(a3 + 8);
  if (swift_conformsToProtocol2()) {
    uint64_t v15 = a4;
  }
  else {
    uint64_t v15 = 0;
  }
  if (v15)
  {
    uint64_t v27 = 0;
    unint64_t v28 = 0xE000000000000000;
    switch(a2 >> 62)
    {
      case 1uLL:
        if (a1 >> 32 < (int)a1) {
          __break(1u);
        }
        swift_retain();
        sub_1C8D67410((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, (uint64_t)v13, v14, &v27);
        sub_1C8CA3D5C(a1, a2);
        if (!v6) {
          goto LABEL_19;
        }
        break;
      case 2uLL:
        uint64_t v18 = a2 & 0x3FFFFFFFFFFFFFFFLL;
        uint64_t v19 = *(void *)(a1 + 16);
        uint64_t v20 = *(void *)(a1 + 24);
        swift_retain();
        swift_retain();
        sub_1C8D67410(v19, v20, v18, (uint64_t)v13, v14, &v27);
        if (!v7)
        {
          swift_release();
          swift_release();
          goto LABEL_19;
        }
        swift_release();
        swift_release();
        break;
      case 3uLL:
        *(void *)((char *)&v31 + 6) = 0;
        *(void *)&long long v31 = 0;
        unsigned int v16 = (char *)&v31;
        goto LABEL_14;
      default:
        *(void *)&long long v31 = a1;
        WORD4(v31) = a2;
        BYTE10(v31) = BYTE2(a2);
        BYTE11(v31) = BYTE3(a2);
        BYTE12(v31) = BYTE4(a2);
        BYTE13(v31) = BYTE5(a2);
        unsigned int v16 = (char *)&v31 + BYTE6(a2);
LABEL_14:
        sub_1C8D65EC8((uint64_t)&v31, (uint64_t)v16, (uint64_t)v13, v14, &v27);
        if (!v6)
        {
LABEL_19:
          int64_t v24 = v27;
          unint64_t v25 = v28;
          *(void *)&long long v31 = v13;
          BYTE8(v31) = v14;
          a6[3] = a4;
          a6[4] = a5;
          boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a6);
          swift_bridgeObjectRetain();
          Message.init(jsonString:options:)((uint64_t)v24, v25, (uint64_t *)&v31, a4, a5, boxed_opaque_existential_1);
          if (v7) {
            __swift_deallocate_boxed_opaque_existential_1((uint64_t)a6);
          }
        }
        break;
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)&long long v31 = sub_1C8D5F914((uint64_t)&unk_1F23500E8);
    *((void *)&v31 + 1) = v17;
    sub_1C8D881E0();
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5677E8);
    uint64_t v30 = sub_1C8D676FC(&qword_1EA5677F0, &qword_1EA5677E8);
    LOBYTE(v27) = 125;
    __swift_project_boxed_opaque_existential_1(&v27, v29);
    sub_1C8D881A0();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v27);
    long long v21 = v31;
    uint64_t v27 = v13;
    LOBYTE(v28) = v14;
    a6[3] = a4;
    a6[4] = a5;
    int64_t v22 = __swift_allocate_boxed_opaque_existential_1(a6);
    uint64_t result = Message.init(jsonUTF8Data:options:)(v21, *((unint64_t *)&v21 + 1), (uint64_t)&v27, a4, a5, v22);
    if (v6) {
      return __swift_deallocate_boxed_opaque_existential_1((uint64_t)a6);
    }
  }
  return result;
}

void sub_1C8D65EC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (**a5)())
{
  if (a1)
  {
    uint64_t v7 = a2 - a1;
    uint64_t v8 = a2 - a1 - 1;
    if (a2 - a1 >= 1)
    {
      type metadata accessor for DoubleParser();
      uint64_t v10 = swift_allocObject();
      uint64_t v11 = swift_slowAlloc();
      *(void *)(v10 + 16) = v11;
      *(void *)(v10 + 24) = v11 + 128;
      uint64_t v33 = v7;
      uint64_t v12 = sub_1C8CADB68();
      if (v5)
      {
LABEL_40:
        swift_release();
        return;
      }
      if (v12 == (char *)0x65756C6176 && v13 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v14 = sub_1C8D887C0();
        swift_bridgeObjectRelease();
        if ((v14 & 1) == 0)
        {
LABEL_38:
          sub_1C8D67740();
          swift_allocError();
          *uint64_t v32 = 1;
          goto LABEL_39;
        }
      }
      uint64_t v15 = 0;
      if (!v7) {
        goto LABEL_14;
      }
      while (1)
      {
        unsigned int v16 = *(unsigned __int8 *)(a1 + v15);
        if (v16 > 0x20 || ((1 << v16) & 0x100002600) == 0) {
          break;
        }
        if (v7 == ++v15) {
          goto LABEL_14;
        }
      }
      if (v7 == v15)
      {
LABEL_14:
        sub_1C8CAC5B0();
        swift_allocError();
        long long v19 = xmmword_1C8D8AD20;
      }
      else
      {
        if (v16 != 58)
        {
          sub_1C8CAC5B0();
          swift_allocError();
          *unint64_t v25 = 0;
          v25[1] = 0;
          goto LABEL_39;
        }
        uint64_t v20 = v15 + 1;
        uint64_t v34 = v15 + 1;
        if (v8 != v15)
        {
          while (1)
          {
            unsigned int v21 = *(unsigned __int8 *)(a1 + v20);
            BOOL v22 = v21 > 0x20;
            uint64_t v23 = (1 << v21) & 0x100002600;
            if (v22 || v23 == 0) {
              break;
            }
            if (v7 == ++v20)
            {
              uint64_t v20 = v7;
              goto LABEL_27;
            }
          }
          uint64_t v7 = v20;
LABEL_27:
          uint64_t v34 = v20;
        }
        sub_1C8CAFE14();
        uint64_t v26 = v34;
        if (__OFSUB__(v34, v7))
        {
          __break(1u);
          __break(1u);
          return;
        }
        uint64_t v27 = sub_1C8CA96A4((char *)(a1 + v7), v34 - v7);
        if (v28)
        {
          *a5 = v27;
          a5[1] = v28;
          swift_bridgeObjectRelease();
          if (v34 != v33)
          {
            while (1)
            {
              unsigned int v29 = *(unsigned __int8 *)(a1 + v26);
              BOOL v22 = v29 > 0x20;
              uint64_t v30 = (1 << v29) & 0x100002600;
              if (v22 || v30 == 0) {
                break;
              }
              if (v33 == ++v26)
              {
                uint64_t v26 = v33;
                break;
              }
            }
          }
          if (v26 == v33) {
            goto LABEL_40;
          }
          goto LABEL_38;
        }
        sub_1C8CAC5B0();
        swift_allocError();
        long long v19 = xmmword_1C8D90E50;
      }
      *uint64_t v18 = v19;
LABEL_39:
      swift_willThrow();
      goto LABEL_40;
    }
  }
}

uint64_t sub_1C8D661C8()
{
  swift_beginAccess();
  sub_1C8D3B90C(v0 + 32, (uint64_t)&v27);
  if (!v30) {
    return v27;
  }
  if (v30 == 1)
  {
    sub_1C8CA4528(&v27, (uint64_t)aBlock);
    uint64_t v1 = (uint64_t)v22;
    uint64_t v2 = (uint64_t)v23;
    __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v22);
    uint64_t v18 = Message.serializedData(partial:)(1, v1, v2);
LABEL_10:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
    return v18;
  }
  long long v3 = v27;
  uint64_t v20 = v28;
  char v4 = v29;
  swift_beginAccess();
  uint64_t v6 = *(void *)(v0 + 16);
  unint64_t v5 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1C8D4B9F4(v6, v5);
  uint64_t v9 = v8;
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  if (qword_1EA565C70 != -1) {
    goto LABEL_13;
  }
  while (1)
  {
    uint64_t v10 = (void *)qword_1EA5676C0;
    uint64_t v11 = (void *)swift_allocObject();
    long long v11[2] = &v25;
    v11[3] = v7;
    void v11[4] = v9;
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = sub_1C8D4CCE8;
    *(void *)(v7 + 24) = v11;
    uint64_t v23 = sub_1C8D677C4;
    uint64_t v24 = v7;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1C8D4C41C;
    BOOL v22 = &block_descriptor_70;
    uint64_t v12 = _Block_copy(aBlock);
    uint64_t v13 = v10;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    dispatch_sync(v13, v12);

    _Block_release(v12);
    LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v12 & 1) == 0) {
      break;
    }
    __break(1u);
LABEL_13:
    swift_once();
  }
  uint64_t v14 = v25;
  uint64_t v15 = v26;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (v14)
  {
    uint64_t v25 = v20;
    LOBYTE(v26) = v4;
    sub_1C8D65ABC(v3, *((unint64_t *)&v3 + 1), (uint64_t)&v25, v14, v15, aBlock);
    uint64_t v16 = (uint64_t)v22;
    uint64_t v17 = (uint64_t)v23;
    __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v22);
    uint64_t v18 = Message.serializedData(partial:)(1, v16, v17);
    sub_1C8CA3D5C(v3, *((unint64_t *)&v3 + 1));
    goto LABEL_10;
  }
  sub_1C8CA3D5C(v3, *((unint64_t *)&v3 + 1));
  return 0;
}

double sub_1C8D66510()
{
  type metadata accessor for AnyMessageStorage();
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0xE000000000000000;
  double result = 0.0;
  *(_OWORD *)(v0 + 32) = xmmword_1C8D8AD80;
  *(unsigned char *)(v0 + 72) = 0;
  qword_1EA575078 = v0;
  return result;
}

uint64_t sub_1C8D66554(uint64_t a1)
{
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0xE000000000000000;
  *(_OWORD *)(v1 + 32) = xmmword_1C8D8AD80;
  *(unsigned char *)(v1 + 72) = 0;
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  swift_beginAccess();
  *(void *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_1C8D3B90C(a1 + 32, (uint64_t)v6);
  swift_release();
  swift_beginAccess();
  sub_1C8D3B968((uint64_t)v6, v1 + 32);
  swift_endAccess();
  return v1;
}

uint64_t sub_1C8D66658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t v6 = *(void *)(v3 + 16);
  unint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0) {
    uint64_t v8 = v6 & 0xFFFFFFFFFFFFLL;
  }
  if (v8)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1C8D4B9F4(v6, v7);
    uint64_t v11 = v10;
    swift_bridgeObjectRelease();
    if (v9 == (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3) && v11 == v12) {
      char v14 = 1;
    }
    else {
      char v14 = sub_1C8D887C0();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v14 = 0;
  }
  return v14 & 1;
}

uint64_t sub_1C8D66758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v52 = a2;
  uint64_t v53 = a1;
  uint64_t v9 = sub_1C8D88620();
  uint64_t v51 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9, v10);
  uint64_t v13 = (char *)&v50 - v12;
  uint64_t v54 = *(void *)(a4 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v11, v14);
  uint64_t v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v15, v18);
  uint64_t v50 = (uint64_t)&v50 - v20;
  uint64_t v22 = MEMORY[0x1F4188790](v19, v21);
  uint64_t v24 = (char *)&v50 - v23;
  uint64_t v25 = *(void *)a3;
  char v26 = *(unsigned char *)(a3 + 8);
  uint64_t v55 = a5;
  if (sub_1C8D66658(v22, a4, a5))
  {
    swift_beginAccess();
    sub_1C8D3B90C(v5 + 32, (uint64_t)&v63);
    if (v66)
    {
      if (v66 == 1)
      {
        sub_1C8CA4528(&v63, (uint64_t)v60);
        sub_1C8CA425C((uint64_t)v60, (uint64_t)&v58);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CD8);
        int v27 = swift_dynamicCast();
        uint64_t v28 = v54;
        char v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v54 + 56);
        if (v27)
        {
          v29(v13, 0, 1, a4);
          uint64_t v30 = v53;
          (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v53, a4);
          (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v30, v13, a4);
        }
        else
        {
          v29(v13, 1, 1, a4);
          (*(void (**)(char *, uint64_t))(v51 + 8))(v13, v9);
          uint64_t v39 = v61;
          uint64_t v40 = v62;
          __swift_project_boxed_opaque_existential_1(v60, v61);
          uint64_t v41 = v67;
          uint64_t v42 = Message.serializedData(partial:)(1, v39, v40);
          if (!v41)
          {
            uint64_t v44 = v42;
            unint64_t v45 = v43;
            sub_1C8CA87D8(v52, (uint64_t)&v58);
            uint64_t v56 = 100;
            char v57 = 0;
            uint64_t v46 = v50;
            Message.init(serializedData:extensions:partial:options:)(v44, v45, (uint64_t)&v58, 1, &v56, a4, v55, v50);
            uint64_t v47 = v53;
            (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v53, a4);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v47, v46, a4);
          }
        }
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
      }
      else
      {
        long long v37 = v63;
        uint64_t v58 = v64;
        char v59 = v65;
        uint64_t v38 = v67;
        sub_1C8D65ABC(v63, *((unint64_t *)&v63 + 1), (uint64_t)&v58, a4, v55, v60);
        if (v38)
        {
          return sub_1C8CA3D5C(v37, *((unint64_t *)&v37 + 1));
        }
        else
        {
          uint64_t v48 = v54;
          uint64_t v49 = v53;
          (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v53, a4);
          sub_1C8CA3D5C(v37, *((unint64_t *)&v37 + 1));
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CD8);
          swift_dynamicCast();
          return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v48 + 32))(v49, v17, a4);
        }
      }
    }
    else
    {
      long long v33 = v63;
      sub_1C8CA87D8(v52, (uint64_t)v60);
      uint64_t v58 = v25;
      char v59 = v26;
      uint64_t v34 = v67;
      uint64_t result = Message.init(serializedData:extensions:partial:options:)(v33, *((unint64_t *)&v33 + 1), (uint64_t)v60, 1, &v58, a4, v55, (uint64_t)v24);
      if (!v34)
      {
        uint64_t v35 = v54;
        uint64_t v36 = v53;
        (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v53, a4);
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v35 + 32))(v36, v24, a4);
      }
    }
  }
  else
  {
    sub_1C8D67740();
    swift_allocError();
    *long long v31 = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1C8D66CB4()
{
  swift_beginAccess();
  sub_1C8D3B90C(v0 + 32, (uint64_t)&v15);
  if (!v17) {
    return sub_1C8CA3D5C(v15, v16);
  }
  if (v17 == 1) {
    return sub_1C8D673E0((uint64_t)&v15);
  }
  sub_1C8CA3D5C(v15, v16);
  swift_beginAccess();
  uint64_t v3 = *(void *)(v0 + 16);
  unint64_t v2 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1C8D4B9F4(v3, v2);
  uint64_t v6 = v5;
  v14[0] = 0;
  v14[1] = 0;
  if (qword_1EA565C70 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    unint64_t v7 = (void *)qword_1EA5676C0;
    uint64_t v8 = (void *)swift_allocObject();
    v8[2] = v14;
    void v8[3] = v4;
    void v8[4] = v6;
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = sub_1C8D4C89C;
    *(void *)(v4 + 24) = v8;
    uint64_t v13[4] = sub_1C8D4E6EC;
    v13[5] = v4;
    v13[0] = MEMORY[0x1E4F143A8];
    v13[1] = 1107296256;
    void v13[2] = sub_1C8D4C41C;
    void v13[3] = &block_descriptor_1;
    uint64_t v9 = _Block_copy(v13);
    uint64_t v10 = v7;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    dispatch_sync(v10, v9);

    _Block_release(v9);
    LOBYTE(v9) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v9 & 1) == 0) {
      break;
    }
    __break(1u);
LABEL_11:
    swift_once();
  }
  uint64_t v11 = v14[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (!v11)
  {
    sub_1C8D0DC70();
    swift_allocError();
    *uint64_t v12 = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1C8D66F2C()
{
  swift_bridgeObjectRelease();
  sub_1C8D673E0(v0 + 32);
  return MEMORY[0x1F4186488](v0, 73, 7);
}

uint64_t type metadata accessor for AnyMessageStorage()
{
  return self;
}

uint64_t destroy for AnyMessageStorage.InternalState(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 40);
  if (v1 >= 3) {
    unsigned int v1 = *(_DWORD *)a1 + 3;
  }
  if (v1 == 1) {
    return __swift_destroy_boxed_opaque_existential_1(a1);
  }
  else {
    return sub_1C8CA3D5C(*(void *)a1, *(void *)(a1 + 8));
  }
}

uint64_t initializeWithCopy for AnyMessageStorage.InternalState(uint64_t a1, uint64_t *a2)
{
  unsigned int v4 = *((unsigned __int8 *)a2 + 40);
  if (v4 >= 3) {
    unsigned int v4 = *(_DWORD *)a2 + 3;
  }
  if (v4 == 2)
  {
    uint64_t v7 = *a2;
    unint64_t v8 = a2[1];
    sub_1C8CA3CF8(*a2, v8);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    char v6 = 2;
  }
  else if (v4 == 1)
  {
    long long v5 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v5;
    (**(void (***)(uint64_t, uint64_t *))(v5 - 8))(a1, a2);
    char v6 = 1;
  }
  else
  {
    uint64_t v10 = *a2;
    unint64_t v9 = a2[1];
    sub_1C8CA3CF8(*a2, v9);
    char v6 = 0;
    *(void *)a1 = v10;
    *(void *)(a1 + 8) = v9;
  }
  *(unsigned char *)(a1 + 40) = v6;
  return a1;
}

uint64_t assignWithCopy for AnyMessageStorage.InternalState(uint64_t a1, uint64_t *a2)
{
  if ((uint64_t *)a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 3) {
      unsigned int v4 = *(_DWORD *)a1 + 3;
    }
    if (v4 == 1) {
      __swift_destroy_boxed_opaque_existential_1(a1);
    }
    else {
      sub_1C8CA3D5C(*(void *)a1, *(void *)(a1 + 8));
    }
    unsigned int v5 = *((unsigned __int8 *)a2 + 40);
    if (v5 >= 3) {
      unsigned int v5 = *(_DWORD *)a2 + 3;
    }
    if (v5 == 2)
    {
      uint64_t v8 = *a2;
      unint64_t v9 = a2[1];
      sub_1C8CA3CF8(*a2, v9);
      *(void *)a1 = v8;
      *(void *)(a1 + 8) = v9;
      uint64_t v10 = a2[2];
      *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
      *(void *)(a1 + 16) = v10;
      char v7 = 2;
    }
    else if (v5 == 1)
    {
      uint64_t v6 = a2[3];
      *(void *)(a1 + 24) = v6;
      *(void *)(a1 + 32) = a2[4];
      (**(void (***)(uint64_t, uint64_t *))(v6 - 8))(a1, a2);
      char v7 = 1;
    }
    else
    {
      uint64_t v12 = *a2;
      unint64_t v11 = a2[1];
      sub_1C8CA3CF8(v12, v11);
      char v7 = 0;
      *(void *)a1 = v12;
      *(void *)(a1 + 8) = v11;
    }
    *(unsigned char *)(a1 + 40) = v7;
  }
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AnyMessageStorage.InternalState(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 3) {
      unsigned int v4 = *(_DWORD *)a1 + 3;
    }
    if (v4 == 1) {
      __swift_destroy_boxed_opaque_existential_1(a1);
    }
    else {
      sub_1C8CA3D5C(*(void *)a1, *(void *)(a1 + 8));
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 3) {
      unsigned int v5 = *(_DWORD *)a2 + 3;
    }
    if (v5 == 2)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
    }
    else if (v5 == 1)
    {
      long long v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      LOBYTE(v5) = 1;
    }
    else
    {
      LOBYTE(v5) = 0;
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    *(unsigned char *)(a1 + 40) = v5;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyMessageStorage.InternalState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 3) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AnyMessageStorage.InternalState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C8D6732C(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 3) {
    return (*(_DWORD *)a1 + 3);
  }
  return result;
}

uint64_t sub_1C8D67348(uint64_t result, unsigned int a2)
{
  if (a2 > 2)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AnyMessageStorage.InternalState()
{
  return &type metadata for AnyMessageStorage.InternalState;
}

uint64_t sub_1C8D67380()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C8D673B8()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_1C8D673E0(uint64_t a1)
{
  return a1;
}

void sub_1C8D67410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t (**a6)())
{
  uint64_t v11 = sub_1C8D88110();
  if (v11)
  {
    uint64_t v12 = sub_1C8D88140();
    if (__OFSUB__(a1, v12))
    {
LABEL_13:
      __break(1u);
      return;
    }
    v11 += a1 - v12;
  }
  BOOL v13 = __OFSUB__(a2, a1);
  uint64_t v14 = a2 - a1;
  if (v13)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v15 = sub_1C8D88130();
  if (v15 >= v14) {
    uint64_t v16 = v14;
  }
  else {
    uint64_t v16 = v15;
  }
  uint64_t v17 = v11 + v16;
  if (v11) {
    uint64_t v18 = v17;
  }
  else {
    uint64_t v18 = 0;
  }
  sub_1C8D65EC8(v11, v18, a4, a5 & 1, a6);
}

uint64_t sub_1C8D674CC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](a1, a2);
  BOOL v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v11 + 16))(v13);
  uint64_t v14 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v14 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v14)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    a3 = sub_1C8D4C900((uint64_t)v13, 0xD000000000000013, 0x80000001C8D8A9D0, a5, a6);
    a4 = v15;
  }
  sub_1C8D3258C((uint64_t)v13, a3, a4, a1, a5, a6);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, a5);
}

uint64_t sub_1C8D6762C()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t __swift_deallocate_boxed_opaque_existential_1(uint64_t result)
{
  if ((*(_DWORD *)(*(void *)(*(void *)(result + 24) - 8) + 80) & 0x20000) != 0) {
    JUMPOUT(0x1CB773830);
  }
  return result;
}

uint64_t sub_1C8D67690()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C8D676A0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C8D676FC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C8D67740()
{
  unint64_t result = qword_1EA5677F8;
  if (!qword_1EA5677F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5677F8);
  }
  return result;
}

uint64_t sub_1C8D67794()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C8D677A4()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C8D677B4()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C8D67804@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t result = swift_conformsToProtocol2();
  if (result)
  {
    (*(void (**)(uint64_t *__return_ptr))(result + 8))(&v25);
    uint64_t v7 = v26;
    if (*(void *)(v26 + 16) && ((a2 & 1) != 0 ? (uint64_t v8 = 0) : (uint64_t v8 = a1), v9 = sub_1C8CA5D14(v8), (v10 & 1) != 0))
    {
      uint64_t v11 = *(void *)(v7 + 56) + 80 * v9;
      uint64_t v22 = *(void *)(v11 + 8);
      uint64_t v23 = *(void *)v11;
      uint64_t v20 = *(void *)(v11 + 24);
      uint64_t v21 = *(void *)(v11 + 16);
      long long v24 = *(_OWORD *)(v11 + 40);
      uint64_t v12 = *(void *)(v11 + 56);
      uint64_t v13 = *(void *)(v11 + 64);
      uint64_t v14 = *(unsigned __int8 *)(v11 + 72);
      int v15 = *(unsigned __int8 *)(v11 + 73);
      uint64_t v16 = *(unsigned __int16 *)(v11 + 32);
      sub_1C8CB5524(*(void *)v11, v22, v21, v20, v16);
      sub_1C8CA6050(v12, v13, v14, v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1C8CA6050(v12, v13, v14, v15);
      sub_1C8CB554C(v23, v22, v21, v20, v16);
      uint64_t result = sub_1C8CA6AF4(v12, v13, v14, v15);
      long long v17 = v24;
      if (v15) {
        __int16 v18 = 256;
      }
      else {
        __int16 v18 = 0;
      }
      __int16 v19 = v18 | v14;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      uint64_t v12 = 0;
      uint64_t v13 = 0;
      long long v17 = 0uLL;
      __int16 v19 = -256;
    }
    *(_OWORD *)a3 = v17;
    *(void *)(a3 + 16) = v12;
    *(void *)(a3 + 24) = v13;
    *(_WORD *)(a3 + 32) = v19;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D679C4@<X0>(BOOL a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t result = swift_conformsToProtocol2();
  if (result)
  {
    (*(void (**)(uint64_t *__return_ptr))(result + 8))(&v25);
    uint64_t v7 = v26;
    if (*(void *)(v26 + 16) && ((a2 & 1) != 0 ? (BOOL v8 = a1) : (BOOL v8 = a1), v9 = sub_1C8CA5D14(v8), (v10 & 1) != 0))
    {
      uint64_t v11 = *(void *)(v7 + 56) + 80 * v9;
      uint64_t v22 = *(void *)(v11 + 8);
      uint64_t v23 = *(void *)v11;
      uint64_t v20 = *(void *)(v11 + 24);
      uint64_t v21 = *(void *)(v11 + 16);
      long long v24 = *(_OWORD *)(v11 + 40);
      uint64_t v12 = *(void *)(v11 + 56);
      uint64_t v13 = *(void *)(v11 + 64);
      uint64_t v14 = *(unsigned __int8 *)(v11 + 72);
      int v15 = *(unsigned __int8 *)(v11 + 73);
      uint64_t v16 = *(unsigned __int16 *)(v11 + 32);
      sub_1C8CB5524(*(void *)v11, v22, v21, v20, v16);
      sub_1C8CA6050(v12, v13, v14, v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1C8CA6050(v12, v13, v14, v15);
      sub_1C8CB554C(v23, v22, v21, v20, v16);
      uint64_t result = sub_1C8CA6AF4(v12, v13, v14, v15);
      long long v17 = v24;
      if (v15) {
        __int16 v18 = 256;
      }
      else {
        __int16 v18 = 0;
      }
      __int16 v19 = v18 | v14;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      uint64_t v12 = 0;
      uint64_t v13 = 0;
      long long v17 = 0uLL;
      __int16 v19 = -256;
    }
    *(_OWORD *)a3 = v17;
    *(void *)(a3 + 16) = v12;
    *(void *)(a3 + 24) = v13;
    *(_WORD *)(a3 + 32) = v19;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D67B8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = swift_conformsToProtocol2();
  if (result)
  {
    (*(void (**)(uint64_t *__return_ptr))(result + 8))(&v22);
    uint64_t v5 = v23;
    if (*(void *)(v23 + 16) && (unint64_t v6 = sub_1C8CA5D14(a1), (v7 & 1) != 0))
    {
      uint64_t v8 = *(void *)(v5 + 56) + 80 * v6;
      uint64_t v19 = *(void *)(v8 + 8);
      uint64_t v20 = *(void *)v8;
      uint64_t v17 = *(void *)(v8 + 24);
      uint64_t v18 = *(void *)(v8 + 16);
      long long v21 = *(_OWORD *)(v8 + 40);
      uint64_t v9 = *(void *)(v8 + 56);
      uint64_t v10 = *(void *)(v8 + 64);
      uint64_t v11 = *(unsigned __int8 *)(v8 + 72);
      int v12 = *(unsigned __int8 *)(v8 + 73);
      uint64_t v13 = *(unsigned __int16 *)(v8 + 32);
      sub_1C8CB5524(*(void *)v8, v19, v18, v17, v13);
      sub_1C8CA6050(v9, v10, v11, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1C8CA6050(v9, v10, v11, v12);
      sub_1C8CB554C(v20, v19, v18, v17, v13);
      uint64_t result = sub_1C8CA6AF4(v9, v10, v11, v12);
      long long v14 = v21;
      if (v12) {
        __int16 v15 = 256;
      }
      else {
        __int16 v15 = 0;
      }
      __int16 v16 = v15 | v11;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      long long v14 = 0uLL;
      __int16 v16 = -256;
    }
    *(_OWORD *)a2 = v14;
    *(void *)(a2 + 16) = v9;
    *(void *)(a2 + 24) = v10;
    *(_WORD *)(a2 + 32) = v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D67D44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = swift_conformsToProtocol2();
  if (result)
  {
    (*(void (**)(uint64_t *__return_ptr))(result + 8))(&v22);
    uint64_t v5 = v23;
    if (*(void *)(v23 + 16) && (unint64_t v6 = sub_1C8CA5D14(a1), (v7 & 1) != 0))
    {
      uint64_t v8 = *(void *)(v5 + 56) + 80 * v6;
      uint64_t v19 = *(void *)(v8 + 8);
      uint64_t v20 = *(void *)v8;
      uint64_t v17 = *(void *)(v8 + 24);
      uint64_t v18 = *(void *)(v8 + 16);
      long long v21 = *(_OWORD *)(v8 + 40);
      uint64_t v9 = *(void *)(v8 + 56);
      uint64_t v10 = *(void *)(v8 + 64);
      uint64_t v11 = *(unsigned __int8 *)(v8 + 72);
      int v12 = *(unsigned __int8 *)(v8 + 73);
      uint64_t v13 = *(unsigned __int16 *)(v8 + 32);
      sub_1C8CB5524(*(void *)v8, v19, v18, v17, v13);
      sub_1C8CA6050(v9, v10, v11, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1C8CA6050(v9, v10, v11, v12);
      sub_1C8CB554C(v20, v19, v18, v17, v13);
      uint64_t result = sub_1C8CA6AF4(v9, v10, v11, v12);
      long long v14 = v21;
      if (v12) {
        __int16 v15 = 256;
      }
      else {
        __int16 v15 = 0;
      }
      __int16 v16 = v15 | v11;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      long long v14 = 0uLL;
      __int16 v16 = -256;
    }
    *(_OWORD *)a2 = v14;
    *(void *)(a2 + 16) = v9;
    *(void *)(a2 + 24) = v10;
    *(_WORD *)(a2 + 32) = v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D67EFC@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t result = swift_conformsToProtocol2();
  if (result)
  {
    (*(void (**)(uint64_t *__return_ptr))(result + 8))(&v22);
    uint64_t v5 = v23;
    if (*(void *)(v23 + 16) && (unint64_t v6 = sub_1C8CA5D14(a1 + 1), (v7 & 1) != 0))
    {
      uint64_t v8 = *(void *)(v5 + 56) + 80 * v6;
      uint64_t v19 = *(void *)(v8 + 8);
      uint64_t v20 = *(void *)v8;
      uint64_t v17 = *(void *)(v8 + 24);
      uint64_t v18 = *(void *)(v8 + 16);
      long long v21 = *(_OWORD *)(v8 + 40);
      uint64_t v9 = *(void *)(v8 + 56);
      uint64_t v10 = *(void *)(v8 + 64);
      uint64_t v11 = *(unsigned __int8 *)(v8 + 72);
      int v12 = *(unsigned __int8 *)(v8 + 73);
      uint64_t v13 = *(unsigned __int16 *)(v8 + 32);
      sub_1C8CB5524(*(void *)v8, v19, v18, v17, v13);
      sub_1C8CA6050(v9, v10, v11, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1C8CA6050(v9, v10, v11, v12);
      sub_1C8CB554C(v20, v19, v18, v17, v13);
      uint64_t result = sub_1C8CA6AF4(v9, v10, v11, v12);
      long long v14 = v21;
      if (v12) {
        __int16 v15 = 256;
      }
      else {
        __int16 v15 = 0;
      }
      __int16 v16 = v15 | v11;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      long long v14 = 0uLL;
      __int16 v16 = -256;
    }
    *(_OWORD *)a2 = v14;
    *(void *)(a2 + 16) = v9;
    *(void *)(a2 + 24) = v10;
    *(_WORD *)(a2 + 32) = v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D680B8@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t result = swift_conformsToProtocol2();
  if (result)
  {
    (*(void (**)(uint64_t *__return_ptr))(result + 8))(&v22);
    uint64_t v5 = v23;
    if (*(void *)(v23 + 16) && (unint64_t v6 = sub_1C8CA5D14(a1), (v7 & 1) != 0))
    {
      uint64_t v8 = *(void *)(v5 + 56) + 80 * v6;
      uint64_t v19 = *(void *)(v8 + 8);
      uint64_t v20 = *(void *)v8;
      uint64_t v17 = *(void *)(v8 + 24);
      uint64_t v18 = *(void *)(v8 + 16);
      long long v21 = *(_OWORD *)(v8 + 40);
      uint64_t v9 = *(void *)(v8 + 56);
      uint64_t v10 = *(void *)(v8 + 64);
      uint64_t v11 = *(unsigned __int8 *)(v8 + 72);
      int v12 = *(unsigned __int8 *)(v8 + 73);
      uint64_t v13 = *(unsigned __int16 *)(v8 + 32);
      sub_1C8CB5524(*(void *)v8, v19, v18, v17, v13);
      sub_1C8CA6050(v9, v10, v11, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1C8CA6050(v9, v10, v11, v12);
      sub_1C8CB554C(v20, v19, v18, v17, v13);
      uint64_t result = sub_1C8CA6AF4(v9, v10, v11, v12);
      long long v14 = v21;
      if (v12) {
        __int16 v15 = 256;
      }
      else {
        __int16 v15 = 0;
      }
      __int16 v16 = v15 | v11;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      long long v14 = 0uLL;
      __int16 v16 = -256;
    }
    *(_OWORD *)a2 = v14;
    *(void *)(a2 + 16) = v9;
    *(void *)(a2 + 24) = v10;
    *(_WORD *)(a2 + 32) = v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D68270@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t result = swift_conformsToProtocol2();
  if (result)
  {
    (*(void (**)(uint64_t *__return_ptr))(result + 8))(&v22);
    uint64_t v5 = v23;
    if (*(void *)(v23 + 16) && (unint64_t v6 = sub_1C8CA5D14(a1), (v7 & 1) != 0))
    {
      uint64_t v8 = *(void *)(v5 + 56) + 80 * v6;
      uint64_t v19 = *(void *)(v8 + 8);
      uint64_t v20 = *(void *)v8;
      uint64_t v17 = *(void *)(v8 + 24);
      uint64_t v18 = *(void *)(v8 + 16);
      long long v21 = *(_OWORD *)(v8 + 40);
      uint64_t v9 = *(void *)(v8 + 56);
      uint64_t v10 = *(void *)(v8 + 64);
      uint64_t v11 = *(unsigned __int8 *)(v8 + 72);
      int v12 = *(unsigned __int8 *)(v8 + 73);
      uint64_t v13 = *(unsigned __int16 *)(v8 + 32);
      sub_1C8CB5524(*(void *)v8, v19, v18, v17, v13);
      sub_1C8CA6050(v9, v10, v11, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1C8CA6050(v9, v10, v11, v12);
      sub_1C8CB554C(v20, v19, v18, v17, v13);
      uint64_t result = sub_1C8CA6AF4(v9, v10, v11, v12);
      long long v14 = v21;
      if (v12) {
        __int16 v15 = 256;
      }
      else {
        __int16 v15 = 0;
      }
      __int16 v16 = v15 | v11;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      long long v14 = 0uLL;
      __int16 v16 = -256;
    }
    *(_OWORD *)a2 = v14;
    *(void *)(a2 + 16) = v9;
    *(void *)(a2 + 24) = v10;
    *(_WORD *)(a2 + 32) = v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D68428@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t result = swift_conformsToProtocol2();
  if (result)
  {
    (*(void (**)(uint64_t *__return_ptr))(result + 8))(&v22);
    uint64_t v5 = v23;
    if (*(void *)(v23 + 16) && (unint64_t v6 = sub_1C8CA5D14(a1 + 1), (v7 & 1) != 0))
    {
      uint64_t v8 = *(void *)(v5 + 56) + 80 * v6;
      uint64_t v19 = *(void *)(v8 + 8);
      uint64_t v20 = *(void *)v8;
      uint64_t v17 = *(void *)(v8 + 24);
      uint64_t v18 = *(void *)(v8 + 16);
      long long v21 = *(_OWORD *)(v8 + 40);
      uint64_t v9 = *(void *)(v8 + 56);
      uint64_t v10 = *(void *)(v8 + 64);
      uint64_t v11 = *(unsigned __int8 *)(v8 + 72);
      int v12 = *(unsigned __int8 *)(v8 + 73);
      uint64_t v13 = *(unsigned __int16 *)(v8 + 32);
      sub_1C8CB5524(*(void *)v8, v19, v18, v17, v13);
      sub_1C8CA6050(v9, v10, v11, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1C8CA6050(v9, v10, v11, v12);
      sub_1C8CB554C(v20, v19, v18, v17, v13);
      uint64_t result = sub_1C8CA6AF4(v9, v10, v11, v12);
      long long v14 = v21;
      if (v12) {
        __int16 v15 = 256;
      }
      else {
        __int16 v15 = 0;
      }
      __int16 v16 = v15 | v11;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      long long v14 = 0uLL;
      __int16 v16 = -256;
    }
    *(_OWORD *)a2 = v14;
    *(void *)(a2 + 16) = v9;
    *(void *)(a2 + 24) = v10;
    *(_WORD *)(a2 + 32) = v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D685E4@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t result = swift_conformsToProtocol2();
  if (result)
  {
    (*(void (**)(uint64_t *__return_ptr))(result + 8))(&v22);
    uint64_t v5 = v23;
    if (*(void *)(v23 + 16) && (unint64_t v6 = sub_1C8CA5D14(a1 + 1), (v7 & 1) != 0))
    {
      uint64_t v8 = *(void *)(v5 + 56) + 80 * v6;
      uint64_t v19 = *(void *)(v8 + 8);
      uint64_t v20 = *(void *)v8;
      uint64_t v17 = *(void *)(v8 + 24);
      uint64_t v18 = *(void *)(v8 + 16);
      long long v21 = *(_OWORD *)(v8 + 40);
      uint64_t v9 = *(void *)(v8 + 56);
      uint64_t v10 = *(void *)(v8 + 64);
      uint64_t v11 = *(unsigned __int8 *)(v8 + 72);
      int v12 = *(unsigned __int8 *)(v8 + 73);
      uint64_t v13 = *(unsigned __int16 *)(v8 + 32);
      sub_1C8CB5524(*(void *)v8, v19, v18, v17, v13);
      sub_1C8CA6050(v9, v10, v11, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1C8CA6050(v9, v10, v11, v12);
      sub_1C8CB554C(v20, v19, v18, v17, v13);
      uint64_t result = sub_1C8CA6AF4(v9, v10, v11, v12);
      long long v14 = v21;
      if (v12) {
        __int16 v15 = 256;
      }
      else {
        __int16 v15 = 0;
      }
      __int16 v16 = v15 | v11;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      long long v14 = 0uLL;
      __int16 v16 = -256;
    }
    *(_OWORD *)a2 = v14;
    *(void *)(a2 + 16) = v9;
    *(void *)(a2 + 24) = v10;
    *(_WORD *)(a2 + 32) = v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D687A0@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t result = swift_conformsToProtocol2();
  if (result)
  {
    (*(void (**)(uint64_t *__return_ptr))(result + 8))(&v22);
    uint64_t v5 = v23;
    if (*(void *)(v23 + 16) && (unint64_t v6 = sub_1C8CA5D14(a1), (v7 & 1) != 0))
    {
      uint64_t v8 = *(void *)(v5 + 56) + 80 * v6;
      uint64_t v19 = *(void *)(v8 + 8);
      uint64_t v20 = *(void *)v8;
      uint64_t v17 = *(void *)(v8 + 24);
      uint64_t v18 = *(void *)(v8 + 16);
      long long v21 = *(_OWORD *)(v8 + 40);
      uint64_t v9 = *(void *)(v8 + 56);
      uint64_t v10 = *(void *)(v8 + 64);
      uint64_t v11 = *(unsigned __int8 *)(v8 + 72);
      int v12 = *(unsigned __int8 *)(v8 + 73);
      uint64_t v13 = *(unsigned __int16 *)(v8 + 32);
      sub_1C8CB5524(*(void *)v8, v19, v18, v17, v13);
      sub_1C8CA6050(v9, v10, v11, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1C8CA6050(v9, v10, v11, v12);
      sub_1C8CB554C(v20, v19, v18, v17, v13);
      uint64_t result = sub_1C8CA6AF4(v9, v10, v11, v12);
      long long v14 = v21;
      if (v12) {
        __int16 v15 = 256;
      }
      else {
        __int16 v15 = 0;
      }
      __int16 v16 = v15 | v11;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      long long v14 = 0uLL;
      __int16 v16 = -256;
    }
    *(_OWORD *)a2 = v14;
    *(void *)(a2 + 16) = v9;
    *(void *)(a2 + 24) = v10;
    *(_WORD *)(a2 + 32) = v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D68958(void *a1, void *a2)
{
  uint64_t v3 = v2;
  swift_beginAccess();
  unint64_t v6 = a1[3];
  uint64_t v7 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0) {
    uint64_t v7 = a1[2] & 0xFFFFFFFFFFFFLL;
  }
  if (v7)
  {
    sub_1C8D88850();
    swift_bridgeObjectRetain();
    sub_1C8D883C0();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t v8 = a1[4];
  if (*(void *)(v8 + 16))
  {
    sub_1C8D88850();
    uint64_t v9 = *(void *)(v8 + 16);
    if (v9)
    {
      uint64_t v41 = a1;
      uint64_t v48 = v2;
      uint64_t v10 = a2[8];
      uint64_t v11 = a2[6];
      uint64_t v40 = a2[7];
      int v12 = a2;
      uint64_t v13 = a2[5];
      uint64_t v15 = v12[3];
      uint64_t v14 = v12[4];
      uint64_t v17 = v12[1];
      uint64_t v16 = v12[2];
      uint64_t v42 = v12;
      uint64_t v43 = v10;
      uint64_t v18 = *v12;
      uint64_t v44 = v8;
      swift_bridgeObjectRetain_n();
      uint64_t v19 = v43;
      uint64_t v20 = v40;
      uint64_t v21 = 32;
      do
      {
        long long v22 = *(_OWORD *)(v44 + v21);
        long long v23 = *(_OWORD *)(v44 + v21 + 16);
        long long v24 = *(_OWORD *)(v44 + v21 + 48);
        v47[2] = *(_OWORD *)(v44 + v21 + 32);
        v47[3] = v24;
        v47[0] = v22;
        v47[1] = v23;
        long long v25 = *(_OWORD *)(v44 + v21 + 64);
        long long v26 = *(_OWORD *)(v44 + v21 + 80);
        long long v27 = *(_OWORD *)(v44 + v21 + 112);
        v47[6] = *(_OWORD *)(v44 + v21 + 96);
        v47[7] = v27;
        v47[4] = v25;
        v47[5] = v26;
        uint64_t v45 = v20;
        uint64_t v46 = v19;
        sub_1C8D80FBC((uint64_t)v47);
        uint64_t v28 = v48;
        sub_1C8CBE544();
        if (v28) {
          MEMORY[0x1CB7736A0](v28);
        }
        uint64_t v48 = 0;
        sub_1C8D81040((uint64_t)v47);
        uint64_t v20 = v45;
        v21 += 128;
        uint64_t v19 = v46;
        --v9;
      }
      while (v9);
      swift_bridgeObjectRelease();
      *uint64_t v42 = v18;
      v42[1] = v17;
      v42[2] = v16;
      v42[3] = v15;
      v42[4] = v14;
      v42[5] = v13;
      a2 = v42;
      v42[6] = v11;
      v42[7] = v45;
      v42[8] = v46;
      swift_bridgeObjectRelease();
      uint64_t v3 = v48;
      a1 = v41;
    }
  }
  swift_beginAccess();
  uint64_t v29 = a1[5];
  if (*(void *)(v29 + 16))
  {
    sub_1C8D88850();
    sub_1C8D88850();
    uint64_t v30 = *(void *)(v29 + 16);
    if (v30)
    {
      swift_bridgeObjectRetain();
      uint64_t v31 = v29 + 40;
      do
      {
        swift_bridgeObjectRetain();
        sub_1C8D883C0();
        swift_bridgeObjectRelease();
        v31 += 16;
        --v30;
      }
      while (v30);
      swift_bridgeObjectRelease();
    }
  }
  swift_beginAccess();
  if (!*(void *)(a1[6] + 16)
    || (v32 = swift_bridgeObjectRetain(), sub_1C8D19C00(v32), uint64_t result = swift_bridgeObjectRelease(), !v3))
  {
    swift_beginAccess();
    uint64_t v34 = a1[8];
    if (v34)
    {
      uint64_t v36 = a1[9];
      unint64_t v35 = a1[10];
      long long v37 = a1;
      uint64_t v38 = a1[7];
      sub_1C8D88850();
      swift_bridgeObjectRetain();
      sub_1C8CA3CF8(v36, v35);
      sub_1C8CBC9DC(a2, v38, v34, v36, v35);
      uint64_t v39 = v38;
      a1 = v37;
      sub_1C8CC1EF8(v39, v34, v36, v35);
    }
    uint64_t result = swift_beginAccess();
    if (a1[11])
    {
      sub_1C8D88850();
      return sub_1C8D88850();
    }
  }
  return result;
}

uint64_t sub_1C8D68CD8(uint64_t a1, char **a2)
{
  swift_beginAccess();
  uint64_t v6 = *(void *)(a1 + 16);
  unint64_t v5 = *(void *)(a1 + 24);
  uint64_t v7 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0) {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFLL;
  }
  if (v7)
  {
    swift_bridgeObjectRetain();
    sub_1C8CA5968(1uLL);
    sub_1C8CA6060((uint64_t)": ", 2, v8);
    sub_1C8CA6D2C(v6, v5);
    uint64_t v9 = *a2;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v9 = sub_1C8D5EB50(0, *((void *)v9 + 2) + 1, 1, v9);
      *a2 = v9;
    }
    unint64_t v12 = *((void *)v9 + 2);
    unint64_t v11 = *((void *)v9 + 3);
    if (v12 >= v11 >> 1) {
      uint64_t v9 = sub_1C8D5EB50((char *)(v11 > 1), v12 + 1, 1, v9);
    }
    *((void *)v9 + 2) = v12 + 1;
    v9[v12 + 32] = 10;
    *a2 = v9;
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (!*(void *)(*(void *)(a1 + 32) + 16)
    || (v13 = swift_bridgeObjectRetain(), sub_1C8D72E44(v13, 2uLL), uint64_t result = swift_bridgeObjectRelease(), !v2))
  {
    swift_beginAccess();
    if (!*(void *)(*(void *)(a1 + 40) + 16)
      || (v15 = swift_bridgeObjectRetain(), sub_1C8CA7564(v15, 3uLL), uint64_t result = swift_bridgeObjectRelease(), !v2))
    {
      swift_beginAccess();
      if (!*(void *)(*(void *)(a1 + 48) + 16)
        || (uint64_t v16 = swift_bridgeObjectRetain(),
            sub_1C8D7467C(v16, 4uLL, (uint64_t)&type metadata for Google_Protobuf_Option, (uint64_t (*)(uint64_t))sub_1C8CC23C8, (void (*)(uint64_t, void *))sub_1C8D6C1B0), uint64_t result = swift_bridgeObjectRelease(), !v2))
      {
        swift_beginAccess();
        unint64_t v17 = *(void *)(a1 + 64);
        if (!v17
          || (uint64_t result = sub_1C8D71204(*(void *)(a1 + 56), v17, *(void *)(a1 + 72), *(void *)(a1 + 80), 5uLL), !v2))
        {
          uint64_t result = swift_beginAccess();
          uint64_t v18 = *(void *)(a1 + 88);
          if (v18)
          {
            char v19 = *(unsigned char *)(a1 + 96);
            sub_1C8CA5968(6uLL);
            sub_1C8CA6060((uint64_t)": ", 2, v20);
            sub_1C8D70D50(v18, v19);
            uint64_t v21 = (uint64_t)*a2;
            uint64_t result = swift_isUniquelyReferenced_nonNull_native();
            *a2 = (char *)v21;
            if ((result & 1) == 0)
            {
              uint64_t result = (uint64_t)sub_1C8D5EB50(0, *(void *)(v21 + 16) + 1, 1, (char *)v21);
              uint64_t v21 = result;
              *a2 = (char *)result;
            }
            unint64_t v23 = *(void *)(v21 + 16);
            unint64_t v22 = *(void *)(v21 + 24);
            if (v23 >= v22 >> 1)
            {
              uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v22 > 1), v23 + 1, 1, (char *)v21);
              uint64_t v21 = result;
            }
            *(void *)(v21 + 16) = v23 + 1;
            *(unsigned char *)(v21 + v23 + 32) = 10;
            *a2 = (char *)v21;
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C8D68FF4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567A98);
  uint64_t v7 = sub_1C8D88360();
  sub_1C8D88400();
  sub_1C8D74B84(1, a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_Type, (uint64_t (*)(uint64_t))sub_1C8CC2BC4, (void (*)(uint64_t, long long *))sub_1C8D68CD8);
  swift_bridgeObjectRetain();
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C8D690E8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567A90);
  uint64_t v1 = sub_1C8D88360();
  sub_1C8D88400();
  sub_1C8D748E8(1);
  swift_bridgeObjectRetain();
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C8D691BC(uint64_t a1, unint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567A88);
  uint64_t v7 = sub_1C8D88360();
  sub_1C8D88400();
  sub_1C8D74B84(1, a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_Enum, (uint64_t (*)(uint64_t))sub_1C8CC2F14, (void (*)(uint64_t, long long *))sub_1C8D6BDA4);
  swift_bridgeObjectRetain();
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C8D692B0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567A80);
  uint64_t v1 = sub_1C8D88360();
  sub_1C8D88400();
  sub_1C8D750D4(1, (uint64_t)&type metadata for Google_Protobuf_EnumValue, (uint64_t (*)(uint64_t))sub_1C8CC30BC, (uint64_t)&unk_1F2357FB0, (void (*)(long long *))sub_1C8CC0A14);
  swift_bridgeObjectRetain();
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C8D693A8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567A78);
  uint64_t v7 = sub_1C8D88360();
  sub_1C8D88400();
  sub_1C8D74B84(1, a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_Option, (uint64_t (*)(uint64_t))sub_1C8CC23C8, (void (*)(uint64_t, long long *))sub_1C8D6C1B0);
  swift_bridgeObjectRetain();
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C8D6949C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567A70);
  uint64_t v7 = sub_1C8D88360();
  sub_1C8D88400();
  sub_1C8D74B84(1, a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_Api, (uint64_t (*)(uint64_t))sub_1C8CCABE0, (void (*)(uint64_t, long long *))sub_1C8D6C740);
  swift_bridgeObjectRetain();
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C8D69590()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567A68);
  uint64_t v1 = sub_1C8D88360();
  sub_1C8D88400();
  sub_1C8D74E38(1);
  swift_bridgeObjectRetain();
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C8D69664()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567A60);
  uint64_t v1 = sub_1C8D88360();
  sub_1C8D88400();
  sub_1C8D750D4(1, (uint64_t)&type metadata for Google_Protobuf_Mixin, (uint64_t (*)(uint64_t))sub_1C8CCAF6C, (uint64_t)&unk_1F2357F60, (void (*)(long long *))sub_1C8CC9E4C);
  swift_bridgeObjectRetain();
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C8D6975C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D6B9F8(a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_FileDescriptorSet, &qword_1EA567A58, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C8D7536C);
}

uint64_t sub_1C8D69784(uint64_t a1, unint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567A50);
  uint64_t v7 = sub_1C8D88360();
  sub_1C8D88400();
  sub_1C8D74B84(1, a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_FileDescriptorProto, (uint64_t (*)(uint64_t))sub_1C8D02DCC, (void (*)(uint64_t, long long *))sub_1C8D6CF9C);
  swift_bridgeObjectRetain();
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C8D69878(uint64_t a1, unint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567A48);
  uint64_t v7 = sub_1C8D88360();
  sub_1C8D88400();
  sub_1C8D74B84(1, a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_DescriptorProto, (uint64_t (*)(uint64_t))sub_1C8D04A08, (void (*)(uint64_t, long long *))sub_1C8D6D9E0);
  swift_bridgeObjectRetain();
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C8D6996C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567A40);
  uint64_t v7 = sub_1C8D88360();
  sub_1C8D88400();
  sub_1C8D75644(1, a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_DescriptorProto.ExtensionRange, (uint64_t (*)(uint64_t))sub_1C8D04BB0, (void (*)(long long *, uint64_t, unint64_t, uint64_t))sub_1C8CE75C8);
  swift_bridgeObjectRetain();
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C8D69A60(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  return sub_1C8D69DCC(a1, a2, a3, a4, (uint64_t)&type metadata for Google_Protobuf_DescriptorProto.ReservedRange, &qword_1EA567A38, (uint64_t (*)(uint64_t))sub_1C8D04D58);
}

uint64_t sub_1C8D69A90(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  return sub_1C8D6A390(a1, a2, a3, a4, (uint64_t)&type metadata for Google_Protobuf_ExtensionRangeOptions, &qword_1EA567A30, (uint64_t (*)(uint64_t))sub_1C8D02F04);
}

uint64_t sub_1C8D69AC0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567A28);
  uint64_t v7 = sub_1C8D88360();
  sub_1C8D88400();
  sub_1C8D74B84(1, a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_FieldDescriptorProto, (uint64_t (*)(uint64_t))sub_1C8D05054, (void (*)(uint64_t, long long *))sub_1C8D6E2E4);
  swift_bridgeObjectRetain();
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C8D69BB4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567A20);
  uint64_t v7 = sub_1C8D88360();
  sub_1C8D88400();
  sub_1C8D75644(1, a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_OneofDescriptorProto, (uint64_t (*)(uint64_t))sub_1C8D051FC, (void (*)(long long *, uint64_t, unint64_t, uint64_t))sub_1C8CEA3EC);
  swift_bridgeObjectRetain();
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C8D69CA8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567A18);
  uint64_t v7 = sub_1C8D88360();
  sub_1C8D88400();
  sub_1C8D74B84(1, a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_EnumDescriptorProto, (uint64_t (*)(uint64_t))sub_1C8D053A4, (void (*)(uint64_t, long long *))sub_1C8D6ECC8);
  swift_bridgeObjectRetain();
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C8D69D9C(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  return sub_1C8D69DCC(a1, a2, a3, a4, (uint64_t)&type metadata for Google_Protobuf_EnumDescriptorProto.EnumReservedRange, &qword_1EA567A10, (uint64_t (*)(uint64_t))sub_1C8D0554C);
}

uint64_t sub_1C8D69DCC(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t (*a7)(uint64_t))
{
  __swift_instantiateConcreteTypeFromMangledName(a6);
  uint64_t v14 = sub_1C8D88360();
  sub_1C8D88400();
  sub_1C8D758E0(1, a1, a2, a3 | ((HIDWORD(a3) & 1) << 32), a4 | ((unint64_t)(BYTE4(a4) & 1) << 32), a5, a7);
  swift_bridgeObjectRetain();
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1C8D69ED4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567A08);
  uint64_t v7 = sub_1C8D88360();
  sub_1C8D88400();
  sub_1C8D74B84(1, a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_EnumValueDescriptorProto, (uint64_t (*)(uint64_t))sub_1C8D056F4, (void (*)(uint64_t, long long *))sub_1C8D6EF8C);
  swift_bridgeObjectRetain();
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C8D69FC8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567A00);
  uint64_t v7 = sub_1C8D88360();
  sub_1C8D88400();
  sub_1C8D74B84(1, a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_ServiceDescriptorProto, (uint64_t (*)(uint64_t))sub_1C8D0589C, (void (*)(uint64_t, long long *))sub_1C8D6F33C);
  swift_bridgeObjectRetain();
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C8D6A0BC(uint64_t a1, unint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5679F8);
  uint64_t v7 = sub_1C8D88360();
  sub_1C8D88400();
  sub_1C8D74B84(1, a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_MethodDescriptorProto, (uint64_t (*)(uint64_t))sub_1C8D05A44, (void (*)(uint64_t, long long *))sub_1C8D6F7F8);
  swift_bridgeObjectRetain();
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C8D6A1B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8D6ADC4(a1, a2, a3, a4, (uint64_t)&type metadata for Google_Protobuf_FileOptions, &qword_1EA5679F0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C8D75BE0);
}

uint64_t sub_1C8D6A1D8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5679E8);
  uint64_t v1 = sub_1C8D88360();
  sub_1C8D88400();
  sub_1C8D75EBC(1);
  swift_bridgeObjectRetain();
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C8D6A29C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5679E0);
  uint64_t v1 = sub_1C8D88360();
  sub_1C8D88400();
  sub_1C8D762A0(1);
  swift_bridgeObjectRetain();
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C8D6A360(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  return sub_1C8D6A390(a1, a2, a3, a4, (uint64_t)&type metadata for Google_Protobuf_OneofOptions, &qword_1EA5679D8, (uint64_t (*)(uint64_t))sub_1C8D03888);
}

uint64_t sub_1C8D6A390(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t (*a7)(uint64_t))
{
  __swift_instantiateConcreteTypeFromMangledName(a6);
  uint64_t v14 = sub_1C8D88360();
  sub_1C8D88400();
  sub_1C8D7652C(1, a1, a2, a3, a4, a5, a7);
  swift_bridgeObjectRetain();
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1C8D6A47C()
{
  return sub_1C8D6A69C((uint64_t)&type metadata for Google_Protobuf_EnumOptions, &qword_1EA5679D0, (void (*)(uint64_t))sub_1C8D76814);
}

uint64_t sub_1C8D6A4A4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5679C8);
  uint64_t v1 = sub_1C8D88360();
  sub_1C8D88400();
  sub_1C8D76B68(1, (uint64_t)&type metadata for Google_Protobuf_EnumValueOptions, (uint64_t (*)(uint64_t))sub_1C8D03A64, (uint64_t)&unk_1F2357DF8, 1uLL);
  swift_bridgeObjectRetain();
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C8D6A58C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5679C0);
  uint64_t v1 = sub_1C8D88360();
  sub_1C8D88400();
  sub_1C8D76B68(1, (uint64_t)&type metadata for Google_Protobuf_ServiceOptions, (uint64_t (*)(uint64_t))sub_1C8D03AB8, (uint64_t)&unk_1F2357DD0, 0x21uLL);
  swift_bridgeObjectRetain();
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C8D6A674()
{
  return sub_1C8D6A69C((uint64_t)&type metadata for Google_Protobuf_MethodOptions, &qword_1EA5679B8, (void (*)(uint64_t))sub_1C8D76E7C);
}

uint64_t sub_1C8D6A69C(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t))
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v5 = sub_1C8D88360();
  sub_1C8D88400();
  a3(1);
  swift_bridgeObjectRetain();
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1C8D6A75C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5679B0);
  uint64_t v1 = sub_1C8D88360();
  sub_1C8D88400();
  sub_1C8D77108(1);
  swift_bridgeObjectRetain();
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C8D6A838()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5679A8);
  uint64_t v1 = sub_1C8D88360();
  sub_1C8D88400();
  sub_1C8D773AC(1);
  swift_bridgeObjectRetain();
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C8D6A8FC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5679A0);
  uint64_t v7 = sub_1C8D88360();
  sub_1C8D88400();
  sub_1C8D77784(1, a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_SourceCodeInfo, (uint64_t (*)(uint64_t))sub_1C8D06934, (void (*)(uint64_t, uint64_t))sub_1C8D73734);
  swift_bridgeObjectRetain();
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C8D6A9F0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567998);
  uint64_t v1 = sub_1C8D88360();
  sub_1C8D88400();
  sub_1C8D77A38(1);
  swift_bridgeObjectRetain();
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C8D6AABC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567990);
  uint64_t v7 = sub_1C8D88360();
  sub_1C8D88400();
  sub_1C8D77784(1, a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_GeneratedCodeInfo, (uint64_t (*)(uint64_t))sub_1C8D06C30, (void (*)(uint64_t, uint64_t))sub_1C8D74444);
  swift_bridgeObjectRetain();
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C8D6ABB0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567988);
  uint64_t v1 = sub_1C8D88360();
  sub_1C8D88400();
  sub_1C8D77CCC(1);
  swift_bridgeObjectRetain();
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C8D6AC7C(char a1, uint64_t a2, unint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567930);
  uint64_t v7 = sub_1C8D88360();
  sub_1C8D88400();
  sub_1C8D77F60(1, a1, a2, a3);
  swift_bridgeObjectRetain();
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C8D6AD44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D6B9F8(a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_FieldMask, &qword_1EA567918, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C8D78214);
}

uint64_t sub_1C8D6AD6C(unint64_t a1, int a2, uint64_t a3, unint64_t a4)
{
  return sub_1C8D6BAEC(a1, a2, a3, a4, (uint64_t)&type metadata for Google_Protobuf_Timestamp, &qword_1EA567978, (uint64_t (*)(uint64_t))sub_1C8D22778);
}

uint64_t sub_1C8D6AD9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8D6ADC4(a1, a2, a3, a4, (uint64_t)&type metadata for Google_Protobuf_BytesValue, &qword_1EA567920, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C8D78868);
}

uint64_t sub_1C8D6ADC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  __swift_instantiateConcreteTypeFromMangledName(a6);
  uint64_t v13 = sub_1C8D88360();
  sub_1C8D88400();
  a7(1, a1, a2, a3, a4);
  swift_bridgeObjectRetain();
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1C8D6AE98(uint64_t a1, unint64_t a2, float a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567958);
  uint64_t v7 = sub_1C8D88360();
  sub_1C8D88400();
  sub_1C8D78B1C(1, a1, a2, a3);
  swift_bridgeObjectRetain();
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C8D6AF60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D6B1BC(a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_Int32Value, &qword_1EA567940, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C8D78E64);
}

uint64_t sub_1C8D6AF88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D6B9F8(a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_Int64Value, &qword_1EA567950, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C8D79118);
}

uint64_t sub_1C8D6AFB0(uint64_t a1, unint64_t a2, double a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567960);
  uint64_t v7 = sub_1C8D88360();
  sub_1C8D88400();
  sub_1C8D794D0(1, a1, a2, a3);
  swift_bridgeObjectRetain();
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C8D6B078(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1C8D6B0A8(a1, a2, a3, a4, (uint64_t)&type metadata for Google_Protobuf_StringValue, &qword_1EA567928, (uint64_t (*)(uint64_t))sub_1C8D4A7D4);
}

uint64_t sub_1C8D6B0A8(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t *a6, uint64_t (*a7)(uint64_t))
{
  __swift_instantiateConcreteTypeFromMangledName(a6);
  uint64_t v14 = sub_1C8D88360();
  sub_1C8D88400();
  sub_1C8D79E8C(1, a1, a2, a3, a4, a5, a7);
  swift_bridgeObjectRetain();
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1C8D6B194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D6B1BC(a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_UInt32Value, &qword_1EA567938, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C8D79818);
}

uint64_t sub_1C8D6B1BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v11 = sub_1C8D88360();
  sub_1C8D88400();
  a6(1, a1, a2, a3);
  swift_bridgeObjectRetain();
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1C8D6B280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D6B9F8(a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_UInt64Value, &qword_1EA567948, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C8D79B54);
}

uint64_t sub_1C8D6B2A8(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1C8D6B0A8(a1, a2, a3, a4, (uint64_t)&type metadata for Google_Protobuf_SourceContext, &qword_1EA567980, (uint64_t (*)(uint64_t))sub_1C8CC4204);
}

ValueMetadata *sub_1C8D6B2D8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C8D88340();
  MEMORY[0x1F4188790](v6 - 8, v7);
  char v19 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v23 = &type metadata for Google_Protobuf_Any;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567968);
  unint64_t v23 = (ValueMetadata *)sub_1C8D88360();
  uint64_t v24 = v9;
  sub_1C8D88400();
  unint64_t v17 = (char *)v23;
  uint64_t v18 = v24;
  v22[3] = &type metadata for Google_Protobuf_Any;
  unint64_t v10 = sub_1C8CC415C();
  v22[0] = a1;
  v22[1] = a2;
  v22[4] = v10;
  v22[2] = a3;
  sub_1C8CA425C((uint64_t)v22, (uint64_t)v21);
  char v20 = 1;
  sub_1C8CA3CF8(a1, a2);
  swift_retain();
  sub_1C8CA42C0((uint64_t)v21, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], &v20, (uint64_t)&v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  sub_1C8CA3CF8(a1, a2);
  swift_retain();
  sub_1C8D634A0((char **)&v23);
  sub_1C8CA3D5C(a1, a2);
  swift_release();
  uint64_t v11 = v25;
  uint64_t v12 = v26;
  v22[0] = v23;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C8CA463C(v11);
  swift_bridgeObjectRetain();
  v16[1] = v12;
  swift_bridgeObjectRetain();
  sub_1C8D88330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
  sub_1C8D676FC((unint64_t *)&qword_1EBCB2CF0, &qword_1EBCB2CE8);
  sub_1C8D88310();
  uint64_t v14 = v13;
  uint64_t result = (ValueMetadata *)swift_bridgeObjectRelease();
  if (v14)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v23 = (ValueMetadata *)v17;
    uint64_t v24 = v18;
    swift_bridgeObjectRetain();
    sub_1C8D88400();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v23;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D6B5F0(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_1C8D88340();
  MEMORY[0x1F4188790](v4 - 8, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567970);
  *(void *)&long long v15 = sub_1C8D88360();
  *((void *)&v15 + 1) = v6;
  sub_1C8D88400();
  long long v11 = v15;
  v14[3] = &type metadata for Google_Protobuf_Empty;
  void v14[4] = sub_1C8D41BCC();
  v14[0] = a1;
  v14[1] = a2;
  sub_1C8CA425C((uint64_t)v14, (uint64_t)v13);
  char v12 = 1;
  sub_1C8CA3CF8(a1, a2);
  sub_1C8CA42C0((uint64_t)v13, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], &v12, (uint64_t)&v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  sub_1C8CA3CF8(a1, a2);
  sub_1C8D2D968((uint64_t)&v15, a1, a2);
  sub_1C8CA3D5C(a1, a2);
  uint64_t v7 = v16;
  v14[0] = v15;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C8CA463C(v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8D88330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
  sub_1C8D676FC((unint64_t *)&qword_1EBCB2CF0, &qword_1EBCB2CE8);
  sub_1C8D88310();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  if (v9)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v15 = v11;
    swift_bridgeObjectRetain();
    sub_1C8D88400();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v15;
  }
  else
  {
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D6B904(uint64_t a1, unint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567900);
  uint64_t v7 = sub_1C8D88360();
  sub_1C8D88400();
  sub_1C8D74B84(1, a1, a2, a3, (uint64_t)&type metadata for Google_Protobuf_Value, (uint64_t (*)(uint64_t))sub_1C8D4CB88, (void (*)(uint64_t, long long *))sub_1C8D7D738);
  swift_bridgeObjectRetain();
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C8D6B9F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v11 = sub_1C8D88360();
  sub_1C8D88400();
  a6(1, a1, a2, a3);
  swift_bridgeObjectRetain();
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1C8D6BABC(unint64_t a1, int a2, uint64_t a3, unint64_t a4)
{
  return sub_1C8D6BAEC(a1, a2, a3, a4, (uint64_t)&type metadata for Google_Protobuf_Duration, &qword_1EA567910, (uint64_t (*)(uint64_t))sub_1C8D4CA8C);
}

uint64_t sub_1C8D6BAEC(unint64_t a1, int a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t *a6, uint64_t (*a7)(uint64_t))
{
  __swift_instantiateConcreteTypeFromMangledName(a6);
  uint64_t v14 = sub_1C8D88360();
  sub_1C8D88400();
  sub_1C8D7A3E8(1, a1, a2, a3, a4, a5, a7);
  swift_bridgeObjectRetain();
  sub_1C8D88400();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1C8D6BBD8(void *a1, uint64_t a2)
{
  swift_beginAccess();
  unint64_t v5 = a1[3];
  uint64_t v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0) {
    uint64_t v6 = a1[2] & 0xFFFFFFFFFFFFLL;
  }
  if (v6)
  {
    sub_1C8D88850();
    swift_bridgeObjectRetain();
    sub_1C8D883C0();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (!*(void *)(a1[4] + 16)
    || (v7 = swift_bridgeObjectRetain(), sub_1C8D19ED4(v7), uint64_t result = swift_bridgeObjectRelease(), !v2))
  {
    swift_beginAccess();
    if (!*(void *)(a1[5] + 16)
      || (v9 = swift_bridgeObjectRetain(), sub_1C8D19C00(v9), uint64_t result = swift_bridgeObjectRelease(), !v2))
    {
      swift_beginAccess();
      uint64_t v10 = a1[7];
      if (v10)
      {
        uint64_t v12 = a1[8];
        unint64_t v11 = a1[9];
        uint64_t v13 = a1[6];
        sub_1C8D88850();
        swift_bridgeObjectRetain();
        sub_1C8CA3CF8(v12, v11);
        sub_1C8CBC9DC(a2, v13, v10, v12, v11);
        sub_1C8CC1EF8(v13, v10, v12, v11);
      }
      uint64_t result = swift_beginAccess();
      if (a1[10])
      {
        sub_1C8D88850();
        return sub_1C8D88850();
      }
    }
  }
  return result;
}

uint64_t sub_1C8D6BDA4(uint64_t a1, char **a2)
{
  swift_beginAccess();
  uint64_t v6 = *(void *)(a1 + 16);
  unint64_t v5 = *(void *)(a1 + 24);
  uint64_t v7 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0) {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFLL;
  }
  if (v7)
  {
    swift_bridgeObjectRetain();
    sub_1C8CA5968(1uLL);
    sub_1C8CA6060((uint64_t)": ", 2, v8);
    sub_1C8CA6D2C(v6, v5);
    uint64_t v9 = *a2;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v9 = sub_1C8D5EB50(0, *((void *)v9 + 2) + 1, 1, v9);
      *a2 = v9;
    }
    unint64_t v12 = *((void *)v9 + 2);
    unint64_t v11 = *((void *)v9 + 3);
    if (v12 >= v11 >> 1) {
      uint64_t v9 = sub_1C8D5EB50((char *)(v11 > 1), v12 + 1, 1, v9);
    }
    *((void *)v9 + 2) = v12 + 1;
    v9[v12 + 32] = 10;
    *a2 = v9;
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (!*(void *)(*(void *)(a1 + 32) + 16)
    || (v13 = swift_bridgeObjectRetain(), sub_1C8D73094(v13, 2uLL), uint64_t result = swift_bridgeObjectRelease(), !v2))
  {
    swift_beginAccess();
    if (!*(void *)(*(void *)(a1 + 40) + 16)
      || (uint64_t v15 = swift_bridgeObjectRetain(),
          sub_1C8D7467C(v15, 3uLL, (uint64_t)&type metadata for Google_Protobuf_Option, (uint64_t (*)(uint64_t))sub_1C8CC23C8, (void (*)(uint64_t, void *))sub_1C8D6C1B0), uint64_t result = swift_bridgeObjectRelease(), !v2))
    {
      swift_beginAccess();
      unint64_t v16 = *(void *)(a1 + 56);
      if (!v16
        || (uint64_t result = sub_1C8D71204(*(void *)(a1 + 48), v16, *(void *)(a1 + 64), *(void *)(a1 + 72), 4uLL), !v2))
      {
        uint64_t result = swift_beginAccess();
        uint64_t v17 = *(void *)(a1 + 80);
        if (v17)
        {
          char v18 = *(unsigned char *)(a1 + 88);
          sub_1C8CA5968(5uLL);
          sub_1C8CA6060((uint64_t)": ", 2, v19);
          sub_1C8D70D50(v17, v18);
          uint64_t v20 = (uint64_t)*a2;
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          *a2 = (char *)v20;
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_1C8D5EB50(0, *(void *)(v20 + 16) + 1, 1, (char *)v20);
            uint64_t v20 = result;
            *a2 = (char *)result;
          }
          unint64_t v22 = *(void *)(v20 + 16);
          unint64_t v21 = *(void *)(v20 + 24);
          if (v22 >= v21 >> 1)
          {
            uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v21 > 1), v22 + 1, 1, (char *)v20);
            uint64_t v20 = result;
          }
          *(void *)(v20 + 16) = v22 + 1;
          *(unsigned char *)(v20 + v22 + 32) = 10;
          *a2 = (char *)v20;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C8D6C07C(void *a1)
{
  swift_beginAccess();
  unint64_t v2 = a1[3];
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = a1[2] & 0xFFFFFFFFFFFFLL;
  }
  if (v3)
  {
    sub_1C8D88850();
    swift_bridgeObjectRetain();
    sub_1C8D883C0();
    swift_bridgeObjectRelease();
  }
  uint64_t result = swift_beginAccess();
  uint64_t v5 = a1[6];
  if (v5)
  {
    uint64_t v7 = a1[4];
    unint64_t v6 = a1[5];
    sub_1C8D88850();
    uint64_t result = swift_beginAccess();
    unint64_t v8 = *(void *)(v5 + 24);
    uint64_t v9 = HIBYTE(v8) & 0xF;
    if ((v8 & 0x2000000000000000) == 0) {
      uint64_t v9 = *(void *)(v5 + 16) & 0xFFFFFFFFFFFFLL;
    }
    if (v9)
    {
      sub_1C8CC1F8C(v7, v6, v5);
      swift_bridgeObjectRetain();
      sub_1C8D883C0();
      swift_bridgeObjectRelease();
      return sub_1C8CB6084(v7, v6, v5);
    }
  }
  return result;
}

uint64_t sub_1C8D6C1B0(void *a1, char **a2)
{
  swift_beginAccess();
  uint64_t v5 = a1[2];
  unint64_t v4 = a1[3];
  uint64_t v6 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    uint64_t v6 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v6)
  {
    swift_bridgeObjectRetain();
    sub_1C8CA5968(1uLL);
    sub_1C8CA6060((uint64_t)": ", 2, v7);
    sub_1C8CA6D2C(v5, v4);
    unint64_t v8 = *a2;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v8;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v8 = sub_1C8D5EB50(0, *((void *)v8 + 2) + 1, 1, v8);
      *a2 = v8;
    }
    unint64_t v11 = *((void *)v8 + 2);
    unint64_t v10 = *((void *)v8 + 3);
    if (v11 >= v10 >> 1) {
      unint64_t v8 = sub_1C8D5EB50((char *)(v10 > 1), v11 + 1, 1, v8);
    }
    *((void *)v8 + 2) = v11 + 1;
    v8[v11 + 32] = 10;
    *a2 = v8;
    swift_bridgeObjectRelease();
  }
  uint64_t result = swift_beginAccess();
  uint64_t v13 = a1[6];
  if (v13)
  {
    unint64_t v16 = a1 + 4;
    uint64_t v14 = a1[4];
    unint64_t v15 = v16[1];
    sub_1C8CA3CF8(v14, v15);
    swift_retain();
    sub_1C8D713D8(v14, v15, v13, 2uLL);
    return sub_1C8CB6084(v14, v15, v13);
  }
  return result;
}

uint64_t Google_Protobuf_Value.init()@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_1C8D8AD80;
  type metadata accessor for Google_Protobuf_Value._StorageClass();
  uint64_t result = swift_initStaticObject();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for Google_Protobuf_Value._StorageClass()
{
  return self;
}

double Google_Protobuf_ListValue.init()@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = MEMORY[0x1E4FBC860];
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C8D8AD80;
  return result;
}

uint64_t sub_1C8D6C3BC(void *a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  swift_beginAccess();
  unint64_t v6 = a1[3];
  uint64_t v7 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0) {
    uint64_t v7 = a1[2] & 0xFFFFFFFFFFFFLL;
  }
  if (v7)
  {
    sub_1C8D88850();
    swift_bridgeObjectRetain();
    sub_1C8D883C0();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t v8 = a1[4];
  if (*(void *)(v8 + 16))
  {
    sub_1C8D88850();
    uint64_t v9 = *(void *)(v8 + 16);
    if (v9)
    {
      uint64_t v36 = a1;
      uint64_t v45 = v2;
      uint64_t v37 = a2[7];
      uint64_t v38 = a2[8];
      uint64_t v10 = a2[5];
      uint64_t v35 = a2[6];
      uint64_t v11 = a2[3];
      uint64_t v12 = a2[4];
      uint64_t v13 = a2[1];
      uint64_t v14 = a2[2];
      uint64_t v15 = *a2;
      uint64_t v39 = v8;
      swift_bridgeObjectRetain_n();
      uint64_t v16 = v35;
      uint64_t v17 = v37;
      uint64_t v18 = v38;
      uint64_t v19 = 32;
      do
      {
        long long v20 = *(_OWORD *)(v39 + v19);
        long long v21 = *(_OWORD *)(v39 + v19 + 32);
        v43[1] = *(_OWORD *)(v39 + v19 + 16);
        v43[2] = v21;
        v43[0] = v20;
        long long v22 = *(_OWORD *)(v39 + v19 + 48);
        long long v23 = *(_OWORD *)(v39 + v19 + 64);
        long long v24 = *(_OWORD *)(v39 + v19 + 80);
        uint64_t v44 = *(void *)(v39 + v19 + 96);
        v43[4] = v23;
        v43[5] = v24;
        void v43[3] = v22;
        uint64_t v40 = v16;
        uint64_t v41 = v17;
        uint64_t v42 = v18;
        sub_1C8D80D90((uint64_t)v43);
        uint64_t v25 = v45;
        sub_1C8CC8F0C();
        if (v25) {
          MEMORY[0x1CB7736A0](v25);
        }
        uint64_t v45 = 0;
        sub_1C8D80E00((uint64_t)v43);
        uint64_t v16 = v40;
        uint64_t v17 = v41;
        v19 += 104;
        uint64_t v18 = v42;
        --v9;
      }
      while (v9);
      swift_bridgeObjectRelease();
      *a2 = v15;
      a2[1] = v13;
      a2[2] = v14;
      a2[3] = v11;
      a2[4] = v12;
      a2[5] = v10;
      a2[6] = v40;
      a2[7] = v41;
      a2[8] = v42;
      swift_bridgeObjectRelease();
      uint64_t v3 = v45;
      a1 = v36;
    }
  }
  swift_beginAccess();
  if (!*(void *)(a1[5] + 16)
    || (v26 = swift_bridgeObjectRetain(), sub_1C8D19C00(v26), uint64_t result = swift_bridgeObjectRelease(), !v3))
  {
    swift_beginAccess();
    unint64_t v28 = a1[7];
    uint64_t v29 = HIBYTE(v28) & 0xF;
    if ((v28 & 0x2000000000000000) == 0) {
      uint64_t v29 = a1[6] & 0xFFFFFFFFFFFFLL;
    }
    if (v29)
    {
      sub_1C8D88850();
      swift_bridgeObjectRetain();
      sub_1C8D883C0();
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    uint64_t v30 = a1[9];
    if (v30)
    {
      uint64_t v32 = a1[10];
      unint64_t v31 = a1[11];
      uint64_t v33 = a1[8];
      sub_1C8D88850();
      swift_bridgeObjectRetain();
      sub_1C8CA3CF8(v32, v31);
      sub_1C8CBC9DC(a2, v33, v30, v32, v31);
      sub_1C8CC1EF8(v33, v30, v32, v31);
    }
    swift_beginAccess();
    if (!*(void *)(a1[12] + 16)
      || (v34 = swift_bridgeObjectRetain(), sub_1C8D1A3A0(v34), uint64_t result = swift_bridgeObjectRelease(), !v3))
    {
      uint64_t result = swift_beginAccess();
      if (a1[13])
      {
        sub_1C8D88850();
        return sub_1C8D88850();
      }
    }
  }
  return result;
}

uint64_t sub_1C8D6C740(uint64_t a1, char **a2)
{
  swift_beginAccess();
  uint64_t v6 = *(void *)(a1 + 16);
  unint64_t v5 = *(void *)(a1 + 24);
  uint64_t v7 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0) {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFLL;
  }
  if (v7)
  {
    swift_bridgeObjectRetain();
    sub_1C8CA5968(1uLL);
    sub_1C8CA6060((uint64_t)": ", 2, v8);
    sub_1C8CA6D2C(v6, v5);
    uint64_t v9 = *a2;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v9 = sub_1C8D5EB50(0, *((void *)v9 + 2) + 1, 1, v9);
      *a2 = v9;
    }
    unint64_t v12 = *((void *)v9 + 2);
    unint64_t v11 = *((void *)v9 + 3);
    if (v12 >= v11 >> 1) {
      uint64_t v9 = sub_1C8D5EB50((char *)(v11 > 1), v12 + 1, 1, v9);
    }
    *((void *)v9 + 2) = v12 + 1;
    v9[v12 + 32] = 10;
    *a2 = v9;
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (!*(void *)(*(void *)(a1 + 32) + 16)
    || (v13 = swift_bridgeObjectRetain(), sub_1C8D734E4(v13, 2uLL), uint64_t result = swift_bridgeObjectRelease(), !v2))
  {
    swift_beginAccess();
    if (!*(void *)(*(void *)(a1 + 40) + 16)
      || (uint64_t v15 = swift_bridgeObjectRetain(),
          sub_1C8D7467C(v15, 3uLL, (uint64_t)&type metadata for Google_Protobuf_Option, (uint64_t (*)(uint64_t))sub_1C8CC23C8, (void (*)(uint64_t, void *))sub_1C8D6C1B0), uint64_t result = swift_bridgeObjectRelease(), !v2))
    {
      swift_beginAccess();
      uint64_t v17 = *(void *)(a1 + 48);
      unint64_t v16 = *(void *)(a1 + 56);
      uint64_t v18 = HIBYTE(v16) & 0xF;
      if ((v16 & 0x2000000000000000) == 0) {
        uint64_t v18 = v17 & 0xFFFFFFFFFFFFLL;
      }
      if (v18)
      {
        swift_bridgeObjectRetain();
        sub_1C8CA5968(4uLL);
        sub_1C8CA6060((uint64_t)": ", 2, v19);
        sub_1C8CA6D2C(v17, v16);
        long long v20 = *a2;
        char v21 = swift_isUniquelyReferenced_nonNull_native();
        *a2 = v20;
        if ((v21 & 1) == 0)
        {
          long long v20 = sub_1C8D5EB50(0, *((void *)v20 + 2) + 1, 1, v20);
          *a2 = v20;
        }
        unint64_t v23 = *((void *)v20 + 2);
        unint64_t v22 = *((void *)v20 + 3);
        if (v23 >= v22 >> 1) {
          long long v20 = sub_1C8D5EB50((char *)(v22 > 1), v23 + 1, 1, v20);
        }
        *((void *)v20 + 2) = v23 + 1;
        v20[v23 + 32] = 10;
        *a2 = v20;
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      unint64_t v24 = *(void *)(a1 + 72);
      if (!v24
        || (uint64_t result = sub_1C8D71204(*(void *)(a1 + 64), v24, *(void *)(a1 + 80), *(void *)(a1 + 88), 5uLL), !v2))
      {
        swift_beginAccess();
        if (!*(void *)(*(void *)(a1 + 96) + 16)
          || (v25 = swift_bridgeObjectRetain(), sub_1C8D732BC(v25, 6uLL), uint64_t result = swift_bridgeObjectRelease(), !v2))
        {
          uint64_t result = swift_beginAccess();
          uint64_t v26 = *(void *)(a1 + 104);
          if (v26)
          {
            char v27 = *(unsigned char *)(a1 + 112);
            sub_1C8CA5968(7uLL);
            sub_1C8CA6060((uint64_t)": ", 2, v28);
            sub_1C8D70D50(v26, v27);
            uint64_t v29 = (uint64_t)*a2;
            uint64_t result = swift_isUniquelyReferenced_nonNull_native();
            *a2 = (char *)v29;
            if ((result & 1) == 0)
            {
              uint64_t result = (uint64_t)sub_1C8D5EB50(0, *(void *)(v29 + 16) + 1, 1, (char *)v29);
              uint64_t v29 = result;
              *a2 = (char *)result;
            }
            unint64_t v31 = *(void *)(v29 + 16);
            unint64_t v30 = *(void *)(v29 + 24);
            if (v31 >= v30 >> 1)
            {
              uint64_t result = (uint64_t)sub_1C8D5EB50((char *)(v30 > 1), v31 + 1, 1, (char *)v29);
              uint64_t v29 = result;
            }
            *(void *)(v29 + 16) = v31 + 1;
            *(unsigned char *)(v29 + v31 + 32) = 10;
            *a2 = (char *)v29;
          }
        }
      }
    }
  }
  return result;
}

double Google_Protobuf_Struct.init()@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_1C8D845B8(MEMORY[0x1E4FBC860]);
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C8D8AD80;
  return result;
}

uint64_t sub_1C8D6CB74(void *a1, long long *a2)
{
  swift_beginAccess();
  if (a1[3])
  {
    sub_1C8D88850();
    swift_bridgeObjectRetain();
    sub_1C8D883C0();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (a1[5])
  {
    sub_1C8D88850();
    swift_bridgeObjectRetain();
    sub_1C8D883C0();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t v5 = a1[6];
  if (*(void *)(v5 + 16))
  {
    sub_1C8D88850();
    sub_1C8D88850();
    uint64_t v6 = *(void *)(v5 + 16);
    if (v6)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = v5 + 40;
      do
      {
        swift_bridgeObjectRetain();
        sub_1C8D883C0();
        swift_bridgeObjectRelease();
        v7 += 16;
        --v6;
      }
      while (v6);
      swift_bridgeObjectRelease();
    }
  }
  swift_beginAccess();
  if (!*(void *)(a1[9] + 16)
    || (v8 = swift_bridgeObjectRetain(), sub_1C8D1C024(v8, 4), uint64_t result = swift_bridgeObjectRelease(), !v2))
  {
    swift_beginAccess();
    if (!*(void *)(a1[10] + 16)
      || (v10 = swift_bridgeObjectRetain(), sub_1C8D1BBBC(v10, 5), uint64_t result = swift_bridgeObjectRelease(), !v2))
    {
      swift_beginAccess();
      if (!*(void *)(a1[11] + 16)
        || (v11 = swift_bridgeObjectRetain(), sub_1C8D1B31C(v11), uint64_t result = swift_bridgeObjectRelease(), !v2))
      {
        swift_beginAccess();
        if (!*(void *)(a1[12] + 16)
          || (v12 = swift_bridgeObjectRetain(), sub_1C8D1B2F0(v12, 7), uint64_t result = swift_bridgeObjectRelease(), !v2))
        {
          swift_beginAccess();
          uint64_t v13 = a1[15];
          if (v13)
          {
            uint64_t v14 = a1[16];
            uint64_t v16 = a1[13];
            unint64_t v15 = a1[14];
            sub_1C8D88850();
            sub_1C8CA3CF8(v16, v15);
            swift_bridgeObjectRetain();
            swift_retain();
            sub_1C8CBD040(a2, v16, v15, v13, v14);
            sub_1C8CEF5AC(v16, v15, v13);
          }
          swift_beginAccess();
          uint64_t v17 = a1[17];
          if (v17)
          {
            uint64_t v19 = a1[18];
            unint64_t v18 = a1[19];
            sub_1C8D88850();
            swift_bridgeObjectRetain();
            sub_1C8CA3CF8(v19, v18);
            sub_1C8CBCC04(a2, v17, v19, v18);
            sub_1C8CEF640(v17, v19, v18);
          }
          swift_beginAccess();
          uint64_t v20 = a1[7];
          if (*(void *)(v20 + 16))
          {
            sub_1C8D88850();
            sub_1C8D88850();
            uint64_t v21 = *(void *)(v20 + 16);
            if (v21)
            {
              uint64_t v22 = v20 + 32;
              do
              {
                v22 += 4;
                sub_1C8D88870();
                --v21;
              }
              while (v21);
            }
          }
          swift_beginAccess();
          uint64_t v23 = a1[8];
          if (*(void *)(v23 + 16))
          {
            sub_1C8D88850();
            sub_1C8D88850();
            uint64_t v24 = *(void *)(v23 + 16);
            if (v24)
            {
              uint64_t v25 = v23 + 32;
              do
              {
                v25 += 4;
                sub_1C8D88870();
                --v24;
              }
              while (v24);
            }
          }
          uint64_t result = swift_beginAccess();
          if (a1[21])
          {
            sub_1C8D88850();
            swift_bridgeObjectRetain();
            sub_1C8D883C0();
            return swift_bridgeObjectRelease();
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C8D6CF9C(void *a1, char **a2)
{
  uint64_t v5 = a1 + 2;
  swift_beginAccess();
  unint64_t v6 = a1[3];
  if (v6)
  {
    uint64_t v7 = *v5;
    swift_bridgeObjectRetain();
    sub_1C8CA5968(1uLL);
    sub_1C8CA6060((uint64_t)": ", 2, v8);
    sub_1C8CA6D2C(v7, v6);
    uint64_t v9 = *a2;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v9 = sub_1C8D5EB50(0, *((void *)v9 + 2) + 1, 1, v9);
      *a2 = v9;
    }
    unint64_t v12 = *((void *)v9 + 2);
    unint64_t v11 = *((void *)v9 + 3);
    if (v12 >= v11 >> 1) {
      uint64_t v9 = sub_1C8D5EB50((char *)(v11 > 1), v12 + 1, 1, v9);
    }
    *((void *)v9 + 2) = v12 + 1;
    v9[v12 + 32] = 10;
    *a2 = v9;
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  unint64_t v13 = a1[5];
  if (v13)
  {
    uint64_t v14 = a1[4];
    swift_bridgeObjectRetain();
    sub_1C8CA5968(2uLL);
    sub_1C8CA6060((uint64_t)": ", 2, v15);
    sub_1C8CA6D2C(v14, v13);
    uint64_t v16 = *a2;
    char v17 = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v16;
    if ((v17 & 1) == 0)
    {
      uint64_t v16 = sub_1C8D5EB50(0, *((void *)v16 + 2) + 1, 1, v16);
      *a2 = v16;
    }
    unint64_t v19 = *((void *)v16 + 2);
    unint64_t v18 = *((void *)v16 + 3);
    if (v19 >= v18 >> 1) {
      uint64_t v16 = sub_1C8D5EB50((char *)(v18 > 1), v19 + 1, 1, v16);
    }
    *((void *)v16 + 2) = v19 + 1;
    v16[v19 + 32] = 10;
    *a2 = v16;
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*(void *)(a1[6] + 16))
  {
    uint64_t v20 = swift_bridgeObjectRetain();
    sub_1C8CA7564(v20, 3uLL);
    if (v2) {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (!*(void *)(a1[9] + 16)
    || (uint64_t v22 = swift_bridgeObjectRetain(),
        sub_1C8D7467C(v22, 4uLL, (uint64_t)&type metadata for Google_Protobuf_DescriptorProto, (uint64_t (*)(uint64_t))sub_1C8D04A08, (void (*)(uint64_t, void *))sub_1C8D6D9E0), uint64_t result = swift_bridgeObjectRelease(), !v2))
  {
    swift_beginAccess();
    if (!*(void *)(a1[10] + 16)
      || (uint64_t v23 = swift_bridgeObjectRetain(),
          sub_1C8D7467C(v23, 5uLL, (uint64_t)&type metadata for Google_Protobuf_EnumDescriptorProto, (uint64_t (*)(uint64_t))sub_1C8D053A4, (void (*)(uint64_t, void *))sub_1C8D6ECC8), uint64_t result = swift_bridgeObjectRelease(), !v2))
    {
      swift_beginAccess();
      if (!*(void *)(a1[11] + 16)
        || (uint64_t v24 = swift_bridgeObjectRetain(),
            sub_1C8D7467C(v24, 6uLL, (uint64_t)&type metadata for Google_Protobuf_ServiceDescriptorProto, (uint64_t (*)(uint64_t))sub_1C8D0589C, (void (*)(uint64_t, void *))sub_1C8D6F33C), uint64_t result = swift_bridgeObjectRelease(), !v2))
      {
        swift_beginAccess();
        if (!*(void *)(a1[12] + 16)
          || (uint64_t v25 = swift_bridgeObjectRetain(),
              sub_1C8D7467C(v25, 7uLL, (uint64_t)&type metadata for Google_Protobuf_FieldDescriptorProto, (uint64_t (*)(uint64_t))sub_1C8D05054, (void (*)(uint64_t, void *))sub_1C8D6E2E4), uint64_t result = swift_bridgeObjectRelease(), !v2))
        {
          swift_beginAccess();
          uint64_t v26 = a1[15];
          if (!v26) {
            goto LABEL_41;
          }
          uint64_t v27 = a1[16];
          uint64_t v29 = a1[13];
          unint64_t v28 = a1[14];
          sub_1C8CA3CF8(v29, v28);
          swift_bridgeObjectRetain();
          swift_retain();
          sub_1C8D717C4(v29, v28, v26, v27, 8uLL);
          uint64_t result = sub_1C8CEF5AC(v29, v28, v26);
          if (!v2)
          {
LABEL_41:
            swift_beginAccess();
            uint64_t v30 = a1[17];
            if (!v30
              || (uint64_t v32 = a1[18],
                  unint64_t v31 = a1[19],
                  swift_bridgeObjectRetain(),
                  sub_1C8CA3CF8(v32, v31),
                  sub_1C8D715E8(v30, v32, v31, 9uLL),
                  uint64_t result = sub_1C8CEF640(v30, v32, v31),
                  !v2))
            {
              swift_beginAccess();
              if (!*(void *)(a1[7] + 16)
                || (uint64_t v33 = swift_bridgeObjectRetain(),
                    sub_1C8D2EAE8(v33, 0xAuLL),
                    uint64_t result = swift_bridgeObjectRelease(),
                    !v2))
              {
                swift_beginAccess();
                if (!*(void *)(a1[8] + 16)
                  || (uint64_t v34 = swift_bridgeObjectRetain(),
                      sub_1C8D2EAE8(v34, 0xBuLL),
                      uint64_t result = swift_bridgeObjectRelease(),
                      !v2))
                {
                  uint64_t v35 = a1 + 20;
                  uint64_t result = swift_beginAccess();
                  unint64_t v36 = a1[21];
                  if (v36)
                  {
                    uint64_t v37 = *v35;
                    swift_bridgeObjectRetain();
                    sub_1C8CA5968(0xCuLL);
                    sub_1C8CA6060((uint64_t)": ", 2, v38);
                    sub_1C8CA6D2C(v37, v36);
                    uint64_t v39 = *a2;
                    char v40 = swift_isUniquelyReferenced_nonNull_native();
                    *a2 = v39;
                    if ((v40 & 1) == 0)
                    {
                      uint64_t v39 = sub_1C8D5EB50(0, *((void *)v39 + 2) + 1, 1, v39);
                      *a2 = v39;
                    }
                    unint64_t v42 = *((void *)v39 + 2);
                    unint64_t v41 = *((void *)v39 + 3);
                    if (v42 >= v41 >> 1) {
                      uint64_t v39 = sub_1C8D5EB50((char *)(v41 > 1), v42 + 1, 1, v39);
                    }
                    *((void *)v39 + 2) = v42 + 1;
                    v39[v42 + 32] = 10;
                    *a2 = v39;
                    return swift_bridgeObjectRelease();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C8D6D5E4(uint64_t a1, long long *a2)
{
  uint64_t v3 = v2;
  swift_beginAccess();
  if (*(void *)(a1 + 24))
  {
    sub_1C8D88850();
    swift_bridgeObjectRetain();
    sub_1C8D883C0();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (!*(void *)(*(void *)(a1 + 32) + 16)
    || (v6 = swift_bridgeObjectRetain(), sub_1C8D1B2F0(v6, 2), uint64_t result = swift_bridgeObjectRelease(), !v2))
  {
    swift_beginAccess();
    if (!*(void *)(*(void *)(a1 + 48) + 16)
      || (v8 = swift_bridgeObjectRetain(), sub_1C8D1C024(v8, 3), uint64_t result = swift_bridgeObjectRelease(), !v2))
    {
      swift_beginAccess();
      if (!*(void *)(*(void *)(a1 + 56) + 16)
        || (v9 = swift_bridgeObjectRetain(), sub_1C8D1BBBC(v9, 4), uint64_t result = swift_bridgeObjectRelease(), !v2))
      {
        swift_beginAccess();
        if (!*(void *)(*(void *)(a1 + 64) + 16)
          || (v10 = swift_bridgeObjectRetain(), sub_1C8D1C5FC(v10), uint64_t result = swift_bridgeObjectRelease(), !v2))
        {
          swift_beginAccess();
          if (!*(void *)(*(void *)(a1 + 40) + 16)
            || (v11 = swift_bridgeObjectRetain(), sub_1C8D1B2F0(v11, 6), uint64_t result = swift_bridgeObjectRelease(), !v2))
          {
            swift_beginAccess();
            uint64_t v12 = *(void *)(a1 + 80);
            if (v12)
            {
              uint64_t v13 = *(void *)(a1 + 88);
              unint64_t v14 = *(void *)(a1 + 96);
              uint64_t v15 = *(void *)(a1 + 104);
              int v16 = *(_DWORD *)(a1 + 112);
              uint64_t v33 = *(void *)(a1 + 80);
              uint64_t v34 = v13;
              unint64_t v35 = v14;
              uint64_t v36 = v15;
              int v37 = v16;
              sub_1C8D88850();
              uint64_t v17 = *((void *)a2 + 8);
              long long v18 = a2[1];
              long long v28 = *a2;
              long long v29 = v18;
              long long v19 = a2[3];
              long long v30 = a2[2];
              long long v31 = v19;
              uint64_t v32 = v17;
              swift_bridgeObjectRetain();
              sub_1C8CA3CF8(v13, v14);
              swift_bridgeObjectRetain();
              sub_1C8CF1DB0((uint64_t)&v28);
              if (v2)
              {
                MEMORY[0x1CB7736A0](v2);
                uint64_t v3 = 0;
              }
              uint64_t v20 = v32;
              long long v21 = v29;
              *a2 = v28;
              a2[1] = v21;
              long long v22 = v31;
              a2[2] = v30;
              a2[3] = v22;
              *((void *)a2 + 8) = v20;
              sub_1C8CEF708(v12, v13, v14);
            }
            swift_beginAccess();
            if (!*(void *)(*(void *)(a1 + 72) + 16)
              || (v23 = swift_bridgeObjectRetain(), sub_1C8D1C264(v23), uint64_t result = swift_bridgeObjectRelease(), !v3))
            {
              swift_beginAccess();
              if (!*(void *)(*(void *)(a1 + 120) + 16)
                || (v24 = swift_bridgeObjectRetain(), sub_1C8D1BBE8(v24), uint64_t result = swift_bridgeObjectRelease(), !v3))
              {
                uint64_t result = swift_beginAccess();
                uint64_t v25 = *(void *)(a1 + 128);
                if (*(void *)(v25 + 16))
                {
                  sub_1C8D88850();
                  uint64_t result = sub_1C8D88850();
                  uint64_t v26 = *(void *)(v25 + 16);
                  if (v26)
                  {
                    swift_bridgeObjectRetain();
                    uint64_t v27 = v25 + 40;
                    do
                    {
                      swift_bridgeObjectRetain();
                      sub_1C8D883C0();
                      swift_bridgeObjectRelease();
                      v27 += 16;
                      --v26;
                    }
                    while (v26);
                    return swift_bridgeObjectRelease();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C8D6D9E0(uint64_t a1, char **a2)
{
  uint64_t v5 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  unint64_t v6 = *(void *)(a1 + 24);
  if (v6)
  {
    uint64_t v7 = *v5;
    swift_bridgeObjectRetain();
    sub_1C8CA5968(1uLL);
    sub_1C8CA6060((uint64_t)": ", 2, v8);
    sub_1C8CA6D2C(v7, v6);
    uint64_t v9 = *a2;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v9 = sub_1C8D5EB50(0, *((void *)v9 + 2) + 1, 1, v9);
      *a2 = v9;
    }
    unint64_t v12 = *((void *)v9 + 2);
    unint64_t v11 = *((void *)v9 + 3);
    if (v12 >= v11 >> 1) {
      uint64_t v9 = sub_1C8D5EB50((char *)(v11 > 1), v12 + 1, 1, v9);
    }
    *((void *)v9 + 2) = v12 + 1;
    v9[v12 + 32] = 10;
    *a2 = v9;
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*(void *)(*(void *)(a1 + 32) + 16))
  {
    uint64_t v13 = swift_bridgeObjectRetain();
    sub_1C8D7467C(v13, 2uLL, (uint64_t)&type metadata for Google_Protobuf_FieldDescriptorProto, (uint64_t (*)(uint64_t))sub_1C8D05054, (void (*)(uint64_t, void *))sub_1C8D6E2E4);
    if (v2) {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (!*(void *)(*(void *)(a1 + 48) + 16)
    || (uint64_t v15 = swift_bridgeObjectRetain(),
        sub_1C8D7467C(v15, 3uLL, (uint64_t)&type metadata for Google_Protobuf_DescriptorProto, (uint64_t (*)(uint64_t))sub_1C8D04A08, (void (*)(uint64_t, void *))sub_1C8D6D9E0), uint64_t result = swift_bridgeObjectRelease(), !v2))
  {
    swift_beginAccess();
    if (!*(void *)(*(void *)(a1 + 56) + 16)
      || (uint64_t v16 = swift_bridgeObjectRetain(),
          sub_1C8D7467C(v16, 4uLL, (uint64_t)&type metadata for Google_Protobuf_EnumDescriptorProto, (uint64_t (*)(uint64_t))sub_1C8D053A4, (void (*)(uint64_t, void *))sub_1C8D6ECC8), uint64_t result = swift_bridgeObjectRelease(), !v2))
    {
      swift_beginAccess();
      if (!*(void *)(*(void *)(a1 + 64) + 16)
        || (uint64_t v17 = swift_bridgeObjectRetain(),
            sub_1C8D74200(v17, 5uLL, (uint64_t)&type metadata for Google_Protobuf_DescriptorProto.ExtensionRange, (uint64_t (*)(uint64_t))sub_1C8D04BB0, (void (*)(void *, uint64_t, unint64_t, uint64_t))sub_1C8CE75C8), uint64_t result = swift_bridgeObjectRelease(), !v2))
      {
        swift_beginAccess();
        if (!*(void *)(*(void *)(a1 + 40) + 16)
          || (uint64_t v18 = swift_bridgeObjectRetain(),
              sub_1C8D7467C(v18, 6uLL, (uint64_t)&type metadata for Google_Protobuf_FieldDescriptorProto, (uint64_t (*)(uint64_t))sub_1C8D05054, (void (*)(uint64_t, void *))sub_1C8D6E2E4), uint64_t result = swift_bridgeObjectRelease(), !v2))
        {
          swift_beginAccess();
          uint64_t v19 = *(void *)(a1 + 80);
          if (!v19) {
            goto LABEL_29;
          }
          int v20 = *(_DWORD *)(a1 + 112);
          unint64_t v22 = *(void *)(a1 + 96);
          uint64_t v21 = *(void *)(a1 + 104);
          uint64_t v23 = *(void *)(a1 + 88);
          v27[0] = *(void *)(a1 + 80);
          v27[1] = v23;
          v27[2] = v22;
          v27[3] = v21;
          int v28 = v20;
          swift_bridgeObjectRetain();
          sub_1C8CA3CF8(v23, v22);
          swift_bridgeObjectRetain();
          sub_1C8D72294(v27, 7uLL);
          uint64_t result = sub_1C8CEF708(v19, v23, v22);
          if (!v2)
          {
LABEL_29:
            swift_beginAccess();
            if (!*(void *)(*(void *)(a1 + 72) + 16)
              || (uint64_t v24 = swift_bridgeObjectRetain(),
                  sub_1C8D74200(v24, 8uLL, (uint64_t)&type metadata for Google_Protobuf_OneofDescriptorProto, (uint64_t (*)(uint64_t))sub_1C8D051FC, (void (*)(void *, uint64_t, unint64_t, uint64_t))sub_1C8CEA3EC), uint64_t result = swift_bridgeObjectRelease(), !v2))
            {
              swift_beginAccess();
              if (!*(void *)(*(void *)(a1 + 120) + 16)
                || (uint64_t v25 = swift_bridgeObjectRetain(),
                    sub_1C8D73F48(v25, 9uLL, (uint64_t)&type metadata for Google_Protobuf_DescriptorProto.ReservedRange, (uint64_t (*)(uint64_t))sub_1C8D04D58), uint64_t result = swift_bridgeObjectRelease(), !v2))
              {
                uint64_t result = swift_beginAccess();
                if (*(void *)(*(void *)(a1 + 128) + 16))
                {
                  uint64_t v26 = swift_bridgeObjectRetain();
                  sub_1C8CA7564(v26, 0xAuLL);
                  return swift_bridgeObjectRelease();
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C8D6DF08(uint64_t a1, long long *a2)
{
  swift_beginAccess();
  if (*(void *)(a1 + 24))
  {
    sub_1C8D88850();
    swift_bridgeObjectRetain();
    sub_1C8D883C0();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*(void *)(a1 + 64))
  {
    sub_1C8D88850();
    swift_bridgeObjectRetain();
    sub_1C8D883C0();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if ((*(unsigned char *)(a1 + 36) & 1) == 0)
  {
    sub_1C8D88850();
    sub_1C8D88880();
  }
  swift_beginAccess();
  if (*(unsigned char *)(a1 + 37) != 3)
  {
    sub_1C8D88850();
    sub_1C8D88850();
  }
  swift_beginAccess();
  if (*(unsigned char *)(a1 + 38) != 18)
  {
    sub_1C8D88850();
    sub_1C8D88850();
  }
  swift_beginAccess();
  if (*(void *)(a1 + 48))
  {
    sub_1C8D88850();
    swift_bridgeObjectRetain();
    sub_1C8D883C0();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*(void *)(a1 + 80))
  {
    sub_1C8D88850();
    swift_bridgeObjectRetain();
    sub_1C8D883C0();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t v5 = *(void *)(a1 + 112);
  if (v5)
  {
    uint64_t v6 = *(void *)(a1 + 120);
    unint64_t v7 = *(void *)(a1 + 128);
    uint64_t v8 = *(void *)(a1 + 136);
    unint64_t v9 = *(unsigned int *)(a1 + 144) | ((unint64_t)*(unsigned __int16 *)(a1 + 148) << 32);
    v10.i64[0] = 0xFFFFFFFFFFFFLL;
    v10.i64[1] = 0xFFFFFFFFFFFFLL;
    uint64x2_t v11 = (uint64x2_t)vandq_s8((int8x16_t)vdupq_n_s64(v9), v10);
    int16x8_t v12 = (int16x8_t)vshlq_u64(v11, (uint64x2_t)xmmword_1C8D8BED0);
    uint64_t v25 = *(void *)(a1 + 112);
    uint64_t v26 = v6;
    unint64_t v27 = v7;
    uint64_t v28 = v8;
    char v29 = v9;
    *(int32x2_t *)v11.i8 = vmovn_s64((int64x2_t)vshlq_u64(v11, (uint64x2_t)xmmword_1C8D8BEC0));
    *(int32x2_t *)v12.i8 = vmovn_s64((int64x2_t)v12);
    v12.i16[1] = v12.i16[2];
    v12.i16[2] = v11.i16[0];
    v12.i16[3] = v11.i16[2];
    unsigned __int32 v30 = vmovn_s16(v12).u32[0];
    char v31 = BYTE5(v9);
    sub_1C8D88850();
    uint64_t v13 = *((void *)a2 + 8);
    long long v14 = a2[1];
    long long v20 = *a2;
    long long v21 = v14;
    long long v15 = a2[3];
    long long v22 = a2[2];
    long long v23 = v15;
    uint64_t v24 = v13;
    swift_bridgeObjectRetain();
    sub_1C8CA3CF8(v6, v7);
    swift_bridgeObjectRetain();
    sub_1C8CF2934((uint64_t)&v20);
    if (v2) {
      MEMORY[0x1CB7736A0](v2);
    }
    uint64_t v16 = v24;
    long long v17 = v21;
    *a2 = v20;
    a2[1] = v17;
    long long v18 = v23;
    a2[2] = v22;
    a2[3] = v18;
    *((void *)a2 + 8) = v16;
    sub_1C8CEF708(v5, v6, v7);
  }
  swift_beginAccess();
  if ((*(unsigned char *)(a1 + 92) & 1) == 0)
  {
    sub_1C8D88850();
    sub_1C8D88880();
  }
  uint64_t result = swift_beginAccess();
  if (*(void *)(a1 + 104))
  {
    sub_1C8D88850();
    swift_bridgeObjectRetain();
    sub_1C8D883C0();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C8D6E2E4(uint64_t a1, char **a2)
{
  uint64_t v5 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  unint64_t v6 = *(void *)(a1 + 24);
  if (v6)
  {
    uint64_t v7 = *v5;
    swift_bridgeObjectRetain();
    sub_1C8CA5968(1uLL);
    sub_1C8CA6060((uint64_t)": ", 2, v8);
    sub_1C8CA6D2C(v7, v6);
    unint64_t v9 = *a2;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v9 = sub_1C8D5EB50(0, *((void *)v9 + 2) + 1, 1, v9);
      *a2 = v9;
    }
    unint64_t v12 = *((void *)v9 + 2);
    unint64_t v11 = *((void *)v9 + 3);
    if (v12 >= v11 >> 1) {
      unint64_t v9 = sub_1C8D5EB50((char *)(v11 > 1), v12 + 1, 1, v9);
    }
    *((void *)v9 + 2) = v12 + 1;
    v9[v12 + 32] = 10;
    *a2 = v9;
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  unint64_t v13 = *(void *)(a1 + 64);
  if (v13)
  {
    uint64_t v14 = *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    sub_1C8CA5968(2uLL);
    sub_1C8CA6060((uint64_t)": ", 2, v15);
    sub_1C8CA6D2C(v14, v13);
    uint64_t v16 = *a2;
    char v17 = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v16;
    if ((v17 & 1) == 0)
    {
      uint64_t v16 = sub_1C8D5EB50(0, *((void *)v16 + 2) + 1, 1, v16);
      *a2 = v16;
    }
    unint64_t v19 = *((void *)v16 + 2);
    unint64_t v18 = *((void *)v16 + 3);
    if (v19 >= v18 >> 1) {
      uint64_t v16 = sub_1C8D5EB50((char *)(v18 > 1), v19 + 1, 1, v16);
    }
    *((void *)v16 + 2) = v19 + 1;
    v16[v19 + 32] = 10;
    *a2 = v16;
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if ((*(unsigned char *)(a1 + 36) & 1) != 0 || (uint64_t result = sub_1C8D3BACC(*(_DWORD *)(a1 + 32), 3uLL), !v2))
  {
    swift_beginAccess();
    int v21 = *(unsigned __int8 *)(a1 + 37);
    if (v21 != 3)
    {
      sub_1C8CA5968(4uLL);
      sub_1C8CA6060((uint64_t)": ", 2, v22);
      sub_1C8D7105C(v21, (void (*)(void *__return_ptr))sub_1C8D685E4);
      long long v23 = *a2;
      char v24 = swift_isUniquelyReferenced_nonNull_native();
      *a2 = v23;
      if ((v24 & 1) == 0)
      {
        long long v23 = sub_1C8D5EB50(0, *((void *)v23 + 2) + 1, 1, v23);
        *a2 = v23;
      }
      unint64_t v26 = *((void *)v23 + 2);
      unint64_t v25 = *((void *)v23 + 3);
      if (v26 >= v25 >> 1) {
        long long v23 = sub_1C8D5EB50((char *)(v25 > 1), v26 + 1, 1, v23);
      }
      *((void *)v23 + 2) = v26 + 1;
      v23[v26 + 32] = 10;
      *a2 = v23;
    }
    swift_beginAccess();
    int v27 = *(unsigned __int8 *)(a1 + 38);
    if (v27 != 18)
    {
      sub_1C8CA5968(5uLL);
      sub_1C8CA6060((uint64_t)": ", 2, v28);
      sub_1C8D7105C(v27, (void (*)(void *__return_ptr))sub_1C8D68428);
      char v29 = *a2;
      char v30 = swift_isUniquelyReferenced_nonNull_native();
      *a2 = v29;
      if ((v30 & 1) == 0)
      {
        char v29 = sub_1C8D5EB50(0, *((void *)v29 + 2) + 1, 1, v29);
        *a2 = v29;
      }
      unint64_t v32 = *((void *)v29 + 2);
      unint64_t v31 = *((void *)v29 + 3);
      if (v32 >= v31 >> 1) {
        char v29 = sub_1C8D5EB50((char *)(v31 > 1), v32 + 1, 1, v29);
      }
      *((void *)v29 + 2) = v32 + 1;
      v29[v32 + 32] = 10;
      *a2 = v29;
    }
    swift_beginAccess();
    unint64_t v33 = *(void *)(a1 + 48);
    if (v33)
    {
      uint64_t v34 = *(void *)(a1 + 40);
      swift_bridgeObjectRetain();
      sub_1C8CA5968(6uLL);
      sub_1C8CA6060((uint64_t)": ", 2, v35);
      sub_1C8CA6D2C(v34, v33);
      uint64_t v36 = *a2;
      char v37 = swift_isUniquelyReferenced_nonNull_native();
      *a2 = v36;
      if ((v37 & 1) == 0)
      {
        uint64_t v36 = sub_1C8D5EB50(0, *((void *)v36 + 2) + 1, 1, v36);
        *a2 = v36;
      }
      unint64_t v39 = *((void *)v36 + 2);
      unint64_t v38 = *((void *)v36 + 3);
      if (v39 >= v38 >> 1) {
        uint64_t v36 = sub_1C8D5EB50((char *)(v38 > 1), v39 + 1, 1, v36);
      }
      *((void *)v36 + 2) = v39 + 1;
      v36[v39 + 32] = 10;
      *a2 = v36;
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    unint64_t v40 = *(void *)(a1 + 80);
    if (v40)
    {
      uint64_t v41 = *(void *)(a1 + 72);
      swift_bridgeObjectRetain();
      sub_1C8CA5968(7uLL);
      sub_1C8CA6060((uint64_t)": ", 2, v42);
      sub_1C8CA6D2C(v41, v40);
      uint64_t v43 = *a2;
      char v44 = swift_isUniquelyReferenced_nonNull_native();
      *a2 = v43;
      if ((v44 & 1) == 0)
      {
        uint64_t v43 = sub_1C8D5EB50(0, *((void *)v43 + 2) + 1, 1, v43);
        *a2 = v43;
      }
      unint64_t v46 = *((void *)v43 + 2);
      unint64_t v45 = *((void *)v43 + 3);
      if (v46 >= v45 >> 1) {
        uint64_t v43 = sub_1C8D5EB50((char *)(v45 > 1), v46 + 1, 1, v43);
      }
      *((void *)v43 + 2) = v46 + 1;
      v43[v46 + 32] = 10;
      *a2 = v43;
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    uint64_t v47 = *(void *)(a1 + 112);
    if (!v47) {
      goto LABEL_51;
    }
    uint64_t v48 = *(unsigned __int16 *)(a1 + 148);
    uint64_t v49 = *(unsigned int *)(a1 + 144);
    unint64_t v51 = *(void *)(a1 + 128);
    uint64_t v50 = *(void *)(a1 + 136);
    uint64_t v52 = *(void *)(a1 + 120);
    v64[0] = *(void *)(a1 + 112);
    v64[1] = v52;
    v64[2] = v51;
    v64[3] = v50;
    char v65 = v49;
    v53.i64[0] = 0xFFFFFFFFFFFFLL;
    v53.i64[1] = 0xFFFFFFFFFFFFLL;
    uint64x2_t v54 = (uint64x2_t)vandq_s8((int8x16_t)vdupq_n_s64(v49 | (unint64_t)(v48 << 32)), v53);
    int16x8_t v55 = (int16x8_t)vshlq_u64(v54, (uint64x2_t)xmmword_1C8D8BED0);
    *(int32x2_t *)v54.i8 = vmovn_s64((int64x2_t)vshlq_u64(v54, (uint64x2_t)xmmword_1C8D8BEC0));
    *(int32x2_t *)v55.i8 = vmovn_s64((int64x2_t)v55);
    v55.i16[1] = v55.i16[2];
    v55.i16[2] = v54.i16[0];
    v55.i16[3] = v54.i16[2];
    unsigned __int32 v66 = vmovn_s16(v55).u32[0];
    char v67 = BYTE1(v48);
    swift_bridgeObjectRetain();
    sub_1C8CA3CF8(v52, v51);
    swift_bridgeObjectRetain();
    sub_1C8D719D0((uint64_t)v64, 8uLL);
    uint64_t result = sub_1C8CEF708(v47, v52, v51);
    if (!v2)
    {
LABEL_51:
      swift_beginAccess();
      if ((*(unsigned char *)(a1 + 92) & 1) != 0 || (uint64_t result = sub_1C8D3BACC(*(_DWORD *)(a1 + 88), 9uLL), !v2))
      {
        uint64_t v56 = (uint64_t *)(a1 + 96);
        uint64_t result = swift_beginAccess();
        unint64_t v57 = *(void *)(a1 + 104);
        if (v57)
        {
          uint64_t v58 = *v56;
          swift_bridgeObjectRetain();
          sub_1C8CA5968(0xAuLL);
          sub_1C8CA6060((uint64_t)": ", 2, v59);
          sub_1C8CA6D2C(v58, v57);
          uint64_t v60 = *a2;
          char v61 = swift_isUniquelyReferenced_nonNull_native();
          *a2 = v60;
          if ((v61 & 1) == 0)
          {
            uint64_t v60 = sub_1C8D5EB50(0, *((void *)v60 + 2) + 1, 1, v60);
            *a2 = v60;
          }
          unint64_t v63 = *((void *)v60 + 2);
          unint64_t v62 = *((void *)v60 + 3);
          if (v63 >= v62 >> 1) {
            uint64_t v60 = sub_1C8D5EB50((char *)(v62 > 1), v63 + 1, 1, v60);
          }
          *((void *)v60 + 2) = v63 + 1;
          v60[v63 + 32] = 10;
          *a2 = v60;
          return swift_bridgeObjectRelease();
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C8D6EA44(uint64_t a1, long long *a2)
{
  uint64_t v3 = v2;
  swift_beginAccess();
  if (*(void *)(a1 + 24))
  {
    sub_1C8D88850();
    swift_bridgeObjectRetain();
    sub_1C8D883C0();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (!*(void *)(*(void *)(a1 + 32) + 16)
    || (v6 = swift_bridgeObjectRetain(), sub_1C8D1BC00(v6), uint64_t result = swift_bridgeObjectRelease(), !v2))
  {
    swift_beginAccess();
    uint64_t v8 = *(void *)(a1 + 40);
    if (v8)
    {
      uint64_t v9 = *(void *)(a1 + 48);
      unint64_t v10 = *(void *)(a1 + 56);
      uint64_t v11 = *(void *)(a1 + 64);
      __int16 v12 = *(_WORD *)(a1 + 72);
      uint64_t v28 = *(void *)(a1 + 40);
      uint64_t v29 = v9;
      unint64_t v30 = v10;
      uint64_t v31 = v11;
      __int16 v32 = v12;
      sub_1C8D88850();
      uint64_t v13 = *((void *)a2 + 8);
      long long v14 = a2[1];
      long long v23 = *a2;
      long long v24 = v14;
      long long v15 = a2[3];
      long long v25 = a2[2];
      long long v26 = v15;
      uint64_t v27 = v13;
      swift_bridgeObjectRetain();
      sub_1C8CA3CF8(v9, v10);
      swift_bridgeObjectRetain();
      sub_1C8CF42DC((uint64_t)&v23);
      if (v2)
      {
        MEMORY[0x1CB7736A0](v2);
        uint64_t v3 = 0;
      }
      uint64_t v16 = v27;
      long long v17 = v24;
      *a2 = v23;
      a2[1] = v17;
      long long v18 = v26;
      a2[2] = v25;
      a2[3] = v18;
      *((void *)a2 + 8) = v16;
      sub_1C8CEF708(v8, v9, v10);
    }
    swift_beginAccess();
    if (!*(void *)(*(void *)(a1 + 80) + 16)
      || (v19 = swift_bridgeObjectRetain(), sub_1C8D1BBE8(v19), uint64_t result = swift_bridgeObjectRelease(), !v3))
    {
      uint64_t result = swift_beginAccess();
      uint64_t v20 = *(void *)(a1 + 88);
      if (*(void *)(v20 + 16))
      {
        sub_1C8D88850();
        uint64_t result = sub_1C8D88850();
        uint64_t v21 = *(void *)(v20 + 16);
        if (v21)
        {
          swift_bridgeObjectRetain();
          uint64_t v22 = v20 + 40;
          do
          {
            swift_bridgeObjectRetain();
            sub_1C8D883C0();
            swift_bridgeObjectRelease();
            v22 += 16;
            --v21;
          }
          while (v21);
          return swift_bridgeObjectRelease();
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C8D6ECC8(uint64_t a1, char **a2)
{
  uint64_t v5 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  unint64_t v6 = *(void *)(a1 + 24);
  if (v6)
  {
    uint64_t v7 = *v5;
    swift_bridgeObjectRetain();
    sub_1C8CA5968(1uLL);
    sub_1C8CA6060((uint64_t)": ", 2, v8);
    sub_1C8CA6D2C(v7, v6);
    uint64_t v9 = *a2;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v9 = sub_1C8D5EB50(0, *((void *)v9 + 2) + 1, 1, v9);
      *a2 = v9;
    }
    unint64_t v12 = *((void *)v9 + 2);
    unint64_t v11 = *((void *)v9 + 3);
    if (v12 >= v11 >> 1) {
      uint64_t v9 = sub_1C8D5EB50((char *)(v11 > 1), v12 + 1, 1, v9);
    }
    *((void *)v9 + 2) = v12 + 1;
    v9[v12 + 32] = 10;
    *a2 = v9;
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (!*(void *)(*(void *)(a1 + 32) + 16)
    || (uint64_t v13 = swift_bridgeObjectRetain(),
        sub_1C8D7467C(v13, 2uLL, (uint64_t)&type metadata for Google_Protobuf_EnumValueDescriptorProto, (uint64_t (*)(uint64_t))sub_1C8D056F4, (void (*)(uint64_t, void *))sub_1C8D6EF8C), uint64_t result = swift_bridgeObjectRelease(), !v2))
  {
    swift_beginAccess();
    uint64_t v15 = *(void *)(a1 + 40);
    if (!v15) {
      goto LABEL_11;
    }
    unint64_t v17 = *(void *)(a1 + 56);
    uint64_t v16 = *(void *)(a1 + 64);
    uint64_t v18 = *(void *)(a1 + 48);
    __int16 v19 = *(_WORD *)(a1 + 72);
    v22[0] = *(void *)(a1 + 40);
    v22[1] = v18;
    v22[2] = v17;
    v22[3] = v16;
    __int16 v23 = v19;
    swift_bridgeObjectRetain();
    sub_1C8CA3CF8(v18, v17);
    swift_bridgeObjectRetain();
    sub_1C8D71D50(v22, 3uLL);
    uint64_t result = sub_1C8CEF708(v15, v18, v17);
    if (!v2)
    {
LABEL_11:
      swift_beginAccess();
      if (!*(void *)(*(void *)(a1 + 80) + 16)
        || (uint64_t v20 = swift_bridgeObjectRetain(),
            sub_1C8D73F48(v20, 4uLL, (uint64_t)&type metadata for Google_Protobuf_EnumDescriptorProto.EnumReservedRange, (uint64_t (*)(uint64_t))sub_1C8D0554C), uint64_t result = swift_bridgeObjectRelease(), !v2))
      {
        uint64_t result = swift_beginAccess();
        if (*(void *)(*(void *)(a1 + 88) + 16))
        {
          uint64_t v21 = swift_bridgeObjectRetain();
          sub_1C8CA7564(v21, 5uLL);
          return swift_bridgeObjectRelease();
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C8D6EF8C(uint64_t a1, char **a2)
{
  uint64_t v5 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  unint64_t v6 = *(void *)(a1 + 24);
  if (v6)
  {
    uint64_t v7 = *v5;
    swift_bridgeObjectRetain();
    sub_1C8CA5968(1uLL);
    sub_1C8CA6060((uint64_t)": ", 2, v8);
    sub_1C8CA6D2C(v7, v6);
    uint64_t v9 = *a2;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v9 = sub_1C8D5EB50(0, *((void *)v9 + 2) + 1, 1, v9);
      *a2 = v9;
    }
    unint64_t v12 = *((void *)v9 + 2);
    unint64_t v11 = *((void *)v9 + 3);
    if (v12 >= v11 >> 1) {
      uint64_t v9 = sub_1C8D5EB50((char *)(v11 > 1), v12 + 1, 1, v9);
    }
    *((void *)v9 + 2) = v12 + 1;
    v9[v12 + 32] = 10;
    *a2 = v9;
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if ((*(unsigned char *)(a1 + 36) & 1) != 0 || (uint64_t result = sub_1C8D3BACC(*(_DWORD *)(a1 + 32), 2uLL), !v2))
  {
    uint64_t result = swift_beginAccess();
    uint64_t v14 = *(void *)(a1 + 40);
    if (v14)
    {
      unint64_t v16 = *(void *)(a1 + 56);
      uint64_t v15 = *(void *)(a1 + 64);
      uint64_t v17 = *(void *)(a1 + 48);
      v18[0] = *(void *)(a1 + 40);
      v18[1] = v17;
      void v18[2] = v16;
      v18[3] = v15;
      char v19 = *(unsigned char *)(a1 + 72);
      swift_bridgeObjectRetain();
      sub_1C8CA3CF8(v17, v16);
      swift_bridgeObjectRetain();
      sub_1C8D71FF8(v18, 3uLL, (uint64_t)&type metadata for Google_Protobuf_EnumValueOptions, (uint64_t (*)(uint64_t))sub_1C8D03A64, (uint64_t)&unk_1F2357DF8, 1uLL);
      return sub_1C8CEF708(v14, v17, v16);
    }
  }
  return result;
}

uint64_t sub_1C8D6F188(uint64_t a1, long long *a2)
{
  swift_beginAccess();
  if (*(void *)(a1 + 24))
  {
    sub_1C8D88850();
    swift_bridgeObjectRetain();
    sub_1C8D883C0();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (!*(void *)(*(void *)(a1 + 32) + 16)
    || (v5 = swift_bridgeObjectRetain(), sub_1C8D1AE18(v5), uint64_t result = swift_bridgeObjectRelease(), !v2))
  {
    uint64_t result = swift_beginAccess();
    uint64_t v7 = *(void *)(a1 + 40);
    if (v7)
    {
      uint64_t v8 = *(void *)(a1 + 48);
      unint64_t v9 = *(void *)(a1 + 56);
      uint64_t v10 = *(void *)(a1 + 64);
      char v11 = *(unsigned char *)(a1 + 72);
      uint64_t v23 = v7;
      uint64_t v24 = v8;
      unint64_t v25 = v9;
      uint64_t v26 = v10;
      char v27 = v11;
      sub_1C8D88850();
      uint64_t v12 = *((void *)a2 + 8);
      long long v13 = a2[1];
      long long v18 = *a2;
      long long v19 = v13;
      long long v14 = a2[3];
      long long v20 = a2[2];
      long long v21 = v14;
      uint64_t v22 = v12;
      swift_bridgeObjectRetain();
      sub_1C8CA3CF8(v8, v9);
      swift_bridgeObjectRetain();
      sub_1C8CF4F24((uint64_t)&v18);
      if (v2) {
        MEMORY[0x1CB7736A0](v2);
      }
      uint64_t v15 = v22;
      long long v16 = v19;
      *a2 = v18;
      a2[1] = v16;
      long long v17 = v21;
      a2[2] = v20;
      a2[3] = v17;
      *((void *)a2 + 8) = v15;
      return sub_1C8CEF708(v7, v8, v9);
    }
  }
  return result;
}

uint64_t sub_1C8D6F33C(uint64_t a1, char **a2)
{
  uint64_t v5 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  unint64_t v6 = *(void *)(a1 + 24);
  if (v6)
  {
    uint64_t v7 = *v5;
    swift_bridgeObjectRetain();
    sub_1C8CA5968(1uLL);
    sub_1C8CA6060((uint64_t)": ", 2, v8);
    sub_1C8CA6D2C(v7, v6);
    unint64_t v9 = *a2;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v9 = sub_1C8D5EB50(0, *((void *)v9 + 2) + 1, 1, v9);
      *a2 = v9;
    }
    unint64_t v12 = *((void *)v9 + 2);
    unint64_t v11 = *((void *)v9 + 3);
    if (v12 >= v11 >> 1) {
      unint64_t v9 = sub_1C8D5EB50((char *)(v11 > 1), v12 + 1, 1, v9);
    }
    *((void *)v9 + 2) = v12 + 1;
    v9[v12 + 32] = 10;
    *a2 = v9;
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (!*(void *)(*(void *)(a1 + 32) + 16)
    || (uint64_t v13 = swift_bridgeObjectRetain(),
        sub_1C8D7467C(v13, 2uLL, (uint64_t)&type metadata for Google_Protobuf_MethodDescriptorProto, (uint64_t (*)(uint64_t))sub_1C8D05A44, (void (*)(uint64_t, void *))sub_1C8D6F7F8), uint64_t result = swift_bridgeObjectRelease(), !v2))
  {
    uint64_t result = swift_beginAccess();
    uint64_t v15 = *(void *)(a1 + 40);
    if (v15)
    {
      unint64_t v17 = *(void *)(a1 + 56);
      uint64_t v16 = *(void *)(a1 + 64);
      uint64_t v18 = *(void *)(a1 + 48);
      v19[0] = *(void *)(a1 + 40);
      v19[1] = v18;
      long long v19[2] = v17;
      v19[3] = v16;
      char v20 = *(unsigned char *)(a1 + 72);
      swift_bridgeObjectRetain();
      sub_1C8CA3CF8(v18, v17);
      swift_bridgeObjectRetain();
      sub_1C8D71FF8(v19, 3uLL, (uint64_t)&type metadata for Google_Protobuf_ServiceOptions, (uint64_t (*)(uint64_t))sub_1C8D03AB8, (uint64_t)&unk_1F2357DD0, 0x21uLL);
      return sub_1C8CEF708(v15, v18, v17);
    }
  }
  return result;
}

uint64_t sub_1C8D6F574(uint64_t a1, long long *a2)
{
  swift_beginAccess();
  if (*(void *)(a1 + 24))
  {
    sub_1C8D88850();
    swift_bridgeObjectRetain();
    sub_1C8D883C0();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*(void *)(a1 + 40))
  {
    sub_1C8D88850();
    swift_bridgeObjectRetain();
    sub_1C8D883C0();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*(void *)(a1 + 56))
  {
    sub_1C8D88850();
    swift_bridgeObjectRetain();
    sub_1C8D883C0();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5)
  {
    uint64_t v6 = *(void *)(a1 + 72);
    unint64_t v7 = *(void *)(a1 + 80);
    uint64_t v8 = *(void *)(a1 + 88);
    __int16 v9 = *(_WORD *)(a1 + 96);
    uint64_t v22 = *(void *)(a1 + 64);
    uint64_t v23 = v6;
    unint64_t v24 = v7;
    uint64_t v25 = v8;
    __int16 v26 = v9;
    sub_1C8D88850();
    uint64_t v10 = *((void *)a2 + 8);
    long long v11 = a2[1];
    long long v17 = *a2;
    long long v18 = v11;
    long long v12 = a2[3];
    long long v19 = a2[2];
    long long v20 = v12;
    uint64_t v21 = v10;
    swift_bridgeObjectRetain();
    sub_1C8CA3CF8(v6, v7);
    swift_bridgeObjectRetain();
    sub_1C8CF58E8((uint64_t)&v17);
    if (v2) {
      MEMORY[0x1CB7736A0](v2);
    }
    uint64_t v13 = v21;
    long long v14 = v18;
    *a2 = v17;
    a2[1] = v14;
    long long v15 = v20;
    a2[2] = v19;
    a2[3] = v15;
    *((void *)a2 + 8) = v13;
    sub_1C8CEF708(v5, v6, v7);
  }
  swift_beginAccess();
  if (*(unsigned char *)(a1 + 98) != 2)
  {
    sub_1C8D88850();
    sub_1C8D88860();
  }
  uint64_t result = swift_beginAccess();
  if (*(unsigned char *)(a1 + 99) != 2)
  {
    sub_1C8D88850();
    return sub_1C8D88860();
  }
  return result;
}

uint64_t sub_1C8D6F7F8(uint64_t a1, char **a2)
{
  uint64_t v5 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  unint64_t v6 = *(void *)(a1 + 24);
  if (v6)
  {
    uint64_t v7 = *v5;
    swift_bridgeObjectRetain();
    sub_1C8CA5968(1uLL);
    sub_1C8CA6060((uint64_t)": ", 2, v8);
    sub_1C8CA6D2C(v7, v6);
    __int16 v9 = *a2;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      __int16 v9 = sub_1C8D5EB50(0, *((void *)v9 + 2) + 1, 1, v9);
      *a2 = v9;
    }
    unint64_t v12 = *((void *)v9 + 2);
    unint64_t v11 = *((void *)v9 + 3);
    if (v12 >= v11 >> 1) {
      __int16 v9 = sub_1C8D5EB50((char *)(v11 > 1), v12 + 1, 1, v9);
    }
    *((void *)v9 + 2) = v12 + 1;
    v9[v12 + 32] = 10;
    *a2 = v9;
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  unint64_t v13 = *(void *)(a1 + 40);
  if (v13)
  {
    uint64_t v14 = *(void *)(a1 + 32);
    swift_bridgeObjectRetain();
    sub_1C8CA5968(2uLL);
    sub_1C8CA6060((uint64_t)": ", 2, v15);
    sub_1C8CA6D2C(v14, v13);
    uint64_t v16 = *a2;
    char v17 = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v16;
    if ((v17 & 1) == 0)
    {
      uint64_t v16 = sub_1C8D5EB50(0, *((void *)v16 + 2) + 1, 1, v16);
      *a2 = v16;
    }
    unint64_t v19 = *((void *)v16 + 2);
    unint64_t v18 = *((void *)v16 + 3);
    if (v19 >= v18 >> 1) {
      uint64_t v16 = sub_1C8D5EB50((char *)(v18 > 1), v19 + 1, 1, v16);
    }
    *((void *)v16 + 2) = v19 + 1;
    v16[v19 + 32] = 10;
    *a2 = v16;
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  unint64_t v20 = *(void *)(a1 + 56);
  if (v20)
  {
    uint64_t v21 = *(void *)(a1 + 48);
    swift_bridgeObjectRetain();
    sub_1C8CA5968(3uLL);
    sub_1C8CA6060((uint64_t)": ", 2, v22);
    sub_1C8CA6D2C(v21, v20);
    uint64_t v23 = *a2;
    char v24 = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v23;
    if ((v24 & 1) == 0)
    {
      uint64_t v23 = sub_1C8D5EB50(0, *((void *)v23 + 2) + 1, 1, v23);
      *a2 = v23;
    }
    unint64_t v26 = *((void *)v23 + 2);
    unint64_t v25 = *((void *)v23 + 3);
    if (v26 >= v25 >> 1) {
      uint64_t v23 = sub_1C8D5EB50((char *)(v25 > 1), v26 + 1, 1, v23);
    }
    *((void *)v23 + 2) = v26 + 1;
    v23[v26 + 32] = 10;
    *a2 = v23;
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t v27 = *(void *)(a1 + 64);
  if (!v27) {
    goto LABEL_21;
  }
  unint64_t v29 = *(void *)(a1 + 80);
  uint64_t v28 = *(void *)(a1 + 88);
  uint64_t v30 = *(void *)(a1 + 72);
  __int16 v31 = *(_WORD *)(a1 + 96);
  v35[0] = *(void *)(a1 + 64);
  v35[1] = v30;
  v35[2] = v29;
  v35[3] = v28;
  __int16 v36 = v31;
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(v30, v29);
  swift_bridgeObjectRetain();
  sub_1C8D71B90((uint64_t)v35, 4uLL);
  uint64_t result = sub_1C8CEF708(v27, v30, v29);
  if (!v2)
  {
LABEL_21:
    swift_beginAccess();
    int v33 = *(unsigned __int8 *)(a1 + 98);
    if (v33 == 2 || (uint64_t result = sub_1C8CAB1C0(v33 & 1, 5uLL), !v2))
    {
      uint64_t result = swift_beginAccess();
      int v34 = *(unsigned __int8 *)(a1 + 99);
      if (v34 != 2) {
        return sub_1C8CAB1C0(v34 & 1, 6uLL);
      }
    }
  }
  return result;
}

uint64_t sub_1C8D6FBBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_beginAccess();
  if (*(void *)(a1 + 24))
  {
    sub_1C8D88850();
    swift_bridgeObjectRetain();
    sub_1C8D883C0();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*(void *)(a1 + 40))
  {
    sub_1C8D88850();
    swift_bridgeObjectRetain();
    sub_1C8D883C0();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*(unsigned char *)(a1 + 51) != 3)
  {
    sub_1C8D88850();
    sub_1C8D88850();
  }
  swift_beginAccess();
  if (*(unsigned char *)(a1 + 48) != 2)
  {
    sub_1C8D88850();
    sub_1C8D88860();
  }
  swift_beginAccess();
  if (*(void *)(a1 + 64))
  {
    sub_1C8D88850();
    swift_bridgeObjectRetain();
    sub_1C8D883C0();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*(unsigned char *)(a1 + 72) != 2)
  {
    sub_1C8D88850();
    sub_1C8D88860();
  }
  swift_beginAccess();
  if (*(unsigned char *)(a1 + 73) != 2)
  {
    sub_1C8D88850();
    sub_1C8D88860();
  }
  swift_beginAccess();
  if (*(unsigned char *)(a1 + 74) != 2)
  {
    sub_1C8D88850();
    sub_1C8D88860();
  }
  swift_beginAccess();
  if (*(unsigned char *)(a1 + 49) != 2)
  {
    sub_1C8D88850();
    sub_1C8D88860();
  }
  swift_beginAccess();
  if (*(unsigned char *)(a1 + 76) != 2)
  {
    sub_1C8D88850();
    sub_1C8D88860();
  }
  swift_beginAccess();
  if (*(unsigned char *)(a1 + 50) != 2)
  {
    sub_1C8D88850();
    sub_1C8D88860();
  }
  swift_beginAccess();
  if (*(unsigned char *)(a1 + 77) != 2)
  {
    sub_1C8D88850();
    sub_1C8D88860();
  }
  swift_beginAccess();
  if (*(void *)(a1 + 88))
  {
    sub_1C8D88850();
    swift_bridgeObjectRetain();
    sub_1C8D883C0();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*(void *)(a1 + 104))
  {
    sub_1C8D88850();
    swift_bridgeObjectRetain();
    sub_1C8D883C0();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*(void *)(a1 + 120))
  {
    sub_1C8D88850();
    swift_bridgeObjectRetain();
    sub_1C8D883C0();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*(void *)(a1 + 136))
  {
    sub_1C8D88850();
    swift_bridgeObjectRetain();
    sub_1C8D883C0();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*(void *)(a1 + 152))
  {
    sub_1C8D88850();
    swift_bridgeObjectRetain();
    sub_1C8D883C0();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*(unsigned char *)(a1 + 75) != 2)
  {
    sub_1C8D88850();
    sub_1C8D88860();
  }
  swift_beginAccess();
  if (*(void *)(a1 + 168))
  {
    sub_1C8D88850();
    swift_bridgeObjectRetain();
    sub_1C8D883C0();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*(void *)(a1 + 184))
  {
    sub_1C8D88850();
    swift_bridgeObjectRetain();
    sub_1C8D883C0();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (!*(void *)(*(void *)(a1 + 192) + 16)
    || (v9 = swift_bridgeObjectRetain(), sub_1C8D1A5FC(v9), uint64_t result = swift_bridgeObjectRelease(), !v5))
  {
    swift_bridgeObjectRetain();
    sub_1C8D3D3BC(a2, 1000, 0x20000000, a5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C8D70178(uint64_t a1, char **a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  unint64_t v10 = *(void *)(a1 + 24);
  if (v10)
  {
    uint64_t v11 = *v9;
    swift_bridgeObjectRetain();
    sub_1C8CA5968(1uLL);
    sub_1C8CA6060((uint64_t)": ", 2, v12);
    sub_1C8CA6D2C(v11, v10);
    unint64_t v13 = *a2;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v13;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v13 = sub_1C8D5EB50(0, *((void *)v13 + 2) + 1, 1, v13);
      *a2 = v13;
    }
    unint64_t v16 = *((void *)v13 + 2);
    unint64_t v15 = *((void *)v13 + 3);
    if (v16 >= v15 >> 1) {
      unint64_t v13 = sub_1C8D5EB50((char *)(v15 > 1), v16 + 1, 1, v13);
    }
    *((void *)v13 + 2) = v16 + 1;
    v13[v16 + 32] = 10;
    *a2 = v13;
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  unint64_t v17 = *(void *)(a1 + 40);
  if (v17)
  {
    uint64_t v18 = *(void *)(a1 + 32);
    swift_bridgeObjectRetain();
    sub_1C8CA5968(8uLL);
    sub_1C8CA6060((uint64_t)": ", 2, v19);
    sub_1C8CA6D2C(v18, v17);
    unint64_t v20 = *a2;
    char v21 = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v20;
    if ((v21 & 1) == 0)
    {
      unint64_t v20 = sub_1C8D5EB50(0, *((void *)v20 + 2) + 1, 1, v20);
      *a2 = v20;
    }
    unint64_t v23 = *((void *)v20 + 2);
    unint64_t v22 = *((void *)v20 + 3);
    if (v23 >= v22 >> 1) {
      unint64_t v20 = sub_1C8D5EB50((char *)(v22 > 1), v23 + 1, 1, v20);
    }
    *((void *)v20 + 2) = v23 + 1;
    v20[v23 + 32] = 10;
    *a2 = v20;
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  int v24 = *(unsigned __int8 *)(a1 + 51);
  if (v24 != 3)
  {
    sub_1C8CA5968(9uLL);
    sub_1C8CA6060((uint64_t)": ", 2, v25);
    sub_1C8D7105C(v24, (void (*)(void *__return_ptr))sub_1C8D67EFC);
    unint64_t v26 = *a2;
    char v27 = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v26;
    if ((v27 & 1) == 0)
    {
      unint64_t v26 = sub_1C8D5EB50(0, *((void *)v26 + 2) + 1, 1, v26);
      *a2 = v26;
    }
    unint64_t v29 = *((void *)v26 + 2);
    unint64_t v28 = *((void *)v26 + 3);
    if (v29 >= v28 >> 1) {
      unint64_t v26 = sub_1C8D5EB50((char *)(v28 > 1), v29 + 1, 1, v26);
    }
    *((void *)v26 + 2) = v29 + 1;
    v26[v29 + 32] = 10;
    *a2 = v26;
  }
  swift_beginAccess();
  int v30 = *(unsigned __int8 *)(a1 + 48);
  if (v30 == 2 || (uint64_t result = sub_1C8CAB1C0(v30 & 1, 0xAuLL), !v5))
  {
    swift_beginAccess();
    unint64_t v32 = *(void *)(a1 + 64);
    if (v32)
    {
      uint64_t v33 = *(void *)(a1 + 56);
      swift_bridgeObjectRetain();
      sub_1C8CA5968(0xBuLL);
      sub_1C8CA6060((uint64_t)": ", 2, v34);
      sub_1C8CA6D2C(v33, v32);
      unint64_t v35 = *a2;
      char v36 = swift_isUniquelyReferenced_nonNull_native();
      *a2 = v35;
      if ((v36 & 1) == 0)
      {
        unint64_t v35 = sub_1C8D5EB50(0, *((void *)v35 + 2) + 1, 1, v35);
        *a2 = v35;
      }
      unint64_t v38 = *((void *)v35 + 2);
      unint64_t v37 = *((void *)v35 + 3);
      if (v38 >= v37 >> 1) {
        unint64_t v35 = sub_1C8D5EB50((char *)(v37 > 1), v38 + 1, 1, v35);
      }
      *((void *)v35 + 2) = v38 + 1;
      v35[v38 + 32] = 10;
      *a2 = v35;
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    int v39 = *(unsigned __int8 *)(a1 + 72);
    if (v39 == 2 || (uint64_t result = sub_1C8CAB1C0(v39 & 1, 0x10uLL), !v5))
    {
      swift_beginAccess();
      int v40 = *(unsigned __int8 *)(a1 + 73);
      if (v40 == 2 || (uint64_t result = sub_1C8CAB1C0(v40 & 1, 0x11uLL), !v5))
      {
        swift_beginAccess();
        int v41 = *(unsigned __int8 *)(a1 + 74);
        if (v41 == 2 || (uint64_t result = sub_1C8CAB1C0(v41 & 1, 0x12uLL), !v5))
        {
          swift_beginAccess();
          int v42 = *(unsigned __int8 *)(a1 + 49);
          if (v42 == 2 || (uint64_t result = sub_1C8CAB1C0(v42 & 1, 0x14uLL), !v5))
          {
            swift_beginAccess();
            int v43 = *(unsigned __int8 *)(a1 + 76);
            if (v43 == 2 || (uint64_t result = sub_1C8CAB1C0(v43 & 1, 0x17uLL), !v5))
            {
              swift_beginAccess();
              int v44 = *(unsigned __int8 *)(a1 + 50);
              if (v44 == 2 || (uint64_t result = sub_1C8CAB1C0(v44 & 1, 0x1BuLL), !v5))
              {
                swift_beginAccess();
                int v45 = *(unsigned __int8 *)(a1 + 77);
                if (v45 == 2 || (uint64_t result = sub_1C8CAB1C0(v45 & 1, 0x1FuLL), !v5))
                {
                  swift_beginAccess();
                  unint64_t v46 = *(void *)(a1 + 88);
                  if (v46)
                  {
                    uint64_t v47 = *(void *)(a1 + 80);
                    swift_bridgeObjectRetain();
                    sub_1C8CA5968(0x24uLL);
                    sub_1C8CA6060((uint64_t)": ", 2, v48);
                    sub_1C8CA6D2C(v47, v46);
                    uint64_t v49 = *a2;
                    char v50 = swift_isUniquelyReferenced_nonNull_native();
                    *a2 = v49;
                    if ((v50 & 1) == 0)
                    {
                      uint64_t v49 = sub_1C8D5EB50(0, *((void *)v49 + 2) + 1, 1, v49);
                      *a2 = v49;
                    }
                    unint64_t v52 = *((void *)v49 + 2);
                    unint64_t v51 = *((void *)v49 + 3);
                    if (v52 >= v51 >> 1) {
                      uint64_t v49 = sub_1C8D5EB50((char *)(v51 > 1), v52 + 1, 1, v49);
                    }
                    *((void *)v49 + 2) = v52 + 1;
                    v49[v52 + 32] = 10;
                    *a2 = v49;
                    swift_bridgeObjectRelease();
                  }
                  swift_beginAccess();
                  unint64_t v53 = *(void *)(a1 + 104);
                  if (v53)
                  {
                    uint64_t v54 = *(void *)(a1 + 96);
                    swift_bridgeObjectRetain();
                    sub_1C8CA5968(0x25uLL);
                    sub_1C8CA6060((uint64_t)": ", 2, v55);
                    sub_1C8CA6D2C(v54, v53);
                    uint64_t v56 = *a2;
                    char v57 = swift_isUniquelyReferenced_nonNull_native();
                    *a2 = v56;
                    if ((v57 & 1) == 0)
                    {
                      uint64_t v56 = sub_1C8D5EB50(0, *((void *)v56 + 2) + 1, 1, v56);
                      *a2 = v56;
                    }
                    unint64_t v59 = *((void *)v56 + 2);
                    unint64_t v58 = *((void *)v56 + 3);
                    if (v59 >= v58 >> 1) {
                      uint64_t v56 = sub_1C8D5EB50((char *)(v58 > 1), v59 + 1, 1, v56);
                    }
                    *((void *)v56 + 2) = v59 + 1;
                    v56[v59 + 32] = 10;
                    *a2 = v56;
                    swift_bridgeObjectRelease();
                  }
                  swift_beginAccess();
                  unint64_t v60 = *(void *)(a1 + 120);
                  if (v60)
                  {
                    uint64_t v61 = *(void *)(a1 + 112);
                    swift_bridgeObjectRetain();
                    sub_1C8CA5968(0x27uLL);
                    sub_1C8CA6060((uint64_t)": ", 2, v62);
                    sub_1C8CA6D2C(v61, v60);
                    unint64_t v63 = *a2;
                    char v64 = swift_isUniquelyReferenced_nonNull_native();
                    *a2 = v63;
                    if ((v64 & 1) == 0)
                    {
                      unint64_t v63 = sub_1C8D5EB50(0, *((void *)v63 + 2) + 1, 1, v63);
                      *a2 = v63;
                    }
                    unint64_t v66 = *((void *)v63 + 2);
                    unint64_t v65 = *((void *)v63 + 3);
                    if (v66 >= v65 >> 1) {
                      unint64_t v63 = sub_1C8D5EB50((char *)(v65 > 1), v66 + 1, 1, v63);
                    }
                    *((void *)v63 + 2) = v66 + 1;
                    v63[v66 + 32] = 10;
                    *a2 = v63;
                    swift_bridgeObjectRelease();
                  }
                  swift_beginAccess();
                  unint64_t v67 = *(void *)(a1 + 136);
                  if (v67)
                  {
                    uint64_t v68 = *(void *)(a1 + 128);
                    swift_bridgeObjectRetain();
                    sub_1C8CA5968(0x28uLL);
                    sub_1C8CA6060((uint64_t)": ", 2, v69);
                    sub_1C8CA6D2C(v68, v67);
                    unint64_t v70 = *a2;
                    char v71 = swift_isUniquelyReferenced_nonNull_native();
                    *a2 = v70;
                    if ((v71 & 1) == 0)
                    {
                      unint64_t v70 = sub_1C8D5EB50(0, *((void *)v70 + 2) + 1, 1, v70);
                      *a2 = v70;
                    }
                    unint64_t v73 = *((void *)v70 + 2);
                    unint64_t v72 = *((void *)v70 + 3);
                    if (v73 >= v72 >> 1) {
                      unint64_t v70 = sub_1C8D5EB50((char *)(v72 > 1), v73 + 1, 1, v70);
                    }
                    *((void *)v70 + 2) = v73 + 1;
                    v70[v73 + 32] = 10;
                    *a2 = v70;
                    swift_bridgeObjectRelease();
                  }
                  swift_beginAccess();
                  unint64_t v74 = *(void *)(a1 + 152);
                  if (v74)
                  {
                    uint64_t v75 = *(void *)(a1 + 144);
                    swift_bridgeObjectRetain();
                    sub_1C8CA5968(0x29uLL);
                    sub_1C8CA6060((uint64_t)": ", 2, v76);
                    sub_1C8CA6D2C(v75, v74);
                    unint64_t v77 = *a2;
                    char v78 = swift_isUniquelyReferenced_nonNull_native();
                    *a2 = v77;
                    if ((v78 & 1) == 0)
                    {
                      unint64_t v77 = sub_1C8D5EB50(0, *((void *)v77 + 2) + 1, 1, v77);
                      *a2 = v77;
                    }
                    unint64_t v80 = *((void *)v77 + 2);
                    unint64_t v79 = *((void *)v77 + 3);
                    if (v80 >= v79 >> 1) {
                      unint64_t v77 = sub_1C8D5EB50((char *)(v79 > 1), v80 + 1, 1, v77);
                    }
                    *((void *)v77 + 2) = v80 + 1;
                    v77[v80 + 32] = 10;
                    *a2 = v77;
                    swift_bridgeObjectRelease();
                  }
                  swift_beginAccess();
                  int v81 = *(unsigned __int8 *)(a1 + 75);
                  if (v81 == 2 || (uint64_t result = sub_1C8CAB1C0(v81 & 1, 0x2AuLL), !v5))
                  {
                    swift_beginAccess();
                    unint64_t v82 = *(void *)(a1 + 168);
                    if (v82)
                    {
                      uint64_t v83 = *(void *)(a1 + 160);
                      swift_bridgeObjectRetain();
                      sub_1C8CA5968(0x2CuLL);
                      sub_1C8CA6060((uint64_t)": ", 2, v84);
                      sub_1C8CA6D2C(v83, v82);
                      uint64_t v85 = *a2;
                      char v86 = swift_isUniquelyReferenced_nonNull_native();
                      *a2 = v85;
                      if ((v86 & 1) == 0)
                      {
                        uint64_t v85 = sub_1C8D5EB50(0, *((void *)v85 + 2) + 1, 1, v85);
                        *a2 = v85;
                      }
                      unint64_t v88 = *((void *)v85 + 2);
                      unint64_t v87 = *((void *)v85 + 3);
                      if (v88 >= v87 >> 1) {
                        uint64_t v85 = sub_1C8D5EB50((char *)(v87 > 1), v88 + 1, 1, v85);
                      }
                      *((void *)v85 + 2) = v88 + 1;
                      v85[v88 + 32] = 10;
                      *a2 = v85;
                      swift_bridgeObjectRelease();
                    }
                    swift_beginAccess();
                    unint64_t v89 = *(void *)(a1 + 184);
                    if (v89)
                    {
                      uint64_t v90 = *(void *)(a1 + 176);
                      swift_bridgeObjectRetain();
                      sub_1C8CA5968(0x2DuLL);
                      sub_1C8CA6060((uint64_t)": ", 2, v91);
                      sub_1C8CA6D2C(v90, v89);
                      long long v92 = *a2;
                      char v93 = swift_isUniquelyReferenced_nonNull_native();
                      *a2 = v92;
                      if ((v93 & 1) == 0)
                      {
                        long long v92 = sub_1C8D5EB50(0, *((void *)v92 + 2) + 1, 1, v92);
                        *a2 = v92;
                      }
                      unint64_t v95 = *((void *)v92 + 2);
                      unint64_t v94 = *((void *)v92 + 3);
                      if (v95 >= v94 >> 1) {
                        long long v92 = sub_1C8D5EB50((char *)(v94 > 1), v95 + 1, 1, v92);
                      }
                      *((void *)v92 + 2) = v95 + 1;
                      v92[v95 + 32] = 10;
                      *a2 = v92;
                      swift_bridgeObjectRelease();
                    }
                    swift_beginAccess();
                    if (!*(void *)(*(void *)(a1 + 192) + 16)
                      || (uint64_t v96 = swift_bridgeObjectRetain(),
                          sub_1C8D73974(v96, 0x3E7uLL),
                          uint64_t result = swift_bridgeObjectRelease(),
                          !v5))
                    {
                      swift_bridgeObjectRetain();
                      sub_1C8D3CD9C((uint64_t)a2, 1000, 0x20000000, a5);
                      return swift_bridgeObjectRelease();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C8D70D50(BOOL a1, char a2)
{
  unint64_t v3 = a1;
  int v4 = a2 & 1;
  sub_1C8D679C4(a1, a2 & 1, (uint64_t)v16);
  sub_1C8CC4098((uint64_t)v16, (uint64_t)v17, &qword_1EA566230);
  if (v18 != 255)
  {
    sub_1C8CA6060(v17[0], v17[1], (unsigned __int8 *)v18);
    return sub_1C8CCC5AC((uint64_t)v16);
  }
  if (v4)
  {
    unint64_t v3 = v3 != 0;
  }
  else if ((v3 & 0x8000000000000000) != 0)
  {
    uint64_t v5 = *v2;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    void *v2 = v5;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v5 = sub_1C8D5EB50(0, *((void *)v5 + 2) + 1, 1, v5);
      void *v2 = v5;
    }
    unint64_t v7 = *((void *)v5 + 2);
    unint64_t v8 = *((void *)v5 + 3);
    unint64_t v9 = v7 + 1;
    if (v7 >= v8 >> 1)
    {
      unint64_t v15 = v7 + 1;
      unint64_t v12 = v5;
      unint64_t v13 = *((void *)v5 + 2);
      uint64_t v14 = sub_1C8D5EB50((char *)(v8 > 1), v7 + 1, 1, v12);
      unint64_t v7 = v13;
      unint64_t v9 = v15;
      uint64_t v5 = v14;
    }
    *((void *)v5 + 2) = v9;
    v5[v7 + 32] = 45;
    void *v2 = v5;
    unint64_t v10 = -(uint64_t)v3;
    return sub_1C8D5C98C(v10);
  }
  unint64_t v10 = v3;
  return sub_1C8D5C98C(v10);
}

uint64_t sub_1C8D70E70(unint64_t a1, char a2)
{
  return sub_1C8D70EA0(a1, a2, (void (*)(void *__return_ptr, unint64_t, void))sub_1C8D67B8C);
}

uint64_t sub_1C8D70E88(unint64_t a1, char a2)
{
  return sub_1C8D70EA0(a1, a2, (void (*)(void *__return_ptr, unint64_t, void))sub_1C8D67D44);
}

uint64_t sub_1C8D70EA0(unint64_t a1, char a2, void (*a3)(void *__return_ptr, unint64_t, void))
{
  int v5 = a2 & 1;
  a3(v17, a1, a2 & 1);
  sub_1C8CC4098((uint64_t)v17, (uint64_t)v18, &qword_1EA566230);
  if (v19 == 255)
  {
    if (v5 || (a1 & 0x8000000000000000) == 0)
    {
      unint64_t v11 = a1;
    }
    else
    {
      unint64_t v6 = *v3;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *unint64_t v3 = v6;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v6 = sub_1C8D5EB50(0, *((void *)v6 + 2) + 1, 1, v6);
        *unint64_t v3 = v6;
      }
      unint64_t v8 = *((void *)v6 + 2);
      unint64_t v9 = *((void *)v6 + 3);
      unint64_t v10 = v8 + 1;
      if (v8 >= v9 >> 1)
      {
        unint64_t v16 = v8 + 1;
        unint64_t v13 = v6;
        unint64_t v14 = *((void *)v6 + 2);
        unint64_t v15 = sub_1C8D5EB50((char *)(v9 > 1), v8 + 1, 1, v13);
        unint64_t v8 = v14;
        unint64_t v10 = v16;
        unint64_t v6 = v15;
      }
      *((void *)v6 + 2) = v10;
      v6[v8 + 32] = 45;
      *unint64_t v3 = v6;
      unint64_t v11 = -(uint64_t)a1;
    }
    return sub_1C8D5C98C(v11);
  }
  else
  {
    sub_1C8CA6060(v18[0], v18[1], (unsigned __int8 *)v19);
    return sub_1C8CCC5AC((uint64_t)v17);
  }
}

uint64_t sub_1C8D70FBC(unsigned __int8 a1)
{
  return sub_1C8D70FEC(a1, (void (*)(void *__return_ptr))sub_1C8D680B8);
}

uint64_t sub_1C8D70FD4(unsigned __int8 a1)
{
  return sub_1C8D70FEC(a1, (void (*)(void *__return_ptr))sub_1C8D68270);
}

uint64_t sub_1C8D70FEC(unsigned __int8 a1, void (*a2)(void *__return_ptr))
{
  a2(v4);
  sub_1C8CC4098((uint64_t)v4, (uint64_t)v5, &qword_1EA566230);
  if (v6 == 255) {
    return sub_1C8D5C98C(a1);
  }
  sub_1C8CA6060(v5[0], v5[1], (unsigned __int8 *)v6);
  return sub_1C8CCC5AC((uint64_t)v4);
}

uint64_t sub_1C8D7105C(unsigned __int8 a1, void (*a2)(void *__return_ptr))
{
  a2(v4);
  sub_1C8CC4098((uint64_t)v4, (uint64_t)v5, &qword_1EA566230);
  if (v6 == 255) {
    return sub_1C8D5C98C(a1 + 1);
  }
  sub_1C8CA6060(v5[0], v5[1], (unsigned __int8 *)v6);
  return sub_1C8CCC5AC((uint64_t)v4);
}

uint64_t sub_1C8D710D0(unsigned __int8 a1)
{
  return sub_1C8D70FEC(a1, (void (*)(void *__return_ptr))sub_1C8D687A0);
}

uint64_t sub_1C8D710E8(uint64_t a1, char a2)
{
  unint64_t v3 = a1;
  int v4 = a2 & 1;
  sub_1C8D67804(a1, a2 & 1, (uint64_t)v16);
  sub_1C8CC4098((uint64_t)v16, (uint64_t)v17, &qword_1EA566230);
  if (v18 != 255)
  {
    sub_1C8CA6060(v17[0], v17[1], (unsigned __int8 *)v18);
    return sub_1C8CCC5AC((uint64_t)v16);
  }
  if (v4)
  {
    unint64_t v3 = 0;
  }
  else if ((v3 & 0x8000000000000000) != 0)
  {
    int v5 = *v2;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    void *v2 = v5;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      int v5 = sub_1C8D5EB50(0, *((void *)v5 + 2) + 1, 1, v5);
      void *v2 = v5;
    }
    unint64_t v7 = *((void *)v5 + 2);
    unint64_t v8 = *((void *)v5 + 3);
    unint64_t v9 = v7 + 1;
    if (v7 >= v8 >> 1)
    {
      unint64_t v15 = v7 + 1;
      unint64_t v12 = v5;
      unint64_t v13 = *((void *)v5 + 2);
      unint64_t v14 = sub_1C8D5EB50((char *)(v8 > 1), v7 + 1, 1, v12);
      unint64_t v7 = v13;
      unint64_t v9 = v15;
      int v5 = v14;
    }
    *((void *)v5 + 2) = v9;
    v5[v7 + 32] = 45;
    void *v2 = v5;
    unint64_t v10 = -(uint64_t)v3;
    return sub_1C8D5C98C(v10);
  }
  unint64_t v10 = v3;
  return sub_1C8D5C98C(v10);
}

uint64_t sub_1C8D71204(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5)
{
  sub_1C8CA5968(a5);
  sub_1C8CA6B04(v11);
  void v21[3] = &type metadata for Google_Protobuf_SourceContext;
  void v21[4] = sub_1C8CC4204();
  unint64_t v12 = (void *)swift_allocObject();
  v21[0] = v12;
  char v12[2] = a1;
  v12[3] = a2;
  uint64_t v12[4] = a3;
  v12[5] = a4;
  uint64_t v13 = *(void *)v5;
  uint64_t v14 = *(void *)(v5 + 8);
  char v23 = *(unsigned char *)(v5 + 64);
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(a3, a4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8CA42C0((uint64_t)v21, v13, v14, &v23, (uint64_t)v22);
  sub_1C8D7A698(v22, a1, a2, a3, a4);
  if (v6)
  {
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    unint64_t v15 = v22[0];
    unint64_t v16 = v22[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)uint64_t v5 = v15;
    *(void *)(v5 + 8) = v16;
    sub_1C8CA7498(*((void *)v16 + 2) - 1);
    sub_1C8CA7498(*(void *)(*(void *)(v5 + 8) + 16) - 1);
    uint64_t v17 = swift_bridgeObjectRetain();
    sub_1C8CA67D4(v17);
    sub_1C8CA6060((uint64_t)"}\n", 2, v18);
    unsigned __int8 v19 = v22[2];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C((uint64_t)v19);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C8D713D8(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  sub_1C8CA5968(a4);
  sub_1C8CA6B04(v9);
  v18[3] = &type metadata for Google_Protobuf_Any;
  v18[0] = a1;
  v18[1] = a2;
  uint64_t v18[4] = sub_1C8CC415C();
  void v18[2] = a3;
  uint64_t v10 = *(void *)v4;
  uint64_t v11 = *(void *)(v4 + 8);
  char v20 = *(unsigned char *)(v4 + 64);
  sub_1C8CA3CF8(a1, a2);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8CA42C0((uint64_t)v18, v10, v11, &v20, (uint64_t)v19);
  sub_1C8CA3CF8(a1, a2);
  swift_retain();
  sub_1C8D634A0(v19);
  sub_1C8CA3CF8(a1, a2);
  sub_1C8D2D968((uint64_t)v19, a1, a2);
  sub_1C8CA3D5C(a1, a2);
  if (v5)
  {
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    sub_1C8CA3D5C(a1, a2);
    swift_release();
    unint64_t v12 = v19[0];
    uint64_t v13 = v19[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)uint64_t v4 = v12;
    *(void *)(v4 + 8) = v13;
    sub_1C8CA7498(*((void *)v13 + 2) - 1);
    sub_1C8CA7498(*(void *)(*(void *)(v4 + 8) + 16) - 1);
    uint64_t v14 = swift_bridgeObjectRetain();
    sub_1C8CA67D4(v14);
    sub_1C8CA6060((uint64_t)"}\n", 2, v15);
    unint64_t v16 = v19[2];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C((uint64_t)v16);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C8D715E8(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  sub_1C8CA5968(a4);
  sub_1C8CA6B04(v9);
  v18[3] = &type metadata for Google_Protobuf_SourceCodeInfo;
  v18[0] = a1;
  v18[1] = a2;
  uint64_t v18[4] = sub_1C8D06934();
  void v18[2] = a3;
  uint64_t v10 = *(void *)v4;
  uint64_t v11 = *(void *)(v4 + 8);
  char v20 = *(unsigned char *)(v4 + 64);
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(a2, a3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8CA42C0((uint64_t)v18, v10, v11, &v20, (uint64_t)v19);
  if (*(void *)(a1 + 16) && (sub_1C8D73734(a1, 1uLL), v5) || (sub_1C8D2D968((uint64_t)v19, a2, a3), v5))
  {
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    uint64_t v12 = v19[0];
    uint64_t v13 = v19[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)uint64_t v4 = v12;
    *(void *)(v4 + 8) = v13;
    sub_1C8CA7498(*(void *)(v13 + 16) - 1);
    sub_1C8CA7498(*(void *)(*(void *)(v4 + 8) + 16) - 1);
    uint64_t v14 = swift_bridgeObjectRetain();
    sub_1C8CA67D4(v14);
    sub_1C8CA6060((uint64_t)"}\n", 2, v15);
    uint64_t v16 = v19[2];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v16);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C8D717C4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  sub_1C8CA5968(a5);
  sub_1C8CA6B04(v11);
  v22[3] = &type metadata for Google_Protobuf_FileOptions;
  uint64_t v22[4] = sub_1C8D040D4();
  uint64_t v12 = (void *)swift_allocObject();
  v22[0] = v12;
  char v12[2] = a1;
  v12[3] = a2;
  uint64_t v12[4] = a3;
  v12[5] = a4;
  uint64_t v13 = *(void *)v5;
  uint64_t v14 = *(void *)(v5 + 8);
  char v24 = *(unsigned char *)(v5 + 64);
  sub_1C8CA3CF8(a1, a2);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8CA42C0((uint64_t)v22, v13, v14, &v24, (uint64_t)v23);
  uint64_t v15 = swift_retain();
  sub_1C8D70178(v15, v23, a1, a2, a3);
  if (v6)
  {
    swift_release();
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    swift_release();
    sub_1C8D2D968((uint64_t)v23, a1, a2);
    uint64_t v16 = v23[0];
    uint64_t v17 = v23[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)uint64_t v5 = v16;
    *(void *)(v5 + 8) = v17;
    sub_1C8CA7498(*((void *)v17 + 2) - 1);
    sub_1C8CA7498(*(void *)(*(void *)(v5 + 8) + 16) - 1);
    uint64_t v18 = swift_bridgeObjectRetain();
    sub_1C8CA67D4(v18);
    sub_1C8CA6060((uint64_t)"}\n", 2, v19);
    char v20 = v23[2];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C((uint64_t)v20);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C8D719D0(uint64_t a1, unint64_t a2)
{
  sub_1C8CA5968(a2);
  sub_1C8CA6B04(v5);
  v16[3] = &type metadata for Google_Protobuf_FieldOptions;
  void v16[4] = sub_1C8D0378C();
  uint64_t v6 = swift_allocObject();
  v16[0] = v6;
  long long v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v6 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v6 + 32) = v7;
  *(void *)(v6 + 46) = *(void *)(a1 + 30);
  uint64_t v8 = *(void *)v2;
  uint64_t v9 = *(void *)(v2 + 8);
  char v18 = *(unsigned char *)(v2 + 64);
  sub_1C8D80C00(a1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8CA42C0((uint64_t)v16, v8, v9, &v18, (uint64_t)v17);
  sub_1C8CF2BB4(v17);
  if (v3)
  {
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    uint64_t v10 = v17[0];
    uint64_t v11 = v17[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)uint64_t v2 = v10;
    *(void *)(v2 + 8) = v11;
    sub_1C8CA7498(*((void *)v11 + 2) - 1);
    sub_1C8CA7498(*(void *)(*(void *)(v2 + 8) + 16) - 1);
    uint64_t v12 = swift_bridgeObjectRetain();
    sub_1C8CA67D4(v12);
    sub_1C8CA6060((uint64_t)"}\n", 2, v13);
    uint64_t v14 = v17[2];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C((uint64_t)v14);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C8D71B90(uint64_t a1, unint64_t a2)
{
  sub_1C8CA5968(a2);
  sub_1C8CA6B04(v5);
  v16[3] = &type metadata for Google_Protobuf_MethodOptions;
  void v16[4] = sub_1C8D03B0C();
  uint64_t v6 = swift_allocObject();
  v16[0] = v6;
  long long v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v6 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v6 + 32) = v7;
  *(_WORD *)(v6 + 48) = *(_WORD *)(a1 + 32);
  uint64_t v8 = *(void *)v2;
  uint64_t v9 = *(void *)(v2 + 8);
  char v18 = *(unsigned char *)(v2 + 64);
  sub_1C8D80C00(a1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8CA42C0((uint64_t)v16, v8, v9, &v18, (uint64_t)v17);
  sub_1C8CF5A58(v17);
  if (v3)
  {
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    uint64_t v10 = v17[0];
    uint64_t v11 = v17[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)uint64_t v2 = v10;
    *(void *)(v2 + 8) = v11;
    sub_1C8CA7498(*((void *)v11 + 2) - 1);
    sub_1C8CA7498(*(void *)(*(void *)(v2 + 8) + 16) - 1);
    uint64_t v12 = swift_bridgeObjectRetain();
    sub_1C8CA67D4(v12);
    sub_1C8CA6060((uint64_t)"}\n", 2, v13);
    uint64_t v14 = v17[2];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C((uint64_t)v14);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C8D71D50(uint64_t *a1, unint64_t a2)
{
  sub_1C8CA5968(a2);
  sub_1C8CA6B04(v5);
  v16[3] = &type metadata for Google_Protobuf_EnumOptions;
  void v16[4] = sub_1C8D038DC();
  uint64_t v6 = swift_allocObject();
  v16[0] = v6;
  long long v7 = *((_OWORD *)a1 + 1);
  *(_OWORD *)(v6 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v6 + 32) = v7;
  *(_WORD *)(v6 + 48) = *((_WORD *)a1 + 16);
  uint64_t v8 = *(void *)v2;
  uint64_t v9 = *(void *)(v2 + 8);
  char v20 = *(unsigned char *)(v2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8D80C00((uint64_t)a1);
  sub_1C8CA42C0((uint64_t)v16, v8, v9, &v20, (uint64_t)v17);
  sub_1C8CC4098((uint64_t)(a1 + 4), (uint64_t)&v19, &qword_1EA566138);
  sub_1C8CC4098((uint64_t)&v19, (uint64_t)&v20, &qword_1EA566138);
  if (v20 != 2 && (sub_1C8CAB1C0(v20 & 1, 2uLL), v3)
    || (sub_1C8CC4098((uint64_t)a1 + 33, (uint64_t)&v18, &qword_1EA566138),
        sub_1C8CC4098((uint64_t)&v18, (uint64_t)v16, &qword_1EA566138),
        LOBYTE(v16[0]) != 2)
    && (sub_1C8CAB1C0(v16[0] & 1, 3uLL), v3)
    || *(void *)(*a1 + 16) && (sub_1C8D73974(*a1, 0x3E7uLL), v3)
    || (sub_1C8D3CD9C((uint64_t)v17, 1000, 0x20000000, a1[3]), v3))
  {
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    sub_1C8D2D968((uint64_t)v17, a1[1], a1[2]);
    uint64_t v10 = v17[0];
    uint64_t v11 = v17[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)uint64_t v2 = v10;
    *(void *)(v2 + 8) = v11;
    sub_1C8CA7498(*(void *)(v11 + 16) - 1);
    sub_1C8CA7498(*(void *)(*(void *)(v2 + 8) + 16) - 1);
    uint64_t v12 = swift_bridgeObjectRetain();
    sub_1C8CA67D4(v12);
    sub_1C8CA6060((uint64_t)"}\n", 2, v13);
    uint64_t v14 = v17[2];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v14);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C8D71FF8(uint64_t *a1, unint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5, unint64_t a6)
{
  sub_1C8CA5968(a2);
  uint64_t v13 = sub_1C8CA6B04(v12);
  v24[3] = a3;
  v24[4] = a4(v13);
  uint64_t v14 = swift_allocObject();
  v24[0] = v14;
  long long v15 = *((_OWORD *)a1 + 1);
  *(_OWORD *)(v14 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v14 + 32) = v15;
  *(unsigned char *)(v14 + 48) = *((unsigned char *)a1 + 32);
  uint64_t v16 = *(void *)v6;
  uint64_t v17 = *(void *)(v6 + 8);
  char v26 = *(unsigned char *)(v6 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8D80C00((uint64_t)a1);
  sub_1C8CA42C0((uint64_t)v24, v16, v17, &v26, (uint64_t)v25);
  sub_1C8CC4098((uint64_t)(a1 + 4), (uint64_t)&v26, &qword_1EA566138);
  sub_1C8CC4098((uint64_t)&v26, (uint64_t)v24, &qword_1EA566138);
  if (LOBYTE(v24[0]) != 2 && (sub_1C8CAB1C0(v24[0] & 1, a6), v7)
    || *(void *)(*a1 + 16) && (sub_1C8D73974(*a1, 0x3E7uLL), v7)
    || (sub_1C8D3CD9C((uint64_t)v25, 1000, 0x20000000, a1[3]), v7))
  {
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    sub_1C8D2D968((uint64_t)v25, a1[1], a1[2]);
    uint64_t v18 = v25[0];
    uint64_t v19 = v25[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)uint64_t v6 = v18;
    *(void *)(v6 + 8) = v19;
    sub_1C8CA7498(*(void *)(v19 + 16) - 1);
    sub_1C8CA7498(*(void *)(*(void *)(v6 + 8) + 16) - 1);
    uint64_t v20 = swift_bridgeObjectRetain();
    sub_1C8CA67D4(v20);
    sub_1C8CA6060((uint64_t)"}\n", 2, v21);
    uint64_t v22 = v25[2];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v22);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C8D72258(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  return sub_1C8D72618(a1, a2, a3, a4, a5, (uint64_t)&type metadata for Google_Protobuf_OneofOptions, (uint64_t (*)(uint64_t))sub_1C8D03888);
}

uint64_t sub_1C8D72294(uint64_t *a1, unint64_t a2)
{
  sub_1C8CA5968(a2);
  sub_1C8CA6B04(v5);
  v16[3] = &type metadata for Google_Protobuf_MessageOptions;
  void v16[4] = sub_1C8D03738();
  uint64_t v6 = swift_allocObject();
  v16[0] = v6;
  long long v7 = *((_OWORD *)a1 + 1);
  *(_OWORD *)(v6 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v6 + 32) = v7;
  *(_DWORD *)(v6 + 48) = *((_DWORD *)a1 + 8);
  uint64_t v8 = *(void *)v2;
  uint64_t v9 = *(void *)(v2 + 8);
  char v24 = *(unsigned char *)(v2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8D80C00((uint64_t)a1);
  sub_1C8CA42C0((uint64_t)v16, v8, v9, &v24, (uint64_t)v17);
  sub_1C8CC4098((uint64_t)(a1 + 4), (uint64_t)&v21, &qword_1EA566138);
  sub_1C8CC4098((uint64_t)&v21, (uint64_t)&v22, &qword_1EA566138);
  if (v22 != 2)
  {
    sub_1C8CAB1C0(v22 & 1, 1uLL);
    if (v3) {
      goto LABEL_13;
    }
  }
  sub_1C8CC4098((uint64_t)a1 + 33, (uint64_t)&v20, &qword_1EA566138);
  sub_1C8CC4098((uint64_t)&v20, (uint64_t)&v23, &qword_1EA566138);
  if (v23 != 2)
  {
    sub_1C8CAB1C0(v23 & 1, 2uLL);
    if (v3) {
      goto LABEL_13;
    }
  }
  sub_1C8CC4098((uint64_t)a1 + 34, (uint64_t)&v19, &qword_1EA566138);
  sub_1C8CC4098((uint64_t)&v19, (uint64_t)&v24, &qword_1EA566138);
  if (v24 != 2)
  {
    sub_1C8CAB1C0(v24 & 1, 3uLL);
    if (v3) {
      goto LABEL_13;
    }
  }
  if ((sub_1C8CC4098((uint64_t)a1 + 35, (uint64_t)&v18, &qword_1EA566138),
        sub_1C8CC4098((uint64_t)&v18, (uint64_t)v16, &qword_1EA566138),
        LOBYTE(v16[0]) != 2)
    && (sub_1C8CAB1C0(v16[0] & 1, 7uLL), v3)
    || *(void *)(*a1 + 16) && (sub_1C8D73974(*a1, 0x3E7uLL), v3)
    || (sub_1C8D3CD9C((uint64_t)v17, 1000, 0x20000000, a1[3]), v3))
  {
LABEL_13:
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    sub_1C8D2D968((uint64_t)v17, a1[1], a1[2]);
    uint64_t v10 = v17[0];
    uint64_t v11 = v17[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)uint64_t v2 = v10;
    *(void *)(v2 + 8) = v11;
    sub_1C8CA7498(*(void *)(v11 + 16) - 1);
    sub_1C8CA7498(*(void *)(*(void *)(v2 + 8) + 16) - 1);
    uint64_t v12 = swift_bridgeObjectRetain();
    sub_1C8CA67D4(v12);
    sub_1C8CA6060((uint64_t)"}\n", 2, v13);
    uint64_t v14 = v17[2];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v14);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C8D725DC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  return sub_1C8D72618(a1, a2, a3, a4, a5, (uint64_t)&type metadata for Google_Protobuf_ExtensionRangeOptions, (uint64_t (*)(uint64_t))sub_1C8D02F04);
}

uint64_t sub_1C8D72618(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v11 = v8;
  sub_1C8CA5968(a5);
  uint64_t v17 = sub_1C8CA6B04(v16);
  v27[3] = a6;
  uint64_t v27[4] = a7(v17);
  char v18 = (void *)swift_allocObject();
  v27[0] = v18;
  void v18[2] = a1;
  v18[3] = a2;
  uint64_t v18[4] = a3;
  void v18[5] = a4;
  uint64_t v19 = *(void *)v7;
  uint64_t v20 = *(void *)(v7 + 8);
  char v29 = *(unsigned char *)(v7 + 64);
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(a2, a3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8CA42C0((uint64_t)v27, v19, v20, &v29, (uint64_t)v28);
  if (*(void *)(a1 + 16) && (sub_1C8D73974(a1, 0x3E7uLL), v11)
    || (sub_1C8D3CD9C((uint64_t)v28, 1000, 0x20000000, a4), v11))
  {
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    sub_1C8D2D968((uint64_t)v28, a2, a3);
    uint64_t v21 = v28[0];
    uint64_t v22 = v28[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)uint64_t v7 = v21;
    *(void *)(v7 + 8) = v22;
    sub_1C8CA7498(*(void *)(v22 + 16) - 1);
    sub_1C8CA7498(*(void *)(*(void *)(v7 + 8) + 16) - 1);
    uint64_t v23 = swift_bridgeObjectRetain();
    sub_1C8CA67D4(v23);
    sub_1C8CA6060((uint64_t)"}\n", 2, v24);
    uint64_t v25 = v28[2];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v25);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C8D72844(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  sub_1C8CA5968(a4);
  sub_1C8CA6B04(v9);
  v18[3] = &type metadata for Google_Protobuf_ListValue;
  v18[0] = a1;
  v18[1] = a2;
  uint64_t v18[4] = sub_1C8D4CAE0();
  void v18[2] = a3;
  uint64_t v10 = *(void *)v4;
  uint64_t v11 = *(void *)(v4 + 8);
  char v20 = *(unsigned char *)(v4 + 64);
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(a2, a3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8CA42C0((uint64_t)v18, v10, v11, &v20, (uint64_t)v19);
  if (*(void *)(a1 + 16)
    && (sub_1C8D7467C(a1, 1uLL, (uint64_t)&type metadata for Google_Protobuf_Value, (uint64_t (*)(uint64_t))sub_1C8D4CB88, (void (*)(uint64_t, void *))sub_1C8D7D738), v5)|| (sub_1C8D2D968((uint64_t)v19, a2, a3), v5))
  {
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    uint64_t v12 = v19[0];
    uint64_t v13 = v19[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)uint64_t v4 = v12;
    *(void *)(v4 + 8) = v13;
    sub_1C8CA7498(*(void *)(v13 + 16) - 1);
    sub_1C8CA7498(*(void *)(*(void *)(v4 + 8) + 16) - 1);
    uint64_t v14 = swift_bridgeObjectRetain();
    sub_1C8CA67D4(v14);
    sub_1C8CA6060((uint64_t)"}\n", 2, v15);
    uint64_t v16 = v19[2];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v16);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C8D72A50(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  sub_1C8CA5968(a4);
  sub_1C8CA6B04(v9);
  v18[3] = &type metadata for Google_Protobuf_Struct;
  v18[0] = a1;
  v18[1] = a2;
  uint64_t v18[4] = sub_1C8D4CB34();
  void v18[2] = a3;
  uint64_t v10 = *(void *)v4;
  uint64_t v11 = *(void *)(v4 + 8);
  char v20 = *(unsigned char *)(v4 + 64);
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(a2, a3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8CA42C0((uint64_t)v18, v10, v11, &v20, (uint64_t)v19);
  if (*(void *)(a1 + 16) && (sub_1C8D30F2C(a1, 1, v19), v5) || (sub_1C8D2D968((uint64_t)v19, a2, a3), v5))
  {
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    uint64_t v12 = v19[0];
    uint64_t v13 = v19[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)uint64_t v4 = v12;
    *(void *)(v4 + 8) = v13;
    sub_1C8CA7498(*(void *)(v13 + 16) - 1);
    sub_1C8CA7498(*(void *)(*(void *)(v4 + 8) + 16) - 1);
    uint64_t v14 = swift_bridgeObjectRetain();
    sub_1C8CA67D4(v14);
    sub_1C8CA6060((uint64_t)"}\n", 2, v15);
    uint64_t v16 = v19[2];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v16);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C8D72C24(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  sub_1C8CA5968(a4);
  sub_1C8CA6B04(v9);
  void v19[3] = &type metadata for Google_Protobuf_Value;
  v19[0] = a1;
  v19[1] = a2;
  uint64_t v19[4] = sub_1C8D4CB88();
  long long v19[2] = a3;
  uint64_t v10 = *(void *)v4;
  uint64_t v11 = *(void *)(v4 + 8);
  char v21 = *(unsigned char *)(v4 + 64);
  sub_1C8CA3CF8(a1, a2);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8CA42C0((uint64_t)v19, v10, v11, &v21, (uint64_t)v20);
  uint64_t v12 = swift_retain();
  sub_1C8D7D738(v12, v20);
  if (v5)
  {
    swift_release();
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    swift_release();
    sub_1C8D2D968((uint64_t)v20, a1, a2);
    uint64_t v13 = v20[0];
    uint64_t v14 = v20[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)uint64_t v4 = v13;
    *(void *)(v4 + 8) = v14;
    sub_1C8CA7498(*((void *)v14 + 2) - 1);
    sub_1C8CA7498(*(void *)(*(void *)(v4 + 8) + 16) - 1);
    uint64_t v15 = swift_bridgeObjectRetain();
    sub_1C8CA67D4(v15);
    sub_1C8CA6060((uint64_t)"}\n", 2, v16);
    uint64_t v17 = v20[2];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C((uint64_t)v17);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C8D72DFC(uint64_t a1, unint64_t a2)
{
  return sub_1C8D7467C(a1, a2, (uint64_t)&type metadata for Google_Protobuf_Option, (uint64_t (*)(uint64_t))sub_1C8CC23C8, (void (*)(uint64_t, void *))sub_1C8D6C1B0);
}

uint64_t sub_1C8D72E44(uint64_t result, unint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(result + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)v2;
    char v31 = *(unsigned char *)(v2 + 64);
    uint64_t v7 = swift_bridgeObjectRetain();
    uint64_t v8 = 32;
    uint64_t v32 = v7;
    while (1)
    {
      uint64_t v34 = v8;
      uint64_t v35 = v5;
      uint64_t v9 = (long long *)(v7 + v8);
      long long v10 = v9[4];
      long long v11 = v9[6];
      long long v12 = v9[7];
      long long v44 = v9[5];
      long long v45 = v11;
      long long v46 = v12;
      long long v13 = v9[1];
      long long v39 = *v9;
      long long v14 = v9[2];
      long long v15 = v9[3];
      long long v40 = v13;
      long long v41 = v14;
      long long v42 = v15;
      long long v43 = v10;
      sub_1C8D80FBC((uint64_t)&v39);
      sub_1C8CA5968(a2);
      sub_1C8CA6B04(v16);
      void v37[3] = &type metadata for Google_Protobuf_Field;
      v37[4] = sub_1C8CC2D6C();
      uint64_t v17 = (_OWORD *)swift_allocObject();
      long long v18 = v44;
      long long v19 = v45;
      long long v20 = v42;
      void v17[5] = v43;
      v17[6] = v18;
      long long v21 = v46;
      v17[7] = v19;
      v17[8] = v21;
      long long v22 = v40;
      long long v23 = v41;
      v17[1] = v39;
      v17[2] = v22;
      v37[0] = v17;
      void v17[3] = v23;
      uint64_t v17[4] = v20;
      uint64_t v24 = *v6;
      uint64_t v25 = v6[1];
      char v36 = v31;
      sub_1C8D80FBC((uint64_t)&v39);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C8CA42C0((uint64_t)v37, v24, v25, &v36, (uint64_t)v38);
      sub_1C8CBE77C(v38);
      uint64_t v47 = v4;
      if (v4) {
        break;
      }
      char v27 = v38[0];
      char v26 = v38[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *uint64_t v6 = (uint64_t)v27;
      v6[1] = (uint64_t)v26;
      sub_1C8CA7498(*((void *)v26 + 2) - 1);
      sub_1C8CA7498(*(void *)(v6[1] + 16) - 1);
      uint64_t v28 = swift_bridgeObjectRetain();
      sub_1C8CA67D4(v28);
      sub_1C8CA6060((uint64_t)"}\n", 2, v29);
      int v30 = v38[2];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C8CA469C((uint64_t)v30);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C8D81040((uint64_t)&v39);
      uint64_t v8 = v34 + 128;
      --v5;
      uint64_t v4 = v47;
      uint64_t v7 = v32;
      if (v35 == 1) {
        return swift_bridgeObjectRelease();
      }
    }
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D73094(uint64_t result, unint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(result + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)v2;
    char v23 = *(unsigned char *)(v2 + 64);
    uint64_t v7 = swift_bridgeObjectRetain();
    uint64_t v8 = 32;
    uint64_t v24 = v7;
    while (1)
    {
      uint64_t v26 = v8;
      uint64_t v27 = v5;
      uint64_t v9 = (long long *)(v7 + v8);
      long long v10 = v9[1];
      long long v31 = *v9;
      long long v11 = v9[2];
      long long v32 = v10;
      long long v33 = v11;
      sub_1C8D80EBC((uint64_t)&v31);
      sub_1C8CA5968(a2);
      sub_1C8CA6B04(v12);
      v29[3] = &type metadata for Google_Protobuf_EnumValue;
      v29[4] = sub_1C8CC30BC();
      long long v13 = (_OWORD *)swift_allocObject();
      v29[0] = v13;
      long long v14 = v32;
      long long v15 = v33;
      v13[1] = v31;
      void v13[2] = v14;
      void v13[3] = v15;
      uint64_t v16 = *v6;
      uint64_t v17 = v6[1];
      char v28 = v23;
      sub_1C8D80EBC((uint64_t)&v31);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C8CA42C0((uint64_t)v29, v16, v17, &v28, (uint64_t)v30);
      sub_1C8CC0A14(v30);
      uint64_t v34 = v4;
      if (v4) {
        break;
      }
      long long v19 = v30[0];
      long long v18 = v30[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *uint64_t v6 = (uint64_t)v19;
      v6[1] = (uint64_t)v18;
      sub_1C8CA7498(*((void *)v18 + 2) - 1);
      sub_1C8CA7498(*(void *)(v6[1] + 16) - 1);
      uint64_t v20 = swift_bridgeObjectRetain();
      sub_1C8CA67D4(v20);
      sub_1C8CA6060((uint64_t)"}\n", 2, v21);
      long long v22 = v30[2];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C8CA469C((uint64_t)v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C8D80F0C((uint64_t)&v31);
      uint64_t v8 = v26 + 48;
      --v5;
      uint64_t v4 = v34;
      uint64_t v7 = v24;
      if (v27 == 1) {
        return swift_bridgeObjectRelease();
      }
    }
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D732BC(uint64_t result, unint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(result + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)v2;
    char v23 = *(unsigned char *)(v2 + 64);
    uint64_t v7 = swift_bridgeObjectRetain();
    uint64_t v8 = 32;
    uint64_t v24 = v7;
    while (1)
    {
      uint64_t v26 = v8;
      uint64_t v27 = v5;
      uint64_t v9 = (long long *)(v7 + v8);
      long long v10 = v9[1];
      long long v31 = *v9;
      long long v11 = v9[2];
      long long v32 = v10;
      long long v33 = v11;
      sub_1C8D80EBC((uint64_t)&v31);
      sub_1C8CA5968(a2);
      sub_1C8CA6B04(v12);
      v29[3] = &type metadata for Google_Protobuf_Mixin;
      v29[4] = sub_1C8CCAF6C();
      long long v13 = (_OWORD *)swift_allocObject();
      v29[0] = v13;
      long long v14 = v32;
      long long v15 = v33;
      v13[1] = v31;
      void v13[2] = v14;
      void v13[3] = v15;
      uint64_t v16 = *v6;
      uint64_t v17 = v6[1];
      char v28 = v23;
      sub_1C8D80EBC((uint64_t)&v31);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C8CA42C0((uint64_t)v29, v16, v17, &v28, (uint64_t)v30);
      sub_1C8CC9E4C(v30);
      uint64_t v34 = v4;
      if (v4) {
        break;
      }
      long long v19 = v30[0];
      long long v18 = v30[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *uint64_t v6 = (uint64_t)v19;
      v6[1] = (uint64_t)v18;
      sub_1C8CA7498(*((void *)v18 + 2) - 1);
      sub_1C8CA7498(*(void *)(v6[1] + 16) - 1);
      uint64_t v20 = swift_bridgeObjectRetain();
      sub_1C8CA67D4(v20);
      sub_1C8CA6060((uint64_t)"}\n", 2, v21);
      long long v22 = v30[2];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C8CA469C((uint64_t)v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C8D80F0C((uint64_t)&v31);
      uint64_t v8 = v26 + 48;
      --v5;
      uint64_t v4 = v34;
      uint64_t v7 = v24;
      if (v27 == 1) {
        return swift_bridgeObjectRelease();
      }
    }
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D734E4(uint64_t result, unint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(result + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)v2;
    char v27 = *(unsigned char *)(v2 + 64);
    uint64_t v7 = swift_bridgeObjectRetain();
    uint64_t v8 = 32;
    uint64_t v28 = v7;
    while (1)
    {
      uint64_t v30 = v8;
      uint64_t v31 = v5;
      uint64_t v9 = v7 + v8;
      long long v10 = *(_OWORD *)(v9 + 64);
      long long v11 = *(_OWORD *)(v9 + 80);
      long long v12 = *(_OWORD *)(v9 + 32);
      long long v38 = *(_OWORD *)(v9 + 48);
      long long v39 = v10;
      long long v40 = v11;
      long long v13 = *(_OWORD *)(v9 + 16);
      long long v35 = *(_OWORD *)v9;
      uint64_t v41 = *(void *)(v9 + 96);
      long long v36 = v13;
      long long v37 = v12;
      sub_1C8D80D90((uint64_t)&v35);
      sub_1C8CA5968(a2);
      sub_1C8CA6B04(v14);
      v33[3] = &type metadata for Google_Protobuf_Method;
      v33[4] = sub_1C8CCAD88();
      uint64_t v15 = swift_allocObject();
      long long v16 = v38;
      long long v17 = v40;
      *(_OWORD *)(v15 + 80) = v39;
      *(_OWORD *)(v15 + 96) = v17;
      long long v18 = v36;
      long long v19 = v37;
      *(_OWORD *)(v15 + 16) = v35;
      *(_OWORD *)(v15 + 32) = v18;
      v33[0] = v15;
      *(void *)(v15 + 112) = v41;
      *(_OWORD *)(v15 + 48) = v19;
      *(_OWORD *)(v15 + 64) = v16;
      uint64_t v20 = *v6;
      uint64_t v21 = v6[1];
      char v32 = v27;
      sub_1C8D80D90((uint64_t)&v35);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C8CA42C0((uint64_t)v33, v20, v21, &v32, (uint64_t)v34);
      sub_1C8CC90EC(v34);
      uint64_t v42 = v4;
      if (v4) {
        break;
      }
      char v23 = v34[0];
      long long v22 = v34[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *uint64_t v6 = (uint64_t)v23;
      v6[1] = (uint64_t)v22;
      sub_1C8CA7498(*((void *)v22 + 2) - 1);
      sub_1C8CA7498(*(void *)(v6[1] + 16) - 1);
      uint64_t v24 = swift_bridgeObjectRetain();
      sub_1C8CA67D4(v24);
      sub_1C8CA6060((uint64_t)"}\n", 2, v25);
      uint64_t v26 = v34[2];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C8CA469C((uint64_t)v26);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C8D80E00((uint64_t)&v35);
      uint64_t v8 = v30 + 104;
      --v5;
      uint64_t v4 = v42;
      uint64_t v7 = v28;
      if (v31 == 1) {
        return swift_bridgeObjectRelease();
      }
    }
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D73734(uint64_t result, unint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(result + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)v2;
    char v24 = *(unsigned char *)(v2 + 64);
    uint64_t v7 = swift_bridgeObjectRetain();
    uint64_t v8 = 32;
    uint64_t v25 = v7;
    while (1)
    {
      uint64_t v27 = v8;
      uint64_t v28 = v5;
      uint64_t v9 = v7 + v8;
      long long v10 = *(_OWORD *)(v9 + 32);
      long long v11 = *(_OWORD *)(v9 + 48);
      long long v12 = *(_OWORD *)v9;
      long long v33 = *(_OWORD *)(v9 + 16);
      long long v34 = v10;
      long long v35 = v11;
      uint64_t v36 = *(void *)(v9 + 64);
      long long v32 = v12;
      sub_1C8D808EC((uint64_t)&v32);
      sub_1C8CA5968(a2);
      sub_1C8CA6B04(v13);
      v30[3] = &type metadata for Google_Protobuf_SourceCodeInfo.Location;
      v30[4] = sub_1C8D03C08();
      uint64_t v14 = swift_allocObject();
      v30[0] = v14;
      long long v15 = v33;
      long long v16 = v35;
      *(_OWORD *)(v14 + 48) = v34;
      *(_OWORD *)(v14 + 64) = v16;
      *(void *)(v14 + 80) = v36;
      *(_OWORD *)(v14 + 16) = v32;
      *(_OWORD *)(v14 + 32) = v15;
      uint64_t v17 = *v6;
      uint64_t v18 = v6[1];
      char v29 = v24;
      sub_1C8D808EC((uint64_t)&v32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C8CA42C0((uint64_t)v30, v17, v18, &v29, (uint64_t)v31);
      sub_1C8CF8540(v31);
      uint64_t v37 = v4;
      if (v4) {
        break;
      }
      uint64_t v20 = v31[0];
      long long v19 = v31[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *uint64_t v6 = (uint64_t)v20;
      v6[1] = (uint64_t)v19;
      sub_1C8CA7498(*((void *)v19 + 2) - 1);
      sub_1C8CA7498(*(void *)(v6[1] + 16) - 1);
      uint64_t v21 = swift_bridgeObjectRetain();
      sub_1C8CA67D4(v21);
      sub_1C8CA6060((uint64_t)"}\n", 2, v22);
      char v23 = v31[2];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C8CA469C((uint64_t)v23);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C8D8096C((uint64_t)&v32);
      uint64_t v8 = v27 + 72;
      --v5;
      uint64_t v4 = v37;
      uint64_t v7 = v25;
      if (v28 == 1) {
        return swift_bridgeObjectRelease();
      }
    }
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D73974(uint64_t result, unint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(result + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)v2;
    char v29 = *(unsigned char *)(v2 + 64);
    uint64_t v7 = swift_bridgeObjectRetain();
    uint64_t v8 = 32;
    uint64_t v30 = v7;
    while (1)
    {
      uint64_t v32 = v8;
      uint64_t v33 = v5;
      uint64_t v9 = v7 + v8;
      long long v10 = *(_OWORD *)(v9 + 64);
      long long v11 = *(_OWORD *)(v9 + 96);
      long long v42 = *(_OWORD *)(v9 + 80);
      long long v43 = v11;
      long long v12 = *(_OWORD *)(v9 + 16);
      long long v37 = *(_OWORD *)v9;
      long long v13 = *(_OWORD *)(v9 + 32);
      long long v14 = *(_OWORD *)(v9 + 48);
      long long v38 = v12;
      long long v39 = v13;
      uint64_t v44 = *(void *)(v9 + 112);
      long long v40 = v14;
      long long v41 = v10;
      sub_1C8D80AD0(&v37);
      sub_1C8CA5968(a2);
      sub_1C8CA6B04(v15);
      v35[3] = &type metadata for Google_Protobuf_UninterpretedOption;
      void v35[4] = sub_1C8D02F58();
      uint64_t v16 = swift_allocObject();
      long long v17 = v42;
      long long v18 = v43;
      long long v19 = v40;
      *(_OWORD *)(v16 + 80) = v41;
      *(_OWORD *)(v16 + 96) = v17;
      *(_OWORD *)(v16 + 112) = v18;
      long long v20 = v38;
      long long v21 = v39;
      *(_OWORD *)(v16 + 16) = v37;
      *(_OWORD *)(v16 + 32) = v20;
      v35[0] = v16;
      *(void *)(v16 + 128) = v44;
      *(_OWORD *)(v16 + 48) = v21;
      *(_OWORD *)(v16 + 64) = v19;
      uint64_t v22 = *v6;
      uint64_t v23 = v6[1];
      char v34 = v29;
      sub_1C8D80AD0(&v37);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C8CA42C0((uint64_t)v35, v22, v23, &v34, (uint64_t)v36);
      sub_1C8CF6970(v36);
      uint64_t v45 = v4;
      if (v4) {
        break;
      }
      uint64_t v25 = v36[0];
      char v24 = v36[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *uint64_t v6 = (uint64_t)v25;
      v6[1] = (uint64_t)v24;
      sub_1C8CA7498(*((void *)v24 + 2) - 1);
      sub_1C8CA7498(*(void *)(v6[1] + 16) - 1);
      uint64_t v26 = swift_bridgeObjectRetain();
      sub_1C8CA67D4(v26);
      sub_1C8CA6060((uint64_t)"}\n", 2, v27);
      uint64_t v28 = v36[2];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C8CA469C((uint64_t)v28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C8D80B54(&v37);
      uint64_t v8 = v32 + 120;
      --v5;
      uint64_t v4 = v45;
      uint64_t v7 = v30;
      if (v33 == 1) {
        return swift_bridgeObjectRelease();
      }
    }
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D73BCC(uint64_t result, unint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(result + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)v2;
    int v38 = *(unsigned __int8 *)(v2 + 64);
    char v29 = (uint64_t *)v2;
    uint64_t v7 = (unsigned __int8 *)(swift_bridgeObjectRetain() + 64);
    while (1)
    {
      uint64_t v35 = v4;
      uint64_t v9 = *((void *)v7 - 4);
      unint64_t v8 = *((void *)v7 - 3);
      int v10 = *v7;
      uint64_t v12 = *((void *)v7 - 2);
      unint64_t v11 = *((void *)v7 - 1);
      sub_1C8CA3CF8(v9, v8);
      swift_bridgeObjectRetain();
      sub_1C8CA5968(a2);
      sub_1C8CA6B04(v13);
      void v36[3] = &type metadata for Google_Protobuf_UninterpretedOption.NamePart;
      v36[4] = sub_1C8D03BB4();
      uint64_t v14 = swift_allocObject();
      v36[0] = v14;
      *(void *)(v14 + 16) = v9;
      *(void *)(v14 + 24) = v8;
      *(void *)(v14 + 32) = v12;
      *(void *)(v14 + 40) = v11;
      *(unsigned char *)(v14 + 48) = v10;
      uint64_t v15 = *v6;
      uint64_t v16 = v6[1];
      char v39 = v38;
      uint64_t v33 = v9;
      unint64_t v34 = v8;
      uint64_t v17 = v9;
      uint64_t v18 = v15;
      sub_1C8CA3CF8(v17, v8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C8CA42C0((uint64_t)v36, v18, v16, &v39, (uint64_t)v37);
      if (v11)
      {
        sub_1C8CA5968(1uLL);
        sub_1C8CA6060((uint64_t)": ", 2, v19);
        sub_1C8CA6D2C(v12, v11);
        long long v20 = (char *)v37[0];
        uint64_t v31 = v7;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          long long v20 = sub_1C8D5EB50(0, *((void *)v20 + 2) + 1, 1, v20);
        }
        unint64_t v22 = *((void *)v20 + 2);
        unint64_t v21 = *((void *)v20 + 3);
        if (v22 >= v21 >> 1) {
          long long v20 = sub_1C8D5EB50((char *)(v21 > 1), v22 + 1, 1, v20);
        }
        *((void *)v20 + 2) = v22 + 1;
        v20[v22 + 32] = 10;
        v37[0] = v20;
        uint64_t v7 = v31;
      }
      if (v10 == 2)
      {
        uint64_t v23 = v35;
      }
      else
      {
        sub_1C8CAB1C0(v10 & 1, 2uLL);
        uint64_t v23 = v35;
        if (v35) {
          goto LABEL_17;
        }
      }
      uint64_t v32 = v5;
      sub_1C8CA3CF8(v33, v8);
      sub_1C8D2D968((uint64_t)v37, v33, v8);
      if (v23) {
        break;
      }
      sub_1C8CA3D5C(v33, v8);
      uint64_t v25 = v37[0];
      uint64_t v24 = v37[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *uint64_t v6 = v25;
      v6[1] = v24;
      sub_1C8CA7498(*(void *)(v24 + 16) - 1);
      sub_1C8CA7498(*(void *)(v6[1] + 16) - 1);
      uint64_t v26 = swift_bridgeObjectRetain();
      sub_1C8CA67D4(v26);
      sub_1C8CA6060((uint64_t)"}\n", 2, v27);
      uint64_t v28 = v37[2];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C8CA469C(v28);
      v7 += 40;
      swift_bridgeObjectRelease();
      uint64_t v6 = v29;
      swift_bridgeObjectRelease();
      sub_1C8CA3D5C(v33, v34);
      swift_bridgeObjectRelease();
      --v5;
      uint64_t v4 = 0;
      if (v32 == 1) {
        return swift_bridgeObjectRelease();
      }
    }
    sub_1C8CA3D5C(v33, v8);
LABEL_17:
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D73F48(uint64_t result, unint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(result + 16);
  if (v7)
  {
    int v36 = *((unsigned __int8 *)v4 + 64);
    uint64_t v26 = v4;
    unint64_t v8 = (unsigned char *)(swift_bridgeObjectRetain() + 60);
    while (1)
    {
      uint64_t v30 = v8;
      uint64_t v31 = v7;
      uint64_t v9 = *(void *)(v8 - 28);
      unint64_t v10 = *(void *)(v8 - 20);
      int v11 = *((_DWORD *)v8 - 3);
      int v12 = *((_DWORD *)v8 - 1);
      char v13 = *v8;
      char v14 = *(v8 - 8);
      sub_1C8CA3CF8(v9, v10);
      sub_1C8CA5968(a2);
      uint64_t v16 = sub_1C8CA6B04(v15);
      v34[3] = a3;
      v34[4] = a4(v16);
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = v9;
      *(void *)(v17 + 24) = v10;
      *(_DWORD *)(v17 + 32) = v11;
      *(unsigned char *)(v17 + 36) = v14;
      int v32 = v12;
      *(_DWORD *)(v17 + 40) = v12;
      *(unsigned char *)(v17 + 44) = v13;
      uint64_t v18 = *v4;
      uint64_t v19 = v4[1];
      char v37 = v36;
      uint64_t v33 = v9;
      v34[0] = v17;
      sub_1C8CA3CF8(v9, v10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C8CA42C0((uint64_t)v34, v18, v19, &v37, (uint64_t)v35);
      if ((v14 & 1) == 0)
      {
        sub_1C8D3BACC(v11, 1uLL);
        if (v6) {
          break;
        }
      }
      if ((v13 & 1) == 0)
      {
        sub_1C8D3BACC(v32, 2uLL);
        if (v6) {
          break;
        }
      }
      sub_1C8CA3CF8(v9, v10);
      sub_1C8D2D968((uint64_t)v35, v9, v10);
      if (v6)
      {
        sub_1C8CA3D5C(v9, v10);
        break;
      }
      sub_1C8CA3D5C(v9, v10);
      uint64_t v20 = v35[0];
      uint64_t v21 = v35[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      void *v26 = v20;
      v26[1] = v21;
      sub_1C8CA7498(*(void *)(v21 + 16) - 1);
      sub_1C8CA7498(*(void *)(v26[1] + 16) - 1);
      uint64_t v22 = swift_bridgeObjectRetain();
      sub_1C8CA67D4(v22);
      sub_1C8CA6060((uint64_t)"}\n", 2, v23);
      uint64_t v24 = v35[2];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v25 = v24;
      uint64_t v4 = v26;
      sub_1C8CA469C(v25);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C8CA3D5C(v33, v10);
      unint64_t v8 = v30 + 32;
      --v7;
      uint64_t v6 = 0;
      if (v31 == 1) {
        return swift_bridgeObjectRelease();
      }
    }
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D74200(uint64_t result, unint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), void (*a5)(void *, uint64_t, unint64_t, uint64_t))
{
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(result + 16);
  if (v8)
  {
    uint64_t v9 = (uint64_t *)v5;
    int v33 = *(unsigned __int8 *)(v5 + 64);
    unint64_t v10 = (void *)(swift_bridgeObjectRetain() + 48);
    while (1)
    {
      char v29 = v10;
      uint64_t v30 = v8;
      uint64_t v12 = *(v10 - 2);
      unint64_t v11 = *(v10 - 1);
      uint64_t v13 = *v10;
      sub_1C8CA3CF8(v12, v11);
      swift_retain();
      sub_1C8CA5968(a2);
      uint64_t v15 = sub_1C8CA6B04(v14);
      void v31[3] = a3;
      uint64_t v16 = a4(v15);
      v31[0] = v12;
      v31[1] = v11;
      v31[4] = v16;
      v31[2] = v13;
      uint64_t v17 = *v9;
      uint64_t v18 = v9[1];
      char v34 = v33;
      sub_1C8CA3CF8(v12, v11);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C8CA42C0((uint64_t)v31, v17, v18, &v34, (uint64_t)v32);
      uint64_t v28 = v12;
      a5(v32, v12, v11, v13);
      if (v7) {
        break;
      }
      uint64_t v19 = v32[0];
      uint64_t v20 = v32[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *uint64_t v9 = v19;
      v9[1] = v20;
      sub_1C8CA7498(*(void *)(v20 + 16) - 1);
      sub_1C8CA7498(*(void *)(v9[1] + 16) - 1);
      uint64_t v21 = swift_bridgeObjectRetain();
      sub_1C8CA67D4(v21);
      sub_1C8CA6060((uint64_t)"}\n", 2, v22);
      uint64_t v23 = v32[2];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C8CA469C(v23);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C8CA3D5C(v28, v11);
      swift_release();
      unint64_t v10 = v29 + 3;
      --v8;
      uint64_t v7 = 0;
      if (v30 == 1) {
        return swift_bridgeObjectRelease();
      }
    }
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D74444(uint64_t result, unint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(result + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)v2;
    char v23 = *(unsigned char *)(v2 + 64);
    uint64_t v7 = swift_bridgeObjectRetain();
    uint64_t v8 = 32;
    uint64_t v24 = v7;
    while (1)
    {
      uint64_t v26 = v8;
      uint64_t v27 = v5;
      uint64_t v9 = v7 + v8;
      long long v10 = *(_OWORD *)(v9 + 16);
      long long v31 = *(_OWORD *)v9;
      long long v11 = *(_OWORD *)(v9 + 32);
      long long v32 = v10;
      v33[0] = v11;
      *(void *)((char *)v33 + 13) = *(void *)(v9 + 45);
      sub_1C8D807EC((uint64_t)&v31);
      sub_1C8CA5968(a2);
      sub_1C8CA6B04(v12);
      v29[3] = &type metadata for Google_Protobuf_GeneratedCodeInfo.Annotation;
      v29[4] = sub_1C8D03C5C();
      uint64_t v13 = swift_allocObject();
      v29[0] = v13;
      long long v14 = v32;
      long long v15 = v33[0];
      *(_OWORD *)(v13 + 16) = v31;
      *(_OWORD *)(v13 + 32) = v14;
      *(_OWORD *)(v13 + 48) = v15;
      *(void *)(v13 + 61) = *(void *)((char *)v33 + 13);
      uint64_t v16 = *v6;
      uint64_t v17 = v6[1];
      char v28 = v23;
      sub_1C8D807EC((uint64_t)&v31);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C8CA42C0((uint64_t)v29, v16, v17, &v28, (uint64_t)v30);
      sub_1C8CF97CC(v30);
      uint64_t v34 = v4;
      if (v4) {
        break;
      }
      uint64_t v19 = v30[0];
      uint64_t v18 = v30[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *uint64_t v6 = (uint64_t)v19;
      v6[1] = (uint64_t)v18;
      sub_1C8CA7498(*((void *)v18 + 2) - 1);
      sub_1C8CA7498(*(void *)(v6[1] + 16) - 1);
      uint64_t v20 = swift_bridgeObjectRetain();
      sub_1C8CA67D4(v20);
      sub_1C8CA6060((uint64_t)"}\n", 2, v21);
      uint64_t v22 = v30[2];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C8CA469C((uint64_t)v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C8D8083C((uint64_t)&v31);
      uint64_t v8 = v26 + 56;
      --v5;
      uint64_t v4 = v34;
      uint64_t v7 = v24;
      if (v27 == 1) {
        return swift_bridgeObjectRelease();
      }
    }
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D7467C(uint64_t result, unint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), void (*a5)(uint64_t, void *))
{
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(result + 16);
  if (v8)
  {
    uint64_t v9 = (uint64_t *)v5;
    int v34 = *(unsigned __int8 *)(v5 + 64);
    long long v10 = (uint64_t *)(swift_bridgeObjectRetain() + 48);
    while (1)
    {
      uint64_t v11 = *(v10 - 2);
      unint64_t v12 = *(v10 - 1);
      uint64_t v13 = *v10;
      sub_1C8CA3CF8(v11, v12);
      swift_retain();
      sub_1C8CA5968(a2);
      uint64_t v15 = sub_1C8CA6B04(v14);
      void v32[3] = a3;
      uint64_t v16 = a4(v15);
      v32[0] = v11;
      v32[1] = v12;
      void v32[4] = v16;
      v32[2] = v13;
      uint64_t v17 = *v9;
      uint64_t v18 = v9[1];
      char v35 = v34;
      sub_1C8CA3CF8(v11, v12);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C8CA42C0((uint64_t)v32, v17, v18, &v35, (uint64_t)v33);
      uint64_t v19 = swift_retain();
      a5(v19, v33);
      if (v7) {
        break;
      }
      uint64_t v31 = v8;
      swift_release();
      unint64_t v29 = v12;
      uint64_t v30 = v11;
      sub_1C8D2D968((uint64_t)v33, v11, v12);
      uint64_t v20 = v33[0];
      uint64_t v21 = v33[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *uint64_t v9 = v20;
      v9[1] = v21;
      sub_1C8CA7498(*(void *)(v21 + 16) - 1);
      sub_1C8CA7498(*(void *)(v9[1] + 16) - 1);
      uint64_t v22 = swift_bridgeObjectRetain();
      sub_1C8CA67D4(v22);
      sub_1C8CA6060((uint64_t)"}\n", 2, v23);
      uint64_t v24 = v33[2];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C8CA469C(v24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C8CA3D5C(v30, v29);
      swift_release();
      v10 += 3;
      --v8;
      uint64_t v7 = 0;
      if (v31 == 1) {
        return swift_bridgeObjectRelease();
      }
    }
    swift_release();
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D748E8(char a1)
{
  uint64_t v3 = sub_1C8D88340();
  MEMORY[0x1F4188790](v3 - 8, v4);
  void v17[3] = &type metadata for Google_Protobuf_Field;
  uint64_t v17[4] = sub_1C8CC2D6C();
  uint64_t v5 = (_OWORD *)swift_allocObject();
  v17[0] = v5;
  long long v6 = v1[5];
  void v5[5] = v1[4];
  v5[6] = v6;
  long long v7 = v1[7];
  v5[7] = v1[6];
  v5[8] = v7;
  long long v8 = v1[1];
  v5[1] = *v1;
  long long v5[2] = v8;
  long long v9 = v1[3];
  v5[3] = v1[2];
  uint64_t v5[4] = v9;
  sub_1C8CA425C((uint64_t)v17, (uint64_t)v16);
  char v15 = a1;
  sub_1C8D80FBC((uint64_t)v1);
  sub_1C8CA42C0((uint64_t)v16, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], &v15, (uint64_t)&v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  sub_1C8CBE77C((char **)&v18);
  uint64_t v10 = v19;
  v17[0] = v18;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C8CA463C(v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8D88330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
  sub_1C8D676FC((unint64_t *)&qword_1EBCB2CF0, &qword_1EBCB2CE8);
  uint64_t v11 = sub_1C8D88310();
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  if (v13)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v11;
  }
  else
  {
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D74B84(char a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t), void (*a7)(uint64_t, long long *))
{
  uint64_t v14 = sub_1C8D88340();
  uint64_t v16 = MEMORY[0x1F4188790](v14 - 8, v15);
  void v25[3] = a5;
  v25[0] = a2;
  v25[1] = a3;
  v25[4] = a6(v16);
  char v25[2] = a4;
  sub_1C8CA425C((uint64_t)v25, (uint64_t)v24);
  char v23 = a1;
  sub_1C8CA3CF8(a2, a3);
  swift_retain();
  sub_1C8CA42C0((uint64_t)v24, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], &v23, (uint64_t)&v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  uint64_t v17 = swift_retain();
  a7(v17, &v26);
  swift_release();
  sub_1C8D2D968((uint64_t)&v26, a2, a3);
  uint64_t v18 = v27;
  v25[0] = v26;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C8CA463C(v18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8D88330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
  sub_1C8D676FC((unint64_t *)&qword_1EBCB2CF0, &qword_1EBCB2CE8);
  uint64_t v19 = sub_1C8D88310();
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  if (v21)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v19;
  }
  else
  {
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D74E38(char a1)
{
  uint64_t v3 = sub_1C8D88340();
  MEMORY[0x1F4188790](v3 - 8, v4);
  v16[3] = &type metadata for Google_Protobuf_Method;
  void v16[4] = sub_1C8CCAD88();
  uint64_t v5 = swift_allocObject();
  v16[0] = v5;
  long long v6 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(v5 + 80) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(v5 + 96) = v6;
  *(void *)(v5 + 112) = *(void *)(v1 + 96);
  long long v7 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v5 + 32) = v7;
  long long v8 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v5 + 48) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v5 + 64) = v8;
  sub_1C8CA425C((uint64_t)v16, (uint64_t)v15);
  char v14 = a1;
  sub_1C8D80D90(v1);
  sub_1C8CA42C0((uint64_t)v15, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], &v14, (uint64_t)&v17);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  sub_1C8CC90EC((char **)&v17);
  uint64_t v9 = v18;
  v16[0] = v17;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C8CA463C(v9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8D88330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
  sub_1C8D676FC((unint64_t *)&qword_1EBCB2CF0, &qword_1EBCB2CE8);
  uint64_t v10 = sub_1C8D88310();
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  if (v12)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v10;
  }
  else
  {
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D750D4(char a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(long long *))
{
  uint64_t v10 = sub_1C8D88340();
  uint64_t v12 = MEMORY[0x1F4188790](v10 - 8, v11);
  v22[3] = a2;
  uint64_t v22[4] = a3(v12);
  uint64_t v13 = (_OWORD *)swift_allocObject();
  v22[0] = v13;
  long long v14 = v5[1];
  v13[1] = *v5;
  void v13[2] = v14;
  void v13[3] = v5[2];
  sub_1C8CA425C((uint64_t)v22, (uint64_t)v21);
  char v20 = a1;
  sub_1C8D80EBC((uint64_t)v5);
  sub_1C8CA42C0((uint64_t)v21, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], &v20, (uint64_t)&v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  a5(&v23);
  uint64_t v15 = v24;
  v22[0] = v23;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C8CA463C(v15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8D88330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
  sub_1C8D676FC((unint64_t *)&qword_1EBCB2CF0, &qword_1EBCB2CE8);
  uint64_t v16 = sub_1C8D88310();
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  if (v18)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v16;
  }
  else
  {
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D7536C(char a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_1C8D88340();
  MEMORY[0x1F4188790](v8 - 8, v9);
  void v17[3] = &type metadata for Google_Protobuf_FileDescriptorSet;
  v17[0] = a2;
  v17[1] = a3;
  uint64_t v17[4] = sub_1C8D0470C();
  v17[2] = a4;
  sub_1C8CA425C((uint64_t)v17, (uint64_t)v16);
  char v15 = a1;
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(a3, a4);
  sub_1C8CA42C0((uint64_t)v16, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], &v15, (uint64_t)&v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  if (*(void *)(a2 + 16)) {
    sub_1C8D7467C(a2, 1uLL, (uint64_t)&type metadata for Google_Protobuf_FileDescriptorProto, (uint64_t (*)(uint64_t))sub_1C8D02DCC, (void (*)(uint64_t, void *))sub_1C8D6CF9C);
  }
  sub_1C8D2D968((uint64_t)&v18, a3, a4);
  uint64_t v10 = v19;
  v17[0] = v18;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C8CA463C(v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8D88330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
  sub_1C8D676FC((unint64_t *)&qword_1EBCB2CF0, &qword_1EBCB2CE8);
  uint64_t v11 = sub_1C8D88310();
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  if (v13)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v11;
  }
  else
  {
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D75644(char a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t), void (*a7)(long long *, uint64_t, unint64_t, uint64_t))
{
  uint64_t v14 = sub_1C8D88340();
  uint64_t v16 = MEMORY[0x1F4188790](v14 - 8, v15);
  v24[3] = a5;
  v24[0] = a2;
  v24[1] = a3;
  v24[4] = a6(v16);
  void v24[2] = a4;
  sub_1C8CA425C((uint64_t)v24, (uint64_t)v23);
  char v22 = a1;
  sub_1C8CA3CF8(a2, a3);
  swift_retain();
  sub_1C8CA42C0((uint64_t)v23, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], &v22, (uint64_t)&v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  a7(&v25, a2, a3, a4);
  uint64_t v17 = v26;
  v24[0] = v25;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C8CA463C(v17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8D88330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
  sub_1C8D676FC((unint64_t *)&qword_1EBCB2CF0, &qword_1EBCB2CE8);
  uint64_t v18 = sub_1C8D88310();
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  if (v20)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v18;
  }
  else
  {
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D758E0(char a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v14 = sub_1C8D88340();
  uint64_t v16 = MEMORY[0x1F4188790](v14 - 8, v15);
  void v25[3] = a6;
  v25[4] = a7(v16);
  uint64_t v17 = swift_allocObject();
  v25[0] = v17;
  *(void *)(v17 + 16) = a2;
  *(void *)(v17 + 24) = a3;
  *(_DWORD *)(v17 + 32) = a4;
  *(unsigned char *)(v17 + 36) = BYTE4(a4) & 1;
  *(_DWORD *)(v17 + 40) = a5;
  *(unsigned char *)(v17 + 44) = BYTE4(a5) & 1;
  sub_1C8CA425C((uint64_t)v25, (uint64_t)v24);
  char v23 = a1;
  sub_1C8CA3CF8(a2, a3);
  sub_1C8CA42C0((uint64_t)v24, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], &v23, (uint64_t)&v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  if ((a4 & 0x100000000) == 0) {
    sub_1C8D3BACC(a4, 1uLL);
  }
  if ((a5 & 0x100000000) == 0) {
    sub_1C8D3BACC(a5, 2uLL);
  }
  sub_1C8CA3CF8(a2, a3);
  sub_1C8D2D968((uint64_t)&v26, a2, a3);
  sub_1C8CA3D5C(a2, a3);
  uint64_t v18 = v27;
  v25[0] = v26;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C8CA463C(v18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8D88330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
  sub_1C8D676FC((unint64_t *)&qword_1EBCB2CF0, &qword_1EBCB2CE8);
  uint64_t v19 = sub_1C8D88310();
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  if (v21)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v19;
  }
  else
  {
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D75BE0(char a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_1C8D88340();
  MEMORY[0x1F4188790](v10 - 8, v11);
  void v21[3] = &type metadata for Google_Protobuf_FileOptions;
  void v21[4] = sub_1C8D040D4();
  uint64_t v12 = (void *)swift_allocObject();
  v21[0] = v12;
  char v12[2] = a2;
  v12[3] = a3;
  uint64_t v12[4] = a4;
  v12[5] = a5;
  sub_1C8CA425C((uint64_t)v21, (uint64_t)v20);
  char v19 = a1;
  sub_1C8CA3CF8(a2, a3);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1C8CA42C0((uint64_t)v20, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], &v19, (uint64_t)&v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  uint64_t v13 = swift_retain();
  sub_1C8D70178(v13, (char **)&v22, a2, a3, a4);
  swift_release();
  sub_1C8D2D968((uint64_t)&v22, a2, a3);
  uint64_t v14 = v23;
  v21[0] = v22;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C8CA463C(v14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8D88330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
  sub_1C8D676FC((unint64_t *)&qword_1EBCB2CF0, &qword_1EBCB2CE8);
  uint64_t v15 = sub_1C8D88310();
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  if (v17)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v15;
  }
  else
  {
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D75EBC(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C8D88340();
  MEMORY[0x1F4188790](v4 - 8, v5);
  v14[3] = &type metadata for Google_Protobuf_MessageOptions;
  void v14[4] = sub_1C8D03738();
  uint64_t v6 = swift_allocObject();
  v14[0] = v6;
  long long v7 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v6 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v6 + 32) = v7;
  *(_DWORD *)(v6 + 48) = *(_DWORD *)(v2 + 32);
  sub_1C8CA425C((uint64_t)v14, (uint64_t)v13);
  v23[0] = a1;
  sub_1C8D80C00(v2);
  sub_1C8CA42C0((uint64_t)v13, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], v23, (uint64_t)&v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  sub_1C8CC4098(v2 + 32, (uint64_t)&v20, &qword_1EA566138);
  sub_1C8CC4098((uint64_t)&v20, (uint64_t)&v21, &qword_1EA566138);
  if (v21 != 2) {
    sub_1C8CAB1C0(v21 & 1, 1uLL);
  }
  sub_1C8CC4098(v2 + 33, (uint64_t)&v19, &qword_1EA566138);
  sub_1C8CC4098((uint64_t)&v19, (uint64_t)&v22, &qword_1EA566138);
  if (v22 != 2) {
    sub_1C8CAB1C0(v22 & 1, 2uLL);
  }
  sub_1C8CC4098(v2 + 34, (uint64_t)&v18, &qword_1EA566138);
  sub_1C8CC4098((uint64_t)&v18, (uint64_t)v23, &qword_1EA566138);
  if (v23[0] != 2) {
    sub_1C8CAB1C0(v23[0] & 1, 3uLL);
  }
  sub_1C8CC4098(v2 + 35, (uint64_t)&v17, &qword_1EA566138);
  sub_1C8CC4098((uint64_t)&v17, (uint64_t)v13, &qword_1EA566138);
  if (v13[0] != 2) {
    sub_1C8CAB1C0(v13[0] & 1, 7uLL);
  }
  if (*(void *)(*(void *)v2 + 16)) {
    sub_1C8D73974(*(void *)v2, 0x3E7uLL);
  }
  sub_1C8D3CD9C((uint64_t)&v15, 1000, 0x20000000, *(void *)(v2 + 24));
  sub_1C8D2D968((uint64_t)&v15, *(void *)(v2 + 8), *(void *)(v2 + 16));
  uint64_t v8 = v16;
  v14[0] = v15;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C8CA463C(v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8D88330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
  sub_1C8D676FC((unint64_t *)&qword_1EBCB2CF0, &qword_1EBCB2CE8);
  uint64_t v9 = sub_1C8D88310();
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  if (v11)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v9;
  }
  else
  {
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D762A0(char a1)
{
  uint64_t v3 = sub_1C8D88340();
  MEMORY[0x1F4188790](v3 - 8, v4);
  v14[3] = &type metadata for Google_Protobuf_FieldOptions;
  void v14[4] = sub_1C8D0378C();
  uint64_t v5 = swift_allocObject();
  v14[0] = v5;
  long long v6 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v5 + 32) = v6;
  *(void *)(v5 + 46) = *(void *)(v1 + 30);
  sub_1C8CA425C((uint64_t)v14, (uint64_t)v13);
  char v12 = a1;
  sub_1C8D80C00(v1);
  sub_1C8CA42C0((uint64_t)v13, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], &v12, (uint64_t)&v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  sub_1C8CF2BB4((char **)&v15);
  uint64_t v7 = v16;
  v14[0] = v15;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C8CA463C(v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8D88330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
  sub_1C8D676FC((unint64_t *)&qword_1EBCB2CF0, &qword_1EBCB2CE8);
  uint64_t v8 = sub_1C8D88310();
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  if (v10)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v8;
  }
  else
  {
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D7652C(char a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v14 = sub_1C8D88340();
  uint64_t v16 = MEMORY[0x1F4188790](v14 - 8, v15);
  void v25[3] = a6;
  v25[4] = a7(v16);
  char v17 = (void *)swift_allocObject();
  v25[0] = v17;
  v17[2] = a2;
  void v17[3] = a3;
  uint64_t v17[4] = a4;
  void v17[5] = a5;
  sub_1C8CA425C((uint64_t)v25, (uint64_t)v24);
  char v23 = a1;
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(a3, a4);
  swift_bridgeObjectRetain();
  sub_1C8CA42C0((uint64_t)v24, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], &v23, (uint64_t)&v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  if (*(void *)(a2 + 16)) {
    sub_1C8D73974(a2, 0x3E7uLL);
  }
  sub_1C8D3CD9C((uint64_t)&v26, 1000, 0x20000000, a5);
  sub_1C8D2D968((uint64_t)&v26, a3, a4);
  uint64_t v18 = v27;
  v25[0] = v26;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C8CA463C(v18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8D88330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
  sub_1C8D676FC((unint64_t *)&qword_1EBCB2CF0, &qword_1EBCB2CE8);
  uint64_t v19 = sub_1C8D88310();
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  if (v21)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v19;
  }
  else
  {
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D76814(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C8D88340();
  MEMORY[0x1F4188790](v4 - 8, v5);
  v14[3] = &type metadata for Google_Protobuf_EnumOptions;
  void v14[4] = sub_1C8D038DC();
  uint64_t v6 = swift_allocObject();
  v14[0] = v6;
  long long v7 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v6 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v6 + 32) = v7;
  *(_WORD *)(v6 + 48) = *(_WORD *)(v2 + 32);
  sub_1C8CA425C((uint64_t)v14, (uint64_t)v13);
  v19[0] = a1;
  sub_1C8D80C00(v2);
  sub_1C8CA42C0((uint64_t)v13, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], v19, (uint64_t)&v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  sub_1C8CC4098(v2 + 32, (uint64_t)&v18, &qword_1EA566138);
  sub_1C8CC4098((uint64_t)&v18, (uint64_t)v19, &qword_1EA566138);
  if (v19[0] != 2) {
    sub_1C8CAB1C0(v19[0] & 1, 2uLL);
  }
  sub_1C8CC4098(v2 + 33, (uint64_t)&v17, &qword_1EA566138);
  sub_1C8CC4098((uint64_t)&v17, (uint64_t)v13, &qword_1EA566138);
  if (v13[0] != 2) {
    sub_1C8CAB1C0(v13[0] & 1, 3uLL);
  }
  if (*(void *)(*(void *)v2 + 16)) {
    sub_1C8D73974(*(void *)v2, 0x3E7uLL);
  }
  sub_1C8D3CD9C((uint64_t)&v15, 1000, 0x20000000, *(void *)(v2 + 24));
  sub_1C8D2D968((uint64_t)&v15, *(void *)(v2 + 8), *(void *)(v2 + 16));
  uint64_t v8 = v16;
  v14[0] = v15;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C8CA463C(v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8D88330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
  sub_1C8D676FC((unint64_t *)&qword_1EBCB2CF0, &qword_1EBCB2CE8);
  uint64_t v9 = sub_1C8D88310();
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  if (v11)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v9;
  }
  else
  {
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D76B68(char a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, unint64_t a5)
{
  uint64_t v9 = v5;
  uint64_t v11 = sub_1C8D88340();
  uint64_t v13 = MEMORY[0x1F4188790](v11 - 8, v12);
  v22[3] = a2;
  uint64_t v22[4] = a3(v13);
  uint64_t v14 = swift_allocObject();
  v22[0] = v14;
  long long v15 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)(v14 + 16) = *(_OWORD *)v9;
  *(_OWORD *)(v14 + 32) = v15;
  *(unsigned char *)(v14 + 48) = *(unsigned char *)(v9 + 32);
  sub_1C8CA425C((uint64_t)v22, (uint64_t)v21);
  v25[0] = a1;
  sub_1C8D80C00(v9);
  sub_1C8CA42C0((uint64_t)v21, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], v25, (uint64_t)&v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  sub_1C8CC4098(v9 + 32, (uint64_t)v25, &qword_1EA566138);
  sub_1C8CC4098((uint64_t)v25, (uint64_t)v21, &qword_1EA566138);
  if (v21[0] != 2) {
    sub_1C8CAB1C0(v21[0] & 1, a5);
  }
  if (*(void *)(*(void *)v9 + 16)) {
    sub_1C8D73974(*(void *)v9, 0x3E7uLL);
  }
  sub_1C8D3CD9C((uint64_t)&v23, 1000, 0x20000000, *(void *)(v9 + 24));
  sub_1C8D2D968((uint64_t)&v23, *(void *)(v9 + 8), *(void *)(v9 + 16));
  uint64_t v16 = v24;
  v22[0] = v23;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C8CA463C(v16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8D88330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
  sub_1C8D676FC((unint64_t *)&qword_1EBCB2CF0, &qword_1EBCB2CE8);
  uint64_t v17 = sub_1C8D88310();
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  if (v19)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v17;
  }
  else
  {
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D76E7C(char a1)
{
  uint64_t v3 = sub_1C8D88340();
  MEMORY[0x1F4188790](v3 - 8, v4);
  v14[3] = &type metadata for Google_Protobuf_MethodOptions;
  void v14[4] = sub_1C8D03B0C();
  uint64_t v5 = swift_allocObject();
  v14[0] = v5;
  long long v6 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v5 + 32) = v6;
  *(_WORD *)(v5 + 48) = *(_WORD *)(v1 + 32);
  sub_1C8CA425C((uint64_t)v14, (uint64_t)v13);
  char v12 = a1;
  sub_1C8D80C00(v1);
  sub_1C8CA42C0((uint64_t)v13, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], &v12, (uint64_t)&v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  sub_1C8CF5A58((char **)&v15);
  uint64_t v7 = v16;
  v14[0] = v15;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C8CA463C(v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8D88330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
  sub_1C8D676FC((unint64_t *)&qword_1EBCB2CF0, &qword_1EBCB2CE8);
  uint64_t v8 = sub_1C8D88310();
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  if (v10)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v8;
  }
  else
  {
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D77108(char a1)
{
  uint64_t v3 = sub_1C8D88340();
  MEMORY[0x1F4188790](v3 - 8, v4);
  v16[3] = &type metadata for Google_Protobuf_UninterpretedOption;
  void v16[4] = sub_1C8D02F58();
  uint64_t v5 = swift_allocObject();
  v16[0] = v5;
  long long v6 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(v5 + 80) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(v5 + 96) = v6;
  *(_OWORD *)(v5 + 112) = *(_OWORD *)(v1 + 96);
  *(void *)(v5 + 128) = *(void *)(v1 + 112);
  long long v7 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v5 + 32) = v7;
  long long v8 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v5 + 48) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v5 + 64) = v8;
  sub_1C8CA425C((uint64_t)v16, (uint64_t)v15);
  char v14 = a1;
  sub_1C8D80AD0((void *)v1);
  sub_1C8CA42C0((uint64_t)v15, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], &v14, (uint64_t)&v17);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  sub_1C8CF6970((char **)&v17);
  uint64_t v9 = v18;
  v16[0] = v17;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C8CA463C(v9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8D88330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
  sub_1C8D676FC((unint64_t *)&qword_1EBCB2CF0, &qword_1EBCB2CE8);
  uint64_t v10 = sub_1C8D88310();
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  if (v12)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v10;
  }
  else
  {
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D773AC(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C8D88340();
  MEMORY[0x1F4188790](v4 - 8, v5);
  long long v25 = &type metadata for Google_Protobuf_UninterpretedOption.NamePart;
  unint64_t v26 = sub_1C8D03BB4();
  uint64_t v6 = swift_allocObject();
  uint64_t v23 = v6;
  long long v7 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v6 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v6 + 32) = v7;
  *(unsigned char *)(v6 + 48) = *(unsigned char *)(v2 + 32);
  sub_1C8CA425C((uint64_t)&v23, (uint64_t)v22);
  v21[0] = a1;
  sub_1C8D80A2C(v2);
  sub_1C8CA42C0((uint64_t)v22, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], v21, (uint64_t)&v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
  sub_1C8CC4098(v2 + 16, (uint64_t)v22, &qword_1EA566130);
  sub_1C8CC4098((uint64_t)v22, (uint64_t)&v23, &qword_1EA566130);
  unint64_t v8 = v24;
  if (v24)
  {
    uint64_t v9 = v23;
    sub_1C8CA5968(1uLL);
    sub_1C8CA6060((uint64_t)": ", 2, v10);
    sub_1C8CA6D2C(v9, v8);
    uint64_t v11 = (char *)v27;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1C8D5EB50(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v13 = *((void *)v11 + 2);
    unint64_t v12 = *((void *)v11 + 3);
    if (v13 >= v12 >> 1) {
      uint64_t v11 = sub_1C8D5EB50((char *)(v12 > 1), v13 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v13 + 1;
    v11[v13 + 32] = 10;
    *(void *)&long long v27 = v11;
  }
  sub_1C8CC4098(v2 + 32, (uint64_t)&v29, &qword_1EA566138);
  sub_1C8CC4098((uint64_t)&v29, (uint64_t)v30, &qword_1EA566138);
  if (v30[0] != 2) {
    sub_1C8CAB1C0(v30[0] & 1, 2uLL);
  }
  uint64_t v14 = *(void *)v2;
  unint64_t v15 = *(void *)(v2 + 8);
  sub_1C8CA3CF8(v14, v15);
  sub_1C8D2D968((uint64_t)&v27, v14, v15);
  sub_1C8CA3D5C(v14, v15);
  uint64_t v16 = v28;
  *(void *)uint64_t v21 = v27;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C8CA463C(v16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8D88330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
  sub_1C8D676FC((unint64_t *)&qword_1EBCB2CF0, &qword_1EBCB2CE8);
  uint64_t v17 = sub_1C8D88310();
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  if (v19)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v17;
  }
  else
  {
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D77784(char a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t), void (*a7)(uint64_t, uint64_t))
{
  uint64_t v14 = sub_1C8D88340();
  uint64_t v16 = MEMORY[0x1F4188790](v14 - 8, v15);
  v24[3] = a5;
  v24[0] = a2;
  v24[1] = a3;
  v24[4] = a6(v16);
  void v24[2] = a4;
  sub_1C8CA425C((uint64_t)v24, (uint64_t)v23);
  char v22 = a1;
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(a3, a4);
  sub_1C8CA42C0((uint64_t)v23, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], &v22, (uint64_t)&v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  if (*(void *)(a2 + 16)) {
    a7(a2, 1);
  }
  sub_1C8D2D968((uint64_t)&v25, a3, a4);
  uint64_t v17 = v26;
  v24[0] = v25;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C8CA463C(v17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8D88330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
  sub_1C8D676FC((unint64_t *)&qword_1EBCB2CF0, &qword_1EBCB2CE8);
  uint64_t v18 = sub_1C8D88310();
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  if (v20)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v18;
  }
  else
  {
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D77A38(char a1)
{
  uint64_t v3 = sub_1C8D88340();
  MEMORY[0x1F4188790](v3 - 8, v4);
  uint64_t v15[3] = &type metadata for Google_Protobuf_SourceCodeInfo.Location;
  void v15[4] = sub_1C8D03C08();
  uint64_t v5 = swift_allocObject();
  v15[0] = v5;
  long long v6 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v5 + 48) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v5 + 64) = v6;
  *(void *)(v5 + 80) = *(void *)(v1 + 64);
  long long v7 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v5 + 32) = v7;
  sub_1C8CA425C((uint64_t)v15, (uint64_t)v14);
  char v13 = a1;
  sub_1C8D808EC(v1);
  sub_1C8CA42C0((uint64_t)v14, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], &v13, (uint64_t)&v16);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  sub_1C8CF8540((char **)&v16);
  uint64_t v8 = v17;
  v15[0] = v16;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C8CA463C(v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8D88330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
  sub_1C8D676FC((unint64_t *)&qword_1EBCB2CF0, &qword_1EBCB2CE8);
  uint64_t v9 = sub_1C8D88310();
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  if (v11)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v9;
  }
  else
  {
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D77CCC(char a1)
{
  uint64_t v3 = sub_1C8D88340();
  MEMORY[0x1F4188790](v3 - 8, v4);
  v14[3] = &type metadata for Google_Protobuf_GeneratedCodeInfo.Annotation;
  void v14[4] = sub_1C8D03C5C();
  uint64_t v5 = swift_allocObject();
  v14[0] = v5;
  long long v6 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v5 + 32) = v6;
  *(_OWORD *)(v5 + 48) = *(_OWORD *)(v1 + 32);
  *(void *)(v5 + 61) = *(void *)(v1 + 45);
  sub_1C8CA425C((uint64_t)v14, (uint64_t)v13);
  char v12 = a1;
  sub_1C8D807EC(v1);
  sub_1C8CA42C0((uint64_t)v13, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], &v12, (uint64_t)&v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  sub_1C8CF97CC((char **)&v15);
  uint64_t v7 = v16;
  v14[0] = v15;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C8CA463C(v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8D88330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
  sub_1C8D676FC((unint64_t *)&qword_1EBCB2CF0, &qword_1EBCB2CE8);
  uint64_t v8 = sub_1C8D88310();
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  if (v10)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v8;
  }
  else
  {
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D77F60(char a1, char a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_1C8D88340();
  MEMORY[0x1F4188790](v8 - 8, v9);
  void v17[3] = &type metadata for Google_Protobuf_BoolValue;
  uint64_t v17[4] = sub_1C8D4A62C();
  LOBYTE(v17[0]) = a2;
  v17[1] = a3;
  v17[2] = a4;
  sub_1C8CA425C((uint64_t)v17, (uint64_t)v16);
  char v15 = a1;
  sub_1C8CA3CF8(a3, a4);
  sub_1C8CA42C0((uint64_t)v16, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], &v15, (uint64_t)&v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  if (a2) {
    sub_1C8CAB1C0(1, 1uLL);
  }
  sub_1C8CA3CF8(a3, a4);
  sub_1C8D2D968((uint64_t)&v18, a3, a4);
  sub_1C8CA3D5C(a3, a4);
  uint64_t v10 = v19;
  v17[0] = v18;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C8CA463C(v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8D88330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
  sub_1C8D676FC((unint64_t *)&qword_1EBCB2CF0, &qword_1EBCB2CE8);
  uint64_t v11 = sub_1C8D88310();
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  if (v13)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v11;
  }
  else
  {
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D78214(char a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_1C8D88340();
  MEMORY[0x1F4188790](v8 - 8, v9);
  v26[1] = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29[3] = &type metadata for Google_Protobuf_FieldMask;
  unint64_t v11 = sub_1C8D4B864();
  v29[0] = a2;
  v29[1] = a3;
  v29[4] = v11;
  v29[2] = a4;
  sub_1C8CA425C((uint64_t)v29, (uint64_t)v28);
  char v27 = a1;
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(a3, a4);
  sub_1C8CA42C0((uint64_t)v28, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], &v27, (uint64_t)&v30);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  uint64_t v12 = *(void *)(a2 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = (unint64_t *)(a2 + 40);
    do
    {
      uint64_t v14 = *(v13 - 1);
      unint64_t v15 = *v13;
      swift_bridgeObjectRetain();
      sub_1C8CA5968(1uLL);
      sub_1C8CA6060((uint64_t)": ", 2, v16);
      sub_1C8CA6D2C(v14, v15);
      swift_bridgeObjectRelease();
      long long v17 = (char *)v30;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v17 = sub_1C8D5EB50(0, *((void *)v17 + 2) + 1, 1, v17);
      }
      unint64_t v19 = *((void *)v17 + 2);
      unint64_t v18 = *((void *)v17 + 3);
      if (v19 >= v18 >> 1) {
        long long v17 = sub_1C8D5EB50((char *)(v18 > 1), v19 + 1, 1, v17);
      }
      v13 += 2;
      *((void *)v17 + 2) = v19 + 1;
      v17[v19 + 32] = 10;
      *(void *)&long long v30 = v17;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
  }
  sub_1C8D2D968((uint64_t)&v30, a3, a4);
  uint64_t v20 = v31;
  uint64_t v21 = v32;
  v29[0] = v30;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C8CA463C(v20);
  swift_bridgeObjectRetain();
  v26[0] = v21;
  swift_bridgeObjectRetain();
  sub_1C8D88330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
  sub_1C8D676FC((unint64_t *)&qword_1EBCB2CF0, &qword_1EBCB2CE8);
  uint64_t v22 = sub_1C8D88310();
  uint64_t v24 = v23;
  swift_bridgeObjectRelease();
  if (v24)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v22;
  }
  else
  {
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D78590(char a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_1C8D88340();
  MEMORY[0x1F4188790](v8 - 8, v9);
  void v17[3] = &type metadata for Google_Protobuf_ListValue;
  v17[0] = a2;
  v17[1] = a3;
  uint64_t v17[4] = sub_1C8D4CAE0();
  v17[2] = a4;
  sub_1C8CA425C((uint64_t)v17, (uint64_t)v16);
  char v15 = a1;
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(a3, a4);
  sub_1C8CA42C0((uint64_t)v16, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], &v15, (uint64_t)&v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  if (*(void *)(a2 + 16)) {
    sub_1C8D7467C(a2, 1uLL, (uint64_t)&type metadata for Google_Protobuf_Value, (uint64_t (*)(uint64_t))sub_1C8D4CB88, (void (*)(uint64_t, void *))sub_1C8D7D738);
  }
  sub_1C8D2D968((uint64_t)&v18, a3, a4);
  uint64_t v10 = v19;
  v17[0] = v18;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C8CA463C(v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8D88330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
  sub_1C8D676FC((unint64_t *)&qword_1EBCB2CF0, &qword_1EBCB2CE8);
  uint64_t v11 = sub_1C8D88310();
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  if (v13)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v11;
  }
  else
  {
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D78868(char a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v10 = sub_1C8D88340();
  MEMORY[0x1F4188790](v10 - 8, v11);
  void v20[3] = &type metadata for Google_Protobuf_BytesValue;
  v20[4] = sub_1C8D4A9B8();
  uint64_t v12 = (void *)swift_allocObject();
  v20[0] = v12;
  char v12[2] = a2;
  v12[3] = a3;
  uint64_t v12[4] = a4;
  v12[5] = a5;
  sub_1C8CA425C((uint64_t)v20, (uint64_t)v19);
  char v18 = a1;
  sub_1C8CA3CF8(a2, a3);
  sub_1C8CA3CF8(a4, a5);
  sub_1C8CA42C0((uint64_t)v19, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], &v18, (uint64_t)&v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  sub_1C8D7A7AC((char **)&v21, a2, a3, a4, a5);
  uint64_t v13 = v22;
  v20[0] = v21;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C8CA463C(v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8D88330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
  sub_1C8D676FC((unint64_t *)&qword_1EBCB2CF0, &qword_1EBCB2CE8);
  uint64_t v14 = sub_1C8D88310();
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  if (v16)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v14;
  }
  else
  {
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D78B1C(char a1, uint64_t a2, unint64_t a3, float a4)
{
  uint64_t v8 = sub_1C8D88340();
  MEMORY[0x1F4188790](v8 - 8, v9);
  void v21[3] = &type metadata for Google_Protobuf_FloatValue;
  void v21[4] = sub_1C8D49DE4();
  *(float *)long long v21 = a4;
  v21[1] = a2;
  _OWORD v21[2] = a3;
  sub_1C8CA425C((uint64_t)v21, (uint64_t)v20);
  char v19 = a1;
  sub_1C8CA3CF8(a2, a3);
  sub_1C8CA42C0((uint64_t)v20, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], &v19, (uint64_t)&v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  if (a4 != 0.0)
  {
    sub_1C8CA5968(1uLL);
    sub_1C8CA6060((uint64_t)": ", 2, v10);
    sub_1C8D5C610(a4);
    uint64_t v11 = (char *)v22;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1C8D5EB50(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v13 = *((void *)v11 + 2);
    unint64_t v12 = *((void *)v11 + 3);
    if (v13 >= v12 >> 1) {
      uint64_t v11 = sub_1C8D5EB50((char *)(v12 > 1), v13 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v13 + 1;
    v11[v13 + 32] = 10;
    *(void *)&long long v22 = v11;
  }
  sub_1C8CA3CF8(a2, a3);
  sub_1C8D2D968((uint64_t)&v22, a2, a3);
  sub_1C8CA3D5C(a2, a3);
  uint64_t v14 = v23;
  v21[0] = v22;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C8CA463C(v14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8D88330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
  sub_1C8D676FC((unint64_t *)&qword_1EBCB2CF0, &qword_1EBCB2CE8);
  uint64_t v15 = sub_1C8D88310();
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  if (v17)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v15;
  }
  else
  {
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D78E64(char a1, int a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_1C8D88340();
  MEMORY[0x1F4188790](v8 - 8, v9);
  void v17[3] = &type metadata for Google_Protobuf_Int32Value;
  uint64_t v17[4] = sub_1C8D4A2DC();
  LODWORD(v17[0]) = a2;
  v17[1] = a3;
  v17[2] = a4;
  sub_1C8CA425C((uint64_t)v17, (uint64_t)v16);
  char v15 = a1;
  sub_1C8CA3CF8(a3, a4);
  sub_1C8CA42C0((uint64_t)v16, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], &v15, (uint64_t)&v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  if (a2) {
    sub_1C8D3BACC(a2, 1uLL);
  }
  sub_1C8CA3CF8(a3, a4);
  sub_1C8D2D968((uint64_t)&v18, a3, a4);
  sub_1C8CA3D5C(a3, a4);
  uint64_t v10 = v19;
  v17[0] = v18;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C8CA463C(v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8D88330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
  sub_1C8D676FC((unint64_t *)&qword_1EBCB2CF0, &qword_1EBCB2CE8);
  uint64_t v11 = sub_1C8D88310();
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  if (v13)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v11;
  }
  else
  {
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D79118(char a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_1C8D88340();
  MEMORY[0x1F4188790](v8 - 8, v9);
  v24[3] = &type metadata for Google_Protobuf_Int64Value;
  v24[0] = a2;
  v24[1] = a3;
  v24[4] = sub_1C8D49F8C();
  void v24[2] = a4;
  sub_1C8CA425C((uint64_t)v24, (uint64_t)v23);
  char v22 = a1;
  sub_1C8CA3CF8(a3, a4);
  sub_1C8CA42C0((uint64_t)v23, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], &v22, (uint64_t)&v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  if (a2)
  {
    sub_1C8CA5968(1uLL);
    sub_1C8CA6060((uint64_t)": ", 2, v10);
    if ((a2 & 0x8000000000000000) != 0)
    {
      uint64_t v11 = (char *)v25;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v11 = sub_1C8D5EB50(0, *((void *)v11 + 2) + 1, 1, v11);
      }
      unint64_t v13 = *((void *)v11 + 2);
      unint64_t v12 = *((void *)v11 + 3);
      if (v13 >= v12 >> 1) {
        uint64_t v11 = sub_1C8D5EB50((char *)(v12 > 1), v13 + 1, 1, v11);
      }
      *((void *)v11 + 2) = v13 + 1;
      v11[v13 + 32] = 45;
      *(void *)&long long v25 = v11;
      a2 = -(uint64_t)a2;
    }
    sub_1C8D5C98C(a2);
    uint64_t v14 = (char *)v25;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v14 = sub_1C8D5EB50(0, *((void *)v14 + 2) + 1, 1, v14);
    }
    unint64_t v16 = *((void *)v14 + 2);
    unint64_t v15 = *((void *)v14 + 3);
    if (v16 >= v15 >> 1) {
      uint64_t v14 = sub_1C8D5EB50((char *)(v15 > 1), v16 + 1, 1, v14);
    }
    *((void *)v14 + 2) = v16 + 1;
    v14[v16 + 32] = 10;
    *(void *)&long long v25 = v14;
  }
  sub_1C8CA3CF8(a3, a4);
  sub_1C8D2D968((uint64_t)&v25, a3, a4);
  sub_1C8CA3D5C(a3, a4);
  uint64_t v17 = v26;
  v24[0] = v25;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C8CA463C(v17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8D88330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
  sub_1C8D676FC((unint64_t *)&qword_1EBCB2CF0, &qword_1EBCB2CE8);
  uint64_t v18 = sub_1C8D88310();
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  if (v20)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v18;
  }
  else
  {
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D794D0(char a1, uint64_t a2, unint64_t a3, double a4)
{
  uint64_t v8 = sub_1C8D88340();
  MEMORY[0x1F4188790](v8 - 8, v9);
  void v21[3] = &type metadata for Google_Protobuf_DoubleValue;
  void v21[4] = sub_1C8D49C3C();
  *(double *)long long v21 = a4;
  v21[1] = a2;
  _OWORD v21[2] = a3;
  sub_1C8CA425C((uint64_t)v21, (uint64_t)v20);
  char v19 = a1;
  sub_1C8CA3CF8(a2, a3);
  sub_1C8CA42C0((uint64_t)v20, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], &v19, (uint64_t)&v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  if (a4 != 0.0)
  {
    sub_1C8CA5968(1uLL);
    sub_1C8CA6060((uint64_t)": ", 2, v10);
    sub_1C8D5C698(a4);
    uint64_t v11 = (char *)v22;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1C8D5EB50(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v13 = *((void *)v11 + 2);
    unint64_t v12 = *((void *)v11 + 3);
    if (v13 >= v12 >> 1) {
      uint64_t v11 = sub_1C8D5EB50((char *)(v12 > 1), v13 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v13 + 1;
    v11[v13 + 32] = 10;
    *(void *)&long long v22 = v11;
  }
  sub_1C8CA3CF8(a2, a3);
  sub_1C8D2D968((uint64_t)&v22, a2, a3);
  sub_1C8CA3D5C(a2, a3);
  uint64_t v14 = v23;
  v21[0] = v22;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C8CA463C(v14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8D88330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
  sub_1C8D676FC((unint64_t *)&qword_1EBCB2CF0, &qword_1EBCB2CE8);
  uint64_t v15 = sub_1C8D88310();
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  if (v17)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v15;
  }
  else
  {
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D79818(char a1, unsigned int a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_1C8D88340();
  MEMORY[0x1F4188790](v8 - 8, v9);
  void v21[3] = &type metadata for Google_Protobuf_UInt32Value;
  void v21[4] = sub_1C8D4A484();
  LODWORD(v21[0]) = a2;
  v21[1] = a3;
  _OWORD v21[2] = a4;
  sub_1C8CA425C((uint64_t)v21, (uint64_t)v20);
  char v19 = a1;
  sub_1C8CA3CF8(a3, a4);
  sub_1C8CA42C0((uint64_t)v20, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], &v19, (uint64_t)&v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  if (a2)
  {
    sub_1C8CA5968(1uLL);
    sub_1C8CA6060((uint64_t)": ", 2, v10);
    sub_1C8D5C98C(a2);
    uint64_t v11 = (char *)v22;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1C8D5EB50(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v13 = *((void *)v11 + 2);
    unint64_t v12 = *((void *)v11 + 3);
    if (v13 >= v12 >> 1) {
      uint64_t v11 = sub_1C8D5EB50((char *)(v12 > 1), v13 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v13 + 1;
    v11[v13 + 32] = 10;
    *(void *)&long long v22 = v11;
  }
  sub_1C8CA3CF8(a3, a4);
  sub_1C8D2D968((uint64_t)&v22, a3, a4);
  sub_1C8CA3D5C(a3, a4);
  uint64_t v14 = v23;
  v21[0] = v22;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C8CA463C(v14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8D88330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
  sub_1C8D676FC((unint64_t *)&qword_1EBCB2CF0, &qword_1EBCB2CE8);
  uint64_t v15 = sub_1C8D88310();
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  if (v17)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v15;
  }
  else
  {
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D79B54(char a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_1C8D88340();
  MEMORY[0x1F4188790](v8 - 8, v9);
  void v21[3] = &type metadata for Google_Protobuf_UInt64Value;
  v21[0] = a2;
  v21[1] = a3;
  void v21[4] = sub_1C8D4A134();
  _OWORD v21[2] = a4;
  sub_1C8CA425C((uint64_t)v21, (uint64_t)v20);
  char v19 = a1;
  sub_1C8CA3CF8(a3, a4);
  sub_1C8CA42C0((uint64_t)v20, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], &v19, (uint64_t)&v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  if (a2)
  {
    sub_1C8CA5968(1uLL);
    sub_1C8CA6060((uint64_t)": ", 2, v10);
    sub_1C8D5C98C(a2);
    uint64_t v11 = (char *)v22;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1C8D5EB50(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v13 = *((void *)v11 + 2);
    unint64_t v12 = *((void *)v11 + 3);
    if (v13 >= v12 >> 1) {
      uint64_t v11 = sub_1C8D5EB50((char *)(v12 > 1), v13 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v13 + 1;
    v11[v13 + 32] = 10;
    *(void *)&long long v22 = v11;
  }
  sub_1C8CA3CF8(a3, a4);
  sub_1C8D2D968((uint64_t)&v22, a3, a4);
  sub_1C8CA3D5C(a3, a4);
  uint64_t v14 = v23;
  v21[0] = v22;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C8CA463C(v14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8D88330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
  sub_1C8D676FC((unint64_t *)&qword_1EBCB2CF0, &qword_1EBCB2CE8);
  uint64_t v15 = sub_1C8D88310();
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  if (v17)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v15;
  }
  else
  {
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D79E8C(char a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v14 = sub_1C8D88340();
  uint64_t v16 = MEMORY[0x1F4188790](v14 - 8, v15);
  void v25[3] = a6;
  v25[4] = a7(v16);
  uint64_t v17 = (void *)swift_allocObject();
  v25[0] = v17;
  v17[2] = a2;
  void v17[3] = a3;
  uint64_t v17[4] = a4;
  void v17[5] = a5;
  sub_1C8CA425C((uint64_t)v25, (uint64_t)v24);
  char v23 = a1;
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(a4, a5);
  sub_1C8CA42C0((uint64_t)v24, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], &v23, (uint64_t)&v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  sub_1C8D7A698((char **)&v26, a2, a3, a4, a5);
  uint64_t v18 = v27;
  v25[0] = v26;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C8CA463C(v18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8D88330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
  sub_1C8D676FC((unint64_t *)&qword_1EBCB2CF0, &qword_1EBCB2CE8);
  uint64_t v19 = sub_1C8D88310();
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  if (v21)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v19;
  }
  else
  {
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D7A140(char a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_1C8D88340();
  MEMORY[0x1F4188790](v8 - 8, v9);
  void v17[3] = &type metadata for Google_Protobuf_Struct;
  v17[0] = a2;
  v17[1] = a3;
  uint64_t v17[4] = sub_1C8D4CB34();
  v17[2] = a4;
  sub_1C8CA425C((uint64_t)v17, (uint64_t)v16);
  char v15 = a1;
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(a3, a4);
  sub_1C8CA42C0((uint64_t)v16, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], &v15, (uint64_t)&v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  if (*(void *)(a2 + 16)) {
    sub_1C8D30F2C(a2, 1uLL, (uint64_t)&v18);
  }
  sub_1C8D2D968((uint64_t)&v18, a3, a4);
  uint64_t v10 = v19;
  v17[0] = v18;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C8CA463C(v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8D88330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
  sub_1C8D676FC((unint64_t *)&qword_1EBCB2CF0, &qword_1EBCB2CE8);
  uint64_t v11 = sub_1C8D88310();
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  if (v13)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v11;
  }
  else
  {
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D7A3E8(char a1, unint64_t a2, int a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v14 = sub_1C8D88340();
  uint64_t v16 = MEMORY[0x1F4188790](v14 - 8, v15);
  void v25[3] = a6;
  v25[4] = a7(v16);
  uint64_t v17 = swift_allocObject();
  v25[0] = v17;
  *(void *)(v17 + 16) = a2;
  *(_DWORD *)(v17 + 24) = a3;
  *(void *)(v17 + 32) = a4;
  *(void *)(v17 + 40) = a5;
  sub_1C8CA425C((uint64_t)v25, (uint64_t)v24);
  char v23 = a1;
  sub_1C8CA3CF8(a4, a5);
  sub_1C8CA42C0((uint64_t)v24, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], &v23, (uint64_t)&v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  sub_1C8D7A90C((char **)&v26, a2, a3, a4, a5);
  uint64_t v18 = v27;
  v25[0] = v26;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C8CA463C(v18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8D88330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
  sub_1C8D676FC((unint64_t *)&qword_1EBCB2CF0, &qword_1EBCB2CE8);
  uint64_t v19 = sub_1C8D88310();
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  if (v21)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C8CA469C(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v19;
  }
  else
  {
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D7A698(char **a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v8 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v8 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v8)
  {
    sub_1C8CA5968(1uLL);
    sub_1C8CA6060((uint64_t)": ", 2, v11);
    sub_1C8CA6D2C(a2, a3);
    uint64_t v12 = *a1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a1 = v12;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v12 = sub_1C8D5EB50(0, *((void *)v12 + 2) + 1, 1, v12);
      *a1 = v12;
    }
    unint64_t v15 = *((void *)v12 + 2);
    unint64_t v14 = *((void *)v12 + 3);
    if (v15 >= v14 >> 1) {
      uint64_t v12 = sub_1C8D5EB50((char *)(v14 > 1), v15 + 1, 1, v12);
    }
    *((void *)v12 + 2) = v15 + 1;
    v12[v15 + 32] = 10;
    *a1 = v12;
  }
  return sub_1C8D2D968((uint64_t)a1, a4, a5);
}

uint64_t sub_1C8D7A7AC(char **a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  switch(a3 >> 62)
  {
    case 1uLL:
      if ((int)a2 != a2 >> 32) {
        goto LABEL_7;
      }
      break;
    case 2uLL:
      if (*(void *)(a2 + 16) != *(void *)(a2 + 24)) {
        goto LABEL_7;
      }
      break;
    case 3uLL:
      return sub_1C8D2D968((uint64_t)a1, a4, a5);
    default:
      if ((a3 & 0xFF000000000000) != 0)
      {
LABEL_7:
        sub_1C8CA5968(1uLL);
        sub_1C8CA6060((uint64_t)": ", 2, v10);
        sub_1C8D5C358(a2, a3);
        uint64_t v11 = *a1;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a1 = v11;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v11 = sub_1C8D5EB50(0, *((void *)v11 + 2) + 1, 1, v11);
          *a1 = v11;
        }
        unint64_t v14 = *((void *)v11 + 2);
        unint64_t v13 = *((void *)v11 + 3);
        if (v14 >= v13 >> 1) {
          uint64_t v11 = sub_1C8D5EB50((char *)(v13 > 1), v14 + 1, 1, v11);
        }
        *((void *)v11 + 2) = v14 + 1;
        v11[v14 + 32] = 10;
        *a1 = v11;
      }
      break;
  }
  return sub_1C8D2D968((uint64_t)a1, a4, a5);
}

uint64_t sub_1C8D7A90C(char **a1, unint64_t a2, int a3, uint64_t a4, unint64_t a5)
{
  if (a2)
  {
    unint64_t v10 = a2;
    sub_1C8CA5968(1uLL);
    sub_1C8CA6060((uint64_t)": ", 2, v11);
    if ((v10 & 0x8000000000000000) != 0)
    {
      uint64_t v12 = *a1;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v12;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v12 = sub_1C8D5EB50(0, *((void *)v12 + 2) + 1, 1, v12);
        *a1 = v12;
      }
      unint64_t v14 = *((void *)v12 + 2);
      unint64_t v15 = *((void *)v12 + 3);
      unint64_t v16 = v14 + 1;
      if (v14 >= v15 >> 1)
      {
        unint64_t v25 = v14 + 1;
        long long v22 = v12;
        unint64_t v23 = *((void *)v12 + 2);
        uint64_t v24 = sub_1C8D5EB50((char *)(v15 > 1), v14 + 1, 1, v22);
        unint64_t v14 = v23;
        unint64_t v16 = v25;
        uint64_t v12 = v24;
      }
      *((void *)v12 + 2) = v16;
      v12[v14 + 32] = 45;
      *a1 = v12;
      unint64_t v10 = -(uint64_t)v10;
    }
    sub_1C8D5C98C(v10);
    uint64_t v17 = *a1;
    char v18 = swift_isUniquelyReferenced_nonNull_native();
    *a1 = v17;
    if ((v18 & 1) == 0)
    {
      uint64_t v17 = sub_1C8D5EB50(0, *((void *)v17 + 2) + 1, 1, v17);
      *a1 = v17;
    }
    unint64_t v20 = *((void *)v17 + 2);
    unint64_t v19 = *((void *)v17 + 3);
    if (v20 >= v19 >> 1) {
      uint64_t v17 = sub_1C8D5EB50((char *)(v19 > 1), v20 + 1, 1, v17);
    }
    *((void *)v17 + 2) = v20 + 1;
    v17[v20 + 32] = 10;
    *a1 = v17;
  }
  if (!a3 || (uint64_t result = sub_1C8D3BACC(a3, 2uLL), !v5))
  {
    sub_1C8CA3CF8(a4, a5);
    sub_1C8D2D968((uint64_t)a1, a4, a5);
    return sub_1C8CA3D5C(a4, a5);
  }
  return result;
}

void Google_Protobuf_Value.kind.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  char v5 = *((unsigned char *)a1 + 24);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v6 = *(void *)(v1 + 16);
    type metadata accessor for Google_Protobuf_Value._StorageClass();
    uint64_t v7 = swift_allocObject();
    uint64_t v8 = *(void *)(v6 + 16);
    uint64_t v9 = *(void *)(v6 + 24);
    unint64_t v10 = *(void *)(v6 + 32);
    unsigned __int8 v11 = *(unsigned char *)(v6 + 40);
    *(void *)(v7 + 16) = v8;
    *(void *)(v7 + 24) = v9;
    *(void *)(v7 + 32) = v10;
    *(unsigned char *)(v7 + 40) = v11;
    sub_1C8CC5580(v8, v9, v10, v11);
    sub_1C8CC5640(0, 0, 0x3000000000000000uLL, 0xFFu);
    *(void *)(v1 + 16) = v7;
    swift_release();
  }
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v13 = *(void *)(v12 + 16);
  uint64_t v14 = *(void *)(v12 + 24);
  unint64_t v15 = *(void *)(v12 + 32);
  *(void *)(v12 + 16) = v2;
  *(void *)(v12 + 24) = v3;
  *(void *)(v12 + 32) = v4;
  unsigned __int8 v16 = *(unsigned char *)(v12 + 40);
  *(unsigned char *)(v12 + 40) = v5;
  sub_1C8CC5640(v13, v14, v15, v16);
}

void Google_Protobuf_Value.kind.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = *(void *)(v2 + 24);
  unint64_t v5 = *(void *)(v2 + 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  unsigned __int8 v6 = *(unsigned char *)(v2 + 40);
  *(unsigned char *)(a1 + 24) = v6;
  sub_1C8CC5580(v3, v4, v5, v6);
}

void Google_Protobuf_NullValue.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t Google_Protobuf_NullValue.init(rawValue:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = result == 0;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

uint64_t Google_Protobuf_NullValue.rawValue.getter()
{
  if (v0[8]) {
    return 0;
  }
  else {
    return *(void *)v0;
  }
}

uint64_t sub_1C8D7AC14@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = result == 0;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

uint64_t sub_1C8D7AC2C()
{
  if (v0[8]) {
    return 0;
  }
  else {
    return *(void *)v0;
  }
}

void *sub_1C8D7AC44@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2 = *result == 0;
  *(void *)a2 = *result;
  char v3 = v2;
  *(unsigned char *)(a2 + 8) = v3;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

void sub_1C8D7AC60(void *a1@<X8>)
{
  if (*(unsigned char *)(v1 + 8)) {
    *a1 = 0;
  }
  else {
    *a1 = *(void *)v1;
  }
}

uint64_t sub_1C8D7AC7C()
{
  return sub_1C8D888A0();
}

uint64_t sub_1C8D7ACCC()
{
  return sub_1C8D88850();
}

uint64_t sub_1C8D7AD08()
{
  return sub_1C8D888A0();
}

BOOL sub_1C8D7AD54(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  if (a1[1]) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = *a1;
  }
  if (*((unsigned char *)a2 + 8)) {
    uint64_t v2 = 0;
  }
  return v3 == v2;
}

void sub_1C8D7AD84()
{
  qword_1EA567800 = (uint64_t)&unk_1F2350518;
}

uint64_t static Google_Protobuf_NullValue.allCases.getter()
{
  if (qword_1EA565C90 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static Google_Protobuf_NullValue.allCases.setter(uint64_t a1)
{
  if (qword_1EA565C90 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_1EA567800 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static Google_Protobuf_NullValue.allCases.modify())()
{
  if (qword_1EA565C90 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess_0;
}

uint64_t sub_1C8D7AF1C@<X0>(void *a1@<X8>)
{
  if (qword_1EA565C90 != -1) {
    swift_once();
  }
  swift_beginAccess();
  *a1 = qword_1EA567800;
  return swift_bridgeObjectRetain();
}

uint64_t (*Google_Protobuf_Struct.fields.modify())(void, void, void)
{
  return nullsub_1;
}

uint64_t (*Google_Protobuf_Struct.unknownFields.modify())(void, void, void)
{
  return nullsub_1;
}

void sub_1C8D7AFE0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  unint64_t v2 = *(void *)(a1 + 16);
  unsigned __int8 v3 = *(unsigned char *)(a1 + 24);
  v4[0] = *(void *)a1;
  v4[1] = v1;
  v4[2] = v2;
  unsigned __int8 v5 = v3;
  sub_1C8CC5580(v4[0], v1, v2, v3);
  Google_Protobuf_Value.kind.setter(v4);
}

void (*Google_Protobuf_Value.kind.modify(void *a1))(uint64_t **a1, char a2)
{
  unsigned __int8 v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v4 + 16);
  uint64_t v6 = *(void *)(v4 + 24);
  unint64_t v7 = *(void *)(v4 + 32);
  unsigned __int8 v8 = *(unsigned char *)(v4 + 40);
  *unsigned __int8 v3 = v5;
  v3[1] = v6;
  char v3[2] = v7;
  *((unsigned char *)v3 + 24) = v8;
  sub_1C8CC5580(v5, v6, v7, v8);
  return sub_1C8D7B0A8;
}

void sub_1C8D7B0A8(uint64_t **a1, char a2)
{
  unint64_t v2 = *a1;
  uint64_t v4 = **a1;
  uint64_t v3 = (*a1)[1];
  unint64_t v5 = (*a1)[2];
  unsigned __int8 v6 = *((unsigned char *)*a1 + 24);
  if (a2)
  {
    sub_1C8CC5580(**a1, v3, v5, v6);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v7 = v2[4];
      uint64_t v8 = *(void *)(v7 + 16);
      type metadata accessor for Google_Protobuf_Value._StorageClass();
      uint64_t v9 = swift_allocObject();
      uint64_t v10 = *(void *)(v8 + 16);
      uint64_t v11 = *(void *)(v8 + 24);
      unint64_t v12 = *(void *)(v8 + 32);
      unsigned __int8 v13 = *(unsigned char *)(v8 + 40);
      *(void *)(v9 + 16) = v10;
      *(void *)(v9 + 24) = v11;
      *(void *)(v9 + 32) = v12;
      *(unsigned char *)(v9 + 40) = v13;
      sub_1C8CC5580(v10, v11, v12, v13);
      sub_1C8CC5640(0, 0, 0x3000000000000000uLL, 0xFFu);
      *(void *)(v7 + 16) = v9;
      swift_release();
    }
    uint64_t v14 = *(void *)(v2[4] + 16);
    uint64_t v15 = *(void *)(v14 + 16);
    uint64_t v16 = *(void *)(v14 + 24);
    unint64_t v17 = *(void *)(v14 + 32);
    *(void *)(v14 + 16) = v4;
    *(void *)(v14 + 24) = v3;
    *(void *)(v14 + 32) = v5;
    unsigned __int8 v18 = *(unsigned char *)(v14 + 40);
    *(unsigned char *)(v14 + 40) = v6;
    sub_1C8CC5640(v15, v16, v17, v18);
    uint64_t v19 = *v2;
    uint64_t v20 = v2[1];
    unint64_t v21 = v2[2];
    unsigned __int8 v22 = *((unsigned char *)v2 + 24);
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v23 = v2[4];
      uint64_t v24 = *(void *)(v23 + 16);
      type metadata accessor for Google_Protobuf_Value._StorageClass();
      uint64_t v25 = swift_allocObject();
      uint64_t v26 = *(void *)(v24 + 16);
      uint64_t v27 = *(void *)(v24 + 24);
      unint64_t v28 = *(void *)(v24 + 32);
      unsigned __int8 v29 = *(unsigned char *)(v24 + 40);
      *(void *)(v25 + 16) = v26;
      *(void *)(v25 + 24) = v27;
      *(void *)(v25 + 32) = v28;
      *(unsigned char *)(v25 + 40) = v29;
      sub_1C8CC5580(v26, v27, v28, v29);
      sub_1C8CC5640(0, 0, 0x3000000000000000uLL, 0xFFu);
      *(void *)(v23 + 16) = v25;
      swift_release();
    }
    uint64_t v30 = *(void *)(v2[4] + 16);
    uint64_t v19 = *(void *)(v30 + 16);
    uint64_t v20 = *(void *)(v30 + 24);
    unint64_t v21 = *(void *)(v30 + 32);
    *(void *)(v30 + 16) = v4;
    *(void *)(v30 + 24) = v3;
    *(void *)(v30 + 32) = v5;
    unsigned __int8 v22 = *(unsigned char *)(v30 + 40);
    *(unsigned char *)(v30 + 40) = v6;
  }
  sub_1C8CC5640(v19, v20, v21, v22);
  free(v2);
}

void Google_Protobuf_Value.nullValue.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = *(void *)(v2 + 24);
  unint64_t v5 = *(void *)(v2 + 32);
  int v6 = *(unsigned __int8 *)(v2 + 40);
  if ((~v5 & 0x3000000000000000) == 0 && v6 == 255 || (v5 >> 60) & 3 | (4 * (v6 & 1u)))
  {
    *(void *)a1 = 0;
    *(unsigned char *)(a1 + 8) = 1;
  }
  else
  {
    *(void *)a1 = v3;
    *(unsigned char *)(a1 + 8) = v4 & 1;
    sub_1C8CC55A4(v3, v4, v5, v6 & 1);
  }
}

void sub_1C8D7B298(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v4 = *(void *)(v3 + 24);
  unint64_t v6 = *(void *)(v3 + 32);
  int v7 = *(unsigned __int8 *)(v3 + 40);
  if ((~v6 & 0x3000000000000000) == 0 && v7 == 255 || (v6 >> 60) & 3 | (4 * (v7 & 1u)))
  {
    uint64_t v5 = 0;
    char v8 = 1;
  }
  else
  {
    char v8 = v4 & 1;
    sub_1C8CC55A4(v5, v4, v6, v7 & 1);
  }
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v8;
}

void Google_Protobuf_Value.nullValue.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *((unsigned __int8 *)a1 + 8);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v4 = *(void *)(v1 + 16);
    type metadata accessor for Google_Protobuf_Value._StorageClass();
    uint64_t v5 = swift_allocObject();
    uint64_t v6 = *(void *)(v4 + 16);
    uint64_t v7 = *(void *)(v4 + 24);
    unint64_t v8 = *(void *)(v4 + 32);
    unsigned __int8 v9 = *(unsigned char *)(v4 + 40);
    *(void *)(v5 + 16) = v6;
    *(void *)(v5 + 24) = v7;
    *(void *)(v5 + 32) = v8;
    *(unsigned char *)(v5 + 40) = v9;
    sub_1C8CC5580(v6, v7, v8, v9);
    sub_1C8CC5640(0, 0, 0x3000000000000000uLL, 0xFFu);
    *(void *)(v1 + 16) = v5;
    swift_release();
  }
  uint64_t v10 = *(void *)(v1 + 16);
  uint64_t v11 = *(void *)(v10 + 16);
  uint64_t v12 = *(void *)(v10 + 24);
  unint64_t v13 = *(void *)(v10 + 32);
  *(void *)(v10 + 16) = v2;
  *(void *)(v10 + 24) = v3;
  *(void *)(v10 + 32) = 0;
  unsigned __int8 v14 = *(unsigned char *)(v10 + 40);
  *(unsigned char *)(v10 + 40) = 0;
  sub_1C8CC5640(v11, v12, v13, v14);
}

void (*Google_Protobuf_Value.nullValue.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = *(void *)(v3 + 24);
  unint64_t v6 = *(void *)(v3 + 32);
  int v7 = *(unsigned __int8 *)(v3 + 40);
  if ((~v6 & 0x3000000000000000) == 0 && v7 == 255 || (v6 >> 60) & 3 | (4 * (v7 & 1u)))
  {
    *(void *)a1 = 0;
    *(unsigned char *)(a1 + 8) = 1;
  }
  else
  {
    *(void *)a1 = v4;
    *(unsigned char *)(a1 + 8) = v5 & 1;
    sub_1C8CC55A4(v4, v5, v6, v7 & 1);
  }
  return sub_1C8D7B46C;
}

void sub_1C8D7B46C(uint64_t a1)
{
  char v1 = *(unsigned char *)(a1 + 8);
  uint64_t v2 = *(void *)a1;
  char v3 = v1;
  Google_Protobuf_Value.nullValue.setter(&v2);
}

double Google_Protobuf_Value.numberValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  unint64_t v4 = *(void *)(v1 + 32);
  int v5 = *(unsigned __int8 *)(v1 + 40);
  double v6 = 0.0;
  if (((~v4 & 0x3000000000000000) != 0 || v5 != 255) && ((v4 >> 60) & 3 | (4 * (v5 & 1u))) == 1)
  {
    double v6 = *(double *)&v2;
    sub_1C8CC55A4(v2, v3, v4, v5 & 1);
  }
  return v6;
}

void sub_1C8D7B510(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = *(void *)(v3 + 24);
  unint64_t v6 = *(void *)(v3 + 32);
  int v7 = *(unsigned __int8 *)(v3 + 40);
  uint64_t v8 = 0;
  if (((~v6 & 0x3000000000000000) != 0 || v7 != 255) && ((v6 >> 60) & 3 | (4 * (v7 & 1u))) == 1)
  {
    uint64_t v8 = v4;
    sub_1C8CC55A4(v4, v5, v6, v7 & 1);
  }
  *a2 = v8;
}

void Google_Protobuf_Value.numberValue.setter(double a1)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v3 = *(void *)(v1 + 16);
    type metadata accessor for Google_Protobuf_Value._StorageClass();
    uint64_t v4 = swift_allocObject();
    uint64_t v5 = *(void *)(v3 + 16);
    uint64_t v6 = *(void *)(v3 + 24);
    unint64_t v7 = *(void *)(v3 + 32);
    unsigned __int8 v8 = *(unsigned char *)(v3 + 40);
    *(void *)(v4 + 16) = v5;
    *(void *)(v4 + 24) = v6;
    *(void *)(v4 + 32) = v7;
    *(unsigned char *)(v4 + 40) = v8;
    sub_1C8CC5580(v5, v6, v7, v8);
    sub_1C8CC5640(0, 0, 0x3000000000000000uLL, 0xFFu);
    *(void *)(v1 + 16) = v4;
    swift_release();
  }
  uint64_t v9 = *(void *)(v1 + 16);
  uint64_t v10 = *(void *)(v9 + 16);
  uint64_t v11 = *(void *)(v9 + 24);
  unint64_t v12 = *(void *)(v9 + 32);
  *(double *)(v9 + 16) = a1;
  *(_OWORD *)(v9 + 24) = xmmword_1C8D90C00;
  unsigned __int8 v13 = *(unsigned char *)(v9 + 40);
  *(unsigned char *)(v9 + 40) = 0;
  sub_1C8CC5640(v10, v11, v12, v13);
}

void (*Google_Protobuf_Value.numberValue.modify(uint64_t *a1))(uint64_t *a1)
{
  a1[1] = v1;
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = *(void *)(v3 + 24);
  unint64_t v6 = *(void *)(v3 + 32);
  int v7 = *(unsigned __int8 *)(v3 + 40);
  uint64_t v8 = 0;
  if (((~v6 & 0x3000000000000000) != 0 || v7 != 255) && ((v6 >> 60) & 3 | (4 * (v7 & 1u))) == 1)
  {
    uint64_t v8 = v4;
    sub_1C8CC55A4(v4, v5, v6, v7 & 1);
  }
  *a1 = v8;
  return sub_1C8D7B6D8;
}

void sub_1C8D7B6D8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v3 = *(void *)(v2 + 16);
    type metadata accessor for Google_Protobuf_Value._StorageClass();
    uint64_t v4 = swift_allocObject();
    uint64_t v5 = *(void *)(v3 + 16);
    uint64_t v6 = *(void *)(v3 + 24);
    unint64_t v7 = *(void *)(v3 + 32);
    unsigned __int8 v8 = *(unsigned char *)(v3 + 40);
    *(void *)(v4 + 16) = v5;
    *(void *)(v4 + 24) = v6;
    *(void *)(v4 + 32) = v7;
    *(unsigned char *)(v4 + 40) = v8;
    sub_1C8CC5580(v5, v6, v7, v8);
    sub_1C8CC5640(0, 0, 0x3000000000000000uLL, 0xFFu);
    *(void *)(v2 + 16) = v4;
    swift_release();
  }
  uint64_t v9 = *(void *)(v2 + 16);
  uint64_t v10 = *(void *)(v9 + 16);
  uint64_t v11 = *(void *)(v9 + 24);
  unint64_t v12 = *(void *)(v9 + 32);
  *(void *)(v9 + 16) = v1;
  *(_OWORD *)(v9 + 24) = xmmword_1C8D90C00;
  unsigned __int8 v13 = *(unsigned char *)(v9 + 40);
  *(unsigned char *)(v9 + 40) = 0;
  sub_1C8CC5640(v10, v11, v12, v13);
}

uint64_t Google_Protobuf_Value.stringValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  unint64_t v4 = *(void *)(v1 + 32);
  int v5 = *(unsigned __int8 *)(v1 + 40);
  if ((~v4 & 0x3000000000000000) == 0 && v5 == 255 || ((v4 >> 60) & 3 | (4 * (v5 & 1u))) != 2) {
    return 0;
  }
  sub_1C8CC55A4(v2, v3, v4, v5 & 1);
  return v2;
}

void sub_1C8D7B810(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = *(void *)(v3 + 24);
  unint64_t v6 = *(void *)(v3 + 32);
  int v7 = *(unsigned __int8 *)(v3 + 40);
  if (((~v6 & 0x3000000000000000) != 0 || v7 != 255) && ((v6 >> 60) & 3 | (4 * (v7 & 1u))) == 2)
  {
    sub_1C8CC55A4(v4, v5, v6, v7 & 1);
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v5 = 0xE000000000000000;
  }
  *a2 = v4;
  a2[1] = v5;
}

void Google_Protobuf_Value.stringValue.setter(uint64_t a1, uint64_t a2)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v5 = *(void *)(v2 + 16);
    type metadata accessor for Google_Protobuf_Value._StorageClass();
    uint64_t v6 = swift_allocObject();
    uint64_t v7 = *(void *)(v5 + 16);
    uint64_t v8 = *(void *)(v5 + 24);
    unint64_t v9 = *(void *)(v5 + 32);
    unsigned __int8 v10 = *(unsigned char *)(v5 + 40);
    *(void *)(v6 + 16) = v7;
    *(void *)(v6 + 24) = v8;
    *(void *)(v6 + 32) = v9;
    *(unsigned char *)(v6 + 40) = v10;
    sub_1C8CC5580(v7, v8, v9, v10);
    sub_1C8CC5640(0, 0, 0x3000000000000000uLL, 0xFFu);
    *(void *)(v2 + 16) = v6;
    swift_release();
  }
  uint64_t v11 = *(void *)(v2 + 16);
  uint64_t v12 = *(void *)(v11 + 16);
  uint64_t v13 = *(void *)(v11 + 24);
  unint64_t v14 = *(void *)(v11 + 32);
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = a2;
  *(void *)(v11 + 32) = 0x2000000000000000;
  unsigned __int8 v15 = *(unsigned char *)(v11 + 40);
  *(unsigned char *)(v11 + 40) = 0;
  sub_1C8CC5640(v12, v13, v14, v15);
}

void (*Google_Protobuf_Value.stringValue.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = *(void *)(v3 + 24);
  unint64_t v6 = *(void *)(v3 + 32);
  int v7 = *(unsigned __int8 *)(v3 + 40);
  if (((~v6 & 0x3000000000000000) != 0 || v7 != 255) && ((v6 >> 60) & 3 | (4 * (v7 & 1u))) == 2)
  {
    sub_1C8CC55A4(v4, v5, v6, v7 & 1);
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v5 = 0xE000000000000000;
  }
  *a1 = v4;
  a1[1] = v5;
  return sub_1C8D7B9F0;
}

void sub_1C8D7B9F0(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = a1[2];
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v5 = *(void *)(v4 + 16);
      type metadata accessor for Google_Protobuf_Value._StorageClass();
      uint64_t v6 = swift_allocObject();
      uint64_t v7 = *(void *)(v5 + 16);
      uint64_t v8 = *(void *)(v5 + 24);
      unint64_t v9 = *(void *)(v5 + 32);
      unsigned __int8 v10 = *(unsigned char *)(v5 + 40);
      *(void *)(v6 + 16) = v7;
      *(void *)(v6 + 24) = v8;
      *(void *)(v6 + 32) = v9;
      *(unsigned char *)(v6 + 40) = v10;
      sub_1C8CC5580(v7, v8, v9, v10);
      sub_1C8CC5640(0, 0, 0x3000000000000000uLL, 0xFFu);
      *(void *)(v4 + 16) = v6;
      swift_release();
    }
    uint64_t v11 = *(void *)(v4 + 16);
    uint64_t v12 = *(void *)(v11 + 16);
    uint64_t v13 = *(void *)(v11 + 24);
    unint64_t v14 = *(void *)(v11 + 32);
    *(void *)(v11 + 16) = v3;
    *(void *)(v11 + 24) = v2;
    *(void *)(v11 + 32) = 0x2000000000000000;
    unsigned __int8 v15 = *(unsigned char *)(v11 + 40);
    *(unsigned char *)(v11 + 40) = 0;
    sub_1C8CC5640(v12, v13, v14, v15);
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v16 = *(void *)(v4 + 16);
      type metadata accessor for Google_Protobuf_Value._StorageClass();
      uint64_t v17 = swift_allocObject();
      uint64_t v18 = *(void *)(v16 + 16);
      uint64_t v19 = *(void *)(v16 + 24);
      unint64_t v20 = *(void *)(v16 + 32);
      unsigned __int8 v21 = *(unsigned char *)(v16 + 40);
      *(void *)(v17 + 16) = v18;
      *(void *)(v17 + 24) = v19;
      *(void *)(v17 + 32) = v20;
      *(unsigned char *)(v17 + 40) = v21;
      sub_1C8CC5580(v18, v19, v20, v21);
      sub_1C8CC5640(0, 0, 0x3000000000000000uLL, 0xFFu);
      *(void *)(v4 + 16) = v17;
      swift_release();
    }
    uint64_t v22 = *(void *)(v4 + 16);
    uint64_t v23 = *(void *)(v22 + 16);
    uint64_t v24 = *(void *)(v22 + 24);
    unint64_t v25 = *(void *)(v22 + 32);
    *(void *)(v22 + 16) = v3;
    *(void *)(v22 + 24) = v2;
    *(void *)(v22 + 32) = 0x2000000000000000;
    unsigned __int8 v26 = *(unsigned char *)(v22 + 40);
    *(unsigned char *)(v22 + 40) = 0;
    sub_1C8CC5640(v23, v24, v25, v26);
  }
}

uint64_t Google_Protobuf_Value.BOOLValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  unint64_t v4 = *(void *)(v1 + 32);
  int v5 = *(unsigned __int8 *)(v1 + 40);
  if ((~v4 & 0x3000000000000000) == 0 && v5 == 255 || ((v4 >> 60) & 3 | (4 * (v5 & 1u))) != 3) {
    return 0;
  }
  uint64_t v6 = v2 & 1;
  sub_1C8CC55A4(v2, v3, v4, v5 & 1);
  return v6;
}

void sub_1C8D7BBDC(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = *(void *)(v3 + 24);
  unint64_t v6 = *(void *)(v3 + 32);
  int v7 = *(unsigned __int8 *)(v3 + 40);
  if (((~v6 & 0x3000000000000000) != 0 || v7 != 255) && ((v6 >> 60) & 3 | (4 * (v7 & 1u))) == 3)
  {
    char v8 = v4 & 1;
    sub_1C8CC55A4(v4, v5, v6, v7 & 1);
  }
  else
  {
    char v8 = 0;
  }
  *a2 = v8;
}

void Google_Protobuf_Value.BOOLValue.setter(char a1)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v3 = *(void *)(v1 + 16);
    type metadata accessor for Google_Protobuf_Value._StorageClass();
    uint64_t v4 = swift_allocObject();
    uint64_t v5 = *(void *)(v3 + 16);
    uint64_t v6 = *(void *)(v3 + 24);
    unint64_t v7 = *(void *)(v3 + 32);
    unsigned __int8 v8 = *(unsigned char *)(v3 + 40);
    *(void *)(v4 + 16) = v5;
    *(void *)(v4 + 24) = v6;
    *(void *)(v4 + 32) = v7;
    *(unsigned char *)(v4 + 40) = v8;
    sub_1C8CC5580(v5, v6, v7, v8);
    sub_1C8CC5640(0, 0, 0x3000000000000000uLL, 0xFFu);
    *(void *)(v1 + 16) = v4;
    swift_release();
  }
  uint64_t v9 = *(void *)(v1 + 16);
  uint64_t v10 = *(void *)(v9 + 16);
  uint64_t v11 = *(void *)(v9 + 24);
  unint64_t v12 = *(void *)(v9 + 32);
  *(void *)(v9 + 16) = a1 & 1;
  *(_OWORD *)(v9 + 24) = xmmword_1C8D90C10;
  unsigned __int8 v13 = *(unsigned char *)(v9 + 40);
  *(unsigned char *)(v9 + 40) = 0;
  sub_1C8CC5640(v10, v11, v12, v13);
}

void (*Google_Protobuf_Value.BOOLValue.modify(uint64_t a1))(uint64_t *a1)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = *(void *)(v3 + 24);
  unint64_t v6 = *(void *)(v3 + 32);
  int v7 = *(unsigned __int8 *)(v3 + 40);
  if (((~v6 & 0x3000000000000000) != 0 || v7 != 255) && ((v6 >> 60) & 3 | (4 * (v7 & 1u))) == 3)
  {
    char v8 = v4 & 1;
    sub_1C8CC55A4(v4, v5, v6, v7 & 1);
  }
  else
  {
    char v8 = 0;
  }
  *(unsigned char *)(a1 + 8) = v8;
  return sub_1C8D7BDA4;
}

void sub_1C8D7BDA4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = *((unsigned __int8 *)a1 + 8);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v3 = *(void *)(v1 + 16);
    type metadata accessor for Google_Protobuf_Value._StorageClass();
    uint64_t v4 = swift_allocObject();
    uint64_t v5 = *(void *)(v3 + 16);
    uint64_t v6 = *(void *)(v3 + 24);
    unint64_t v7 = *(void *)(v3 + 32);
    unsigned __int8 v8 = *(unsigned char *)(v3 + 40);
    *(void *)(v4 + 16) = v5;
    *(void *)(v4 + 24) = v6;
    *(void *)(v4 + 32) = v7;
    *(unsigned char *)(v4 + 40) = v8;
    sub_1C8CC5580(v5, v6, v7, v8);
    sub_1C8CC5640(0, 0, 0x3000000000000000uLL, 0xFFu);
    *(void *)(v1 + 16) = v4;
    swift_release();
  }
  uint64_t v9 = *(void *)(v1 + 16);
  uint64_t v10 = *(void *)(v9 + 16);
  uint64_t v11 = *(void *)(v9 + 24);
  unint64_t v12 = *(void *)(v9 + 32);
  *(void *)(v9 + 16) = v2;
  *(_OWORD *)(v9 + 24) = xmmword_1C8D90C10;
  unsigned __int8 v13 = *(unsigned char *)(v9 + 40);
  *(unsigned char *)(v9 + 40) = 0;
  sub_1C8CC5640(v10, v11, v12, v13);
}

double Google_Protobuf_Value.structValue.getter@<D0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = *(void *)(v3 + 24);
  unint64_t v6 = *(void *)(v3 + 32);
  int v7 = *(unsigned __int8 *)(v3 + 40);
  if (((~v6 & 0x3000000000000000) != 0 || v7 != 255) && ((v6 >> 60) & 3 | (4 * (v7 & 1u))) == 4)
  {
    *a1 = v4;
    a1[1] = v5;
    a1[2] = v6;
    sub_1C8CC55A4(v4, v5, v6, v7 & 1);
  }
  else
  {
    *a1 = sub_1C8D845B8(MEMORY[0x1E4FBC860]);
    double result = 0.0;
    *(_OWORD *)(a1 + 1) = xmmword_1C8D8AD80;
  }
  return result;
}

void sub_1C8D7BF04(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  unint64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = *(void *)(v3 + 24);
  unint64_t v6 = *(void *)(v3 + 32);
  int v7 = *(unsigned __int8 *)(v3 + 40);
  if (((~v6 & 0x3000000000000000) != 0 || v7 != 255) && ((v6 >> 60) & 3 | (4 * (v7 & 1u))) == 4)
  {
    sub_1C8CC55A4(v4, v5, v6, v7 & 1);
  }
  else
  {
    unint64_t v4 = sub_1C8D845B8(MEMORY[0x1E4FBC860]);
    uint64_t v5 = 0;
    unint64_t v6 = 0xC000000000000000;
  }
  *a2 = v4;
  a2[1] = v5;
  a2[2] = v6;
}

void Google_Protobuf_Value.structValue.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v5 = *(void *)(v1 + 16);
    type metadata accessor for Google_Protobuf_Value._StorageClass();
    uint64_t v6 = swift_allocObject();
    uint64_t v7 = *(void *)(v5 + 16);
    uint64_t v8 = *(void *)(v5 + 24);
    unint64_t v9 = *(void *)(v5 + 32);
    unsigned __int8 v10 = *(unsigned char *)(v5 + 40);
    *(void *)(v6 + 16) = v7;
    *(void *)(v6 + 24) = v8;
    *(void *)(v6 + 32) = v9;
    *(unsigned char *)(v6 + 40) = v10;
    sub_1C8CC5580(v7, v8, v9, v10);
    sub_1C8CC5640(0, 0, 0x3000000000000000uLL, 0xFFu);
    *(void *)(v1 + 16) = v6;
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + 16);
  uint64_t v12 = *(void *)(v11 + 16);
  uint64_t v13 = *(void *)(v11 + 24);
  unint64_t v14 = *(void *)(v11 + 32);
  *(void *)(v11 + 16) = v2;
  *(void *)(v11 + 24) = v3;
  *(void *)(v11 + 32) = v4;
  unsigned __int8 v15 = *(unsigned char *)(v11 + 40);
  *(unsigned char *)(v11 + 40) = 1;
  sub_1C8CC5640(v12, v13, v14, v15);
}

uint64_t (*Google_Protobuf_Value.structValue.modify(void *a1))(uint64_t *a1, char a2)
{
  a1[3] = v1;
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = *(void *)(v3 + 24);
  unint64_t v6 = *(void *)(v3 + 32);
  int v7 = *(unsigned __int8 *)(v3 + 40);
  if (((~v6 & 0x3000000000000000) != 0 || v7 != 255) && ((v6 >> 60) & 3 | (4 * (v7 & 1u))) == 4)
  {
    *a1 = v4;
    a1[1] = v5;
    a1[2] = v6;
    sub_1C8CC55A4(v4, v5, v6, v7 & 1);
  }
  else
  {
    *a1 = sub_1C8D845B8(MEMORY[0x1E4FBC860]);
    *(_OWORD *)(a1 + 1) = xmmword_1C8D8AD80;
  }
  return sub_1C8D7C104;
}

uint64_t sub_1C8D7C104(uint64_t *a1, char a2)
{
  return sub_1C8D7C3F8(a1, a2, Google_Protobuf_Value.structValue.setter);
}

double Google_Protobuf_Value.listValue.getter@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = *(void *)(v2 + 24);
  unint64_t v5 = *(void *)(v2 + 32);
  int v6 = *(unsigned __int8 *)(v2 + 40);
  if (((~v5 & 0x3000000000000000) != 0 || v6 != 255) && ((v5 >> 60) & 3 | (4 * (v6 & 1u))) == 5)
  {
    *a1 = v3;
    a1[1] = v4;
    a1[2] = v5 & 0xCFFFFFFFFFFFFFFFLL;
    sub_1C8CC55A4(v3, v4, v5, v6 & 1);
  }
  else
  {
    *a1 = MEMORY[0x1E4FBC860];
    double result = 0.0;
    *(_OWORD *)(a1 + 1) = xmmword_1C8D8AD80;
  }
  return result;
}

void sub_1C8D7C180(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v4 = *(void *)(v3 + 24);
  unint64_t v6 = *(void *)(v3 + 32);
  int v7 = *(unsigned __int8 *)(v3 + 40);
  if (((~v6 & 0x3000000000000000) != 0 || v7 != 255) && ((v6 >> 60) & 3 | (4 * (v7 & 1u))) == 5)
  {
    unint64_t v8 = v6 & 0xCFFFFFFFFFFFFFFFLL;
    sub_1C8CC55A4(v5, v4, v6, v7 & 1);
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v5 = MEMORY[0x1E4FBC860];
    unint64_t v8 = 0xC000000000000000;
  }
  *a2 = v5;
  a2[1] = v4;
  a2[2] = v8;
}

uint64_t sub_1C8D7C20C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void *))
{
  uint64_t v6 = a1[1];
  unint64_t v7 = a1[2];
  v9[0] = *a1;
  v9[1] = v6;
  _OWORD v9[2] = v7;
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(v6, v7);
  return a5(v9);
}

void Google_Protobuf_Value.listValue.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v5 = *(void *)(v1 + 16);
    type metadata accessor for Google_Protobuf_Value._StorageClass();
    uint64_t v6 = swift_allocObject();
    uint64_t v7 = *(void *)(v5 + 16);
    uint64_t v8 = *(void *)(v5 + 24);
    unint64_t v9 = *(void *)(v5 + 32);
    unsigned __int8 v10 = *(unsigned char *)(v5 + 40);
    *(void *)(v6 + 16) = v7;
    *(void *)(v6 + 24) = v8;
    *(void *)(v6 + 32) = v9;
    *(unsigned char *)(v6 + 40) = v10;
    sub_1C8CC5580(v7, v8, v9, v10);
    sub_1C8CC5640(0, 0, 0x3000000000000000uLL, 0xFFu);
    *(void *)(v1 + 16) = v6;
    swift_release();
  }
  uint64_t v11 = *(void *)(v1 + 16);
  uint64_t v12 = *(void *)(v11 + 16);
  uint64_t v13 = *(void *)(v11 + 24);
  unint64_t v14 = *(void *)(v11 + 32);
  *(void *)(v11 + 16) = v2;
  *(void *)(v11 + 24) = v3;
  *(void *)(v11 + 32) = v4 | 0x1000000000000000;
  unsigned __int8 v15 = *(unsigned char *)(v11 + 40);
  *(unsigned char *)(v11 + 40) = 1;
  sub_1C8CC5640(v12, v13, v14, v15);
}

uint64_t (*Google_Protobuf_Value.listValue.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[3] = v1;
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = *(void *)(v3 + 24);
  unint64_t v6 = *(void *)(v3 + 32);
  int v7 = *(unsigned __int8 *)(v3 + 40);
  if (((~v6 & 0x3000000000000000) != 0 || v7 != 255) && ((v6 >> 60) & 3 | (4 * (v7 & 1u))) == 5)
  {
    *a1 = v4;
    a1[1] = v5;
    a1[2] = v6 & 0xCFFFFFFFFFFFFFFFLL;
    sub_1C8CC55A4(v4, v5, v6, v7 & 1);
  }
  else
  {
    *a1 = MEMORY[0x1E4FBC860];
    *(_OWORD *)(a1 + 1) = xmmword_1C8D8AD80;
  }
  return sub_1C8D7C3E0;
}

uint64_t sub_1C8D7C3E0(uint64_t *a1, char a2)
{
  return sub_1C8D7C3F8(a1, a2, Google_Protobuf_Value.listValue.setter);
}

uint64_t sub_1C8D7C3F8(uint64_t *a1, char a2, void (*a3)(uint64_t *))
{
  uint64_t v4 = a1[1];
  unint64_t v5 = a1[2];
  if (a2)
  {
    uint64_t v7 = *a1;
    uint64_t v8 = v4;
    unint64_t v9 = v5;
    swift_bridgeObjectRetain();
    sub_1C8CA3CF8(v4, v5);
    a3(&v7);
    swift_bridgeObjectRelease();
    return sub_1C8CA3D5C(v4, v5);
  }
  else
  {
    uint64_t v7 = *a1;
    uint64_t v8 = v4;
    unint64_t v9 = v5;
    return ((uint64_t (*)(uint64_t *))a3)(&v7);
  }
}

uint64_t Google_Protobuf_Value.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_1C8CA3CF8(v2, v3);
}

uint64_t Google_Protobuf_Value.unknownFields.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C8CA3D5C(*(void *)v1, *(void *)(v1 + 8));
  *(void *)uint64_t v1 = v2;
  *(void *)(v1 + 8) = v3;
  return result;
}

uint64_t (*Google_Protobuf_Value.unknownFields.modify())(void, void, void)
{
  return nullsub_1;
}

uint64_t static Google_Protobuf_Struct.== infix(_:_:)(void *a1, void *a2)
{
  return sub_1C8D7C544(a1, a2, sub_1C8D7E758);
}

uint64_t static Google_Protobuf_ListValue.== infix(_:_:)(void *a1, void *a2)
{
  return sub_1C8D7C544(a1, a2, sub_1C8CFC0B4);
}

uint64_t sub_1C8D7C544(void *a1, void *a2, uint64_t (*a3)(void, void))
{
  uint64_t v3 = a1[1];
  unint64_t v4 = a1[2];
  uint64_t v5 = a2[1];
  unint64_t v6 = a2[2];
  if ((a3(*a1, *a2) & 1) == 0) {
    return 0;
  }
  sub_1C8CA3CF8(v3, v4);
  sub_1C8CA3CF8(v5, v6);
  char v7 = sub_1C8D01FBC(v3, v4, v5, v6);
  sub_1C8CA3D5C(v5, v6);
  sub_1C8CA3D5C(v3, v4);
  return v7 & 1;
}

uint64_t Google_Protobuf_ListValue.values.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_ListValue.values.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*Google_Protobuf_ListValue.values.modify())(void, void, void)
{
  return nullsub_1;
}

uint64_t Google_Protobuf_ListValue.unknownFields.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  unint64_t v3 = *(void *)(v1 + 16);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C8CA3CF8(v2, v3);
}

uint64_t (*Google_Protobuf_ListValue.unknownFields.modify())(void, void, void)
{
  return nullsub_1;
}

uint64_t sub_1C8D7C670()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234B850, &qword_1EA567808);
}

uint64_t static Google_Protobuf_NullValue._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565C98 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA567810;
  uint64_t v3 = qword_1EA567818;
  uint64_t v4 = unk_1EA567820;
  *a1 = qword_1EA567808;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8D7C71C@<X0>(void *a1@<X8>)
{
  if (qword_1EA565C98 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA567810;
  uint64_t v3 = qword_1EA567818;
  uint64_t v4 = unk_1EA567820;
  *a1 = qword_1EA567808;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

unint64_t static Google_Protobuf_Struct.protoMessageName.getter()
{
  return 0xD000000000000016;
}

uint64_t sub_1C8D7C7D0()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234F378, &qword_1EA567828);
}

uint64_t static Google_Protobuf_Struct._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565CA0 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA567830;
  uint64_t v3 = qword_1EA567838;
  uint64_t v4 = unk_1EA567840;
  *a1 = qword_1EA567828;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_Struct.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  uint64_t result = v7(a2, a3);
  if (!v4)
  {
    while ((v9 & 1) == 0)
    {
      if (result == 1)
      {
        unsigned __int8 v10 = *(void (**)(uint64_t, ValueMetadata *, ValueMetadata *, _UNKNOWN **, unint64_t, unint64_t, uint64_t, uint64_t))(a3 + 456);
        unint64_t v11 = sub_1C8D4CB88();
        unint64_t v12 = sub_1C8D7FC74();
        v10(v3, &type metadata for ProtobufString, &type metadata for Google_Protobuf_Value, &protocol witness table for ProtobufString, v11, v12, a2, a3);
      }
      uint64_t result = v7(a2, a3);
    }
  }
  return result;
}

uint64_t Google_Protobuf_Struct.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *v3;
  if (!*(void *)(*v3 + 16)) {
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  char v9 = *(uint64_t (**)(uint64_t, uint64_t, ValueMetadata *, ValueMetadata *, _UNKNOWN **, unint64_t, unint64_t, uint64_t, uint64_t))(a3 + 424);
  unint64_t v10 = sub_1C8D4CB88();
  unint64_t v11 = sub_1C8D7FC74();
  uint64_t result = v9(v8, 1, &type metadata for ProtobufString, &type metadata for Google_Protobuf_Value, &protocol witness table for ProtobufString, v10, v11, a2, a3);
  if (!v4) {
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t Google_Protobuf_Struct.hashValue.getter()
{
  return sub_1C8D7E41C((void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_1C8CBC74C);
}

double sub_1C8D7CA80@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_1C8D845B8(MEMORY[0x1E4FBC860]);
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C8D8AD80;
  return result;
}

unint64_t sub_1C8D7CABC()
{
  return 0xD000000000000016;
}

uint64_t sub_1C8D7CAD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_Struct.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8D7CAF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_Struct.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8D7CB08@<X0>(void *a1@<X8>)
{
  if (qword_1EA565CA0 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA567830;
  uint64_t v3 = qword_1EA567838;
  uint64_t v4 = unk_1EA567840;
  *a1 = qword_1EA567828;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8D7CBA0()
{
  return sub_1C8D6B9F8(*v0, v0[1], v0[2], (uint64_t)&type metadata for Google_Protobuf_Struct, &qword_1EA567908, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C8D7A140);
}

uint64_t sub_1C8D7CBE4(uint64_t a1, uint64_t a2)
{
  return sub_1C8D7E5C0(a1, a2, (void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_1C8CBC74C);
}

double sub_1C8D7CBFC(uint64_t a1)
{
  return sub_1C8CBC74C(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16));
}

uint64_t sub_1C8D7CC08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D7E63C(a1, a2, a3, (void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_1C8CBC74C);
}

uint64_t sub_1C8D7CC20(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8D7E6B4(a1, a2, a3, a4, sub_1C8D7E758);
}

unint64_t static Google_Protobuf_Value.protoMessageName.getter()
{
  return 0xD000000000000015;
}

uint64_t sub_1C8D7CC54()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234EFD0, &qword_1EA567848);
}

uint64_t static Google_Protobuf_Value._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565CA8 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA567850;
  uint64_t v3 = qword_1EA567858;
  uint64_t v4 = unk_1EA567860;
  *a1 = qword_1EA567848;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8D7CD00()
{
  sub_1C8CC5640(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  return MEMORY[0x1F4186488](v0, 41, 7);
}

uint64_t Google_Protobuf_Value.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v7 = *(void *)(v3 + 16);
    type metadata accessor for Google_Protobuf_Value._StorageClass();
    uint64_t v8 = swift_allocObject();
    uint64_t v9 = *(void *)(v7 + 16);
    uint64_t v10 = *(void *)(v7 + 24);
    unint64_t v11 = *(void *)(v7 + 32);
    unsigned __int8 v12 = *(unsigned char *)(v7 + 40);
    *(void *)(v8 + 16) = v9;
    *(void *)(v8 + 24) = v10;
    *(void *)(v8 + 32) = v11;
    *(unsigned char *)(v8 + 40) = v12;
    sub_1C8CC5580(v9, v10, v11, v12);
    sub_1C8CC5640(0, 0, 0x3000000000000000uLL, 0xFFu);
    *(void *)(v3 + 16) = v8;
    swift_release();
  }
  uint64_t v13 = swift_retain();
  sub_1C8D7CE18(v13, a1, a2, a3);
  return swift_release();
}

void sub_1C8D7CE18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 16);
  uint64_t v9 = v8(a3, a4);
  if (!v4)
  {
    uint64_t v45 = a4 + 8;
    long long v42 = v8;
    while ((v10 & 1) == 0)
    {
      switch(v9)
      {
        case 1:
          if ((~*(void *)(a1 + 32) & 0x3000000000000000) != 0 || *(unsigned __int8 *)(a1 + 40) != 255) {
            (*(void (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4);
          }
          uint64_t v43 = 0;
          LOWORD(v44) = 256;
          unsigned __int8 v12 = *(void (**)(uint64_t *, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 392);
          unint64_t v13 = sub_1C8D810C4();
          v12(&v43, &type metadata for Google_Protobuf_NullValue, v13, a3, a4);
          if ((BYTE1(v44) & 1) == 0)
          {
            uint64_t v14 = v44 & 1;
            uint64_t v15 = *(void *)(a1 + 16);
            uint64_t v16 = *(void *)(a1 + 24);
            unint64_t v17 = *(void *)(a1 + 32);
            *(void *)(a1 + 16) = v43;
            *(void *)(a1 + 24) = v14;
            *(void *)(a1 + 32) = 0;
            goto LABEL_5;
          }
          break;
        case 2:
          if ((~*(void *)(a1 + 32) & 0x3000000000000000) != 0 || *(unsigned __int8 *)(a1 + 40) != 255) {
            (*(void (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4);
          }
          uint64_t v43 = 0;
          LOBYTE(v44) = 1;
          (*(void (**)(uint64_t *, uint64_t, uint64_t))(a4 + 56))(&v43, a3, a4);
          if ((v44 & 1) == 0)
          {
            uint64_t v15 = *(void *)(a1 + 16);
            uint64_t v16 = *(void *)(a1 + 24);
            unint64_t v17 = *(void *)(a1 + 32);
            *(void *)(a1 + 16) = v43;
            long long v18 = xmmword_1C8D90C00;
            goto LABEL_4;
          }
          break;
        case 3:
          if ((~*(void *)(a1 + 32) & 0x3000000000000000) != 0 || *(unsigned __int8 *)(a1 + 40) != 255) {
            (*(void (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4);
          }
          uint64_t v43 = 0;
          *(void *)&long long v44 = 0;
          (*(void (**)(uint64_t *, uint64_t, uint64_t))(a4 + 344))(&v43, a3, a4);
          uint64_t v19 = v44;
          if ((void)v44)
          {
            uint64_t v20 = *(void *)(a1 + 16);
            uint64_t v16 = *(void *)(a1 + 24);
            unint64_t v17 = *(void *)(a1 + 32);
            *(void *)(a1 + 16) = v43;
            *(void *)(a1 + 24) = v19;
            *(void *)(a1 + 32) = 0x2000000000000000;
            unsigned __int8 v11 = *(unsigned char *)(a1 + 40);
            *(unsigned char *)(a1 + 40) = 0;
            uint64_t v15 = v20;
            goto LABEL_6;
          }
          break;
        case 4:
          if ((~*(void *)(a1 + 32) & 0x3000000000000000) != 0 || *(unsigned __int8 *)(a1 + 40) != 255) {
            (*(void (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4);
          }
          LOBYTE(v43) = 2;
          (*(void (**)(uint64_t *, uint64_t, uint64_t))(a4 + 320))(&v43, a3, a4);
          if (v43 != 2)
          {
            uint64_t v15 = *(void *)(a1 + 16);
            uint64_t v16 = *(void *)(a1 + 24);
            unint64_t v17 = *(void *)(a1 + 32);
            *(void *)(a1 + 16) = v43 & 1;
            long long v18 = xmmword_1C8D90C10;
LABEL_4:
            *(_OWORD *)(a1 + 24) = v18;
LABEL_5:
            unsigned __int8 v11 = *(unsigned char *)(a1 + 40);
            *(unsigned char *)(a1 + 40) = 0;
            goto LABEL_6;
          }
          break;
        case 5:
          uint64_t v43 = 0;
          long long v44 = 0uLL;
          unint64_t v21 = *(void *)(a1 + 32);
          int v22 = *(unsigned __int8 *)(a1 + 40);
          if ((~v21 & 0x3000000000000000) != 0 || v22 != 255)
          {
            unsigned __int8 v38 = *(unsigned char *)(a1 + 40);
            int v23 = v22 & 1;
            long long v40 = *(void (**)(uint64_t, uint64_t))(a4 + 8);
            uint64_t v24 = *(void *)(a1 + 16);
            uint64_t v25 = *(void *)(a1 + 24);
            sub_1C8CC55A4(v24, v25, v21, v22 & 1);
            v40(a3, a4);
            if (((v21 >> 60) & 3 | (4 * v23)) == 4)
            {
              uint64_t v43 = v24;
              *(void *)&long long v44 = v25;
              *((void *)&v44 + 1) = v21;
            }
            else
            {
              sub_1C8CC5640(v24, v25, v21, v38);
            }
          }
          uint64_t v8 = v42;
          uint64_t v30 = *(void (**)(uint64_t *, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 408);
          unint64_t v31 = sub_1C8D4CB34();
          v30(&v43, &type metadata for Google_Protobuf_Struct, v31, a3, a4);
          if (v43)
          {
            uint64_t v32 = *(void *)(a1 + 16);
            uint64_t v16 = *(void *)(a1 + 24);
            unint64_t v17 = *(void *)(a1 + 32);
            *(void *)(a1 + 16) = v43;
            *(_OWORD *)(a1 + 24) = v44;
            unsigned __int8 v11 = *(unsigned char *)(a1 + 40);
            *(unsigned char *)(a1 + 40) = 1;
            uint64_t v15 = v32;
            goto LABEL_6;
          }
          break;
        case 6:
          uint64_t v43 = 0;
          long long v44 = 0uLL;
          unint64_t v26 = *(void *)(a1 + 32);
          int v27 = *(unsigned __int8 *)(a1 + 40);
          if ((~v26 & 0x3000000000000000) != 0 || v27 != 255)
          {
            unsigned __int8 v37 = *(unsigned char *)(a1 + 40);
            int v28 = v27 & 1;
            uint64_t v39 = *(void *)(a1 + 24);
            long long v41 = *(void (**)(uint64_t, uint64_t))(a4 + 8);
            uint64_t v29 = *(void *)(a1 + 16);
            sub_1C8CC55A4(v29, v39, v26, v27 & 1);
            v41(a3, a4);
            if (((v26 >> 60) & 3 | (4 * v28)) == 5)
            {
              uint64_t v43 = v29;
              *(void *)&long long v44 = v39;
              *((void *)&v44 + 1) = v26 & 0xCFFFFFFFFFFFFFFFLL;
            }
            else
            {
              sub_1C8CC5640(v29, v39, v26, v37);
            }
            uint64_t v8 = v42;
          }
          int v33 = *(void (**)(uint64_t *, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 408);
          unint64_t v34 = sub_1C8D4CAE0();
          v33(&v43, &type metadata for Google_Protobuf_ListValue, v34, a3, a4);
          if (v43)
          {
            uint64_t v35 = v44;
            uint64_t v36 = *((void *)&v44 + 1) | 0x1000000000000000;
            uint64_t v15 = *(void *)(a1 + 16);
            uint64_t v16 = *(void *)(a1 + 24);
            unint64_t v17 = *(void *)(a1 + 32);
            *(void *)(a1 + 16) = v43;
            *(void *)(a1 + 24) = v35;
            *(void *)(a1 + 32) = v36;
            unsigned __int8 v11 = *(unsigned char *)(a1 + 40);
            *(unsigned char *)(a1 + 40) = 1;
LABEL_6:
            sub_1C8CC5640(v15, v16, v17, v11);
          }
          break;
        default:
          break;
      }
      uint64_t v9 = v8(a3, a4);
    }
  }
}

uint64_t sub_1C8D7D460(long long *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(a4 + 24);
  unint64_t v9 = *(void *)(a4 + 32);
  int v10 = *(unsigned __int8 *)(a4 + 40);
  if ((~v9 & 0x3000000000000000) != 0 || v10 != 255)
  {
    switch((v9 >> 60) & 3 | (4 * (v10 & 1u)))
    {
      case 1uLL:
        sub_1C8D88850();
        sub_1C8D88880();
        goto LABEL_3;
      case 2uLL:
        sub_1C8D88850();
        swift_retain();
        sub_1C8CC5580(v7, v8, v9, v10);
        sub_1C8D883C0();
        break;
      case 3uLL:
        sub_1C8D88850();
        sub_1C8D88860();
        goto LABEL_3;
      case 4uLL:
        swift_retain();
        sub_1C8CC5580(v7, v8, v9, v10);
        sub_1C8D195C0(v7, v8, v9);
        break;
      case 5uLL:
        sub_1C8D88850();
        swift_retain();
        sub_1C8CC5580(v7, v8, v9, v10);
        sub_1C8CBC850(a1, v7, v8, v9 & 0xCFFFFFFFFFFFFFFFLL);
        break;
      default:
        sub_1C8D88850();
        sub_1C8D88850();
        goto LABEL_3;
    }
    sub_1C8CC5640(v7, v8, v9, v10);
  }
  else
  {
LABEL_3:
    swift_retain();
  }
  uint64_t result = swift_release();
  switch(a3 >> 62)
  {
    case 1uLL:
      if ((int)a2 != a2 >> 32) {
        goto LABEL_18;
      }
      break;
    case 2uLL:
      if (*(void *)(a2 + 16) != *(void *)(a2 + 24)) {
        goto LABEL_18;
      }
      break;
    case 3uLL:
      return result;
    default:
      if ((a3 & 0xFF000000000000) != 0) {
LABEL_18:
      }
        uint64_t result = sub_1C8D881D0();
      break;
  }
  return result;
}

uint64_t Google_Protobuf_Value.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = swift_retain();
  sub_1C8D7DA04(v7, a1, a2, a3);
  uint64_t result = swift_release();
  if (!v3) {
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

void sub_1C8D7D738(uint64_t a1, char **a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  unint64_t v4 = *(void *)(a1 + 24);
  unint64_t v5 = *(void *)(a1 + 32);
  int v6 = *(unsigned __int8 *)(a1 + 40);
  if ((~v5 & 0x3000000000000000) != 0 || v6 != 255)
  {
    char v7 = v6 & 1;
    switch((v5 >> 60) & 3 | (4 * (v6 & 1u)))
    {
      case 1uLL:
        sub_1C8CA5968(2uLL);
        sub_1C8CA6060((uint64_t)": ", 2, v9);
        sub_1C8D5C698(*(double *)&v3);
        goto LABEL_6;
      case 2uLL:
        sub_1C8CC55A4(*(void *)(a1 + 16), v4, v5, v7);
        sub_1C8CA5968(3uLL);
        sub_1C8CA6060((uint64_t)": ", 2, v14);
        sub_1C8CA6D2C(v3, v4);
        uint64_t v15 = *a2;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a2 = v15;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v15 = sub_1C8D5EB50(0, *((void *)v15 + 2) + 1, 1, v15);
          *a2 = v15;
        }
        unint64_t v17 = *((void *)v15 + 2);
        unint64_t v18 = *((void *)v15 + 3);
        unint64_t v19 = v17 + 1;
        if (v17 >= v18 >> 1)
        {
          unint64_t v23 = v17 + 1;
          uint64_t v20 = v15;
          unint64_t v21 = *((void *)v15 + 2);
          int v22 = sub_1C8D5EB50((char *)(v18 > 1), v17 + 1, 1, v20);
          unint64_t v17 = v21;
          unint64_t v19 = v23;
          uint64_t v15 = v22;
        }
        *((void *)v15 + 2) = v19;
        v15[v17 + 32] = 10;
        *a2 = v15;
        goto LABEL_19;
      case 3uLL:
        sub_1C8CAB1C0(v3 & 1, 4uLL);
        return;
      case 4uLL:
        sub_1C8CC55A4(*(void *)(a1 + 16), v4, v5, v7);
        sub_1C8D72A50(v3, v4, v5, 5uLL);
        goto LABEL_19;
      case 5uLL:
        sub_1C8CC55A4(*(void *)(a1 + 16), v4, v5, v7);
        sub_1C8D72844(v3, v4, v5 & 0xCFFFFFFFFFFFFFFFLL, 6uLL);
LABEL_19:
        sub_1C8CC5640(v3, v4, v5, v6);
        break;
      default:
        sub_1C8CA5968(1uLL);
        sub_1C8CA6060((uint64_t)": ", 2, v8);
        sub_1C8D710E8(v3, v4 & 1);
LABEL_6:
        int v10 = *a2;
        char v11 = swift_isUniquelyReferenced_nonNull_native();
        *a2 = v10;
        if ((v11 & 1) == 0)
        {
          int v10 = sub_1C8D5EB50(0, *((void *)v10 + 2) + 1, 1, v10);
          *a2 = v10;
        }
        unint64_t v13 = *((void *)v10 + 2);
        unint64_t v12 = *((void *)v10 + 3);
        if (v13 >= v12 >> 1) {
          int v10 = sub_1C8D5EB50((char *)(v12 > 1), v13 + 1, 1, v10);
        }
        *((void *)v10 + 2) = v13 + 1;
        v10[v13 + 32] = 10;
        *a2 = v10;
        break;
    }
  }
}

void sub_1C8D7DA04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  unint64_t v8 = *(void *)(a1 + 32);
  int v9 = *(unsigned __int8 *)(a1 + 40);
  if ((~v8 & 0x3000000000000000) != 0 || v9 != 255)
  {
    switch((v8 >> 60) & 3 | (4 * (v9 & 1u)))
    {
      case 1uLL:
        (*(void (**)(uint64_t, uint64_t, uint64_t, void, double))(a4 + 16))(2, a3, a4, v9 & 1, *(double *)(a1 + 16));
        break;
      case 2uLL:
        unint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 112);
        sub_1C8CC55A4(v6, v7, v8, v9 & 1);
        v19(v6, v7, 3, a3, a4);
        sub_1C8CC5640(v6, v7, v8, v9);
        break;
      case 3uLL:
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 104))(*(void *)(a1 + 16) & 1, 4, a3, a4);
        break;
      case 4uLL:
        uint64_t v16 = *(void *)(a1 + 16);
        uint64_t v17 = v7;
        unint64_t v18 = v8;
        unint64_t v12 = *(void (**)(uint64_t *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 136);
        unint64_t v13 = sub_1C8D4CB34();
        v12(&v16, 5, &type metadata for Google_Protobuf_Struct, v13, a3, a4);
        break;
      case 5uLL:
        uint64_t v16 = *(void *)(a1 + 16);
        uint64_t v17 = v7;
        unint64_t v18 = v8 & 0xCFFFFFFFFFFFFFFFLL;
        uint64_t v14 = *(void (**)(uint64_t *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 136);
        unint64_t v15 = sub_1C8D4CAE0();
        v14(&v16, 6, &type metadata for Google_Protobuf_ListValue, v15, a3, a4);
        break;
      default:
        uint64_t v16 = *(void *)(a1 + 16);
        LOBYTE(v17) = v7 & 1;
        int v10 = *(void (**)(uint64_t *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 128);
        unint64_t v11 = sub_1C8D810C4();
        v10(&v16, 1, &type metadata for Google_Protobuf_NullValue, v11, a3, a4);
        break;
    }
  }
}

BOOL sub_1C8D7DC38(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(a1 + 24);
  unint64_t v4 = *(void *)(a1 + 32);
  int v5 = *(unsigned __int8 *)(a1 + 40);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unint64_t v8 = *(void *)(a2 + 32);
  int v9 = *(unsigned __int8 *)(a2 + 40);
  if ((~v4 & 0x3000000000000000) == 0 && v5 == 255)
  {
    if ((~v8 & 0x3000000000000000) != 0 || v9 != 255) {
      goto LABEL_9;
    }
    return 1;
  }
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = v2;
  unint64_t v16 = v4;
  char v17 = v5;
  if ((~v8 & 0x3000000000000000) != 0 || v9 != 255)
  {
    v12[0] = v7;
    v12[1] = v6;
    char v12[2] = v8;
    char v13 = v9 & 1;
    sub_1C8CC5580(v3, v2, v4, v5);
    sub_1C8CC5580(v3, v2, v4, v5);
    char v10 = _s20SiriOntologyProtobuf07Google_C6_ValueV10OneOf_KindO2eeoiySbAE_AEtFZ_0((uint64_t)&v14, (uint64_t)v12);
    sub_1C8CC5664(v14, v15, v16, v17);
    sub_1C8CC5640(v3, v2, v4, v5);
    return (v10 & 1) != 0;
  }
  sub_1C8CC5580(v3, v2, v4, v5);
  sub_1C8CC55A4(v3, v2, v4, v5 & 1);
  sub_1C8CC5664(v3, v2, v4, v5 & 1);
LABEL_9:
  sub_1C8CC5580(v7, v6, v8, v9);
  sub_1C8CC5640(v3, v2, v4, v5);
  sub_1C8CC5640(v7, v6, v8, v9);
  return 0;
}

uint64_t Google_Protobuf_Value.hashValue.getter()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  sub_1C8D88840();
  long long v5 = v15;
  long long v6 = v16;
  long long v7 = v17;
  long long v8 = v18;
  uint64_t v9 = v19;
  sub_1C8D7D460(&v5, v1, v2, v3);
  long long v10 = v5;
  long long v11 = v6;
  long long v12 = v7;
  long long v13 = v8;
  uint64_t v14 = v9;
  return sub_1C8D888A0();
}

uint64_t sub_1C8D7DE80@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_1C8D8AD80;
  type metadata accessor for Google_Protobuf_Value._StorageClass();
  uint64_t result = swift_initStaticObject();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C8D7DEC4()
{
  return 0xD000000000000015;
}

uint64_t sub_1C8D7DEE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_Value.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8D7DEF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_Value.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8D7DF10@<X0>(void *a1@<X8>)
{
  if (qword_1EA565CA8 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA567850;
  uint64_t v3 = qword_1EA567858;
  uint64_t v4 = unk_1EA567860;
  *a1 = qword_1EA567848;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8D7DFA8()
{
  return sub_1C8D6B904(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16));
}

uint64_t sub_1C8D7DFB4()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  sub_1C8D88840();
  long long v5 = v15;
  long long v6 = v16;
  long long v7 = v17;
  long long v8 = v18;
  uint64_t v9 = v19;
  sub_1C8D7D460(&v5, v1, v2, v3);
  long long v10 = v5;
  long long v11 = v6;
  long long v12 = v7;
  long long v13 = v8;
  uint64_t v14 = v9;
  return sub_1C8D888A0();
}

double sub_1C8D7E060(uint64_t a1)
{
  uint64_t v3 = *v1;
  unint64_t v4 = v1[1];
  uint64_t v5 = v1[2];
  uint64_t v6 = *(void *)(a1 + 64);
  long long v7 = *(_OWORD *)(a1 + 16);
  long long v13 = *(_OWORD *)a1;
  long long v14 = v7;
  long long v8 = *(_OWORD *)(a1 + 48);
  long long v15 = *(_OWORD *)(a1 + 32);
  long long v16 = v8;
  uint64_t v17 = v6;
  sub_1C8D7D460(&v13, v3, v4, v5);
  uint64_t v9 = v17;
  long long v10 = v14;
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v10;
  double result = *(double *)&v15;
  long long v12 = v16;
  *(_OWORD *)(a1 + 32) = v15;
  *(_OWORD *)(a1 + 48) = v12;
  *(void *)(a1 + 64) = v9;
  return result;
}

uint64_t sub_1C8D7E0E0()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  sub_1C8D88840();
  long long v5 = v15;
  long long v6 = v16;
  long long v7 = v17;
  long long v8 = v18;
  uint64_t v9 = v19;
  sub_1C8D7D460(&v5, v1, v2, v3);
  long long v10 = v5;
  long long v11 = v6;
  long long v12 = v7;
  long long v13 = v8;
  uint64_t v14 = v9;
  return sub_1C8D888A0();
}

unint64_t static Google_Protobuf_ListValue.protoMessageName.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_1C8D7E1A8()
{
  return _NameMap.init(dictionaryLiteral:)((uint64_t)&unk_1F234B7F8, &qword_1EA567868);
}

uint64_t static Google_Protobuf_ListValue._protobuf_nameMap.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA565CB0 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA567870;
  uint64_t v3 = qword_1EA567878;
  uint64_t v4 = unk_1EA567880;
  *a1 = qword_1EA567868;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Google_Protobuf_ListValue.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v7 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  uint64_t result = v7(a2, a3);
  if (!v4)
  {
    while ((v9 & 1) == 0)
    {
      if (result == 1)
      {
        long long v10 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 416);
        unint64_t v11 = sub_1C8D4CB88();
        v10(v3, &type metadata for Google_Protobuf_Value, v11, a2, a3);
      }
      uint64_t result = v7(a2, a3);
    }
  }
  return result;
}

uint64_t Google_Protobuf_ListValue.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *v3;
  if (!*(void *)(*v3 + 16)) {
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  char v9 = *(uint64_t (**)(uint64_t, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a3 + 280);
  unint64_t v10 = sub_1C8D4CB88();
  uint64_t result = v9(v8, 1, &type metadata for Google_Protobuf_Value, v10, a2, a3);
  if (!v4) {
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t Google_Protobuf_ListValue.hashValue.getter()
{
  return sub_1C8D7E41C((void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_1C8CBC850);
}

uint64_t sub_1C8D7E41C(void (*a1)(unsigned char *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v5 = v1[2];
  sub_1C8D88840();
  a1(v7, v3, v4, v5);
  return sub_1C8D888A0();
}

unint64_t sub_1C8D7E480()
{
  return 0xD000000000000019;
}

uint64_t sub_1C8D7E49C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_ListValue.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_1C8D7E4B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Google_Protobuf_ListValue.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1C8D7E4CC@<X0>(void *a1@<X8>)
{
  if (qword_1EA565CB0 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1EA567870;
  uint64_t v3 = qword_1EA567878;
  uint64_t v4 = unk_1EA567880;
  *a1 = qword_1EA567868;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8D7E564()
{
  return sub_1C8D6B9F8(*v0, v0[1], v0[2], (uint64_t)&type metadata for Google_Protobuf_ListValue, &qword_1EA5678F8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C8D78590);
}

uint64_t sub_1C8D7E5A8(uint64_t a1, uint64_t a2)
{
  return sub_1C8D7E5C0(a1, a2, (void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_1C8CBC850);
}

uint64_t sub_1C8D7E5C0(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *v3;
  uint64_t v6 = v3[1];
  uint64_t v7 = v3[2];
  sub_1C8D88840();
  a3(v9, v5, v6, v7);
  return sub_1C8D888A0();
}

uint64_t sub_1C8D7E624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D7E63C(a1, a2, a3, (void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_1C8CBC850);
}

uint64_t sub_1C8D7E63C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *v4;
  uint64_t v7 = v4[1];
  uint64_t v8 = v4[2];
  sub_1C8D88840();
  a4(v10, v6, v7, v8);
  return sub_1C8D888A0();
}

uint64_t sub_1C8D7E69C(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8D7E6B4(a1, a2, a3, a4, sub_1C8CFC0B4);
}

uint64_t sub_1C8D7E6B4(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, void))
{
  uint64_t v5 = a1[1];
  unint64_t v6 = a1[2];
  uint64_t v7 = a2[1];
  unint64_t v8 = a2[2];
  if ((a5(*a1, *a2) & 1) == 0) {
    return 0;
  }
  sub_1C8CA3CF8(v5, v6);
  sub_1C8CA3CF8(v7, v8);
  char v9 = sub_1C8D01FBC(v5, v6, v7, v8);
  sub_1C8CA3D5C(v7, v8);
  sub_1C8CA3D5C(v5, v6);
  return v9 & 1;
}

uint64_t sub_1C8D7E758(uint64_t a1, uint64_t a2)
{
  uint64_t v135 = *MEMORY[0x1E4F143B8];
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v117 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v118 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      uint64_t v125 = (v7 - 1) & v7;
      unint64_t v9 = __clz(__rbit64(v7)) | (v4 << 6);
    }
    else
    {
      int64_t v10 = v4 + 1;
      if (__OFADD__(v4, 1))
      {
        __break(1u);
LABEL_160:
        __break(1u);
LABEL_161:
        __break(1u);
LABEL_162:
        __break(1u);
LABEL_163:
        __break(1u);
LABEL_164:
        __break(1u);
LABEL_165:
        __break(1u);
LABEL_166:
        __break(1u);
LABEL_167:
        __break(1u);
LABEL_168:
        __break(1u);
LABEL_169:
        __break(1u);
LABEL_170:
        __break(1u);
LABEL_171:
        __break(1u);
LABEL_172:
        __break(1u);
LABEL_173:
        __break(1u);
LABEL_174:
        __break(1u);
LABEL_175:
        __break(1u);
LABEL_176:
        __break(1u);
LABEL_177:
        __break(1u);
LABEL_178:
        __break(1u);
LABEL_179:
        __break(1u);
LABEL_180:
        __break(1u);
LABEL_181:
        __break(1u);
LABEL_182:
        __break(1u);
LABEL_183:
        __break(1u);
      }
      if (v10 >= v118) {
        return 1;
      }
      unint64_t v11 = *(void *)(v117 + 8 * v10);
      ++v4;
      if (!v11)
      {
        int64_t v4 = v10 + 1;
        if (v10 + 1 >= v118) {
          return 1;
        }
        unint64_t v11 = *(void *)(v117 + 8 * v4);
        if (!v11)
        {
          int64_t v4 = v10 + 2;
          if (v10 + 2 >= v118) {
            return 1;
          }
          unint64_t v11 = *(void *)(v117 + 8 * v4);
          if (!v11)
          {
            int64_t v4 = v10 + 3;
            if (v10 + 3 >= v118) {
              return 1;
            }
            unint64_t v11 = *(void *)(v117 + 8 * v4);
            if (!v11)
            {
              int64_t v12 = v10 + 4;
              if (v12 >= v118) {
                return 1;
              }
              unint64_t v11 = *(void *)(v117 + 8 * v12);
              if (!v11)
              {
                while (1)
                {
                  int64_t v4 = v12 + 1;
                  if (__OFADD__(v12, 1)) {
                    goto LABEL_167;
                  }
                  if (v4 >= v118) {
                    return 1;
                  }
                  unint64_t v11 = *(void *)(v117 + 8 * v4);
                  ++v12;
                  if (v11) {
                    goto LABEL_25;
                  }
                }
              }
              int64_t v4 = v12;
            }
          }
        }
      }
LABEL_25:
      uint64_t v125 = (v11 - 1) & v11;
      unint64_t v9 = __clz(__rbit64(v11)) + (v4 << 6);
    }
    long long v13 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v9);
    uint64_t v14 = *v13;
    uint64_t v15 = v13[1];
    long long v16 = (uint64_t *)(*(void *)(a1 + 56) + 24 * v9);
    uint64_t v18 = *v16;
    unint64_t v17 = v16[1];
    uint64_t v19 = v16[2];
    swift_bridgeObjectRetain();
    sub_1C8CA3CF8(v18, v17);
    swift_retain();
    unint64_t v20 = sub_1C8CA5C9C(v14, v15);
    char v22 = v21;
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0) {
      goto LABEL_153;
    }
    unint64_t v23 = (uint64_t *)(*(void *)(a2 + 56) + 24 * v20);
    uint64_t v24 = *v23;
    unint64_t v25 = v23[1];
    uint64_t v26 = v23[2];
    unint64_t v126 = v25;
    uint64_t v127 = *v23;
    if (v26 == v19)
    {
      unint64_t v37 = v23[1];
      sub_1C8CA3CF8(v24, v25);
      swift_retain();
      goto LABEL_38;
    }
    uint64_t v119 = v18;
    unint64_t v120 = v17;
    int64_t v121 = v4;
    uint64_t v28 = *(void *)(v26 + 16);
    uint64_t v27 = *(void *)(v26 + 24);
    unint64_t v29 = *(void *)(v26 + 32);
    int v123 = *(unsigned __int8 *)(v26 + 40);
    uint64_t v31 = *(void *)(v19 + 16);
    uint64_t v30 = *(void *)(v19 + 24);
    unint64_t v32 = *(void *)(v19 + 32);
    int v33 = *(unsigned __int8 *)(v19 + 40);
    if ((~v29 & 0x3000000000000000) == 0 && v123 == 255)
    {
      uint64_t v114 = v31;
      uint64_t v115 = v30;
      uint64_t v34 = *(void *)(v26 + 16);
      uint64_t v35 = *(void *)(v26 + 24);
      unint64_t v116 = v32;
      uint64_t v36 = ~v32 & 0x3000000000000000;
      sub_1C8CA3CF8(v24, v25);
      swift_retain_n();
      swift_retain();
      if (v36 || v33 != 255) {
        goto LABEL_155;
      }
      goto LABEL_37;
    }
    *(void *)&long long __s1 = *(void *)(v26 + 16);
    *((void *)&__s1 + 1) = v27;
    unint64_t v133 = v29;
    char v134 = v123;
    if ((~v32 & 0x3000000000000000) == 0 && v33 == 255) {
      break;
    }
    uint64_t __s2 = v31;
    uint64_t v129 = v30;
    unint64_t v130 = v32;
    char v131 = v33 & 1;
    sub_1C8CC5580(v28, v27, v29, v123);
    sub_1C8CA3CF8(v127, v126);
    swift_retain();
    sub_1C8CC5580(v28, v27, v29, v123);
    swift_retain();
    swift_retain();
    char v38 = _s20SiriOntologyProtobuf07Google_C6_ValueV10OneOf_KindO2eeoiySbAE_AEtFZ_0((uint64_t)&__s1, (uint64_t)&__s2);
    sub_1C8CC5664(__s1, *((uint64_t *)&__s1 + 1), v133, v134);
    sub_1C8CC5640(v28, v27, v29, v123);
    if ((v38 & 1) == 0) {
      goto LABEL_156;
    }
LABEL_37:
    swift_release();
    swift_release();
    unint64_t v17 = v120;
    int64_t v4 = v121;
    uint64_t v18 = v119;
    unint64_t v37 = v126;
LABEL_38:
    unint64_t v39 = v17 >> 62;
    uint64_t v40 = 0;
    unint64_t v41 = v37;
    switch(v37 >> 62)
    {
      case 1uLL:
        uint64_t v42 = v127;
        if (__OFSUB__(HIDWORD(v127), v127)) {
          goto LABEL_160;
        }
        uint64_t v40 = HIDWORD(v127) - (int)v127;
LABEL_43:
        sub_1C8CA3CF8(v42, v37);
        unint64_t v41 = v126;
        break;
      case 2uLL:
        uint64_t v42 = v127;
        uint64_t v44 = *(void *)(v127 + 16);
        uint64_t v43 = *(void *)(v127 + 24);
        uint64_t v40 = v43 - v44;
        if (!__OFSUB__(v43, v44)) {
          goto LABEL_43;
        }
        goto LABEL_161;
      case 3uLL:
        break;
      default:
        uint64_t v40 = BYTE6(v37);
        break;
    }
    switch((int)v39)
    {
      case 1:
        LODWORD(v45) = HIDWORD(v18) - v18;
        if (__OFSUB__(HIDWORD(v18), v18)) {
          goto LABEL_162;
        }
        uint64_t v45 = (int)v45;
LABEL_49:
        if (v40 != v45)
        {
LABEL_152:
          unint64_t v112 = v41;
          sub_1C8CA3D5C(v127, v41);
          sub_1C8CA3D5C(v127, v112);
          swift_release();
LABEL_153:
          sub_1C8CA3D5C(v18, v17);
          goto LABEL_157;
        }
        if (v40 < 1)
        {
LABEL_7:
          unint64_t v8 = v41;
          sub_1C8CA3D5C(v127, v41);
          sub_1C8CA3D5C(v127, v8);
          swift_release();
          sub_1C8CA3D5C(v18, v17);
          swift_release();
          unint64_t v7 = v125;
        }
        else
        {
          switch(v37 >> 62)
          {
            case 1uLL:
              uint64_t v54 = v18;
              unint64_t v55 = v17;
              if ((int)v127 > v127 >> 32) {
                goto LABEL_164;
              }
              sub_1C8CA3CF8(v54, v17);
              uint64_t v56 = sub_1C8D88110();
              int64_t v122 = v4;
              if (v56)
              {
                uint64_t v57 = v56;
                uint64_t v58 = sub_1C8D88140();
                if (__OFSUB__((int)v127, v58)) {
                  goto LABEL_166;
                }
                unint64_t v59 = (const void *)(v57 + (int)v127 - v58);
              }
              else
              {
                unint64_t v59 = 0;
              }
              sub_1C8D88130();
              if (!v39)
              {
                *(void *)&long long __s1 = v54;
                WORD4(__s1) = v17;
                BYTE10(__s1) = BYTE2(v17);
                BYTE11(__s1) = BYTE3(v17);
                BYTE12(__s1) = BYTE4(v17);
                BYTE13(__s1) = BYTE5(v17);
                if (!v59) {
                  goto LABEL_195;
                }
                int v77 = memcmp(v59, &__s1, BYTE6(v17));
                goto LABEL_136;
              }
              if (v39 == 1)
              {
                if (v54 >> 32 < (int)v54) {
                  goto LABEL_176;
                }
                swift_retain();
                char v78 = (char *)sub_1C8D88110();
                if (v78)
                {
                  uint64_t v79 = sub_1C8D88140();
                  if (__OFSUB__((int)v54, v79)) {
                    goto LABEL_183;
                  }
                  v78 += (int)v54 - v79;
                }
                uint64_t v80 = sub_1C8D88130();
                if (v80 >= (v54 >> 32) - (int)v54) {
                  size_t v81 = (v54 >> 32) - (int)v54;
                }
                else {
                  size_t v81 = v80;
                }
                if (!v59) {
                  goto LABEL_188;
                }
                if (!v78) {
                  goto LABEL_189;
                }
                int v77 = memcmp(v59, v78, v81);
                sub_1C8CA3D5C(v54, v17);
LABEL_136:
                sub_1C8CA3D5C(v54, v17);
                sub_1C8CA3D5C(v127, v126);
                sub_1C8CA3D5C(v127, v126);
                swift_release();
                uint64_t v94 = v54;
                unint64_t v95 = v17;
LABEL_137:
                sub_1C8CA3D5C(v94, v95);
                goto LABEL_149;
              }
              uint64_t v104 = *(void *)(v54 + 16);
              uint64_t v105 = *(void *)(v54 + 24);
              swift_retain();
              swift_retain();
              uint64_t v106 = (char *)sub_1C8D88110();
              if (v106)
              {
                uint64_t v107 = sub_1C8D88140();
                if (__OFSUB__(v104, v107)) {
                  goto LABEL_182;
                }
                v106 += v104 - v107;
              }
              BOOL v48 = __OFSUB__(v105, v104);
              int64_t v108 = v105 - v104;
              if (v48) {
                goto LABEL_177;
              }
              uint64_t v109 = sub_1C8D88130();
              if (v109 >= v108) {
                size_t v110 = v108;
              }
              else {
                size_t v110 = v109;
              }
              if (!v59) {
                goto LABEL_196;
              }
              if (!v106) {
                goto LABEL_197;
              }
              int v77 = memcmp(v59, v106, v110);
              swift_release();
              swift_release();
              sub_1C8CA3D5C(v54, v17);
              sub_1C8CA3D5C(v127, v126);
              sub_1C8CA3D5C(v127, v126);
              swift_release();
              uint64_t v103 = v54;
LABEL_148:
              sub_1C8CA3D5C(v103, v55);
LABEL_149:
              swift_release();
              int64_t v4 = v122;
              unint64_t v7 = v125;
              if (v77) {
                return 0;
              }
              continue;
            case 2uLL:
              int64_t v122 = v4;
              uint64_t v60 = *(void *)(v127 + 16);
              uint64_t v61 = v18;
              uint64_t v62 = v18;
              unint64_t v55 = v17;
              sub_1C8CA3CF8(v62, v17);
              swift_retain();
              swift_retain();
              uint64_t v63 = sub_1C8D88110();
              if (v63)
              {
                uint64_t v64 = v63;
                uint64_t v65 = sub_1C8D88140();
                if (__OFSUB__(v60, v65)) {
                  goto LABEL_165;
                }
                char v124 = (void *)(v64 + v60 - v65);
              }
              else
              {
                char v124 = 0;
              }
              sub_1C8D88130();
              if (!v39)
              {
                uint64_t v76 = v61;
                *(void *)&long long __s1 = v61;
                unint64_t v75 = v17;
                WORD4(__s1) = v17;
                BYTE10(__s1) = BYTE2(v17);
                BYTE11(__s1) = BYTE3(v17);
                BYTE12(__s1) = BYTE4(v17);
                BYTE13(__s1) = BYTE5(v17);
                if (!v124) {
                  goto LABEL_192;
                }
                int v77 = memcmp(v124, &__s1, BYTE6(v17));
LABEL_123:
                swift_release();
                swift_release();
                sub_1C8CA3D5C(v76, v75);
                sub_1C8CA3D5C(v127, v126);
                sub_1C8CA3D5C(v127, v126);
                swift_release();
                uint64_t v94 = v76;
                unint64_t v95 = v75;
                goto LABEL_137;
              }
              if (v39 == 1)
              {
                if (v61 >> 32 < (int)v61) {
                  goto LABEL_170;
                }
                swift_retain();
                char v71 = (char *)sub_1C8D88110();
                if (v71)
                {
                  uint64_t v72 = sub_1C8D88140();
                  if (__OFSUB__((int)v61, v72)) {
                    goto LABEL_181;
                  }
                  v71 += (int)v61 - v72;
                }
                uint64_t v73 = sub_1C8D88130();
                if (v73 >= (v61 >> 32) - (int)v61) {
                  size_t v74 = (v61 >> 32) - (int)v61;
                }
                else {
                  size_t v74 = v73;
                }
                if (!v124) {
                  goto LABEL_186;
                }
                if (!v71) {
                  goto LABEL_187;
                }
                unint64_t v75 = v17;
                uint64_t v76 = v61;
                int v77 = memcmp(v124, v71, v74);
                sub_1C8CA3D5C(v61, v17);
                goto LABEL_123;
              }
              uint64_t v96 = *(void *)(v61 + 16);
              uint64_t v97 = *(void *)(v61 + 24);
              swift_retain();
              swift_retain();
              uint64_t v98 = (char *)sub_1C8D88110();
              if (v98)
              {
                uint64_t v99 = sub_1C8D88140();
                if (__OFSUB__(v96, v99)) {
                  goto LABEL_180;
                }
                v98 += v96 - v99;
              }
              BOOL v48 = __OFSUB__(v97, v96);
              int64_t v100 = v97 - v96;
              if (v48) {
                goto LABEL_175;
              }
              uint64_t v101 = sub_1C8D88130();
              if (v101 >= v100) {
                size_t v102 = v100;
              }
              else {
                size_t v102 = v101;
              }
              if (!v124) {
                goto LABEL_193;
              }
              if (!v98) {
                goto LABEL_194;
              }
              int v77 = memcmp(v124, v98, v102);
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              sub_1C8CA3D5C(v61, v17);
              sub_1C8CA3D5C(v127, v126);
              sub_1C8CA3D5C(v127, v126);
              swift_release();
              uint64_t v103 = v61;
              goto LABEL_148;
            case 3uLL:
              *(void *)((char *)&__s1 + 6) = 0;
              *(void *)&long long __s1 = 0;
              if (!v39)
              {
                uint64_t __s2 = v18;
                LOWORD(v129) = v17;
                BYTE2(v129) = BYTE2(v17);
                BYTE3(v129) = BYTE3(v17);
                BYTE4(v129) = BYTE4(v17);
                BYTE5(v129) = BYTE5(v17);
                unint64_t v82 = v41;
                int v70 = memcmp(&__s1, &__s2, BYTE6(v17));
                uint64_t v83 = v127;
LABEL_118:
                sub_1C8CA3D5C(v83, v82);
                sub_1C8CA3D5C(v83, v82);
                swift_release();
                sub_1C8CA3D5C(v18, v17);
                goto LABEL_119;
              }
              if (v39 != 1)
              {
                uint64_t v90 = *(void *)(v18 + 16);
                uint64_t v91 = *(void *)(v18 + 24);
                sub_1C8CA3CF8(v18, v17);
                swift_retain();
                swift_retain();
                char v86 = (char *)sub_1C8D88110();
                if (v86)
                {
                  uint64_t v92 = sub_1C8D88140();
                  if (__OFSUB__(v90, v92)) {
                    goto LABEL_179;
                  }
                  v86 += v90 - v92;
                }
                BOOL v48 = __OFSUB__(v91, v90);
                int64_t v88 = v91 - v90;
                if (v48) {
                  goto LABEL_172;
                }
                uint64_t v89 = sub_1C8D88130();
                if (!v86) {
                  goto LABEL_191;
                }
LABEL_114:
                if (v89 >= v88) {
                  size_t v93 = v88;
                }
                else {
                  size_t v93 = v89;
                }
                int v70 = memcmp(&__s1, v86, v93);
                swift_release();
                swift_release();
                sub_1C8CA3D5C(v18, v17);
                unint64_t v82 = v126;
                uint64_t v83 = v127;
                goto LABEL_118;
              }
              uint64_t v49 = (v18 >> 32) - (int)v18;
              if (v18 >> 32 < (int)v18) {
                goto LABEL_169;
              }
              sub_1C8CA3CF8(v18, v17);
              uint64_t v66 = sub_1C8D88110();
              if (!v66) {
                goto LABEL_185;
              }
              uint64_t v51 = v66;
              uint64_t v67 = sub_1C8D88140();
              uint64_t v53 = (int)v18 - v67;
              if (__OFSUB__((int)v18, v67)) {
                goto LABEL_174;
              }
LABEL_71:
              uint64_t v68 = sub_1C8D88130();
              if (v68 >= v49) {
                size_t v69 = v49;
              }
              else {
                size_t v69 = v68;
              }
              int v70 = memcmp(&__s1, (const void *)(v51 + v53), v69);
              sub_1C8CA3D5C(v18, v17);
              sub_1C8CA3D5C(v127, v126);
              sub_1C8CA3D5C(v127, v126);
              swift_release();
              sub_1C8CA3D5C(v18, v17);
LABEL_119:
              swift_release();
              unint64_t v7 = v125;
              if (v70) {
                return 0;
              }
              break;
            default:
              *(void *)&long long __s1 = v127;
              WORD4(__s1) = v41;
              BYTE10(__s1) = BYTE2(v41);
              BYTE11(__s1) = BYTE3(v41);
              BYTE12(__s1) = BYTE4(v41);
              BYTE13(__s1) = BYTE5(v41);
              if (!v39)
              {
                uint64_t __s2 = v18;
                LOWORD(v129) = v17;
                BYTE2(v129) = BYTE2(v17);
                BYTE3(v129) = BYTE3(v17);
                BYTE4(v129) = BYTE4(v17);
                BYTE5(v129) = BYTE5(v17);
                unint64_t v82 = v41;
                uint64_t v83 = v127;
                int v70 = memcmp(&__s1, &__s2, BYTE6(v17));
                goto LABEL_118;
              }
              if (v39 == 1)
              {
                uint64_t v49 = (v18 >> 32) - (int)v18;
                if (v18 >> 32 < (int)v18) {
                  goto LABEL_168;
                }
                sub_1C8CA3CF8(v18, v17);
                uint64_t v50 = sub_1C8D88110();
                if (!v50)
                {
                  sub_1C8D88130();
                  __break(1u);
LABEL_185:
                  sub_1C8D88130();
                  __break(1u);
LABEL_186:
                  __break(1u);
LABEL_187:
                  __break(1u);
LABEL_188:
                  __break(1u);
LABEL_189:
                  __break(1u);
LABEL_190:
                  __break(1u);
LABEL_191:
                  __break(1u);
LABEL_192:
                  __break(1u);
LABEL_193:
                  __break(1u);
LABEL_194:
                  __break(1u);
LABEL_195:
                  __break(1u);
LABEL_196:
                  __break(1u);
LABEL_197:
                  __break(1u);
                  JUMPOUT(0x1C8D7F6D0);
                }
                uint64_t v51 = v50;
                uint64_t v52 = sub_1C8D88140();
                uint64_t v53 = (int)v18 - v52;
                if (__OFSUB__((int)v18, v52)) {
                  goto LABEL_173;
                }
                goto LABEL_71;
              }
              uint64_t v84 = *(void *)(v18 + 16);
              uint64_t v85 = *(void *)(v18 + 24);
              sub_1C8CA3CF8(v18, v17);
              swift_retain();
              swift_retain();
              char v86 = (char *)sub_1C8D88110();
              if (v86)
              {
                uint64_t v87 = sub_1C8D88140();
                if (__OFSUB__(v84, v87)) {
                  goto LABEL_178;
                }
                v86 += v84 - v87;
              }
              BOOL v48 = __OFSUB__(v85, v84);
              int64_t v88 = v85 - v84;
              if (v48) {
                goto LABEL_171;
              }
              uint64_t v89 = sub_1C8D88130();
              if (!v86) {
                goto LABEL_190;
              }
              goto LABEL_114;
          }
        }
        break;
      case 2:
        uint64_t v47 = *(void *)(v18 + 16);
        uint64_t v46 = *(void *)(v18 + 24);
        BOOL v48 = __OFSUB__(v46, v47);
        uint64_t v45 = v46 - v47;
        if (!v48) {
          goto LABEL_49;
        }
        goto LABEL_163;
      case 3:
        if (!v40) {
          goto LABEL_7;
        }
        goto LABEL_152;
      default:
        uint64_t v45 = BYTE6(v17);
        goto LABEL_49;
    }
  }
  uint64_t v114 = v31;
  uint64_t v115 = v30;
  unint64_t v116 = v32;
  sub_1C8CC5580(v28, v27, v29, v123);
  sub_1C8CA3CF8(v127, v126);
  swift_retain();
  sub_1C8CC5580(v28, v27, v29, v123);
  swift_retain();
  swift_retain();
  uint64_t v34 = v28;
  uint64_t v113 = v28;
  uint64_t v35 = v27;
  sub_1C8CC5664(v113, v27, v29, v123 & 1);
LABEL_155:
  sub_1C8CC5580(v114, v115, v116, v33);
  sub_1C8CC5640(v34, v35, v29, v123);
  sub_1C8CC5640(v114, v115, v116, v33);
LABEL_156:
  swift_release();
  swift_release();
  sub_1C8CA3D5C(v127, v126);
  swift_release();
  sub_1C8CA3D5C(v119, v120);
LABEL_157:
  swift_release();
  return 0;
}

uint64_t _s20SiriOntologyProtobuf07Google_C6_ValueV10OneOf_KindO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(uint64_t *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = *(void *)(a1 + 16);
  char v5 = *(unsigned char *)(a1 + 24);
  uint64_t v6 = *(uint64_t *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  unint64_t v8 = *(void *)(a2 + 16);
  char v9 = *(unsigned char *)(a2 + 24);
  if (v5) {
    int v10 = 4;
  }
  else {
    int v10 = 0;
  }
  switch((v4 >> 60) & 3 | v10)
  {
    case 1uLL:
      if (*(unsigned char *)(a2 + 24)) {
        int v13 = 4;
      }
      else {
        int v13 = 0;
      }
      if (((v8 >> 60) & 3 | v13) != 1) {
        goto LABEL_50;
      }
      sub_1C8CC5664(*(void *)a1, v2, v4, v5);
      sub_1C8CC5664(v6, v7, v8, v9);
      char v14 = *(double *)&v3 == *(double *)&v6;
      return v14 & 1;
    case 2uLL:
      if (*(unsigned char *)(a2 + 24)) {
        int v15 = 4;
      }
      else {
        int v15 = 0;
      }
      if (((v8 >> 60) & 3 | v15) != 2)
      {
        swift_bridgeObjectRetain();
        goto LABEL_50;
      }
      if (v3 == v6 && v2 == v7) {
        char v14 = 1;
      }
      else {
        char v14 = sub_1C8D887C0();
      }
      sub_1C8CC55A4(v6, v7, v8, v9);
      sub_1C8CC55A4(v3, v2, v4, v5);
      sub_1C8CC5664(v3, v2, v4, v5);
      sub_1C8CC5664(v6, v7, v8, v9);
      return v14 & 1;
    case 3uLL:
      if (*(unsigned char *)(a2 + 24)) {
        int v16 = 4;
      }
      else {
        int v16 = 0;
      }
      if (((v8 >> 60) & 3 | v16) != 3) {
        goto LABEL_50;
      }
      sub_1C8CC5664(*(void *)a1, v2, v4, v5);
      sub_1C8CC5664(v6, v7, v8, v9);
      char v14 = ((v3 & 1) == 0) ^ v6;
      return v14 & 1;
    case 4uLL:
      if (*(unsigned char *)(a2 + 24)) {
        int v17 = 4;
      }
      else {
        int v17 = 0;
      }
      if (((v8 >> 60) & 3 | v17) != 4)
      {
        swift_bridgeObjectRetain();
        uint64_t v20 = v2;
        unint64_t v21 = v4;
        goto LABEL_49;
      }
      sub_1C8CC55A4(*(void *)a2, *(void *)(a2 + 8), v8, v9);
      sub_1C8CC55A4(v3, v2, v4, v5);
      sub_1C8CC55A4(v6, v7, v8, v9);
      sub_1C8CC55A4(v3, v2, v4, v5);
      if ((sub_1C8D7E758(v3, v6) & 1) == 0) {
        goto LABEL_54;
      }
      sub_1C8CA3CF8(v2, v4);
      sub_1C8CA3CF8(v7, v8);
      char v18 = sub_1C8D01FBC(v2, v4, v7, v8);
      sub_1C8CA3D5C(v7, v8);
      sub_1C8CA3D5C(v2, v4);
      sub_1C8CC5664(v3, v2, v4, v5);
      sub_1C8CC5664(v6, v7, v8, v9);
      sub_1C8CC5664(v6, v7, v8, v9);
      sub_1C8CC5664(v3, v2, v4, v5);
      if ((v18 & 1) == 0) {
        goto LABEL_52;
      }
      goto LABEL_58;
    case 5uLL:
      if (*(unsigned char *)(a2 + 24)) {
        int v19 = 4;
      }
      else {
        int v19 = 0;
      }
      if (((v8 >> 60) & 3 | v19) == 5)
      {
        sub_1C8CC55A4(*(void *)a2, *(void *)(a2 + 8), v8, v9);
        sub_1C8CC55A4(v3, v2, v4, v5);
        sub_1C8CC55A4(v6, v7, v8, v9);
        sub_1C8CC55A4(v3, v2, v4, v5);
        if (sub_1C8CFC0B4(v3, v6))
        {
          sub_1C8CA3CF8(v2, v4 & 0xCFFFFFFFFFFFFFFFLL);
          sub_1C8CA3CF8(v7, v8 & 0xCFFFFFFFFFFFFFFFLL);
          char v27 = sub_1C8D01FBC(v2, v4 & 0xCFFFFFFFFFFFFFFFLL, v7, v8 & 0xCFFFFFFFFFFFFFFFLL);
          sub_1C8CA3D5C(v7, v8 & 0xCFFFFFFFFFFFFFFFLL);
          sub_1C8CA3D5C(v2, v4 & 0xCFFFFFFFFFFFFFFFLL);
          sub_1C8CC5664(v3, v2, v4, v5);
          sub_1C8CC5664(v6, v7, v8, v9);
          sub_1C8CC5664(v6, v7, v8, v9);
          sub_1C8CC5664(v3, v2, v4, v5);
          if ((v27 & 1) == 0) {
            goto LABEL_52;
          }
          goto LABEL_58;
        }
LABEL_54:
        sub_1C8CC5664(v3, v2, v4, v5);
        sub_1C8CC5664(v6, v7, v8, v9);
        sub_1C8CC5664(v6, v7, v8, v9);
        uint64_t v22 = v3;
        uint64_t v23 = v2;
        unint64_t v24 = v4;
        char v25 = v5;
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v20 = v2;
        unint64_t v21 = v4 & 0xCFFFFFFFFFFFFFFFLL;
LABEL_49:
        sub_1C8CA3CF8(v20, v21);
LABEL_50:
        sub_1C8CC55A4(v6, v7, v8, v9);
        sub_1C8CC5664(v3, v2, v4, v5);
        uint64_t v22 = v6;
        uint64_t v23 = v7;
        unint64_t v24 = v8;
        char v25 = v9;
      }
      sub_1C8CC5664(v22, v23, v24, v25);
      goto LABEL_52;
    default:
      if (*(unsigned char *)(a2 + 24)) {
        int v11 = 4;
      }
      else {
        int v11 = 0;
      }
      if ((v8 >> 60) & 3 | v11) {
        goto LABEL_50;
      }
      sub_1C8CC5664(*(void *)a1, v2, v4, v5);
      sub_1C8CC5664(v6, v7, v8, v9);
      if (v2) {
        uint64_t v12 = 0;
      }
      else {
        uint64_t v12 = v3;
      }
      if ((v7 & 1) == 0)
      {
        if (v12 == v6) {
          goto LABEL_58;
        }
        goto LABEL_52;
      }
      if (v12)
      {
LABEL_52:
        char v14 = 0;
        return v14 & 1;
      }
LABEL_58:
      char v14 = 1;
      return v14 & 1;
  }
}

unint64_t sub_1C8D7FC74()
{
  unint64_t result = qword_1EA567888;
  if (!qword_1EA567888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567888);
  }
  return result;
}

uint64_t _s20SiriOntologyProtobuf07Google_C6_ValueV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = *a2;
  unint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  if (v4 != v7)
  {
    swift_retain();
    swift_retain();
    BOOL v8 = sub_1C8D7DC38(v4, v7);
    swift_release();
    swift_release();
    if (!v8) {
      return 0;
    }
  }
  sub_1C8CA3CF8(v2, v3);
  sub_1C8CA3CF8(v5, v6);
  char v9 = sub_1C8D01FBC(v2, v3, v5, v6);
  sub_1C8CA3D5C(v5, v6);
  sub_1C8CA3D5C(v2, v3);
  return v9 & 1;
}

uint64_t sub_1C8D7FD9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D80200(a1, a2, a3, (uint64_t (*)(void))sub_1C8D7FDC8, (uint64_t (*)(void))sub_1C8D7FE1C);
}

unint64_t sub_1C8D7FDC8()
{
  unint64_t result = qword_1EA567890;
  if (!qword_1EA567890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567890);
  }
  return result;
}

unint64_t sub_1C8D7FE1C()
{
  unint64_t result = qword_1EA567898;
  if (!qword_1EA567898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567898);
  }
  return result;
}

unint64_t sub_1C8D7FE74()
{
  unint64_t result = qword_1EA5678A0;
  if (!qword_1EA5678A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5678A0);
  }
  return result;
}

uint64_t sub_1C8D7FEC8()
{
  return sub_1C8D676FC(&qword_1EA5678A8, &qword_1EA5678B0);
}

unint64_t sub_1C8D7FF04(uint64_t a1)
{
  unint64_t result = sub_1C8D7FF2C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D7FF2C()
{
  unint64_t result = qword_1EA5678B8;
  if (!qword_1EA5678B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5678B8);
  }
  return result;
}

uint64_t sub_1C8D7FF80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D80200(a1, a2, a3, (uint64_t (*)(void))sub_1C8D4CB34, (uint64_t (*)(void))sub_1C8D7FFAC);
}

unint64_t sub_1C8D7FFAC()
{
  unint64_t result = qword_1EA5678C0;
  if (!qword_1EA5678C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5678C0);
  }
  return result;
}

unint64_t sub_1C8D80004()
{
  unint64_t result = qword_1EA5678C8;
  if (!qword_1EA5678C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5678C8);
  }
  return result;
}

unint64_t sub_1C8D80058(uint64_t a1)
{
  unint64_t result = sub_1C8D80080();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D80080()
{
  unint64_t result = qword_1EA5678D0;
  if (!qword_1EA5678D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5678D0);
  }
  return result;
}

uint64_t sub_1C8D800D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D80200(a1, a2, a3, (uint64_t (*)(void))sub_1C8D4CB88, (uint64_t (*)(void))sub_1C8D7FC74);
}

unint64_t sub_1C8D80104()
{
  unint64_t result = qword_1EA5678D8;
  if (!qword_1EA5678D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5678D8);
  }
  return result;
}

unint64_t sub_1C8D80158(uint64_t a1)
{
  unint64_t result = sub_1C8D80180();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C8D80180()
{
  unint64_t result = qword_1EA5678E0;
  if (!qword_1EA5678E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5678E0);
  }
  return result;
}

uint64_t sub_1C8D801D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D80200(a1, a2, a3, (uint64_t (*)(void))sub_1C8D4CAE0, (uint64_t (*)(void))sub_1C8D8023C);
}

uint64_t sub_1C8D80200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C8D8023C()
{
  unint64_t result = qword_1EA5678E8;
  if (!qword_1EA5678E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5678E8);
  }
  return result;
}

unint64_t sub_1C8D80294()
{
  unint64_t result = qword_1EA5678F0;
  if (!qword_1EA5678F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5678F0);
  }
  return result;
}

void sub_1C8D802E8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = *(void *)(v2 + 24);
  unint64_t v5 = *(void *)(v2 + 32);
  *(void *)a2 = v3;
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v5;
  unsigned __int8 v6 = *(unsigned char *)(v2 + 40);
  *(unsigned char *)(a2 + 24) = v6;
  sub_1C8CC5580(v3, v4, v5, v6);
}

void sub_1C8D80310(uint64_t a1)
{
  char v1 = *(unsigned char *)(a1 + 8);
  uint64_t v2 = *(void *)a1;
  char v3 = v1;
  Google_Protobuf_Value.nullValue.setter(&v2);
}

void sub_1C8D80354(double *a1)
{
}

void sub_1C8D80380(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  Google_Protobuf_Value.stringValue.setter(v1, v2);
}

void sub_1C8D803C4(char *a1)
{
}

uint64_t sub_1C8D803F0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8D7C20C(a1, a2, a3, a4, (uint64_t (*)(void *))Google_Protobuf_Value.structValue.setter);
}

uint64_t sub_1C8D80420(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C8D7C20C(a1, a2, a3, a4, (uint64_t (*)(void *))Google_Protobuf_Value.listValue.setter);
}

ValueMetadata *type metadata accessor for Google_Protobuf_NullValue()
{
  return &type metadata for Google_Protobuf_NullValue;
}

ValueMetadata *type metadata accessor for Google_Protobuf_Struct()
{
  return &type metadata for Google_Protobuf_Struct;
}

ValueMetadata *type metadata accessor for Google_Protobuf_Value()
{
  return &type metadata for Google_Protobuf_Value;
}

void destroy for Google_Protobuf_Value.OneOf_Kind(uint64_t a1)
{
}

uint64_t initializeWithCopy for Google_Protobuf_Value.OneOf_Kind(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1C8CC55A4(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for Google_Protobuf_Value.OneOf_Kind(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1C8CC55A4(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  unint64_t v9 = *(void *)(a1 + 16);
  char v10 = *(unsigned char *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  sub_1C8CC5664(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for Google_Protobuf_Value.OneOf_Kind(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  unint64_t v6 = *(void *)(a1 + 16);
  char v8 = *(unsigned char *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  sub_1C8CC5664(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for Google_Protobuf_Value.OneOf_Kind(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3FB && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 1019);
  }
  unsigned int v3 = ((*(void *)(a1 + 16) >> 60) & 3 | (4 * *(unsigned __int8 *)(a1 + 24))) ^ 0x3FF;
  if (v3 >= 0x3FA) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for Google_Protobuf_Value.OneOf_Kind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3FA)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 1019;
    if (a3 >= 0x3FB) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3FB) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = (-a2 & 3) << 60;
      *(unsigned char *)(result + 24) = -a2 >> 2;
    }
  }
  return result;
}

uint64_t sub_1C8D80670(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 24)) {
    int v1 = 4;
  }
  else {
    int v1 = 0;
  }
  return (*(void *)(a1 + 16) >> 60) & 3 | v1;
}

uint64_t sub_1C8D80690(uint64_t result)
{
  *(void *)(result + 16) &= 0xCFFFFFFFFFFFFFFFLL;
  return result;
}

uint64_t sub_1C8D806A0(uint64_t result, char a2)
{
  *(void *)(result + 16) = *(void *)(result + 16) & 0xCFFFFFFFFFFFFFFFLL | ((unint64_t)(a2 & 3) << 60);
  *(unsigned char *)(result + 24) = (a2 & 4) != 0;
  return result;
}

ValueMetadata *type metadata accessor for Google_Protobuf_Value.OneOf_Kind()
{
  return &type metadata for Google_Protobuf_Value.OneOf_Kind;
}

ValueMetadata *type metadata accessor for Google_Protobuf_ListValue()
{
  return &type metadata for Google_Protobuf_ListValue;
}

uint64_t sub_1C8D806E0()
{
  sub_1C8CA3D5C(*(void *)(v0 + 16), *(void *)(v0 + 24));
  sub_1C8CA3D5C(*(void *)(v0 + 32), *(void *)(v0 + 40));
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t objectdestroyTm()
{
  sub_1C8CA3D5C(*(void *)(v0 + 32), *(void *)(v0 + 40));
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t objectdestroy_32Tm()
{
  swift_bridgeObjectRelease();
  sub_1C8CA3D5C(*(void *)(v0 + 32), *(void *)(v0 + 40));
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C8D807A4()
{
  swift_bridgeObjectRelease();
  sub_1C8CA3D5C(*(void *)(v0 + 24), *(void *)(v0 + 32));
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 69, 7);
}

uint64_t sub_1C8D807EC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v3 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(v2, v3);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C8D8083C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v3 = *(void *)(a1 + 16);
  swift_bridgeObjectRelease();
  sub_1C8CA3D5C(v2, v3);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C8D8088C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C8CA3D5C(*(void *)(v0 + 40), *(void *)(v0 + 48));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 88, 7);
}

uint64_t sub_1C8D808EC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  unint64_t v3 = *(void *)(a1 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(v2, v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C8D8096C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  unint64_t v3 = *(void *)(a1 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C8CA3D5C(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C8D809EC()
{
  sub_1C8CA3D5C(*(void *)(v0 + 16), *(void *)(v0 + 24));
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 49, 7);
}

uint64_t sub_1C8D80A2C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C8D80A68()
{
  swift_bridgeObjectRelease();
  sub_1C8CA3D5C(v0[3], v0[4]);
  swift_bridgeObjectRelease();
  unint64_t v1 = v0[14];
  if (v1 >> 60 != 15) {
    sub_1C8CA3D5C(v0[13], v1);
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 136, 7);
}

void *sub_1C8D80AD0(void *a1)
{
  uint64_t v2 = a1[1];
  unint64_t v3 = a1[2];
  uint64_t v4 = a1[11];
  unint64_t v5 = a1[12];
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(v2, v3);
  swift_bridgeObjectRetain();
  sub_1C8D02DB8(v4, v5);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C8D80B4C()
{
  return objectdestroy_56Tm(50);
}

void *sub_1C8D80B54(void *a1)
{
  uint64_t v2 = a1[1];
  unint64_t v3 = a1[2];
  uint64_t v4 = a1[11];
  unint64_t v5 = a1[12];
  swift_bridgeObjectRelease();
  sub_1C8CA3D5C(v2, v3);
  swift_bridgeObjectRelease();
  sub_1C8CAA9F0(v4, v5);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C8D80BD0()
{
  return objectdestroy_56Tm(49);
}

uint64_t sub_1C8D80BD8()
{
  return objectdestroy_56Tm(49);
}

uint64_t sub_1C8D80BE0()
{
  return objectdestroy_56Tm(50);
}

uint64_t sub_1C8D80BE8()
{
  return objectdestroy_56Tm(48);
}

uint64_t sub_1C8D80BF0()
{
  return objectdestroy_56Tm(54);
}

uint64_t sub_1C8D80BF8()
{
  return objectdestroy_56Tm(52);
}

uint64_t sub_1C8D80C00(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v3 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(v2, v3);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C8D80C50()
{
  sub_1C8CA3D5C(*(void *)(v0 + 16), *(void *)(v0 + 24));
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C8D80C9C()
{
  return objectdestroy_56Tm(48);
}

uint64_t objectdestroy_56Tm(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_1C8CA3D5C(*(void *)(v1 + 24), *(void *)(v1 + 32));
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v1, a1, 7);
}

uint64_t objectdestroy_84Tm()
{
  sub_1C8CA3D5C(*(void *)(v0 + 16), *(void *)(v0 + 24));
  return MEMORY[0x1F4186498](v0, 45, 7);
}

uint64_t sub_1C8D80D38()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C8CA3D5C(*(void *)(v0 + 104), *(void *)(v0 + 112));
  return MEMORY[0x1F4186498](v0, 120, 7);
}

uint64_t sub_1C8D80D90(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 88);
  unint64_t v3 = *(void *)(a1 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(v2, v3);
  return a1;
}

uint64_t sub_1C8D80E00(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 88);
  unint64_t v3 = *(void *)(a1 + 96);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C8CA3D5C(v2, v3);
  return a1;
}

uint64_t objectdestroy_101Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C8CA3D5C(*(void *)(v0 + 48), *(void *)(v0 + 56));
  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1C8D80EBC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  unint64_t v3 = *(void *)(a1 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(v2, v3);
  return a1;
}

uint64_t sub_1C8D80F0C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  unint64_t v3 = *(void *)(a1 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C8CA3D5C(v2, v3);
  return a1;
}

uint64_t sub_1C8D80F5C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C8CA3D5C(*(void *)(v0 + 128), *(void *)(v0 + 136));
  return MEMORY[0x1F4186498](v0, 144, 7);
}

uint64_t sub_1C8D80FBC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 112);
  unint64_t v3 = *(void *)(a1 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C8CA3CF8(v2, v3);
  return a1;
}

uint64_t sub_1C8D81040(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 112);
  unint64_t v3 = *(void *)(a1 + 120);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C8CA3D5C(v2, v3);
  return a1;
}

unint64_t sub_1C8D810C4()
{
  unint64_t result = qword_1EA567AA0;
  if (!qword_1EA567AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567AA0);
  }
  return result;
}

double Google_Protobuf_DoubleValue.init(_:)@<D0>(uint64_t a1@<X8>, double a2@<D0>)
{
  *(double *)a1 = a2;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C8D8AD80;
  return result;
}

double Google_Protobuf_DoubleValue.init(floatLiteral:)@<D0>(uint64_t a1@<X8>, double a2@<D0>)
{
  *(double *)a1 = a2;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C8D8AD80;
  return result;
}

uint64_t sub_1C8D8114C()
{
  uint64_t v1 = sub_1C8D88340();
  MEMORY[0x1F4188790](v1 - 8, v2);
  sub_1C8D281F0(*v0);
  swift_bridgeObjectRetain();
  sub_1C8D88330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
  sub_1C8CA4790();
  uint64_t v3 = sub_1C8D88310();
  uint64_t v5 = v4;
  uint64_t result = swift_bridgeObjectRelease();
  if (v5)
  {
    swift_bridgeObjectRelease();
    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_1C8D8124C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *a1;
  double result = 0.0;
  *(_OWORD *)(a2 + 8) = xmmword_1C8D8AD80;
  return result;
}

uint64_t sub_1C8D81264()
{
  return sub_1C8D8114C();
}

uint64_t sub_1C8D8127C()
{
  uint64_t result = sub_1C8CAF30C();
  uint64_t v3 = 0;
  if ((result & 1) != 0 || (uint64_t result = sub_1C8CAEA1C(), !v1)) {
    *uint64_t v0 = v3;
  }
  return result;
}

double Google_Protobuf_FloatValue.init(_:)@<D0>(uint64_t a1@<X8>, float a2@<S0>)
{
  *(float *)a1 = a2;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C8D8AD80;
  return result;
}

double Google_Protobuf_FloatValue.init(floatLiteral:)@<D0>(uint64_t a1@<X8>, float a2@<S0>)
{
  *(float *)a1 = a2;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_1C8D8AD80;
  return result;
}

uint64_t sub_1C8D812F8()
{
  uint64_t v1 = sub_1C8D88340();
  MEMORY[0x1F4188790](v1 - 8, v2);
  sub_1C8D28164(*v0);
  swift_bridgeObjectRetain();
  sub_1C8D88330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
  sub_1C8CA4790();
  uint64_t v3 = sub_1C8D88310();
  uint64_t v5 = v4;
  uint64_t result = swift_bridgeObjectRelease();
  if (v5)
  {
    swift_bridgeObjectRelease();
    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_1C8D813F8@<D0>(_DWORD *a1@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *a1;
  double result = 0.0;
  *(_OWORD *)(a2 + 8) = xmmword_1C8D8AD80;
  return result;
}

uint64_t sub_1C8D81410()
{
  return sub_1C8D812F8();
}

uint64_t sub_1C8D81428()
{
  uint64_t result = sub_1C8CAF30C();
  int v3 = 0;
  if ((result & 1) != 0 || (uint64_t result = sub_1C8CAE208(), !v1)) {
    *uint64_t v0 = v3;
  }
  return result;
}

double Google_Protobuf_Int64Value.init(_:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = a1;
  double result = 0.0;
  *(_OWORD *)(a2 + 8) = xmmword_1C8D8AD80;
  return result;
}

double Google_Protobuf_Int64Value.init(integerLiteral:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = a1;
  double result = 0.0;
  *(_OWORD *)(a2 + 8) = xmmword_1C8D8AD80;
  return result;
}

uint64_t sub_1C8D814A4()
{
  uint64_t v1 = sub_1C8D88340();
  MEMORY[0x1F4188790](v1 - 8, v2);
  sub_1C8D284C4(*v0);
  swift_bridgeObjectRetain();
  sub_1C8D88330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
  sub_1C8CA4790();
  uint64_t v3 = sub_1C8D88310();
  uint64_t v5 = v4;
  uint64_t result = swift_bridgeObjectRelease();
  if (v5)
  {
    swift_bridgeObjectRelease();
    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_1C8D815A4@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *a1;
  double result = 0.0;
  *(_OWORD *)(a2 + 8) = xmmword_1C8D8AD80;
  return result;
}

uint64_t sub_1C8D815BC()
{
  return sub_1C8D814A4();
}

uint64_t sub_1C8D815D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D81810(a1, a2, a3, sub_1C8CADC30);
}

uint64_t sub_1C8D81600()
{
  uint64_t v1 = sub_1C8D88340();
  MEMORY[0x1F4188790](v1 - 8, v2);
  unint64_t v3 = *v0;
  uint64_t v4 = sub_1C8D5EB50(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v6 = *((void *)v4 + 2);
  unint64_t v5 = *((void *)v4 + 3);
  if (v6 >= v5 >> 1) {
    uint64_t v4 = sub_1C8D5EB50((char *)(v5 > 1), v6 + 1, 1, v4);
  }
  *((void *)v4 + 2) = v6 + 1;
  v4[v6 + 32] = 34;
  char v14 = v4;
  sub_1C8D29538(v3);
  uint64_t v7 = v14;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v7 = sub_1C8D5EB50(0, *((void *)v14 + 2) + 1, 1, v14);
  }
  unint64_t v9 = *((void *)v7 + 2);
  unint64_t v8 = *((void *)v7 + 3);
  if (v9 >= v8 >> 1) {
    uint64_t v7 = sub_1C8D5EB50((char *)(v8 > 1), v9 + 1, 1, v7);
  }
  *((void *)v7 + 2) = v9 + 1;
  v7[v9 + 32] = 34;
  swift_bridgeObjectRetain();
  sub_1C8D88330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
  sub_1C8CA4790();
  uint64_t v10 = sub_1C8D88310();
  uint64_t v12 = v11;
  uint64_t result = swift_bridgeObjectRelease();
  if (v12)
  {
    swift_bridgeObjectRelease();
    return v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D817CC()
{
  return sub_1C8D81600();
}

uint64_t sub_1C8D817E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C8D81810(a1, a2, a3, sub_1C8CADAF4);
}

uint64_t sub_1C8D81810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  if (sub_1C8CAF30C())
  {
    uint64_t result = 0;
  }
  else
  {
    uint64_t result = a4();
    if (v5) {
      return result;
    }
  }
  *uint64_t v4 = result;
  return result;
}

double Google_Protobuf_Int32Value.init(_:)@<D0>(int a1@<W0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = a1;
  double result = 0.0;
  *(_OWORD *)(a2 + 8) = xmmword_1C8D8AD80;
  return result;
}

double sub_1C8D81884@<D0>(_DWORD *a1@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *a1;
  double result = 0.0;
  *(_OWORD *)(a2 + 8) = xmmword_1C8D8AD80;
  return result;
}

uint64_t sub_1C8D8189C()
{
  return sub_1C8D887A0();
}

uint64_t sub_1C8D818E8()
{
  if (sub_1C8CAF30C())
  {
    uint64_t result = 0;
LABEL_3:
    *uint64_t v0 = result;
    return result;
  }
  uint64_t result = sub_1C8CADC30();
  if (!v1)
  {
    if (result == (int)result) {
      goto LABEL_3;
    }
    sub_1C8CAC5B0();
    swift_allocError();
    *unint64_t v3 = xmmword_1C8D8AD30;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1C8D8197C()
{
  return sub_1C8D887A0();
}

unint64_t sub_1C8D819C8()
{
  if (sub_1C8CAF30C())
  {
    unint64_t result = 0;
LABEL_3:
    *uint64_t v0 = result;
    return result;
  }
  unint64_t result = sub_1C8CADAF4();
  if (!v1)
  {
    if (!HIDWORD(result)) {
      goto LABEL_3;
    }
    sub_1C8CAC5B0();
    swift_allocError();
    *unint64_t v3 = xmmword_1C8D8AD30;
    return swift_willThrow();
  }
  return result;
}

double Google_Protobuf_BoolValue.init(_:)@<D0>(char a1@<W0>, uint64_t a2@<X8>)
{
  *(unsigned char *)a2 = a1;
  double result = 0.0;
  *(_OWORD *)(a2 + 8) = xmmword_1C8D8AD80;
  return result;
}

double Google_Protobuf_BoolValue.init(BOOLeanLiteral:)@<D0>(char a1@<W0>, uint64_t a2@<X8>)
{
  *(unsigned char *)a2 = a1;
  double result = 0.0;
  *(_OWORD *)(a2 + 8) = xmmword_1C8D8AD80;
  return result;
}

double sub_1C8D81A84@<D0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  *(unsigned char *)a2 = *a1;
  double result = 0.0;
  *(_OWORD *)(a2 + 8) = xmmword_1C8D8AD80;
  return result;
}

uint64_t sub_1C8D81A9C()
{
  if (*v0) {
    return 1702195828;
  }
  else {
    return 0x65736C6166;
  }
}

uint64_t sub_1C8D81ACC(uint64_t a1)
{
  unint64_t v3 = v1;
  if (sub_1C8CAF30C())
  {
    uint64_t result = 0;
LABEL_7:
    *unint64_t v3 = result & 1;
    return result;
  }
  if (*(unsigned char *)(a1 + 80)) {
    uint64_t result = sub_1C8CAF478();
  }
  else {
    uint64_t result = sub_1C8CAF37C();
  }
  if (!v2) {
    goto LABEL_7;
  }
  return result;
}

double Google_Protobuf_StringValue.init(_:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  double result = 0.0;
  *(_OWORD *)(a3 + 16) = xmmword_1C8D8AD80;
  return result;
}

double Google_Protobuf_StringValue.init(stringLiteral:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  double result = 0.0;
  *(_OWORD *)(a3 + 16) = xmmword_1C8D8AD80;
  return result;
}

uint64_t sub_1C8D81B68(uint64_t a1)
{
  return sub_1C8D81D70(a1, (void (*)(void, void))sub_1C8D288BC);
}

uint64_t sub_1C8D81B94()
{
  uint64_t v2 = v0;
  if (sub_1C8CAF30C())
  {
    uint64_t v3 = 0;
    unint64_t v4 = 0xE000000000000000;
  }
  else
  {
    uint64_t result = (uint64_t)sub_1C8CADB68();
    if (v1) {
      return result;
    }
    uint64_t v3 = result;
    unint64_t v4 = v6;
  }
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t *v2 = v3;
  v2[1] = v4;
  return result;
}

double sub_1C8D81C00@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = a1[1];
  *(void *)a2 = *a1;
  *(void *)(a2 + 8) = v2;
  double result = 0.0;
  *(_OWORD *)(a2 + 16) = xmmword_1C8D8AD80;
  return result;
}

double Google_Protobuf_BytesValue.init(_:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  double result = 0.0;
  *(_OWORD *)(a3 + 16) = xmmword_1C8D8AD80;
  return result;
}

_UNKNOWN **sub_1C8D81C2C()
{
  return &protocol witness table for ProtobufDouble;
}

_UNKNOWN **sub_1C8D81C38()
{
  return &protocol witness table for ProtobufFloat;
}

uint64_t sub_1C8D81C44()
{
  return MEMORY[0x1E4FBB4C8];
}

_UNKNOWN **sub_1C8D81C50()
{
  return &protocol witness table for ProtobufInt64;
}

_UNKNOWN **sub_1C8D81C5C()
{
  return &protocol witness table for ProtobufUInt64;
}

uint64_t sub_1C8D81C68()
{
  return MEMORY[0x1E4FBC590];
}

_UNKNOWN **sub_1C8D81C74()
{
  return &protocol witness table for ProtobufInt32;
}

uint64_t sub_1C8D81C80()
{
  return MEMORY[0x1E4FBC1B8];
}

_UNKNOWN **sub_1C8D81C8C()
{
  return &protocol witness table for ProtobufUInt32;
}

uint64_t sub_1C8D81C98()
{
  return MEMORY[0x1E4FBC528];
}

_UNKNOWN **sub_1C8D81CA4()
{
  return &protocol witness table for ProtobufBool;
}

_UNKNOWN **sub_1C8D81CB0()
{
  return &protocol witness table for ProtobufString;
}

unint64_t sub_1C8D81CC0()
{
  unint64_t result = qword_1EA567AA8;
  if (!qword_1EA567AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567AA8);
  }
  return result;
}

unint64_t sub_1C8D81D18()
{
  unint64_t result = qword_1EA567AB0;
  if (!qword_1EA567AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567AB0);
  }
  return result;
}

uint64_t sub_1C8D81D70(uint64_t a1, void (*a2)(void, void))
{
  uint64_t v4 = sub_1C8D88340();
  MEMORY[0x1F4188790](v4 - 8, v5);
  a2(*v2, v2[1]);
  swift_bridgeObjectRetain();
  sub_1C8D88330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CE8);
  sub_1C8CA4790();
  uint64_t v6 = sub_1C8D88310();
  uint64_t v8 = v7;
  uint64_t result = swift_bridgeObjectRelease();
  if (v8)
  {
    swift_bridgeObjectRelease();
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C8D81E78(uint64_t *a1)
{
  uint64_t v3 = v1;
  if (sub_1C8CAF30C())
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0xC000000000000000;
LABEL_3:
    uint64_t result = sub_1C8CA3D5C(*(void *)v3, *(void *)(v3 + 8));
    *(void *)uint64_t v3 = v5;
    *(void *)(v3 + 8) = v6;
    return result;
  }
  sub_1C8CAD178();
  uint64_t v8 = a1[1];
  if (a1[2] == v8)
  {
    sub_1C8CAC5B0();
    swift_allocError();
    *unint64_t v9 = xmmword_1C8D8AD20;
    return swift_willThrow();
  }
  else
  {
    uint64_t result = sub_1C8CAC354(*a1, v8, a1 + 2, a1[1]);
    if (!v2)
    {
      uint64_t v5 = result;
      unint64_t v6 = v10;
      goto LABEL_3;
    }
  }
  return result;
}

uint64_t sub_1C8D81F40(uint64_t a1)
{
  return sub_1C8D81D70(a1, (void (*)(void, void))sub_1C8D290C0);
}

uint64_t sub_1C8D81F6C(uint64_t *a1)
{
  return sub_1C8D81E78(a1);
}

uint64_t sub_1C8D81FA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return nullsub_1(a5, a3, &off_1F2351708);
}

uint64_t sub_1C8D81FCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return nullsub_1(a7, a3, a4);
}

uint64_t sub_1C8D81FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return nullsub_1(a8, a3, a4);
}

uint64_t sub_1C8D8202C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return nullsub_1(a5, a3, &off_1F23546F0);
}

uint64_t sub_1C8D82054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return nullsub_1(a7, a3, a4);
}

uint64_t sub_1C8D82084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return nullsub_1(a8, a3, a4);
}

uint64_t sub_1C8D820B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return nullsub_1(a5, a3, &off_1F2355278);
}

uint64_t sub_1C8D820DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return nullsub_1(a7, a3, a4);
}

uint64_t sub_1C8D8210C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return nullsub_1(a8, a3, a4);
}

BOOL static BinaryDelimited.Error.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t BinaryDelimited.Error.hash(into:)()
{
  return sub_1C8D88850();
}

uint64_t BinaryDelimited.Error.hashValue.getter()
{
  return sub_1C8D888A0();
}

uint64_t static BinaryDelimited.serialize(message:to:partial:)(void *a1, void *a2, uint64_t a3)
{
  uint64_t v54 = *MEMORY[0x1E4F143B8];
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  uint64_t result = Message.serializedData(partial:)(a3, v8, v9);
  if (!v3)
  {
    unint64_t v12 = v11;
    unint64_t v13 = v11 >> 62;
    uint64_t v14 = result;
    switch(v11 >> 62)
    {
      case 1uLL:
        int v17 = HIDWORD(result) - result;
        if (__OFSUB__(HIDWORD(result), result)) {
          goto LABEL_56;
        }
        if (v17 < 0) {
          goto LABEL_54;
        }
        uint64_t v18 = sub_1C8CA7BA8(v17);
        goto LABEL_15;
      case 2uLL:
        uint64_t v20 = *(void *)(result + 16);
        uint64_t v19 = *(void *)(result + 24);
        unint64_t v21 = v19 - v20;
        if (__OFSUB__(v19, v20)) {
          goto LABEL_57;
        }
        if ((v21 & 0x8000000000000000) != 0)
        {
LABEL_54:
          __break(1u);
        }
        else
        {
          uint64_t v18 = sub_1C8CA7BA8(v21);
          if (v13 == 2)
          {
            uint64_t v23 = *(void *)(v14 + 16);
            uint64_t v22 = *(void *)(v14 + 24);
            uint64_t v24 = v22 - v23;
            if (!__OFSUB__(v22, v23))
            {
LABEL_17:
              uint64_t v16 = v18 + v24;
              if (!__OFADD__(v18, v24))
              {
LABEL_18:
                uint64_t v52 = sub_1C8CA4A2C(v16);
                unint64_t v53 = v25;
                sub_1C8CA3CF8(v14, v12);
                sub_1C8D82C58(&v52, v14, v12);
                uint64_t v5 = v52;
                unint64_t v4 = v53;
                switch(v53 >> 62)
                {
                  case 1uLL:
                    goto LABEL_23;
                  case 2uLL:
                    id v48 = a2;
                    uint64_t v35 = *(void *)(v52 + 16);
                    uint64_t v46 = *(void *)(v52 + 24);
                    sub_1C8CA3CF8(v52, v53);
                    swift_retain();
                    swift_retain();
                    uint64_t v36 = sub_1C8D88110();
                    if (!v36) {
                      goto LABEL_34;
                    }
                    uint64_t v37 = sub_1C8D88140();
                    if (__OFSUB__(v35, v37)) {
                      goto LABEL_61;
                    }
                    v36 += v35 - v37;
LABEL_34:
                    BOOL v38 = __OFSUB__(v46, v35);
                    uint64_t v39 = v46 - v35;
                    if (v38) {
                      goto LABEL_59;
                    }
                    uint64_t v40 = sub_1C8D88130();
                    if (v40 >= v39) {
                      uint64_t v41 = v39;
                    }
                    else {
                      uint64_t v41 = v40;
                    }
                    if (v36 && v41 >= 1)
                    {
                      a2 = v48;
                      id v34 = objc_msgSend(v48, sel_write_maxLength_, v36, v16);
                      swift_release();
                      swift_release();
                      goto LABEL_41;
                    }
                    swift_release();
                    swift_release();
                    break;
                  case 3uLL:
                    goto LABEL_47;
                  default:
                    uint64_t v49 = v52;
                    int v50 = v53;
                    __int16 v51 = WORD2(v53);
                    if ((v53 & 0xFF000000000000) == 0) {
                      goto LABEL_47;
                    }
                    id v26 = objc_msgSend(a2, sel_write_maxLength_, &v49, v16);
                    goto LABEL_30;
                }
                goto LABEL_47;
              }
LABEL_22:
              __break(1u);
LABEL_23:
              id v47 = a2;
              if (v5 >> 32 >= (int)v5)
              {
                swift_retain();
                uint64_t v27 = sub_1C8D88110();
                if (!v27)
                {
                  sub_1C8D88130();
                  goto LABEL_47;
                }
                uint64_t v28 = v27;
                uint64_t v29 = sub_1C8D88140();
                uint64_t v30 = (int)v5 - v29;
                if (!__OFSUB__((int)v5, v29))
                {
                  uint64_t v31 = sub_1C8D88130();
                  uint64_t v32 = (v5 >> 32) - (int)v5;
                  if (v31 < v32) {
                    uint64_t v32 = v31;
                  }
                  if (v32 >= 1)
                  {
                    uint64_t v33 = v28 + v30;
                    a2 = v47;
                    id v26 = objc_msgSend(v47, sel_write_maxLength_, v33, v16);
LABEL_30:
                    id v34 = v26;
LABEL_41:
                    sub_1C8CA3D5C(v5, v4);
                    if (v34 != (id)v16)
                    {
                      if (v34 == (id)-1)
                      {
                        if (objc_msgSend(a2, sel_streamError))
                        {
                          swift_willThrow();
                          sub_1C8CA3D5C(v14, v12);
                          uint64_t v42 = v5;
                          unint64_t v43 = v4;
                          return sub_1C8CA3D5C(v42, v43);
                        }
                        sub_1C8D8324C();
                        swift_allocError();
                        *uint64_t v45 = 0;
LABEL_49:
                        swift_willThrow();
                        sub_1C8CA3D5C(v14, v12);
                        uint64_t v42 = v52;
                        unint64_t v43 = v53;
                        return sub_1C8CA3D5C(v42, v43);
                      }
LABEL_48:
                      sub_1C8D8324C();
                      swift_allocError();
                      *uint64_t v44 = 1;
                      goto LABEL_49;
                    }
LABEL_50:
                    sub_1C8CA3D5C(v5, v4);
                    uint64_t v42 = v14;
                    unint64_t v43 = v12;
                    return sub_1C8CA3D5C(v42, v43);
                  }
LABEL_47:
                  sub_1C8CA3D5C(v5, v4);
                  if (v16) {
                    goto LABEL_48;
                  }
                  goto LABEL_50;
                }
LABEL_60:
                __break(1u);
LABEL_61:
                __break(1u);
              }
LABEL_58:
              __break(1u);
LABEL_59:
              __break(1u);
              goto LABEL_60;
            }
            __break(1u);
          }
LABEL_15:
          if (!__OFSUB__(HIDWORD(v14), v14))
          {
            uint64_t v24 = HIDWORD(v14) - (int)v14;
            goto LABEL_17;
          }
        }
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
        goto LABEL_58;
      case 3uLL:
        uint64_t v16 = sub_1C8CA7BA8(0);
        goto LABEL_18;
      default:
        uint64_t v15 = sub_1C8CA7BA8(BYTE6(v11));
        uint64_t v16 = v15 + BYTE6(v12);
        if (!__OFADD__(v15, BYTE6(v12))) {
          goto LABEL_18;
        }
        goto LABEL_22;
    }
  }
  return result;
}

uint64_t static BinaryDelimited.parse<A>(messageType:from:extensions:partial:options:)@<X0>(void *a1@<X1>, uint64_t a2@<X2>, char a3@<W3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v14 = *(void *)a4;
  char v15 = *(unsigned char *)(a4 + 8);
  (*(void (**)(uint64_t, uint64_t))(a6 + 16))(a5, a6);
  uint64_t v17 = v14;
  char v18 = v15;
  uint64_t result = static BinaryDelimited.merge<A>(into:from:extensions:partial:options:)(a7, a1, a2, a3, &v17, a5, a6);
  if (v7) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a5 - 8) + 8))(a7, a5);
  }
  return result;
}

uint64_t static BinaryDelimited.merge<A>(into:from:extensions:partial:options:)(uint64_t a1, void *a2, uint64_t a3, char a4, uint64_t *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = *a5;
  char v14 = *((unsigned char *)a5 + 8);
  uint64_t result = sub_1C8D82918(a2);
  if (!v7)
  {
    uint64_t v16 = result;
    if (result < 0)
    {
      __break(1u);
    }
    else if (result)
    {
      uint64_t v27 = sub_1C8CA4A2C(result);
      unint64_t v28 = v17;
      uint64_t v29 = 0;
      id v18 = a2;
      sub_1C8D82F00(&v27, &v29, v18, v16);
      if (v29 == v16)
      {
        uint64_t v19 = v27;
        unint64_t v20 = v28;
        uint64_t v25 = v13;
        char v26 = v14;
        sub_1C8CA3CF8(v27, v28);
        Message.merge(serializedData:extensions:partial:options:)(v19, v20, a3, a4 & 1, (uint64_t)&v25, a6, a7);
        sub_1C8CA3D5C(v19, v20);
        uint64_t v21 = v19;
        unint64_t v22 = v20;
      }
      else
      {
        if (v29 == -1)
        {
          if (!objc_msgSend(v18, sel_streamError))
          {
            sub_1C8D8324C();
            swift_allocError();
            unsigned char *v24 = 0;
          }
        }
        else
        {
          sub_1C8D8324C();
          swift_allocError();
          *uint64_t v23 = 1;
        }
        swift_willThrow();
        uint64_t v21 = v27;
        unint64_t v22 = v28;
      }
      return sub_1C8CA3D5C(v21, v22);
    }
  }
  return result;
}

uint64_t sub_1C8D82918(void *a1)
{
  char v3 = 1;
  unint64_t v4 = (unsigned char *)swift_slowAlloc();
  id v5 = objc_msgSend(a1, sel_read_maxLength_, v4, 1);
  if (v5 == (id)-1) {
    goto LABEL_33;
  }
  if (v5 != (id)1) {
    goto LABEL_35;
  }
  uint64_t v1 = *v4 & 0x7F;
  if ((*v4 & 0x80) != 0)
  {
    char v3 = 1;
    id v6 = objc_msgSend(a1, sel_read_maxLength_, v4, 1);
    if (v6 != (id)-1)
    {
      if (v6 != (id)1) {
        goto LABEL_35;
      }
      int v7 = (char)*v4;
      v1 |= (unint64_t)(v7 & 0x7F) << 7;
      if ((v7 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      char v3 = 1;
      id v8 = objc_msgSend(a1, sel_read_maxLength_, v4, 1);
      if (v8 != (id)-1)
      {
        if (v8 != (id)1) {
          goto LABEL_35;
        }
        int v9 = (char)*v4;
        v1 |= (unint64_t)(v9 & 0x7F) << 14;
        if ((v9 & 0x80000000) == 0) {
          goto LABEL_4;
        }
        char v3 = 1;
        id v10 = objc_msgSend(a1, sel_read_maxLength_, v4, 1);
        if (v10 != (id)-1)
        {
          if (v10 != (id)1) {
            goto LABEL_35;
          }
          int v11 = (char)*v4;
          v1 |= (unint64_t)(v11 & 0x7F) << 21;
          if ((v11 & 0x80000000) == 0) {
            goto LABEL_4;
          }
          char v3 = 1;
          id v12 = objc_msgSend(a1, sel_read_maxLength_, v4, 1);
          if (v12 != (id)-1)
          {
            if (v12 != (id)1) {
              goto LABEL_35;
            }
            int v13 = (char)*v4;
            v1 |= (unint64_t)(v13 & 0x7F) << 28;
            if ((v13 & 0x80000000) == 0) {
              goto LABEL_4;
            }
            char v3 = 1;
            id v14 = objc_msgSend(a1, sel_read_maxLength_, v4, 1);
            if (v14 != (id)-1)
            {
              if (v14 != (id)1) {
                goto LABEL_35;
              }
              int v15 = (char)*v4;
              v1 |= (unint64_t)(v15 & 0x7F) << 35;
              if ((v15 & 0x80000000) == 0) {
                goto LABEL_4;
              }
              char v3 = 1;
              id v16 = objc_msgSend(a1, sel_read_maxLength_, v4, 1);
              if (v16 != (id)-1)
              {
                if (v16 != (id)1) {
                  goto LABEL_35;
                }
                int v17 = (char)*v4;
                v1 |= (unint64_t)(v17 & 0x7F) << 42;
                if ((v17 & 0x80000000) == 0) {
                  goto LABEL_4;
                }
                char v3 = 1;
                id v18 = objc_msgSend(a1, sel_read_maxLength_, v4, 1);
                if (v18 != (id)-1)
                {
                  if (v18 != (id)1) {
                    goto LABEL_35;
                  }
                  int v19 = (char)*v4;
                  v1 |= (unint64_t)(v19 & 0x7F) << 49;
                  if ((v19 & 0x80000000) == 0) {
                    goto LABEL_4;
                  }
                  char v3 = 1;
                  id v20 = objc_msgSend(a1, sel_read_maxLength_, v4, 1);
                  if (v20 != (id)-1)
                  {
                    if (v20 != (id)1) {
                      goto LABEL_35;
                    }
                    int v21 = (char)*v4;
                    v1 |= (unint64_t)(v21 & 0x7F) << 56;
                    if ((v21 & 0x80000000) == 0) {
                      goto LABEL_4;
                    }
                    char v3 = 1;
                    id v22 = objc_msgSend(a1, sel_read_maxLength_, v4, 1);
                    if (v22 != (id)-1)
                    {
                      if (v22 == (id)1)
                      {
                        uint64_t v23 = *v4;
                        if ((v23 & 0x80) == 0)
                        {
                          v1 |= v23 << 63;
                          goto LABEL_4;
                        }
                        sub_1C8D0E090();
                        swift_allocError();
                        unsigned char *v26 = 3;
LABEL_36:
                        swift_willThrow();
                        swift_beginAccess();
                        MEMORY[0x1CB773830](v4, -1, -1);
                        return v1;
                      }
LABEL_35:
                      sub_1C8D8324C();
                      swift_allocError();
                      char *v24 = v3;
                      goto LABEL_36;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
LABEL_33:
    if (objc_msgSend(a1, sel_streamError)) {
      goto LABEL_36;
    }
    char v3 = 0;
    goto LABEL_35;
  }
LABEL_4:
  MEMORY[0x1CB773830](v4, -1, -1);
  return v1;
}

uint64_t sub_1C8D82C58(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  unint64_t v3 = a1[1];
  switch(v3 >> 62)
  {
    case 1uLL:
      uint64_t v20 = *a1;
      uint64_t v21 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)a1 = xmmword_1C8D8AD80;
      sub_1C8CA3CF8(a2, a3);
      sub_1C8D560EC((int *)&v20, a2, a3);
      uint64_t result = sub_1C8CA3D5C(a2, a3);
      uint64_t v12 = v21 | 0x4000000000000000;
      *a1 = v20;
      a1[1] = v12;
      return result;
    case 2uLL:
      uint64_t v20 = *a1;
      uint64_t v21 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)a1 = xmmword_1C8D8AD80;
      sub_1C8D88160();
      uint64_t v13 = v21;
      uint64_t v15 = *(void *)(v20 + 16);
      uint64_t v14 = *(void *)(v20 + 24);
      if (!sub_1C8D88110())
      {
        __break(1u);
        JUMPOUT(0x1C8D82EF0);
      }
      if (__OFSUB__(v15, sub_1C8D88140()))
      {
        __break(1u);
LABEL_18:
        __break(1u);
      }
      BOOL v16 = __OFSUB__(v14, v15);
      uint64_t v17 = v14 - v15;
      if (v16) {
        goto LABEL_18;
      }
      uint64_t v18 = sub_1C8D88130();
      if (v18 >= v17) {
        uint64_t v19 = v17;
      }
      else {
        uint64_t v19 = v18;
      }
      if (v19 >= 1) {
        sub_1C8CC4510(a2, a3);
      }
      uint64_t result = sub_1C8CA3D5C(a2, a3);
      *a1 = v20;
      a1[1] = v13 | 0x8000000000000000;
      return result;
    case 3uLL:
      return sub_1C8CA3D5C(a2, a3);
    default:
      uint64_t v20 = *a1;
      LOWORD(v21) = v3;
      BYTE2(v21) = BYTE2(v3);
      unint64_t v7 = HIDWORD(v3);
      BYTE3(v21) = BYTE3(v3);
      unint64_t v8 = v3 >> 40;
      BYTE4(v21) = BYTE4(v3);
      unint64_t v9 = HIWORD(v3);
      BYTE5(v21) = BYTE5(v3);
      BYTE6(v21) = BYTE6(v3);
      if ((v3 & 0xFF000000000000) != 0)
      {
        sub_1C8CC4510(a2, a3);
        LOBYTE(v7) = BYTE4(v21);
        LOBYTE(v8) = BYTE5(v21);
        LOBYTE(v9) = BYTE6(v21);
      }
      uint64_t v10 = v21;
      uint64_t result = sub_1C8CA3D5C(a2, a3);
      *a1 = v20;
      a1[1] = v10 | ((unint64_t)v7 << 32) | ((unint64_t)v8 << 40) | ((unint64_t)v9 << 48);
      return result;
  }
}

void sub_1C8D82F00(uint64_t *a1, void *a2, id a3, uint64_t a4)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  unint64_t v4 = a1[1];
  switch(v4 >> 62)
  {
    case 1uLL:
      uint64_t v29 = *a1;
      uint64_t v30 = v4 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)a1 = xmmword_1C8D8AD80;
      id v12 = a3;
      sub_1C8D83188((int *)&v29, a2, v12, a4);

      uint64_t v13 = v29;
      unint64_t v14 = v30 | 0x4000000000000000;
      goto LABEL_17;
    case 2uLL:
      uint64_t v29 = *a1;
      uint64_t v30 = v4 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)a1 = xmmword_1C8D8AD80;
      sub_1C8D88160();
      uint64_t v16 = v29;
      uint64_t v15 = v30;
      uint64_t v18 = *(void *)(v29 + 16);
      uint64_t v17 = *(void *)(v29 + 24);
      uint64_t v19 = sub_1C8D88110();
      if (!v19)
      {
        __break(1u);
        JUMPOUT(0x1C8D83178);
      }
      uint64_t v20 = v19;
      uint64_t v21 = sub_1C8D88140();
      uint64_t v22 = v18 - v21;
      if (__OFSUB__(v18, v21))
      {
        __break(1u);
LABEL_20:
        __break(1u);
      }
      BOOL v23 = __OFSUB__(v17, v18);
      uint64_t v24 = v17 - v18;
      if (v23) {
        goto LABEL_20;
      }
      uint64_t v25 = sub_1C8D88130();
      if (v25 >= v24) {
        uint64_t v26 = v24;
      }
      else {
        uint64_t v26 = v25;
      }
      if (v26 >= 1) {
        *a2 = objc_msgSend(a3, sel_read_maxLength_, v20 + v22, a4);
      }

      *a1 = v16;
      a1[1] = v15 | 0x8000000000000000;
      return;
    case 3uLL:

      return;
    default:
      uint64_t v29 = *a1;
      LOWORD(v30) = v4;
      BYTE2(v30) = BYTE2(v4);
      unint64_t v9 = HIDWORD(v4);
      BYTE3(v30) = BYTE3(v4);
      unint64_t v10 = v4 >> 40;
      BYTE4(v30) = BYTE4(v4);
      unint64_t v11 = HIWORD(v4);
      BYTE5(v30) = BYTE5(v4);
      BYTE6(v30) = BYTE6(v4);
      if ((v4 & 0xFF000000000000) != 0)
      {
        *a2 = objc_msgSend(a3, sel_read_maxLength_, &v29, a4);

        LOBYTE(v9) = BYTE4(v30);
        LOBYTE(v10) = BYTE5(v30);
        LOBYTE(v11) = BYTE6(v30);
      }
      else
      {
      }
      uint64_t v13 = v29;
      unint64_t v14 = v30 | ((unint64_t)v9 << 32) | ((unint64_t)v10 << 40) | ((unint64_t)v11 << 48);
LABEL_17:
      *a1 = v13;
      a1[1] = v14;
      return;
  }
}

void sub_1C8D83188(int *a1, void *a2, void *a3, uint64_t a4)
{
  sub_1C8D88170();
  uint64_t v8 = *a1;
  uint64_t v9 = a1[1];
  if ((int)v9 < (int)v8)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v10 = sub_1C8D88110();
  if (!v10)
  {
LABEL_12:
    __break(1u);
    return;
  }
  uint64_t v11 = v10;
  uint64_t v12 = sub_1C8D88140();
  uint64_t v13 = v8 - v12;
  if (__OFSUB__(v8, v12))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v14 = v9 - v8;
  uint64_t v15 = sub_1C8D88130();
  if (v15 >= v14) {
    uint64_t v16 = v14;
  }
  else {
    uint64_t v16 = v15;
  }
  if (v16 >= 1) {
    *a2 = objc_msgSend(a3, sel_read_maxLength_, v11 + v13, a4);
  }
}

unint64_t sub_1C8D8324C()
{
  unint64_t result = qword_1EA567AB8;
  if (!qword_1EA567AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567AB8);
  }
  return result;
}

unint64_t sub_1C8D832A4()
{
  unint64_t result = qword_1EA567AC0;
  if (!qword_1EA567AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA567AC0);
  }
  return result;
}

ValueMetadata *type metadata accessor for BinaryDelimited()
{
  return &type metadata for BinaryDelimited;
}

unsigned char *storeEnumTagSinglePayload for BinaryDelimited.Error(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C8D833D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BinaryDelimited.Error()
{
  return &type metadata for BinaryDelimited.Error;
}

SiriOntologyProtobuf::JSONDecodingOptions __swiftcall JSONDecodingOptions.init()()
{
  *(void *)uint64_t v0 = 100;
  *(unsigned char *)(v0 + 8) = 0;
  return result;
}

uint64_t JSONDecodingOptions.messageDepthLimit.getter()
{
  return *(void *)v0;
}

uint64_t JSONDecodingOptions.messageDepthLimit.setter(uint64_t result)
{
  void *v1 = result;
  return result;
}

uint64_t (*JSONDecodingOptions.messageDepthLimit.modify())(void, void, void)
{
  return nullsub_1;
}

uint64_t JSONDecodingOptions.ignoreUnknownFields.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t JSONDecodingOptions.ignoreUnknownFields.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 8) = result;
  return result;
}

uint64_t (*JSONDecodingOptions.ignoreUnknownFields.modify())(void, void, void)
{
  return nullsub_1;
}

ValueMetadata *type metadata accessor for JSONDecodingOptions()
{
  return &type metadata for JSONDecodingOptions;
}

uint64_t _NameMap.init(dictionaryLiteral:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for InternPool();
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = MEMORY[0x1E4FBC860];
  uint64_t v117 = v3;
  *(void *)(v3 + 16) = MEMORY[0x1E4FBC860];
  unint64_t v5 = sub_1C8D841F8(v4);
  unint64_t v126 = (void *)sub_1C8D84418(v4);
  unsigned int v6 = (void *)sub_1C8D84418(v4);
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    char v124 = (void *)v5;
    unint64_t v8 = 0;
    uint64_t v9 = a1 + 32;
    uint64_t v119 = *(void *)(a1 + 16);
    uint64_t v120 = a1 + 32;
    uint64_t v118 = a1;
    while (2)
    {
      if (v8 >= *(void *)(a1 + 16)) {
        goto LABEL_88;
      }
      uint64_t v10 = v9 + 56 * v8;
      uint64_t v11 = *(void *)(v10 + 8);
      uint64_t v127 = *(void *)v10;
      uint64_t v12 = *(void *)(v10 + 16);
      unint64_t v13 = *(void *)(v10 + 24);
      uint64_t v14 = *(void *)(v10 + 32);
      uint64_t v15 = *(void *)(v10 + 40);
      int v16 = *(unsigned __int8 *)(v10 + 48);
      ++v8;
      switch(v13 >> 62)
      {
        case 1uLL:
          if (v13) {
            goto LABEL_89;
          }
          if (!v11) {
            goto LABEL_94;
          }
          *(void *)&long long v132 = *(void *)(v10 + 8);
          *((void *)&v132 + 1) = v12;
          uint64_t v133 = v11;
          uint64_t v134 = v12;
          char v135 = v13;
          char v136 = 1;
          uint64_t v66 = a1;
          uint64_t v67 = v12;
          sub_1C8D886A0();
          uint64_t v68 = sub_1C8D8489C();
          unint64_t v70 = v69;
          swift_bridgeObjectRelease();
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v71 = sub_1C8D849D0(v68, v70);
          uint64_t v73 = v72;
          swift_bridgeObjectRelease();
          swift_release();
          *(void *)&long long v128 = v71;
          *((void *)&v128 + 1) = v73;
          uint64_t v129 = v68;
          unint64_t v130 = v70;
          __int16 v131 = 0;
          *(void *)&long long v137 = v71;
          *((void *)&v137 + 1) = v73;
          uint64_t v138 = v68;
          unint64_t v139 = v70;
          __int16 v140 = 0;
          uint64_t v141 = v11;
          uint64_t v142 = v67;
          uint64_t v143 = v11;
          uint64_t v144 = v67;
          a1 = v66;
          uint64_t v7 = v119;
          char v145 = v13;
          char v146 = 1;
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          sub_1C8D86044(&v137, v127, isUniquelyReferenced_nonNull_native);
          swift_bridgeObjectRelease();
          char v75 = swift_isUniquelyReferenced_nonNull_native();
          sub_1C8D85ED4(v127, &v132, v75);
          swift_bridgeObjectRelease();
          char v76 = swift_isUniquelyReferenced_nonNull_native();
          sub_1C8D85ED4(v127, &v132, v76);
          swift_bridgeObjectRelease();
          char v77 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v9 = v120;
          sub_1C8D85ED4(v127, &v128, v77);
          swift_bridgeObjectRelease();
          goto LABEL_47;
        case 2uLL:
          if (!v14) {
            goto LABEL_90;
          }
          *(void *)&long long v147 = *(void *)(v10 + 32);
          *((void *)&v147 + 1) = v15;
          uint64_t v148 = v14;
          uint64_t v149 = v15;
          char v150 = v16;
          char v151 = 1;
          if ((v16 | v13)) {
            goto LABEL_96;
          }
          if (!v11) {
            goto LABEL_98;
          }
          *(void *)&long long v152 = v11;
          *((void *)&v152 + 1) = v12;
          uint64_t v153 = v11;
          uint64_t v154 = v12;
          char v155 = v13;
          char v156 = 1;
          *(void *)&long long v157 = v14;
          *((void *)&v157 + 1) = v15;
          uint64_t v158 = v14;
          uint64_t v159 = v15;
          __int16 v160 = v16 | 0x100;
          uint64_t v161 = v11;
          uint64_t v162 = v12;
          uint64_t v163 = v11;
          uint64_t v164 = v12;
          char v165 = v13;
          char v166 = 1;
          char v27 = swift_isUniquelyReferenced_nonNull_native();
          sub_1C8D86044(&v157, v127, v27);
          swift_bridgeObjectRelease();
          char v28 = swift_isUniquelyReferenced_nonNull_native();
          sub_1C8D85ED4(v127, &v152, v28);
          swift_bridgeObjectRelease();
          char v29 = swift_isUniquelyReferenced_nonNull_native();
          sub_1C8D85ED4(v127, &v152, v29);
          swift_bridgeObjectRelease();
          char v30 = swift_isUniquelyReferenced_nonNull_native();
          sub_1C8D85ED4(v127, &v147, v30);
LABEL_47:
          swift_bridgeObjectRelease();
          goto LABEL_76;
        case 3uLL:
          if (v13) {
            goto LABEL_91;
          }
          if (!v11) {
            goto LABEL_93;
          }
          *(void *)&long long v167 = *(void *)(v10 + 8);
          *((void *)&v167 + 1) = v12;
          uint64_t v168 = v11;
          uint64_t v169 = v12;
          char v170 = v13;
          char v171 = 1;
          *(void *)&long long v172 = v11;
          *((void *)&v172 + 1) = v12;
          uint64_t v173 = v11;
          uint64_t v174 = v12;
          __int16 v175 = v13 | 0x100;
          uint64_t v176 = v11;
          uint64_t v177 = v12;
          uint64_t v178 = v11;
          uint64_t v179 = v12;
          char v180 = v13;
          char v181 = 1;
          uint64_t v125 = v14;
          uint64_t v31 = v12;
          sub_1C8D861E4(v11, v12, v13);
          swift_bridgeObjectRetain();
          char v32 = swift_isUniquelyReferenced_nonNull_native();
          sub_1C8D86044(&v172, v127, v32);
          swift_bridgeObjectRelease();
          char v33 = swift_isUniquelyReferenced_nonNull_native();
          sub_1C8D85ED4(v127, &v167, v33);
          swift_bridgeObjectRelease();
          char v34 = swift_isUniquelyReferenced_nonNull_native();
          sub_1C8D85ED4(v127, &v167, v34);
          swift_bridgeObjectRelease();
          unint64_t v35 = v13;
          uint64_t v36 = *(void *)(v125 + 16);
          if (v36)
          {
            uint64_t v115 = v11;
            unint64_t v121 = v8;
            unint64_t v123 = v35;
            uint64_t v116 = v31;
            uint64_t v37 = (unsigned char *)(v125 + 48);
            while (1)
            {
              char v38 = *v37;
              if (*v37)
              {
                __break(1u);
LABEL_83:
                __break(1u);
LABEL_84:
                __break(1u);
LABEL_85:
                __break(1u);
LABEL_86:
                __break(1u);
LABEL_87:
                __break(1u);
LABEL_88:
                __break(1u);
LABEL_89:
                __break(1u);
LABEL_90:
                __break(1u);
LABEL_91:
                __break(1u);
LABEL_92:
                __break(1u);
LABEL_93:
                __break(1u);
LABEL_94:
                __break(1u);
LABEL_95:
                __break(1u);
LABEL_96:
                __break(1u);
LABEL_97:
                __break(1u);
LABEL_98:
                __break(1u);
LABEL_99:
                __break(1u);
LABEL_100:
                __break(1u);
LABEL_101:
                __break(1u);
LABEL_102:
                __break(1u);
LABEL_103:
                __break(1u);
LABEL_104:
                sub_1C8D887E0();
                __break(1u);
LABEL_105:
                sub_1C8D887E0();
                __break(1u);
                JUMPOUT(0x1C8D840B8);
              }
              uint64_t v39 = (unsigned __int8 *)*((void *)v37 - 2);
              if (!v39) {
                goto LABEL_83;
              }
              uint64_t v40 = (unsigned __int8 *)*((void *)v37 - 1);
              char v41 = swift_isUniquelyReferenced_nonNull_native();
              unint64_t v43 = sub_1C8CA5D58(v39, v40);
              uint64_t v44 = v126[2];
              BOOL v45 = (v42 & 1) == 0;
              uint64_t v46 = v44 + v45;
              if (__OFADD__(v44, v45)) {
                goto LABEL_84;
              }
              char v47 = v42;
              if (v126[3] >= v46)
              {
                if ((v41 & 1) == 0) {
                  sub_1C8D8693C();
                }
              }
              else
              {
                sub_1C8D84D78(v46, v41);
                unint64_t v48 = sub_1C8CA5D58(v39, v40);
                if ((v47 & 1) != (v49 & 1)) {
                  goto LABEL_104;
                }
                unint64_t v43 = v48;
              }
              if (v47)
              {
                *(void *)(v126[7] + 8 * v43) = v127;
              }
              else
              {
                v126[(v43 >> 6) + 8] |= 1 << v43;
                uint64_t v50 = v126[6] + 40 * v43;
                *(void *)uint64_t v50 = v39;
                *(void *)(v50 + 8) = v40;
                *(void *)(v50 + 16) = v39;
                *(void *)(v50 + 24) = v40;
                *(unsigned char *)(v50 + 32) = v38;
                *(unsigned char *)(v50 + 33) = 1;
                *(void *)(v126[7] + 8 * v43) = v127;
                uint64_t v51 = v126[2];
                BOOL v52 = __OFADD__(v51, 1);
                uint64_t v53 = v51 + 1;
                if (v52) {
                  goto LABEL_86;
                }
                v126[2] = v53;
              }
              swift_bridgeObjectRelease();
              char v54 = swift_isUniquelyReferenced_nonNull_native();
              unint64_t v56 = sub_1C8CA5D58(v39, v40);
              uint64_t v57 = v6[2];
              BOOL v58 = (v55 & 1) == 0;
              uint64_t v59 = v57 + v58;
              if (__OFADD__(v57, v58)) {
                goto LABEL_85;
              }
              char v60 = v55;
              if (v6[3] >= v59)
              {
                if (v54)
                {
                  if ((v55 & 1) == 0) {
                    goto LABEL_40;
                  }
                }
                else
                {
                  sub_1C8D8693C();
                  if ((v60 & 1) == 0) {
                    goto LABEL_40;
                  }
                }
              }
              else
              {
                sub_1C8D84D78(v59, v54);
                unint64_t v61 = sub_1C8CA5D58(v39, v40);
                if ((v60 & 1) != (v62 & 1)) {
                  goto LABEL_104;
                }
                unint64_t v56 = v61;
                if ((v60 & 1) == 0)
                {
LABEL_40:
                  v6[(v56 >> 6) + 8] |= 1 << v56;
                  uint64_t v63 = v6[6] + 40 * v56;
                  *(void *)uint64_t v63 = v39;
                  *(void *)(v63 + 8) = v40;
                  *(void *)(v63 + 16) = v39;
                  *(void *)(v63 + 24) = v40;
                  *(unsigned char *)(v63 + 32) = v38;
                  *(unsigned char *)(v63 + 33) = 1;
                  *(void *)(v6[7] + 8 * v56) = v127;
                  uint64_t v64 = v6[2];
                  BOOL v52 = __OFADD__(v64, 1);
                  uint64_t v65 = v64 + 1;
                  if (v52) {
                    goto LABEL_87;
                  }
                  _OWORD v6[2] = v65;
                  goto LABEL_20;
                }
              }
              *(void *)(v6[7] + 8 * v56) = v127;
LABEL_20:
              v37 += 24;
              swift_bridgeObjectRelease();
              if (!--v36)
              {
                sub_1C8D87410(v115, v116, v123);
                sub_1C8D87410(v115, v116, v123);
                a1 = v118;
                uint64_t v7 = v119;
                uint64_t v9 = v120;
                unint64_t v8 = v121;
                goto LABEL_76;
              }
            }
          }
          sub_1C8D87410(v11, v31, v35);
          sub_1C8D87410(v11, v31, v35);
          a1 = v118;
          uint64_t v7 = v119;
          uint64_t v9 = v120;
          if (v8 != v119) {
            continue;
          }
LABEL_79:
          uint64_t result = swift_bridgeObjectRelease();
          unint64_t v5 = (unint64_t)v124;
          break;
        default:
          if (v13) {
            goto LABEL_92;
          }
          if (!v11) {
            goto LABEL_95;
          }
          uint64_t v17 = *(unsigned __int8 **)(v10 + 16);
          char v18 = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v20 = sub_1C8CA5D14(v127);
          uint64_t v21 = v124[2];
          BOOL v22 = (v19 & 1) == 0;
          uint64_t v23 = v21 + v22;
          if (__OFADD__(v21, v22)) {
            goto LABEL_97;
          }
          char v24 = v19;
          if (v124[3] >= v23)
          {
            if ((v18 & 1) == 0) {
              sub_1C8D86B08();
            }
          }
          else
          {
            sub_1C8D84FAC(v23, v18);
            unint64_t v25 = sub_1C8CA5D14(v127);
            if ((v24 & 1) != (v26 & 1)) {
              goto LABEL_105;
            }
            unint64_t v20 = v25;
          }
          __int16 v78 = v13 | 0x100;
          unint64_t v122 = v8;
          if (v24)
          {
            uint64_t v79 = v124[7] + 80 * v20;
            uint64_t v80 = *(void *)(v79 + 56);
            uint64_t v81 = *(void *)(v79 + 64);
            char v82 = *(unsigned char *)(v79 + 73);
            uint64_t v83 = *(unsigned __int8 *)(v79 + 72);
            sub_1C8CB554C(*(void *)v79, *(void *)(v79 + 8), *(void *)(v79 + 16), *(void *)(v79 + 24), *(unsigned __int16 *)(v79 + 32));
            sub_1C8CA6AF4(v80, v81, v83, v82);
            *(void *)uint64_t v79 = v11;
            *(void *)(v79 + 8) = v17;
            uint64_t v84 = v17;
            *(void *)(v79 + 16) = v11;
            *(void *)(v79 + 24) = v17;
            *(_WORD *)(v79 + 32) = v78;
            uint64_t v85 = (unsigned __int8 *)v11;
            *(void *)(v79 + 40) = v11;
            *(void *)(v79 + 48) = v17;
            *(void *)(v79 + 56) = v11;
            *(void *)(v79 + 64) = v17;
            *(unsigned char *)(v79 + 72) = v13;
            *(unsigned char *)(v79 + 73) = 1;
          }
          else
          {
            v124[(v20 >> 6) + 8] |= 1 << v20;
            *(void *)(v124[6] + 8 * v20) = v127;
            uint64_t v86 = v124[7] + 80 * v20;
            *(void *)uint64_t v86 = v11;
            *(void *)(v86 + 8) = v17;
            *(void *)(v86 + 16) = v11;
            *(void *)(v86 + 24) = v17;
            *(_WORD *)(v86 + 32) = v78;
            *(void *)(v86 + 40) = v11;
            *(void *)(v86 + 48) = v17;
            *(void *)(v86 + 56) = v11;
            *(void *)(v86 + 64) = v17;
            *(unsigned char *)(v86 + 72) = v13;
            *(unsigned char *)(v86 + 73) = 1;
            uint64_t v87 = v124[2];
            BOOL v52 = __OFADD__(v87, 1);
            uint64_t v88 = v87 + 1;
            if (v52) {
              goto LABEL_101;
            }
            uint64_t v85 = (unsigned __int8 *)v11;
            v124[2] = v88;
            uint64_t v84 = v17;
          }
          swift_bridgeObjectRelease();
          char v89 = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v91 = sub_1C8CA5D58(v85, v84);
          uint64_t v92 = v126[2];
          BOOL v93 = (v90 & 1) == 0;
          uint64_t v94 = v92 + v93;
          if (__OFADD__(v92, v93)) {
            goto LABEL_99;
          }
          char v95 = v90;
          if (v126[3] >= v94)
          {
            unint64_t v8 = v122;
            if ((v89 & 1) == 0) {
              sub_1C8D8693C();
            }
          }
          else
          {
            sub_1C8D84D78(v94, v89);
            unint64_t v96 = sub_1C8CA5D58(v85, v17);
            unint64_t v8 = v122;
            if ((v95 & 1) != (v97 & 1)) {
              goto LABEL_104;
            }
            unint64_t v91 = v96;
          }
          if (v95)
          {
            *(void *)(v126[7] + 8 * v91) = v127;
          }
          else
          {
            v126[(v91 >> 6) + 8] |= 1 << v91;
            uint64_t v98 = v126[6] + 40 * v91;
            *(void *)uint64_t v98 = v85;
            *(void *)(v98 + 8) = v17;
            *(void *)(v98 + 16) = v85;
            *(void *)(v98 + 24) = v17;
            *(unsigned char *)(v98 + 32) = v13;
            *(unsigned char *)(v98 + 33) = 1;
            *(void *)(v126[7] + 8 * v91) = v127;
            uint64_t v99 = v126[2];
            BOOL v52 = __OFADD__(v99, 1);
            uint64_t v100 = v99 + 1;
            if (v52) {
              goto LABEL_102;
            }
            v126[2] = v100;
          }
          swift_bridgeObjectRelease();
          char v101 = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v103 = sub_1C8CA5D58(v85, v17);
          uint64_t v104 = v6[2];
          BOOL v105 = (v102 & 1) == 0;
          uint64_t v106 = v104 + v105;
          if (__OFADD__(v104, v105)) {
            goto LABEL_100;
          }
          char v107 = v102;
          if (v6[3] >= v106)
          {
            if ((v101 & 1) == 0) {
              sub_1C8D8693C();
            }
          }
          else
          {
            sub_1C8D84D78(v106, v101);
            unint64_t v108 = sub_1C8CA5D58(v85, v17);
            if ((v107 & 1) != (v109 & 1)) {
              goto LABEL_104;
            }
            unint64_t v103 = v108;
          }
          uint64_t v9 = v120;
          if (v107)
          {
            *(void *)(v6[7] + 8 * v103) = v127;
          }
          else
          {
            v6[(v103 >> 6) + 8] |= 1 << v103;
            uint64_t v110 = v6[6] + 40 * v103;
            *(void *)uint64_t v110 = v85;
            *(void *)(v110 + 8) = v17;
            *(void *)(v110 + 16) = v85;
            *(void *)(v110 + 24) = v17;
            *(unsigned char *)(v110 + 32) = v13;
            *(unsigned char *)(v110 + 33) = 1;
            *(void *)(v6[7] + 8 * v103) = v127;
            uint64_t v111 = v6[2];
            BOOL v52 = __OFADD__(v111, 1);
            uint64_t v112 = v111 + 1;
            if (v52) {
              goto LABEL_103;
            }
            _OWORD v6[2] = v112;
          }
          swift_bridgeObjectRelease();
          a1 = v118;
          uint64_t v7 = v119;
LABEL_76:
          if (v8 == v7) {
            goto LABEL_79;
          }
          continue;
      }
      break;
    }
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
  }
  *a2 = v117;
  a2[1] = v5;
  a2[2] = (uint64_t)v126;
  a2[3] = (uint64_t)v6;
  return result;
}

unint64_t sub_1C8D840C8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_10;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567AC8);
  unint64_t result = sub_1C8D88780();
  uint64_t v3 = (void *)result;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = 0;
  unsigned int v6 = (unsigned char *)(a1 + 56);
  while (1)
  {
    uint64_t v7 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      break;
    }
    uint64_t v8 = *((void *)v6 - 3);
    long long v15 = *((_OWORD *)v6 - 1);
    char v9 = *v6;
    unint64_t result = sub_1C8CA5D14(v8);
    if (v10) {
      goto LABEL_12;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v8;
    uint64_t v11 = v3[7] + 24 * result;
    *(_OWORD *)uint64_t v11 = v15;
    *(unsigned char *)(v11 + 16) = v9;
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_13;
    }
    v6 += 32;
    char v3[2] = v14;
    ++v5;
    if (v7 == v4) {
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
LABEL_13:
  __break(1u);
  return result;
}

unint64_t sub_1C8D841F8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
LABEL_11:
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_13;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2D00);
  uint64_t v2 = sub_1C8D88780();
  uint64_t v3 = (void *)v2;
  uint64_t v29 = *(void *)(a1 + 16);
  if (!v29)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v28 = v2 + 64;
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v9 = *(unsigned __int16 *)(a1 + 72);
  long long v10 = *(_OWORD *)(a1 + 80);
  uint64_t v12 = *(void *)(a1 + 96);
  uint64_t v11 = *(void *)(a1 + 104);
  uint64_t v13 = *(unsigned __int8 *)(a1 + 112);
  uint64_t v14 = (unsigned __int8 *)(a1 + 201);
  unsigned __int8 v15 = *(unsigned char *)(a1 + 113);
  uint64_t v16 = 1;
  unsigned __int8 v35 = v15;
  while (1)
  {
    if (v35 == 255)
    {
      sub_1C8CB5524(v4, v6, v7, v8, v9);
      sub_1C8CA6050(v12, v11, v13, v15 & 1);
      goto LABEL_13;
    }
    long long v32 = v10;
    unsigned __int8 v30 = v15;
    uint64_t v31 = v16;
    uint64_t v17 = v9;
    unsigned int v34 = v13;
    uint64_t v18 = v8;
    uint64_t v33 = v11;
    uint64_t v19 = v12;
    uint64_t v20 = v4;
    unint64_t result = sub_1C8CA5D14(v5);
    if (v22) {
      break;
    }
    *(void *)(v28 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v5;
    uint64_t v23 = v3[7] + 80 * result;
    unint64_t result = v20;
    *(void *)uint64_t v23 = v20;
    *(void *)(v23 + 8) = v6;
    *(void *)(v23 + 16) = v7;
    *(void *)(v23 + 24) = v18;
    *(_WORD *)(v23 + 32) = v17;
    *(_OWORD *)(v23 + 40) = v32;
    *(void *)(v23 + 56) = v19;
    *(void *)(v23 + 64) = v33;
    *(unsigned char *)(v23 + 72) = v34;
    *(unsigned char *)(v23 + 73) = v35 & 1;
    uint64_t v24 = v3[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25) {
      goto LABEL_15;
    }
    char v3[2] = v26;
    sub_1C8CB5524(v20, v6, v7, v18, v17);
    sub_1C8CA6050(v19, v33, v34, v30 & 1);
    if (v29 == v31) {
      goto LABEL_13;
    }
    uint64_t v5 = *(void *)(v14 - 81);
    uint64_t v4 = *(void *)(v14 - 73);
    uint64_t v6 = *(void *)(v14 - 65);
    uint64_t v7 = *(void *)(v14 - 57);
    uint64_t v8 = *(void *)(v14 - 49);
    uint64_t v9 = *(unsigned __int16 *)(v14 - 41);
    long long v10 = *(_OWORD *)(v14 - 33);
    uint64_t v12 = *(void *)(v14 - 17);
    uint64_t v11 = *(void *)(v14 - 9);
    uint64_t v13 = *(v14 - 1);
    unsigned __int8 v27 = *v14;
    v14 += 88;
    unsigned __int8 v15 = v27;
    unsigned __int8 v35 = v27;
    uint64_t v16 = v31 + 1;
    if (__OFADD__(v31, 1))
    {
      __break(1u);
      goto LABEL_11;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
  return result;
}

unint64_t sub_1C8D84418(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
LABEL_11:
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_13;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CF8);
  uint64_t v2 = sub_1C8D88780();
  uint64_t v3 = (void *)v2;
  uint64_t v22 = *(void *)(a1 + 16);
  if (!v22)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = *(unsigned __int8 **)(a1 + 32);
  uint64_t v4 = *(unsigned __int8 **)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  uint64_t v8 = *(unsigned __int8 *)(a1 + 64);
  unsigned __int8 v9 = *(unsigned char *)(a1 + 65);
  uint64_t v21 = v2 + 64;
  uint64_t v10 = *(void *)(a1 + 72);
  unsigned __int8 v24 = v9;
  uint64_t v11 = (void *)(a1 + 120);
  uint64_t v12 = 1;
  while (1)
  {
    if (v24 == 255)
    {
      sub_1C8CA6050(v6, v7, v8, v9 & 1);
      goto LABEL_13;
    }
    uint64_t v23 = v12;
    uint64_t v13 = v4;
    unint64_t result = sub_1C8CA5D58(v5, v4);
    if (v15) {
      break;
    }
    *(void *)(v21 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v16 = v3[6] + 40 * result;
    *(void *)uint64_t v16 = v5;
    *(void *)(v16 + 8) = v13;
    *(void *)(v16 + 16) = v6;
    *(void *)(v16 + 24) = v7;
    *(unsigned char *)(v16 + 32) = v8;
    *(unsigned char *)(v16 + 33) = v24 & 1;
    *(void *)(v3[7] + 8 * result) = v10;
    uint64_t v17 = v3[2];
    BOOL v18 = __OFADD__(v17, 1);
    uint64_t v19 = v17 + 1;
    if (v18) {
      goto LABEL_15;
    }
    char v3[2] = v19;
    sub_1C8CA6050(v6, v7, v8, v9 & 1);
    if (v22 == v23) {
      goto LABEL_13;
    }
    uint64_t v5 = (unsigned __int8 *)*(v11 - 5);
    uint64_t v4 = (unsigned __int8 *)*(v11 - 4);
    uint64_t v6 = *(v11 - 3);
    uint64_t v7 = *(v11 - 2);
    uint64_t v8 = *((unsigned __int8 *)v11 - 8);
    unsigned __int8 v9 = *((unsigned char *)v11 - 7);
    uint64_t v20 = *v11;
    v11 += 6;
    uint64_t v10 = v20;
    unsigned __int8 v24 = v9;
    uint64_t v12 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
      goto LABEL_11;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
  return result;
}

unint64_t sub_1C8D845B8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567AE0);
  uint64_t v2 = (void *)sub_1C8D88780();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 64);
  while (1)
  {
    uint64_t v5 = *(v4 - 4);
    uint64_t v6 = *(v4 - 3);
    uint64_t v7 = *(v4 - 2);
    unint64_t v8 = *(v4 - 1);
    uint64_t v9 = *v4;
    swift_bridgeObjectRetain();
    sub_1C8CA3CF8(v7, v8);
    swift_retain();
    unint64_t result = sub_1C8CA5C9C(v5, v6);
    if (v11) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v12 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v12 = v5;
    v12[1] = v6;
    uint64_t v13 = (uint64_t *)(v2[7] + 24 * result);
    *uint64_t v13 = v7;
    v13[1] = v8;
    void v13[2] = v9;
    uint64_t v14 = v2[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    v2[2] = v16;
    v4 += 5;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C8D84700(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567AD8);
  uint64_t v2 = (void *)sub_1C8D88780();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (_OWORD *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    long long v13 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1C8CA5C9C(v5, v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v9 = v5;
    v9[1] = v6;
    *(_OWORD *)(v2[7] + 16 * result) = v13;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t _NameMap.init()@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for InternPool();
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = MEMORY[0x1E4FBC860];
  *(void *)(v2 + 16) = MEMORY[0x1E4FBC860];
  unint64_t v4 = sub_1C8D841F8(v3);
  unint64_t v5 = sub_1C8D84418(v3);
  unint64_t result = sub_1C8D84418(v3);
  *a1 = v2;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = result;
  return result;
}

uint64_t sub_1C8D8489C()
{
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_1C8D88410();
  uint64_t v2 = v1;
  if (v1)
  {
    uint64_t v3 = v0;
    char v4 = 0;
    do
    {
      if (v3 == 95 && v2 == 0xE100000000000000 || (sub_1C8D887C0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        char v4 = 1;
      }
      else
      {
        if (v4)
        {
          sub_1C8D88370();
          swift_bridgeObjectRelease();
        }
        sub_1C8D88400();
        swift_bridgeObjectRelease();
        char v4 = 0;
      }
      uint64_t v3 = sub_1C8D88410();
      uint64_t v2 = v5;
    }
    while (v5);
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1C8D849D0(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x1000000000000000) != 0)
  {
    sub_1C8D88420();
    uint64_t v6 = swift_slowAlloc();
    sub_1C8D88420();
  }
  else
  {
    uint64_t v6 = swift_slowAlloc();
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C8D88690();
  if (v8)
  {
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    if ((a2 & 0x1000000000000000) != 0)
    {
      uint64_t v5 = sub_1C8D88420();
    }
    else if ((a2 & 0x2000000000000000) == 0)
    {
      uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v9 = *(char **)(v2 + 16);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v2 + 16) = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v9 = sub_1C8D5EC3C(0, *((void *)v9 + 2) + 1, 1, v9);
      *(void *)(v2 + 16) = v9;
    }
    unint64_t v12 = *((void *)v9 + 2);
    unint64_t v11 = *((void *)v9 + 3);
    if (v12 >= v11 >> 1)
    {
      uint64_t v9 = sub_1C8D5EC3C((char *)(v11 > 1), v12 + 1, 1, v9);
      *(void *)(v2 + 16) = v9;
    }
    *((void *)v9 + 2) = v12 + 1;
    long long v13 = &v9[16 * v12];
    *((void *)v13 + 4) = v6;
    *((void *)v13 + 5) = v5;
    return v6;
  }
  return result;
}

uint64_t sub_1C8D84B20()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = 32;
    do
    {
      uint64_t v4 = *(void *)(v1 + v3);
      if (v4) {
        MEMORY[0x1CB773830](v4, -1, -1);
      }
      v3 += 16;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186488](v0, 24, 7);
}

uint64_t sub_1C8D84BB4(unsigned __int8 *a1, uint64_t a2, unsigned __int8 *a3, uint64_t a4)
{
  if (a3) {
    uint64_t v4 = &a3[a4];
  }
  else {
    uint64_t v4 = 0;
  }
  if (a1) {
    uint64_t v5 = &a1[a2];
  }
  else {
    uint64_t v5 = 0;
  }
  do
  {
    if (!a3 || a3 == v4)
    {
      int v7 = 0;
      char v6 = 1;
      if (!a1) {
        goto LABEL_15;
      }
    }
    else
    {
      char v6 = 0;
      int v8 = *a3++;
      int v7 = v8;
      if (!a1) {
        goto LABEL_15;
      }
    }
    if (a1 != v5)
    {
      uint64_t v9 = 0;
      int v11 = *a1++;
      int v10 = v11;
      if (v6) {
        return v9;
      }
      goto LABEL_16;
    }
LABEL_15:
    int v10 = 0;
    uint64_t v9 = 1;
    if (v6) {
      return v9;
    }
LABEL_16:
    if (v7 != v10) {
      LODWORD(v9) = 1;
    }
  }
  while (v9 != 1);
  return 0;
}

uint64_t sub_1C8D84C34()
{
  return sub_1C8D87E2C(*v0, v0[1]);
}

uint64_t sub_1C8D84C3C()
{
  uint64_t v1 = *v0;
  if (*v0)
  {
    for (uint64_t i = v0[1]; i; --i)
    {
      ++v1;
      uint64_t result = sub_1C8D88860();
    }
  }
  return result;
}

uint64_t sub_1C8D84C88()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  sub_1C8D88840();
  if (v1) {
    BOOL v3 = v2 == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (!v3)
  {
    do
    {
      ++v1;
      sub_1C8D88860();
      --v2;
    }
    while (v2);
  }
  return sub_1C8D888A0();
}

uint64_t sub_1C8D84CE8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (*(unsigned char *)(v0 + 33)) {
    return sub_1C8D886A0();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C8D84D44(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3 == *(void *)(a2 + 8)) {
    return sub_1C8D84BB4(*(unsigned __int8 **)a2, v3, *(unsigned __int8 **)a1, v3);
  }
  else {
    return 0;
  }
}

void sub_1C8D84D78(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CF8);
  unsigned __int8 v27 = (void *)sub_1C8D88770();
  if (*(void *)(v5 + 16))
  {
    uint64_t v6 = 1 << *(unsigned char *)(v5 + 32);
    unsigned __int8 v24 = v2;
    BOOL v25 = (void *)(v5 + 64);
    uint64_t v7 = -1;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    unint64_t v8 = v7 & *(void *)(v5 + 64);
    int64_t v9 = (unint64_t)(v6 + 63) >> 6;
    swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v11 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v12 = v11 | (v10 << 6);
      }
      else
      {
        int64_t v13 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return;
        }
        if (v13 >= v9) {
          goto LABEL_22;
        }
        unint64_t v14 = v25[v13];
        ++v10;
        if (!v14)
        {
          int64_t v10 = v13 + 1;
          if (v13 + 1 >= v9) {
            goto LABEL_22;
          }
          unint64_t v14 = v25[v10];
          if (!v14)
          {
            int64_t v15 = v13 + 2;
            if (v15 >= v9)
            {
LABEL_22:
              swift_release();
              uint64_t v3 = v24;
              if (a2)
              {
                uint64_t v23 = 1 << *(unsigned char *)(v5 + 32);
                if (v23 > 63) {
                  bzero(v25, ((unint64_t)(v23 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *BOOL v25 = -1 << v23;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v14 = v25[v15];
            if (!v14)
            {
              while (1)
              {
                int64_t v10 = v15 + 1;
                if (__OFADD__(v15, 1)) {
                  goto LABEL_29;
                }
                if (v10 >= v9) {
                  goto LABEL_22;
                }
                unint64_t v14 = v25[v10];
                ++v15;
                if (v14) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v10 = v15;
          }
        }
LABEL_19:
        unint64_t v8 = (v14 - 1) & v14;
        unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
      }
      uint64_t v16 = *(void *)(v5 + 48) + 40 * v12;
      long long v17 = *(_OWORD *)v16;
      uint64_t v19 = *(void *)(v16 + 16);
      uint64_t v18 = *(void *)(v16 + 24);
      char v20 = *(unsigned char *)(v16 + 32);
      char v21 = *(unsigned char *)(v16 + 33);
      uint64_t v22 = *(void *)(*(void *)(v5 + 56) + 8 * v12);
      if ((a2 & 1) == 0)
      {
        long long v26 = *(_OWORD *)v16;
        sub_1C8CA6050(*(void *)(v16 + 16), *(void *)(v16 + 24), *(unsigned __int8 *)(v16 + 32), *(unsigned char *)(v16 + 33));
        long long v17 = v26;
      }
      long long v28 = v17;
      uint64_t v29 = v19;
      uint64_t v30 = v18;
      char v31 = v20;
      char v32 = v21;
      sub_1C8D8679C((uint64_t *)&v28, v22, v27);
    }
  }
  swift_release();
  *uint64_t v3 = v27;
}

uint64_t sub_1C8D84FAC(uint64_t a1, char a2)
{
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2D00);
  char v42 = a2;
  uint64_t result = sub_1C8D88770();
  uint64_t v43 = result;
  if (*(void *)(v4 + 16))
  {
    int64_t v6 = 0;
    uint64_t v40 = (void *)(v4 + 64);
    uint64_t v41 = v4;
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v4 + 64);
    int64_t v39 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v10 = result + 64;
    while (1)
    {
      if (v9)
      {
        unint64_t v16 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        int64_t v44 = v6;
        unint64_t v17 = v16 | (v6 << 6);
      }
      else
      {
        int64_t v18 = v6 + 1;
        if (__OFADD__(v6, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v40;
        if (v18 >= v39) {
          goto LABEL_33;
        }
        unint64_t v19 = v40[v18];
        int64_t v20 = v6 + 1;
        if (!v19)
        {
          int64_t v20 = v18 + 1;
          if (v18 + 1 >= v39) {
            goto LABEL_33;
          }
          unint64_t v19 = v40[v20];
          if (!v19)
          {
            int64_t v21 = v18 + 2;
            if (v21 >= v39)
            {
LABEL_33:
              if ((v42 & 1) == 0) {
                break;
              }
              uint64_t v35 = 1 << *(unsigned char *)(v4 + 32);
              if (v35 >= 64) {
                bzero(v40, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v40 = -1 << v35;
              }
              uint64_t v37 = v38;
              *(void *)(v4 + 16) = 0;
              uint64_t result = swift_release();
              uint64_t v36 = v43;
              goto LABEL_39;
            }
            unint64_t v19 = v40[v21];
            if (!v19)
            {
              while (1)
              {
                int64_t v20 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_41;
                }
                if (v20 >= v39) {
                  goto LABEL_33;
                }
                unint64_t v19 = v40[v20];
                ++v21;
                if (v19) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v20 = v21;
          }
        }
LABEL_30:
        unint64_t v9 = (v19 - 1) & v19;
        int64_t v44 = v20;
        unint64_t v17 = __clz(__rbit64(v19)) + (v20 << 6);
      }
      uint64_t v26 = *(void *)(*(void *)(v4 + 48) + 8 * v17);
      uint64_t v27 = *(void *)(v4 + 56) + 80 * v17;
      uint64_t v28 = *(void *)v27;
      uint64_t v29 = *(void *)(v27 + 8);
      uint64_t v30 = *(void *)(v27 + 16);
      uint64_t v31 = *(void *)(v27 + 24);
      uint64_t v32 = *(unsigned __int16 *)(v27 + 32);
      long long v45 = *(_OWORD *)(v27 + 40);
      uint64_t v33 = *(void *)(v27 + 64);
      uint64_t v47 = *(void *)(v27 + 56);
      uint64_t v34 = *(unsigned __int8 *)(v27 + 72);
      char v46 = *(unsigned char *)(v27 + 73);
      if ((v42 & 1) == 0)
      {
        sub_1C8CB5524(v28, v29, v30, v31, v32);
        sub_1C8CA6050(v47, v33, v34, v46);
      }
      uint64_t result = sub_1C8D88830();
      uint64_t v11 = -1 << *(unsigned char *)(v43 + 32);
      unint64_t v12 = result & ~v11;
      unint64_t v13 = v12 >> 6;
      if (((-1 << v12) & ~*(void *)(v10 + 8 * (v12 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v12) & ~*(void *)(v10 + 8 * (v12 >> 6)))) | v12 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v11) >> 6;
        do
        {
          if (++v13 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v24 = v13 == v23;
          if (v13 == v23) {
            unint64_t v13 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v10 + 8 * v13);
        }
        while (v25 == -1);
        unint64_t v14 = __clz(__rbit64(~v25)) + (v13 << 6);
      }
      *(void *)(v10 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(void *)(*(void *)(v43 + 48) + 8 * v14) = v26;
      uint64_t v15 = *(void *)(v43 + 56) + 80 * v14;
      *(void *)uint64_t v15 = v28;
      *(void *)(v15 + 8) = v29;
      *(void *)(v15 + 16) = v30;
      *(void *)(v15 + 24) = v31;
      *(_WORD *)(v15 + 32) = v32;
      *(_OWORD *)(v15 + 40) = v45;
      *(void *)(v15 + 56) = v47;
      *(void *)(v15 + 64) = v33;
      *(unsigned char *)(v15 + 72) = v34;
      *(unsigned char *)(v15 + 73) = v46;
      ++*(void *)(v43 + 16);
      uint64_t v4 = v41;
      int64_t v6 = v44;
    }
  }
  uint64_t result = swift_release();
  uint64_t v36 = v43;
  uint64_t v37 = v38;
LABEL_39:
  *uint64_t v37 = v36;
  return result;
}

uint64_t sub_1C8D85314(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567AE8);
  uint64_t result = sub_1C8D88770();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v30 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v8 << 6);
      }
      else
      {
        int64_t v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v17 >= v12) {
          goto LABEL_34;
        }
        unint64_t v18 = v30[v17];
        ++v8;
        if (!v18)
        {
          int64_t v8 = v17 + 1;
          if (v17 + 1 >= v12) {
            goto LABEL_34;
          }
          unint64_t v18 = v30[v8];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v12)
            {
LABEL_34:
              if (a2)
              {
                uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
                if (v29 >= 64) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v18 = v30[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v8 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v12) {
                  goto LABEL_34;
                }
                unint64_t v18 = v30[v8];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v19;
          }
        }
LABEL_21:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      uint64_t v20 = *(void *)(*(void *)(v5 + 48) + 8 * v16);
      int64_t v21 = (long long *)(*(void *)(v5 + 56) + 40 * v16);
      if (a2) {
        sub_1C8CA4528(v21, (uint64_t)v31);
      }
      else {
        sub_1C8CA425C((uint64_t)v21, (uint64_t)v31);
      }
      uint64_t result = sub_1C8D88830();
      uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v23) & ~*(void *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(void *)(*(void *)(v7 + 48) + 8 * v14) = v20;
      uint64_t result = sub_1C8CA4528(v31, *(void *)(v7 + 56) + 40 * v14);
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1C8D855DC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567AE0);
  char v40 = a2;
  uint64_t v6 = sub_1C8D88770();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    char v38 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37) {
          goto LABEL_33;
        }
        unint64_t v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v23 = v38[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v40)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
                if (v36 >= 64) {
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v38 = -1 << v36;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v23 = v38[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v30 = *v29;
      uint64_t v31 = v29[1];
      uint64_t v32 = (uint64_t *)(*(void *)(v5 + 56) + 24 * v21);
      uint64_t v34 = *v32;
      unint64_t v33 = v32[1];
      uint64_t v35 = v32[2];
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_1C8CA3CF8(v34, v33);
        swift_retain();
      }
      sub_1C8D88840();
      sub_1C8D883C0();
      uint64_t result = sub_1C8D888A0();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      *unint64_t v18 = v30;
      v18[1] = v31;
      int64_t v19 = (uint64_t *)(*(void *)(v7 + 56) + 24 * v17);
      *int64_t v19 = v34;
      v19[1] = v33;
      long long v19[2] = v35;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1C8D8590C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567AD8);
  char v38 = a2;
  uint64_t v6 = sub_1C8D88770();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v2;
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v11) {
      break;
    }
    int64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v37 + 8 * v23);
    ++v14;
    if (!v25)
    {
      int64_t v14 = v23 + 1;
      if (v23 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v37 + 8 * v14);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v36;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v14 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v37 + 8 * v14);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    long long v39 = *(_OWORD *)(*(void *)(v5 + 56) + v31);
    if ((v38 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1C8D88840();
    sub_1C8D883C0();
    uint64_t result = sub_1C8D888A0();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v17 == v28;
        if (v17 == v28) {
          unint64_t v17 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v12 + 8 * v17);
      }
      while (v30 == -1);
      unint64_t v18 = __clz(__rbit64(~v30)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 16 * v18;
    unint64_t v20 = (void *)(*(void *)(v7 + 48) + v19);
    *unint64_t v20 = v34;
    v20[1] = v33;
    *(_OWORD *)(*(void *)(v7 + 56) + v19) = v39;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  int64_t v24 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v24 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1C8D85C1C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567AD0);
  uint64_t result = sub_1C8D88770();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = -1 << v10;
    uint64_t v32 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33) {
          goto LABEL_33;
        }
        unint64_t v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v22 = v9[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if (a2)
              {
                if (v32 >= 64) {
                  bzero((void *)(v5 + 64), 8 * v33);
                }
                else {
                  *uint64_t v9 = v31;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v8 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v22 = v9[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = 8 * v20;
      uint64_t v29 = *(void *)(*(void *)(v5 + 48) + v28);
      uint64_t v30 = *(void *)(*(void *)(v5 + 56) + v28);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_1C8D88830();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = 8 * v17;
      *(void *)(*(void *)(v7 + 48) + v18) = v29;
      *(void *)(*(void *)(v7 + 56) + v18) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1C8D85ED4(uint64_t a1, long long *a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  uint64_t v9 = *(unsigned __int8 **)a2;
  uint64_t v10 = (unsigned __int8 *)*((void *)a2 + 1);
  unint64_t v12 = sub_1C8CA5D58(*(unsigned __int8 **)a2, v10);
  uint64_t v13 = *(void *)(v8 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v8 + 24);
  if (v17 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C8D8693C();
LABEL_7:
    uint64_t v18 = (void *)*v4;
    if (v16)
    {
LABEL_8:
      *(void *)(v18[7] + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1C8D84D78(result, a3 & 1);
  uint64_t result = sub_1C8CA5D58(v9, v10);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_16:
    uint64_t result = sub_1C8D887E0();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  uint64_t v18 = (void *)*v4;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v20 = v18[6] + 40 * v12;
  long long v21 = *a2;
  long long v22 = a2[1];
  *(_WORD *)(v20 + 32) = *((_WORD *)a2 + 16);
  *(_OWORD *)uint64_t v20 = v21;
  *(_OWORD *)(v20 + 16) = v22;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v23 = v18[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  void v18[2] = v25;
  sub_1C8CCC550((uint64_t)(a2 + 1), (uint64_t)v26);
  return sub_1C8D87E90((uint64_t)v26);
}

uint64_t sub_1C8D86044(_OWORD *a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1C8CA5D14(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 < result || (a3 & 1) == 0)
  {
    if (v15 < result || (a3 & 1) != 0)
    {
      sub_1C8D84FAC(result, a3 & 1);
      uint64_t result = sub_1C8CA5D14(a2);
      if ((v14 & 1) != (v18 & 1))
      {
LABEL_17:
        uint64_t result = sub_1C8D887E0();
        __break(1u);
        return result;
      }
      unint64_t v10 = result;
      char v16 = (void *)*v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
    uint64_t result = (uint64_t)sub_1C8D86B08();
  }
  char v16 = (void *)*v4;
  if ((v14 & 1) == 0)
  {
LABEL_13:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(void *)(v16[6] + 8 * v10) = a2;
    char v19 = (_OWORD *)(v16[7] + 80 * v10);
    *char v19 = *a1;
    long long v20 = a1[1];
    long long v21 = a1[2];
    long long v22 = a1[3];
    *(_OWORD *)((char *)v19 + 58) = *(_OWORD *)((char *)a1 + 58);
    long long v19[2] = v21;
    void v19[3] = v22;
    v19[1] = v20;
    uint64_t v23 = v16[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (!v24)
    {
      void v16[2] = v25;
      return result;
    }
    goto LABEL_16;
  }
LABEL_8:
  uint64_t v17 = v16[7] + 80 * v10;
  return sub_1C8D87EC8((uint64_t)a1, v17);
}

uint64_t type metadata accessor for InternPool()
{
  return self;
}

uint64_t sub_1C8D861E4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a3 >> 62 == 3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C8D861FC(long long *a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_1C8CA5D14(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1C8D86D18();
      goto LABEL_7;
    }
    sub_1C8D85314(v13, a3 & 1);
    unint64_t v19 = sub_1C8CA5D14(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      char v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_1C8D887E0();
    __break(1u);
    return result;
  }
LABEL_7:
  char v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = v16[7] + 40 * v10;
    __swift_destroy_boxed_opaque_existential_1(v17);
    return sub_1C8CA4528(a1, v17);
  }
LABEL_13:
  return sub_1C8D86888(v10, a2, a1, v16);
}

uint64_t sub_1C8D8633C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v7 = v6;
  uint64_t v14 = *v6;
  unint64_t v16 = sub_1C8CA5C9C(a4, a5);
  uint64_t v17 = *(void *)(v14 + 16);
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v20 = v15;
  uint64_t v21 = *(void *)(v14 + 24);
  if (v21 >= v19 && (a6 & 1) != 0) {
    goto LABEL_7;
  }
  if (v21 >= v19 && (a6 & 1) == 0)
  {
    sub_1C8D86EE0();
LABEL_7:
    long long v22 = (void *)*v7;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = (uint64_t *)(v22[7] + 24 * v16);
      sub_1C8CA3D5C(*v23, v23[1]);
      uint64_t result = swift_release();
      *uint64_t v23 = a1;
      v23[1] = a2;
      void v23[2] = a3;
      return result;
    }
    goto LABEL_11;
  }
  sub_1C8D855DC(v19, a6 & 1);
  unint64_t v25 = sub_1C8CA5C9C(a4, a5);
  if ((v20 & 1) != (v26 & 1))
  {
LABEL_17:
    uint64_t result = sub_1C8D887E0();
    __break(1u);
    return result;
  }
  unint64_t v16 = v25;
  long long v22 = (void *)*v7;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  v22[(v16 >> 6) + 8] |= 1 << v16;
  uint64_t v27 = (uint64_t *)(v22[6] + 16 * v16);
  *uint64_t v27 = a4;
  v27[1] = a5;
  uint64_t v28 = (uint64_t *)(v22[7] + 24 * v16);
  *uint64_t v28 = a1;
  v28[1] = a2;
  v28[2] = a3;
  uint64_t v29 = v22[2];
  BOOL v30 = __OFADD__(v29, 1);
  uint64_t v31 = v29 + 1;
  if (v30)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v22[2] = v31;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8D864E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_1C8CA5C9C(a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= result && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= result && (a5 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C8D870C0();
LABEL_7:
    char v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = (void *)(v20[7] + 16 * v14);
      *uint64_t v21 = a1;
      v21[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_1C8D8590C(result, a5 & 1);
  uint64_t result = sub_1C8CA5C9C(a3, a4);
  if ((v18 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_1C8D887E0();
    __break(1u);
    return result;
  }
  unint64_t v14 = result;
  char v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  uint64_t v23 = (uint64_t *)(v20[6] + 16 * v14);
  *uint64_t v23 = a3;
  v23[1] = a4;
  BOOL v24 = (void *)(v20[7] + 16 * v14);
  void *v24 = a1;
  v24[1] = a2;
  uint64_t v25 = v20[2];
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (v26)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  char v20[2] = v27;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C8D86660(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1C8CA5D14(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C8D8726C();
LABEL_7:
    BOOL v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    uint64_t v19 = 8 * v10;
    *(void *)(v16[6] + v19) = a2;
    *(void *)(v16[7] + v19) = a1;
    uint64_t v20 = v16[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (!v21)
    {
      void v16[2] = v22;
      return result;
    }
    goto LABEL_14;
  }
  sub_1C8D85C1C(result, a3 & 1);
  uint64_t result = sub_1C8CA5D14(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    unint64_t v10 = result;
    BOOL v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_1C8D887E0();
  __break(1u);
  return result;
}

__n128 sub_1C8D8679C(uint64_t *a1, uint64_t a2, void *a3)
{
  uint64_t v7 = *a1;
  uint64_t v6 = a1[1];
  sub_1C8D88840();
  if (v7) {
    uint64_t v8 = v7 + v6;
  }
  else {
    uint64_t v8 = 0;
  }
  if (v7) {
    BOOL v9 = v8 == v7;
  }
  else {
    BOOL v9 = 1;
  }
  if (!v9)
  {
    do
    {
      ++v7;
      sub_1C8D88860();
    }
    while (v7 != v8);
  }
  sub_1C8D888A0();
  unint64_t v10 = sub_1C8D88660();
  *(void *)((char *)a3 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v10;
  uint64_t v11 = a3[6] + 40 * v10;
  __n128 result = *(__n128 *)a1;
  long long v13 = *((_OWORD *)a1 + 1);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)a1;
  *(_OWORD *)(v11 + 16) = v13;
  *(_WORD *)(v11 + 32) = *((_WORD *)a1 + 16);
  *(void *)(a3[7] + 8 * v10) = a2;
  ++a3[2];
  return result;
}

uint64_t sub_1C8D86888(unint64_t a1, uint64_t a2, long long *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = sub_1C8CA4528(a3, a4[7] + 40 * a1);
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

unint64_t sub_1C8D868F4(unint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  uint64_t v4 = 8 * result;
  *(void *)(a4[6] + v4) = a2;
  *(void *)(a4[7] + v4) = a3;
  uint64_t v5 = a4[2];
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6) {
    __break(1u);
  }
  else {
    a4[2] = v7;
  }
  return result;
}

void *sub_1C8D8693C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2CF8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C8D88760();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 40 * v15;
    uint64_t v18 = *(void *)(v17 + 16);
    uint64_t v19 = *(void *)(v17 + 24);
    char v20 = *(unsigned char *)(v17 + 33);
    uint64_t v21 = 8 * v15;
    uint64_t v22 = *(void *)(*(void *)(v2 + 56) + v21);
    uint64_t v23 = *(void *)(v4 + 48) + v16;
    uint64_t v24 = *(unsigned __int8 *)(v17 + 32);
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v17;
    *(void *)(v23 + 16) = v18;
    *(void *)(v23 + 24) = v19;
    *(unsigned char *)(v23 + 32) = v24;
    *(unsigned char *)(v23 + 33) = v20;
    *(void *)(*(void *)(v4 + 56) + v21) = v22;
    uint64_t result = (void *)sub_1C8CA6050(v18, v19, v24, v20);
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C8D86B08()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBCB2D00);
  int64_t v33 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_1C8D88760();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *int64_t v33 = v3;
    return result;
  }
  uint64_t result = (void *)(v2 + 64);
  uint64_t v5 = v1 + 64;
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6) {
    uint64_t result = memmove(result, (const void *)(v1 + 64), 8 * v6);
  }
  int64_t v8 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v1 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    int64_t v30 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v30 >= v12) {
      goto LABEL_26;
    }
    unint64_t v31 = *(void *)(v5 + 8 * v30);
    ++v8;
    if (!v31)
    {
      int64_t v8 = v30 + 1;
      if (v30 + 1 >= v12) {
        goto LABEL_26;
      }
      unint64_t v31 = *(void *)(v5 + 8 * v8);
      if (!v31) {
        break;
      }
    }
LABEL_25:
    unint64_t v11 = (v31 - 1) & v31;
    unint64_t v14 = __clz(__rbit64(v31)) + (v8 << 6);
LABEL_12:
    uint64_t v15 = 8 * v14;
    uint64_t v16 = *(void *)(*(void *)(v1 + 48) + 8 * v14);
    uint64_t v17 = 80 * v14;
    uint64_t v18 = *(void *)(v1 + 56) + v17;
    uint64_t v19 = *(void *)v18;
    uint64_t v20 = *(void *)(v18 + 8);
    uint64_t v21 = *(void *)(v18 + 16);
    uint64_t v22 = *(void *)(v18 + 24);
    uint64_t v23 = *(void *)(v18 + 56);
    uint64_t v24 = *(void *)(v18 + 64);
    char v25 = *(unsigned char *)(v18 + 73);
    long long v26 = *(_OWORD *)(v18 + 40);
    uint64_t v27 = *(unsigned __int16 *)(v18 + 32);
    uint64_t v28 = *(unsigned __int8 *)(v18 + 72);
    *(void *)(*(void *)(v3 + 48) + v15) = v16;
    uint64_t v29 = *(void *)(v3 + 56) + v17;
    *(void *)uint64_t v29 = v19;
    *(void *)(v29 + 8) = v20;
    *(void *)(v29 + 16) = v21;
    *(void *)(v29 + 24) = v22;
    *(_WORD *)(v29 + 32) = v27;
    *(_OWORD *)(v29 + 40) = v26;
    *(void *)(v29 + 56) = v23;
    *(void *)(v29 + 64) = v24;
    *(unsigned char *)(v29 + 72) = v28;
    *(unsigned char *)(v29 + 73) = v25;
    sub_1C8CB5524(v19, v20, v21, v22, v27);
    uint64_t result = (void *)sub_1C8CA6050(v23, v24, v28, v25);
  }
  int64_t v32 = v30 + 2;
  if (v32 >= v12) {
    goto LABEL_26;
  }
  unint64_t v31 = *(void *)(v5 + 8 * v32);
  if (v31)
  {
    int64_t v8 = v32;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v8 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v8 >= v12) {
      goto LABEL_26;
    }
    unint64_t v31 = *(void *)(v5 + 8 * v8);
    ++v32;
    if (v31) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C8D86D18()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567AE8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C8D88760();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 40 * v15;
    sub_1C8CA425C(*(void *)(v2 + 56) + 40 * v15, (uint64_t)v22);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t result = (void *)sub_1C8CA4528(v22, *(void *)(v4 + 56) + v18);
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C8D86EE0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567AE0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C8D88760();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 56);
    uint64_t v18 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = v18[1];
    uint64_t v20 = 24 * v15;
    uint64_t v21 = *(void *)(v17 + v20);
    unint64_t v22 = *(void *)(v17 + v20 + 8);
    uint64_t v23 = *(void *)(v17 + v20 + 16);
    uint64_t v24 = (void *)(*(void *)(v4 + 48) + v16);
    void *v24 = *v18;
    v24[1] = v19;
    char v25 = (uint64_t *)(*(void *)(v4 + 56) + v20);
    *char v25 = v21;
    v25[1] = v22;
    char v25[2] = v23;
    swift_bridgeObjectRetain();
    sub_1C8CA3CF8(v21, v22);
    uint64_t result = (void *)swift_retain();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v13) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v6 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C8D870C0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567AD8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C8D88760();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    long long v20 = *(_OWORD *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = v19;
    v21[1] = v18;
    *(_OWORD *)(*(void *)(v4 + 56) + v16) = v20;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C8D8726C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA567AD0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C8D88760();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1C8D87410(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a3 >> 62 == 3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t destroy for _NameMap()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for _NameMap(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for _NameMap(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t destroy for _NameMap.NameDescription(uint64_t a1)
{
  return sub_1C8D87410(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16));
}

uint64_t initializeWithCopy for _NameMap.NameDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 40);
  sub_1C8D861E4(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for _NameMap.NameDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 40);
  sub_1C8D861E4(*(void *)a2, v4, v5);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  unint64_t v11 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v8;
  sub_1C8D87410(v9, v10, v11);
  return a1;
}

uint64_t assignWithTake for _NameMap.NameDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  char v4 = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  unint64_t v6 = *(void *)(a1 + 16);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  *(void *)(a1 + 32) = v3;
  *(unsigned char *)(a1 + 40) = v4;
  sub_1C8D87410(v5, v7, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for _NameMap.NameDescription(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unsigned int v2 = *(_DWORD *)(a1 + 17);
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for _NameMap.NameDescription(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 24) = 0;
      *(void *)(result + 32) = 0;
      *(void *)(result + 16) = (unint64_t)-a2 << 8;
      *(unsigned char *)(result + 40) = 0;
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1C8D87774(uint64_t a1)
{
  return *(void *)(a1 + 16) >> 62;
}

uint64_t sub_1C8D87780(uint64_t result)
{
  *(void *)(result + 16) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_1C8D87790(uint64_t result, uint64_t a2)
{
  *(void *)(result + 16) = *(unsigned __int8 *)(result + 16) | (unint64_t)(a2 << 62);
  return result;
}

ValueMetadata *type metadata accessor for _NameMap.NameDescription()
{
  return &type metadata for _NameMap.NameDescription;
}

uint64_t destroy for _NameMap.Names(uint64_t a1)
{
  uint64_t v2 = *(unsigned __int16 *)(a1 + 32);
  if (v2 >> 8 <= 0xFE) {
    sub_1C8CA6AF4(*(void *)(a1 + 16), *(void *)(a1 + 24), v2, BYTE1(v2) & 1);
  }
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t v4 = *(void *)(a1 + 64);
  char v5 = *(unsigned char *)(a1 + 73);
  uint64_t v6 = *(unsigned __int8 *)(a1 + 72);
  return sub_1C8CA6AF4(v3, v4, v6, v5);
}

uint64_t initializeWithCopy for _NameMap.Names(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(unsigned __int16 *)(a2 + 32);
  if (v4 >> 8 <= 0xFE)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v6 = *(void *)(a2 + 16);
    uint64_t v7 = *(void *)(a2 + 24);
    sub_1C8CA6050(v6, v7, v4, BYTE1(v4) & 1);
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v7;
    *(unsigned char *)(a1 + 32) = v4;
    *(unsigned char *)(a1 + 33) = BYTE1(v4) & 1;
  }
  else
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  }
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 56);
  uint64_t v9 = *(void *)(a2 + 64);
  char v10 = *(unsigned char *)(a2 + 73);
  uint64_t v11 = *(unsigned __int8 *)(a2 + 72);
  sub_1C8CA6050(v8, v9, v11, v10);
  *(void *)(a1 + 56) = v8;
  *(void *)(a1 + 64) = v9;
  *(unsigned char *)(a1 + 72) = v11;
  *(unsigned char *)(a1 + 73) = v10;
  return a1;
}

uint64_t assignWithCopy for _NameMap.Names(uint64_t a1, long long *a2)
{
  unsigned int v4 = HIBYTE(*((unsigned __int16 *)a2 + 16));
  if (*(unsigned __int8 *)(a1 + 33) == 255)
  {
    if (v4 <= 0xFE)
    {
      *(_OWORD *)a1 = *a2;
      uint64_t v9 = *((void *)a2 + 2);
      uint64_t v10 = *((void *)a2 + 3);
      char v11 = *((unsigned char *)a2 + 33);
      unsigned __int8 v12 = *((unsigned char *)a2 + 32);
      sub_1C8CA6050(v9, v10, v12, v11);
      *(void *)(a1 + 16) = v9;
      *(void *)(a1 + 24) = v10;
      *(unsigned char *)(a1 + 32) = v12;
      *(unsigned char *)(a1 + 33) = v11;
    }
    else
    {
      long long v5 = *a2;
      long long v6 = a2[1];
      *(_WORD *)(a1 + 32) = *((_WORD *)a2 + 16);
      *(_OWORD *)a1 = v5;
      *(_OWORD *)(a1 + 16) = v6;
    }
  }
  else if (v4 <= 0xFE)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *((void *)a2 + 1);
    uint64_t v13 = *((void *)a2 + 2);
    uint64_t v14 = *((void *)a2 + 3);
    char v15 = *((unsigned char *)a2 + 33);
    unsigned __int8 v16 = *((unsigned char *)a2 + 32);
    sub_1C8CA6050(v13, v14, v16, v15);
    uint64_t v17 = *(void *)(a1 + 16);
    uint64_t v18 = *(void *)(a1 + 24);
    char v19 = *(unsigned char *)(a1 + 33);
    *(void *)(a1 + 16) = v13;
    *(void *)(a1 + 24) = v14;
    uint64_t v20 = *(unsigned __int8 *)(a1 + 32);
    *(unsigned char *)(a1 + 32) = v16;
    *(unsigned char *)(a1 + 33) = v15;
    sub_1C8CA6AF4(v17, v18, v20, v19);
  }
  else
  {
    sub_1C8D87A24(a1);
    __int16 v7 = *((_WORD *)a2 + 16);
    long long v8 = a2[1];
    *(_OWORD *)a1 = *a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(_WORD *)(a1 + 32) = v7;
  }
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  uint64_t v21 = *((void *)a2 + 7);
  uint64_t v22 = *((void *)a2 + 8);
  char v23 = *((unsigned char *)a2 + 73);
  uint64_t v24 = *((unsigned __int8 *)a2 + 72);
  sub_1C8CA6050(v21, v22, v24, v23);
  uint64_t v25 = *(void *)(a1 + 56);
  uint64_t v26 = *(void *)(a1 + 64);
  char v27 = *(unsigned char *)(a1 + 73);
  *(void *)(a1 + 56) = v21;
  *(void *)(a1 + 64) = v22;
  uint64_t v28 = *(unsigned __int8 *)(a1 + 72);
  *(unsigned char *)(a1 + 72) = v24;
  *(unsigned char *)(a1 + 73) = v23;
  sub_1C8CA6AF4(v25, v26, v28, v27);
  return a1;
}

uint64_t sub_1C8D87A24(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy74_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 58) = *(_OWORD *)(a2 + 58);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for _NameMap.Names(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(unsigned __int16 *)(a1 + 32);
  if (v4 >> 8 <= 0xFE)
  {
    unsigned int v5 = *(unsigned __int16 *)(a2 + 32);
    if (v5 >> 8 <= 0xFE)
    {
      uint64_t v7 = *(void *)(a1 + 16);
      uint64_t v8 = *(void *)(a1 + 24);
      long long v9 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v9;
      *(unsigned char *)(a1 + 32) = v5;
      *(unsigned char *)(a1 + 33) = BYTE1(v5) & 1;
      sub_1C8CA6AF4(v7, v8, v4, BYTE1(v4) & 1);
      goto LABEL_6;
    }
    sub_1C8D87A24(a1);
  }
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
LABEL_6:
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  char v10 = *(unsigned char *)(a2 + 72);
  char v11 = *(unsigned char *)(a2 + 73);
  uint64_t v12 = *(void *)(a1 + 56);
  uint64_t v13 = *(void *)(a1 + 64);
  char v14 = *(unsigned char *)(a1 + 73);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v15 = *(unsigned __int8 *)(a1 + 72);
  *(unsigned char *)(a1 + 72) = v10;
  *(unsigned char *)(a1 + 73) = v11;
  sub_1C8CA6AF4(v12, v13, v15, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for _NameMap.Names(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 74)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 73);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for _NameMap.Names(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 72) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 74) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 74) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 73) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for _NameMap.Names()
{
  return &type metadata for _NameMap.Names;
}

uint64_t destroy for _NameMap.Name(uint64_t a1)
{
  return sub_1C8CA6AF4(*(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned __int8 *)(a1 + 32), *(unsigned char *)(a1 + 33));
}

uint64_t initializeWithCopy for _NameMap.Name(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  char v5 = *(unsigned char *)(a2 + 33);
  uint64_t v6 = *(unsigned __int8 *)(a2 + 32);
  sub_1C8CA6050(v3, v4, v6, v5);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 33) = v5;
  return a1;
}

uint64_t assignWithCopy for _NameMap.Name(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  char v5 = *(unsigned char *)(a2 + 33);
  uint64_t v6 = *(unsigned __int8 *)(a2 + 32);
  sub_1C8CA6050(v3, v4, v6, v5);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  char v9 = *(unsigned char *)(a1 + 33);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  uint64_t v10 = *(unsigned __int8 *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 33) = v5;
  sub_1C8CA6AF4(v7, v8, v10, v9);
  return a1;
}

uint64_t assignWithTake for _NameMap.Name(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  char v4 = *(unsigned char *)(a2 + 33);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  char v7 = *(unsigned char *)(a1 + 33);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  uint64_t v9 = *(unsigned __int8 *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  *(unsigned char *)(a1 + 33) = v4;
  sub_1C8CA6AF4(v5, v6, v9, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for _NameMap.Name(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 34)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 33);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for _NameMap.Name(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 34) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 34) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 33) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for _NameMap.Name()
{
  return &type metadata for _NameMap.Name;
}

unint64_t sub_1C8D87DD8()
{
  unint64_t result = qword_1EBCB2CE0;
  if (!qword_1EBCB2CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBCB2CE0);
  }
  return result;
}

uint64_t sub_1C8D87E2C(uint64_t a1, uint64_t a2)
{
  if (a1 && a2)
  {
    do
    {
      ++a1;
      sub_1C8D88860();
      --a2;
    }
    while (a2);
  }
  return sub_1C8D888A0();
}

uint64_t sub_1C8D87E90(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C8D87EC8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t destroy for _NameMap.Name.NameString(uint64_t a1)
{
  return sub_1C8CA6AF4(*(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16), *(unsigned char *)(a1 + 17));
}

uint64_t _s20SiriOntologyProtobuf8_NameMapV4NameV10NameStringOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 17);
  uint64_t v6 = *(unsigned __int8 *)(a2 + 16);
  sub_1C8CA6050(*(void *)a2, v4, v6, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 17) = v5;
  return a1;
}

uint64_t assignWithCopy for _NameMap.Name.NameString(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 17);
  uint64_t v6 = *(unsigned __int8 *)(a2 + 16);
  sub_1C8CA6050(*(void *)a2, v4, v6, v5);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  char v9 = *(unsigned char *)(a1 + 17);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  uint64_t v10 = *(unsigned __int8 *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 17) = v5;
  sub_1C8CA6AF4(v7, v8, v10, v9);
  return a1;
}

__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for _NameMap.Name.NameString(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 17);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  char v7 = *(unsigned char *)(a1 + 17);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v8 = *(unsigned __int8 *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 17) = v4;
  sub_1C8CA6AF4(v5, v6, v8, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for _NameMap.Name.NameString(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 18)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 17);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for _NameMap.Name.NameString(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 18) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 17) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C8D880DC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 17);
}

uint64_t sub_1C8D880E4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 17) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for _NameMap.Name.NameString()
{
  return &type metadata for _NameMap.Name.NameString;
}

uint64_t sub_1C8D88100()
{
  return MEMORY[0x1F40E37D0]();
}

uint64_t sub_1C8D88110()
{
  return MEMORY[0x1F40E37E0]();
}

uint64_t sub_1C8D88120()
{
  return MEMORY[0x1F40E37F0]();
}

uint64_t sub_1C8D88130()
{
  return MEMORY[0x1F40E3800]();
}

uint64_t sub_1C8D88140()
{
  return MEMORY[0x1F40E3818]();
}

uint64_t sub_1C8D88150()
{
  return MEMORY[0x1F40E3830]();
}

uint64_t sub_1C8D88160()
{
  return MEMORY[0x1F40E4BC8]();
}

uint64_t sub_1C8D88170()
{
  return MEMORY[0x1F40E4C08]();
}

uint64_t sub_1C8D88180()
{
  return MEMORY[0x1F40E4C58]();
}

uint64_t sub_1C8D88190()
{
  return MEMORY[0x1F40E4C80]();
}

uint64_t sub_1C8D881A0()
{
  return MEMORY[0x1F40E4CA8]();
}

uint64_t sub_1C8D881B0()
{
  return MEMORY[0x1F40E4CD8]();
}

uint64_t sub_1C8D881C0()
{
  return MEMORY[0x1F40E4D30]();
}

uint64_t sub_1C8D881D0()
{
  return MEMORY[0x1F40E4DB8]();
}

uint64_t sub_1C8D881E0()
{
  return MEMORY[0x1F40E4E30]();
}

uint64_t sub_1C8D881F0()
{
  return MEMORY[0x1F40E4E60]();
}

uint64_t sub_1C8D88200()
{
  return MEMORY[0x1F40E4E98]();
}

uint64_t sub_1C8D88220()
{
  return MEMORY[0x1F40E4EE0]();
}

uint64_t sub_1C8D88230()
{
  return MEMORY[0x1F40E4EF8]();
}

uint64_t sub_1C8D88240()
{
  return MEMORY[0x1F40E5388]();
}

uint64_t sub_1C8D88250()
{
  return MEMORY[0x1F4186CF8]();
}

uint64_t sub_1C8D88260()
{
  return MEMORY[0x1F4186D60]();
}

uint64_t sub_1C8D88270()
{
  return MEMORY[0x1F4183280]();
}

uint64_t sub_1C8D88280()
{
  return MEMORY[0x1F41833D0]();
}

uint64_t sub_1C8D88290()
{
  return MEMORY[0x1F41834A8]();
}

uint64_t sub_1C8D882A0()
{
  return MEMORY[0x1F41834D0]();
}

uint64_t sub_1C8D882B0()
{
  return MEMORY[0x1F4183500]();
}

uint64_t sub_1C8D882C0()
{
  return MEMORY[0x1F41835C8]();
}

uint64_t sub_1C8D882D0()
{
  return MEMORY[0x1F4183730]();
}

uint64_t sub_1C8D882E0()
{
  return MEMORY[0x1F4183838]();
}

uint64_t sub_1C8D882F0()
{
  return MEMORY[0x1F40E61E8]();
}

uint64_t sub_1C8D88300()
{
  return MEMORY[0x1F40E61F8]();
}

uint64_t sub_1C8D88310()
{
  return MEMORY[0x1F40E6200]();
}

uint64_t sub_1C8D88320()
{
  return MEMORY[0x1F40E6238]();
}

uint64_t sub_1C8D88330()
{
  return MEMORY[0x1F40E6268]();
}

uint64_t sub_1C8D88340()
{
  return MEMORY[0x1F40E62A0]();
}

uint64_t sub_1C8D88350()
{
  return MEMORY[0x1F4183898]();
}

uint64_t sub_1C8D88360()
{
  return MEMORY[0x1F41838A0]();
}

uint64_t sub_1C8D88370()
{
  return MEMORY[0x1F41838B0]();
}

uint64_t sub_1C8D88380()
{
  return MEMORY[0x1F41838D8]();
}

uint64_t sub_1C8D88390()
{
  return MEMORY[0x1F4183940]();
}

uint64_t sub_1C8D883A0()
{
  return MEMORY[0x1F4183950]();
}

uint64_t sub_1C8D883B0()
{
  return MEMORY[0x1F4183958]();
}

uint64_t sub_1C8D883C0()
{
  return MEMORY[0x1F41839B0]();
}

uint64_t sub_1C8D883D0()
{
  return MEMORY[0x1F41839F8]();
}

uint64_t sub_1C8D883E0()
{
  return MEMORY[0x1F4183A00]();
}

uint64_t sub_1C8D883F0()
{
  return MEMORY[0x1F4183A30]();
}

uint64_t sub_1C8D88400()
{
  return MEMORY[0x1F4183A38]();
}

uint64_t sub_1C8D88410()
{
  return MEMORY[0x1F4183A78]();
}

uint64_t sub_1C8D88420()
{
  return MEMORY[0x1F4183A80]();
}

uint64_t sub_1C8D88430()
{
  return MEMORY[0x1F4183A88]();
}

uint64_t sub_1C8D88440()
{
  return MEMORY[0x1F4183AA0]();
}

uint64_t sub_1C8D88460()
{
  return MEMORY[0x1F4183AB0]();
}

uint64_t sub_1C8D88470()
{
  return MEMORY[0x1F4183B10]();
}

uint64_t sub_1C8D88480()
{
  return MEMORY[0x1F4183B58]();
}

uint64_t sub_1C8D88490()
{
  return MEMORY[0x1F4183B88]();
}

uint64_t sub_1C8D884A0()
{
  return MEMORY[0x1F4183B90]();
}

uint64_t sub_1C8D884B0()
{
  return MEMORY[0x1F4183BA0]();
}

uint64_t sub_1C8D884C0()
{
  return MEMORY[0x1F4183BA8]();
}

uint64_t sub_1C8D884D0()
{
  return MEMORY[0x1F4183EA8]();
}

uint64_t sub_1C8D884E0()
{
  return MEMORY[0x1F4183EB8]();
}

uint64_t sub_1C8D884F0()
{
  return MEMORY[0x1F4183EF0]();
}

uint64_t sub_1C8D88500()
{
  return MEMORY[0x1F4183F08]();
}

uint64_t sub_1C8D88510()
{
  return MEMORY[0x1F4183F18]();
}

uint64_t sub_1C8D88520()
{
  return MEMORY[0x1F4183F40]();
}

uint64_t sub_1C8D88530()
{
  return MEMORY[0x1F4183F60]();
}

uint64_t sub_1C8D88540()
{
  return MEMORY[0x1F4183F78]();
}

uint64_t sub_1C8D88550()
{
  return MEMORY[0x1F4183FA8]();
}

uint64_t sub_1C8D88560()
{
  return MEMORY[0x1F4183FB8]();
}

uint64_t sub_1C8D88570()
{
  return MEMORY[0x1F4183FC8]();
}

uint64_t sub_1C8D88580()
{
  return MEMORY[0x1F4184020]();
}

uint64_t sub_1C8D88590()
{
  return MEMORY[0x1F41840A8]();
}

uint64_t sub_1C8D885A0()
{
  return MEMORY[0x1F41842D0]();
}

uint64_t sub_1C8D885B0()
{
  return MEMORY[0x1F41842F8]();
}

uint64_t sub_1C8D885C0()
{
  return MEMORY[0x1F4184338]();
}

uint64_t sub_1C8D885D0()
{
  return MEMORY[0x1F41843D0]();
}

uint64_t sub_1C8D885E0()
{
  return MEMORY[0x1F4184440]();
}

uint64_t sub_1C8D885F0()
{
  return MEMORY[0x1F4186FD8]();
}

uint64_t sub_1C8D88600()
{
  return MEMORY[0x1F41870A0]();
}

uint64_t sub_1C8D88610()
{
  return MEMORY[0x1F4187100]();
}

uint64_t sub_1C8D88620()
{
  return MEMORY[0x1F4184640]();
}

uint64_t sub_1C8D88630()
{
  return MEMORY[0x1F41847A0]();
}

uint64_t sub_1C8D88640()
{
  return MEMORY[0x1F4184B18]();
}

uint64_t sub_1C8D88650()
{
  return MEMORY[0x1F4184B20]();
}

uint64_t sub_1C8D88660()
{
  return MEMORY[0x1F4184B30]();
}

uint64_t sub_1C8D88670()
{
  return MEMORY[0x1F4184CE0]();
}

uint64_t sub_1C8D88680()
{
  return MEMORY[0x1F4184CE8]();
}

uint64_t sub_1C8D88690()
{
  return MEMORY[0x1F4184CF0]();
}

uint64_t sub_1C8D886A0()
{
  return MEMORY[0x1F4184D20]();
}

uint64_t sub_1C8D886B0()
{
  return MEMORY[0x1F4184D78]();
}

uint64_t sub_1C8D886C0()
{
  return MEMORY[0x1F4184E68]();
}

uint64_t sub_1C8D886D0()
{
  return MEMORY[0x1F4184E70]();
}

uint64_t sub_1C8D886E0()
{
  return MEMORY[0x1F4184EE8]();
}

uint64_t sub_1C8D886F0()
{
  return MEMORY[0x1F4184F48]();
}

uint64_t sub_1C8D88700()
{
  return MEMORY[0x1F4184F68]();
}

uint64_t sub_1C8D88710()
{
  return MEMORY[0x1F4184F70]();
}

uint64_t sub_1C8D88720()
{
  return MEMORY[0x1F4185048]();
}

uint64_t sub_1C8D88730()
{
  return MEMORY[0x1F41851F8]();
}

uint64_t sub_1C8D88740()
{
  return MEMORY[0x1F4185270]();
}

uint64_t sub_1C8D88750()
{
  return MEMORY[0x1F41852A0]();
}

uint64_t sub_1C8D88760()
{
  return MEMORY[0x1F4185368]();
}

uint64_t sub_1C8D88770()
{
  return MEMORY[0x1F4185370]();
}

uint64_t sub_1C8D88780()
{
  return MEMORY[0x1F4185380]();
}

uint64_t sub_1C8D88790()
{
  return MEMORY[0x1F4185740]();
}

uint64_t sub_1C8D887A0()
{
  return MEMORY[0x1F4185758]();
}

uint64_t sub_1C8D887B0()
{
  return MEMORY[0x1F4185A18]();
}

uint64_t sub_1C8D887C0()
{
  return MEMORY[0x1F4185A40]();
}

uint64_t sub_1C8D887D0()
{
  return MEMORY[0x1F4185A48]();
}

uint64_t sub_1C8D887E0()
{
  return MEMORY[0x1F4185DE0]();
}

uint64_t sub_1C8D887F0()
{
  return MEMORY[0x1F4185E00]();
}

uint64_t sub_1C8D88800()
{
  return MEMORY[0x1F4185E08]();
}

uint64_t sub_1C8D88810()
{
  return MEMORY[0x1F4185E10]();
}

uint64_t sub_1C8D88820()
{
  return MEMORY[0x1F4185E18]();
}

uint64_t sub_1C8D88830()
{
  return MEMORY[0x1F4185EA8]();
}

uint64_t sub_1C8D88840()
{
  return MEMORY[0x1F4185EB0]();
}

uint64_t sub_1C8D88850()
{
  return MEMORY[0x1F4185EC8]();
}

uint64_t sub_1C8D88860()
{
  return MEMORY[0x1F4185ED0]();
}

uint64_t sub_1C8D88870()
{
  return MEMORY[0x1F4185EE0]();
}

uint64_t sub_1C8D88880()
{
  return MEMORY[0x1F4185EE8]();
}

uint64_t sub_1C8D88890()
{
  return MEMORY[0x1F4185EF0]();
}

uint64_t sub_1C8D888A0()
{
  return MEMORY[0x1F4185EF8]();
}

uint64_t sub_1C8D888B0()
{
  return MEMORY[0x1F4186040]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1F40C9A70](aBlock);
}

void _Block_release(const void *aBlock)
{
}

void bzero(void *a1, size_t a2)
{
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1F40CCB10](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1F40CCB80](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x1F40CCCE8](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1F40CCCF0](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1F40CCD10](__dst, __src, __len);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F4181798](a1, a2);
}

uint64_t self
{
  return MEMORY[0x1F41817D0]();
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C8](a1);
}

double strtod(const char *a1, char **a2)
{
  MEMORY[0x1F40CE260](a1, a2);
  return result;
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1F41863D0]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1F41863E0]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1F41863E8]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x1F41863F0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1F4186418]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1F4186430]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1F4186440]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1F4186448]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1F4186450]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1F4186458]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1F4186460]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x1F4186478]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1F41864B8]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1F4186518]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1F4186528]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x1F4186538]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1F4186540]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x1F4186568]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1F41865E0]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x1F41865F0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1F4186608]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x1F4186650]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1F4186668]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1F4186670]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1F4186680]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x1F4186688]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1F41866A8]();
}

uint64_t swift_initStaticObject()
{
  return MEMORY[0x1F41866B0]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1F41866B8]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x1F41866C8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1F4186700]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x1F4186710]();
}

uint64_t swift_once()
{
  return MEMORY[0x1F4186728]();
}

uint64_t swift_release()
{
  return MEMORY[0x1F4186758]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1F4186760]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1F4186770]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1F4186778]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1F4186798]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1F41867A0]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x1F41867D8]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1F41867E0]();
}