uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t OfflineState.activeStorefrontLocale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_24F071500();
  v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t OfflineState.loadState.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for OfflineState() + 20));
  uint64_t v4 = *v3;
  unint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_24F0029F8(v4, v5);
}

uint64_t type metadata accessor for OfflineState()
{
  uint64_t result = qword_2699A2D50;
  if (!qword_2699A2D50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24F0029F8(uint64_t a1, unint64_t a2)
{
  if (a2 >= 3)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

__n128 OfflineState.loadState.setter(__n128 *a1)
{
  __n128 v5 = *a1;
  uint64_t v2 = a1[1].n128_i64[0];
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for OfflineState() + 20));
  sub_24F002A98(*v3, v3[1]);
  __n128 result = v5;
  *(__n128 *)uint64_t v3 = v5;
  v3[2] = v2;
  return result;
}

uint64_t sub_24F002A98(uint64_t a1, unint64_t a2)
{
  if (a2 >= 3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t (*OfflineState.loadState.modify())()
{
  return nullsub_1;
}

__n128 OfflineState.init(activeStorefrontLocale:loadState:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X8>)
{
  __n128 v9 = *a2;
  unint64_t v5 = a2[1].n128_u64[0];
  uint64_t v6 = sub_24F071500();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  v7 = (__n128 *)(a3 + *(int *)(type metadata accessor for OfflineState() + 20));
  __n128 result = v9;
  __n128 *v7 = v9;
  v7[1].n128_u64[0] = v5;
  return result;
}

BOOL sub_24F002BC4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_24F002BDC()
{
  return sub_24F072460();
}

uint64_t sub_24F002C24()
{
  return sub_24F072440();
}

uint64_t sub_24F002C50()
{
  return sub_24F072460();
}

uint64_t sub_24F002C94()
{
  if (*v0) {
    return 0x7461745364616F6CLL;
  }
  else {
    return 0xD000000000000016;
  }
}

uint64_t sub_24F002CD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24F003668(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24F002D00()
{
  return 0;
}

void sub_24F002D0C(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_24F002D18(uint64_t a1)
{
  unint64_t v2 = sub_24F002F98();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F002D54(uint64_t a1)
{
  unint64_t v2 = sub_24F002F98();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t OfflineState.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A2D10);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388]();
  v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24F002F98();
  sub_24F072480();
  LOBYTE(v13) = 0;
  sub_24F071500();
  sub_24F0033D8(&qword_2699A2D20);
  sub_24F0723F0();
  if (!v2)
  {
    __n128 v9 = (long long *)(v3 + *(int *)(type metadata accessor for OfflineState() + 20));
    uint64_t v10 = *((void *)v9 + 2);
    long long v13 = *v9;
    uint64_t v14 = v10;
    v12[15] = 1;
    sub_24F002FEC();
    sub_24F0723F0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_24F002F98()
{
  unint64_t result = qword_2699A2D18;
  if (!qword_2699A2D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A2D18);
  }
  return result;
}

unint64_t sub_24F002FEC()
{
  unint64_t result = qword_2699A2D28;
  if (!qword_2699A2D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A2D28);
  }
  return result;
}

uint64_t OfflineState.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v24 = sub_24F071500();
  uint64_t v22 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A2D30);
  uint64_t v23 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for OfflineState();
  MEMORY[0x270FA5388]();
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24F002F98();
  sub_24F072470();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v11 = v10;
  uint64_t v12 = v22;
  LOBYTE(v26) = 0;
  sub_24F0033D8(&qword_2699A2D38);
  uint64_t v13 = v24;
  sub_24F072370();
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  uint64_t v20 = (uint64_t)v11;
  v14(v11, v5, v13);
  char v28 = 1;
  sub_24F00341C();
  sub_24F072370();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v25);
  uint64_t v15 = v27;
  uint64_t v17 = v20;
  uint64_t v16 = v21;
  uint64_t v18 = v20 + *(int *)(v8 + 20);
  *(_OWORD *)uint64_t v18 = v26;
  *(void *)(v18 + 16) = v15;
  sub_24F003470(v17, v16);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_24F0034D4(v17);
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_24F0033D8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24F071500();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24F00341C()
{
  unint64_t result = qword_2699A2D40;
  if (!qword_2699A2D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A2D40);
  }
  return result;
}

uint64_t sub_24F003470(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for OfflineState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24F0034D4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for OfflineState();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24F003530@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return OfflineState.init(from:)(a1, a2);
}

uint64_t sub_24F003548(void *a1)
{
  return OfflineState.encode(to:)(a1);
}

BOOL static OfflineState.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (MEMORY[0x253351FB0]())
  {
    uint64_t v4 = type metadata accessor for OfflineState();
    uint64_t v5 = (long long *)(a1 + *(int *)(v4 + 20));
    uint64_t v6 = *((void *)v5 + 2);
    long long v13 = *v5;
    uint64_t v14 = v6;
    uint64_t v7 = (long long *)(a2 + *(int *)(v4 + 20));
    uint64_t v8 = *((void *)v7 + 2);
    long long v11 = *v7;
    uint64_t v12 = v8;
    return _s14FitnessLibrary16OfflineLoadStateO2eeoiySbAC_ACtFZ_0((uint64_t *)&v13, (uint64_t *)&v11);
  }
  else
  {
    return 0;
  }
}

BOOL sub_24F0035E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (MEMORY[0x253351FB0]())
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = *(void *)(a1 + v6 + 16);
    long long v14 = *(_OWORD *)(a1 + v6);
    uint64_t v15 = v7;
    uint64_t v8 = (long long *)(a2 + v6);
    uint64_t v9 = *((void *)v8 + 2);
    long long v12 = *v8;
    uint64_t v13 = v9;
    return _s14FitnessLibrary16OfflineLoadStateO2eeoiySbAC_ACtFZ_0((uint64_t *)&v14, (uint64_t *)&v12);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_24F003668(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000016 && a2 == 0x800000024F07A8B0 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461745364616F6CLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_24F072400();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for OfflineState(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24F071500();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    unint64_t v11 = v10[1];
    if (v11 >= 3)
    {
      *uint64_t v9 = *v10;
      v9[1] = v11;
      v9[2] = v10[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      v9[2] = v10[2];
    }
  }
  return a1;
}

unint64_t destroy for OfflineState(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24F071500();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  unint64_t result = *(void *)(a1 + *(int *)(a2 + 20) + 8);
  if (result >= 3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for OfflineState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24F071500();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  unint64_t v10 = v9[1];
  if (v10 >= 3)
  {
    void *v8 = *v9;
    v8[1] = v10;
    v8[2] = v9[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    v8[2] = v9[2];
  }
  return a1;
}

uint64_t assignWithCopy for OfflineState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24F071500();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  unint64_t v10 = *(void *)(a1 + v7 + 8);
  unint64_t v11 = v9[1];
  if (v10 >= 3)
  {
    if (v11 >= 3)
    {
      void *v8 = *v9;
      v8[1] = v9[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v8[2] = v9[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_24F003AE0((uint64_t)v8);
      uint64_t v13 = v9[2];
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      v8[2] = v13;
    }
  }
  else if (v11 >= 3)
  {
    void *v8 = *v9;
    v8[1] = v9[1];
    v8[2] = v9[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v12 = *(_OWORD *)v9;
    v8[2] = v9[2];
    *(_OWORD *)uint64_t v8 = v12;
  }
  return a1;
}

uint64_t sub_24F003AE0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A2D48);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeWithTake for OfflineState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24F071500();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  return a1;
}

uint64_t assignWithTake for OfflineState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24F071500();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  if (*(void *)(a1 + v7 + 8) >= 3uLL)
  {
    unint64_t v10 = v9[1];
    if (v10 >= 3)
    {
      void *v8 = *v9;
      v8[1] = v10;
      swift_bridgeObjectRelease();
      v8[2] = v9[2];
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_24F003AE0((uint64_t)v8);
  }
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  v8[2] = v9[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for OfflineState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24F003CAC);
}

uint64_t sub_24F003CAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24F071500();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 3;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for OfflineState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24F003D90);
}

uint64_t sub_24F003D90(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_24F071500();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 + 2);
  }
  return result;
}

uint64_t sub_24F003E50()
{
  uint64_t result = sub_24F071500();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for OfflineEnvironment(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for Layout(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Layout(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for OfflineState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for OfflineState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F0040F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_24F004118(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_24F004120(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for OfflineState.CodingKeys()
{
  return &type metadata for OfflineState.CodingKeys;
}

unint64_t sub_24F004140()
{
  unint64_t result = qword_2699A2D68;
  if (!qword_2699A2D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A2D68);
  }
  return result;
}

unint64_t sub_24F004198()
{
  unint64_t result = qword_2699A2D70;
  if (!qword_2699A2D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A2D70);
  }
  return result;
}

unint64_t sub_24F0041F0()
{
  unint64_t result = qword_2699A2D78;
  if (!qword_2699A2D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A2D78);
  }
  return result;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

uint64_t sub_24F004264(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_24F004284(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void sub_24F0042C0(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_24F004310()
{
  uint64_t v0 = sub_24F071570();
  __swift_allocate_value_buffer(v0, qword_2699B32B0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2699B32B0);
  return sub_24F071560();
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

void LibraryLayout.interface.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t LibraryLayout.dynamicTypeSize.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

unsigned char *LibraryLayout.init(interface:dynamicTypeSize:)@<X0>(unsigned char *result@<X0>, char a2@<W1>, unsigned char *a3@<X8>)
{
  *a3 = *result;
  a3[1] = a2;
  return result;
}

uint64_t sub_24F004448()
{
  if (*v0) {
    return 0x5463696D616E7964;
  }
  else {
    return 0x6361667265746E69;
  }
}

uint64_t sub_24F004494@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24F004E68(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24F0044BC(uint64_t a1)
{
  unint64_t v2 = sub_24F0046CC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F0044F8(uint64_t a1)
{
  unint64_t v2 = sub_24F0046CC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t LibraryLayout.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A2D90);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388]();
  BOOL v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  int v11 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24F0046CC();
  sub_24F072480();
  char v15 = v8;
  char v14 = 0;
  sub_24F004720();
  sub_24F0723F0();
  if (!v2)
  {
    char v13 = v11;
    char v12 = 1;
    sub_24F004774();
    sub_24F0723F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_24F0046CC()
{
  unint64_t result = qword_2699A2D98;
  if (!qword_2699A2D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A2D98);
  }
  return result;
}

unint64_t sub_24F004720()
{
  unint64_t result = qword_2699A2DA0;
  if (!qword_2699A2DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A2DA0);
  }
  return result;
}

unint64_t sub_24F004774()
{
  unint64_t result = qword_2699A2DA8;
  if (!qword_2699A2DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A2DA8);
  }
  return result;
}

uint64_t LibraryLayout.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A2DB0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388]();
  char v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24F0046CC();
  sub_24F072470();
  if (!v2)
  {
    char v15 = 0;
    sub_24F004998();
    sub_24F072370();
    char v9 = v16;
    char v13 = 1;
    sub_24F0049EC();
    sub_24F072370();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v10 = v14;
    *a2 = v9;
    a2[1] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_24F004998()
{
  unint64_t result = qword_2699A2DB8;
  if (!qword_2699A2DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A2DB8);
  }
  return result;
}

unint64_t sub_24F0049EC()
{
  unint64_t result = qword_2699A2DC0;
  if (!qword_2699A2DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A2DC0);
  }
  return result;
}

uint64_t sub_24F004A40@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return LibraryLayout.init(from:)(a1, a2);
}

uint64_t sub_24F004A58(void *a1)
{
  return LibraryLayout.encode(to:)(a1);
}

uint64_t static LibraryLayout.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 == *a2) {
    return sub_24F071530();
  }
  else {
    return 0;
  }
}

uint64_t sub_24F004A94(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 == *a2) {
    return sub_24F071530();
  }
  else {
    return 0;
  }
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for LibraryLayout(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 65282 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65282 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65282;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65282;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65282;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for LibraryLayout(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65282 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65282 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 254;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F004C24);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryLayout()
{
  return &type metadata for LibraryLayout;
}

unsigned char *storeEnumTagSinglePayload for LibraryLayout.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F004D28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryLayout.CodingKeys()
{
  return &type metadata for LibraryLayout.CodingKeys;
}

unint64_t sub_24F004D64()
{
  unint64_t result = qword_2699A2DC8;
  if (!qword_2699A2DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A2DC8);
  }
  return result;
}

unint64_t sub_24F004DBC()
{
  unint64_t result = qword_2699A2DD0;
  if (!qword_2699A2DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A2DD0);
  }
  return result;
}

unint64_t sub_24F004E14()
{
  unint64_t result = qword_2699A2DD8[0];
  if (!qword_2699A2DD8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2699A2DD8);
  }
  return result;
}

uint64_t sub_24F004E68(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6361667265746E69 && a2 == 0xE900000000000065;
  if (v2 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5463696D616E7964 && a2 == 0xEF657A6953657079)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24F072400();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24F004F8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t destroy for WorkoutPlanBannerEnvironment()
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for WorkoutPlanBannerEnvironment(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_24F00501C(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_24F005084(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v4;
  swift_release();
  return a1;
}

uint64_t sub_24F0050D4(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_24F00511C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for HorizontalGeometryReader()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24F005174()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_24F0051B8()
{
  return 10.0;
}

uint64_t sub_24F0051C0@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t, double)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>, uint64_t a7@<D0>)
{
  uint64_t v46 = a5;
  v64 = a2;
  uint64_t v65 = a3;
  uint64_t v43 = a1;
  v63 = a6;
  uint64_t v10 = *(void *)(a4 - 8);
  ((void (*)(void))MEMORY[0x270FA5388])();
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24F0716E0();
  uint64_t v62 = *(void *)(v13 - 8);
  ((void (*)(void))MEMORY[0x270FA5388])();
  v50 = (char *)&v42 - v14;
  uint64_t v15 = type metadata accessor for HorizontalGeometryReader.SizeKey();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v53 = v15;
  uint64_t v55 = WitnessTable;
  sub_24F071960();
  sub_24F0716E0();
  uint64_t v17 = swift_getWitnessTable();
  uint64_t v75 = MEMORY[0x263F1B428];
  uint64_t v76 = v17;
  uint64_t v51 = MEMORY[0x263F18E48];
  uint64_t v45 = swift_getWitnessTable();
  uint64_t v47 = sub_24F0716C0();
  uint64_t v49 = swift_getWitnessTable();
  uint64_t v57 = sub_24F071880();
  uint64_t v52 = sub_24F0716E0();
  uint64_t v61 = *(void *)(v52 - 8);
  ((void (*)(void))MEMORY[0x270FA5388])();
  v44 = (char *)&v42 - v18;
  unint64_t v54 = sub_24F005B68();
  uint64_t v59 = sub_24F071950();
  uint64_t v58 = sub_24F0716E0();
  uint64_t v60 = *(void *)(v58 - 8);
  uint64_t v19 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  v48 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  v56 = (uint64_t *)((char *)&v42 - v21);
  uint64_t v72 = a7;
  uint64_t v73 = a1;
  __swift_instantiateConcreteTypeFromMangledName(qword_2699A2E68);
  uint64_t v22 = sub_24F071E10();
  v64(v22, v74);
  sub_24F071F40();
  uint64_t v23 = v46;
  uint64_t v24 = v50;
  sub_24F071CA0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, a4);
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = a4;
  *(void *)(v25 + 24) = v23;
  uint64_t v72 = sub_24F0716B0();
  uint64_t v73 = v26;
  sub_24F071F30();
  uint64_t v70 = v23;
  uint64_t v71 = MEMORY[0x263F19100];
  uint64_t v27 = swift_getWitnessTable();
  char v28 = v44;
  sub_24F071B60();
  swift_release();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v24, v13);
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = a4;
  *(void *)(v29 + 24) = v23;
  *(double *)(v29 + 32) = *(double *)&a7;
  v30 = v64;
  uint64_t v31 = v65;
  *(void *)(v29 + 40) = v43;
  *(void *)(v29 + 48) = v30;
  *(void *)(v29 + 56) = v31;
  swift_retain();
  swift_retain();
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v68 = v27;
  uint64_t v69 = v32;
  uint64_t v33 = v52;
  uint64_t v34 = swift_getWitnessTable();
  v35 = v48;
  sub_24F071C30();
  swift_release();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v28, v33);
  uint64_t v36 = swift_getWitnessTable();
  uint64_t v66 = v34;
  uint64_t v67 = v36;
  uint64_t v37 = v58;
  uint64_t v38 = swift_getWitnessTable();
  v39 = v56;
  sub_24F005EE8(v56, v35, v37, v38);
  v40 = *(void (**)(char *, uint64_t))(v60 + 8);
  v40(v35, v37);
  sub_24F005EE8(v63, v39, v37, v38);
  return ((uint64_t (*)(void *, uint64_t))v40)(v39, v37);
}

uint64_t sub_24F0058BC@<X0>(void *a1@<X8>)
{
  v8[0] = sub_24F071D60();
  type metadata accessor for HorizontalGeometryReader.SizeKey();
  sub_24F071660();
  swift_getWitnessTable();
  sub_24F071B80();
  swift_release();
  v5[0] = v6;
  v5[1] = v7;
  sub_24F071960();
  uint64_t v2 = sub_24F0716E0();
  swift_getWitnessTable();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24F005EE8(v8, v5, v2, WitnessTable);
  swift_release();
  uint64_t v6 = v8[0];
  uint64_t v7 = v8[1];
  sub_24F005EE8(a1, &v6, v2, WitnessTable);
  return swift_release();
}

void sub_24F005A54(double *a1, double (*a2)(void))
{
  double v3 = *a1;
  double v4 = a2();
  if (v3 > v4) {
    double v4 = v3;
  }
  *a1 = v4;
}

void sub_24F005A98(double *a1@<X8>)
{
  *a1 = sub_24F0051B8();
}

void sub_24F005AC8(double *a1)
{
}

uint64_t sub_24F005B1C()
{
  return sub_24F071C00();
}

uint64_t sub_24F005B38@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_24F0051C0(*(void *)(v2 + 8), *(void (**)(uint64_t, double))(v2 + 16), *(void *)(v2 + 24), *(void *)(a1 + 16), *(void *)(a1 + 24), a2, *(void *)v2);
}

uint64_t type metadata accessor for HorizontalGeometryReader.SizeKey()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_24F005B68()
{
  unint64_t result = qword_2699A2E60;
  if (!qword_2699A2E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A2E60);
  }
  return result;
}

uint64_t sub_24F005BBC()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24F005BCC@<X0>(void *a1@<X8>)
{
  return sub_24F0058BC(a1);
}

uint64_t sub_24F005BD4()
{
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_24F005C14()
{
  return sub_24F071E20();
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24F005C98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 16);
}

uint64_t sub_24F005CA0()
{
  return swift_getWitnessTable();
}

double sub_24F005EB0()
{
  (*(void (**)(double *__return_ptr))(v0 + 16))(&v2);
  return v2;
}

uint64_t sub_24F005EEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, a1, a2);
}

uint64_t sub_24F005F24()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A2FA0);
  sub_24F007760(&qword_2699A2FA8, &qword_2699A2FA0);
  return sub_24F071600();
}

uint64_t LibraryGalleryView.init(store:canvasViewBuilder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(void *)a5 = sub_24F006060;
  *(void *)(a5 + 8) = result;
  *(unsigned char *)(a5 + 16) = 0;
  *(void *)(a5 + 24) = a3;
  *(void *)(a5 + 32) = a4;
  return result;
}

uint64_t sub_24F006028()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24F006060()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t LibraryGalleryView.body.getter@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v51 = a2;
  uint64_t v52 = a1;
  uint64_t v49 = sub_24F0718D0();
  uint64_t v48 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v46 = (char *)v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A2EF0);
  double v4 = *(long long **)(a1 + 16);
  swift_getTupleTypeMetadata2();
  sub_24F071F60();
  swift_getWitnessTable();
  sub_24F071EA0();
  swift_getWitnessTable();
  sub_24F071E80();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = sub_24F0715C0();
  uint64_t v40 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v36 - v6;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A2EF8);
  uint64_t v8 = sub_24F0716E0();
  uint64_t v43 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v36 - v9;
  uint64_t v11 = swift_getWitnessTable();
  v36[1] = v11;
  uint64_t v12 = sub_24F007760(&qword_2699A2F00, &qword_2699A2EF8);
  uint64_t v60 = v11;
  uint64_t v61 = v12;
  uint64_t v13 = swift_getWitnessTable();
  *(void *)&long long v62 = v8;
  *((void *)&v62 + 1) = v13;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v45 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  v44 = (char *)v36 - v15;
  *(void *)&long long v62 = v8;
  *((void *)&v62 + 1) = v13;
  uint64_t v39 = v13;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  unint64_t v17 = sub_24F0068B0();
  uint64_t v47 = OpaqueTypeMetadata2;
  *(void *)&long long v62 = OpaqueTypeMetadata2;
  *((void *)&v62 + 1) = &type metadata for LibraryLayout;
  uint64_t v42 = OpaqueTypeConformance2;
  *(void *)&long long v63 = OpaqueTypeConformance2;
  *((void *)&v63 + 1) = v17;
  unint64_t v41 = v17;
  uint64_t v18 = swift_getOpaqueTypeMetadata2();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)v36 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)v36 - v23;
  long long v25 = v50[1];
  long long v62 = *v50;
  long long v63 = v25;
  uint64_t v64 = *((void *)v50 + 4);
  sub_24F0719C0();
  uint64_t v26 = *(void *)(v52 + 24);
  v50 = v4;
  uint64_t v53 = v4;
  uint64_t v54 = v26;
  uint64_t v37 = v26;
  uint64_t v55 = &v62;
  sub_24F0715D0();
  sub_24F071860();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A2F10);
  sub_24F007164();
  uint64_t v27 = v46;
  sub_24F071BF0();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v7, v5);
  sub_24F0718C0();
  LOBYTE(v5) = sub_24F0719C0();
  sub_24F0719B0();
  sub_24F0719B0();
  if (sub_24F0719B0() != v5) {
    sub_24F0719B0();
  }
  char v28 = v44;
  sub_24F071C70();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v27, v49);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v10, v8);
  long long v57 = v62;
  long long v58 = v63;
  uint64_t v59 = v64;
  sub_24F005F24();
  swift_getKeyPath();
  sub_24F071FE0();
  swift_release();
  swift_release();
  __int16 v56 = v57;
  uint64_t v29 = swift_allocObject();
  uint64_t v30 = v37;
  *(void *)(v29 + 16) = v50;
  *(void *)(v29 + 24) = v30;
  long long v31 = v63;
  *(_OWORD *)(v29 + 32) = v62;
  *(_OWORD *)(v29 + 48) = v31;
  *(void *)(v29 + 64) = v64;
  sub_24F007298((uint64_t)&v62);
  uint64_t v32 = v47;
  sub_24F071D00();
  swift_release();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v28, v32);
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
  v33(v24, v22, v18);
  uint64_t v34 = *(void (**)(char *, uint64_t))(v19 + 8);
  v34(v22, v18);
  v33(v51, v24, v18);
  return ((uint64_t (*)(char *, uint64_t))v34)(v24, v18);
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_24F0068B0()
{
  unint64_t result = qword_2699A2F08;
  if (!qword_2699A2F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A2F08);
  }
  return result;
}

uint64_t sub_24F006904@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A2EF0);
  swift_getTupleTypeMetadata2();
  sub_24F071F60();
  swift_getWitnessTable();
  sub_24F071EA0();
  swift_getWitnessTable();
  uint64_t v8 = sub_24F071E80();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = &v18[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = &v18[-v13];
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v21 = a1;
  sub_24F071860();
  sub_24F071E70();
  swift_getWitnessTable();
  uint64_t v15 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16);
  v15(v14, v12, v8);
  char v16 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
  v16(v12, v8);
  v15(a4, v14, v8);
  return ((uint64_t (*)(unsigned char *, uint64_t))v16)(v14, v8);
}

uint64_t sub_24F006B38@<X0>(unsigned char *a1@<X8>)
{
  return sub_24F006904(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_24F006B44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A2EF0);
  swift_getTupleTypeMetadata2();
  sub_24F071F60();
  swift_getWitnessTable();
  uint64_t v8 = sub_24F071EA0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = &v18[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = &v18[-v13];
  sub_24F071F20();
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v21 = a1;
  sub_24F071E90();
  swift_getWitnessTable();
  uint64_t v15 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16);
  v15(v14, v12, v8);
  char v16 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
  v16(v12, v8);
  v15(a4, v14, v8);
  return ((uint64_t (*)(unsigned char *, uint64_t))v16)(v14, v8);
}

uint64_t sub_24F006D40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v34 = a3;
  uint64_t v35 = a4;
  uint64_t v32 = *(void *)(a2 - 8);
  uint64_t v33 = a2;
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v30 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A2EF0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  long long v31 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  char v16 = (char *)&v30 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v30 - v17;
  uint64_t v39 = 0;
  LOBYTE(v40) = 1;
  unsigned __int8 v19 = sub_24F0719C0();
  sub_24F0719B0();
  sub_24F0719B0();
  if (sub_24F0719B0() != v19) {
    sub_24F0719B0();
  }
  sub_24F071F30();
  sub_24F071C80();
  uint64_t v20 = (*(uint64_t (**)(char *, char *, uint64_t))(v11 + 32))(v18, v16, v10);
  uint64_t v21 = v7;
  (*(void (**)(uint64_t))(a1 + 24))(v20);
  uint64_t v22 = v32;
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
  uint64_t v24 = v7;
  uint64_t v25 = v33;
  v23(v9, v24, v33);
  uint64_t v32 = *(void *)(v22 + 8);
  ((void (*)(char *, uint64_t))v32)(v21, v25);
  uint64_t v26 = v31;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v31, v18, v10);
  uint64_t v39 = v26;
  v23(v21, v9, v25);
  uint64_t v40 = v21;
  v38[0] = v10;
  v38[1] = v25;
  uint64_t OpaqueTypeConformance2 = MEMORY[0x263F1B6B0];
  uint64_t v37 = MEMORY[0x263F1B698];
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v37 = v34;
  sub_24F03FE50((uint64_t)&v39, 2uLL, (uint64_t)v38);
  uint64_t v27 = (void (*)(char *, uint64_t))v32;
  ((void (*)(char *, uint64_t))v32)(v9, v25);
  char v28 = *(void (**)(char *, uint64_t))(v11 + 8);
  v28(v18, v10);
  v27(v21, v25);
  return ((uint64_t (*)(char *, uint64_t))v28)(v26, v10);
}

uint64_t sub_24F0070CC()
{
  return sub_24F0715D0();
}

double sub_24F0070E4@<D0>(uint64_t a1@<X8>)
{
  sub_24F071F30();
  sub_24F071650();
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 40) = v6;
  double result = *(double *)&v7;
  *(_OWORD *)(a1 + 48) = v7;
  return result;
}

unint64_t sub_24F007164()
{
  unint64_t result = qword_2699A2F18[0];
  if (!qword_2699A2F18[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A2F10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2699A2F18);
  }
  return result;
}

uint64_t sub_24F0071D8()
{
  return swift_release();
}

uint64_t sub_24F007240()
{
  sub_24F007284();
  swift_release();
  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_24F007284()
{
  return swift_release();
}

uint64_t sub_24F00728C()
{
  return sub_24F0071D8();
}

uint64_t sub_24F007298(uint64_t a1)
{
  return a1;
}

uint64_t sub_24F0072D8()
{
  return swift_retain();
}

uint64_t sub_24F0072E0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24F007328()
{
  sub_24F007284();
  return swift_release();
}

uint64_t sub_24F00736C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_24F0072D8();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  uint64_t v7 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v7;
  swift_retain();
  return a1;
}

uint64_t sub_24F0073D0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_24F0072D8();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  sub_24F007284();
  uint64_t v7 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v7;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_24F007460(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  sub_24F007284();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryPickerView.Layout(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LibraryPickerView.Layout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for LibraryGalleryView()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24F007560()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24F007760(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24F0077A4@<X0>(unsigned char *a1@<X8>)
{
  return sub_24F006B44(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_24F0077B0@<X0>(uint64_t a1@<X8>)
{
  return sub_24F006D40(v1[4], v1[2], v1[3], a1);
}

BOOL sub_24F0077BC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_24F0077D0()
{
  uint64_t result = 0x74756F6B726F77;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x697461746964656DLL;
      break;
    case 2:
      uint64_t result = 0x6B63617473;
      break;
    case 3:
      uint64_t result = 0x6D6172676F7270;
      break;
    case 4:
      uint64_t result = 0x5074756F6B726F77;
      break;
    case 5:
      uint64_t result = 0x64616F6C6E776F64;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24F00789C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24F009CE0(a1, a2);
  *a3 = result;
  return result;
}

void sub_24F0078C4(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_24F0078D0(uint64_t a1)
{
  unint64_t v2 = sub_24F0089B4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F00790C(uint64_t a1)
{
  unint64_t v2 = sub_24F0089B4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F007948()
{
  return 1;
}

uint64_t sub_24F007958()
{
  return 0x696669746E656469;
}

void sub_24F007978(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_24F007984(uint64_t a1)
{
  unint64_t v2 = sub_24F008A08();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F0079C0(uint64_t a1)
{
  unint64_t v2 = sub_24F008A08();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F0079FC(uint64_t a1)
{
  unint64_t v2 = sub_24F008B58();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F007A38(uint64_t a1)
{
  unint64_t v2 = sub_24F008B58();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F007A74(uint64_t a1)
{
  unint64_t v2 = sub_24F008AB0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F007AB0(uint64_t a1)
{
  unint64_t v2 = sub_24F008AB0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F007AEC()
{
  return sub_24F072440();
}

uint64_t sub_24F007B14(uint64_t a1)
{
  unint64_t v2 = sub_24F008B04();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F007B50(uint64_t a1)
{
  unint64_t v2 = sub_24F008B04();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F007B8C(uint64_t a1)
{
  unint64_t v2 = sub_24F008BAC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F007BC8(uint64_t a1)
{
  unint64_t v2 = sub_24F008BAC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F007C04()
{
  return sub_24F072460();
}

uint64_t sub_24F007C48()
{
  return sub_24F072460();
}

uint64_t sub_24F007C88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24F072400();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24F007D2C(uint64_t a1)
{
  unint64_t v2 = sub_24F008A5C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F007D68(uint64_t a1)
{
  unint64_t v2 = sub_24F008A5C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t LibraryItem.id.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24F0714D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LibraryItem();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24F008070(v1, (uint64_t)v8);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v9 = 0x697461746964656DLL;
      unint64_t v10 = 0xEB000000002D6E6FLL;
      goto LABEL_8;
    case 2u:
      uint64_t v9 = 0x2D6B63617473;
      unint64_t v10 = 0xE600000000000000;
      goto LABEL_8;
    case 3u:
      uint64_t v9 = 0x2D6D6172676F7270;
      unint64_t v10 = 0xE800000000000000;
      goto LABEL_8;
    case 4u:
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
      strcpy((char *)v13, "workoutPlan-");
      BYTE5(v13[1]) = 0;
      HIWORD(v13[1]) = -5120;
      sub_24F0714A0();
      sub_24F072090();
      swift_bridgeObjectRelease();
      uint64_t v11 = v13[0];
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return v11;
    case 5u:
      uint64_t v9 = 0x64616F6C6E776F64;
      unint64_t v10 = 0xE90000000000002DLL;
      goto LABEL_8;
    default:
      uint64_t v9 = 0x2D74756F6B726F77;
      unint64_t v10 = 0xE800000000000000;
LABEL_8:
      v13[0] = v9;
      v13[1] = v10;
      sub_24F072090();
      swift_bridgeObjectRelease();
      return v13[0];
  }
}

uint64_t type metadata accessor for LibraryItem()
{
  uint64_t result = qword_2699A3080;
  if (!qword_2699A3080) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24F008070(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LibraryItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24F0080D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = LibraryItem.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t LibraryItem.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A2FB0);
  uint64_t v56 = *(void *)(v2 - 8);
  uint64_t v57 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v54 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A2FB8);
  uint64_t v53 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  v50 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24F0714D0();
  uint64_t v51 = *(void *)(v5 - 8);
  uint64_t v52 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v49 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A2FC0);
  uint64_t v47 = *(void *)(v7 - 8);
  uint64_t v48 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v46 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A2FC8);
  uint64_t v44 = *(void *)(v9 - 8);
  uint64_t v45 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v43 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A2FD0);
  uint64_t v41 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A2FD8);
  uint64_t v40 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for LibraryItem();
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A2FE0);
  uint64_t v59 = *(void *)(v19 - 8);
  uint64_t v60 = v19;
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24F0089B4();
  long long v58 = v21;
  sub_24F072480();
  sub_24F008070(v61, (uint64_t)v18);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      char v63 = 1;
      sub_24F008B58();
      uint64_t v25 = v60;
      uint64_t v26 = v58;
      sub_24F072390();
      uint64_t v27 = v42;
      sub_24F0723C0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v12, v27);
      return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v26, v25);
    case 2u:
      char v64 = 2;
      sub_24F008B04();
      char v28 = v43;
      uint64_t v29 = v60;
      uint64_t v30 = v58;
      sub_24F072390();
      uint64_t v31 = v45;
      sub_24F0723C0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v28, v31);
      goto LABEL_9;
    case 3u:
      char v65 = 3;
      sub_24F008AB0();
      uint64_t v32 = v46;
      uint64_t v29 = v60;
      uint64_t v30 = v58;
      sub_24F072390();
      uint64_t v33 = v48;
      sub_24F0723C0();
      swift_bridgeObjectRelease();
      uint64_t v34 = v47;
      goto LABEL_8;
    case 4u:
      uint64_t v36 = v51;
      uint64_t v35 = v52;
      uint64_t v37 = v49;
      (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v49, v18, v52);
      char v66 = 4;
      sub_24F008A5C();
      uint64_t v38 = v50;
      uint64_t v29 = v60;
      uint64_t v30 = v58;
      sub_24F072390();
      sub_24F00A42C(&qword_2699A3000, MEMORY[0x263F07508]);
      uint64_t v39 = v55;
      sub_24F0723F0();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v38, v39);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v35);
      goto LABEL_9;
    case 5u:
      char v67 = 5;
      sub_24F008A08();
      uint64_t v32 = v54;
      uint64_t v29 = v60;
      uint64_t v30 = v58;
      sub_24F072390();
      uint64_t v33 = v57;
      sub_24F0723C0();
      swift_bridgeObjectRelease();
      uint64_t v34 = v56;
LABEL_8:
      (*(void (**)(char *, uint64_t))(v34 + 8))(v32, v33);
LABEL_9:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v30, v29);
      break;
    default:
      char v62 = 0;
      sub_24F008BAC();
      uint64_t v22 = v60;
      uint64_t v23 = v58;
      sub_24F072390();
      sub_24F0723C0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v15, v13);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v23, v22);
      break;
  }
  return result;
}

unint64_t sub_24F0089B4()
{
  unint64_t result = qword_2699A2FE8;
  if (!qword_2699A2FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A2FE8);
  }
  return result;
}

unint64_t sub_24F008A08()
{
  unint64_t result = qword_2699A2FF0;
  if (!qword_2699A2FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A2FF0);
  }
  return result;
}

unint64_t sub_24F008A5C()
{
  unint64_t result = qword_2699A2FF8;
  if (!qword_2699A2FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A2FF8);
  }
  return result;
}

unint64_t sub_24F008AB0()
{
  unint64_t result = qword_2699A3008;
  if (!qword_2699A3008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3008);
  }
  return result;
}

unint64_t sub_24F008B04()
{
  unint64_t result = qword_2699A3010;
  if (!qword_2699A3010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3010);
  }
  return result;
}

unint64_t sub_24F008B58()
{
  unint64_t result = qword_2699A3018;
  if (!qword_2699A3018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3018);
  }
  return result;
}

unint64_t sub_24F008BAC()
{
  unint64_t result = qword_2699A3020;
  if (!qword_2699A3020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3020);
  }
  return result;
}

uint64_t LibraryItem.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v110 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3028);
  uint64_t v108 = *(void *)(v3 - 8);
  uint64_t v109 = v3;
  MEMORY[0x270FA5388](v3);
  v114 = (char *)&v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3030);
  uint64_t v106 = *(void *)(v5 - 8);
  uint64_t v107 = v5;
  MEMORY[0x270FA5388](v5);
  v113 = (char *)&v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3038);
  uint64_t v104 = *(void *)(v7 - 8);
  uint64_t v105 = v7;
  MEMORY[0x270FA5388](v7);
  v112 = (char *)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3040);
  uint64_t v103 = *(void *)(v102 - 8);
  MEMORY[0x270FA5388](v102);
  v118 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3048);
  uint64_t v100 = *(void *)(v101 - 8);
  MEMORY[0x270FA5388](v101);
  v117 = (char *)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3050);
  uint64_t v99 = *(void *)(v116 - 8);
  MEMORY[0x270FA5388](v116);
  v111 = (char *)&v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3058);
  uint64_t v115 = *(void *)(v121 - 8);
  MEMORY[0x270FA5388](v121);
  uint64_t v13 = (char *)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = type metadata accessor for LibraryItem();
  uint64_t v14 = MEMORY[0x270FA5388](v119);
  v97 = (uint64_t *)((char *)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  v98 = (char *)&v93 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v93 - v19;
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v23 = (uint64_t *)((char *)&v93 - v22);
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v26 = (char *)&v93 - v25;
  uint64_t v27 = MEMORY[0x270FA5388](v24);
  uint64_t v29 = (char *)&v93 - v28;
  MEMORY[0x270FA5388](v27);
  uint64_t v31 = (char *)&v93 - v30;
  uint64_t v32 = a1[3];
  v122 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v32);
  sub_24F0089B4();
  v120 = v13;
  uint64_t v33 = v123;
  sub_24F072470();
  if (!v33)
  {
    v94 = (uint64_t *)v26;
    v95 = v23;
    v96 = (uint64_t *)v20;
    v123 = (uint64_t *)v29;
    uint64_t v35 = v116;
    uint64_t v34 = v117;
    uint64_t v36 = v118;
    uint64_t v37 = v119;
    uint64_t v38 = (uint64_t)v31;
    uint64_t v39 = v120;
    uint64_t v40 = sub_24F072380();
    if (*(void *)(v40 + 16) == 1)
    {
      uint64_t v41 = v121;
      switch(*(unsigned char *)(v40 + 32))
      {
        case 1:
          char v125 = 1;
          sub_24F008B58();
          uint64_t v50 = v41;
          uint64_t v51 = v120;
          sub_24F072300();
          v118 = (char *)v38;
          uint64_t v59 = v34;
          uint64_t v60 = v101;
          uint64_t v61 = sub_24F072340();
          uint64_t v62 = v115;
          uint64_t v78 = v61;
          v79 = v59;
          uint64_t v81 = v80;
          (*(void (**)(char *, uint64_t))(v100 + 8))(v79, v60);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v62 + 8))(v51, v50);
          uint64_t v77 = (uint64_t)v94;
          uint64_t *v94 = v78;
          *(void *)(v77 + 8) = v81;
          goto LABEL_13;
        case 2:
          char v126 = 2;
          sub_24F008B04();
          uint64_t v52 = v36;
          sub_24F072300();
          uint64_t v63 = v102;
          uint64_t v82 = sub_24F072340();
          uint64_t v84 = v83;
          (*(void (**)(char *, uint64_t))(v103 + 8))(v52, v63);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v115 + 8))(v120, v41);
          v85 = v95;
          uint64_t *v95 = v82;
          v85[1] = v84;
          swift_storeEnumTagMultiPayload();
          uint64_t v77 = (uint64_t)v85;
          goto LABEL_12;
        case 3:
          char v127 = 3;
          sub_24F008AB0();
          uint64_t v53 = v112;
          uint64_t v54 = v120;
          sub_24F072300();
          v118 = (char *)v38;
          uint64_t v64 = v105;
          uint64_t v65 = sub_24F072340();
          uint64_t v66 = v115;
          uint64_t v86 = v65;
          uint64_t v88 = v87;
          (*(void (**)(char *, uint64_t))(v104 + 8))(v53, v64);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v66 + 8))(v54, v41);
          uint64_t v77 = (uint64_t)v96;
          uint64_t *v96 = v86;
          *(void *)(v77 + 8) = v88;
          goto LABEL_13;
        case 4:
          char v128 = 4;
          sub_24F008A5C();
          uint64_t v55 = v113;
          uint64_t v56 = v120;
          sub_24F072300();
          sub_24F0714D0();
          sub_24F00A42C(&qword_2699A3068, MEMORY[0x263F07508]);
          uint64_t v77 = (uint64_t)v98;
          uint64_t v67 = v107;
          sub_24F072370();
          uint64_t v68 = v115;
          (*(void (**)(char *, uint64_t))(v106 + 8))(v55, v67);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v68 + 8))(v56, v41);
          swift_storeEnumTagMultiPayload();
LABEL_12:
          uint64_t v89 = v110;
          goto LABEL_14;
        case 5:
          char v129 = 5;
          sub_24F008A08();
          uint64_t v57 = v114;
          long long v58 = v120;
          sub_24F072300();
          v118 = (char *)v38;
          uint64_t v69 = v57;
          uint64_t v70 = v109;
          uint64_t v71 = sub_24F072340();
          uint64_t v72 = v115;
          uint64_t v90 = v71;
          uint64_t v92 = v91;
          (*(void (**)(char *, uint64_t))(v108 + 8))(v69, v70);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v72 + 8))(v58, v41);
          uint64_t v77 = (uint64_t)v97;
          uint64_t *v97 = v90;
          *(void *)(v77 + 8) = v92;
          goto LABEL_13;
        default:
          char v124 = 0;
          sub_24F008BAC();
          uint64_t v42 = v111;
          uint64_t v43 = v120;
          sub_24F072300();
          v118 = (char *)v38;
          uint64_t v44 = sub_24F072340();
          uint64_t v45 = v115;
          uint64_t v74 = v44;
          uint64_t v76 = v75;
          (*(void (**)(char *, uint64_t))(v99 + 8))(v42, v35);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v45 + 8))(v43, v41);
          uint64_t v77 = (uint64_t)v123;
          uint64_t *v123 = v74;
          *(void *)(v77 + 8) = v76;
LABEL_13:
          swift_storeEnumTagMultiPayload();
          uint64_t v89 = v110;
          uint64_t v38 = (uint64_t)v118;
LABEL_14:
          sub_24F00994C(v77, v38);
          sub_24F00994C(v38, v89);
          break;
      }
    }
    else
    {
      uint64_t v46 = sub_24F072260();
      swift_allocError();
      uint64_t v48 = v47;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3060);
      uint64_t *v48 = v37;
      uint64_t v49 = v121;
      sub_24F072310();
      sub_24F072250();
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v46 - 8) + 104))(v48, *MEMORY[0x263F8DCB0], v46);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v115 + 8))(v39, v49);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v122);
}

uint64_t sub_24F00994C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LibraryItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24F0099B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return LibraryItem.init(from:)(a1, a2);
}

uint64_t sub_24F0099C8(void *a1)
{
  return LibraryItem.encode(to:)(a1);
}

uint64_t LibraryItem.hash(into:)()
{
  uint64_t v1 = sub_24F0714D0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for LibraryItem();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24F008070(v0, (uint64_t)v7);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 4u:
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
      sub_24F072440();
      sub_24F00A42C(&qword_2699A3070, MEMORY[0x263F07508]);
      sub_24F072010();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      break;
    default:
      sub_24F072440();
      sub_24F072080();
      uint64_t result = swift_bridgeObjectRelease();
      break;
  }
  return result;
}

uint64_t LibraryItem.hashValue.getter()
{
  return sub_24F072460();
}

uint64_t sub_24F009C5C()
{
  return sub_24F072460();
}

uint64_t sub_24F009CA0()
{
  return sub_24F072460();
}

uint64_t sub_24F009CE0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74756F6B726F77 && a2 == 0xE700000000000000;
  if (v2 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x697461746964656DLL && a2 == 0xEA00000000006E6FLL || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6B63617473 && a2 == 0xE500000000000000 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D6172676F7270 && a2 == 0xE700000000000000 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x5074756F6B726F77 && a2 == 0xEB000000006E616CLL || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x64616F6C6E776F64 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_24F072400();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t _s14FitnessLibrary0B4ItemO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v45 = a2;
  uint64_t v3 = sub_24F0714D0();
  uint64_t v43 = *(void *)(v3 - 8);
  uint64_t v44 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v42 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for LibraryItem();
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (uint64_t *)((char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v42 - v10;
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (uint64_t *)((char *)&v42 - v13);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (uint64_t *)((char *)&v42 - v16);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (uint64_t *)((char *)&v42 - v19);
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (uint64_t *)((char *)&v42 - v21);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3138);
  uint64_t v24 = MEMORY[0x270FA5388](v23 - 8);
  uint64_t v26 = (char *)&v42 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = &v26[*(int *)(v24 + 56)];
  sub_24F008070(a1, (uint64_t)v26);
  sub_24F008070(v45, (uint64_t)v27);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_24F008070((uint64_t)v26, (uint64_t)v20);
      uint64_t v31 = *v20;
      uint64_t v30 = v20[1];
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_20;
      }
      if (v31 == *(void *)v27 && v30 == *((void *)v27 + 1)) {
        goto LABEL_17;
      }
      goto LABEL_15;
    case 2u:
      sub_24F008070((uint64_t)v26, (uint64_t)v17);
      uint64_t v29 = *v17;
      uint64_t v28 = v17[1];
      if (swift_getEnumCaseMultiPayload() == 2) {
        goto LABEL_11;
      }
      goto LABEL_20;
    case 3u:
      sub_24F008070((uint64_t)v26, (uint64_t)v14);
      uint64_t v29 = *v14;
      uint64_t v28 = v14[1];
      if (swift_getEnumCaseMultiPayload() != 3) {
        goto LABEL_20;
      }
      goto LABEL_11;
    case 4u:
      sub_24F008070((uint64_t)v26, (uint64_t)v11);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v38 = v42;
        uint64_t v37 = v43;
        uint64_t v39 = v27;
        uint64_t v40 = v44;
        (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v42, v39, v44);
        char v35 = sub_24F0714B0();
        uint64_t v41 = *(void (**)(char *, uint64_t))(v37 + 8);
        v41(v38, v40);
        v41(v11, v40);
        sub_24F00A9D0((uint64_t)v26);
        return v35 & 1;
      }
      (*(void (**)(char *, uint64_t))(v43 + 8))(v11, v44);
      goto LABEL_21;
    case 5u:
      sub_24F008070((uint64_t)v26, (uint64_t)v8);
      uint64_t v29 = *v8;
      uint64_t v28 = v8[1];
      if (swift_getEnumCaseMultiPayload() != 5) {
        goto LABEL_20;
      }
      goto LABEL_11;
    default:
      sub_24F008070((uint64_t)v26, (uint64_t)v22);
      uint64_t v29 = *v22;
      uint64_t v28 = v22[1];
      if (swift_getEnumCaseMultiPayload())
      {
LABEL_20:
        swift_bridgeObjectRelease();
LABEL_21:
        sub_24F00B704((uint64_t)v26);
        goto LABEL_22;
      }
LABEL_11:
      if (v29 == *(void *)v27 && v28 == *((void *)v27 + 1))
      {
LABEL_17:
        swift_bridgeObjectRelease_n();
        goto LABEL_18;
      }
LABEL_15:
      char v34 = sub_24F072400();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v34)
      {
LABEL_18:
        sub_24F00A9D0((uint64_t)v26);
        char v35 = 1;
        return v35 & 1;
      }
      sub_24F00A9D0((uint64_t)v26);
LABEL_22:
      char v35 = 0;
      return v35 & 1;
  }
}

uint64_t sub_24F00A3D8()
{
  return MEMORY[0x263F8D320];
}

uint64_t sub_24F00A3E4()
{
  return sub_24F00A42C(&qword_2699A3078, (void (*)(uint64_t))type metadata accessor for LibraryItem);
}

uint64_t sub_24F00A42C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for LibraryItem(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 4u:
        uint64_t v7 = sub_24F0714D0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        break;
      default:
        uint64_t v8 = a2[1];
        *a1 = *a2;
        a1[1] = v8;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for LibraryItem(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 5:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 4:
      uint64_t v3 = sub_24F0714D0();
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t result = v4(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

void *initializeWithCopy for LibraryItem(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 4u:
      uint64_t v4 = sub_24F0714D0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      break;
    default:
      uint64_t v5 = a2[1];
      *a1 = *a2;
      a1[1] = v5;
      swift_bridgeObjectRetain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for LibraryItem(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_24F00A9D0((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 4u:
        uint64_t v4 = sub_24F0714D0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
        break;
      default:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24F00A9D0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LibraryItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeWithTake for LibraryItem(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 4)
  {
    uint64_t v6 = sub_24F0714D0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for LibraryItem(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24F00A9D0((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      uint64_t v6 = sub_24F0714D0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for LibraryItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_24F00AC00()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_24F00AC10()
{
  uint64_t result = sub_24F0714D0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for LibraryItem.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for LibraryItem.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F00AE04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

unsigned char *sub_24F00AE2C(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for LibraryItem.CodingKeys()
{
  return &type metadata for LibraryItem.CodingKeys;
}

uint64_t sub_24F00AE50()
{
  return 0;
}

ValueMetadata *type metadata accessor for LibraryItem.WorkoutCodingKeys()
{
  return &type metadata for LibraryItem.WorkoutCodingKeys;
}

ValueMetadata *type metadata accessor for LibraryItem.MeditationCodingKeys()
{
  return &type metadata for LibraryItem.MeditationCodingKeys;
}

ValueMetadata *type metadata accessor for LibraryItem.StackCodingKeys()
{
  return &type metadata for LibraryItem.StackCodingKeys;
}

ValueMetadata *type metadata accessor for LibraryItem.ProgramCodingKeys()
{
  return &type metadata for LibraryItem.ProgramCodingKeys;
}

ValueMetadata *type metadata accessor for LibraryItem.WorkoutPlanCodingKeys()
{
  return &type metadata for LibraryItem.WorkoutPlanCodingKeys;
}

uint64_t getEnumTagSinglePayload for WorkoutPlanBannerState.CodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s14FitnessLibrary11LibraryItemO17WorkoutCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24F00AF94);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryItem.DownloadCodingKeys()
{
  return &type metadata for LibraryItem.DownloadCodingKeys;
}

unint64_t sub_24F00AFD0()
{
  unint64_t result = qword_2699A3090;
  if (!qword_2699A3090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3090);
  }
  return result;
}

unint64_t sub_24F00B028()
{
  unint64_t result = qword_2699A3098;
  if (!qword_2699A3098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3098);
  }
  return result;
}

unint64_t sub_24F00B080()
{
  unint64_t result = qword_2699A30A0;
  if (!qword_2699A30A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A30A0);
  }
  return result;
}

unint64_t sub_24F00B0D8()
{
  unint64_t result = qword_2699A30A8;
  if (!qword_2699A30A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A30A8);
  }
  return result;
}

unint64_t sub_24F00B130()
{
  unint64_t result = qword_2699A30B0;
  if (!qword_2699A30B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A30B0);
  }
  return result;
}

unint64_t sub_24F00B188()
{
  unint64_t result = qword_2699A30B8;
  if (!qword_2699A30B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A30B8);
  }
  return result;
}

unint64_t sub_24F00B1E0()
{
  unint64_t result = qword_2699A30C0;
  if (!qword_2699A30C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A30C0);
  }
  return result;
}

unint64_t sub_24F00B238()
{
  unint64_t result = qword_2699A30C8;
  if (!qword_2699A30C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A30C8);
  }
  return result;
}

unint64_t sub_24F00B290()
{
  unint64_t result = qword_2699A30D0;
  if (!qword_2699A30D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A30D0);
  }
  return result;
}

unint64_t sub_24F00B2E8()
{
  unint64_t result = qword_2699A30D8;
  if (!qword_2699A30D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A30D8);
  }
  return result;
}

unint64_t sub_24F00B340()
{
  unint64_t result = qword_2699A30E0;
  if (!qword_2699A30E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A30E0);
  }
  return result;
}

unint64_t sub_24F00B398()
{
  unint64_t result = qword_2699A30E8;
  if (!qword_2699A30E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A30E8);
  }
  return result;
}

unint64_t sub_24F00B3F0()
{
  unint64_t result = qword_2699A30F0;
  if (!qword_2699A30F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A30F0);
  }
  return result;
}

unint64_t sub_24F00B448()
{
  unint64_t result = qword_2699A30F8;
  if (!qword_2699A30F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A30F8);
  }
  return result;
}

unint64_t sub_24F00B4A0()
{
  unint64_t result = qword_2699A3100;
  if (!qword_2699A3100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3100);
  }
  return result;
}

unint64_t sub_24F00B4F8()
{
  unint64_t result = qword_2699A3108;
  if (!qword_2699A3108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3108);
  }
  return result;
}

unint64_t sub_24F00B550()
{
  unint64_t result = qword_2699A3110;
  if (!qword_2699A3110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3110);
  }
  return result;
}

unint64_t sub_24F00B5A8()
{
  unint64_t result = qword_2699A3118;
  if (!qword_2699A3118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3118);
  }
  return result;
}

unint64_t sub_24F00B600()
{
  unint64_t result = qword_2699A3120;
  if (!qword_2699A3120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3120);
  }
  return result;
}

unint64_t sub_24F00B658()
{
  unint64_t result = qword_2699A3128;
  if (!qword_2699A3128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3128);
  }
  return result;
}

unint64_t sub_24F00B6B0()
{
  unint64_t result = qword_2699A3130;
  if (!qword_2699A3130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3130);
  }
  return result;
}

uint64_t sub_24F00B704(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3138);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t LibraryPage.title(locale:)(uint64_t a1)
{
  uint64_t v2 = sub_24F071500();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24F072040();
  MEMORY[0x270FA5388](v6 - 8);
  sub_24F072030();
  if (qword_2699A2D08 != -1) {
    swift_once();
  }
  BOOL v7 = (void *)qword_2699B32D8;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  id v8 = v7;
  return sub_24F072070();
}

unint64_t LibraryPage.iconName.getter(char a1)
{
  unint64_t result = 0x722E657275676966;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656D2E656C707061;
      break;
    case 2:
      unint64_t result = 0x2E7373656E746966;
      break;
    case 3:
      unint64_t result = 0x7261646E656C6163;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
      unint64_t result = 0xD000000000000015;
      break;
    case 6:
      unint64_t result = 0x6B636F6C63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t LibraryPage.emptyTitle(locale:)(uint64_t a1)
{
  uint64_t v2 = sub_24F071500();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24F072040();
  MEMORY[0x270FA5388](v6 - 8);
  sub_24F072030();
  if (qword_2699A2D08 != -1) {
    swift_once();
  }
  BOOL v7 = (void *)qword_2699B32D8;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  id v8 = v7;
  return sub_24F072070();
}

uint64_t LibraryPage.emptyDescription(locale:)(uint64_t a1)
{
  uint64_t v2 = sub_24F071500();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24F072040();
  MEMORY[0x270FA5388](v6 - 8);
  sub_24F072030();
  if (qword_2699A2D08 != -1) {
    swift_once();
  }
  BOOL v7 = (void *)qword_2699B32D8;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  id v8 = v7;
  return sub_24F072070();
}

void sub_24F00BFD0()
{
  qword_2699A3140 = (uint64_t)&unk_2700A5758;
}

uint64_t static LibraryPage.remoteBrowsing.getter()
{
  if (qword_2699A2CE8 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

void sub_24F00C040()
{
  qword_2699B32C8 = (uint64_t)&unk_2700A5780;
}

void sub_24F00C054()
{
  qword_2699B32D0 = (uint64_t)&unk_2700A57A8;
}

void *static LibraryPage.allCases.getter()
{
  return &unk_2700A5898;
}

uint64_t LibraryPage.rawValue.getter(char a1)
{
  uint64_t result = 0x7374756F6B726F77;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x697461746964656DLL;
      break;
    case 2:
      uint64_t result = 0x736B63617473;
      break;
    case 3:
      uint64_t result = 0x5074756F6B726F77;
      break;
    case 4:
      uint64_t result = 0x736D6172676F7270;
      break;
    case 5:
      uint64_t result = 0x64616F6C6E776F64;
      break;
    case 6:
      uint64_t result = 0x796C746E65636572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24F00C178(unsigned __int8 *a1, unsigned char *a2)
{
  uint64_t v2 = 0x7374756F6B726F77;
  uint64_t v3 = *a1;
  unint64_t v4 = 0xE800000000000000;
  uint64_t v5 = 0x7374756F6B726F77;
  switch(v3)
  {
    case 1:
      uint64_t v5 = 0x697461746964656DLL;
      unint64_t v4 = 0xEB00000000736E6FLL;
      break;
    case 2:
      unint64_t v4 = 0xE600000000000000;
      uint64_t v5 = 0x736B63617473;
      break;
    case 3:
      uint64_t v5 = 0x5074756F6B726F77;
      unint64_t v4 = 0xEC000000736E616CLL;
      break;
    case 4:
      uint64_t v5 = 0x736D6172676F7270;
      break;
    case 5:
      uint64_t v5 = 0x64616F6C6E776F64;
      unint64_t v4 = 0xEA00000000006465;
      break;
    case 6:
      uint64_t v5 = 0x796C746E65636572;
      unint64_t v4 = 0xED00006465646441;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE800000000000000;
  switch(*a2)
  {
    case 1:
      unint64_t v6 = 0xEB00000000736E6FLL;
      if (v5 == 0x697461746964656DLL) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x736B63617473) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 3:
      unint64_t v6 = 0xEC000000736E616CLL;
      if (v5 != 0x5074756F6B726F77) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      if (v5 != 0x736D6172676F7270) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      uint64_t v2 = 0x64616F6C6E776F64;
      unint64_t v6 = 0xEA00000000006465;
      goto LABEL_18;
    case 6:
      unint64_t v6 = 0xED00006465646441;
      if (v5 != 0x796C746E65636572) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v5 != v2) {
        goto LABEL_22;
      }
LABEL_19:
      if (v4 == v6) {
        char v7 = 1;
      }
      else {
LABEL_22:
      }
        char v7 = sub_24F072400();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_24F00C3F8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s14FitnessLibrary0B4PageO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

void sub_24F00C428(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE800000000000000;
  uint64_t v3 = 0x7374756F6B726F77;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEB00000000736E6FLL;
      uint64_t v3 = 0x697461746964656DLL;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x736B63617473;
      *(void *)(a1 + 8) = 0xE600000000000000;
      break;
    case 3:
      strcpy((char *)a1, "workoutPlans");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    case 4:
      *(void *)a1 = 0x736D6172676F7270;
      *(void *)(a1 + 8) = 0xE800000000000000;
      break;
    case 5:
      *(void *)a1 = 0x64616F6C6E776F64;
      *(void *)(a1 + 8) = 0xEA00000000006465;
      break;
    case 6:
      strcpy((char *)a1, "recentlyAdded");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

void sub_24F00C53C(void *a1@<X8>)
{
  *a1 = &unk_2700A5898;
}

void sub_24F00C550(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t LibraryPage.isEmpty.getter()
{
  return 0;
}

uint64_t LibraryPage.allowsMultiple.getter()
{
  return 0;
}

uint64_t LibraryPage.count.getter()
{
  return 1;
}

uint64_t LibraryPage.contains<A>(id:)(uint64_t a1, char a2)
{
  MEMORY[0x270FA5388](a1);
  (*(void (**)(unsigned char *))(v4 + 16))(&v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  if (swift_dynamicCast())
  {
    uint64_t v5 = 0x7374756F6B726F77;
    unint64_t v6 = 0xE800000000000000;
    uint64_t v7 = 0x7374756F6B726F77;
    switch(v11[15])
    {
      case 1:
        uint64_t v7 = 0x697461746964656DLL;
        unint64_t v6 = 0xEB00000000736E6FLL;
        break;
      case 2:
        unint64_t v6 = 0xE600000000000000;
        uint64_t v7 = 0x736B63617473;
        break;
      case 3:
        uint64_t v7 = 0x5074756F6B726F77;
        unint64_t v6 = 0xEC000000736E616CLL;
        break;
      case 4:
        uint64_t v7 = 0x736D6172676F7270;
        break;
      case 5:
        uint64_t v7 = 0x64616F6C6E776F64;
        unint64_t v6 = 0xEA00000000006465;
        break;
      case 6:
        uint64_t v7 = 0x796C746E65636572;
        unint64_t v6 = 0xED00006465646441;
        break;
      default:
        break;
    }
    unint64_t v9 = 0xE800000000000000;
    switch(a2)
    {
      case 1:
        unint64_t v9 = 0xEB00000000736E6FLL;
        if (v7 == 0x697461746964656DLL) {
          goto LABEL_21;
        }
        goto LABEL_24;
      case 2:
        unint64_t v9 = 0xE600000000000000;
        if (v7 != 0x736B63617473) {
          goto LABEL_24;
        }
        goto LABEL_21;
      case 3:
        unint64_t v9 = 0xEC000000736E616CLL;
        if (v7 != 0x5074756F6B726F77) {
          goto LABEL_24;
        }
        goto LABEL_21;
      case 4:
        if (v7 != 0x736D6172676F7270) {
          goto LABEL_24;
        }
        goto LABEL_21;
      case 5:
        uint64_t v5 = 0x64616F6C6E776F64;
        unint64_t v9 = 0xEA00000000006465;
        goto LABEL_20;
      case 6:
        unint64_t v9 = 0xED00006465646441;
        if (v7 != 0x796C746E65636572) {
          goto LABEL_24;
        }
        goto LABEL_21;
      default:
LABEL_20:
        if (v7 != v5) {
          goto LABEL_24;
        }
LABEL_21:
        if (v6 == v9)
        {
          swift_bridgeObjectRelease_n();
          char v8 = 1;
        }
        else
        {
LABEL_24:
          char v8 = sub_24F072400();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        break;
    }
  }
  else
  {
    char v8 = 0;
  }
  return v8 & 1;
}

uint64_t LibraryPage.apply<A>(as:operation:)(uint64_t a1, void (*a2)(unsigned char *), uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v8 = sub_24F0721F0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = &v19[-v11];
  uint64_t v13 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v15 = &v19[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19[15] = a4;
  char v16 = swift_dynamicCast();
  uint64_t v17 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  if (v16)
  {
    v17(v12, 0, 1, a5);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v13 + 32))(v15, v12, a5);
    a2(v15);
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v13 + 8))(v15, a5);
  }
  else
  {
    v17(v12, 1, 1, a5);
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v12, v8);
  }
}

uint64_t sub_24F00CAB0(uint64_t a1)
{
  return LibraryPage.contains<A>(id:)(a1, *v1);
}

uint64_t sub_24F00CABC(uint64_t a1, void (*a2)(unsigned char *), uint64_t a3, uint64_t a4)
{
  return LibraryPage.apply<A>(as:operation:)(a1, a2, a3, *v4, a4);
}

uint64_t sub_24F00CAC8()
{
  return sub_24F0720D0();
}

uint64_t sub_24F00CB28()
{
  return sub_24F0720C0();
}

uint64_t sub_24F00CB78()
{
  return sub_24F072460();
}

uint64_t sub_24F00CCC0()
{
  sub_24F072080();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F00CDF0()
{
  return sub_24F072460();
}

uint64_t _s14FitnessLibrary0B4PageO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_24F0722E0();
  swift_bridgeObjectRelease();
  if (v0 >= 7) {
    return 7;
  }
  else {
    return v0;
  }
}

unint64_t sub_24F00CF84()
{
  unint64_t result = qword_2699A3148;
  if (!qword_2699A3148)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A3150);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3148);
  }
  return result;
}

unint64_t sub_24F00CFE4()
{
  unint64_t result = qword_2699A3158;
  if (!qword_2699A3158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3158);
  }
  return result;
}

unint64_t sub_24F00D03C()
{
  unint64_t result = qword_2699A3160;
  if (!qword_2699A3160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3160);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for LibraryPage(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for LibraryPage(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F00D1ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryPage()
{
  return &type metadata for LibraryPage;
}

unint64_t sub_24F00D224()
{
  unint64_t result = qword_2699A3168;
  if (!qword_2699A3168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3168);
  }
  return result;
}

uint64_t WorkoutPlanBannerState.loadState.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24F00D284(v1, a1);
}

uint64_t sub_24F00D284(uint64_t a1, uint64_t a2)
{
  uint64_t State = type metadata accessor for WorkoutPlanBannerLoadState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(State - 8) + 16))(a2, a1, State);
  return a2;
}

uint64_t WorkoutPlanBannerState.loadState.setter(uint64_t a1)
{
  return sub_24F00D2F0(a1, v1);
}

uint64_t sub_24F00D2F0(uint64_t a1, uint64_t a2)
{
  uint64_t State = type metadata accessor for WorkoutPlanBannerLoadState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(State - 8) + 40))(a2, a1, State);
  return a2;
}

uint64_t (*WorkoutPlanBannerState.loadState.modify())()
{
  return nullsub_1;
}

uint64_t WorkoutPlanBannerState.init(loadState:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24F00DEEC(a1, a2, (uint64_t (*)(void))type metadata accessor for WorkoutPlanBannerLoadState);
}

uint64_t sub_24F00D3A4()
{
  return 0x7461745364616F6CLL;
}

uint64_t sub_24F00D3C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x7461745364616F6CLL && a2 == 0xE900000000000065)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24F072400();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24F00D464(uint64_t a1)
{
  unint64_t v2 = sub_24F00D650();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F00D4A0(uint64_t a1)
{
  unint64_t v2 = sub_24F00D650();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t WorkoutPlanBannerState.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3170);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24F00D650();
  sub_24F072480();
  type metadata accessor for WorkoutPlanBannerLoadState();
  sub_24F00E058(&qword_2699A3180, (void (*)(uint64_t))type metadata accessor for WorkoutPlanBannerLoadState);
  sub_24F0723F0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_24F00D650()
{
  unint64_t result = qword_2699A3178;
  if (!qword_2699A3178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3178);
  }
  return result;
}

uint64_t WorkoutPlanBannerState.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v13 = a2;
  uint64_t State = type metadata accessor for WorkoutPlanBannerLoadState();
  MEMORY[0x270FA5388](State);
  uint64_t v15 = (uint64_t)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3188);
  uint64_t v14 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  int v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for WorkoutPlanBannerState();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24F00D650();
  sub_24F072470();
  if (!v2)
  {
    sub_24F00E058(&qword_2699A3190, (void (*)(uint64_t))type metadata accessor for WorkoutPlanBannerLoadState);
    sub_24F072370();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v6);
    sub_24F00DEEC(v15, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for WorkoutPlanBannerLoadState);
    sub_24F00DEEC((uint64_t)v11, v13, (uint64_t (*)(void))type metadata accessor for WorkoutPlanBannerState);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t type metadata accessor for WorkoutPlanBannerState()
{
  uint64_t result = qword_26B1EB9F0;
  if (!qword_26B1EB9F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24F00D958@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return WorkoutPlanBannerState.init(from:)(a1, a2);
}

uint64_t sub_24F00D970(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3170);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24F00D650();
  sub_24F072480();
  type metadata accessor for WorkoutPlanBannerLoadState();
  sub_24F00E058(&qword_2699A3180, (void (*)(uint64_t))type metadata accessor for WorkoutPlanBannerLoadState);
  sub_24F0723F0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t WorkoutPlanBannerState.hash(into:)()
{
  uint64_t v1 = type metadata accessor for WorkoutPlanDetail();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v16 - v10;
  uint64_t State = type metadata accessor for WorkoutPlanBannerLoadState();
  MEMORY[0x270FA5388](State - 8);
  uint64_t v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24F00D284(v0, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 1, v5) == 1) {
    return sub_24F072440();
  }
  sub_24F00DE1C((uint64_t)v14, (uint64_t)v11);
  sub_24F072440();
  sub_24F00DE84((uint64_t)v11, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v9, 1, v1) == 1)
  {
    sub_24F072450();
  }
  else
  {
    sub_24F00DEEC((uint64_t)v9, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for WorkoutPlanDetail);
    sub_24F072450();
    WorkoutPlanDetail.hash(into:)();
    sub_24F00DF54((uint64_t)v4);
  }
  return sub_24F00DFB0((uint64_t)v11);
}

uint64_t WorkoutPlanBannerState.hashValue.getter()
{
  return sub_24F072460();
}

uint64_t sub_24F00DD98()
{
  return sub_24F072460();
}

uint64_t sub_24F00DDDC()
{
  return sub_24F072460();
}

uint64_t sub_24F00DE1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24F00DE84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24F00DEEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24F00DF54(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WorkoutPlanDetail();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24F00DFB0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24F00E010()
{
  return sub_24F00E058(&qword_2699A3198, (void (*)(uint64_t))type metadata accessor for WorkoutPlanBannerState);
}

uint64_t sub_24F00E058(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for WorkoutPlanBannerState(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)(type metadata accessor for WorkoutPlanBannerLoadState() - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = (int *)type metadata accessor for WorkoutPlanDetail();
      uint64_t v11 = *((void *)v10 - 1);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v11 + 48))(a2, 1, v10))
      {
        memcpy(a1, a2, *(void *)(v8 + 64));
      }
      else
      {
        uint64_t v12 = sub_24F071520();
        uint64_t v13 = *(void *)(v12 - 8);
        uint64_t v44 = v11;
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
        {
          uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD78);
          memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v13 + 16))(a1, a2, v12);
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
        }
        uint64_t v15 = v10[5];
        uint64_t v16 = (char *)a1 + v15;
        uint64_t v17 = (char *)a2 + v15;
        uint64_t v18 = sub_24F071490();
        uint64_t v19 = *(void *)(v18 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
        {
          uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD60);
          memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
        }
        uint64_t v21 = v10[6];
        uint64_t v22 = (uint64_t *)((char *)a1 + v21);
        uint64_t v23 = (uint64_t *)((char *)a2 + v21);
        uint64_t v24 = v23[1];
        *uint64_t v22 = *v23;
        v22[1] = v24;
        uint64_t v25 = v10[7];
        uint64_t v43 = (char *)a1 + v25;
        uint64_t v26 = (char *)a2 + v25;
        uint64_t v27 = sub_24F0714D0();
        uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
        swift_bridgeObjectRetain();
        v28(v43, v26, v27);
        *((unsigned char *)a1 + v10[8]) = *((unsigned char *)a2 + v10[8]);
        uint64_t v29 = v10[9];
        uint64_t v30 = (uint64_t *)((char *)a1 + v29);
        uint64_t v31 = (uint64_t *)((char *)a2 + v29);
        uint64_t v32 = v31[1];
        *uint64_t v30 = *v31;
        v30[1] = v32;
        uint64_t v33 = v10[10];
        char v34 = (uint64_t *)((char *)a1 + v33);
        char v35 = (uint64_t *)((char *)a2 + v33);
        uint64_t v36 = v35[1];
        *char v34 = *v35;
        v34[1] = v36;
        uint64_t v37 = v10[11];
        uint64_t v38 = (uint64_t *)((char *)a1 + v37);
        uint64_t v39 = (uint64_t *)((char *)a2 + v37);
        uint64_t v40 = v39[1];
        *uint64_t v38 = *v39;
        v38[1] = v40;
        uint64_t v41 = *(void (**)(uint64_t *, void, uint64_t, int *))(v44 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v41(a1, 0, 1, v10);
      }
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for WorkoutPlanBannerLoadState(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = type metadata accessor for WorkoutPlanDetail();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4);
    if (!result)
    {
      uint64_t v5 = sub_24F071520();
      uint64_t v6 = *(void *)(v5 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
      }
      uint64_t v7 = a1 + *(int *)(v4 + 20);
      uint64_t v8 = sub_24F071490();
      uint64_t v9 = *(void *)(v8 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
      }
      swift_bridgeObjectRelease();
      uint64_t v10 = a1 + *(int *)(v4 + 28);
      uint64_t v11 = sub_24F0714D0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

char *initializeWithCopy for WorkoutPlanBannerState(char *a1, char *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    uint64_t State = type metadata accessor for WorkoutPlanBannerLoadState();
    memcpy(a1, a2, *(void *)(*(void *)(State - 8) + 64));
  }
  else
  {
    uint64_t v7 = (int *)type metadata accessor for WorkoutPlanDetail();
    uint64_t v8 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v5 + 64));
    }
    else
    {
      uint64_t v41 = v8;
      uint64_t v9 = sub_24F071520();
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
      {
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD78);
        memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 16))(a1, a2, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
      }
      uint64_t v12 = v7[5];
      uint64_t v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      uint64_t v15 = sub_24F071490();
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD60);
        memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      uint64_t v18 = v7[6];
      uint64_t v19 = &a1[v18];
      uint64_t v20 = &a2[v18];
      uint64_t v21 = *((void *)v20 + 1);
      *(void *)uint64_t v19 = *(void *)v20;
      *((void *)v19 + 1) = v21;
      uint64_t v22 = v7[7];
      uint64_t v40 = &a1[v22];
      uint64_t v23 = &a2[v22];
      uint64_t v24 = sub_24F0714D0();
      uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
      swift_bridgeObjectRetain();
      v25(v40, v23, v24);
      a1[v7[8]] = a2[v7[8]];
      uint64_t v26 = v7[9];
      uint64_t v27 = &a1[v26];
      uint64_t v28 = &a2[v26];
      uint64_t v29 = *((void *)v28 + 1);
      *(void *)uint64_t v27 = *(void *)v28;
      *((void *)v27 + 1) = v29;
      uint64_t v30 = v7[10];
      uint64_t v31 = &a1[v30];
      uint64_t v32 = &a2[v30];
      uint64_t v33 = *((void *)v32 + 1);
      *(void *)uint64_t v31 = *(void *)v32;
      *((void *)v31 + 1) = v33;
      uint64_t v34 = v7[11];
      char v35 = &a1[v34];
      uint64_t v36 = &a2[v34];
      uint64_t v37 = *((void *)v36 + 1);
      *(void *)char v35 = *(void *)v36;
      *((void *)v35 + 1) = v37;
      uint64_t v38 = *(void (**)(char *, void, uint64_t, int *))(v41 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v38(a1, 0, 1, v7);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

char *assignWithCopy for WorkoutPlanBannerState(char *a1, char *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (v8)
    {
      sub_24F00DFB0((uint64_t)a1);
      goto LABEL_7;
    }
    uint64_t v12 = (int *)type metadata accessor for WorkoutPlanDetail();
    uint64_t v13 = *((void *)v12 - 1);
    uint64_t v14 = *(uint64_t (**)(char *, uint64_t, int *))(v13 + 48);
    int v15 = v14(a1, 1, v12);
    int v16 = v14(a2, 1, v12);
    if (v15)
    {
      if (!v16)
      {
        uint64_t v17 = sub_24F071520();
        uint64_t v18 = *(void *)(v17 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(a2, 1, v17))
        {
          uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD78);
          memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v18 + 16))(a1, a2, v17);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(a1, 0, 1, v17);
        }
        uint64_t v52 = v12[5];
        uint64_t v53 = &a1[v52];
        uint64_t v54 = &a2[v52];
        uint64_t v55 = sub_24F071490();
        uint64_t v56 = *(void *)(v55 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
        {
          uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD60);
          memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v53, v54, v55);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
        }
        uint64_t v58 = v12[6];
        uint64_t v59 = &a1[v58];
        uint64_t v60 = &a2[v58];
        *(void *)uint64_t v59 = *(void *)v60;
        *((void *)v59 + 1) = *((void *)v60 + 1);
        uint64_t v61 = v12[7];
        uint64_t v62 = &a1[v61];
        uint64_t v63 = &a2[v61];
        uint64_t v64 = sub_24F0714D0();
        uint64_t v65 = *(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16);
        swift_bridgeObjectRetain();
        v65(v62, v63, v64);
        a1[v12[8]] = a2[v12[8]];
        uint64_t v66 = v12[9];
        uint64_t v67 = &a1[v66];
        uint64_t v68 = &a2[v66];
        *(void *)uint64_t v67 = *(void *)v68;
        *((void *)v67 + 1) = *((void *)v68 + 1);
        uint64_t v69 = v12[10];
        uint64_t v70 = &a1[v69];
        uint64_t v71 = &a2[v69];
        *(void *)uint64_t v70 = *(void *)v71;
        *((void *)v70 + 1) = *((void *)v71 + 1);
        uint64_t v72 = v12[11];
        uint64_t v73 = &a1[v72];
        uint64_t v74 = &a2[v72];
        *(void *)uint64_t v73 = *(void *)v74;
        *((void *)v73 + 1) = *((void *)v74 + 1);
        uint64_t v75 = *(void (**)(char *, void, uint64_t, int *))(v13 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v75(a1, 0, 1, v12);
        return a1;
      }
      goto LABEL_17;
    }
    if (v16)
    {
      sub_24F00DF54((uint64_t)a1);
LABEL_17:
      size_t v11 = *(void *)(v5 + 64);
      goto LABEL_8;
    }
    uint64_t v47 = sub_24F071520();
    uint64_t v48 = *(void *)(v47 - 8);
    uint64_t v49 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48);
    int v50 = v49(a1, 1, v47);
    int v51 = v49(a2, 1, v47);
    if (v50)
    {
      if (!v51)
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(a1, a2, v47);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(a1, 0, 1, v47);
        goto LABEL_36;
      }
    }
    else
    {
      if (!v51)
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 24))(a1, a2, v47);
LABEL_36:
        uint64_t v77 = v12[5];
        uint64_t v78 = &a1[v77];
        v79 = &a2[v77];
        uint64_t v80 = sub_24F071490();
        uint64_t v81 = *(void *)(v80 - 8);
        uint64_t v82 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v81 + 48);
        int v83 = v82(v78, 1, v80);
        int v84 = v82(v79, 1, v80);
        if (v83)
        {
          if (!v84)
          {
            (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v78, v79, v80);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v78, 0, 1, v80);
LABEL_42:
            uint64_t v86 = v12[6];
            uint64_t v87 = &a1[v86];
            uint64_t v88 = &a2[v86];
            *(void *)uint64_t v87 = *(void *)v88;
            *((void *)v87 + 1) = *((void *)v88 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v89 = v12[7];
            uint64_t v90 = &a1[v89];
            uint64_t v91 = &a2[v89];
            uint64_t v92 = sub_24F0714D0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 24))(v90, v91, v92);
            a1[v12[8]] = a2[v12[8]];
            uint64_t v93 = v12[9];
            v94 = &a1[v93];
            v95 = &a2[v93];
            *(void *)v94 = *(void *)v95;
            *((void *)v94 + 1) = *((void *)v95 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v96 = v12[10];
            v97 = &a1[v96];
            v98 = &a2[v96];
            *(void *)v97 = *(void *)v98;
            *((void *)v97 + 1) = *((void *)v98 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v99 = v12[11];
            uint64_t v100 = &a1[v99];
            uint64_t v101 = &a2[v99];
            *(void *)uint64_t v100 = *(void *)v101;
            *((void *)v100 + 1) = *((void *)v101 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            return a1;
          }
        }
        else
        {
          if (!v84)
          {
            (*(void (**)(char *, char *, uint64_t))(v81 + 24))(v78, v79, v80);
            goto LABEL_42;
          }
          (*(void (**)(char *, uint64_t))(v81 + 8))(v78, v80);
        }
        uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD60);
        memcpy(v78, v79, *(void *)(*(void *)(v85 - 8) + 64));
        goto LABEL_42;
      }
      (*(void (**)(char *, uint64_t))(v48 + 8))(a1, v47);
    }
    uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD78);
    memcpy(a1, a2, *(void *)(*(void *)(v76 - 8) + 64));
    goto LABEL_36;
  }
  if (v8)
  {
LABEL_7:
    size_t v11 = *(void *)(*(void *)(type metadata accessor for WorkoutPlanBannerLoadState() - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v11);
    return a1;
  }
  uint64_t v9 = (int *)type metadata accessor for WorkoutPlanDetail();
  uint64_t v10 = *((void *)v9 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v10 + 48))(a2, 1, v9))
  {
    memcpy(a1, a2, *(void *)(v5 + 64));
  }
  else
  {
    uint64_t v103 = v10;
    uint64_t v20 = sub_24F071520();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(a2, 1, v20))
    {
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD78);
      memcpy(a1, a2, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(a1, a2, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(a1, 0, 1, v20);
    }
    uint64_t v23 = v9[5];
    uint64_t v24 = &a1[v23];
    uint64_t v25 = &a2[v23];
    uint64_t v26 = sub_24F071490();
    uint64_t v27 = *(void *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD60);
      memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    uint64_t v29 = v9[6];
    uint64_t v30 = &a1[v29];
    uint64_t v31 = &a2[v29];
    *(void *)uint64_t v30 = *(void *)v31;
    *((void *)v30 + 1) = *((void *)v31 + 1);
    uint64_t v32 = v9[7];
    uint64_t v102 = &a1[v32];
    uint64_t v33 = &a2[v32];
    uint64_t v34 = sub_24F0714D0();
    char v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16);
    swift_bridgeObjectRetain();
    v35(v102, v33, v34);
    a1[v9[8]] = a2[v9[8]];
    uint64_t v36 = v9[9];
    uint64_t v37 = &a1[v36];
    uint64_t v38 = &a2[v36];
    *(void *)uint64_t v37 = *(void *)v38;
    *((void *)v37 + 1) = *((void *)v38 + 1);
    uint64_t v39 = v9[10];
    uint64_t v40 = &a1[v39];
    uint64_t v41 = &a2[v39];
    *(void *)uint64_t v40 = *(void *)v41;
    *((void *)v40 + 1) = *((void *)v41 + 1);
    uint64_t v42 = v9[11];
    uint64_t v43 = &a1[v42];
    uint64_t v44 = &a2[v42];
    *(void *)uint64_t v43 = *(void *)v44;
    *((void *)v43 + 1) = *((void *)v44 + 1);
    uint64_t v45 = *(void (**)(char *, void, uint64_t, int *))(v103 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v45(a1, 0, 1, v9);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

char *initializeWithTake for WorkoutPlanBannerState(char *a1, char *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    uint64_t State = type metadata accessor for WorkoutPlanBannerLoadState();
    memcpy(a1, a2, *(void *)(*(void *)(State - 8) + 64));
  }
  else
  {
    int v7 = (int *)type metadata accessor for WorkoutPlanDetail();
    uint64_t v8 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v5 + 64));
    }
    else
    {
      uint64_t v9 = sub_24F071520();
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
      {
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD78);
        memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(a1, a2, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
      }
      uint64_t v12 = v7[5];
      uint64_t v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      uint64_t v15 = sub_24F071490();
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD60);
        memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      *(_OWORD *)&a1[v7[6]] = *(_OWORD *)&a2[v7[6]];
      uint64_t v18 = v7[7];
      uint64_t v19 = &a1[v18];
      uint64_t v20 = &a2[v18];
      uint64_t v21 = sub_24F0714D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
      a1[v7[8]] = a2[v7[8]];
      *(_OWORD *)&a1[v7[9]] = *(_OWORD *)&a2[v7[9]];
      *(_OWORD *)&a1[v7[10]] = *(_OWORD *)&a2[v7[10]];
      *(_OWORD *)&a1[v7[11]] = *(_OWORD *)&a2[v7[11]];
      (*(void (**)(char *, void, uint64_t, int *))(v8 + 56))(a1, 0, 1, v7);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

char *assignWithTake for WorkoutPlanBannerState(char *a1, char *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (v8)
    {
      sub_24F00DFB0((uint64_t)a1);
      goto LABEL_7;
    }
    uint64_t v12 = (int *)type metadata accessor for WorkoutPlanDetail();
    uint64_t v13 = *((void *)v12 - 1);
    uint64_t v14 = *(uint64_t (**)(char *, uint64_t, int *))(v13 + 48);
    int v15 = v14(a1, 1, v12);
    int v16 = v14(a2, 1, v12);
    if (v15)
    {
      if (!v16)
      {
        uint64_t v17 = sub_24F071520();
        uint64_t v18 = *(void *)(v17 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(a2, 1, v17))
        {
          uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD78);
          memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v18 + 32))(a1, a2, v17);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(a1, 0, 1, v17);
        }
        uint64_t v39 = v12[5];
        uint64_t v40 = &a1[v39];
        uint64_t v41 = &a2[v39];
        uint64_t v42 = sub_24F071490();
        uint64_t v43 = *(void *)(v42 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
        {
          uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD60);
          memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v40, v41, v42);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
        }
        *(_OWORD *)&a1[v12[6]] = *(_OWORD *)&a2[v12[6]];
        uint64_t v45 = v12[7];
        uint64_t v46 = &a1[v45];
        uint64_t v47 = &a2[v45];
        uint64_t v48 = sub_24F0714D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
        a1[v12[8]] = a2[v12[8]];
        *(_OWORD *)&a1[v12[9]] = *(_OWORD *)&a2[v12[9]];
        *(_OWORD *)&a1[v12[10]] = *(_OWORD *)&a2[v12[10]];
        *(_OWORD *)&a1[v12[11]] = *(_OWORD *)&a2[v12[11]];
        (*(void (**)(char *, void, uint64_t, int *))(v13 + 56))(a1, 0, 1, v12);
        return a1;
      }
      goto LABEL_17;
    }
    if (v16)
    {
      sub_24F00DF54((uint64_t)a1);
LABEL_17:
      size_t v11 = *(void *)(v5 + 64);
      goto LABEL_8;
    }
    uint64_t v34 = sub_24F071520();
    uint64_t v35 = *(void *)(v34 - 8);
    uint64_t v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
    int v37 = v36(a1, 1, v34);
    int v38 = v36(a2, 1, v34);
    if (v37)
    {
      if (!v38)
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 32))(a1, a2, v34);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(a1, 0, 1, v34);
        goto LABEL_36;
      }
    }
    else
    {
      if (!v38)
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 40))(a1, a2, v34);
LABEL_36:
        uint64_t v50 = v12[5];
        int v51 = &a1[v50];
        uint64_t v52 = &a2[v50];
        uint64_t v53 = sub_24F071490();
        uint64_t v54 = *(void *)(v53 - 8);
        uint64_t v55 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
        int v56 = v55(v51, 1, v53);
        int v57 = v55(v52, 1, v53);
        if (v56)
        {
          if (!v57)
          {
            (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v51, v52, v53);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
LABEL_42:
            uint64_t v59 = v12[6];
            uint64_t v60 = &a1[v59];
            uint64_t v61 = &a2[v59];
            uint64_t v63 = *(void *)v61;
            uint64_t v62 = *((void *)v61 + 1);
            *(void *)uint64_t v60 = v63;
            *((void *)v60 + 1) = v62;
            swift_bridgeObjectRelease();
            uint64_t v64 = v12[7];
            uint64_t v65 = &a1[v64];
            uint64_t v66 = &a2[v64];
            uint64_t v67 = sub_24F0714D0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 40))(v65, v66, v67);
            a1[v12[8]] = a2[v12[8]];
            uint64_t v68 = v12[9];
            uint64_t v69 = &a1[v68];
            uint64_t v70 = &a2[v68];
            uint64_t v72 = *(void *)v70;
            uint64_t v71 = *((void *)v70 + 1);
            *(void *)uint64_t v69 = v72;
            *((void *)v69 + 1) = v71;
            swift_bridgeObjectRelease();
            uint64_t v73 = v12[10];
            uint64_t v74 = &a1[v73];
            uint64_t v75 = &a2[v73];
            uint64_t v77 = *(void *)v75;
            uint64_t v76 = *((void *)v75 + 1);
            *(void *)uint64_t v74 = v77;
            *((void *)v74 + 1) = v76;
            swift_bridgeObjectRelease();
            uint64_t v78 = v12[11];
            v79 = &a1[v78];
            uint64_t v80 = &a2[v78];
            uint64_t v82 = *(void *)v80;
            uint64_t v81 = *((void *)v80 + 1);
            *(void *)v79 = v82;
            *((void *)v79 + 1) = v81;
            swift_bridgeObjectRelease();
            return a1;
          }
        }
        else
        {
          if (!v57)
          {
            (*(void (**)(char *, char *, uint64_t))(v54 + 40))(v51, v52, v53);
            goto LABEL_42;
          }
          (*(void (**)(char *, uint64_t))(v54 + 8))(v51, v53);
        }
        uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD60);
        memcpy(v51, v52, *(void *)(*(void *)(v58 - 8) + 64));
        goto LABEL_42;
      }
      (*(void (**)(char *, uint64_t))(v35 + 8))(a1, v34);
    }
    uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD78);
    memcpy(a1, a2, *(void *)(*(void *)(v49 - 8) + 64));
    goto LABEL_36;
  }
  if (v8)
  {
LABEL_7:
    size_t v11 = *(void *)(*(void *)(type metadata accessor for WorkoutPlanBannerLoadState() - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v11);
    return a1;
  }
  uint64_t v9 = (int *)type metadata accessor for WorkoutPlanDetail();
  uint64_t v10 = *((void *)v9 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v10 + 48))(a2, 1, v9))
  {
    memcpy(a1, a2, *(void *)(v5 + 64));
  }
  else
  {
    uint64_t v20 = sub_24F071520();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(a2, 1, v20))
    {
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD78);
      memcpy(a1, a2, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(a1, a2, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(a1, 0, 1, v20);
    }
    uint64_t v23 = v9[5];
    uint64_t v24 = &a1[v23];
    uint64_t v25 = &a2[v23];
    uint64_t v26 = sub_24F071490();
    uint64_t v27 = *(void *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD60);
      memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    *(_OWORD *)&a1[v9[6]] = *(_OWORD *)&a2[v9[6]];
    uint64_t v29 = v9[7];
    uint64_t v30 = &a1[v29];
    uint64_t v31 = &a2[v29];
    uint64_t v32 = sub_24F0714D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
    a1[v9[8]] = a2[v9[8]];
    *(_OWORD *)&a1[v9[9]] = *(_OWORD *)&a2[v9[9]];
    *(_OWORD *)&a1[v9[10]] = *(_OWORD *)&a2[v9[10]];
    *(_OWORD *)&a1[v9[11]] = *(_OWORD *)&a2[v9[11]];
    (*(void (**)(char *, void, uint64_t, int *))(v10 + 56))(a1, 0, 1, v9);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutPlanBannerState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24F01062C);
}

uint64_t sub_24F01062C(uint64_t a1, uint64_t a2)
{
  uint64_t State = type metadata accessor for WorkoutPlanBannerLoadState();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(State - 8) + 48);
  return v5(a1, a2, State);
}

uint64_t storeEnumTagSinglePayload for WorkoutPlanBannerState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24F0106AC);
}

uint64_t sub_24F0106AC(uint64_t a1, uint64_t a2)
{
  uint64_t State = type metadata accessor for WorkoutPlanBannerLoadState();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(State - 8) + 56);
  return v5(a1, a2, a2, State);
}

uint64_t sub_24F01071C()
{
  uint64_t result = type metadata accessor for WorkoutPlanBannerLoadState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for WorkoutPlanBannerState.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24F010844);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutPlanBannerState.CodingKeys()
{
  return &type metadata for WorkoutPlanBannerState.CodingKeys;
}

unint64_t sub_24F010880()
{
  unint64_t result = qword_2699A31A0;
  if (!qword_2699A31A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A31A0);
  }
  return result;
}

unint64_t sub_24F0108D8()
{
  unint64_t result = qword_2699A31A8;
  if (!qword_2699A31A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A31A8);
  }
  return result;
}

unint64_t sub_24F010930()
{
  unint64_t result = qword_2699A31B0;
  if (!qword_2699A31B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A31B0);
  }
  return result;
}

uint64_t sub_24F010988()
{
  uint64_t result = 1701602409;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x676E696863746566;
      break;
    case 2:
      uint64_t result = 0x64656863746566;
      break;
    case 3:
      uint64_t result = 0x656E696C66666FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24F010A10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24F012758(a1, a2);
  *a3 = result;
  return result;
}

void sub_24F010A38(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_24F010A44(uint64_t a1)
{
  unint64_t v2 = sub_24F011B28();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F010A80(uint64_t a1)
{
  unint64_t v2 = sub_24F011B28();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F010ABC()
{
  return 0x7470697263736564;
}

uint64_t sub_24F010AD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x7470697263736564 && a2 == 0xEA0000000000726FLL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24F072400();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24F010B7C(uint64_t a1)
{
  unint64_t v2 = sub_24F011BD0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F010BB8(uint64_t a1)
{
  unint64_t v2 = sub_24F011BD0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F010BF4()
{
  return 0;
}

uint64_t sub_24F010C00(uint64_t a1)
{
  unint64_t v2 = sub_24F011C78();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F010C3C(uint64_t a1)
{
  unint64_t v2 = sub_24F011C78();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F010C78(uint64_t a1)
{
  unint64_t v2 = sub_24F011CCC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F010CB4(uint64_t a1)
{
  unint64_t v2 = sub_24F011CCC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F010CF0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_24F010D20(uint64_t a1)
{
  unint64_t v2 = sub_24F011B7C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F010D5C(uint64_t a1)
{
  unint64_t v2 = sub_24F011B7C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t OfflineLoadState.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A31B8);
  uint64_t v32 = *(void *)(v3 - 8);
  uint64_t v33 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v29 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A31C0);
  uint64_t v31 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v30 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A31C8);
  uint64_t v27 = *(void *)(v6 - 8);
  uint64_t v28 = v6;
  MEMORY[0x270FA5388](v6);
  int v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A31D0);
  uint64_t v26 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  size_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A31D8);
  uint64_t v35 = *(void *)(v12 - 8);
  uint64_t v36 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *v1;
  uint64_t v16 = v1[1];
  uint64_t v24 = v1[2];
  uint64_t v25 = v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24F011B28();
  sub_24F072480();
  switch(v16)
  {
    case 0:
      LOBYTE(v37) = 0;
      sub_24F011CCC();
      uint64_t v20 = v36;
      sub_24F072390();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
      return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v14, v20);
    case 1:
      LOBYTE(v37) = 1;
      sub_24F011C78();
      uint64_t v20 = v36;
      sub_24F072390();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v28);
      return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v14, v20);
    case 2:
      LOBYTE(v37) = 3;
      sub_24F011B7C();
      uint64_t v17 = v29;
      uint64_t v18 = v36;
      sub_24F072390();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v17, v33);
      return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v14, v18);
    default:
      LOBYTE(v37) = 2;
      sub_24F011BD0();
      uint64_t v21 = v30;
      uint64_t v22 = v36;
      sub_24F072390();
      uint64_t v37 = v25;
      uint64_t v38 = v16;
      uint64_t v39 = v24;
      sub_24F011C24();
      uint64_t v23 = v34;
      sub_24F0723F0();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v21, v23);
      return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v14, v22);
  }
}

uint64_t OfflineLoadState.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3210);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v41 = v3;
  uint64_t v42 = v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v47 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3218);
  uint64_t v44 = *(void *)(v6 - 8);
  uint64_t v45 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v46 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3220);
  uint64_t v39 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3228);
  uint64_t v40 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3230);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1[3];
  uint64_t v49 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_24F011B28();
  uint64_t v18 = v52;
  sub_24F072470();
  if (v18) {
    goto LABEL_14;
  }
  uint64_t v19 = v12;
  uint64_t v37 = v10;
  uint64_t v38 = 0;
  uint64_t v20 = v46;
  uint64_t v21 = v47;
  uint64_t v52 = v14;
  uint64_t v22 = v48;
  uint64_t v23 = sub_24F072380();
  if (*(void *)(v23 + 16) != 1)
  {
    uint64_t v27 = sub_24F072260();
    swift_allocError();
    uint64_t v29 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3060);
    *uint64_t v29 = &type metadata for OfflineLoadState;
    sub_24F072310();
    sub_24F072250();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v27 - 8) + 104))(v29, *MEMORY[0x263F8DCB0], v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v16, v13);
LABEL_14:
    uint64_t v35 = (uint64_t)v49;
    return __swift_destroy_boxed_opaque_existential_1(v35);
  }
  switch(*(unsigned char *)(v23 + 32))
  {
    case 1:
      LOBYTE(v50) = 1;
      sub_24F011C78();
      uint64_t v30 = v38;
      sub_24F072300();
      if (v30) {
        goto LABEL_13;
      }
      (*(void (**)(char *, uint64_t))(v39 + 8))(v9, v43);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v16, v13);
      uint64_t v25 = 0;
      long long v26 = xmmword_24F073C30;
      goto LABEL_17;
    case 2:
      LOBYTE(v50) = 2;
      sub_24F011BD0();
      uint64_t v31 = v20;
      uint64_t v32 = v38;
      sub_24F072300();
      if (v32) {
        goto LABEL_13;
      }
      sub_24F011D20();
      uint64_t v33 = v45;
      sub_24F072370();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v31, v33);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v16, v13);
      uint64_t v25 = v50;
      long long v26 = v51;
      goto LABEL_17;
    case 3:
      LOBYTE(v50) = 3;
      sub_24F011B7C();
      uint64_t v34 = v38;
      sub_24F072300();
      if (v34) {
        goto LABEL_13;
      }
      (*(void (**)(char *, uint64_t))(v42 + 8))(v21, v41);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v16, v13);
      uint64_t v25 = 0;
      long long v26 = xmmword_24F073C20;
      goto LABEL_17;
    default:
      LOBYTE(v50) = 0;
      sub_24F011CCC();
      uint64_t v24 = v38;
      sub_24F072300();
      if (v24)
      {
LABEL_13:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v52 + 8))(v16, v13);
        goto LABEL_14;
      }
      (*(void (**)(char *, uint64_t))(v40 + 8))(v19, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v16, v13);
      uint64_t v25 = 0;
      long long v26 = 0uLL;
LABEL_17:
      uint64_t v35 = (uint64_t)v49;
      *(void *)uint64_t v22 = v25;
      *(_OWORD *)(v22 + 8) = v26;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v35);
}

uint64_t sub_24F011948@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return OfflineLoadState.init(from:)(a1, a2);
}

uint64_t sub_24F011960(void *a1)
{
  return OfflineLoadState.encode(to:)(a1);
}

BOOL _s14FitnessLibrary16OfflineLoadStateO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = *a2;
  unint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  if (!v3)
  {
    if (!v6)
    {
      sub_24F002A98(*a1, 0);
      uint64_t v8 = v5;
      unint64_t v9 = 0;
      goto LABEL_8;
    }
    goto LABEL_12;
  }
  if (v3 == 1)
  {
    if (v6 == 1)
    {
      sub_24F002A98(*a1, 1uLL);
      sub_24F002A98(v5, 1uLL);
      return v6;
    }
    goto LABEL_12;
  }
  if (v3 != 2)
  {
    if (v6 >= 3 && (v2 == v5 && v3 == v6 || (sub_24F072400() & 1) != 0))
    {
      char v11 = sub_24F05C3E0(v4, v7);
      sub_24F0029F8(v5, v6);
      sub_24F0029F8(v2, v3);
      sub_24F002A98(v2, v3);
      sub_24F002A98(v5, v6);
      return (v11 & 1) != 0;
    }
LABEL_12:
    sub_24F0029F8(v5, v6);
    sub_24F0029F8(v2, v3);
    sub_24F002A98(v2, v3);
    sub_24F002A98(v5, v6);
    return 0;
  }
  if (v6 != 2) {
    goto LABEL_12;
  }
  sub_24F002A98(*a1, 2uLL);
  uint64_t v8 = v5;
  unint64_t v9 = 2;
LABEL_8:
  sub_24F002A98(v8, v9);
  return 1;
}

unint64_t sub_24F011B28()
{
  unint64_t result = qword_2699A31E0;
  if (!qword_2699A31E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A31E0);
  }
  return result;
}

unint64_t sub_24F011B7C()
{
  unint64_t result = qword_2699A31E8;
  if (!qword_2699A31E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A31E8);
  }
  return result;
}

unint64_t sub_24F011BD0()
{
  unint64_t result = qword_2699A31F0;
  if (!qword_2699A31F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A31F0);
  }
  return result;
}

unint64_t sub_24F011C24()
{
  unint64_t result = qword_2699A31F8;
  if (!qword_2699A31F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A31F8);
  }
  return result;
}

unint64_t sub_24F011C78()
{
  unint64_t result = qword_2699A3200;
  if (!qword_2699A3200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3200);
  }
  return result;
}

unint64_t sub_24F011CCC()
{
  unint64_t result = qword_2699A3208;
  if (!qword_2699A3208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3208);
  }
  return result;
}

unint64_t sub_24F011D20()
{
  unint64_t result = qword_2699A3238;
  if (!qword_2699A3238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3238);
  }
  return result;
}

unint64_t destroy for OfflineLoadState(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s14FitnessLibrary16OfflineLoadStateOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for OfflineLoadState(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    long long v5 = *(_OWORD *)a2;
    a1[2] = a2[2];
    *(_OWORD *)a1 = v5;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for OfflineLoadState(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for OfflineLoadState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for OfflineLoadState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)__n128 result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 2;
    }
  }
  return result;
}

uint64_t sub_24F012054(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_24F01206C(void *result, int a2)
{
  if (a2 < 0)
  {
    result[1] = 0;
    result[2] = 0;
    *__n128 result = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for OfflineLoadState()
{
  return &type metadata for OfflineLoadState;
}

uint64_t getEnumTagSinglePayload for OfflineLoadState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for OfflineLoadState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F0121FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OfflineLoadState.CodingKeys()
{
  return &type metadata for OfflineLoadState.CodingKeys;
}

ValueMetadata *type metadata accessor for OfflineLoadState.IdleCodingKeys()
{
  return &type metadata for OfflineLoadState.IdleCodingKeys;
}

ValueMetadata *type metadata accessor for OfflineLoadState.FetchingCodingKeys()
{
  return &type metadata for OfflineLoadState.FetchingCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for OfflineLoadState.FetchedCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24F0122F0);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for OfflineLoadState.FetchedCodingKeys()
{
  return &type metadata for OfflineLoadState.FetchedCodingKeys;
}

ValueMetadata *type metadata accessor for OfflineLoadState.OfflineCodingKeys()
{
  return &type metadata for OfflineLoadState.OfflineCodingKeys;
}

unint64_t sub_24F01233C()
{
  unint64_t result = qword_2699A3240;
  if (!qword_2699A3240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3240);
  }
  return result;
}

unint64_t sub_24F012394()
{
  unint64_t result = qword_2699A3248;
  if (!qword_2699A3248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3248);
  }
  return result;
}

unint64_t sub_24F0123EC()
{
  unint64_t result = qword_2699A3250;
  if (!qword_2699A3250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3250);
  }
  return result;
}

unint64_t sub_24F012444()
{
  unint64_t result = qword_2699A3258;
  if (!qword_2699A3258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3258);
  }
  return result;
}

unint64_t sub_24F01249C()
{
  unint64_t result = qword_2699A3260;
  if (!qword_2699A3260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3260);
  }
  return result;
}

unint64_t sub_24F0124F4()
{
  unint64_t result = qword_2699A3268;
  if (!qword_2699A3268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3268);
  }
  return result;
}

unint64_t sub_24F01254C()
{
  unint64_t result = qword_2699A3270;
  if (!qword_2699A3270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3270);
  }
  return result;
}

unint64_t sub_24F0125A4()
{
  unint64_t result = qword_2699A3278;
  if (!qword_2699A3278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3278);
  }
  return result;
}

unint64_t sub_24F0125FC()
{
  unint64_t result = qword_2699A3280;
  if (!qword_2699A3280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3280);
  }
  return result;
}

unint64_t sub_24F012654()
{
  unint64_t result = qword_2699A3288;
  if (!qword_2699A3288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3288);
  }
  return result;
}

unint64_t sub_24F0126AC()
{
  unint64_t result = qword_2699A3290;
  if (!qword_2699A3290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3290);
  }
  return result;
}

unint64_t sub_24F012704()
{
  unint64_t result = qword_2699A3298;
  if (!qword_2699A3298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3298);
  }
  return result;
}

uint64_t sub_24F012758(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701602409 && a2 == 0xE400000000000000;
  if (v2 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E696863746566 && a2 == 0xE800000000000000 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64656863746566 && a2 == 0xE700000000000000 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656E696C66666FLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24F072400();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_24F012908()
{
  if ((*v0 & 0xFF00) != 0x300)
  {
    sub_24F072440();
    sub_24F072080();
    swift_bridgeObjectRelease();
  }
  return sub_24F072440();
}

uint64_t sub_24F012A7C()
{
  __int16 v1 = *v0;
  sub_24F072430();
  if ((v1 & 0xFF00) != 0x300)
  {
    sub_24F072440();
    sub_24F072080();
    swift_bridgeObjectRelease();
  }
  sub_24F072440();
  return sub_24F072460();
}

uint64_t sub_24F012C08()
{
  __int16 v1 = *v0;
  sub_24F072430();
  if ((v1 & 0xFF00) != 0x300)
  {
    sub_24F072440();
    sub_24F072080();
    swift_bridgeObjectRelease();
  }
  sub_24F072440();
  return sub_24F072460();
}

BOOL sub_24F012D88(unsigned __int16 *a1, _WORD *a2)
{
  unsigned int v2 = *a1;
  int v3 = (unsigned __int16)*a2;
  BOOL result = (v3 & 0xFF00) == 0x300 && (v2 & 0xFF00) == 768;
  if ((v2 & 0xFF00) != 0x300 && (v3 & 0xFF00) != 0x300) {
    return (sub_24F02D65C(v2, *a2) & 1) != 0 && (v3 ^ v2) < 0x100;
  }
  return result;
}

__n128 LibraryFeature.init(environment:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t LibraryFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, char *a2, unint64_t *a3, unsigned __int16 *a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A32A0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v52 - v14;
  uint64_t result = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v52 - v17;
  unsigned int v19 = *a4;
  uint64_t v20 = *((unsigned __int8 *)a4 + 2);
  uint64_t v22 = *v4;
  uint64_t v21 = v4[1];
  switch(v20)
  {
    case 1:
      if (!(_BYTE)v19)
      {
        char v23 = *a2;
        switch(*a2)
        {
          case 6:
            goto LABEL_22;
          default:
            char v40 = sub_24F072400();
            uint64_t result = swift_bridgeObjectRelease();
            if ((v40 & 1) == 0)
            {
              uint64_t v41 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2699A32A8);
              uint64_t v42 = &v12[v41[16]];
              uint64_t v52 = &v12[v41[20]];
              uint64_t v43 = &v12[v41[24]];
              __int16 v55 = 768;
              sub_24F0136D8();
              sub_24F072230();
              sub_24F072130();
              uint64_t v44 = *MEMORY[0x263F39580];
              uint64_t v45 = sub_24F071FD0();
              (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v45 - 8) + 104))(v42, v44, v45);
              uint64_t v46 = *MEMORY[0x263F39570];
              uint64_t v47 = sub_24F071FC0();
              (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v47 - 8) + 104))(v52, v46, v47);
              uint64_t v48 = swift_allocObject();
              *(void *)(v48 + 16) = v22;
              *(void *)(v48 + 24) = v21;
              *(unsigned char *)(v48 + 32) = v23;
              *(void *)uint64_t v43 = &unk_2699A32C0;
              *((void *)v43 + 1) = v48;
              (*(void (**)(char *, void, uint64_t))(v9 + 104))(v12, *MEMORY[0x263F39530], v8);
              unint64_t v49 = *a3;
              swift_retain();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                unint64_t v49 = sub_24F014368(0, *(void *)(v49 + 16) + 1, 1, v49, &qword_2699A3340, &qword_2699A32A0);
              }
              unint64_t v51 = *(void *)(v49 + 16);
              unint64_t v50 = *(void *)(v49 + 24);
              if (v51 >= v50 >> 1) {
                unint64_t v49 = sub_24F014368(v50 > 1, v51 + 1, 1, v49, &qword_2699A3340, &qword_2699A32A0);
              }
              *(void *)(v49 + 16) = v51 + 1;
              uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v9 + 32))(v49+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v51, v12, v8);
              *a3 = v49;
            }
            break;
        }
      }
      break;
    case 2:
      if (v19 <= 0xFF && v19 > 5u)
      {
        switch(*a2)
        {
          case 6:
LABEL_22:
            uint64_t result = swift_bridgeObjectRelease();
            break;
          default:
            char v29 = sub_24F072400();
            uint64_t result = swift_bridgeObjectRelease();
            if ((v29 & 1) == 0)
            {
              uint64_t v30 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2699A32C8);
              uint64_t v31 = &v18[v30[24]];
              uint64_t v32 = &v18[v30[28]];
              uint64_t v33 = &v18[v30[32]];
              __int16 v53 = 6;
              sub_24F0136D8();
              sub_24F072230();
              *((void *)v18 + 5) = 0x3FE0000000000000;
              v18[48] = 0;
              sub_24F072130();
              uint64_t v34 = *MEMORY[0x263F39590];
              uint64_t v35 = sub_24F071FD0();
              (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 104))(v31, v34, v35);
              uint64_t v36 = *MEMORY[0x263F39570];
              uint64_t v37 = sub_24F071FC0();
              (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 104))(v32, v36, v37);
              *(void *)uint64_t v33 = &unk_2699A32D0;
              *((void *)v33 + 1) = 0;
              (*(void (**)(char *, void, uint64_t))(v9 + 104))(v18, *MEMORY[0x263F39538], v8);
              unint64_t v26 = *a3;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                unint64_t v26 = sub_24F014368(0, *(void *)(v26 + 16) + 1, 1, v26, &qword_2699A3340, &qword_2699A32A0);
              }
              unint64_t v39 = *(void *)(v26 + 16);
              unint64_t v38 = *(void *)(v26 + 24);
              if (v39 >= v38 >> 1) {
                unint64_t v26 = sub_24F014368(v38 > 1, v39 + 1, 1, v26, &qword_2699A3340, &qword_2699A32A0);
              }
              *(void *)(v26 + 16) = v39 + 1;
              uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v9 + 32))(v26+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v39, v18, v8);
              goto LABEL_31;
            }
            break;
        }
      }
      break;
    case 3:
      if (v19 <= 0xFF && v19 > 5u)
      {
        __int16 v54 = 6;
        sub_24F0136D8();
        sub_24F072230();
        (*(void (**)(char *, void, uint64_t))(v9 + 104))(v15, *MEMORY[0x263F39540], v8);
        unint64_t v26 = *a3;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v26 = sub_24F014368(0, *(void *)(v26 + 16) + 1, 1, v26, &qword_2699A3340, &qword_2699A32A0);
        }
        unint64_t v28 = *(void *)(v26 + 16);
        unint64_t v27 = *(void *)(v26 + 24);
        if (v28 >= v27 >> 1) {
          unint64_t v26 = sub_24F014368(v27 > 1, v28 + 1, 1, v26, &qword_2699A3340, &qword_2699A32A0);
        }
        *(void *)(v26 + 16) = v28 + 1;
        uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v9 + 32))(v26+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v28, v15, v8);
LABEL_31:
        *a3 = v26;
      }
      break;
    case 4:
      uint64_t result = type metadata accessor for LibraryState();
      a2[*(int *)(result + 28)] = 0;
      break;
    default:
      *a2 = v19;
      break;
  }
  return result;
}

unint64_t sub_24F0136D8()
{
  unint64_t result = qword_2699A32B0;
  if (!qword_2699A32B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_2699A32B0);
  }
  return result;
}

uint64_t sub_24F01372C()
{
  *(void *)(v0 + 16) = sub_24F072120();
  *(void *)(v0 + 24) = sub_24F072110();
  *(_WORD *)(v0 + 40) = 6;
  *(unsigned char *)(v0 + 42) = 0;
  __int16 v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3338);
  *__int16 v1 = v0;
  v1[1] = sub_24F01380C;
  return MEMORY[0x270F252C8](v0 + 40, v2);
}

uint64_t sub_24F01380C()
{
  swift_task_dealloc();
  uint64_t v1 = sub_24F0720F0();
  return MEMORY[0x270FA2498](sub_24F014784, v1, v0);
}

uint64_t sub_24F013948(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  v4[2] = sub_24F072120();
  v4[3] = sub_24F072110();
  uint64_t v9 = (int *)((char *)a2 + *a2);
  BOOL v7 = (void *)swift_task_alloc();
  v4[4] = v7;
  void *v7 = v4;
  v7[1] = sub_24F013A4C;
  return ((uint64_t (*)(uint64_t, void))v9)(a4, 0);
}

uint64_t sub_24F013A4C()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_24F0720F0();
  if (v0) {
    uint64_t v4 = sub_24F013C0C;
  }
  else {
    uint64_t v4 = sub_24F013BA8;
  }
  return MEMORY[0x270FA2498](v4, v3, v2);
}

uint64_t sub_24F013BA8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24F013C0C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24F013C70()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 33, 7);
}

uint64_t sub_24F013CA8(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(unsigned __int8 *)(v1 + 32);
  BOOL v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_24F013D58;
  return sub_24F013948(a1, v4, v5, v6);
}

uint64_t sub_24F013D58()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

unint64_t sub_24F013E58()
{
  unint64_t result = qword_26B1EBFD8[0];
  if (!qword_26B1EBFD8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26B1EBFD8);
  }
  return result;
}

unint64_t sub_24F013EB0()
{
  unint64_t result = qword_26B1EBFD0;
  if (!qword_26B1EBFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1EBFD0);
  }
  return result;
}

unint64_t sub_24F013F08()
{
  unint64_t result = qword_2699A32D8;
  if (!qword_2699A32D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A32D8);
  }
  return result;
}

unint64_t sub_24F013F60()
{
  unint64_t result = qword_26B1EBFB8;
  if (!qword_26B1EBFB8)
  {
    type metadata accessor for LibraryState();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1EBFB8);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for LibraryEnvironment(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for LibraryEnvironment()
{
  return swift_release();
}

void *assignWithCopy for LibraryEnvironment(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for LibraryEnvironment(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryEnvironment(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LibraryEnvironment(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryFeature()
{
  return &type metadata for LibraryFeature;
}

uint64_t getEnumTagSinglePayload for LibraryFeature.TaskIdentifier(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD)
  {
    unsigned int v2 = a2 + 65283;
    if (a2 + 65283 <= 0xFFFEFFFF) {
      unsigned int v3 = 2;
    }
    else {
      unsigned int v3 = 4;
    }
    if (v2 < 0xFF0000) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x10000) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = *((unsigned __int8 *)a1 + 2);
        if (!*((unsigned char *)a1 + 2)) {
          break;
        }
        return (*a1 | (v5 << 16)) - 65283;
      case 2:
        int v5 = a1[1];
        if (a1[1]) {
          return (*a1 | (v5 << 16)) - 65283;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x24F0141A4);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 16)) - 65283;
      default:
        break;
    }
  }
  unsigned int v7 = *((unsigned __int8 *)a1 + 1);
  BOOL v8 = v7 >= 3;
  unsigned int v9 = v7 - 3;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for LibraryFeature.TaskIdentifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 65283;
  if (a3 + 65283 <= 0xFFFEFFFF) {
    int v4 = 2;
  }
  else {
    int v4 = 4;
  }
  if (v3 < 0xFF0000) {
    int v4 = 1;
  }
  if (v3 >= 0x10000) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFD) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v7 = ((a2 - 253) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 253;
    switch(v6)
    {
      case 1:
        *(unsigned char *)(result + 2) = v7;
        break;
      case 2:
        *(_WORD *)(result + 2) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x24F01428CLL);
      case 4:
        *(_DWORD *)(result + 2) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *(unsigned char *)(result + 1) = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_24F0142B4(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 1);
  if (v1 >= 3) {
    return v1 - 2;
  }
  else {
    return 0;
  }
}

uint64_t sub_24F0142C8(uint64_t result, unsigned int a2)
{
  if (a2 > 0xFD)
  {
    *(_WORD *)unint64_t result = a2 - 254;
  }
  else if (a2)
  {
    *(unsigned char *)(result + 1) = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryFeature.TaskIdentifier()
{
  return &type metadata for LibraryFeature.TaskIdentifier;
}

unint64_t sub_24F014300()
{
  unint64_t result = qword_2699A32E0;
  if (!qword_2699A32E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A32E0);
  }
  return result;
}

uint64_t sub_24F014354(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24F014368(a1, a2, a3, a4, &qword_2699A3328, &qword_2699A3330);
}

uint64_t sub_24F014368(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = *(void *)(a4 + 24);
    uint64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v10 = a2;
      }
    }
  }
  else
  {
    uint64_t v10 = a2;
  }
  uint64_t v11 = *(void *)(a4 + 16);
  if (v10 <= v11) {
    uint64_t v12 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (BOOL v18 = v14 == -1) : (BOOL v18 = 0), v18))
  {
LABEL_29:
    uint64_t result = sub_24F072290();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (unint64_t)v16 + v20;
  if (a1)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(void *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_24F014624(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_24F0145D4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24F014368(a1, a2, a3, a4, &qword_2699A3318, &qword_2699A3320);
}

uint64_t sub_24F0145E8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24F014368(a1, a2, a3, a4, &qword_2699A3308, &qword_2699A3310);
}

uint64_t sub_24F0145FC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24F014368(a1, a2, a3, a4, &qword_2699A32F8, &qword_2699A3300);
}

uint64_t sub_24F014610(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24F014368(a1, a2, a3, a4, &qword_2699A32E8, &qword_2699A32F0);
}

uint64_t sub_24F014624(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a5) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_24F0722D0();
  __break(1u);
  return result;
}

unint64_t sub_24F014788()
{
  unint64_t result = 0x4164694477656976;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000016;
      break;
    case 2:
      unint64_t result = 0x646564616F6CLL;
      break;
    case 3:
      unint64_t result = 0x6C66664F776F6873;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24F014830@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24F015EB4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24F014858(uint64_t a1)
{
  unint64_t v2 = sub_24F014FD0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F014894(uint64_t a1)
{
  unint64_t v2 = sub_24F014FD0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F0148D0(uint64_t a1)
{
  unint64_t v2 = sub_24F0150CC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F01490C(uint64_t a1)
{
  unint64_t v2 = sub_24F0150CC();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_24F014948()
{
  return 0xD000000000000011;
}

uint64_t sub_24F014964@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24F0160A8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24F014990(uint64_t a1)
{
  unint64_t v2 = sub_24F015078();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F0149CC(uint64_t a1)
{
  unint64_t v2 = sub_24F015078();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F014A08(uint64_t a1)
{
  unint64_t v2 = sub_24F015024();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F014A44(uint64_t a1)
{
  unint64_t v2 = sub_24F015024();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F014A80(uint64_t a1)
{
  unint64_t v2 = sub_24F015120();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F014ABC(uint64_t a1)
{
  unint64_t v2 = sub_24F015120();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t OfflineAction.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3348);
  uint64_t v32 = *(void *)(v3 - 8);
  uint64_t v33 = v3;
  MEMORY[0x270FA5388](v3);
  char v29 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3350);
  uint64_t v31 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v30 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3358);
  uint64_t v27 = *(void *)(v6 - 8);
  uint64_t v28 = v6;
  MEMORY[0x270FA5388](v6);
  BOOL v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3360);
  uint64_t v26 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3368);
  uint64_t v35 = *(void *)(v12 - 8);
  uint64_t v36 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *v1;
  uint64_t v16 = v1[1];
  uint64_t v24 = v1[2];
  uint64_t v25 = v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24F014FD0();
  sub_24F072480();
  switch(v16)
  {
    case 0:
      LOBYTE(v37) = 0;
      sub_24F015120();
      uint64_t v20 = v36;
      sub_24F072390();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
      return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v14, v20);
    case 1:
      LOBYTE(v37) = 1;
      sub_24F0150CC();
      uint64_t v20 = v36;
      sub_24F072390();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v28);
      return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v14, v20);
    case 2:
      LOBYTE(v37) = 3;
      sub_24F015024();
      size_t v17 = v29;
      uint64_t v18 = v36;
      sub_24F072390();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v17, v33);
      return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v14, v18);
    default:
      LOBYTE(v37) = 2;
      sub_24F015078();
      unint64_t v21 = v30;
      uint64_t v22 = v36;
      sub_24F072390();
      uint64_t v37 = v25;
      uint64_t v38 = v16;
      uint64_t v39 = v24;
      sub_24F011C24();
      uint64_t v23 = v34;
      sub_24F0723F0();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v21, v23);
      return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v14, v22);
  }
}

unint64_t sub_24F014FD0()
{
  unint64_t result = qword_2699A3370;
  if (!qword_2699A3370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3370);
  }
  return result;
}

unint64_t sub_24F015024()
{
  unint64_t result = qword_2699A3378;
  if (!qword_2699A3378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3378);
  }
  return result;
}

unint64_t sub_24F015078()
{
  unint64_t result = qword_2699A3380;
  if (!qword_2699A3380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3380);
  }
  return result;
}

unint64_t sub_24F0150CC()
{
  unint64_t result = qword_2699A3388;
  if (!qword_2699A3388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3388);
  }
  return result;
}

unint64_t sub_24F015120()
{
  unint64_t result = qword_2699A3390;
  if (!qword_2699A3390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3390);
  }
  return result;
}

uint64_t OfflineAction.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3398);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v41 = v3;
  uint64_t v42 = v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v47 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A33A0);
  uint64_t v44 = *(void *)(v6 - 8);
  uint64_t v45 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v46 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A33A8);
  uint64_t v39 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A33B0);
  uint64_t v40 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A33B8);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1[3];
  unint64_t v49 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_24F014FD0();
  uint64_t v18 = v52;
  sub_24F072470();
  if (v18) {
    goto LABEL_14;
  }
  uint64_t v19 = v12;
  uint64_t v37 = v10;
  uint64_t v38 = 0;
  uint64_t v20 = v46;
  unint64_t v21 = v47;
  uint64_t v52 = v14;
  uint64_t v22 = v48;
  uint64_t v23 = sub_24F072380();
  if (*(void *)(v23 + 16) != 1)
  {
    uint64_t v27 = sub_24F072260();
    swift_allocError();
    char v29 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3060);
    *char v29 = &type metadata for OfflineAction;
    sub_24F072310();
    sub_24F072250();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v27 - 8) + 104))(v29, *MEMORY[0x263F8DCB0], v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v16, v13);
LABEL_14:
    uint64_t v35 = (uint64_t)v49;
    return __swift_destroy_boxed_opaque_existential_1(v35);
  }
  switch(*(unsigned char *)(v23 + 32))
  {
    case 1:
      LOBYTE(v50) = 1;
      sub_24F0150CC();
      uint64_t v30 = v38;
      sub_24F072300();
      if (v30) {
        goto LABEL_13;
      }
      (*(void (**)(char *, uint64_t))(v39 + 8))(v9, v43);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v16, v13);
      uint64_t v25 = 0;
      long long v26 = xmmword_24F073C30;
      goto LABEL_17;
    case 2:
      LOBYTE(v50) = 2;
      sub_24F015078();
      uint64_t v31 = v20;
      uint64_t v32 = v38;
      sub_24F072300();
      if (v32) {
        goto LABEL_13;
      }
      sub_24F011D20();
      uint64_t v33 = v45;
      sub_24F072370();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v31, v33);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v16, v13);
      uint64_t v25 = v50;
      long long v26 = v51;
      goto LABEL_17;
    case 3:
      LOBYTE(v50) = 3;
      sub_24F015024();
      uint64_t v34 = v38;
      sub_24F072300();
      if (v34) {
        goto LABEL_13;
      }
      (*(void (**)(char *, uint64_t))(v42 + 8))(v21, v41);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v16, v13);
      uint64_t v25 = 0;
      long long v26 = xmmword_24F073C20;
      goto LABEL_17;
    default:
      LOBYTE(v50) = 0;
      sub_24F015120();
      uint64_t v24 = v38;
      sub_24F072300();
      if (v24)
      {
LABEL_13:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v52 + 8))(v16, v13);
        goto LABEL_14;
      }
      (*(void (**)(char *, uint64_t))(v40 + 8))(v19, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v16, v13);
      uint64_t v25 = 0;
      long long v26 = 0uLL;
LABEL_17:
      uint64_t v35 = (uint64_t)v49;
      *(void *)uint64_t v22 = v25;
      *(_OWORD *)(v22 + 8) = v26;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v35);
}

uint64_t sub_24F01584C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return OfflineAction.init(from:)(a1, a2);
}

uint64_t sub_24F015864(void *a1)
{
  return OfflineAction.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for OfflineAction()
{
  return &type metadata for OfflineAction;
}

unsigned char *storeEnumTagSinglePayload for OfflineAction.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F015958);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OfflineAction.CodingKeys()
{
  return &type metadata for OfflineAction.CodingKeys;
}

ValueMetadata *type metadata accessor for OfflineAction.ViewDidAppearCodingKeys()
{
  return &type metadata for OfflineAction.ViewDidAppearCodingKeys;
}

ValueMetadata *type metadata accessor for OfflineAction.FetchSectionDescriptorCodingKeys()
{
  return &type metadata for OfflineAction.FetchSectionDescriptorCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for OfflineAction.LoadedCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24F015A4CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for OfflineAction.LoadedCodingKeys()
{
  return &type metadata for OfflineAction.LoadedCodingKeys;
}

ValueMetadata *type metadata accessor for OfflineAction.ShowOfflineModeCodingKeys()
{
  return &type metadata for OfflineAction.ShowOfflineModeCodingKeys;
}

unint64_t sub_24F015A98()
{
  unint64_t result = qword_2699A33C0;
  if (!qword_2699A33C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A33C0);
  }
  return result;
}

unint64_t sub_24F015AF0()
{
  unint64_t result = qword_2699A33C8;
  if (!qword_2699A33C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A33C8);
  }
  return result;
}

unint64_t sub_24F015B48()
{
  unint64_t result = qword_2699A33D0;
  if (!qword_2699A33D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A33D0);
  }
  return result;
}

unint64_t sub_24F015BA0()
{
  unint64_t result = qword_2699A33D8;
  if (!qword_2699A33D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A33D8);
  }
  return result;
}

unint64_t sub_24F015BF8()
{
  unint64_t result = qword_2699A33E0;
  if (!qword_2699A33E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A33E0);
  }
  return result;
}

unint64_t sub_24F015C50()
{
  unint64_t result = qword_2699A33E8;
  if (!qword_2699A33E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A33E8);
  }
  return result;
}

unint64_t sub_24F015CA8()
{
  unint64_t result = qword_2699A33F0;
  if (!qword_2699A33F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A33F0);
  }
  return result;
}

unint64_t sub_24F015D00()
{
  unint64_t result = qword_2699A33F8;
  if (!qword_2699A33F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A33F8);
  }
  return result;
}

unint64_t sub_24F015D58()
{
  unint64_t result = qword_2699A3400;
  if (!qword_2699A3400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3400);
  }
  return result;
}

unint64_t sub_24F015DB0()
{
  unint64_t result = qword_2699A3408;
  if (!qword_2699A3408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3408);
  }
  return result;
}

unint64_t sub_24F015E08()
{
  unint64_t result = qword_2699A3410;
  if (!qword_2699A3410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3410);
  }
  return result;
}

unint64_t sub_24F015E60()
{
  unint64_t result = qword_2699A3418;
  if (!qword_2699A3418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3418);
  }
  return result;
}

uint64_t sub_24F015EB4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4164694477656976 && a2 == 0xED00007261657070;
  if (v2 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000024F07AC10 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x646564616F6CLL && a2 == 0xE600000000000000 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C66664F776F6873 && a2 == 0xEF65646F4D656E69)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24F072400();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_24F0160A8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x800000024F07AC30)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_24F072400();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

void *static ContentRating.allCases.getter()
{
  return &unk_2700A5928;
}

uint64_t ContentRating.rawValue.getter(char a1)
{
  if (!a1) {
    return 0x6E61656C63;
  }
  if (a1 == 1) {
    return 0x746963696C707865;
  }
  return 0x6669636570736E75;
}

uint64_t sub_24F01619C(unsigned char *a1, unsigned char *a2)
{
  int v2 = *a1;
  unint64_t v3 = 0xE800000000000000;
  uint64_t v4 = 0x746963696C707865;
  if (v2 != 1)
  {
    uint64_t v4 = 0x6669636570736E75;
    unint64_t v3 = 0xEB00000000646569;
  }
  if (*a1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0x6E61656C63;
  }
  if (v2) {
    unint64_t v6 = v3;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  unint64_t v7 = 0xE800000000000000;
  uint64_t v8 = 0x746963696C707865;
  if (*a2 != 1)
  {
    uint64_t v8 = 0x6669636570736E75;
    unint64_t v7 = 0xEB00000000646569;
  }
  if (*a2) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0x6E61656C63;
  }
  if (*a2) {
    unint64_t v10 = v7;
  }
  else {
    unint64_t v10 = 0xE500000000000000;
  }
  if (v5 == v9 && v6 == v10) {
    char v11 = 1;
  }
  else {
    char v11 = sub_24F072400();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

uint64_t sub_24F0162B0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s14FitnessLibrary13ContentRatingO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

void sub_24F0162E0(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE500000000000000;
  unint64_t v4 = 0xE800000000000000;
  uint64_t v5 = 0x746963696C707865;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6669636570736E75;
    unint64_t v4 = 0xEB00000000646569;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E61656C63;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

void sub_24F016344(void *a1@<X8>)
{
  *a1 = &unk_2700A5950;
}

uint64_t sub_24F016354()
{
  return sub_24F0720D0();
}

uint64_t sub_24F0163B4()
{
  return sub_24F0720C0();
}

uint64_t sub_24F016404()
{
  return sub_24F072460();
}

uint64_t sub_24F0164AC()
{
  sub_24F072080();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F016540()
{
  return sub_24F072460();
}

uint64_t _s14FitnessLibrary13ContentRatingO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_24F0722E0();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

unint64_t sub_24F016634()
{
  unint64_t result = qword_2699A3420;
  if (!qword_2699A3420)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A3428);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3420);
  }
  return result;
}

unint64_t sub_24F016694()
{
  unint64_t result = qword_2699A3430;
  if (!qword_2699A3430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3430);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ContentRating(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ContentRating(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F016844);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentRating()
{
  return &type metadata for ContentRating;
}

unint64_t sub_24F01687C()
{
  unint64_t result = qword_2699A3438;
  if (!qword_2699A3438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3438);
  }
  return result;
}

uint64_t WorkoutPlanDetail.artworkBackgroundColor.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24F016984(v1, a1, &qword_26B1EBD78);
}

uint64_t WorkoutPlanDetail.artworkTemplateURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for WorkoutPlanDetail();
  return sub_24F016984(v1 + *(int *)(v3 + 20), a1, &qword_26B1EBD60);
}

uint64_t type metadata accessor for WorkoutPlanDetail()
{
  uint64_t result = qword_26B1EC0E0;
  if (!qword_26B1EC0E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24F016984(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t WorkoutPlanDetail.caption.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for WorkoutPlanDetail() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WorkoutPlanDetail.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WorkoutPlanDetail() + 28);
  uint64_t v4 = sub_24F0714D0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t WorkoutPlanDetail.isScheduledToday.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for WorkoutPlanDetail() + 32));
}

uint64_t WorkoutPlanDetail.nextWorkoutIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for WorkoutPlanDetail() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WorkoutPlanDetail.subtitle.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for WorkoutPlanDetail() + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WorkoutPlanDetail.title.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for WorkoutPlanDetail() + 44));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_24F016B84()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD78);
  MEMORY[0x270FA5388](v0 - 8);
  int v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_24F0714D0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v7 = (int *)type metadata accessor for WorkoutPlanDetail();
  __swift_allocate_value_buffer((uint64_t)v7, qword_2699A3440);
  uint64_t v8 = __swift_project_value_buffer((uint64_t)v7, (uint64_t)qword_2699A3440);
  sub_24F0714C0();
  sub_24F071510();
  uint64_t v9 = sub_24F071520();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v2, 0, 1, v9);
  uint64_t v10 = v8 + v7[5];
  uint64_t v11 = sub_24F071490();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v8 + v7[7], v6, v3);
  uint64_t result = sub_24F016F34((uint64_t)v2, v8, &qword_26B1EBD78);
  uint64_t v13 = (void *)(v8 + v7[11]);
  *uint64_t v13 = 0xD000000000000011;
  v13[1] = 0x800000024F07ACD0;
  uint64_t v14 = (void *)(v8 + v7[10]);
  *uint64_t v14 = 0xD000000000000014;
  v14[1] = 0x800000024F07ACF0;
  uint64_t v15 = (void *)(v8 + v7[6]);
  *uint64_t v15 = 0xD000000000000013;
  v15[1] = 0x800000024F07AD10;
  uint64_t v16 = (void *)(v8 + v7[9]);
  *uint64_t v16 = 0;
  v16[1] = 0xE000000000000000;
  *(unsigned char *)(v8 + v7[8]) = 0;
  return result;
}

uint64_t WorkoutPlanDetail.init(identifier:artworkBackgroundColor:artworkTemplateURL:title:subtitle:caption:nextWorkoutIdentifier:isScheduledToday:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  uint64_t v19 = (int *)type metadata accessor for WorkoutPlanDetail();
  uint64_t v20 = a9 + v19[7];
  uint64_t v21 = sub_24F0714D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(v20, a1, v21);
  sub_24F016F34(a2, a9, &qword_26B1EBD78);
  uint64_t result = sub_24F016F34(a3, a9 + v19[5], &qword_26B1EBD60);
  uint64_t v23 = (void *)(a9 + v19[11]);
  *uint64_t v23 = a4;
  v23[1] = a5;
  uint64_t v24 = (void *)(a9 + v19[10]);
  *uint64_t v24 = a6;
  v24[1] = a7;
  uint64_t v25 = (void *)(a9 + v19[6]);
  *uint64_t v25 = a8;
  v25[1] = a10;
  long long v26 = (void *)(a9 + v19[9]);
  *long long v26 = a11;
  v26[1] = a12;
  *(unsigned char *)(a9 + v19[8]) = a13;
  return result;
}

uint64_t sub_24F016F34(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t static WorkoutPlanDetail.placeholder.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2699A2D00 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for WorkoutPlanDetail();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_2699A3440);
  return sub_24F017010(v3, a1);
}

uint64_t sub_24F017010(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WorkoutPlanDetail();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_24F017074(char a1)
{
  unint64_t result = 0xD000000000000016;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0x6E6F6974706163;
      break;
    case 3:
      unint64_t result = 0x696669746E656469;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0xD000000000000015;
      break;
    case 6:
      unint64_t result = 0x656C746974627573;
      break;
    case 7:
      unint64_t result = 0x656C746974;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24F01717C()
{
  return sub_24F017074(*v0);
}

uint64_t sub_24F017184@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24F01A4B0(a1, a2);
  *a3 = result;
  return result;
}

void sub_24F0171AC(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_24F0171B8(uint64_t a1)
{
  unint64_t v2 = sub_24F017598();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F0171F4(uint64_t a1)
{
  unint64_t v2 = sub_24F017598();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t WorkoutPlanDetail.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3458);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24F017598();
  sub_24F072480();
  v8[15] = 0;
  sub_24F071520();
  sub_24F01A838(&qword_2699A3468, MEMORY[0x263F3E0F0]);
  sub_24F0723B0();
  if (!v1)
  {
    type metadata accessor for WorkoutPlanDetail();
    v8[14] = 1;
    sub_24F071490();
    sub_24F01A838(&qword_2699A3470, MEMORY[0x263F06EA8]);
    sub_24F0723B0();
    v8[13] = 2;
    sub_24F0723C0();
    v8[12] = 3;
    sub_24F0714D0();
    sub_24F01A838(&qword_2699A3000, MEMORY[0x263F07508]);
    sub_24F0723F0();
    v8[11] = 4;
    sub_24F0723D0();
    v8[10] = 5;
    sub_24F0723C0();
    v8[9] = 6;
    sub_24F0723C0();
    v8[8] = 7;
    sub_24F0723C0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_24F017598()
{
  unint64_t result = qword_2699A3460;
  if (!qword_2699A3460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3460);
  }
  return result;
}

uint64_t WorkoutPlanDetail.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v3 = sub_24F0714D0();
  uint64_t v40 = *(void *)(v3 - 8);
  uint64_t v41 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD60);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD78);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3478);
  uint64_t v42 = *(void *)(v12 - 8);
  uint64_t v43 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for WorkoutPlanDetail();
  MEMORY[0x270FA5388](v44);
  uint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1[3];
  uint64_t v45 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_24F017598();
  uint64_t v18 = v46;
  sub_24F072470();
  if (v18) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
  }
  uint64_t v46 = v5;
  sub_24F071520();
  char v54 = 0;
  sub_24F01A838(&qword_2699A3480, MEMORY[0x263F3E0F0]);
  sub_24F072330();
  uint64_t v19 = (uint64_t)v16;
  sub_24F016F34((uint64_t)v11, (uint64_t)v16, &qword_26B1EBD78);
  sub_24F071490();
  char v53 = 1;
  sub_24F01A838(&qword_2699A3488, MEMORY[0x263F06EA8]);
  sub_24F072330();
  uint64_t v20 = (int *)v44;
  sub_24F016F34((uint64_t)v8, (uint64_t)&v16[*(int *)(v44 + 20)], &qword_26B1EBD60);
  char v52 = 2;
  uint64_t v21 = sub_24F072340();
  uint64_t v22 = (uint64_t *)&v16[v20[6]];
  *uint64_t v22 = v21;
  v22[1] = v23;
  char v51 = 3;
  sub_24F01A838(&qword_2699A3068, MEMORY[0x263F07508]);
  uint64_t v24 = v46;
  uint64_t v25 = v41;
  sub_24F072370();
  (*(void (**)(uint64_t, char *, uint64_t))(v40 + 32))(v19 + v20[7], v24, v25);
  char v50 = 4;
  char v26 = sub_24F072350();
  uint64_t v27 = (uint64_t)v45;
  *(unsigned char *)(v19 + v20[8]) = v26 & 1;
  char v49 = 5;
  uint64_t v28 = sub_24F072340();
  char v29 = (uint64_t *)(v19 + v20[9]);
  *char v29 = v28;
  v29[1] = v30;
  char v48 = 6;
  uint64_t v31 = sub_24F072340();
  uint64_t v32 = (uint64_t *)(v19 + v20[10]);
  *uint64_t v32 = v31;
  v32[1] = v33;
  char v47 = 7;
  uint64_t v34 = sub_24F072340();
  uint64_t v36 = v35;
  (*(void (**)(char *, uint64_t))(v42 + 8))(v14, v43);
  uint64_t v37 = (uint64_t *)(v19 + *(int *)(v44 + 44));
  *uint64_t v37 = v34;
  v37[1] = v36;
  sub_24F017010(v19, v39);
  __swift_destroy_boxed_opaque_existential_1(v27);
  return sub_24F00DF54(v19);
}

uint64_t sub_24F017D18@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return WorkoutPlanDetail.init(from:)(a1, a2);
}

uint64_t sub_24F017D30(void *a1)
{
  return WorkoutPlanDetail.encode(to:)(a1);
}

uint64_t WorkoutPlanDetail.hash(into:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24F071490();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v19 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD60);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24F071520();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD78);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24F016984(v1, (uint64_t)v14, &qword_26B1EBD78);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8) == 1)
  {
    sub_24F072450();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
    sub_24F072450();
    sub_24F01A838(&qword_2699A3490, MEMORY[0x263F3E0F0]);
    sub_24F072010();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  uint64_t v15 = type metadata accessor for WorkoutPlanDetail();
  sub_24F016984(v1 + *(int *)(v15 + 20), (uint64_t)v7, &qword_26B1EBD60);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v7, 1, v2) == 1)
  {
    sub_24F072450();
  }
  else
  {
    uint64_t v16 = v19;
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v19, v7, v2);
    sub_24F072450();
    sub_24F01A838(&qword_2699A3498, MEMORY[0x263F06EA8]);
    sub_24F072010();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v16, v2);
  }
  swift_bridgeObjectRetain();
  sub_24F072080();
  swift_bridgeObjectRelease();
  sub_24F0714D0();
  sub_24F01A838(&qword_2699A3070, MEMORY[0x263F07508]);
  sub_24F072010();
  sub_24F072450();
  swift_bridgeObjectRetain();
  sub_24F072080();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24F072080();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24F072080();
  return swift_bridgeObjectRelease();
}

uint64_t WorkoutPlanDetail.hashValue.getter()
{
  return sub_24F072460();
}

uint64_t sub_24F018238()
{
  return sub_24F072460();
}

uint64_t sub_24F01827C()
{
  return sub_24F072460();
}

uint64_t _s14FitnessLibrary17WorkoutPlanDetailV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v78 = sub_24F071490();
  uint64_t v76 = *(void *)(v78 - 8);
  MEMORY[0x270FA5388](v78);
  uint64_t v72 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A34C0);
  MEMORY[0x270FA5388](v75);
  uint64_t v77 = (uint64_t)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD60);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v73 = (uint64_t)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v81 = (uint64_t)&v71 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v82 = (uint64_t)&v71 - v11;
  uint64_t v12 = sub_24F071520();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v74 = (char *)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A34C8);
  uint64_t v16 = v15 - 8;
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD78);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (char *)&v71 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  uint64_t v25 = (char *)&v71 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v71 - v26;
  uint64_t v79 = a1;
  sub_24F016984(a1, (uint64_t)&v71 - v26, &qword_26B1EBD78);
  uint64_t v80 = a2;
  sub_24F016984(a2, (uint64_t)v25, &qword_26B1EBD78);
  uint64_t v28 = (uint64_t)&v18[*(int *)(v16 + 56)];
  sub_24F016984((uint64_t)v27, (uint64_t)v18, &qword_26B1EBD78);
  sub_24F016984((uint64_t)v25, v28, &qword_26B1EBD78);
  char v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (v29((uint64_t)v18, 1, v12) == 1)
  {
    sub_24F01A7DC((uint64_t)v25, &qword_26B1EBD78);
    sub_24F01A7DC((uint64_t)v27, &qword_26B1EBD78);
    if (v29(v28, 1, v12) == 1)
    {
      sub_24F01A7DC((uint64_t)v18, &qword_26B1EBD78);
      goto LABEL_8;
    }
LABEL_6:
    uint64_t v30 = &qword_2699A34C8;
    uint64_t v31 = (uint64_t)v18;
LABEL_14:
    sub_24F01A7DC(v31, v30);
    goto LABEL_15;
  }
  sub_24F016984((uint64_t)v18, (uint64_t)v22, &qword_26B1EBD78);
  if (v29(v28, 1, v12) == 1)
  {
    sub_24F01A7DC((uint64_t)v25, &qword_26B1EBD78);
    sub_24F01A7DC((uint64_t)v27, &qword_26B1EBD78);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v22, v12);
    goto LABEL_6;
  }
  uint64_t v32 = v74;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v74, v28, v12);
  sub_24F01A838(&qword_2699A34D8, MEMORY[0x263F3E0F0]);
  char v33 = sub_24F072020();
  uint64_t v34 = *(void (**)(char *, uint64_t))(v13 + 8);
  v34(v32, v12);
  sub_24F01A7DC((uint64_t)v25, &qword_26B1EBD78);
  sub_24F01A7DC((uint64_t)v27, &qword_26B1EBD78);
  v34(v22, v12);
  sub_24F01A7DC((uint64_t)v18, &qword_26B1EBD78);
  if ((v33 & 1) == 0) {
    goto LABEL_15;
  }
LABEL_8:
  uint64_t v35 = (int *)type metadata accessor for WorkoutPlanDetail();
  uint64_t v36 = v82;
  sub_24F016984(v79 + v35[5], v82, &qword_26B1EBD60);
  uint64_t v37 = v81;
  sub_24F016984(v80 + v35[5], v81, &qword_26B1EBD60);
  uint64_t v38 = v77;
  uint64_t v39 = v77 + *(int *)(v75 + 48);
  sub_24F016984(v36, v77, &qword_26B1EBD60);
  sub_24F016984(v37, v39, &qword_26B1EBD60);
  uint64_t v40 = v76;
  uint64_t v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48);
  uint64_t v42 = v78;
  if (v41(v38, 1, v78) == 1)
  {
    sub_24F01A7DC(v37, &qword_26B1EBD60);
    sub_24F01A7DC(v36, &qword_26B1EBD60);
    if (v41(v39, 1, v42) == 1)
    {
      sub_24F01A7DC(v38, &qword_26B1EBD60);
      goto LABEL_18;
    }
    goto LABEL_13;
  }
  uint64_t v43 = v73;
  sub_24F016984(v38, v73, &qword_26B1EBD60);
  if (v41(v39, 1, v42) == 1)
  {
    sub_24F01A7DC(v81, &qword_26B1EBD60);
    sub_24F01A7DC(v82, &qword_26B1EBD60);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v43, v42);
LABEL_13:
    uint64_t v30 = &qword_2699A34C0;
    uint64_t v31 = v38;
    goto LABEL_14;
  }
  uint64_t v46 = v43;
  char v47 = v72;
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v72, v39, v42);
  sub_24F01A838(&qword_2699A34D0, MEMORY[0x263F06EA8]);
  char v48 = sub_24F072020();
  char v49 = *(void (**)(char *, uint64_t))(v40 + 8);
  v49(v47, v42);
  sub_24F01A7DC(v81, &qword_26B1EBD60);
  sub_24F01A7DC(v82, &qword_26B1EBD60);
  v49((char *)v46, v42);
  sub_24F01A7DC(v38, &qword_26B1EBD60);
  if ((v48 & 1) == 0) {
    goto LABEL_15;
  }
LABEL_18:
  uint64_t v50 = v35[6];
  uint64_t v51 = v79;
  uint64_t v52 = v80;
  uint64_t v53 = *(void *)(v79 + v50);
  uint64_t v54 = *(void *)(v79 + v50 + 8);
  __int16 v55 = (void *)(v80 + v50);
  if (v53 != *v55 || v54 != v55[1])
  {
    char v56 = sub_24F072400();
    char v44 = 0;
    if ((v56 & 1) == 0) {
      return v44 & 1;
    }
  }
  if ((sub_24F0714B0() & 1) == 0 || *(unsigned __int8 *)(v51 + v35[8]) != *(unsigned __int8 *)(v52 + v35[8]))
  {
LABEL_15:
    char v44 = 0;
    return v44 & 1;
  }
  uint64_t v57 = v35[9];
  uint64_t v58 = *(void *)(v51 + v57);
  uint64_t v59 = *(void *)(v51 + v57 + 8);
  uint64_t v60 = (void *)(v52 + v57);
  if (v58 == *v60 && v59 == v60[1] || (char v61 = sub_24F072400(), v44 = 0, (v61 & 1) != 0))
  {
    uint64_t v62 = v35[10];
    uint64_t v63 = *(void *)(v51 + v62);
    uint64_t v64 = *(void *)(v51 + v62 + 8);
    uint64_t v65 = (void *)(v52 + v62);
    if (v63 == *v65 && v64 == v65[1] || (char v66 = sub_24F072400(), v44 = 0, (v66 & 1) != 0))
    {
      uint64_t v67 = v35[11];
      uint64_t v68 = *(void *)(v51 + v67);
      uint64_t v69 = *(void *)(v51 + v67 + 8);
      uint64_t v70 = (void *)(v52 + v67);
      if (v68 == *v70 && v69 == v70[1]) {
        char v44 = 1;
      }
      else {
        char v44 = sub_24F072400();
      }
    }
  }
  return v44 & 1;
}

uint64_t sub_24F018B30()
{
  return sub_24F01A838(&qword_2699A34A0, (void (*)(uint64_t))type metadata accessor for WorkoutPlanDetail);
}

uint64_t *initializeBufferWithCopyOfBuffer for WorkoutPlanDetail(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24F071520();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD78);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = a3[5];
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_24F071490();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD60);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    uint64_t v17 = a3[6];
    uint64_t v18 = a3[7];
    uint64_t v19 = (uint64_t *)((char *)a1 + v17);
    uint64_t v20 = (uint64_t *)((char *)a2 + v17);
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    uint64_t v22 = (char *)a1 + v18;
    uint64_t v23 = (char *)a2 + v18;
    uint64_t v24 = sub_24F0714D0();
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
    swift_bridgeObjectRetain();
    v25(v22, v23, v24);
    uint64_t v26 = a3[9];
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    uint64_t v27 = (uint64_t *)((char *)a1 + v26);
    uint64_t v28 = (uint64_t *)((char *)a2 + v26);
    uint64_t v29 = v28[1];
    *uint64_t v27 = *v28;
    v27[1] = v29;
    uint64_t v30 = a3[10];
    uint64_t v31 = a3[11];
    uint64_t v32 = (uint64_t *)((char *)a1 + v30);
    char v33 = (uint64_t *)((char *)a2 + v30);
    uint64_t v34 = v33[1];
    *uint64_t v32 = *v33;
    v32[1] = v34;
    uint64_t v35 = (uint64_t *)((char *)a1 + v31);
    uint64_t v36 = (uint64_t *)((char *)a2 + v31);
    uint64_t v37 = v36[1];
    void *v35 = *v36;
    v35[1] = v37;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for WorkoutPlanDetail(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24F071520();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t v7 = sub_24F071490();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = a1 + *(int *)(a2 + 28);
  uint64_t v10 = sub_24F0714D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for WorkoutPlanDetail(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_24F071520();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD78);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_24F071490();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD60);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v15 = a3[6];
  uint64_t v16 = a3[7];
  uint64_t v17 = &a1[v15];
  uint64_t v18 = &a2[v15];
  uint64_t v19 = *((void *)v18 + 1);
  *(void *)uint64_t v17 = *(void *)v18;
  *((void *)v17 + 1) = v19;
  uint64_t v20 = &a1[v16];
  uint64_t v21 = &a2[v16];
  uint64_t v22 = sub_24F0714D0();
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
  swift_bridgeObjectRetain();
  v23(v20, v21, v22);
  uint64_t v24 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  uint64_t v27 = *((void *)v26 + 1);
  *(void *)uint64_t v25 = *(void *)v26;
  *((void *)v25 + 1) = v27;
  uint64_t v28 = a3[10];
  uint64_t v29 = a3[11];
  uint64_t v30 = &a1[v28];
  uint64_t v31 = &a2[v28];
  uint64_t v32 = *((void *)v31 + 1);
  *(void *)uint64_t v30 = *(void *)v31;
  *((void *)v30 + 1) = v32;
  char v33 = &a1[v29];
  uint64_t v34 = &a2[v29];
  uint64_t v35 = *((void *)v34 + 1);
  *(void *)char v33 = *(void *)v34;
  *((void *)v33 + 1) = v35;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for WorkoutPlanDetail(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_24F071520();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD78);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_24F071490();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v13, v14, v15);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD60);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_13:
  uint64_t v21 = a3[6];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  *(void *)uint64_t v22 = *(void *)v23;
  *((void *)v22 + 1) = *((void *)v23 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[7];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  uint64_t v27 = sub_24F0714D0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 24))(v25, v26, v27);
  a1[a3[8]] = a2[a3[8]];
  uint64_t v28 = a3[9];
  uint64_t v29 = &a1[v28];
  uint64_t v30 = &a2[v28];
  *(void *)uint64_t v29 = *(void *)v30;
  *((void *)v29 + 1) = *((void *)v30 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[10];
  uint64_t v32 = &a1[v31];
  char v33 = &a2[v31];
  *(void *)uint64_t v32 = *(void *)v33;
  *((void *)v32 + 1) = *((void *)v33 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v34 = a3[11];
  uint64_t v35 = &a1[v34];
  uint64_t v36 = &a2[v34];
  *(void *)uint64_t v35 = *(void *)v36;
  *((void *)v35 + 1) = *((void *)v36 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for WorkoutPlanDetail(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_24F071520();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD78);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_24F071490();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD60);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v15 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = sub_24F0714D0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  *(_OWORD *)&a1[v19] = *(_OWORD *)&a2[v19];
  uint64_t v20 = a3[11];
  *(_OWORD *)&a1[a3[10]] = *(_OWORD *)&a2[a3[10]];
  *(_OWORD *)&a1[v20] = *(_OWORD *)&a2[v20];
  return a1;
}

char *assignWithTake for WorkoutPlanDetail(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_24F071520();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD78);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_24F071490();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD60);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_13:
  uint64_t v21 = a3[6];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v25 = *(void *)v23;
  uint64_t v24 = *((void *)v23 + 1);
  *(void *)uint64_t v22 = v25;
  *((void *)v22 + 1) = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[7];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  uint64_t v29 = sub_24F0714D0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 40))(v27, v28, v29);
  uint64_t v30 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  uint64_t v34 = *(void *)v32;
  uint64_t v33 = *((void *)v32 + 1);
  *(void *)uint64_t v31 = v34;
  *((void *)v31 + 1) = v33;
  swift_bridgeObjectRelease();
  uint64_t v35 = a3[10];
  uint64_t v36 = &a1[v35];
  uint64_t v37 = &a2[v35];
  uint64_t v39 = *(void *)v37;
  uint64_t v38 = *((void *)v37 + 1);
  *(void *)uint64_t v36 = v39;
  *((void *)v36 + 1) = v38;
  swift_bridgeObjectRelease();
  uint64_t v40 = a3[11];
  uint64_t v41 = &a1[v40];
  uint64_t v42 = &a2[v40];
  uint64_t v44 = *(void *)v42;
  uint64_t v43 = *((void *)v42 + 1);
  *(void *)uint64_t v41 = v44;
  *((void *)v41 + 1) = v43;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutPlanDetail(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24F019D40);
}

uint64_t sub_24F019D40(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD78);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD60);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + a3[5];
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v14 = *(void *)(a1 + a3[6] + 8);
    if (v14 >= 0xFFFFFFFF) {
      LODWORD(v14) = -1;
    }
    return (v14 + 1);
  }
  else
  {
    uint64_t v15 = sub_24F0714D0();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[7];
    return v16(v18, a2, v17);
  }
}

uint64_t storeEnumTagSinglePayload for WorkoutPlanDetail(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24F019EE0);
}

uint64_t sub_24F019EE0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD78);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD60);
  uint64_t v14 = *(void *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v12 = a1 + a4[5];
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[6] + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v15 = sub_24F0714D0();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a4[7];
    return v16(v18, a2, a2, v17);
  }
  return result;
}

void sub_24F01A06C()
{
  sub_24F01A1C0(319, qword_26B1EBD80, MEMORY[0x263F3E0F0]);
  if (v0 <= 0x3F)
  {
    sub_24F01A1C0(319, &qword_26B1EBD68, MEMORY[0x263F06EA8]);
    if (v1 <= 0x3F)
    {
      sub_24F0714D0();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_24F01A1C0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_24F0721F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t getEnumTagSinglePayload for WorkoutPlanDetail.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for WorkoutPlanDetail.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F01A370);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutPlanDetail.CodingKeys()
{
  return &type metadata for WorkoutPlanDetail.CodingKeys;
}

unint64_t sub_24F01A3AC()
{
  unint64_t result = qword_2699A34A8;
  if (!qword_2699A34A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A34A8);
  }
  return result;
}

unint64_t sub_24F01A404()
{
  unint64_t result = qword_2699A34B0;
  if (!qword_2699A34B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A34B0);
  }
  return result;
}

unint64_t sub_24F01A45C()
{
  unint64_t result = qword_2699A34B8;
  if (!qword_2699A34B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A34B8);
  }
  return result;
}

uint64_t sub_24F01A4B0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000016 && a2 == 0x800000024F07AC50 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000024F07AC70 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F6974706163 && a2 == 0xE700000000000000 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024F07AC90 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000024F07ACB0 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v5 = sub_24F072400();
    swift_bridgeObjectRelease();
    if (v5) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_24F01A7DC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24F01A838(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24F01A880()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A34E0);
  sub_24F01C29C();
  return sub_24F071600();
}

uint64_t CompactLibraryView.init(store:canvasViewBuilder:pageCountViewBuilder:isTablet:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(void *)a8 = sub_24F006060;
  *(void *)(a8 + 8) = result;
  *(unsigned char *)(a8 + 16) = 0;
  *(void *)(a8 + 24) = a3;
  *(void *)(a8 + 32) = a4;
  *(void *)(a8 + 40) = a5;
  *(void *)(a8 + 48) = a6;
  *(unsigned char *)(a8 + 56) = a7;
  return result;
}

uint64_t sub_24F01A974()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t CompactLibraryView.body.getter@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  char v66 = a2;
  uint64_t v62 = sub_24F0718D0();
  uint64_t v63 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  uint64_t v52 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A2EF0);
  uint64_t v7 = a1[2];
  uint64_t v6 = a1[3];
  swift_getTupleTypeMetadata2();
  sub_24F071F60();
  swift_getWitnessTable();
  sub_24F071E80();
  sub_24F0716E0();
  swift_getTupleTypeMetadata2();
  sub_24F071F60();
  swift_getWitnessTable();
  sub_24F071EA0();
  swift_getWitnessTable();
  uint64_t v8 = sub_24F0715C0();
  uint64_t v51 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v49 - v9;
  uint64_t WitnessTable = swift_getWitnessTable();
  *(void *)&long long v78 = v8;
  *((void *)&v78 + 1) = WitnessTable;
  uint64_t v53 = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v55 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v14 = (char *)&v49 - v13;
  uint64_t v54 = v15;
  uint64_t v16 = sub_24F0716E0();
  uint64_t v60 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  char v56 = (char *)&v49 - v17;
  uint64_t v58 = v18;
  uint64_t v50 = sub_24F0716E0();
  uint64_t v61 = *(void *)(v50 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v50);
  uint64_t v57 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v59 = (uint64_t *)((char *)&v49 - v21);
  long long v22 = v3[1];
  long long v78 = *v3;
  long long v79 = v22;
  *(_OWORD *)uint64_t v80 = v3[2];
  *(_OWORD *)&v80[9] = *(long long *)((char *)v3 + 41);
  sub_24F0719C0();
  uint64_t v64 = v7;
  uint64_t v67 = v7;
  uint64_t v68 = v6;
  uint64_t v65 = v6;
  uint64_t v24 = a1[4];
  uint64_t v23 = a1[5];
  uint64_t v69 = v24;
  uint64_t v70 = v23;
  uint64_t v71 = &v78;
  sub_24F0070CC();
  uint64_t v25 = v52;
  sub_24F0718C0();
  unsigned __int8 v26 = sub_24F0719C0();
  sub_24F0719B0();
  sub_24F0719B0();
  if (sub_24F0719B0() != v26) {
    sub_24F0719B0();
  }
  uint64_t v27 = v14;
  uint64_t v28 = v53;
  sub_24F071C70();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v25, v62);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v10, v8);
  uint64_t v29 = swift_allocObject();
  uint64_t v30 = v64;
  uint64_t v31 = v65;
  *(void *)(v29 + 16) = v64;
  *(void *)(v29 + 24) = v31;
  *(void *)(v29 + 32) = v24;
  *(void *)(v29 + 40) = v23;
  long long v32 = v79;
  *(_OWORD *)(v29 + 48) = v78;
  *(_OWORD *)(v29 + 64) = v32;
  *(_OWORD *)(v29 + 80) = *(_OWORD *)v80;
  *(_OWORD *)(v29 + 89) = *(_OWORD *)&v80[9];
  sub_24F01BC50((uint64_t)&v78);
  uint64_t v76 = v8;
  uint64_t v77 = v28;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v34 = v23;
  uint64_t v35 = v24;
  uint64_t v36 = v56;
  uint64_t v37 = v54;
  sub_24F071CF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v27, v37);
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = v30;
  *(void *)(v38 + 24) = v31;
  *(void *)(v38 + 32) = v35;
  *(void *)(v38 + 40) = v34;
  long long v39 = v79;
  *(_OWORD *)(v38 + 48) = v78;
  *(_OWORD *)(v38 + 64) = v39;
  *(_OWORD *)(v38 + 80) = *(_OWORD *)v80;
  *(_OWORD *)(v38 + 89) = *(_OWORD *)&v80[9];
  sub_24F01BC50((uint64_t)&v78);
  uint64_t v40 = MEMORY[0x263F1A240];
  uint64_t v74 = OpaqueTypeConformance2;
  uint64_t v75 = MEMORY[0x263F1A240];
  uint64_t v41 = v58;
  uint64_t v42 = swift_getWitnessTable();
  uint64_t v43 = v57;
  sub_24F071BC0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v36, v41);
  uint64_t v72 = v42;
  uint64_t v73 = v40;
  uint64_t v44 = v50;
  uint64_t v45 = swift_getWitnessTable();
  uint64_t v46 = v59;
  sub_24F005EE8(v59, v43, v44, v45);
  char v47 = *(void (**)(char *, uint64_t))(v61 + 8);
  v47(v43, v44);
  sub_24F005EE8(v66, v46, v44, v45);
  return ((uint64_t (*)(void *, uint64_t))v47)(v46, v44);
}

uint64_t sub_24F01B168@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v20 = a5;
  uint64_t v21 = a6;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A2EF0);
  swift_getTupleTypeMetadata2();
  sub_24F071F60();
  swift_getWitnessTable();
  sub_24F071E80();
  sub_24F0716E0();
  swift_getTupleTypeMetadata2();
  sub_24F071F60();
  swift_getWitnessTable();
  uint64_t v10 = sub_24F071EA0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (uint64_t *)((char *)&v20 - v15);
  sub_24F071F20();
  uint64_t v22 = a2;
  uint64_t v23 = a3;
  uint64_t v24 = a4;
  uint64_t v25 = v20;
  uint64_t v26 = a1;
  sub_24F071E90();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24F005EE8(v16, v14, v10, WitnessTable);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v11 + 8);
  v18(v14, v10);
  sub_24F005EE8(v21, v16, v10, WitnessTable);
  return ((uint64_t (*)(void *, uint64_t))v18)(v16, v10);
}

uint64_t sub_24F01B3C4()
{
  return sub_24F01C328((uint64_t (*)(void, void, void, void, void))sub_24F01B168);
}

uint64_t sub_24F01B3DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v45 = a1;
  uint64_t v46 = a5;
  uint64_t v43 = a3;
  uint64_t v44 = a4;
  uint64_t v52 = a6;
  uint64_t v41 = a2;
  swift_getTupleTypeMetadata2();
  uint64_t v42 = sub_24F071F60();
  v40[1] = swift_getWitnessTable();
  uint64_t v6 = sub_24F071E80();
  uint64_t v47 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v40 - v7;
  uint64_t v9 = sub_24F0716E0();
  uint64_t v48 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v51 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v40 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v50 = (char *)v40 - v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A2EF0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v49 = (char *)v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)v40 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)v40 - v23;
  uint64_t v57 = 0;
  LOBYTE(v58) = 1;
  unsigned __int8 v25 = sub_24F0719C0();
  sub_24F0719B0();
  sub_24F0719B0();
  if (sub_24F0719B0() != v25) {
    sub_24F0719B0();
  }
  sub_24F071F30();
  sub_24F071C80();
  uint64_t v26 = *(uint64_t (**)(char *, char *, uint64_t))(v17 + 32);
  uint64_t v53 = v24;
  uint64_t v27 = v26(v24, v22, v16);
  MEMORY[0x270FA5388](v27);
  uint64_t v28 = v43;
  v40[-6] = v41;
  v40[-5] = v28;
  uint64_t v29 = v45;
  uint64_t v30 = v46;
  v40[-4] = v44;
  v40[-3] = v30;
  v40[-2] = v29;
  sub_24F071860();
  sub_24F071E70();
  sub_24F0719F0();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24F071CE0();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v8, v6);
  uint64_t v59 = WitnessTable;
  uint64_t v60 = MEMORY[0x263F18C10];
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v33 = v50;
  sub_24F005EE8(v50, v14, v9, v32);
  uint64_t v34 = v48;
  uint64_t v35 = *(void (**)(char *, uint64_t))(v48 + 8);
  v35(v14, v9);
  uint64_t v36 = v49;
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v49, v53, v16);
  uint64_t v57 = v36;
  uint64_t v37 = v51;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v51, v33, v9);
  uint64_t v58 = v37;
  v56[0] = v16;
  v56[1] = v9;
  uint64_t OpaqueTypeConformance2 = MEMORY[0x263F1B6B0];
  uint64_t v55 = MEMORY[0x263F1B698];
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v55 = v32;
  sub_24F03FE50((uint64_t)&v57, 2uLL, (uint64_t)v56);
  v35(v33, v9);
  uint64_t v38 = *(void (**)(char *, uint64_t))(v17 + 8);
  v38(v53, v16);
  v35(v37, v9);
  return ((uint64_t (*)(char *, uint64_t))v38)(v36, v16);
}

uint64_t sub_24F01B980@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v34 = a5;
  uint64_t v37 = a4;
  uint64_t v38 = a6;
  uint64_t v36 = *(void *)(a2 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](a1);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v32 - v14;
  uint64_t v33 = (char *)&v32 - v14;
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v13);
  uint64_t v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v23 = (uint64_t *)((char *)&v32 - v22);
  long long v39 = (char *)&v32 - v22;
  (*(void (**)(void))(v21 + 40))();
  sub_24F005EE8(v23, v20, a3, a5);
  uint64_t v35 = *(uint64_t (**)(char *, uint64_t))(v17 + 8);
  uint64_t v24 = v35(v20, a3);
  (*(void (**)(uint64_t))(a1 + 24))(v24);
  unsigned __int8 v25 = v15;
  uint64_t v26 = v37;
  sub_24F005EE8(v25, v12, a2, v37);
  uint64_t v27 = v36;
  uint64_t v28 = *(void (**)(char *, uint64_t))(v36 + 8);
  v28(v12, a2);
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v20, v39, a3);
  v43[0] = v20;
  uint64_t v29 = v33;
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v12, v33, a2);
  v43[1] = v12;
  v42[0] = a3;
  v42[1] = a2;
  uint64_t v40 = v34;
  uint64_t v41 = v26;
  sub_24F03FE50((uint64_t)v43, 2uLL, (uint64_t)v42);
  v28(v29, a2);
  uint64_t v30 = v35;
  v35(v39, a3);
  v28(v12, a2);
  return v30(v20, a3);
}

uint64_t sub_24F01BC48()
{
  return sub_24F01BD78();
}

uint64_t sub_24F01BC50(uint64_t a1)
{
  return a1;
}

uint64_t sub_24F01BCA4()
{
  return swift_release();
}

uint64_t objectdestroy_2Tm()
{
  sub_24F007284();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 105, 7);
}

uint64_t sub_24F01BD70()
{
  return sub_24F01BD78();
}

uint64_t sub_24F01BD78()
{
  return sub_24F01BCA4();
}

uint64_t sub_24F01BDA0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24F01BDE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 48);
}

uint64_t sub_24F01BDF0()
{
  sub_24F007284();
  swift_release();
  return swift_release();
}

uint64_t sub_24F01BE3C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_24F0072D8();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = a2[3];
  uint64_t v7 = a2[6];
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
  *(void *)(a1 + 48) = v7;
  *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_24F01BEC4(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_24F0072D8();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  sub_24F007284();
  uint64_t v7 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v7;
  swift_retain();
  swift_release();
  uint64_t v8 = a2[6];
  *(void *)(a1 + 40) = a2[5];
  *(void *)(a1 + 48) = v8;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_24F01BF7C(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  sub_24F007284();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t sub_24F01BFEC(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 57)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_24F01C034(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for CompactLibraryView()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24F01C09C()
{
  return swift_getWitnessTable();
}

unint64_t sub_24F01C29C()
{
  unint64_t result = qword_2699A34E8;
  if (!qword_2699A34E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A34E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A34E8);
  }
  return result;
}

uint64_t sub_24F01C2F8()
{
  return sub_24F01C328((uint64_t (*)(void, void, void, void, void))sub_24F01B3DC);
}

uint64_t sub_24F01C310()
{
  return sub_24F01C328((uint64_t (*)(void, void, void, void, void))sub_24F01B980);
}

uint64_t sub_24F01C328(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[6], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t LibraryRemoteParticipant.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

FitnessLibrary::LibraryRemoteParticipant __swiftcall LibraryRemoteParticipant.init(name:)(FitnessLibrary::LibraryRemoteParticipant name)
{
  *uint64_t v1 = name;
  return name;
}

uint64_t sub_24F01C378()
{
  return 1701667182;
}

uint64_t sub_24F01C388@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24F072400();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24F01C410(uint64_t a1)
{
  unint64_t v2 = sub_24F01C5C0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F01C44C(uint64_t a1)
{
  unint64_t v2 = sub_24F01C5C0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t LibraryRemoteParticipant.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A34F0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24F01C5C0();
  sub_24F072480();
  sub_24F0723A0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_24F01C5C0()
{
  unint64_t result = qword_2699A34F8;
  if (!qword_2699A34F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A34F8);
  }
  return result;
}

uint64_t LibraryRemoteParticipant.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3500);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24F01C5C0();
  sub_24F072470();
  if (!v2)
  {
    uint64_t v9 = sub_24F072320();
    uint64_t v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_24F01C784@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return LibraryRemoteParticipant.init(from:)(a1, a2);
}

uint64_t sub_24F01C79C(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A34F0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24F01C5C0();
  sub_24F072480();
  sub_24F0723A0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t LibraryRemoteParticipant.hash(into:)()
{
  if (!*(void *)(v0 + 8)) {
    return sub_24F072450();
  }
  sub_24F072450();
  swift_bridgeObjectRetain();
  sub_24F072080();
  return swift_bridgeObjectRelease();
}

uint64_t static LibraryRemoteParticipant.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a2[1];
  if (v3)
  {
    if (v4)
    {
      BOOL v5 = *a1 == *a2 && v3 == v4;
      if (v5 || (sub_24F072400() & 1) != 0) {
        return 1;
      }
    }
  }
  else if (!v4)
  {
    return 1;
  }
  return 0;
}

uint64_t LibraryRemoteParticipant.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_24F072430();
  sub_24F072450();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_24F072080();
    swift_bridgeObjectRelease();
  }
  return sub_24F072460();
}

uint64_t sub_24F01CA38()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_24F072430();
  sub_24F072450();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_24F072080();
    swift_bridgeObjectRelease();
  }
  return sub_24F072460();
}

uint64_t sub_24F01CAB8()
{
  if (!*(void *)(v0 + 8)) {
    return sub_24F072450();
  }
  sub_24F072450();
  swift_bridgeObjectRetain();
  sub_24F072080();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F01CB40()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_24F072430();
  sub_24F072450();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_24F072080();
    swift_bridgeObjectRelease();
  }
  return sub_24F072460();
}

unint64_t sub_24F01CBC0()
{
  unint64_t result = qword_2699A3508;
  if (!qword_2699A3508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3508);
  }
  return result;
}

uint64_t sub_24F01CC14(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a2[1];
  if (v3)
  {
    if (v4)
    {
      BOOL v5 = *a1 == *a2 && v3 == v4;
      if (v5 || (sub_24F072400() & 1) != 0) {
        return 1;
      }
    }
  }
  else if (!v4)
  {
    return 1;
  }
  return 0;
}

void *initializeBufferWithCopyOfBuffer for OfflineCanvasItemPlaceholder(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for OfflineCanvasItemPlaceholder()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for OfflineCanvasItemPlaceholder(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for OfflineCanvasItemPlaceholder(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryRemoteParticipant(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LibraryRemoteParticipant(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryRemoteParticipant()
{
  return &type metadata for LibraryRemoteParticipant;
}

unsigned char *storeEnumTagSinglePayload for LibraryRemoteParticipant.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24F01CE78);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryRemoteParticipant.CodingKeys()
{
  return &type metadata for LibraryRemoteParticipant.CodingKeys;
}

unint64_t sub_24F01CEB4()
{
  unint64_t result = qword_2699A3510;
  if (!qword_2699A3510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3510);
  }
  return result;
}

unint64_t sub_24F01CF0C()
{
  unint64_t result = qword_2699A3518;
  if (!qword_2699A3518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3518);
  }
  return result;
}

unint64_t sub_24F01CF64()
{
  unint64_t result = qword_2699A3520;
  if (!qword_2699A3520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3520);
  }
  return result;
}

unint64_t LibraryCanvasPlaceholderReferenceType.rawValue.getter(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6D6172676F7270;
      break;
    case 2:
      unint64_t result = 0x6B63617473;
      break;
    case 3:
      unint64_t result = 0x74756F6B726F77;
      break;
    case 4:
      unint64_t result = 0x5074756F6B726F77;
      break;
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24F01D094(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = LibraryCanvasPlaceholderReferenceType.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == LibraryCanvasPlaceholderReferenceType.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_24F072400();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_24F01D120@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s14FitnessLibrary0B30CanvasPlaceholderReferenceTypeO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

unint64_t sub_24F01D150@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = LibraryCanvasPlaceholderReferenceType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_24F01D17C()
{
  return sub_24F0720D0();
}

uint64_t sub_24F01D1DC()
{
  return sub_24F0720C0();
}

uint64_t sub_24F01D22C()
{
  char v1 = *v0;
  sub_24F072430();
  LibraryCanvasPlaceholderReferenceType.rawValue.getter(v1);
  sub_24F072080();
  swift_bridgeObjectRelease();
  return sub_24F072460();
}

uint64_t sub_24F01D290()
{
  LibraryCanvasPlaceholderReferenceType.rawValue.getter(*v0);
  sub_24F072080();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F01D2E4()
{
  char v1 = *v0;
  sub_24F072430();
  LibraryCanvasPlaceholderReferenceType.rawValue.getter(v1);
  sub_24F072080();
  swift_bridgeObjectRelease();
  return sub_24F072460();
}

uint64_t _s14FitnessLibrary0B30CanvasPlaceholderReferenceTypeO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_24F0722E0();
  swift_bridgeObjectRelease();
  if (v0 >= 6) {
    return 6;
  }
  else {
    return v0;
  }
}

unint64_t sub_24F01D394()
{
  unint64_t result = qword_2699A3528;
  if (!qword_2699A3528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3528);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LibraryCanvasPlaceholderReferenceType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F01D4B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryCanvasPlaceholderReferenceType()
{
  return &type metadata for LibraryCanvasPlaceholderReferenceType;
}

unint64_t sub_24F01D4EC()
{
  unint64_t result = qword_2699A3530;
  if (!qword_2699A3530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3530);
  }
  return result;
}

BOOL sub_24F01D540(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_24F01D550()
{
  return sub_24F072440();
}

uint64_t sub_24F01D578()
{
  return sub_24F072460();
}

uint64_t sub_24F01D5C0(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  type metadata accessor for ActivePlanBannerView.FocusedButton();
  sub_24F0721F0();
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_24F0715B0();
  sub_24F071590();
  return v2;
}

BOOL sub_24F01D698(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_24F01D540(*a1, *a2);
}

uint64_t sub_24F01D6B4()
{
  return sub_24F01D578();
}

uint64_t sub_24F01D6CC()
{
  return sub_24F01D550();
}

uint64_t sub_24F01D6E4()
{
  return sub_24F072460();
}

uint64_t ActivePlanBannerView.init(artworkViewBuilder:primaryActionButtonView:secondaryActionButtonView:planDetail:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v37 = a6;
  uint64_t v38 = a7;
  uint64_t v35 = a4;
  uint64_t v36 = a5;
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  uint64_t v32 = a1;
  uint64_t v30 = sub_24F071D30();
  uint64_t v16 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = a8;
  uint64_t v40 = a10;
  uint64_t v41 = a11;
  uint64_t v42 = a12;
  uint64_t v43 = a13;
  uint64_t v44 = a14;
  uint64_t active = type metadata accessor for ActivePlanBannerView();
  uint64_t v19 = a9 + *(int *)(active + 84);
  uint64_t v39 = a8;
  uint64_t v40 = a10;
  uint64_t v41 = a11;
  uint64_t v42 = a12;
  uint64_t v43 = a13;
  uint64_t v44 = a14;
  type metadata accessor for ActivePlanBannerView.FocusedButton();
  swift_getWitnessTable();
  sub_24F0715A0();
  uint64_t v20 = v40;
  char v21 = v41;
  *(unsigned char *)uint64_t v19 = v39;
  *(void *)(v19 + 8) = v20;
  *(unsigned char *)(v19 + 16) = v21;
  (*(void (**)(char *, void, uint64_t))(v16 + 104))(v18, *MEMORY[0x263F1B388], v30);
  uint64_t v22 = MEMORY[0x253352850](v18, 0.650980392, 1.0, 0.0, 1.0);
  *(_OWORD *)(a9 + 16) = xmmword_24F074EB0;
  *(int64x2_t *)(a9 + 32) = vdupq_n_s64(1uLL);
  *(void *)(a9 + 48) = 2;
  *(_OWORD *)(a9 + 56) = xmmword_24F074EC0;
  *(_OWORD *)(a9 + 72) = xmmword_24F074EC0;
  *(void *)(a9 + 88) = v22;
  *(void *)(a9 + 96) = 0x403E000000000000;
  uint64_t v23 = active;
  uint64_t v24 = v33;
  *(void *)a9 = v32;
  *(void *)(a9 + 8) = v24;
  uint64_t v25 = v35;
  *(void *)(a9 + 104) = v34;
  *(void *)(a9 + 112) = v25;
  uint64_t v26 = (void *)(a9 + *(int *)(v23 + 80));
  uint64_t v28 = v37;
  uint64_t v27 = v38;
  *uint64_t v26 = v36;
  v26[1] = v28;
  return sub_24F01D974(v27, a9 + *(int *)(v23 + 76));
}

uint64_t type metadata accessor for ActivePlanBannerView()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for ActivePlanBannerView.FocusedButton()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24F01D974(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WorkoutPlanDetail();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ActivePlanBannerView.body.getter@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v73 = a2;
  uint64_t v4 = *(void *)(a1[2] - 8);
  uint64_t v70 = v2;
  uint64_t v71 = v4;
  MEMORY[0x270FA5388](a1);
  uint64_t v69 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v6;
  uint64_t v65 = v6;
  uint64_t v8 = sub_24F0716E0();
  uint64_t v72 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v68 = (char *)&v52 - v9;
  uint64_t v100 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A3538);
  uint64_t v101 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A3540);
  uint64_t v102 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A3548);
  uint64_t v103 = MEMORY[0x263F1B6B0];
  uint64_t v67 = a1[3];
  uint64_t v10 = v67;
  uint64_t v11 = sub_24F0721F0();
  uint64_t v13 = a1[4];
  uint64_t v12 = a1[5];
  uint64_t v63 = a1;
  uint64_t v64 = v12;
  uint64_t v14 = a1[6];
  uint64_t v15 = a1[7];
  uint64_t v94 = v7;
  uint64_t v95 = v10;
  uint64_t v96 = v13;
  uint64_t v97 = v12;
  uint64_t v61 = v15;
  uint64_t v62 = v13;
  uint64_t v98 = v14;
  uint64_t v99 = v15;
  uint64_t v16 = v14;
  uint64_t v66 = v14;
  uint64_t v17 = v15;
  type metadata accessor for ActivePlanBannerView.FocusedButton();
  uint64_t v18 = sub_24F0721F0();
  uint64_t v93 = v16;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v92 = swift_getWitnessTable();
  uint64_t v20 = swift_getWitnessTable();
  uint64_t v94 = v11;
  uint64_t v95 = v18;
  uint64_t v96 = WitnessTable;
  uint64_t v97 = v20;
  swift_getOpaqueTypeMetadata2();
  uint64_t v21 = sub_24F0721F0();
  uint64_t v91 = v17;
  uint64_t v22 = swift_getWitnessTable();
  uint64_t v94 = v21;
  uint64_t v95 = v18;
  uint64_t v96 = v22;
  uint64_t v97 = v20;
  swift_getOpaqueTypeMetadata2();
  swift_getTupleTypeMetadata2();
  sub_24F071F60();
  sub_24F0718B0();
  uint64_t v23 = swift_getWitnessTable();
  uint64_t v94 = v21;
  uint64_t v95 = v18;
  uint64_t v96 = v22;
  uint64_t v97 = v20;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v89 = v23;
  uint64_t v90 = OpaqueTypeConformance2;
  swift_getWitnessTable();
  uint64_t v25 = sub_24F071E80();
  uint64_t v26 = swift_getWitnessTable();
  uint64_t v94 = v25;
  uint64_t v95 = v18;
  uint64_t v96 = v26;
  uint64_t v97 = v20;
  swift_getOpaqueTypeMetadata2();
  uint64_t v104 = sub_24F0716E0();
  swift_getTupleTypeMetadata();
  sub_24F071F60();
  swift_getWitnessTable();
  sub_24F071E80();
  uint64_t v27 = sub_24F0716E0();
  uint64_t v87 = swift_getWitnessTable();
  uint64_t v88 = MEMORY[0x263F18C10];
  uint64_t v56 = v27;
  uint64_t v55 = swift_getWitnessTable();
  uint64_t v58 = sub_24F071750();
  uint64_t v54 = sub_24F0716E0();
  uint64_t v59 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  uint64_t v52 = (char *)&v52 - v28;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A3550);
  uint64_t v29 = sub_24F0716E0();
  uint64_t v60 = *(void *)(v29 - 8);
  uint64_t v30 = MEMORY[0x270FA5388](v29);
  uint64_t v53 = (char *)&v52 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  uint64_t v57 = (char **)((char *)&v52 - v32);
  uint64_t v33 = v70;
  uint64_t v34 = *(void (**)(char *, char *))v70;
  uint64_t v35 = &v70[*((int *)v63 + 19)];
  uint64_t v36 = type metadata accessor for WorkoutPlanDetail();
  uint64_t v37 = v69;
  v34(v35, &v35[*(int *)(v36 + 20)]);
  uint64_t v38 = v68;
  uint64_t v40 = v64;
  uint64_t v39 = v65;
  sub_24F071BA0();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v37, v39);
  sub_24F071F40();
  uint64_t v74 = v39;
  uint64_t v75 = v67;
  uint64_t v76 = v62;
  uint64_t v77 = v40;
  uint64_t v78 = v66;
  uint64_t v79 = v61;
  uint64_t v80 = v33;
  uint64_t v85 = v40;
  uint64_t v86 = MEMORY[0x263F198F8];
  uint64_t v41 = swift_getWitnessTable();
  uint64_t v42 = v52;
  sub_24F071CC0();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v38, v8);
  uint64_t v43 = swift_getWitnessTable();
  uint64_t v83 = v41;
  uint64_t v84 = v43;
  uint64_t v44 = v54;
  uint64_t v45 = swift_getWitnessTable();
  uint64_t v46 = v53;
  sub_24F071BD0();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v42, v44);
  uint64_t v47 = sub_24F007760(qword_2699A3558, &qword_2699A3550);
  uint64_t v81 = v45;
  uint64_t v82 = v47;
  uint64_t v48 = swift_getWitnessTable();
  uint64_t v49 = v57;
  sub_24F005EE8(v57, v46, v29, v48);
  uint64_t v50 = *(void (**)(char *, uint64_t))(v60 + 8);
  v50(v46, v29);
  sub_24F005EE8(v73, v49, v29, v48);
  return ((uint64_t (*)(void *, uint64_t))v50)(v49, v29);
}

uint64_t sub_24F01E1F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  uint64_t v33 = a6;
  uint64_t v36 = a5;
  uint64_t v35 = a3;
  uint64_t v34 = a2;
  uint64_t v37 = a1;
  uint64_t v38 = a8;
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A3538);
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A3540);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A3548);
  uint64_t v62 = MEMORY[0x263F1B6B0];
  sub_24F0721F0();
  uint64_t v32 = a4;
  uint64_t v57 = a6;
  uint64_t v58 = a7;
  uint64_t v11 = a7;
  uint64_t v31 = a7;
  type metadata accessor for ActivePlanBannerView.FocusedButton();
  uint64_t v12 = sub_24F0721F0();
  uint64_t v52 = a6;
  swift_getWitnessTable();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v13 = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  sub_24F0721F0();
  uint64_t v50 = v11;
  swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  swift_getTupleTypeMetadata2();
  sub_24F071F60();
  sub_24F0718B0();
  uint64_t v48 = swift_getWitnessTable();
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  swift_getWitnessTable();
  uint64_t v14 = sub_24F071E80();
  v30[1] = MEMORY[0x263F1B6E0];
  uint64_t v53 = v14;
  uint64_t v54 = v12;
  uint64_t v55 = swift_getWitnessTable();
  uint64_t v56 = v13;
  swift_getOpaqueTypeMetadata2();
  uint64_t v63 = sub_24F0716E0();
  swift_getTupleTypeMetadata();
  sub_24F071F60();
  swift_getWitnessTable();
  uint64_t v15 = sub_24F071E80();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v30 - v17;
  uint64_t v19 = sub_24F0716E0();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)v30 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (void *)((char *)v30 - v24);
  sub_24F071870();
  uint64_t v39 = v34;
  uint64_t v40 = v35;
  uint64_t v41 = v32;
  uint64_t v42 = v36;
  uint64_t v43 = v33;
  uint64_t v44 = v31;
  uint64_t v45 = v37;
  sub_24F071E70();
  uint64_t v26 = swift_getWitnessTable();
  sub_24F071CD0();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  uint64_t v46 = v26;
  uint64_t v47 = MEMORY[0x263F18C10];
  uint64_t v27 = swift_getWitnessTable();
  sub_24F005EE8(v25, v23, v19, v27);
  uint64_t v28 = *(void (**)(char *, uint64_t))(v20 + 8);
  v28(v23, v19);
  sub_24F005EE8(v38, v25, v19, v27);
  return ((uint64_t (*)(void *, uint64_t))v28)(v25, v19);
}

uint64_t sub_24F01E800()
{
  return sub_24F022264((uint64_t (*)(void, void, void, void, void, void, void))sub_24F01E1F4);
}

uint64_t sub_24F01E818@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v130 = a6;
  uint64_t v132 = a5;
  uint64_t v133 = a3;
  v134 = (void (*)(void, void))a2;
  v120 = a1;
  uint64_t v112 = a8;
  uint64_t v14 = sub_24F071980();
  uint64_t v110 = *(void *)(v14 - 8);
  uint64_t v111 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v109 = &v90[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_24F0721F0();
  v179 = (void (*)(void, void))a2;
  uint64_t v180 = a3;
  uint64_t v181 = a4;
  uint64_t v182 = a5;
  uint64_t v183 = a6;
  uint64_t v184 = a7;
  uint64_t v129 = a7;
  type metadata accessor for ActivePlanBannerView.FocusedButton();
  uint64_t v17 = sub_24F0721F0();
  v189[11] = a6;
  uint64_t WitnessTable = swift_getWitnessTable();
  v189[10] = swift_getWitnessTable();
  uint64_t v19 = swift_getWitnessTable();
  v179 = (void (*)(void, void))v16;
  uint64_t v180 = v17;
  uint64_t v181 = WitnessTable;
  uint64_t v182 = v19;
  uint64_t v20 = v19;
  swift_getOpaqueTypeMetadata2();
  uint64_t v93 = a4;
  uint64_t v21 = sub_24F0721F0();
  v189[9] = a7;
  uint64_t v22 = swift_getWitnessTable();
  v179 = (void (*)(void, void))v21;
  uint64_t v180 = v17;
  uint64_t v181 = v22;
  uint64_t v182 = v20;
  uint64_t v23 = v20;
  swift_getOpaqueTypeMetadata2();
  swift_getTupleTypeMetadata2();
  sub_24F071F60();
  uint64_t v24 = sub_24F0718B0();
  uint64_t v25 = swift_getWitnessTable();
  v179 = (void (*)(void, void))v21;
  uint64_t v99 = v17;
  uint64_t v180 = v17;
  uint64_t v181 = v22;
  uint64_t v103 = v23;
  uint64_t v182 = v23;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v189[7] = v25;
  v189[8] = OpaqueTypeConformance2;
  uint64_t v101 = v24;
  uint64_t v100 = swift_getWitnessTable();
  uint64_t v27 = sub_24F071E80();
  uint64_t v104 = v27;
  uint64_t v108 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v98 = &v90[-v28];
  uint64_t v102 = swift_getWitnessTable();
  v179 = (void (*)(void, void))v27;
  uint64_t v180 = v17;
  uint64_t v181 = v102;
  uint64_t v182 = v23;
  uint64_t v106 = MEMORY[0x263F1AA00];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v107 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v96 = &v90[-v29];
  uint64_t v128 = sub_24F0716E0();
  uint64_t v131 = *(void *)(v128 - 8);
  uint64_t v30 = MEMORY[0x270FA5388](v128);
  v144 = &v90[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v30);
  char v127 = &v90[-v32];
  uint64_t v33 = sub_24F071AA0();
  uint64_t v34 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v36 = &v90[-((v35 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v179 = v134;
  uint64_t v180 = v133;
  uint64_t v181 = a4;
  uint64_t v182 = v132;
  uint64_t v183 = v130;
  uint64_t v184 = v129;
  uint64_t active = type metadata accessor for ActivePlanBannerView();
  uint64_t v37 = v120;
  uint64_t v38 = (uint64_t)v120 + *(int *)(active + 76);
  uint64_t v39 = type metadata accessor for WorkoutPlanDetail();
  uint64_t v117 = v38;
  uint64_t v118 = v39;
  uint64_t v40 = (uint64_t *)(v38 + *(int *)(v39 + 24));
  uint64_t v41 = v38;
  uint64_t v42 = v40[1];
  v179 = (void (*)(void, void))*v40;
  uint64_t v180 = v42;
  unint64_t v135 = sub_24F0221E8();
  swift_bridgeObjectRetain();
  uint64_t v43 = sub_24F071B00();
  uint64_t v124 = v44;
  char v125 = (void (*)(void, void))v43;
  uint64_t v126 = v45;
  int v123 = v46 & 1;
  uint64_t v97 = v37[6];
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v121 = v37[11];
  swift_retain();
  sub_24F071AB0();
  sub_24F071A70();
  sub_24F071A90();
  swift_release();
  uint64_t v47 = *MEMORY[0x263F1A680];
  v114 = *(void (**)(unsigned char *))(v34 + 104);
  uint64_t v48 = v47;
  v114(v36);
  uint64_t v137 = sub_24F071AC0();
  swift_release();
  v113 = *(void (**)(unsigned char *, uint64_t))(v34 + 8);
  v113(v36, v33);
  uint64_t v119 = swift_getKeyPath();
  uint64_t v49 = (uint64_t *)(v41 + *(int *)(v118 + 44));
  uint64_t v50 = v49[1];
  v179 = (void (*)(void, void))*v49;
  uint64_t v180 = v50;
  swift_bridgeObjectRetain();
  uint64_t v51 = sub_24F071B00();
  uint64_t v140 = v52;
  uint64_t v141 = v51;
  uint64_t v143 = v53;
  int v139 = v54 & 1;
  uint64_t v95 = v37[4];
  uint64_t v142 = swift_getKeyPath();
  sub_24F071A80();
  sub_24F071A50();
  sub_24F071A90();
  swift_release();
  uint64_t v55 = v48;
  uint64_t v56 = v48;
  uint64_t v57 = (void (*)(unsigned char *, uint64_t, uint64_t))v114;
  ((void (*)(unsigned char *, uint64_t, uint64_t))v114)(v36, v56, v33);
  uint64_t v138 = sub_24F071AC0();
  swift_release();
  uint64_t v58 = v113;
  v113(v36, v33);
  uint64_t v136 = swift_getKeyPath();
  uint64_t v59 = (uint64_t *)(v117 + *(int *)(v118 + 40));
  uint64_t v60 = v59[1];
  v179 = (void (*)(void, void))*v59;
  uint64_t v180 = v60;
  swift_bridgeObjectRetain();
  uint64_t v61 = sub_24F071B00();
  uint64_t v116 = v62;
  uint64_t v117 = v61;
  unint64_t v135 = v63;
  int v115 = v64 & 1;
  uint64_t v65 = v120;
  uint64_t v92 = v120[5];
  uint64_t v118 = swift_getKeyPath();
  sub_24F071AD0();
  v57(v36, v55, v33);
  v114 = (void (*)(unsigned char *))sub_24F071AC0();
  swift_release();
  v58(v36, v33);
  v113 = (void (*)(unsigned char *, uint64_t))swift_getKeyPath();
  int v91 = sub_24F071900();
  v145 = v134;
  uint64_t v146 = v133;
  uint64_t v147 = v93;
  uint64_t v148 = v132;
  uint64_t v149 = v130;
  uint64_t v150 = v129;
  v151 = v65;
  sub_24F071860();
  uint64_t v66 = v98;
  sub_24F071E70();
  v179 = (void (*)(void, void))sub_24F01D5C0(active);
  uint64_t v180 = v67;
  LOBYTE(v181) = v68;
  LOBYTE(v160) = 0;
  uint64_t v69 = v109;
  sub_24F071970();
  uint64_t v70 = swift_checkMetadataState();
  uint64_t v71 = v96;
  uint64_t v72 = v103;
  uint64_t v73 = v104;
  uint64_t v74 = v102;
  MEMORY[0x2533526A0](&v179, &v160, v69, v104, v70, v102, v103);
  (*(void (**)(unsigned char *, uint64_t))(v110 + 8))(v69, v111);
  swift_release();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v108 + 8))(v66, v73);
  sub_24F071F30();
  v179 = (void (*)(void, void))v73;
  uint64_t v180 = v70;
  uint64_t v181 = v74;
  uint64_t v182 = v72;
  uint64_t v75 = swift_getOpaqueTypeConformance2();
  uint64_t v76 = v144;
  uint64_t v77 = OpaqueTypeMetadata2;
  sub_24F071C90();
  (*(void (**)(unsigned char *, uint64_t))(v107 + 8))(v71, v77);
  v189[5] = v75;
  v189[6] = MEMORY[0x263F18860];
  uint64_t v78 = v128;
  uint64_t v132 = swift_getWitnessTable();
  uint64_t v79 = v127;
  sub_24F005EE8(v127, v76, v78, v132);
  uint64_t v80 = *(void (**)(void, void))(v131 + 8);
  uint64_t v133 = v131 + 8;
  v134 = v80;
  v80(v76, v78);
  uint64_t v81 = v124;
  uint64_t v82 = (uint64_t)v125;
  v179 = v125;
  uint64_t v180 = v124;
  LOBYTE(v17) = v123;
  LOBYTE(v181) = v123;
  uint64_t v182 = v126;
  uint64_t v183 = KeyPath;
  uint64_t v184 = v97;
  char v185 = 0;
  uint64_t v186 = v121;
  uint64_t v187 = v119;
  uint64_t v188 = v137;
  uint64_t v170 = v141;
  uint64_t v171 = v140;
  char v172 = v139;
  uint64_t v173 = v143;
  uint64_t v174 = v142;
  uint64_t v175 = v95;
  char v176 = 0;
  uint64_t v177 = v136;
  uint64_t v178 = v138;
  v189[0] = &v179;
  v189[1] = &v170;
  uint64_t v160 = v117;
  uint64_t v161 = v116;
  char v162 = v115;
  unint64_t v163 = v135;
  uint64_t v164 = v118;
  uint64_t v165 = v92;
  char v166 = 0;
  v167 = (void (*)(void, void))v113;
  v168 = (void (*)(void))v114;
  int v169 = v91;
  uint64_t v158 = 0;
  char v159 = 1;
  v189[2] = &v160;
  v189[3] = &v158;
  uint64_t v83 = v144;
  uint64_t v84 = v79;
  uint64_t v85 = v128;
  (*(void (**)(unsigned char *, void *, uint64_t))(v131 + 16))(v144, v84, v128);
  v189[4] = v83;
  sub_24F022280(v82, v81, v17);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_24F022280(v141, v140, v139);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v87 = v116;
  uint64_t v86 = v117;
  LOBYTE(v82) = v115;
  sub_24F022280(v117, v116, v115);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  v157[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3538);
  v157[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3540);
  v157[2] = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3548);
  v157[3] = MEMORY[0x263F1B6B0];
  v157[4] = v85;
  uint64_t v152 = sub_24F0223D0(&qword_2699A3668, &qword_2699A3538, (void (*)(void))sub_24F022290);
  uint64_t v153 = sub_24F0223D0(&qword_2699A36C0, &qword_2699A3540, (void (*)(void))sub_24F022330);
  unint64_t v154 = sub_24F022474();
  uint64_t v155 = MEMORY[0x263F1B698];
  uint64_t v156 = v132;
  sub_24F03FE50((uint64_t)v189, 5uLL, (uint64_t)v157);
  uint64_t v88 = (void (*)(unsigned char *, uint64_t))v134;
  v134(v127, v85);
  sub_24F022538(v86, v87, v82);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_24F022538(v141, v140, v139);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_24F022538((uint64_t)v125, v124, v123);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v88(v144, v85);
  sub_24F022538(v160, v161, v162);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_24F022538(v170, v171, v172);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_24F022538((uint64_t)v179, v180, v181);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_24F01F690@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, void (*a6)(void, void)@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  uint64_t v102 = a5;
  uint64_t v101 = a2;
  uint64_t v113 = a1;
  uint64_t v112 = a8;
  sub_24F0721F0();
  uint64_t v100 = a6;
  char v127 = a6;
  uint64_t v128 = a7;
  type metadata accessor for ActivePlanBannerView.FocusedButton();
  uint64_t v12 = sub_24F0721F0();
  v122[6] = a6;
  uint64_t WitnessTable = swift_getWitnessTable();
  v122[5] = swift_getWitnessTable();
  uint64_t v14 = swift_getWitnessTable();
  uint64_t v97 = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  v122[4] = a7;
  uint64_t v123 = sub_24F0721F0();
  uint64_t v124 = v12;
  uint64_t v119 = v12;
  uint64_t v116 = swift_getWitnessTable();
  uint64_t v117 = v14;
  uint64_t v125 = v116;
  uint64_t v126 = (void *)v14;
  uint64_t v16 = swift_getOpaqueTypeMetadata2();
  swift_getTupleTypeMetadata2();
  uint64_t v17 = sub_24F071F60();
  uint64_t v99 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v98 = (char *)&v92 - v18;
  uint64_t v118 = swift_checkMetadataState();
  uint64_t v104 = *(void *)(v118 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v118);
  uint64_t v103 = (char *)&v92 - v20;
  uint64_t v105 = *(void *)(v16 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v106 = (char *)&v92 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v108 = (char *)&v92 - v23;
  uint64_t v24 = v113;
  uint64_t v25 = swift_checkMetadataState();
  uint64_t OpaqueTypeConformance2 = *(void *)(v25 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v25);
  uint64_t v28 = (char *)&v92 - v27;
  uint64_t v115 = OpaqueTypeMetadata2;
  uint64_t v96 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v29 = MEMORY[0x270FA5388](v26);
  v114 = (char *)&v92 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v32 = (uint64_t *)((char *)&v92 - v31);
  uint64_t v111 = v17;
  uint64_t v110 = sub_24F0718B0();
  uint64_t v109 = *(void *)(v110 - 8);
  MEMORY[0x270FA5388](v110);
  uint64_t v107 = (char *)&v92 - v33;
  uint64_t v123 = v101;
  uint64_t v124 = a3;
  uint64_t v125 = a4;
  uint64_t v126 = v102;
  char v127 = v100;
  uint64_t v128 = a7;
  uint64_t active = type metadata accessor for ActivePlanBannerView();
  uint64_t v35 = v24 + *(int *)(active + 76);
  uint64_t v36 = (int *)type metadata accessor for WorkoutPlanDetail();
  uint64_t v37 = v36;
  if (*(unsigned char *)(v35 + v36[8]) == 1)
  {
    uint64_t v102 = v32;
    (*(void (**)(void, void))(v24 + 104))(*(void *)(v35 + v36[9]), *(void *)(v35 + v36[9] + 8));
    uint64_t v38 = sub_24F01D5C0(active);
    uint64_t v101 = v16;
    uint64_t v123 = v38;
    uint64_t v124 = v39;
    LOBYTE(v125) = v40;
    LOBYTE(v122[0]) = 0;
    uint64_t v41 = v28;
    uint64_t v42 = swift_checkMetadataState();
    uint64_t v93 = v42;
    uint64_t v43 = v97;
    uint64_t v44 = (void *)v117;
    sub_24F071CB0();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(OpaqueTypeConformance2 + 8))(v41, v25);
    uint64_t v123 = v25;
    uint64_t v124 = v42;
    uint64_t v125 = v43;
    uint64_t v126 = v44;
    uint64_t v94 = MEMORY[0x263F1B1D8];
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    char v46 = v114;
    uint64_t v45 = v115;
    sub_24F005EE8(v102, v114, v115, OpaqueTypeConformance2);
    uint64_t v47 = v96;
    uint64_t v48 = *(void (**)(void, void))(v96 + 8);
    uint64_t v97 = v96 + 8;
    uint64_t v100 = v48;
    v48(v46, v45);
    uint64_t v49 = v37[7];
    uint64_t v50 = v44;
    uint64_t v51 = v103;
    (*(void (**)(uint64_t))(v113 + *(int *)(active + 80)))(v35 + v49);
    uint64_t v123 = sub_24F01D5C0(active);
    uint64_t v124 = v52;
    LOBYTE(v125) = v53;
    LOBYTE(v122[0]) = 1;
    char v54 = v106;
    uint64_t v55 = v118;
    uint64_t v56 = v93;
    uint64_t v57 = v116;
    sub_24F071CB0();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v104 + 8))(v51, v55);
    uint64_t v123 = v55;
    uint64_t v124 = v56;
    uint64_t v125 = v57;
    uint64_t v126 = v50;
    uint64_t v58 = swift_getOpaqueTypeConformance2();
    uint64_t v59 = v108;
    uint64_t v60 = v101;
    sub_24F005EE8(v108, v54, v101, v58);
    uint64_t v61 = v105;
    uint64_t v62 = *(void (**)(char *, uint64_t))(v105 + 8);
    v62(v54, v60);
    char v64 = v114;
    uint64_t v63 = v115;
    (*(void (**)(char *, void *, uint64_t))(v47 + 16))(v114, v102, v115);
    uint64_t v123 = (uint64_t)v64;
    uint64_t v65 = v64;
    (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v54, v59, v60);
    uint64_t v124 = (uint64_t)v54;
    v122[0] = v63;
    v122[1] = v60;
    uint64_t v120 = OpaqueTypeConformance2;
    uint64_t v121 = v58;
    uint64_t v66 = (uint64_t)v98;
    sub_24F03FE50((uint64_t)&v123, 2uLL, (uint64_t)v122);
    v62(v54, v60);
    uint64_t v67 = v65;
    char v68 = (void (*)(void *, uint64_t))v100;
    v100(v67, v63);
    uint64_t v69 = v111;
    swift_getWitnessTable();
    uint64_t v70 = v107;
    sub_24F068E04(v66, v69);
    uint64_t v71 = v66;
    uint64_t v72 = (void *)v117;
    (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v71, v69);
    uint64_t v73 = v60;
    uint64_t v74 = v116;
    v62(v59, v73);
    v68(v102, v115);
  }
  else
  {
    uint64_t v75 = v103;
    (*(void (**)(uint64_t))(v24 + *(int *)(active + 80)))(v35 + v36[7]);
    uint64_t v123 = sub_24F01D5C0(active);
    uint64_t v124 = v76;
    LOBYTE(v125) = v77;
    LOBYTE(v122[0]) = 0;
    uint64_t v78 = swift_checkMetadataState();
    uint64_t v79 = v106;
    uint64_t v81 = (void *)v117;
    uint64_t v80 = v118;
    uint64_t v74 = v116;
    sub_24F071CB0();
    swift_release();
    swift_release();
    uint64_t v82 = v75;
    uint64_t v72 = v81;
    (*(void (**)(char *, uint64_t))(v104 + 8))(v82, v80);
    uint64_t v123 = v80;
    uint64_t v124 = v78;
    uint64_t v125 = v74;
    uint64_t v126 = v81;
    uint64_t v83 = swift_getOpaqueTypeConformance2();
    uint64_t v84 = v108;
    sub_24F005EE8(v108, v79, v16, v83);
    uint64_t v85 = *(void (**)(void *, uint64_t))(v105 + 8);
    v85(v79, v16);
    sub_24F005EE8(v79, v84, v16, v83);
    uint64_t v86 = v111;
    swift_getWitnessTable();
    uint64_t v70 = v107;
    sub_24F068EFC((uint64_t)v79, v86, v16);
    v85(v79, v16);
    v85(v84, v16);
  }
  uint64_t v87 = swift_getWitnessTable();
  uint64_t v123 = v118;
  uint64_t v124 = v119;
  uint64_t v125 = v74;
  uint64_t v126 = v72;
  uint64_t v88 = swift_getOpaqueTypeConformance2();
  v122[2] = v87;
  v122[3] = v88;
  uint64_t v89 = v110;
  uint64_t v90 = swift_getWitnessTable();
  sub_24F005EE8(v112, v70, v89, v90);
  return (*(uint64_t (**)(char *, uint64_t))(v109 + 8))(v70, v89);
}

uint64_t sub_24F020238()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24F020288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 72);
}

uint64_t sub_24F020290()
{
  uint64_t result = type metadata accessor for WorkoutPlanDetail();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24F020344(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *(void *)a1 = v5;
    uint64_t v3 = v5 + ((v4 + 16) & ~(unint64_t)v4);
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v7;
    long long v8 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + 32) = v8;
    *(void *)(a1 + 48) = a2[6];
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
    uint64_t v9 = a2[12];
    *(void *)(a1 + 88) = a2[11];
    *(void *)(a1 + 96) = v9;
    uint64_t v10 = a2[14];
    uint64_t v11 = a3[19];
    __dst = (unsigned char *)(a1 + v11);
    uint64_t v12 = (char *)a2 + v11;
    *(void *)(a1 + 104) = a2[13];
    *(void *)(a1 + 112) = v10;
    uint64_t v13 = sub_24F071520();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    swift_retain();
    swift_retain();
    swift_retain();
    if (v15(v12, 1, v13))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD78);
      uint64_t v17 = __dst;
      memcpy(__dst, v12, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      uint64_t v17 = __dst;
      (*(void (**)(unsigned char *, char *, uint64_t))(v14 + 16))(__dst, v12, v13);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
    }
    uint64_t v18 = (int *)type metadata accessor for WorkoutPlanDetail();
    uint64_t v19 = v18[5];
    uint64_t v20 = &v17[v19];
    uint64_t v21 = &v12[v19];
    uint64_t v22 = sub_24F071490();
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD60);
      memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    uint64_t v25 = v18[6];
    uint64_t v26 = &v17[v25];
    uint64_t v27 = &v12[v25];
    uint64_t v28 = *((void *)v27 + 1);
    *uint64_t v26 = *(void *)v27;
    v26[1] = v28;
    uint64_t v29 = v18[7];
    __dsta = &v17[v29];
    uint64_t v30 = &v12[v29];
    uint64_t v31 = sub_24F0714D0();
    uint64_t v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16);
    swift_bridgeObjectRetain();
    v32(__dsta, v30, v31);
    v17[v18[8]] = v12[v18[8]];
    uint64_t v33 = v18[9];
    uint64_t v34 = &v17[v33];
    uint64_t v35 = &v12[v33];
    uint64_t v36 = *((void *)v35 + 1);
    *uint64_t v34 = *(void *)v35;
    v34[1] = v36;
    uint64_t v37 = v18[10];
    uint64_t v38 = &v17[v37];
    uint64_t v39 = &v12[v37];
    uint64_t v40 = *((void *)v39 + 1);
    *uint64_t v38 = *(void *)v39;
    v38[1] = v40;
    uint64_t v41 = v18[11];
    uint64_t v42 = &v17[v41];
    uint64_t v43 = &v12[v41];
    uint64_t v44 = *((void *)v43 + 1);
    *uint64_t v42 = *(void *)v43;
    v42[1] = v44;
    uint64_t v45 = a3[20];
    uint64_t v46 = a3[21];
    uint64_t v47 = (void *)(v3 + v45);
    uint64_t v48 = (uint64_t *)((char *)a2 + v45);
    uint64_t v49 = v48[1];
    *uint64_t v47 = *v48;
    v47[1] = v49;
    uint64_t v50 = v3 + v46;
    uint64_t v51 = (uint64_t)a2 + v46;
    *(unsigned char *)uint64_t v50 = *(unsigned char *)v51;
    *(void *)(v50 + 8) = *(void *)(v51 + 8);
    *(unsigned char *)(v50 + 16) = *(unsigned char *)(v51 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  swift_retain();
  return v3;
}

uint64_t sub_24F020708(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 76);
  uint64_t v5 = sub_24F071520();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = type metadata accessor for WorkoutPlanDetail();
  uint64_t v8 = v4 + *(int *)(v7 + 20);
  uint64_t v9 = sub_24F071490();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  swift_bridgeObjectRelease();
  uint64_t v11 = v4 + *(int *)(v7 + 28);
  uint64_t v12 = sub_24F0714D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t sub_24F02090C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  uint64_t v8 = *(void *)(a2 + 112);
  uint64_t v9 = a3[19];
  __dst = (unsigned char *)(a1 + v9);
  uint64_t v10 = (char *)(a2 + v9);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v8;
  uint64_t v11 = sub_24F071520();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_retain();
  swift_retain();
  swift_retain();
  if (v13(v10, 1, v11))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD78);
    uint64_t v15 = __dst;
    memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    uint64_t v15 = __dst;
    (*(void (**)(unsigned char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
  }
  uint64_t v16 = (int *)type metadata accessor for WorkoutPlanDetail();
  uint64_t v17 = v16[5];
  uint64_t v18 = &v15[v17];
  uint64_t v19 = &v10[v17];
  uint64_t v20 = sub_24F071490();
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD60);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  uint64_t v23 = v16[6];
  uint64_t v24 = &v15[v23];
  uint64_t v25 = &v10[v23];
  uint64_t v26 = *((void *)v25 + 1);
  *uint64_t v24 = *(void *)v25;
  v24[1] = v26;
  uint64_t v27 = v16[7];
  __dsta = &v15[v27];
  uint64_t v28 = &v10[v27];
  uint64_t v29 = sub_24F0714D0();
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16);
  swift_bridgeObjectRetain();
  v30(__dsta, v28, v29);
  v15[v16[8]] = v10[v16[8]];
  uint64_t v31 = v16[9];
  uint64_t v32 = &v15[v31];
  uint64_t v33 = &v10[v31];
  uint64_t v34 = *((void *)v33 + 1);
  *uint64_t v32 = *(void *)v33;
  v32[1] = v34;
  uint64_t v35 = v16[10];
  uint64_t v36 = &v15[v35];
  uint64_t v37 = &v10[v35];
  uint64_t v38 = *((void *)v37 + 1);
  *uint64_t v36 = *(void *)v37;
  v36[1] = v38;
  uint64_t v39 = v16[11];
  uint64_t v40 = &v15[v39];
  uint64_t v41 = &v10[v39];
  uint64_t v42 = *((void *)v41 + 1);
  *uint64_t v40 = *(void *)v41;
  v40[1] = v42;
  uint64_t v43 = a3[20];
  uint64_t v44 = a3[21];
  uint64_t v45 = (void *)(a1 + v43);
  uint64_t v46 = (void *)(a2 + v43);
  uint64_t v47 = v46[1];
  *uint64_t v45 = *v46;
  v45[1] = v47;
  uint64_t v48 = a1 + v44;
  uint64_t v49 = a2 + v44;
  *(unsigned char *)uint64_t v48 = *(unsigned char *)v49;
  *(void *)(v48 + 8) = *(void *)(v49 + 8);
  *(unsigned char *)(v48 + 16) = *(unsigned char *)(v49 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_24F020C84(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_retain();
  swift_release();
  a1[12] = a2[12];
  uint64_t v7 = a2[14];
  a1[13] = a2[13];
  a1[14] = v7;
  swift_retain();
  swift_release();
  uint64_t v8 = a3[19];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_24F071520();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD78);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v9, v10, v11);
LABEL_7:
  uint64_t v17 = (int *)type metadata accessor for WorkoutPlanDetail();
  uint64_t v18 = v17[5];
  uint64_t v19 = &v9[v18];
  uint64_t v52 = v10;
  uint64_t v20 = &v10[v18];
  uint64_t v21 = sub_24F071490();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  uint64_t v51 = v19;
  LODWORD(v19) = v23(v19, 1, v21);
  int v24 = v23(v20, 1, v21);
  if (v19)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v51, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v51, 0, 1, v21);
      goto LABEL_16;
    }
    size_t v25 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD60) - 8) + 64);
    uint64_t v26 = v51;
  }
  else
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 24))(v51, v20, v21);
      goto LABEL_16;
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v51, v21);
    size_t v25 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD60) - 8) + 64);
    uint64_t v26 = v51;
  }
  memcpy(v26, v20, v25);
LABEL_16:
  uint64_t v27 = v17[6];
  uint64_t v28 = &v9[v27];
  uint64_t v29 = &v52[v27];
  *(void *)uint64_t v28 = *(void *)v29;
  *((void *)v28 + 1) = *((void *)v29 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v30 = v17[7];
  uint64_t v31 = &v9[v30];
  uint64_t v32 = &v52[v30];
  uint64_t v33 = sub_24F0714D0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 24))(v31, v32, v33);
  v9[v17[8]] = v52[v17[8]];
  uint64_t v34 = v17[9];
  uint64_t v35 = &v9[v34];
  uint64_t v36 = &v52[v34];
  *(void *)uint64_t v35 = *(void *)v36;
  *((void *)v35 + 1) = *((void *)v36 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v37 = v17[10];
  uint64_t v38 = &v9[v37];
  uint64_t v39 = &v52[v37];
  *(void *)uint64_t v38 = *(void *)v39;
  *((void *)v38 + 1) = *((void *)v39 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v40 = v17[11];
  uint64_t v41 = &v9[v40];
  uint64_t v42 = &v52[v40];
  *(void *)uint64_t v41 = *(void *)v42;
  *((void *)v41 + 1) = *((void *)v42 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v43 = a3[20];
  uint64_t v44 = (void *)((char *)a1 + v43);
  uint64_t v45 = (void *)((char *)a2 + v43);
  uint64_t v46 = v45[1];
  void *v44 = *v45;
  v44[1] = v46;
  swift_retain();
  swift_release();
  uint64_t v47 = a3[21];
  uint64_t v48 = (char *)a1 + v47;
  uint64_t v49 = (char *)a2 + v47;
  char *v48 = *((unsigned char *)a2 + v47);
  *((void *)v48 + 1) = *(void *)((char *)a2 + v47 + 8);
  swift_retain();
  swift_release();
  v48[16] = v49[16];
  return a1;
}

uint64_t sub_24F021180(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  long long v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  uint64_t v9 = a3[19];
  uint64_t v10 = (char *)(a1 + v9);
  uint64_t v11 = (char *)(a2 + v9);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  uint64_t v12 = sub_24F071520();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD78);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  int v15 = (int *)type metadata accessor for WorkoutPlanDetail();
  uint64_t v16 = v15[5];
  uint64_t v17 = &v10[v16];
  uint64_t v18 = &v11[v16];
  uint64_t v19 = sub_24F071490();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD60);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  *(_OWORD *)&v10[v15[6]] = *(_OWORD *)&v11[v15[6]];
  uint64_t v22 = v15[7];
  uint64_t v23 = &v10[v22];
  int v24 = &v11[v22];
  uint64_t v25 = sub_24F0714D0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
  v10[v15[8]] = v11[v15[8]];
  *(_OWORD *)&v10[v15[9]] = *(_OWORD *)&v11[v15[9]];
  *(_OWORD *)&v10[v15[10]] = *(_OWORD *)&v11[v15[10]];
  *(_OWORD *)&v10[v15[11]] = *(_OWORD *)&v11[v15[11]];
  uint64_t v26 = a3[21];
  *(_OWORD *)(a1 + a3[20]) = *(_OWORD *)(a2 + a3[20]);
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  *(unsigned char *)(v27 + 16) = *(unsigned char *)(v28 + 16);
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  return a1;
}

uint64_t sub_24F021458(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_release();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_release();
  uint64_t v7 = a3[19];
  long long v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = sub_24F071520();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD78);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = (int *)type metadata accessor for WorkoutPlanDetail();
  uint64_t v17 = v16[5];
  uint64_t v18 = &v8[v17];
  char v54 = v9;
  uint64_t v19 = &v9[v17];
  uint64_t v20 = sub_24F071490();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  uint64_t v55 = v18;
  LODWORD(v18) = v22(v18, 1, v20);
  int v23 = v22(v19, 1, v20);
  if (v18)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v55, v19, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v55, 0, 1, v20);
      goto LABEL_16;
    }
    size_t v24 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD60) - 8) + 64);
    uint64_t v25 = v55;
  }
  else
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 40))(v55, v19, v20);
      goto LABEL_16;
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v55, v20);
    size_t v24 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD60) - 8) + 64);
    uint64_t v25 = v55;
  }
  memcpy(v25, v19, v24);
LABEL_16:
  uint64_t v26 = v16[6];
  uint64_t v27 = &v8[v26];
  uint64_t v28 = &v54[v26];
  uint64_t v30 = *(void *)v28;
  uint64_t v29 = *((void *)v28 + 1);
  *(void *)uint64_t v27 = v30;
  *((void *)v27 + 1) = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = v16[7];
  uint64_t v32 = &v8[v31];
  uint64_t v33 = &v54[v31];
  uint64_t v34 = sub_24F0714D0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  v8[v16[8]] = v54[v16[8]];
  uint64_t v35 = v16[9];
  uint64_t v36 = &v8[v35];
  uint64_t v37 = &v54[v35];
  uint64_t v39 = *(void *)v37;
  uint64_t v38 = *((void *)v37 + 1);
  *(void *)uint64_t v36 = v39;
  *((void *)v36 + 1) = v38;
  swift_bridgeObjectRelease();
  uint64_t v40 = v16[10];
  uint64_t v41 = &v8[v40];
  uint64_t v42 = &v54[v40];
  uint64_t v44 = *(void *)v42;
  uint64_t v43 = *((void *)v42 + 1);
  *(void *)uint64_t v41 = v44;
  *((void *)v41 + 1) = v43;
  swift_bridgeObjectRelease();
  uint64_t v45 = v16[11];
  uint64_t v46 = &v8[v45];
  uint64_t v47 = &v54[v45];
  uint64_t v49 = *(void *)v47;
  uint64_t v48 = *((void *)v47 + 1);
  *(void *)uint64_t v46 = v49;
  *((void *)v46 + 1) = v48;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + a3[20]) = *(_OWORD *)(a2 + a3[20]);
  swift_release();
  uint64_t v50 = a3[21];
  uint64_t v51 = a1 + v50;
  uint64_t v52 = a2 + v50;
  *(unsigned char *)uint64_t v51 = *(unsigned char *)v52;
  *(void *)(v51 + 8) = *(void *)(v52 + 8);
  swift_release();
  *(unsigned char *)(v51 + 16) = *(unsigned char *)(v52 + 16);
  return a1;
}

uint64_t sub_24F0218C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24F0218D4);
}

uint64_t sub_24F0218D4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for WorkoutPlanDetail();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 76);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_24F021984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24F021998);
}

void *sub_24F021998(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for WorkoutPlanDetail();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 76);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_24F021A40()
{
  return swift_getWitnessTable();
}

uint64_t sub_24F021E90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 80);
}

uint64_t sub_24F021E98()
{
  return swift_release();
}

uint64_t sub_24F021EA0(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v4 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v4;
  swift_retain();
  return a1;
}

void *sub_24F021EF0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_retain();
  swift_release();
  a1[10] = a2[10];
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t sub_24F021FAC(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  return a1;
}

uint64_t sub_24F02200C(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 72);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_24F022054(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 72) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for ActivePlanBannerView.Layout()
{
  return swift_getGenericMetadata();
}

unsigned char *sub_24F0220C0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F02218CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_24F0221B4()
{
  return swift_getWitnessTable();
}

uint64_t sub_24F0221D0()
{
  return sub_24F022264((uint64_t (*)(void, void, void, void, void, void, void))sub_24F01E818);
}

unint64_t sub_24F0221E8()
{
  unint64_t result = qword_2699A3660;
  if (!qword_2699A3660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3660);
  }
  return result;
}

uint64_t sub_24F02224C()
{
  return sub_24F022264((uint64_t (*)(void, void, void, void, void, void, void))sub_24F01F690);
}

uint64_t sub_24F022264(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  return a1(v1[8], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t sub_24F022280(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

unint64_t sub_24F022290()
{
  unint64_t result = qword_2699A3670;
  if (!qword_2699A3670)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A3678);
    sub_24F022330();
    sub_24F007760(&qword_2699A36A0, &qword_2699A36A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3670);
  }
  return result;
}

unint64_t sub_24F022330()
{
  unint64_t result = qword_2699A3680;
  if (!qword_2699A3680)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A3688);
    sub_24F007760(&qword_2699A3690, &qword_2699A3698);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3680);
  }
  return result;
}

uint64_t sub_24F0223D0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    sub_24F007760(&qword_2699A36B0, &qword_2699A36B8);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24F022474()
{
  unint64_t result = qword_2699A36C8;
  if (!qword_2699A36C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A3548);
    sub_24F0223D0(&qword_2699A36C0, &qword_2699A3540, (void (*)(void))sub_24F022330);
    sub_24F007760(&qword_2699A36D0, &qword_2699A36D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A36C8);
  }
  return result;
}

uint64_t sub_24F022538(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24F022548()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A36E0);
  sub_24F023BA8();
  return sub_24F071600();
}

uint64_t WorkoutPlanBannerView.init(store:activePlanBannerViewBuilder:createPlanBannerViewBuilder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(void *)a7 = sub_24F006060;
  *(void *)(a7 + 8) = result;
  *(unsigned char *)(a7 + 16) = 0;
  *(void *)(a7 + 24) = a3;
  *(void *)(a7 + 32) = a4;
  *(void *)(a7 + 40) = a5;
  *(void *)(a7 + 48) = a6;
  return result;
}

uint64_t sub_24F022634()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t WorkoutPlanBannerView.body.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v5 = a1[4];
  *(void *)&long long v45 = a1[2];
  uint64_t v4 = v45;
  *((void *)&v45 + 1) = v5;
  uint64_t v26 = MEMORY[0x263F1B280];
  swift_getOpaqueTypeMetadata2();
  uint64_t v24 = a1[3];
  uint64_t v6 = v24;
  uint64_t v25 = sub_24F0718B0();
  sub_24F0718B0();
  uint64_t v7 = sub_24F071DB0();
  uint64_t v28 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v23 - v8;
  uint64_t v27 = sub_24F0716E0();
  uint64_t v29 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v11 = (char *)&v23 - v10;
  long long v12 = v2[1];
  long long v45 = *v2;
  long long v46 = v12;
  long long v47 = v2[2];
  uint64_t v48 = *((void *)v2 + 6);
  uint64_t v31 = v4;
  uint64_t v32 = v6;
  uint64_t v13 = a1[5];
  uint64_t v33 = v5;
  uint64_t v34 = v13;
  uint64_t v35 = &v45;
  uint64_t v43 = v4;
  uint64_t v44 = v5;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v41 = v5;
  uint64_t v42 = v13;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v39 = OpaqueTypeConformance2;
  uint64_t v40 = WitnessTable;
  uint64_t v16 = swift_getWitnessTable();
  sub_24F071DA0();
  uint64_t v17 = swift_allocObject();
  uint64_t v18 = v24;
  *(void *)(v17 + 16) = v4;
  *(void *)(v17 + 24) = v18;
  *(void *)(v17 + 32) = v5;
  *(void *)(v17 + 40) = v13;
  long long v19 = v46;
  *(_OWORD *)(v17 + 48) = v45;
  *(_OWORD *)(v17 + 64) = v19;
  *(_OWORD *)(v17 + 80) = v47;
  *(void *)(v17 + 96) = v48;
  sub_24F01BC50((uint64_t)&v45);
  uint64_t v38 = v16;
  uint64_t v20 = swift_getWitnessTable();
  sub_24F071CF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v7);
  uint64_t v36 = v20;
  uint64_t v37 = MEMORY[0x263F1A240];
  uint64_t v21 = v27;
  swift_getWitnessTable();
  sub_24F071B20();
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v11, v21);
}

uint64_t sub_24F022A1C@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v104 = a5;
  uint64_t v102 = a6;
  uint64_t v80 = *(void *)(a3 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](a1);
  uint64_t v79 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v78 = (uint64_t *)((char *)&v75 - v12);
  uint64_t v95 = type metadata accessor for WorkoutPlanDetail();
  uint64_t v87 = *(void *)(v95 - 8);
  MEMORY[0x270FA5388](v95);
  uint64_t v77 = (uint64_t)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24F0718B0();
  uint64_t v91 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v90 = (char *)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v88 = (char *)&v75 - v17;
  uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
  uint64_t v18 = *(void *)(v94 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v94);
  uint64_t v84 = (uint64_t)&v75 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v75 - v21;
  uint64_t v85 = sub_24F071730();
  uint64_t v83 = *(void *)(v85 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v85);
  uint64_t v81 = (char *)&v75 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = *(void *)(a2 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v76 = (char *)&v75 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v92 = (uint64_t *)((char *)&v75 - v27);
  *(void *)&long long v117 = a2;
  *((void *)&v117 + 1) = a4;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v86 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v29 = MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v31 = (uint64_t *)((char *)&v75 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v29);
  uint64_t v82 = (uint64_t *)((char *)&v75 - v32);
  uint64_t State = type metadata accessor for WorkoutPlanBannerLoadState();
  MEMORY[0x270FA5388](State - 8);
  uint64_t v35 = (char *)&v75 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = OpaqueTypeMetadata2;
  uint64_t v100 = v14;
  uint64_t v99 = sub_24F0718B0();
  uint64_t v98 = *(void *)(v99 - 8);
  MEMORY[0x270FA5388](v99);
  uint64_t v97 = (char *)&v75 - v36;
  long long v37 = a1[1];
  long long v117 = *a1;
  long long v118 = v37;
  long long v119 = a1[2];
  uint64_t v120 = *((void *)a1 + 6);
  uint64_t v103 = a2;
  uint64_t v113 = a2;
  uint64_t v114 = a3;
  uint64_t v89 = a3;
  uint64_t v101 = a4;
  uint64_t v115 = a4;
  uint64_t v116 = v104;
  type metadata accessor for WorkoutPlanBannerView();
  sub_24F022548();
  swift_getKeyPath();
  sub_24F071FE0();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v35, 1, v94) == 1)
  {
    uint64_t v38 = v95;
    uint64_t v39 = (void (*)(uint64_t))*((void *)a1 + 3);
    if (qword_2699A2D00 != -1) {
      swift_once();
    }
    uint64_t v40 = __swift_project_value_buffer(v38, (uint64_t)qword_2699A3440);
    uint64_t v41 = v92;
    v39(v40);
    uint64_t v42 = v81;
    sub_24F071720();
    uint64_t v43 = v103;
    uint64_t v44 = v101;
    sub_24F071D20();
    (*(void (**)(char *, uint64_t))(v83 + 8))(v42, v85);
    (*(void (**)(void *, uint64_t))(v93 + 8))(v41, v43);
    *(void *)&long long v117 = v43;
    *((void *)&v117 + 1) = v44;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    long long v46 = v82;
    uint64_t v47 = v96;
    sub_24F005EE8(v82, v31, v96, OpaqueTypeConformance2);
    uint64_t v48 = *(void (**)(void *, uint64_t))(v86 + 8);
    v48(v31, v47);
    sub_24F005EE8(v31, v46, v47, OpaqueTypeConformance2);
    uint64_t v49 = v104;
    uint64_t v105 = v44;
    uint64_t v106 = v104;
    swift_getWitnessTable();
    uint64_t v50 = v97;
    sub_24F068E04((uint64_t)v31, v47);
    v48(v31, v47);
    uint64_t v51 = v46;
    uint64_t v52 = v103;
    v48(v51, v47);
  }
  else
  {
    sub_24F00DE1C((uint64_t)v35, (uint64_t)v22);
    uint64_t v53 = v84;
    sub_24F00DE84((uint64_t)v22, v84);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v87 + 48))(v53, 1, v95) == 1)
    {
      uint64_t v54 = sub_24F00DFB0(v53);
      uint64_t v55 = v79;
      (*((void (**)(uint64_t))a1 + 5))(v54);
      uint64_t v56 = v78;
      uint64_t v57 = v89;
      uint64_t v49 = v104;
      sub_24F005EE8(v78, v55, v89, v104);
      uint64_t v58 = *(void (**)(void *, uint64_t))(v80 + 8);
      v58(v55, v57);
      sub_24F005EE8(v55, v56, v57, v49);
      uint64_t v59 = v88;
      uint64_t v52 = v103;
      uint64_t v44 = v101;
      sub_24F068EFC((uint64_t)v55, v103, v57);
      v58(v55, v57);
      v58(v56, v57);
    }
    else
    {
      uint64_t v60 = v77;
      sub_24F01D974(v53, v77);
      uint64_t v61 = v76;
      (*((void (**)(uint64_t))a1 + 3))(v60);
      uint64_t v62 = v92;
      uint64_t v52 = v103;
      uint64_t v44 = v101;
      sub_24F005EE8(v92, v61, v103, v101);
      uint64_t v63 = *(void (**)(void *, uint64_t))(v93 + 8);
      v63(v61, v52);
      sub_24F005EE8(v61, v62, v52, v44);
      uint64_t v59 = v88;
      uint64_t v64 = v104;
      sub_24F068E04((uint64_t)v61, v52);
      uint64_t v65 = v61;
      uint64_t v49 = v64;
      v63(v65, v52);
      v63(v62, v52);
      sub_24F023C04(v60, (uint64_t (*)(void))type metadata accessor for WorkoutPlanDetail);
    }
    uint64_t v50 = v97;
    uint64_t v111 = v44;
    uint64_t v112 = v49;
    uint64_t v66 = v100;
    uint64_t WitnessTable = swift_getWitnessTable();
    char v68 = v90;
    sub_24F005EE8(v90, v59, v66, WitnessTable);
    *(void *)&long long v117 = v52;
    *((void *)&v117 + 1) = v44;
    swift_getOpaqueTypeConformance2();
    sub_24F068EFC((uint64_t)v68, v96, v66);
    uint64_t v69 = *(void (**)(char *, uint64_t))(v91 + 8);
    v69(v68, v66);
    v69(v59, v66);
    sub_24F00DFB0((uint64_t)v22);
  }
  *(void *)&long long v117 = v52;
  *((void *)&v117 + 1) = v44;
  uint64_t v70 = swift_getOpaqueTypeConformance2();
  uint64_t v109 = v44;
  uint64_t v110 = v49;
  uint64_t v71 = swift_getWitnessTable();
  uint64_t v107 = v70;
  uint64_t v108 = v71;
  uint64_t v72 = v99;
  uint64_t v73 = swift_getWitnessTable();
  sub_24F005EE8(v102, v50, v72, v73);
  return (*(uint64_t (**)(char *, uint64_t))(v98 + 8))(v50, v72);
}

uint64_t sub_24F0235E8@<X0>(void *a1@<X8>)
{
  return sub_24F022A1C(*(long long **)(v1 + 48), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), a1);
}

uint64_t sub_24F0235F8(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for WorkoutPlanBannerAction();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v13 = a1[1];
  long long v17 = *a1;
  long long v18 = v13;
  long long v19 = a1[2];
  uint64_t v20 = *((void *)a1 + 6);
  v16[0] = a2;
  v16[1] = a3;
  v16[2] = a4;
  v16[3] = a5;
  type metadata accessor for WorkoutPlanBannerView();
  sub_24F022548();
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v12, 1, 3, v14);
  sub_24F071FF0();
  swift_release();
  return sub_24F023C04((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for WorkoutPlanBannerAction);
}

uint64_t sub_24F02372C()
{
  sub_24F007284();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 104, 7);
}

uint64_t sub_24F023778()
{
  return sub_24F0235F8((long long *)(v0 + 48), *(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_24F023788()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24F0237CC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_24F0072D8();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = a2[3];
  uint64_t v7 = a2[6];
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
  *(void *)(a1 + 48) = v7;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_24F02384C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_24F0072D8();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  sub_24F007284();
  uint64_t v7 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v7;
  swift_retain();
  swift_release();
  uint64_t v8 = a2[6];
  *(void *)(a1 + 40) = a2[5];
  *(void *)(a1 + 48) = v8;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_24F0238FC(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  sub_24F007284();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t sub_24F023964(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_24F0239AC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for WorkoutPlanBannerView()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24F023A10()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_24F023BA8()
{
  unint64_t result = qword_2699A36E8;
  if (!qword_2699A36E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A36E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A36E8);
  }
  return result;
}

uint64_t sub_24F023C04(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

__n128 OfflineFeature.init(environment:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v2;
  long long v3 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v3;
  __n128 result = *(__n128 *)(a1 + 64);
  *(__n128 *)(a2 + 64) = result;
  return result;
}

uint64_t OfflineFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t v106 = a3;
  uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3330);
  uint64_t v7 = *(void *)(v107 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v107);
  uint64_t v10 = &v91[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  long long v13 = &v91[-v12];
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = &v91[-v15];
  MEMORY[0x270FA5388](v14);
  long long v18 = &v91[-v17];
  uint64_t v20 = *a4;
  uint64_t v19 = a4[1];
  uint64_t v21 = a4[2];
  long long v22 = v4[3];
  long long v111 = v4[2];
  long long v112 = v22;
  long long v113 = v4[4];
  long long v23 = v4[1];
  long long v109 = *v4;
  long long v110 = v23;
  if (v19)
  {
    if (v19 == 1)
    {
      uint64_t v69 = a2 + *(int *)(type metadata accessor for OfflineState() + 20);
      unint64_t v70 = *(void *)(v69 + 8);
      if (v70 <= 2)
      {
        *(_OWORD *)uint64_t v69 = xmmword_24F075180;
        *(void *)(v69 + 16) = 0;
      }
      BOOL v71 = v70 > 2;
      uint64_t v72 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2699A32A8);
      uint64_t v73 = &v10[v72[16]];
      uint64_t v74 = &v10[v72[20]];
      uint64_t v75 = &v10[v72[24]];
      char v108 = 1;
      sub_24F0245F4();
      sub_24F072230();
      sub_24F072130();
      uint64_t v76 = *MEMORY[0x263F39580];
      uint64_t v77 = sub_24F071FD0();
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v77 - 8) + 104))(v73, v76, v77);
      uint64_t v78 = *MEMORY[0x263F39570];
      uint64_t v79 = sub_24F071FC0();
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v79 - 8) + 104))(v74, v78, v79);
      uint64_t v80 = swift_allocObject();
      long long v81 = v112;
      *(_OWORD *)(v80 + 48) = v111;
      *(_OWORD *)(v80 + 64) = v81;
      *(_OWORD *)(v80 + 80) = v113;
      long long v82 = v110;
      *(_OWORD *)(v80 + 16) = v109;
      *(_OWORD *)(v80 + 32) = v82;
      *(unsigned char *)(v80 + 96) = v71;
      *uint64_t v75 = &unk_2699A3700;
      v75[1] = v80;
      uint64_t v83 = v107;
      (*(void (**)(unsigned char *, void, uint64_t))(v7 + 104))(v10, *MEMORY[0x263F39530], v107);
      uint64_t v84 = v106;
      unint64_t v85 = *v106;
      sub_24F0269F4((uint64_t)&v109);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v85 = sub_24F014354(0, *(void *)(v85 + 16) + 1, 1, v85);
      }
      unint64_t v87 = *(void *)(v85 + 16);
      unint64_t v86 = *(void *)(v85 + 24);
      if (v87 >= v86 >> 1) {
        unint64_t v85 = sub_24F014354(v86 > 1, v87 + 1, 1, v85);
      }
      *(void *)(v85 + 16) = v87 + 1;
      uint64_t result = (*(uint64_t (**)(unint64_t, unsigned char *, uint64_t))(v7 + 32))(v85+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v87, v10, v83);
      *uint64_t v84 = v85;
    }
    else if (v19 == 2)
    {
      uint64_t v24 = (uint64_t *)(a2 + *(int *)(type metadata accessor for OfflineState() + 20));
      uint64_t result = sub_24F002A98(*v24, v24[1]);
      *(_OWORD *)uint64_t v24 = xmmword_24F075170;
      v24[2] = 0;
    }
    else
    {
      uint64_t v88 = (uint64_t *)(a2 + *(int *)(type metadata accessor for OfflineState() + 20));
      uint64_t v89 = *v88;
      unint64_t v90 = v88[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t result = sub_24F002A98(v89, v90);
      *uint64_t v88 = v20;
      v88[1] = v19;
      v88[2] = v21;
    }
  }
  else
  {
    uint64_t result = type metadata accessor for OfflineState();
    uint64_t v26 = a2 + *(int *)(result + 20);
    if (!*(void *)(v26 + 8))
    {
      *(_OWORD *)uint64_t v26 = xmmword_24F075180;
      *(void *)(v26 + 16) = 0;
      uint64_t v27 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2699A32A8);
      uint64_t v28 = &v18[v27[16]];
      uint64_t v29 = &v18[v27[20]];
      uint64_t v30 = &v18[v27[24]];
      char v108 = 0;
      unint64_t v105 = sub_24F0245F4();
      sub_24F072230();
      sub_24F072130();
      uint64_t v31 = *MEMORY[0x263F39590];
      uint64_t v32 = sub_24F071FD0();
      uint64_t v33 = *(void *)(v32 - 8);
      uint64_t v101 = *(void (**)(void))(v33 + 104);
      uint64_t v102 = v32;
      uint64_t v100 = v33 + 104;
      ((void (*)(unsigned char *, uint64_t))v101)(v28, v31);
      uint64_t v34 = *MEMORY[0x263F39570];
      uint64_t v35 = sub_24F071FC0();
      uint64_t v36 = *(void *)(v35 - 8);
      long long v37 = *(void (**)(void, void))(v36 + 104);
      unsigned int v99 = v34;
      uint64_t v98 = v35;
      uint64_t v97 = (void (*)(unsigned char *, void, uint64_t))v37;
      uint64_t v96 = v36 + 104;
      v37(v29, v34);
      *uint64_t v30 = &unk_2699A3708;
      v30[1] = 0;
      uint64_t v38 = *(void (**)(void))(v7 + 104);
      unsigned int v104 = *MEMORY[0x263F39530];
      uint64_t v103 = (void (*)(unsigned char *, void, uint64_t))v38;
      v38(v18);
      uint64_t v39 = v106;
      unint64_t v40 = *v106;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v40 = sub_24F014354(0, *(void *)(v40 + 16) + 1, 1, v40);
      }
      unint64_t v42 = *(void *)(v40 + 16);
      unint64_t v41 = *(void *)(v40 + 24);
      if (v42 >= v41 >> 1) {
        unint64_t v40 = sub_24F014354(v41 > 1, v42 + 1, 1, v40);
      }
      *(void *)(v40 + 16) = v42 + 1;
      uint64_t v44 = *(uint64_t (**)(unint64_t, unsigned char *, uint64_t))(v7 + 32);
      uint64_t v43 = v7 + 32;
      unint64_t v95 = (*(unsigned __int8 *)(v43 + 48) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 48);
      uint64_t v94 = *(void *)(v43 + 40);
      long long v45 = v18;
      uint64_t v46 = v107;
      uint64_t v93 = v44;
      v44(v40 + v95 + v94 * v42, v45, v107);
      unint64_t *v39 = v40;
      uint64_t v47 = &v16[v27[16]];
      uint64_t v48 = &v16[v27[20]];
      uint64_t v49 = &v16[v27[24]];
      char v108 = 3;
      sub_24F072230();
      sub_24F072130();
      unsigned int v92 = *MEMORY[0x263F39580];
      v101(v47);
      v97(v48, v99, v98);
      uint64_t v50 = (_OWORD *)swift_allocObject();
      long long v51 = v112;
      v50[3] = v111;
      v50[4] = v51;
      v50[5] = v113;
      long long v52 = v110;
      v50[1] = v109;
      v50[2] = v52;
      *uint64_t v49 = &unk_2699A3718;
      v49[1] = v50;
      uint64_t v53 = v106;
      v103(v16, v104, v46);
      unint64_t v54 = *v53;
      sub_24F0269F4((uint64_t)&v109);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v54 = sub_24F014354(0, *(void *)(v54 + 16) + 1, 1, v54);
      }
      unint64_t v56 = *(void *)(v54 + 16);
      unint64_t v55 = *(void *)(v54 + 24);
      if (v56 >= v55 >> 1) {
        unint64_t v54 = sub_24F014354(v55 > 1, v56 + 1, 1, v54);
      }
      *(void *)(v54 + 16) = v56 + 1;
      unint64_t v57 = v54 + v95 + v56 * v94;
      uint64_t v58 = v107;
      uint64_t v59 = v93;
      v93(v57, v16, v107);
      *uint64_t v53 = v54;
      uint64_t v60 = &v13[v27[16]];
      uint64_t v61 = &v13[v27[20]];
      uint64_t v62 = &v13[v27[24]];
      char v108 = 2;
      sub_24F072230();
      sub_24F072150();
      ((void (*)(unsigned char *, void, uint64_t))v101)(v60, v92, v102);
      v97(v61, v99, v98);
      uint64_t v63 = (_OWORD *)swift_allocObject();
      long long v64 = v112;
      v63[3] = v111;
      v63[4] = v64;
      v63[5] = v113;
      long long v65 = v110;
      v63[1] = v109;
      v63[2] = v65;
      *uint64_t v62 = &unk_2699A3728;
      v62[1] = v63;
      v103(v13, v104, v58);
      unint64_t v66 = *v53;
      sub_24F0269F4((uint64_t)&v109);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v66 = sub_24F014354(0, *(void *)(v66 + 16) + 1, 1, v66);
      }
      unint64_t v68 = *(void *)(v66 + 16);
      unint64_t v67 = *(void *)(v66 + 24);
      if (v68 >= v67 >> 1) {
        unint64_t v66 = sub_24F014354(v67 > 1, v68 + 1, 1, v66);
      }
      *(void *)(v66 + 16) = v68 + 1;
      uint64_t result = v59(v66 + v95 + v68 * v94, v13, v58);
      *uint64_t v53 = v66;
    }
  }
  return result;
}

unint64_t sub_24F0245F4()
{
  unint64_t result = qword_2699A36F0;
  if (!qword_2699A36F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_2699A36F0);
  }
  return result;
}

uint64_t sub_24F024648()
{
  *(void *)(v0 + 40) = sub_24F072120();
  *(void *)(v0 + 48) = sub_24F072110();
  *(_OWORD *)(v0 + 16) = xmmword_24F075180;
  *(void *)(v0 + 32) = 0;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3750);
  *uint64_t v1 = v0;
  v1[1] = sub_24F02472C;
  return MEMORY[0x270F252C8](v0 + 16, v2);
}

uint64_t sub_24F02472C()
{
  swift_task_dealloc();
  uint64_t v1 = sub_24F0720F0();
  return MEMORY[0x270FA2498](sub_24F024868, v1, v0);
}

uint64_t sub_24F024868()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24F0248CC(uint64_t a1, uint64_t a2)
{
  v2[15] = a1;
  v2[16] = sub_24F072120();
  v2[17] = sub_24F072110();
  char v6 = (uint64_t (*)(void *))(*(void *)(a2 + 32) + **(int **)(a2 + 32));
  uint64_t v4 = (void *)swift_task_alloc();
  v2[18] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24F0249C8;
  return v6(v2 + 7);
}

uint64_t sub_24F0249C8()
{
  uint64_t v2 = (void *)*v1;
  v2[19] = v0;
  swift_task_dealloc();
  uint64_t v4 = sub_24F0720F0();
  v2[20] = v4;
  v2[21] = v3;
  if (v0) {
    uint64_t v5 = sub_24F025188;
  }
  else {
    uint64_t v5 = sub_24F024B28;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_24F024B28()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = __swift_project_boxed_opaque_existential_1(v0 + 7, v1);
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t v4 = swift_task_alloc();
  (*(void (**)(uint64_t, void *, uint64_t))(v3 + 16))(v4, v2, v1);
  v0[5] = swift_getAssociatedTypeWitness();
  v0[6] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1(v0 + 2);
  sub_24F0721B0();
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 7));
  uint64_t v5 = sub_24F072110();
  v0[22] = v5;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 2), v0[5]);
  char v6 = (void *)swift_task_alloc();
  v0[23] = (uint64_t)v6;
  *char v6 = v0;
  v6[1] = sub_24F024D18;
  uint64_t v7 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1E88](v0 + 25, v5, v7);
}

uint64_t sub_24F024D18()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 168);
  uint64_t v3 = *(void *)(v1 + 160);
  return MEMORY[0x270FA2498](sub_24F024E5C, v3, v2);
}

uint64_t sub_24F024E5C()
{
  if (*(unsigned char *)(v0 + 200) == 1)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    *(_OWORD *)(v0 + 96) = xmmword_24F075180;
    *(void *)(v0 + 112) = 0;
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 192) = v3;
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3750);
    *uint64_t v3 = v0;
    v3[1] = sub_24F024F7C;
    return MEMORY[0x270F252C8](v0 + 96, v4);
  }
}

uint64_t sub_24F024F7C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 168);
  uint64_t v3 = *(void *)(v1 + 160);
  return MEMORY[0x270FA2498](sub_24F02509C, v3, v2);
}

uint64_t sub_24F02509C()
{
  uint64_t v1 = sub_24F072110();
  v0[22] = v1;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 2), v0[5]);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[23] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = sub_24F024D18;
  uint64_t v3 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1E88](v0 + 25, v1, v3);
}

uint64_t sub_24F025188()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24F0251EC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 104) = sub_24F072120();
  *(void *)(v2 + 112) = sub_24F072110();
  uint64_t v4 = *(int **)(a2 + 16);
  *(_OWORD *)(v2 + 120) = *(_OWORD *)(a2 + 64);
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 136) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24F0252EC;
  return v7(v2 + 56);
}

uint64_t sub_24F0252EC()
{
  uint64_t v2 = (void *)*v1;
  v2[18] = v0;
  swift_task_dealloc();
  uint64_t v4 = sub_24F0720F0();
  v2[19] = v4;
  v2[20] = v3;
  if (v0) {
    uint64_t v5 = sub_24F0258D8;
  }
  else {
    uint64_t v5 = sub_24F02544C;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_24F02544C()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = __swift_project_boxed_opaque_existential_1(v0 + 7, v1);
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t v4 = swift_task_alloc();
  (*(void (**)(uint64_t, void *, uint64_t))(v3 + 16))(v4, v2, v1);
  v0[5] = swift_getAssociatedTypeWitness();
  v0[6] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1(v0 + 2);
  sub_24F0721B0();
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 7));
  uint64_t v5 = sub_24F072110();
  v0[21] = v5;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 2), v0[5]);
  char v6 = (void *)swift_task_alloc();
  v0[22] = (uint64_t)v6;
  *char v6 = v0;
  v6[1] = sub_24F02563C;
  uint64_t v7 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1E88](v0 + 12, v5, v7);
}

uint64_t sub_24F02563C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 160);
  uint64_t v3 = *(void *)(v1 + 152);
  return MEMORY[0x270FA2498](sub_24F025780, v3, v2);
}

uint64_t sub_24F025780()
{
  if (*(void *)(v0 + 96))
  {
    (*(void (**)(void))(v0 + 120))(*(void *)(v0 + 96));
    swift_bridgeObjectRelease();
    uint64_t v1 = sub_24F072110();
    *(void *)(v0 + 168) = v1;
    __swift_mutable_project_boxed_opaque_existential_1(v0 + 16, *(void *)(v0 + 40));
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_24F02563C;
    uint64_t v3 = MEMORY[0x263F8F500];
    return MEMORY[0x270FA1E88](v0 + 96, v1, v3);
  }
  else
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
}

uint64_t sub_24F0258D8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24F02593C(uint64_t a1, int **a2, char a3)
{
  *(unsigned char *)(v3 + 256) = a3;
  *(void *)(v3 + 128) = a1;
  *(void *)(v3 + 136) = sub_24F072120();
  *(void *)(v3 + 144) = sub_24F072110();
  uint64_t v5 = *a2;
  *(_OWORD *)(v3 + 152) = *((_OWORD *)a2 + 3);
  uint64_t v8 = (uint64_t (*)(uint64_t))((char *)v5 + *v5);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 168) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_24F025A44;
  return v8(v3 + 16);
}

uint64_t sub_24F025A44()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 176) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_24F0720F0();
  if (v0)
  {
    uint64_t v5 = sub_24F0266C8;
  }
  else
  {
    *(void *)(v2 + 184) = v3;
    *(void *)(v2 + 192) = v4;
    uint64_t v5 = sub_24F025BA8;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_24F025BA8()
{
  uint64_t v18 = v0;
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  *(void *)(v0 + 200) = v2;
  *(void *)(v0 + 208) = v4;
  sub_24F0721A0();
  *(void *)(v0 + 216) = v1;
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 240) = v1;
    if (qword_2699A2CE0 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_24F071570();
    __swift_project_value_buffer(v5, (uint64_t)qword_2699B32B0);
    MEMORY[0x2533531F0](v1);
    MEMORY[0x2533531F0](v1);
    uint64_t v6 = sub_24F071550();
    os_log_type_t v7 = sub_24F0721E0();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      uint64_t v17 = v9;
      *(_DWORD *)uint64_t v8 = 136315138;
      swift_getErrorValue();
      uint64_t v10 = sub_24F072420();
      *(void *)(v0 + 120) = sub_24F070CB0(v10, v11, &v17);
      sub_24F072200();
      swift_bridgeObjectRelease();
      MEMORY[0x2533531E0](v1);
      MEMORY[0x2533531E0](v1);
      _os_log_impl(&dword_24F000000, v6, v7, "Failed to fetched descriptor with error: %s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533533D0](v9, -1, -1);
      MEMORY[0x2533533D0](v8, -1, -1);
    }
    else
    {
      MEMORY[0x2533531E0](v1);
      MEMORY[0x2533531E0](v1);
    }

    *(_OWORD *)(v0 + 40) = xmmword_24F075170;
    uint64_t v12 = v0 + 40;
    *(void *)(v0 + 56) = 0;
    long long v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 248) = v13;
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3750);
    *long long v13 = v0;
    uint64_t v15 = sub_24F02651C;
  }
  else
  {
    *(void *)(v0 + 88) = v3;
    uint64_t v12 = v0 + 88;
    *(void *)(v0 + 96) = v2;
    *(void *)(v0 + 104) = v4;
    long long v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 224) = v13;
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3750);
    *long long v13 = v0;
    uint64_t v15 = sub_24F025EAC;
  }
  v13[1] = v15;
  return MEMORY[0x270F252C8](v12, v14);
}

uint64_t sub_24F025EAC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v1 + 192);
  uint64_t v3 = *(void *)(v1 + 184);
  return MEMORY[0x270FA2498](sub_24F02600C, v3, v2);
}

uint64_t sub_24F02600C()
{
  uint64_t v16 = v0;
  uint64_t v1 = *(void *)(v0 + 216);
  sub_24F0721A0();
  if (v1)
  {
    *(void *)(v0 + 240) = v1;
    if (qword_2699A2CE0 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_24F071570();
    __swift_project_value_buffer(v2, (uint64_t)qword_2699B32B0);
    MEMORY[0x2533531F0](v1);
    MEMORY[0x2533531F0](v1);
    uint64_t v3 = sub_24F071550();
    os_log_type_t v4 = sub_24F0721E0();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      uint64_t v6 = swift_slowAlloc();
      uint64_t v15 = v6;
      *(_DWORD *)uint64_t v5 = 136315138;
      swift_getErrorValue();
      uint64_t v7 = sub_24F072420();
      *(void *)(v0 + 120) = sub_24F070CB0(v7, v8, &v15);
      sub_24F072200();
      swift_bridgeObjectRelease();
      MEMORY[0x2533531E0](v1);
      MEMORY[0x2533531E0](v1);
      _os_log_impl(&dword_24F000000, v3, v4, "Failed to fetched descriptor with error: %s", v5, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533533D0](v6, -1, -1);
      MEMORY[0x2533533D0](v5, -1, -1);
    }
    else
    {
      MEMORY[0x2533531E0](v1);
      MEMORY[0x2533531E0](v1);
    }

    *(_OWORD *)(v0 + 40) = xmmword_24F075170;
    *(void *)(v0 + 56) = 0;
    unint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 248) = v11;
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3750);
    void *v11 = v0;
    v11[1] = sub_24F02651C;
    return MEMORY[0x270F252C8](v0 + 40, v12);
  }
  else if (*(unsigned char *)(v0 + 256) == 1)
  {
    uint64_t v14 = (uint64_t (*)(void))(*(void *)(v0 + 152) + **(int **)(v0 + 152));
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 232) = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_24F026398;
    return v14();
  }
  else
  {
    swift_release();
    long long v13 = *(uint64_t (**)(void))(v0 + 8);
    return v13();
  }
}

uint64_t sub_24F026398()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 192);
  uint64_t v3 = *(void *)(v1 + 184);
  return MEMORY[0x270FA2498](sub_24F0264B8, v3, v2);
}

uint64_t sub_24F0264B8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24F02651C()
{
  swift_task_dealloc();
  uint64_t v1 = sub_24F0720F0();
  return MEMORY[0x270FA2498](sub_24F026658, v1, v0);
}

uint64_t sub_24F026658()
{
  uint64_t v1 = *(void *)(v0 + 240);
  swift_release();
  MEMORY[0x2533531E0](v1);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_24F0266C8()
{
  uint64_t v13 = v0;
  uint64_t v1 = *(void *)(v0 + 176);
  *(void *)(v0 + 240) = v1;
  if (qword_2699A2CE0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24F071570();
  __swift_project_value_buffer(v2, (uint64_t)qword_2699B32B0);
  MEMORY[0x2533531F0](v1);
  MEMORY[0x2533531F0](v1);
  uint64_t v3 = sub_24F071550();
  os_log_type_t v4 = sub_24F0721E0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v12 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    swift_getErrorValue();
    uint64_t v7 = sub_24F072420();
    *(void *)(v0 + 120) = sub_24F070CB0(v7, v8, &v12);
    sub_24F072200();
    swift_bridgeObjectRelease();
    MEMORY[0x2533531E0](v1);
    MEMORY[0x2533531E0](v1);
    _os_log_impl(&dword_24F000000, v3, v4, "Failed to fetched descriptor with error: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533533D0](v6, -1, -1);
    MEMORY[0x2533533D0](v5, -1, -1);
  }
  else
  {
    MEMORY[0x2533531E0](v1);
    MEMORY[0x2533531E0](v1);
  }

  *(_OWORD *)(v0 + 40) = xmmword_24F075170;
  *(void *)(v0 + 56) = 0;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 248) = v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3750);
  *uint64_t v9 = v0;
  v9[1] = sub_24F02651C;
  return MEMORY[0x270F252C8](v0 + 40, v10);
}

uint64_t sub_24F026940()
{
  return objectdestroyTm(97);
}

uint64_t sub_24F026948(uint64_t a1)
{
  os_log_type_t v4 = (int **)(v1 + 16);
  char v5 = *(unsigned char *)(v1 + 96);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_24F027208;
  return sub_24F02593C(a1, v4, v5);
}

uint64_t sub_24F0269F4(uint64_t a1)
{
  return a1;
}

uint64_t sub_24F026A68()
{
  return objectdestroyTm(96);
}

uint64_t sub_24F026A70(uint64_t a1)
{
  os_log_type_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *os_log_type_t v4 = v2;
  v4[1] = sub_24F013D58;
  return sub_24F0248CC(a1, v1 + 16);
}

uint64_t sub_24F026B0C()
{
  return objectdestroyTm(96);
}

uint64_t objectdestroyTm(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v1, a1, 7);
}

uint64_t sub_24F026B78(uint64_t a1)
{
  os_log_type_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *os_log_type_t v4 = v2;
  v4[1] = sub_24F027208;
  return sub_24F0251EC(a1, v1 + 16);
}

unint64_t sub_24F026C18()
{
  unint64_t result = qword_2699A3730;
  if (!qword_2699A3730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3730);
  }
  return result;
}

unint64_t sub_24F026C70()
{
  unint64_t result = qword_2699A3738;
  if (!qword_2699A3738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3738);
  }
  return result;
}

unint64_t sub_24F026CC8()
{
  unint64_t result = qword_2699A3740;
  if (!qword_2699A3740)
  {
    type metadata accessor for OfflineState();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3740);
  }
  return result;
}

uint64_t destroy for OfflineEnvironment()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for OfflineEnvironment(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v3 = *(void *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for OfflineEnvironment(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_retain();
  swift_release();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

_OWORD *assignWithTake for OfflineEnvironment(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  a1[4] = a2[4];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for OfflineEnvironment(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OfflineEnvironment(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OfflineFeature()
{
  return &type metadata for OfflineFeature;
}

unsigned char *storeEnumTagSinglePayload for OfflineFeature.TaskIdentifier(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F0270C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OfflineFeature.TaskIdentifier()
{
  return &type metadata for OfflineFeature.TaskIdentifier;
}

unint64_t sub_24F027100()
{
  unint64_t result = qword_2699A3748;
  if (!qword_2699A3748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3748);
  }
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t LibraryState.init(focusedLibraryPage:libraryLayout:locale:isShowingCreateBanner:isSidebarVisible:accountState:)@<X0>(char a1@<W0>, __int16 *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, char a6@<W5>, unsigned char *a7@<X8>)
{
  __int16 v13 = *a2;
  uint64_t v14 = (int *)type metadata accessor for LibraryState();
  uint64_t v15 = v14[7];
  uint64_t v16 = v14[8];
  uint64_t v17 = v14[9];
  *a7 = a1;
  *(_WORD *)&a7[v14[6]] = v13;
  uint64_t v18 = &a7[v14[5]];
  uint64_t v19 = sub_24F071500();
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v18, a3, v19);
  a7[v15] = a4;
  a7[v16] = a5;
  a7[v17] = a6;
  return result;
}

uint64_t type metadata accessor for LibraryState()
{
  uint64_t result = qword_26B1EBFC0;
  if (!qword_26B1EBFC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t LibraryState.focusedLibraryPage.getter()
{
  return *v0;
}

uint64_t LibraryState.focusedLibraryPage.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*LibraryState.focusedLibraryPage.modify())()
{
  return nullsub_1;
}

uint64_t LibraryState.layout.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for LibraryState();
  *a1 = *(_WORD *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t LibraryState.isShowingCreateBanner.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for LibraryState() + 28));
}

uint64_t LibraryState.isShowingCreateBanner.setter(char a1)
{
  uint64_t result = type metadata accessor for LibraryState();
  *(unsigned char *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*LibraryState.isShowingCreateBanner.modify())()
{
  return nullsub_1;
}

uint64_t LibraryState.isSidebarVisible.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for LibraryState() + 32));
}

uint64_t LibraryState.isSidebarVisible.setter(char a1)
{
  uint64_t result = type metadata accessor for LibraryState();
  *(unsigned char *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*LibraryState.isSidebarVisible.modify())()
{
  return nullsub_1;
}

uint64_t LibraryState.accountState.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for LibraryState() + 36));
}

uint64_t LibraryState.accountState.setter(char a1)
{
  uint64_t result = type metadata accessor for LibraryState();
  *(unsigned char *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*LibraryState.accountState.modify())()
{
  return nullsub_1;
}

unint64_t sub_24F027554(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656C61636F6CLL;
      break;
    case 2:
      unint64_t result = 0x74756F79616CLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000015;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0x53746E756F636361;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24F02762C()
{
  return sub_24F027554(*v0);
}

uint64_t sub_24F027634@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24F028E68(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24F02765C(uint64_t a1)
{
  unint64_t v2 = sub_24F027D34();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F027698(uint64_t a1)
{
  unint64_t v2 = sub_24F027D34();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t LibraryState.withLayout(_:)@<X0>(__int16 *a1@<X0>, unsigned char *a2@<X8>)
{
  __int16 v4 = *a1;
  char v5 = *v2;
  unsigned int v6 = (int *)type metadata accessor for LibraryState();
  uint64_t v7 = v6[5];
  uint64_t v8 = &v2[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_24F071500();
  uint64_t result = (*(uint64_t (**)(unsigned char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v9, v8, v10);
  uint64_t v12 = v6[7];
  uint64_t v13 = v6[8];
  char v14 = v2[v12];
  char v15 = v2[v13];
  uint64_t v16 = v6[9];
  char v17 = v2[v16];
  *a2 = v5;
  *(_WORD *)&a2[v6[6]] = v4;
  a2[v12] = v14;
  a2[v13] = v15;
  a2[v16] = v17;
  return result;
}

uint64_t LibraryState.withLocale(_:)@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  char v5 = *v2;
  unsigned int v6 = (int *)type metadata accessor for LibraryState();
  __int16 v7 = *(_WORD *)&v2[v6[6]];
  uint64_t v8 = &a2[v6[5]];
  uint64_t v9 = sub_24F071500();
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v8, a1, v9);
  uint64_t v11 = v6[7];
  uint64_t v12 = v6[8];
  char v13 = v2[v11];
  char v14 = v2[v12];
  uint64_t v15 = v6[9];
  char v16 = v2[v15];
  *a2 = v5;
  *(_WORD *)&a2[v6[6]] = v7;
  a2[v11] = v13;
  a2[v12] = v14;
  a2[v15] = v16;
  return result;
}

uint64_t LibraryState.withShowingCreateBanner(_:)@<X0>(char a1@<W0>, unsigned char *a2@<X8>)
{
  char v5 = *v2;
  unsigned int v6 = (int *)type metadata accessor for LibraryState();
  uint64_t v7 = v6[5];
  __int16 v8 = *(_WORD *)&v2[v6[6]];
  uint64_t v9 = &v2[v7];
  uint64_t v10 = &a2[v7];
  uint64_t v11 = sub_24F071500();
  uint64_t result = (*(uint64_t (**)(unsigned char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v10, v9, v11);
  uint64_t v14 = v6[7];
  uint64_t v13 = v6[8];
  char v15 = v2[v13];
  uint64_t v16 = v6[9];
  char v17 = v2[v16];
  *a2 = v5;
  *(_WORD *)&a2[v6[6]] = v8;
  a2[v14] = a1;
  a2[v13] = v15;
  a2[v16] = v17;
  return result;
}

uint64_t LibraryState.withSidebarVisible(_:)@<X0>(char a1@<W0>, unsigned char *a2@<X8>)
{
  char v5 = *v2;
  unsigned int v6 = (int *)type metadata accessor for LibraryState();
  uint64_t v7 = v6[5];
  __int16 v8 = *(_WORD *)&v2[v6[6]];
  uint64_t v9 = &v2[v7];
  uint64_t v10 = &a2[v7];
  uint64_t v11 = sub_24F071500();
  uint64_t result = (*(uint64_t (**)(unsigned char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v10, v9, v11);
  uint64_t v13 = v6[7];
  uint64_t v14 = v6[8];
  char v15 = v2[v13];
  uint64_t v16 = v6[9];
  char v17 = v2[v16];
  *a2 = v5;
  *(_WORD *)&a2[v6[6]] = v8;
  a2[v13] = v15;
  a2[v14] = a1;
  a2[v16] = v17;
  return result;
}

uint64_t LibraryState.withAccountState(_:)@<X0>(char a1@<W0>, unsigned char *a2@<X8>)
{
  char v5 = *v2;
  unsigned int v6 = (int *)type metadata accessor for LibraryState();
  uint64_t v7 = v6[5];
  __int16 v8 = *(_WORD *)&v2[v6[6]];
  uint64_t v9 = &v2[v7];
  uint64_t v10 = &a2[v7];
  uint64_t v11 = sub_24F071500();
  uint64_t result = (*(uint64_t (**)(unsigned char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v10, v9, v11);
  uint64_t v13 = v6[7];
  uint64_t v14 = v6[8];
  char v15 = v2[v13];
  char v16 = v2[v14];
  uint64_t v17 = v6[9];
  *a2 = v5;
  *(_WORD *)&a2[v6[6]] = v8;
  a2[v13] = v15;
  a2[v14] = v16;
  a2[v17] = a1;
  return result;
}

uint64_t LibraryState.encode(to:)(void *a1)
{
  int v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3758);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  __int16 v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24F027D34();
  sub_24F072480();
  char v15 = *v3;
  char v14 = 0;
  sub_24F027D88();
  sub_24F0723F0();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for LibraryState();
    char v13 = 1;
    sub_24F071500();
    sub_24F0033D8(&qword_2699A2D20);
    sub_24F0723F0();
    __int16 v12 = *(_WORD *)&v3[*(int *)(v9 + 24)];
    v11[10] = 2;
    sub_24F027DDC();
    sub_24F0723F0();
    v11[9] = 3;
    sub_24F0723D0();
    v11[8] = 4;
    sub_24F0723D0();
    v11[7] = v3[*(int *)(v9 + 36)];
    v11[6] = 5;
    sub_24F027E30();
    sub_24F0723F0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_24F027D34()
{
  unint64_t result = qword_2699A3760;
  if (!qword_2699A3760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3760);
  }
  return result;
}

unint64_t sub_24F027D88()
{
  unint64_t result = qword_2699A3768;
  if (!qword_2699A3768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3768);
  }
  return result;
}

unint64_t sub_24F027DDC()
{
  unint64_t result = qword_2699A3770;
  if (!qword_2699A3770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3770);
  }
  return result;
}

unint64_t sub_24F027E30()
{
  unint64_t result = qword_2699A3778;
  if (!qword_2699A3778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3778);
  }
  return result;
}

uint64_t LibraryState.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v3 = sub_24F071500();
  uint64_t v31 = *(void *)(v3 - 8);
  uint64_t v32 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v30 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3780);
  uint64_t v29 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for LibraryState();
  __int16 v8 = (int *)MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = v8[7];
  v10[v28] = 0;
  uint64_t v11 = v8[8];
  v10[v11] = 0;
  uint64_t v12 = v8[9];
  v10[v12] = 2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24F027D34();
  uint64_t v33 = v6;
  uint64_t v13 = (uint64_t)v35;
  sub_24F072470();
  if (v13) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v25 = v11;
  uint64_t v26 = v7;
  uint64_t v24 = v12;
  uint64_t v35 = a1;
  uint64_t v15 = v29;
  char v14 = v30;
  uint64_t v17 = v31;
  uint64_t v16 = v32;
  char v43 = 0;
  sub_24F0282D4();
  uint64_t v19 = v33;
  uint64_t v18 = v34;
  sub_24F072370();
  *uint64_t v10 = v44;
  char v42 = 1;
  sub_24F0033D8(&qword_2699A2D38);
  uint64_t v20 = v14;
  sub_24F072370();
  uint64_t v21 = v26;
  (*(void (**)(unsigned char *, char *, uint64_t))(v17 + 32))(&v10[*(int *)(v26 + 20)], v20, v16);
  char v40 = 2;
  sub_24F028328();
  sub_24F072370();
  *(_WORD *)&v10[*(int *)(v21 + 24)] = v41;
  char v39 = 3;
  v10[v28] = sub_24F072350() & 1;
  char v38 = 4;
  v10[v25] = sub_24F072350() & 1;
  char v36 = 5;
  sub_24F02837C();
  sub_24F072370();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v18);
  v10[v24] = v37;
  sub_24F0283D0((uint64_t)v10, v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  return sub_24F028434((uint64_t)v10);
}

unint64_t sub_24F0282D4()
{
  unint64_t result = qword_2699A3788;
  if (!qword_2699A3788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3788);
  }
  return result;
}

unint64_t sub_24F028328()
{
  unint64_t result = qword_2699A3790;
  if (!qword_2699A3790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3790);
  }
  return result;
}

unint64_t sub_24F02837C()
{
  unint64_t result = qword_2699A3798;
  if (!qword_2699A3798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3798);
  }
  return result;
}

uint64_t sub_24F0283D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LibraryState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24F028434(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LibraryState();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24F028490@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return LibraryState.init(from:)(a1, a2);
}

uint64_t sub_24F0284A8(void *a1)
{
  return LibraryState.encode(to:)(a1);
}

BOOL _s14FitnessLibrary0B5StateV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, char *a2)
{
  if ((sub_24F02D65C(*a1, *a2) & 1) != 0
    && (uint64_t v4 = (int *)type metadata accessor for LibraryState(), (MEMORY[0x253351FB0](&a1[v4[5]], &a2[v4[5]]) & 1) != 0)
    && a1[v4[6]] == a2[v4[6]]
    && (sub_24F071530() & 1) != 0
    && a1[v4[7]] == a2[v4[7]]
    && a1[v4[8]] == a2[v4[8]])
  {
    return a1[v4[9]] == a2[v4[9]];
  }
  else
  {
    return 0;
  }
}

void *initializeBufferWithCopyOfBuffer for LibraryState(unsigned char *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(unsigned char *)a2;
    uint64_t v7 = a3[5];
    __int16 v8 = &a1[v7];
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_24F071500();
    (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[7];
    *(_WORD *)((char *)v4 + a3[6]) = *(_WORD *)((char *)a2 + a3[6]);
    *((unsigned char *)v4 + v11) = *((unsigned char *)a2 + v11);
    uint64_t v12 = a3[9];
    *((unsigned char *)v4 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    *((unsigned char *)v4 + v12) = *((unsigned char *)a2 + v12);
  }
  return v4;
}

uint64_t destroy for LibraryState(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_24F071500();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

unsigned char *initializeWithCopy for LibraryState(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  __int16 v8 = &a2[v6];
  uint64_t v9 = sub_24F071500();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_WORD *)&a1[a3[6]] = *(_WORD *)&a2[a3[6]];
  a1[v10] = a2[v10];
  uint64_t v11 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  a1[v11] = a2[v11];
  return a1;
}

unsigned char *assignWithCopy for LibraryState(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  __int16 v8 = &a2[v6];
  uint64_t v9 = sub_24F071500();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  unsigned char *v11 = *v12;
  v11[1] = v12[1];
  a1[a3[7]] = a2[a3[7]];
  a1[a3[8]] = a2[a3[8]];
  a1[a3[9]] = a2[a3[9]];
  return a1;
}

unsigned char *initializeWithTake for LibraryState(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  __int16 v8 = &a2[v6];
  uint64_t v9 = sub_24F071500();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_WORD *)&a1[a3[6]] = *(_WORD *)&a2[a3[6]];
  a1[v10] = a2[v10];
  uint64_t v11 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  a1[v11] = a2[v11];
  return a1;
}

unsigned char *assignWithTake for LibraryState(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  __int16 v8 = &a2[v6];
  uint64_t v9 = sub_24F071500();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_WORD *)&a1[a3[6]] = *(_WORD *)&a2[a3[6]];
  a1[v10] = a2[v10];
  uint64_t v11 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  a1[v11] = a2[v11];
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24F0289FC);
}

uint64_t sub_24F0289FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24F071500();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unsigned int v12 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
    if (v12 >= 2) {
      return ((v12 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for LibraryState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24F028AE4);
}

uint64_t sub_24F028AE4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_24F071500();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unsigned int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 28)) = a2 + 1;
  }
  return result;
}

uint64_t sub_24F028BA4()
{
  uint64_t result = sub_24F071500();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LibraryState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F028D28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryState.CodingKeys()
{
  return &type metadata for LibraryState.CodingKeys;
}

unint64_t sub_24F028D64()
{
  unint64_t result = qword_2699A37A0;
  if (!qword_2699A37A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A37A0);
  }
  return result;
}

unint64_t sub_24F028DBC()
{
  unint64_t result = qword_2699A37A8;
  if (!qword_2699A37A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A37A8);
  }
  return result;
}

unint64_t sub_24F028E14()
{
  unint64_t result = qword_2699A37B0[0];
  if (!qword_2699A37B0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2699A37B0);
  }
  return result;
}

uint64_t sub_24F028E68(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x800000024F07AD30 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74756F79616CLL && a2 == 0xE600000000000000 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000024F07AD50 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024F07AD70 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x53746E756F636361 && a2 == 0xEC00000065746174)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v5 = sub_24F072400();
    swift_bridgeObjectRelease();
    if (v5) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_24F0290DC(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  type metadata accessor for TVLibraryView.FocusedView();
  sub_24F0721F0();
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_24F0715B0();
  sub_24F071590();
  return v2;
}

uint64_t sub_24F0291AC(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  type metadata accessor for TVLibraryView.FocusedPlansView();
  sub_24F0721F0();
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_24F0715B0();
  sub_24F071590();
  return v2;
}

uint64_t sub_24F02927C(unsigned __int8 *a1, unsigned __int8 *a2, void *a3, uint64_t a4)
{
  return sub_24F0292E0(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void, void, void))sub_24F02CDD0);
}

uint64_t sub_24F029298(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_24F029348(a1, a2, a3, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_24F02CDDC);
}

uint64_t sub_24F0292B0(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_24F029380(a1, a2, a3, (void (*)(unsigned char *, void, void, void, void, void, void, void))sub_24F02CDDC);
}

uint64_t sub_24F0292C8(unsigned __int8 *a1, unsigned __int8 *a2, void *a3, uint64_t a4)
{
  return sub_24F0292E0(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void, void, void))sub_24F01D540);
}

uint64_t sub_24F0292E0(unsigned __int8 *a1, unsigned __int8 *a2, void *a3, uint64_t a4, uint64_t (*a5)(void, void, void, void, void, void, void, void))
{
  return a5(*a1, *a2, a3[2], a3[3], a3[4], a3[5], a3[6], a3[7]);
}

uint64_t sub_24F029304()
{
  return sub_24F01D578();
}

uint64_t sub_24F029330(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_24F029348(a1, a2, a3, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_24F01D550);
}

uint64_t sub_24F029348(uint64_t a1, void *a2, uint64_t a3, uint64_t (*a4)(uint64_t, void, void, void, void, void, void, void))
{
  return a4(a1, *v4, a2[2], a2[3], a2[4], a2[5], a2[6], a2[7]);
}

uint64_t sub_24F029368(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_24F029380(a1, a2, a3, (void (*)(unsigned char *, void, void, void, void, void, void, void))sub_24F01D550);
}

uint64_t sub_24F029380(uint64_t a1, void *a2, uint64_t a3, void (*a4)(unsigned char *, void, void, void, void, void, void, void))
{
  sub_24F072430();
  a4(v8, *v4, a2[2], a2[3], a2[4], a2[5], a2[6], a2[7]);
  return sub_24F072460();
}

double TVLibraryView.init(store:libraryPickerViewBuilder:canvasViewBuilder:workoutPlanBannerViewBuilder:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, unint64_t a10, uint64_t a11, char a12)
{
  type metadata accessor for TVLibraryView.FocusedView();
  swift_getWitnessTable();
  sub_24F0715A0();
  type metadata accessor for TVLibraryView.FocusedPlansView();
  swift_getWitnessTable();
  sub_24F0715A0();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = a2;
  *(void *)a9 = sub_24F006060;
  *(void *)(a9 + 8) = v13;
  *(unsigned char *)(a9 + 16) = 0;
  *(_DWORD *)(a9 + 17) = a10;
  *(_DWORD *)(a9 + 20) = a10 >> 24;
  *(void *)(a9 + 24) = a3;
  *(void *)(a9 + 32) = a4;
  *(void *)(a9 + 40) = a5;
  *(void *)(a9 + 48) = a6;
  *(void *)(a9 + 56) = a7;
  *(void *)(a9 + 64) = a8;
  *(unsigned char *)(a9 + 72) = a10;
  *(_DWORD *)(a9 + 73) = *(_DWORD *)v26;
  *(_DWORD *)(a9 + 76) = *(_DWORD *)&v26[3];
  *(void *)(a9 + 80) = a11;
  *(unsigned char *)(a9 + 88) = a12;
  *(_DWORD *)(a9 + 89) = *(_DWORD *)v25;
  *(_DWORD *)(a9 + 92) = *(_DWORD *)&v25[3];
  *(unsigned char *)(a9 + 96) = a10;
  *(_DWORD *)(a9 + 97) = *(_DWORD *)v24;
  *(_DWORD *)(a9 + 100) = *(_DWORD *)&v24[3];
  *(void *)(a9 + 104) = a11;
  *(unsigned char *)(a9 + 112) = a12;
  *(_DWORD *)(a9 + 116) = *(_DWORD *)&v23[3];
  *(_DWORD *)(a9 + 113) = *(_DWORD *)v23;
  *(_OWORD *)(a9 + 120) = xmmword_24F0754C0;
  double result = 45.0;
  *(_OWORD *)(a9 + 136) = xmmword_24F0754D0;
  return result;
}

uint64_t type metadata accessor for TVLibraryView.FocusedView()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for TVLibraryView.FocusedPlansView()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24F029604()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t TVLibraryView.body.getter@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  unsigned int v92 = a2;
  uint64_t v3 = sub_24F071980();
  uint64_t v90 = *(void *)(v3 - 8);
  uint64_t v91 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v89 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = a1[2];
  uint64_t v6 = sub_24F0716E0();
  uint64_t v88 = a1;
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  uint64_t v9 = a1[5];
  uint64_t v71 = a1[6];
  uint64_t v94 = a1[7];
  *(void *)&long long v127 = v5;
  *((void *)&v127 + 1) = v7;
  uint64_t v10 = v5;
  uint64_t v85 = v5;
  uint64_t v11 = v7;
  *(void *)&long long v128 = v8;
  *((void *)&v128 + 1) = v9;
  *(void *)&long long v129 = v71;
  *((void *)&v129 + 1) = v94;
  type metadata accessor for TVLibraryView.FocusedView();
  uint64_t v12 = sub_24F0721F0();
  uint64_t v125 = v9;
  uint64_t v126 = MEMORY[0x263F18860];
  uint64_t v86 = v9;
  uint64_t v78 = (char *)MEMORY[0x263F18E48];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v124 = swift_getWitnessTable();
  uint64_t v81 = v12;
  uint64_t v93 = swift_getWitnessTable();
  *(void *)&long long v127 = v6;
  *((void *)&v127 + 1) = v12;
  *(void *)&long long v128 = WitnessTable;
  *((void *)&v128 + 1) = v93;
  uint64_t v14 = MEMORY[0x263F1B1D8];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  *(void *)&long long v127 = v10;
  *((void *)&v127 + 1) = v11;
  uint64_t v84 = v8;
  *(void *)&long long v128 = v8;
  *((void *)&v128 + 1) = v9;
  uint64_t v15 = v71;
  uint64_t v16 = v94;
  *(void *)&long long v129 = v71;
  *((void *)&v129 + 1) = v94;
  type metadata accessor for TVLibraryView.FocusedPlansView();
  uint64_t v17 = sub_24F0721F0();
  uint64_t v123 = swift_getWitnessTable();
  uint64_t v18 = swift_getWitnessTable();
  *(void *)&long long v127 = v8;
  *((void *)&v127 + 1) = v17;
  *(void *)&long long v128 = v16;
  *((void *)&v128 + 1) = v18;
  uint64_t v80 = v14;
  swift_getOpaqueTypeMetadata2();
  *(void *)&long long v127 = v11;
  *((void *)&v127 + 1) = v17;
  uint64_t v83 = v11;
  *(void *)&long long v128 = v15;
  *((void *)&v128 + 1) = v18;
  swift_getOpaqueTypeMetadata2();
  swift_getTupleTypeMetadata2();
  sub_24F071F60();
  uint64_t v79 = (void *)MEMORY[0x263F1BAD0];
  swift_getWitnessTable();
  uint64_t v19 = sub_24F071E80();
  uint64_t v20 = swift_getWitnessTable();
  *(void *)&long long v127 = v19;
  *((void *)&v127 + 1) = v17;
  *(void *)&long long v128 = v20;
  *((void *)&v128 + 1) = v18;
  uint64_t v21 = MEMORY[0x263F1AA00];
  swift_getOpaqueTypeMetadata2();
  sub_24F0716E0();
  sub_24F0716E0();
  sub_24F0718B0();
  *(void *)&long long v127 = v19;
  *((void *)&v127 + 1) = v17;
  *(void *)&long long v128 = v20;
  *((void *)&v128 + 1) = v18;
  uint64_t v74 = v21;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v23 = MEMORY[0x263F19100];
  uint64_t v121 = OpaqueTypeConformance2;
  uint64_t v122 = MEMORY[0x263F19100];
  uint64_t v24 = swift_getWitnessTable();
  uint64_t v119 = v15;
  uint64_t v120 = v23;
  uint64_t v25 = swift_getWitnessTable();
  uint64_t v117 = v24;
  uint64_t v118 = v25;
  swift_getWitnessTable();
  uint64_t v26 = sub_24F0715C0();
  uint64_t v27 = swift_getWitnessTable();
  *(void *)&long long v127 = v26;
  *((void *)&v127 + 1) = v27;
  uint64_t v28 = swift_getOpaqueTypeMetadata2();
  *(void *)&long long v127 = v26;
  *((void *)&v127 + 1) = v27;
  uint64_t v29 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v127 = v28;
  *((void *)&v127 + 1) = v29;
  uint64_t v30 = swift_getOpaqueTypeMetadata2();
  *(void *)&long long v127 = v28;
  *((void *)&v127 + 1) = v29;
  uint64_t v31 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v127 = v30;
  *((void *)&v127 + 1) = v31;
  uint64_t v32 = swift_getOpaqueTypeMetadata2();
  *(void *)&long long v127 = v30;
  *((void *)&v127 + 1) = v31;
  uint64_t v33 = swift_getOpaqueTypeConformance2();
  uint64_t v34 = v81;
  *(void *)&long long v127 = v32;
  *((void *)&v127 + 1) = v81;
  uint64_t v35 = v93;
  *(void *)&long long v128 = v33;
  *((void *)&v128 + 1) = v93;
  swift_getOpaqueTypeMetadata2();
  swift_getTupleTypeMetadata2();
  sub_24F071F60();
  swift_getWitnessTable();
  uint64_t v36 = sub_24F071E60();
  uint64_t v77 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  char v38 = (char *)&v71 - v37;
  uint64_t v39 = swift_getWitnessTable();
  *(void *)&long long v127 = v36;
  *((void *)&v127 + 1) = v34;
  *(void *)&long long v128 = v39;
  *((void *)&v128 + 1) = v35;
  uint64_t v40 = v39;
  uint64_t v73 = swift_getOpaqueTypeMetadata2();
  uint64_t v76 = *(void *)(v73 - 8);
  MEMORY[0x270FA5388](v73);
  char v42 = (char *)&v71 - v41;
  uint64_t v43 = sub_24F0716E0();
  uint64_t v80 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v72 = (char *)&v71 - v44;
  uint64_t v75 = v45;
  uint64_t v46 = sub_24F0716E0();
  OpaqueTypeMetadata2 = *(void *)(v46 - 8);
  uint64_t v47 = MEMORY[0x270FA5388](v46);
  uint64_t v78 = (char *)&v71 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v47);
  uint64_t v79 = (uint64_t *)((char *)&v71 - v49);
  long long v50 = v87[7];
  long long v133 = v87[6];
  long long v134 = v50;
  long long v135 = v87[8];
  uint64_t v136 = *((void *)v87 + 18);
  long long v51 = v87[3];
  long long v129 = v87[2];
  long long v130 = v51;
  long long v52 = v87[5];
  long long v131 = v87[4];
  long long v132 = v52;
  long long v53 = v87[1];
  long long v127 = *v87;
  long long v128 = v53;
  sub_24F071840();
  unint64_t v87 = (long long *)*((void *)&v135 + 1);
  uint64_t v95 = v85;
  uint64_t v96 = v83;
  uint64_t v97 = v84;
  uint64_t v98 = v86;
  uint64_t v99 = v15;
  uint64_t v100 = v94;
  uint64_t v101 = &v127;
  sub_24F071E50();
  long long v113 = v133;
  long long v114 = v134;
  long long v115 = v135;
  uint64_t v116 = v136;
  long long v109 = v129;
  long long v110 = v130;
  long long v111 = v131;
  long long v112 = v132;
  long long v107 = v127;
  long long v108 = v128;
  *(void *)&long long v107 = sub_24F0290DC((uint64_t)v88);
  *((void *)&v107 + 1) = v54;
  LOBYTE(v108) = v55;
  char v106 = 1;
  unint64_t v56 = v89;
  sub_24F071970();
  uint64_t v57 = swift_checkMetadataState();
  uint64_t v58 = v40;
  uint64_t v59 = v40;
  uint64_t v60 = v93;
  MEMORY[0x2533526A0](&v107, &v106, v56, v36, v57, v59, v93);
  uint64_t v61 = v72;
  (*(void (**)(char *, uint64_t))(v90 + 8))(v56, v91);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v38, v36);
  sub_24F071A10();
  *(void *)&long long v107 = v36;
  *((void *)&v107 + 1) = v57;
  *(void *)&long long v108 = v58;
  *((void *)&v108 + 1) = v60;
  uint64_t v62 = swift_getOpaqueTypeConformance2();
  uint64_t v63 = v73;
  sub_24F071CE0();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v42, v63);
  LOBYTE(v63) = sub_24F071A10();
  sub_24F071A20();
  sub_24F071A20();
  if (sub_24F071A20() != v63) {
    sub_24F071A20();
  }
  sub_24F0716F0();
  uint64_t v104 = v62;
  uint64_t v105 = MEMORY[0x263F18C10];
  uint64_t v64 = v75;
  uint64_t v65 = swift_getWitnessTable();
  unint64_t v66 = v78;
  sub_24F071C10();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v61, v64);
  uint64_t v102 = v65;
  uint64_t v103 = MEMORY[0x263F1A450];
  uint64_t v67 = swift_getWitnessTable();
  unint64_t v68 = v79;
  sub_24F005EE8(v79, v66, v46, v67);
  uint64_t v69 = *(void (**)(char *, uint64_t))(OpaqueTypeMetadata2 + 8);
  v69(v66, v46);
  sub_24F005EE8(v92, v68, v46, v67);
  return ((uint64_t (*)(void *, uint64_t))v69)(v68, v46);
}

uint64_t sub_24F02A110@<X0>(void (**a1)(uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v132 = a2;
  uint64_t v133 = a5;
  uint64_t v124 = a8;
  uint64_t v128 = a4;
  *(void *)&long long v153 = a6;
  *((void *)&v153 + 1) = a7;
  uint64_t v130 = a6;
  uint64_t v135 = a7;
  type metadata accessor for TVLibraryView.FocusedPlansView();
  uint64_t v10 = sub_24F0721F0();
  uint64_t WitnessTable = swift_getWitnessTable();
  long long v129 = (void *)MEMORY[0x263F8EE30];
  uint64_t v11 = swift_getWitnessTable();
  uint64_t v131 = MEMORY[0x263F1B1D8];
  swift_getOpaqueTypeMetadata2();
  uint64_t v134 = a3;
  swift_getOpaqueTypeMetadata2();
  swift_getTupleTypeMetadata2();
  sub_24F071F60();
  swift_getWitnessTable();
  uint64_t v12 = sub_24F071E80();
  uint64_t v13 = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  sub_24F0716E0();
  sub_24F0716E0();
  uint64_t v14 = sub_24F0718B0();
  *(void *)&long long v151 = v12;
  *((void *)&v151 + 1) = v10;
  *(void *)&long long v152 = v13;
  *((void *)&v152 + 1) = v11;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v169 = MEMORY[0x263F19100];
  uint64_t v127 = MEMORY[0x263F18E48];
  uint64_t v15 = v130;
  uint64_t v166 = v130;
  uint64_t v167 = MEMORY[0x263F19100];
  uint64_t v164 = swift_getWitnessTable();
  uint64_t v165 = swift_getWitnessTable();
  uint64_t v121 = v14;
  uint64_t v122 = swift_getWitnessTable();
  uint64_t v16 = sub_24F0715C0();
  uint64_t v123 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v118 = (char *)&v96 - v17;
  uint64_t v18 = swift_getWitnessTable();
  *(void *)&long long v151 = v16;
  *((void *)&v151 + 1) = v18;
  uint64_t v19 = v16;
  uint64_t v115 = v16;
  uint64_t v116 = v18;
  uint64_t v20 = v18;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v120 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  long long v114 = (char *)&v96 - v22;
  *(void *)&long long v151 = v19;
  *((void *)&v151 + 1) = v20;
  uint64_t v23 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v151 = OpaqueTypeMetadata2;
  *((void *)&v151 + 1) = v23;
  uint64_t v24 = OpaqueTypeMetadata2;
  uint64_t v109 = OpaqueTypeMetadata2;
  uint64_t v110 = v23;
  uint64_t v25 = v23;
  uint64_t v26 = swift_getOpaqueTypeMetadata2();
  uint64_t v117 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  long long v111 = (char *)&v96 - v27;
  *(void *)&long long v151 = v24;
  *((void *)&v151 + 1) = v25;
  uint64_t v28 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v151 = v26;
  *((void *)&v151 + 1) = v28;
  uint64_t v103 = v26;
  uint64_t v104 = v28;
  uint64_t v29 = v28;
  uint64_t v30 = swift_getOpaqueTypeMetadata2();
  uint64_t v107 = v30;
  uint64_t v119 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v105 = (char *)&v96 - v31;
  uint64_t v33 = v132;
  uint64_t v32 = v133;
  *(void *)&long long v151 = v132;
  *((void *)&v151 + 1) = v134;
  *(void *)&long long v152 = v128;
  *((void *)&v152 + 1) = v133;
  *(void *)&long long v153 = v15;
  *((void *)&v153 + 1) = v135;
  type metadata accessor for TVLibraryView.FocusedView();
  uint64_t v34 = sub_24F0721F0();
  *(void *)&long long v151 = v26;
  *((void *)&v151 + 1) = v29;
  uint64_t v35 = swift_getOpaqueTypeConformance2();
  uint64_t v106 = v35;
  uint64_t v163 = swift_getWitnessTable();
  uint64_t v36 = swift_getWitnessTable();
  *(void *)&long long v151 = v30;
  *((void *)&v151 + 1) = v34;
  uint64_t v99 = v34;
  *(void *)&long long v152 = v35;
  *((void *)&v152 + 1) = v36;
  uint64_t v37 = v36;
  uint64_t v97 = v36;
  uint64_t v38 = swift_getOpaqueTypeMetadata2();
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v112 = v38;
  uint64_t v113 = v39;
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  uint64_t v102 = (char *)&v96 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  long long v108 = (char *)&v96 - v43;
  uint64_t v44 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v46 = (char *)&v96 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_24F0716E0();
  uint64_t v101 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  uint64_t v96 = (char *)&v96 - v48;
  uint64_t v161 = v32;
  uint64_t v162 = MEMORY[0x263F18860];
  uint64_t v100 = (void (*)(void, void))swift_getWitnessTable();
  *(void *)&long long v151 = v47;
  *((void *)&v151 + 1) = v34;
  *(void *)&long long v152 = v100;
  *((void *)&v152 + 1) = v37;
  uint64_t v49 = swift_getOpaqueTypeMetadata2();
  uint64_t v50 = *(void *)(v49 - 8);
  uint64_t v126 = v49;
  uint64_t v127 = v50;
  uint64_t v51 = MEMORY[0x270FA5388](v49);
  long long v53 = (char *)&v96 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = MEMORY[0x270FA5388](v51);
  long long v129 = (char **)((char *)&v96 - v55);
  a1[3](v54);
  sub_24F071F30();
  uint64_t v57 = v132;
  uint64_t v56 = v133;
  sub_24F071C90();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v46, v57);
  long long v58 = *((_OWORD *)a1 + 7);
  long long v157 = *((_OWORD *)a1 + 6);
  long long v158 = v58;
  long long v159 = *((_OWORD *)a1 + 8);
  uint64_t v160 = a1[18];
  long long v59 = *((_OWORD *)a1 + 3);
  long long v153 = *((_OWORD *)a1 + 2);
  long long v154 = v59;
  long long v60 = *((_OWORD *)a1 + 5);
  long long v155 = *((_OWORD *)a1 + 4);
  long long v156 = v60;
  long long v61 = *((_OWORD *)a1 + 1);
  long long v151 = *(_OWORD *)a1;
  long long v152 = v61;
  uint64_t v145 = v57;
  uint64_t v146 = v134;
  uint64_t v147 = v128;
  uint64_t v148 = v56;
  uint64_t v149 = v130;
  uint64_t v150 = v135;
  uint64_t v98 = type metadata accessor for TVLibraryView();
  *(void *)&long long v151 = sub_24F0290DC(v98);
  *((void *)&v151 + 1) = v62;
  LOBYTE(v152) = v63;
  LOBYTE(v145) = 0;
  uint64_t v64 = swift_checkMetadataState();
  uint64_t v65 = v53;
  unint64_t v66 = v100;
  uint64_t v67 = v96;
  uint64_t v68 = v97;
  sub_24F071CB0();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v101 + 8))(v67, v47);
  *(void *)&long long v151 = v47;
  *((void *)&v151 + 1) = v64;
  *(void *)&long long v152 = v66;
  *((void *)&v152 + 1) = v68;
  uint64_t v69 = v68;
  uint64_t v99 = swift_getOpaqueTypeConformance2();
  uint64_t v125 = v65;
  uint64_t v70 = v126;
  sub_24F005EE8(v129, v65, v126, v99);
  uint64_t v100 = *(void (**)(void, void))(v127 + 8);
  uint64_t v101 = v127 + 8;
  v100(v65, v70);
  sub_24F0719C0();
  uint64_t v136 = v132;
  uint64_t v137 = v134;
  uint64_t v138 = v128;
  uint64_t v139 = v133;
  uint64_t v140 = v130;
  uint64_t v141 = v135;
  uint64_t v142 = a1;
  uint64_t v71 = v118;
  sub_24F0070CC();
  sub_24F0719C0();
  sub_24F071F30();
  uint64_t v73 = v114;
  uint64_t v72 = v115;
  sub_24F071C80();
  (*(void (**)(char *, uint64_t))(v123 + 8))(v71, v72);
  uint64_t v74 = v111;
  uint64_t v75 = v109;
  sub_24F071B20();
  (*(void (**)(char *, uint64_t))(v120 + 8))(v73, v75);
  uint64_t v76 = v105;
  uint64_t v77 = v103;
  sub_24F071C40();
  (*(void (**)(char *, uint64_t))(v117 + 8))(v74, v77);
  long long v78 = *((_OWORD *)a1 + 7);
  long long v157 = *((_OWORD *)a1 + 6);
  long long v158 = v78;
  long long v159 = *((_OWORD *)a1 + 8);
  uint64_t v160 = a1[18];
  long long v79 = *((_OWORD *)a1 + 3);
  long long v153 = *((_OWORD *)a1 + 2);
  long long v154 = v79;
  long long v80 = *((_OWORD *)a1 + 5);
  long long v155 = *((_OWORD *)a1 + 4);
  long long v156 = v80;
  long long v81 = *((_OWORD *)a1 + 1);
  long long v151 = *(_OWORD *)a1;
  long long v152 = v81;
  *(void *)&long long v151 = sub_24F0290DC(v98);
  *((void *)&v151 + 1) = v82;
  LOBYTE(v152) = v83;
  LOBYTE(v145) = 1;
  uint64_t v84 = v102;
  uint64_t v86 = v106;
  uint64_t v85 = v107;
  sub_24F071CB0();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v119 + 8))(v76, v85);
  *(void *)&long long v151 = v85;
  *((void *)&v151 + 1) = v64;
  *(void *)&long long v152 = v86;
  *((void *)&v152 + 1) = v69;
  uint64_t v87 = swift_getOpaqueTypeConformance2();
  uint64_t v88 = v108;
  uint64_t v89 = v112;
  sub_24F005EE8(v108, v84, v112, v87);
  uint64_t v90 = v113;
  uint64_t v91 = *(void (**)(char *, uint64_t))(v113 + 8);
  v91(v84, v89);
  uint64_t v92 = v126;
  uint64_t v93 = v125;
  (*(void (**)(char *, void *, uint64_t))(v127 + 16))(v125, v129, v126);
  *(void *)&long long v151 = v93;
  (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v84, v88, v89);
  *((void *)&v151 + 1) = v84;
  uint64_t v145 = v92;
  uint64_t v146 = v89;
  uint64_t v143 = v99;
  uint64_t v144 = v87;
  sub_24F03FE50((uint64_t)&v151, 2uLL, (uint64_t)&v145);
  v91(v88, v89);
  uint64_t v94 = (uint64_t (*)(char *, uint64_t))v100;
  v100(v129, v92);
  v91(v84, v89);
  return v94(v125, v92);
}

uint64_t sub_24F02AE0C()
{
  return sub_24F02CDB0((uint64_t (*)(void, void, void, void, void, void, void))sub_24F02A110);
}

uint64_t sub_24F02AE24@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  uint64_t v112 = a2;
  uint64_t v113 = a5;
  uint64_t v110 = a8;
  uint64_t v88 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v87 = (char *)&v87 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_24F0716E0();
  uint64_t v90 = *(void *)(v16 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v89 = (char *)&v87 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v104 = (char **)((char *)&v87 - v19);
  uint64_t v20 = sub_24F071980();
  uint64_t v102 = *(void *)(v20 - 8);
  uint64_t v103 = v20;
  MEMORY[0x270FA5388](v20);
  uint64_t v101 = (char *)&v87 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v133 = a2;
  *((void *)&v133 + 1) = a3;
  *(void *)&unsigned long long v134 = a4;
  *((void *)&v134 + 1) = a5;
  *(void *)&long long v135 = a6;
  *((void *)&v135 + 1) = a7;
  uint64_t v22 = a7;
  uint64_t v114 = a7;
  type metadata accessor for TVLibraryView.FocusedPlansView();
  uint64_t v23 = sub_24F0721F0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v24 = swift_getWitnessTable();
  *(void *)&long long v133 = a4;
  *((void *)&v133 + 1) = v23;
  *(void *)&unsigned long long v134 = v22;
  *((void *)&v134 + 1) = v24;
  swift_getOpaqueTypeMetadata2();
  *(void *)&long long v133 = a3;
  *((void *)&v133 + 1) = v23;
  *(void *)&unsigned long long v134 = a6;
  *((void *)&v134 + 1) = v24;
  swift_getOpaqueTypeMetadata2();
  swift_getTupleTypeMetadata2();
  uint64_t v25 = sub_24F071F60();
  uint64_t v91 = swift_getWitnessTable();
  uint64_t v92 = v25;
  uint64_t v26 = sub_24F071E80();
  uint64_t v95 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v93 = (char *)&v87 - v27;
  uint64_t v28 = swift_getWitnessTable();
  uint64_t v105 = v26;
  *(void *)&long long v133 = v26;
  *((void *)&v133 + 1) = v23;
  *((void *)&v115 + 1) = v24;
  uint64_t v116 = v23;
  *(void *)&unsigned long long v115 = v28;
  *(void *)&unsigned long long v134 = v28;
  *((void *)&v134 + 1) = v24;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v96 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v94 = (char *)&v87 - v30;
  uint64_t v97 = v31;
  uint64_t v32 = sub_24F0716E0();
  uint64_t v99 = *(void *)(v32 - 8);
  uint64_t v33 = MEMORY[0x270FA5388](v32);
  uint64_t v35 = (char **)((char *)&v87 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v33);
  uint64_t v98 = (char **)((char *)&v87 - v36);
  uint64_t v117 = v37;
  uint64_t v109 = v16;
  uint64_t v38 = sub_24F0718B0();
  uint64_t v107 = *(void *)(v38 - 8);
  uint64_t v108 = v38;
  MEMORY[0x270FA5388](v38);
  uint64_t v40 = (char *)&v87 - v39;
  long long v41 = a1[7];
  long long v139 = a1[6];
  long long v140 = v41;
  long long v141 = a1[8];
  uint64_t v142 = *((void *)a1 + 18);
  long long v42 = a1[3];
  long long v135 = a1[2];
  long long v136 = v42;
  long long v43 = a1[5];
  long long v137 = a1[4];
  long long v138 = v43;
  unsigned long long v44 = a1[1];
  long long v133 = *a1;
  unsigned long long v134 = v44;
  v132[0] = v112;
  v132[1] = a3;
  uint64_t v100 = a4;
  v132[2] = a4;
  v132[3] = v113;
  uint64_t v45 = a6;
  v132[4] = a6;
  v132[5] = v114;
  uint64_t v46 = type metadata accessor for TVLibraryView();
  sub_24F01A880();
  swift_getKeyPath();
  sub_24F071FE0();
  swift_release();
  swift_release();
  uint64_t v47 = MEMORY[0x263F19100];
  uint64_t v106 = v40;
  uint64_t v111 = v45;
  switch((char)v133)
  {
    case 3:
      swift_bridgeObjectRelease();
      goto LABEL_4;
    default:
      char v48 = sub_24F072400();
      uint64_t v49 = swift_bridgeObjectRelease();
      if (v48)
      {
LABEL_4:
        uint64_t v50 = sub_24F071870();
        MEMORY[0x270FA5388](v50);
        uint64_t v51 = v93;
        sub_24F071E70();
        long long v52 = a1[7];
        long long v139 = a1[6];
        long long v140 = v52;
        long long v141 = a1[8];
        uint64_t v142 = *((void *)a1 + 18);
        long long v53 = a1[3];
        long long v135 = a1[2];
        long long v136 = v53;
        long long v54 = a1[5];
        long long v137 = a1[4];
        long long v138 = v54;
        unsigned long long v55 = a1[1];
        long long v133 = *a1;
        unsigned long long v134 = v55;
        *(void *)&long long v133 = sub_24F0291AC(v46);
        *((void *)&v133 + 1) = v56;
        LOBYTE(v134) = v57;
        LOBYTE(v132[0]) = 0;
        long long v58 = v101;
        sub_24F071970();
        uint64_t v59 = swift_checkMetadataState();
        long long v60 = v94;
        uint64_t v61 = v105;
        unint64_t v63 = *((void *)&v115 + 1);
        unint64_t v62 = v115;
        MEMORY[0x2533526A0](&v133, v132, v58, v105, v59);
        (*(void (**)(char *, uint64_t))(v102 + 8))(v58, v103);
        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v95 + 8))(v51, v61);
        sub_24F071F30();
        *(void *)&long long v133 = v61;
        *((void *)&v133 + 1) = v59;
        unsigned long long v134 = __PAIR128__(v63, v62);
        uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
        uint64_t v64 = v97;
        sub_24F071CA0();
        (*(void (**)(char *, uint64_t))(v96 + 8))(v60, v64);
        uint64_t v120 = OpaqueTypeConformance2;
        uint64_t v65 = MEMORY[0x263F19100];
        uint64_t v121 = MEMORY[0x263F19100];
        uint64_t v66 = v117;
        uint64_t v67 = swift_getWitnessTable();
        uint64_t v68 = v98;
        sub_24F005EE8(v98, v35, v66, v67);
        uint64_t v69 = *(void (**)(void *, uint64_t))(v99 + 8);
        v69(v35, v66);
        sub_24F005EE8(v35, v68, v66, v67);
        uint64_t v118 = v111;
        uint64_t v119 = v65;
        swift_getWitnessTable();
        uint64_t v70 = v106;
        sub_24F068E04((uint64_t)v35, v66);
        uint64_t v71 = v61;
        uint64_t v73 = *((void *)&v115 + 1);
        uint64_t v72 = v115;
        v69(v35, v66);
        v69(v68, v66);
      }
      else
      {
        uint64_t v74 = v87;
        (*((void (**)(uint64_t))a1 + 5))(v49);
        sub_24F071F30();
        uint64_t v75 = v89;
        sub_24F071CA0();
        (*(void (**)(char *, uint64_t))(v88 + 8))(v74, a3);
        uint64_t v130 = v45;
        uint64_t v131 = v47;
        uint64_t v76 = v109;
        uint64_t v77 = swift_getWitnessTable();
        long long v78 = v104;
        sub_24F005EE8(v104, v75, v76, v77);
        long long v79 = *(void (**)(void *, uint64_t))(v90 + 8);
        v79(v75, v76);
        sub_24F005EE8(v75, v78, v76, v77);
        uint64_t v71 = v105;
        uint64_t v73 = *((void *)&v115 + 1);
        *(void *)&long long v133 = v105;
        *((void *)&v133 + 1) = v116;
        uint64_t v72 = v115;
        unsigned long long v134 = v115;
        uint64_t v128 = swift_getOpaqueTypeConformance2();
        uint64_t v129 = MEMORY[0x263F19100];
        swift_getWitnessTable();
        uint64_t v70 = v106;
        sub_24F068EFC((uint64_t)v75, v117, v76);
        v79(v75, v76);
        v79(v104, v76);
      }
      *(void *)&long long v133 = v71;
      *((void *)&v133 + 1) = v116;
      *(void *)&unsigned long long v134 = v72;
      *((void *)&v134 + 1) = v73;
      uint64_t v126 = swift_getOpaqueTypeConformance2();
      uint64_t v80 = MEMORY[0x263F19100];
      uint64_t v127 = MEMORY[0x263F19100];
      uint64_t v81 = swift_getWitnessTable();
      uint64_t v124 = v111;
      uint64_t v125 = v80;
      uint64_t v82 = swift_getWitnessTable();
      uint64_t v122 = v81;
      uint64_t v123 = v82;
      uint64_t v83 = v108;
      uint64_t v84 = swift_getWitnessTable();
      sub_24F005EE8(v110, v70, v83, v84);
      return (*(uint64_t (**)(char *, uint64_t))(v107 + 8))(v70, v83);
  }
}

uint64_t sub_24F02BACC@<X0>(void (**a1)(uint64_t)@<X0>, uint64_t (*a2)(void, void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v73 = a5;
  uint64_t v72 = a2;
  uint64_t v80 = a7;
  uint64_t v79 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v76 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v93 = v11;
  *((void *)&v93 + 1) = v12;
  uint64_t v13 = v12;
  *(void *)&long long v94 = v14;
  *((void *)&v94 + 1) = v15;
  *(void *)&long long v95 = v16;
  *((void *)&v95 + 1) = v17;
  uint64_t v18 = v16;
  type metadata accessor for TVLibraryView.FocusedPlansView();
  uint64_t v19 = sub_24F0721F0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v20 = swift_getWitnessTable();
  *(void *)&long long v93 = v13;
  *((void *)&v93 + 1) = v19;
  uint64_t v21 = v13;
  uint64_t v71 = v13;
  *(void *)&long long v94 = v18;
  *((void *)&v94 + 1) = v20;
  uint64_t v70 = v18;
  uint64_t v22 = v20;
  uint64_t v67 = v20;
  uint64_t v83 = MEMORY[0x263F1B1D8];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v78 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v74 = (char *)&v67 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v75 = (char *)&v67 - v26;
  uint64_t OpaqueTypeConformance2 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v28 = (char *)&v67 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v93 = a4;
  *((void *)&v93 + 1) = v19;
  *(void *)&long long v94 = a6;
  *((void *)&v94 + 1) = v22;
  uint64_t v82 = swift_getOpaqueTypeMetadata2();
  uint64_t v84 = *(void *)(v82 - 8);
  uint64_t v29 = MEMORY[0x270FA5388](v82);
  uint64_t v31 = (char *)&v67 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = MEMORY[0x270FA5388](v29);
  uint64_t v81 = (uint64_t *)((char *)&v67 - v33);
  a1[7](v32);
  long long v34 = *((_OWORD *)a1 + 7);
  long long v99 = *((_OWORD *)a1 + 6);
  long long v100 = v34;
  long long v101 = *((_OWORD *)a1 + 8);
  uint64_t v102 = a1[18];
  long long v35 = *((_OWORD *)a1 + 3);
  long long v95 = *((_OWORD *)a1 + 2);
  long long v96 = v35;
  long long v36 = *((_OWORD *)a1 + 5);
  long long v97 = *((_OWORD *)a1 + 4);
  long long v98 = v36;
  long long v37 = *((_OWORD *)a1 + 1);
  long long v93 = *(_OWORD *)a1;
  long long v94 = v37;
  uint64_t v87 = v72;
  uint64_t v88 = v21;
  uint64_t v89 = a4;
  uint64_t v90 = v73;
  uint64_t v91 = v18;
  uint64_t v92 = a6;
  uint64_t v68 = type metadata accessor for TVLibraryView();
  *(void *)&long long v93 = sub_24F0291AC(v68);
  *((void *)&v93 + 1) = v38;
  LOBYTE(v94) = v39;
  LOBYTE(v87) = 0;
  uint64_t v40 = swift_checkMetadataState();
  uint64_t v41 = v67;
  sub_24F071CB0();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(OpaqueTypeConformance2 + 8))(v28, a4);
  *(void *)&long long v93 = a4;
  *((void *)&v93 + 1) = v40;
  *(void *)&long long v94 = a6;
  *((void *)&v94 + 1) = v41;
  uint64_t v42 = v41;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v43 = v82;
  sub_24F005EE8(v81, v31, v82, OpaqueTypeConformance2);
  uint64_t v72 = *(uint64_t (**)(void, void))(v84 + 8);
  uint64_t v73 = v84 + 8;
  uint64_t v44 = v72(v31, v43);
  uint64_t v45 = v76;
  a1[5](v44);
  long long v46 = *((_OWORD *)a1 + 7);
  long long v99 = *((_OWORD *)a1 + 6);
  long long v100 = v46;
  long long v101 = *((_OWORD *)a1 + 8);
  uint64_t v102 = a1[18];
  long long v47 = *((_OWORD *)a1 + 3);
  long long v95 = *((_OWORD *)a1 + 2);
  long long v96 = v47;
  long long v48 = *((_OWORD *)a1 + 5);
  long long v97 = *((_OWORD *)a1 + 4);
  long long v98 = v48;
  long long v49 = *((_OWORD *)a1 + 1);
  long long v93 = *(_OWORD *)a1;
  long long v94 = v49;
  *(void *)&long long v93 = sub_24F0291AC(v68);
  *((void *)&v93 + 1) = v50;
  LOBYTE(v94) = v51;
  LOBYTE(v87) = 1;
  long long v52 = v74;
  uint64_t v53 = v71;
  uint64_t v54 = v70;
  sub_24F071CB0();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v45, v53);
  *(void *)&long long v93 = v53;
  *((void *)&v93 + 1) = v40;
  *(void *)&long long v94 = v54;
  *((void *)&v94 + 1) = v42;
  uint64_t v55 = swift_getOpaqueTypeConformance2();
  uint64_t v56 = v75;
  uint64_t v57 = OpaqueTypeMetadata2;
  sub_24F005EE8(v75, v52, OpaqueTypeMetadata2, v55);
  uint64_t v58 = v78;
  uint64_t v59 = *(void (**)(char *, uint64_t))(v78 + 8);
  long long v60 = v52;
  v59(v52, v57);
  uint64_t v61 = v31;
  unint64_t v62 = v31;
  unint64_t v63 = v81;
  uint64_t v64 = v82;
  (*(void (**)(char *, void *, uint64_t))(v84 + 16))(v62, v81, v82);
  *(void *)&long long v93 = v61;
  (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v60, v56, v57);
  *((void *)&v93 + 1) = v60;
  uint64_t v87 = (uint64_t (*)(void, void))v64;
  uint64_t v88 = v57;
  uint64_t v85 = OpaqueTypeConformance2;
  uint64_t v86 = v55;
  sub_24F03FE50((uint64_t)&v93, 2uLL, (uint64_t)&v87);
  v59(v56, v57);
  uint64_t v65 = (uint64_t (*)(char *, uint64_t))v72;
  v72(v63, v64);
  v59(v60, v57);
  return v65(v61, v64);
}

uint64_t sub_24F02C234()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24F02C284()
{
  sub_24F007284();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_24F02C2E8(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_24F0072D8();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = a2[3];
  uint64_t v7 = a2[8];
  long long v8 = *((_OWORD *)a2 + 3);
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
  *(_OWORD *)(a1 + 48) = v8;
  *(void *)(a1 + 64) = v7;
  *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
  *(void *)(a1 + 80) = a2[10];
  *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
  *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
  *(void *)(a1 + 104) = a2[13];
  *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 15);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 17);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_24F02C3D0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_24F0072D8();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  sub_24F007284();
  uint64_t v7 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v7;
  swift_retain();
  swift_release();
  uint64_t v8 = a2[6];
  *(void *)(a1 + 40) = a2[5];
  *(void *)(a1 + 48) = v8;
  swift_retain();
  swift_release();
  uint64_t v9 = a2[8];
  *(void *)(a1 + 56) = a2[7];
  *(void *)(a1 + 64) = v9;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
  *(void *)(a1 + 80) = a2[10];
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
  *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
  *(void *)(a1 + 104) = a2[13];
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
  *(void *)(a1 + 120) = a2[15];
  *(void *)(a1 + 128) = a2[16];
  *(void *)(a1 + 136) = a2[17];
  *(void *)(a1 + 144) = a2[18];
  return a1;
}

__n128 __swift_memcpy152_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 128);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t sub_24F02C520(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  sub_24F007284();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_release();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_release();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  return a1;
}

uint64_t sub_24F02C5E8(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 152)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_24F02C630(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 152) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 152) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for TVLibraryView()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24F02C6AC()
{
  return swift_getWitnessTable();
}

ValueMetadata *type metadata accessor for Layout()
{
  return &type metadata for Layout;
}

unsigned char *sub_24F02CC54(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F02CD20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_24F02CD48()
{
  return swift_getWitnessTable();
}

uint64_t sub_24F02CD64()
{
  return swift_getWitnessTable();
}

uint64_t sub_24F02CD80()
{
  return sub_24F02CDB0((uint64_t (*)(void, void, void, void, void, void, void))sub_24F02AE24);
}

uint64_t sub_24F02CD98()
{
  return sub_24F02CDB0((uint64_t (*)(void, void, void, void, void, void, void))sub_24F02BACC);
}

uint64_t sub_24F02CDB0(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  return a1(v1[8], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

__n128 LibraryGalleryFeature.init(environment:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t LibraryGalleryFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, uint64_t a2, unint64_t *a3, unsigned char *a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3320);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t result = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a4 == 1)
  {
    uint64_t v14 = *v4;
    uint64_t v13 = v4[1];
    switch(*(unsigned char *)(a2 + 2))
    {
      case 6:
        uint64_t result = swift_bridgeObjectRelease();
        break;
      default:
        char v15 = sub_24F072400();
        uint64_t result = swift_bridgeObjectRelease();
        if ((v15 & 1) == 0)
        {
          uint64_t v16 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2699A32A8);
          uint64_t v17 = &v12[v16[16]];
          uint64_t v18 = &v12[v16[20]];
          uint64_t v19 = &v12[v16[24]];
          sub_24F02D1E4();
          sub_24F072230();
          sub_24F072130();
          uint64_t v20 = *MEMORY[0x263F39580];
          uint64_t v21 = sub_24F071FD0();
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v17, v20, v21);
          uint64_t v22 = *MEMORY[0x263F39570];
          uint64_t v23 = sub_24F071FC0();
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v18, v22, v23);
          uint64_t v24 = swift_allocObject();
          *(void *)(v24 + 16) = v14;
          *(void *)(v24 + 24) = v13;
          *(void *)uint64_t v19 = &unk_2699A38C8;
          *((void *)v19 + 1) = v24;
          (*(void (**)(char *, void, uint64_t))(v9 + 104))(v12, *MEMORY[0x263F39530], v8);
          unint64_t v25 = *a3;
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v25 = sub_24F0145D4(0, *(void *)(v25 + 16) + 1, 1, v25);
          }
          unint64_t v27 = *(void *)(v25 + 16);
          unint64_t v26 = *(void *)(v25 + 24);
          if (v27 >= v26 >> 1) {
            unint64_t v25 = sub_24F0145D4(v26 > 1, v27 + 1, 1, v25);
          }
          *(void *)(v25 + 16) = v27 + 1;
          uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v9 + 32))(v25+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v27, v12, v8);
          *a3 = v25;
        }
        break;
    }
  }
  return result;
}

unint64_t sub_24F02D1E4()
{
  unint64_t result = qword_2699A38B8;
  if (!qword_2699A38B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_2699A38B8);
  }
  return result;
}

uint64_t sub_24F02D238(uint64_t a1, int *a2)
{
  v2[2] = sub_24F072120();
  v2[3] = sub_24F072110();
  unsigned int v6 = (uint64_t (*)(void))((char *)a2 + *a2);
  unsigned int v4 = (void *)swift_task_alloc();
  v2[4] = v4;
  *unsigned int v4 = v2;
  v4[1] = sub_24F013A4C;
  return v6(0);
}

uint64_t sub_24F02D330()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24F02D368(uint64_t a1)
{
  unsigned int v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24F013D58;
  return sub_24F02D238(a1, v4);
}

unint64_t sub_24F02D41C()
{
  unint64_t result = qword_2699A38D0;
  if (!qword_2699A38D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A38D0);
  }
  return result;
}

unint64_t sub_24F02D474()
{
  unint64_t result = qword_2699A38D8;
  if (!qword_2699A38D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A38D8);
  }
  return result;
}

unint64_t sub_24F02D4CC()
{
  unint64_t result = qword_2699A38E0;
  if (!qword_2699A38E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A38E0);
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryGalleryFeature()
{
  return &type metadata for LibraryGalleryFeature;
}

unsigned char *storeEnumTagSinglePayload for LibraryGalleryFeature.TaskIdentifier(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24F02D5CCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryGalleryFeature.TaskIdentifier()
{
  return &type metadata for LibraryGalleryFeature.TaskIdentifier;
}

unint64_t sub_24F02D608()
{
  unint64_t result = qword_2699A38E8;
  if (!qword_2699A38E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A38E8);
  }
  return result;
}

uint64_t sub_24F02D65C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x7374756F6B726F77;
  unint64_t v3 = 0xE800000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x7374756F6B726F77;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x697461746964656DLL;
      unint64_t v3 = 0xEB00000000736E6FLL;
      break;
    case 2:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x736B63617473;
      break;
    case 3:
      uint64_t v5 = 0x5074756F6B726F77;
      unint64_t v3 = 0xEC000000736E616CLL;
      break;
    case 4:
      uint64_t v5 = 0x736D6172676F7270;
      break;
    case 5:
      uint64_t v5 = 0x64616F6C6E776F64;
      unint64_t v3 = 0xEA00000000006465;
      break;
    case 6:
      uint64_t v5 = 0x796C746E65636572;
      unint64_t v3 = 0xED00006465646441;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE800000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEB00000000736E6FLL;
      if (v5 == 0x697461746964656DLL) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x736B63617473) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 3:
      unint64_t v6 = 0xEC000000736E616CLL;
      if (v5 != 0x5074756F6B726F77) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      if (v5 != 0x736D6172676F7270) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      uint64_t v2 = 0x64616F6C6E776F64;
      unint64_t v6 = 0xEA00000000006465;
      goto LABEL_18;
    case 6:
      unint64_t v6 = 0xED00006465646441;
      if (v5 != 0x796C746E65636572) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v5 != v2) {
        goto LABEL_22;
      }
LABEL_19:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_22:
      }
        char v7 = sub_24F072400();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_24F02D8D8(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000010;
  unint64_t v3 = 0x800000024F07A850;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000010;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x6D6172676F7270;
      break;
    case 2:
      unint64_t v3 = 0xE500000000000000;
      unint64_t v5 = 0x6B63617473;
      break;
    case 3:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x74756F6B726F77;
      break;
    case 4:
      unint64_t v5 = 0x5074756F6B726F77;
      unint64_t v3 = 0xEB000000006E616CLL;
      break;
    case 5:
      unint64_t v5 = 0xD000000000000011;
      unint64_t v3 = 0x800000024F07A890;
      break;
    default:
      break;
  }
  unint64_t v6 = 0x800000024F07A850;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x6D6172676F7270) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x6B63617473) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x74756F6B726F77) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v2 = 0x5074756F6B726F77;
      unint64_t v6 = 0xEB000000006E616CLL;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0x800000024F07A890;
      if (v5 != 0xD000000000000011) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_24F072400();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

_WORD *LibraryGalleryState.init(layout:page:)@<X0>(_WORD *result@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  *(_WORD *)a3 = *result;
  *(unsigned char *)(a3 + 2) = a2;
  return result;
}

uint64_t sub_24F02DAF8()
{
  if (*v0) {
    return 1701273968;
  }
  else {
    return 0x74756F79616CLL;
  }
}

uint64_t sub_24F02DB28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24F02E3C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24F02DB50(uint64_t a1)
{
  unint64_t v2 = sub_24F02DD64();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F02DB8C(uint64_t a1)
{
  unint64_t v2 = sub_24F02DD64();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t LibraryGalleryState.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A38F0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __int16 v8 = *v1;
  int v11 = *((unsigned __int8 *)v1 + 2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24F02DD64();
  sub_24F072480();
  __int16 v15 = v8;
  char v14 = 0;
  sub_24F027DDC();
  sub_24F0723F0();
  if (!v2)
  {
    char v13 = v11;
    char v12 = 1;
    sub_24F027D88();
    sub_24F0723F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_24F02DD64()
{
  unint64_t result = qword_2699A38F8;
  if (!qword_2699A38F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A38F8);
  }
  return result;
}

uint64_t LibraryGalleryState.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3900);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  __int16 v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24F02DD64();
  sub_24F072470();
  if (!v2)
  {
    char v16 = 0;
    sub_24F028328();
    sub_24F072370();
    char v9 = v17;
    char v10 = v18;
    char v14 = 1;
    sub_24F0282D4();
    sub_24F072370();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v11 = v15;
    *a2 = v9;
    a2[1] = v10;
    a2[2] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_24F02DF90@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return LibraryGalleryState.init(from:)(a1, a2);
}

uint64_t sub_24F02DFA8(void *a1)
{
  return LibraryGalleryState.encode(to:)(a1);
}

uint64_t static LibraryGalleryState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  unsigned __int8 v2 = a1[2];
  char v3 = a2[2];
  if ((sub_24F071530() & 1) == 0) {
    return 0;
  }
  return sub_24F02D65C(v2, v3);
}

uint64_t sub_24F02E02C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  unsigned __int8 v2 = a1[2];
  char v3 = a2[2];
  if ((sub_24F071530() & 1) == 0) {
    return 0;
  }
  return sub_24F02D65C(v2, v3);
}

uint64_t __swift_memcpy3_1(uint64_t result, __int16 *a2)
{
  __int16 v2 = *a2;
  *(unsigned char *)(result + 2) = *((unsigned char *)a2 + 2);
  *(_WORD *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for LibraryGalleryState(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE)
  {
    if ((a2 + 33554178) >> 24)
    {
      int v2 = *((unsigned __int8 *)a1 + 3);
      if (*((unsigned char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776962;
      }
    }
    else
    {
      int v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776962;
      }
    }
  }
  unsigned int v4 = *(unsigned __int8 *)a1;
  BOOL v5 = v4 >= 3;
  int v6 = v4 - 3;
  if (!v5) {
    int v6 = -1;
  }
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for LibraryGalleryState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if ((a3 + 33554178) >> 24) {
    int v3 = 1;
  }
  else {
    int v3 = 2;
  }
  if (a3 <= 0xFD) {
    int v3 = 0;
  }
  if (a2 > 0xFD)
  {
    *(_WORD *)unint64_t result = a2 - 254;
    *(unsigned char *)(result + 2) = (a2 - 254) >> 16;
    if (v3)
    {
      unsigned int v4 = ((a2 - 254) >> 24) + 1;
      if (v3 == 2) {
        *(_WORD *)(result + 3) = v4;
      }
      else {
        *(unsigned char *)(result + 3) = v4;
      }
    }
  }
  else
  {
    if (!v3) {
      goto LABEL_10;
    }
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2) {
        return result;
      }
LABEL_16:
      *(unsigned char *)unint64_t result = a2 + 2;
      return result;
    }
    *(unsigned char *)(result + 3) = 0;
    if (a2) {
      goto LABEL_16;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryGalleryState()
{
  return &type metadata for LibraryGalleryState;
}

unsigned char *storeEnumTagSinglePayload for LibraryGalleryState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F02E284);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryGalleryState.CodingKeys()
{
  return &type metadata for LibraryGalleryState.CodingKeys;
}

unint64_t sub_24F02E2C0()
{
  unint64_t result = qword_2699A3908;
  if (!qword_2699A3908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3908);
  }
  return result;
}

unint64_t sub_24F02E318()
{
  unint64_t result = qword_2699A3910;
  if (!qword_2699A3910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3910);
  }
  return result;
}

unint64_t sub_24F02E370()
{
  unint64_t result = qword_2699A3918;
  if (!qword_2699A3918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3918);
  }
  return result;
}

uint64_t sub_24F02E3C4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74756F79616CLL && a2 == 0xE600000000000000;
  if (v2 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701273968 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24F072400();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24F02E4A0()
{
  return 0x684374756F79616CLL;
}

uint64_t sub_24F02E4C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x684374756F79616CLL && a2 == 0xED00006465676E61)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24F072400();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24F02E580(uint64_t a1)
{
  unint64_t v2 = sub_24F02E920();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F02E5BC(uint64_t a1)
{
  unint64_t v2 = sub_24F02E920();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F02E5F8()
{
  return 0x74756F79616CLL;
}

uint64_t sub_24F02E60C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x74756F79616CLL && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24F072400();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24F02E69C(uint64_t a1)
{
  unint64_t v2 = sub_24F02E974();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F02E6D8(uint64_t a1)
{
  unint64_t v2 = sub_24F02E974();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t LibraryGalleryAction.encode(to:)(void *a1)
{
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3920);
  uint64_t v3 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  char v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3928);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  char v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v13 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24F02E920();
  sub_24F072480();
  sub_24F02E974();
  sub_24F072390();
  __int16 v14 = v13;
  sub_24F027DDC();
  uint64_t v10 = v12;
  sub_24F0723F0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_24F02E920()
{
  unint64_t result = qword_2699A3930;
  if (!qword_2699A3930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3930);
  }
  return result;
}

unint64_t sub_24F02E974()
{
  unint64_t result = qword_2699A3938;
  if (!qword_2699A3938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3938);
  }
  return result;
}

uint64_t LibraryGalleryAction.init(from:)@<X0>(void *a1@<X0>, _WORD *a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3940);
  uint64_t v22 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3948);
  uint64_t v7 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  char v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24F02E920();
  sub_24F072470();
  if (v2) {
    goto LABEL_5;
  }
  uint64_t v19 = a1;
  uint64_t v20 = v7;
  uint64_t v10 = v23;
  if (*(void *)(sub_24F072380() + 16) != 1)
  {
    uint64_t v12 = sub_24F072260();
    swift_allocError();
    uint64_t v13 = v10;
    char v15 = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3060);
    *char v15 = &type metadata for LibraryGalleryAction;
    sub_24F072310();
    sub_24F072250();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v12 - 8) + 104))(v15, *MEMORY[0x263F8DCB0], v12);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v13);
    a1 = v19;
LABEL_5:
    uint64_t v17 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v17);
  }
  sub_24F02E974();
  sub_24F072300();
  uint64_t v11 = v20;
  sub_24F028328();
  sub_24F072370();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v4);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
  *uint64_t v21 = v24;
  uint64_t v17 = (uint64_t)v19;
  return __swift_destroy_boxed_opaque_existential_1(v17);
}

uint64_t sub_24F02ED44@<X0>(void *a1@<X0>, _WORD *a2@<X8>)
{
  return LibraryGalleryAction.init(from:)(a1, a2);
}

uint64_t sub_24F02ED5C(void *a1)
{
  return LibraryGalleryAction.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for LibraryGalleryAction(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65282 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65282 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 254;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F02EE40);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryGalleryAction()
{
  return &type metadata for LibraryGalleryAction;
}

ValueMetadata *type metadata accessor for LibraryGalleryAction.CodingKeys()
{
  return &type metadata for LibraryGalleryAction.CodingKeys;
}

unsigned char *_s14FitnessLibrary20LibraryGalleryActionO10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24F02EF28);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryGalleryAction.LayoutChangedCodingKeys()
{
  return &type metadata for LibraryGalleryAction.LayoutChangedCodingKeys;
}

unint64_t sub_24F02EF64()
{
  unint64_t result = qword_2699A3950;
  if (!qword_2699A3950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3950);
  }
  return result;
}

unint64_t sub_24F02EFBC()
{
  unint64_t result = qword_2699A3958;
  if (!qword_2699A3958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3958);
  }
  return result;
}

unint64_t sub_24F02F014()
{
  unint64_t result = qword_2699A3960;
  if (!qword_2699A3960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3960);
  }
  return result;
}

unint64_t sub_24F02F06C()
{
  unint64_t result = qword_2699A3968;
  if (!qword_2699A3968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3968);
  }
  return result;
}

unint64_t sub_24F02F0C4()
{
  unint64_t result = qword_2699A3970;
  if (!qword_2699A3970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3970);
  }
  return result;
}

unint64_t sub_24F02F11C()
{
  unint64_t result = qword_2699A3978;
  if (!qword_2699A3978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3978);
  }
  return result;
}

uint64_t LibraryGalleryEnvironment.init(popCurrentView:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

ValueMetadata *type metadata accessor for LibraryGalleryEnvironment()
{
  return &type metadata for LibraryGalleryEnvironment;
}

unint64_t sub_24F02F188(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6168437375636F66;
      break;
    case 2:
      unint64_t result = 0x684374756F79616CLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24F02F244()
{
  return sub_24F02F188(*v0);
}

uint64_t sub_24F02F24C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24F031528(a1, a2);
  *a3 = result;
  return result;
}

void sub_24F02F274(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_24F02F280(uint64_t a1)
{
  unint64_t v2 = sub_24F02FE30();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F02F2BC(uint64_t a1)
{
  unint64_t v2 = sub_24F02FE30();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F02F2F8(uint64_t a1)
{
  unint64_t v2 = sub_24F02FFD4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F02F334(uint64_t a1)
{
  unint64_t v2 = sub_24F02FFD4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F02F370()
{
  return 0x5064657375636F66;
}

uint64_t sub_24F02F390@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x5064657375636F66 && a2 == 0xEB00000000656761)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24F072400();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24F02F440(uint64_t a1)
{
  unint64_t v2 = sub_24F02FF80();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F02F47C(uint64_t a1)
{
  unint64_t v2 = sub_24F02FF80();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F02F4B8()
{
  return 0x756F79614C77656ELL;
}

uint64_t sub_24F02F4D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x756F79614C77656ELL && a2 == 0xE900000000000074)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24F072400();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24F02F578(uint64_t a1)
{
  unint64_t v2 = sub_24F02FF2C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F02F5B4(uint64_t a1)
{
  unint64_t v2 = sub_24F02FF2C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F02F5F8()
{
  if (*v0) {
    return 0x6361667265746E69;
  }
  else {
    return 1701273968;
  }
}

uint64_t sub_24F02F630@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24F03176C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24F02F658(uint64_t a1)
{
  unint64_t v2 = sub_24F02FED8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F02F694(uint64_t a1)
{
  unint64_t v2 = sub_24F02FED8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F02F6D0(uint64_t a1)
{
  unint64_t v2 = sub_24F02FE84();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F02F70C(uint64_t a1)
{
  unint64_t v2 = sub_24F02FE84();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t LibraryAction.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3980);
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v44 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v42 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3988);
  uint64_t v33 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v40 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3990);
  uint64_t v38 = *(void *)(v7 - 8);
  uint64_t v39 = v7;
  MEMORY[0x270FA5388](v7);
  long long v37 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3998);
  uint64_t v35 = *(void *)(v9 - 8);
  uint64_t v36 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A39A0);
  uint64_t v34 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  __int16 v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A39A8);
  uint64_t v45 = *(void *)(v15 - 8);
  uint64_t v46 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v48 = *v2;
  uint64_t v18 = *((unsigned __int8 *)v2 + 2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24F02FE30();
  sub_24F072480();
  switch(v18)
  {
    case 1:
      LOBYTE(v49) = 2;
      sub_24F02FF2C();
      uint64_t v22 = v37;
      uint64_t v23 = v46;
      __int16 v24 = v17;
      sub_24F072390();
      __int16 v49 = v48;
      sub_24F027DDC();
      uint64_t v25 = v39;
      sub_24F0723F0();
      uint64_t v26 = v38;
      goto LABEL_10;
    case 2:
      LOBYTE(v49) = 3;
      sub_24F02FED8();
      uint64_t v22 = v40;
      uint64_t v23 = v46;
      __int16 v24 = v17;
      sub_24F072390();
      char v27 = BYTE1(v48);
      LOBYTE(v49) = v48;
      char v50 = 0;
      sub_24F027D88();
      uint64_t v25 = v41;
      uint64_t v28 = v47;
      sub_24F0723F0();
      if (!v28)
      {
        LOBYTE(v49) = v27;
        char v50 = 1;
        sub_24F004720();
        sub_24F0723F0();
      }
      uint64_t v26 = v33;
      goto LABEL_10;
    case 3:
      LOBYTE(v49) = 4;
      sub_24F02FE84();
      uint64_t v22 = v42;
      uint64_t v23 = v46;
      __int16 v24 = v17;
      sub_24F072390();
      char v29 = BYTE1(v48);
      LOBYTE(v49) = v48;
      char v50 = 0;
      sub_24F027D88();
      uint64_t v25 = v44;
      uint64_t v30 = v47;
      sub_24F0723F0();
      if (!v30)
      {
        LOBYTE(v49) = v29;
        char v50 = 1;
        sub_24F004720();
        sub_24F0723F0();
      }
      uint64_t v26 = v43;
LABEL_10:
      (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v25);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v24, v23);
      break;
    case 4:
      LOBYTE(v49) = 0;
      sub_24F02FFD4();
      uint64_t v31 = v46;
      sub_24F072390();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v14, v12);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v17, v31);
      break;
    default:
      LOBYTE(v49) = 1;
      sub_24F02FF80();
      uint64_t v19 = v46;
      sub_24F072390();
      LOBYTE(v49) = v48;
      sub_24F027D88();
      uint64_t v20 = v36;
      sub_24F0723F0();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v20);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v17, v19);
      break;
  }
  return result;
}

unint64_t sub_24F02FE30()
{
  unint64_t result = qword_2699A39B0;
  if (!qword_2699A39B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A39B0);
  }
  return result;
}

unint64_t sub_24F02FE84()
{
  unint64_t result = qword_2699A39B8;
  if (!qword_2699A39B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A39B8);
  }
  return result;
}

unint64_t sub_24F02FED8()
{
  unint64_t result = qword_2699A39C0;
  if (!qword_2699A39C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A39C0);
  }
  return result;
}

unint64_t sub_24F02FF2C()
{
  unint64_t result = qword_2699A39C8;
  if (!qword_2699A39C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A39C8);
  }
  return result;
}

unint64_t sub_24F02FF80()
{
  unint64_t result = qword_2699A39D0;
  if (!qword_2699A39D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A39D0);
  }
  return result;
}

unint64_t sub_24F02FFD4()
{
  unint64_t result = qword_2699A39D8;
  if (!qword_2699A39D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A39D8);
  }
  return result;
}

uint64_t LibraryAction.init(from:)@<X0>(void *a1@<X0>, _WORD *a2@<X8>)
{
  long long v52 = a2;
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A39E0);
  uint64_t v51 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  uint64_t v55 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A39E8);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v49 = v4;
  uint64_t v50 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v54 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A39F0);
  uint64_t v48 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  uint64_t v53 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A39F8);
  uint64_t v45 = *(void *)(v8 - 8);
  uint64_t v46 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3A00);
  uint64_t v43 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3A08);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1[3];
  uint64_t v56 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_24F02FE30();
  uint64_t v19 = v57;
  sub_24F072470();
  if (v19) {
    goto LABEL_10;
  }
  uint64_t v42 = v13;
  uint64_t v57 = v10;
  uint64_t v20 = v53;
  uint64_t v21 = v54;
  uint64_t v22 = v55;
  uint64_t v23 = sub_24F072380();
  uint64_t v24 = v14;
  if (*(void *)(v23 + 16) != 1)
  {
    uint64_t v29 = sub_24F072260();
    swift_allocError();
    uint64_t v31 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3060);
    *uint64_t v31 = &type metadata for LibraryAction;
    sub_24F072310();
    sub_24F072250();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v29 - 8) + 104))(v31, *MEMORY[0x263F8DCB0], v29);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v24);
LABEL_10:
    uint64_t v37 = (uint64_t)v56;
    return __swift_destroy_boxed_opaque_existential_1(v37);
  }
  uint64_t v25 = v17;
  switch(*(unsigned char *)(v23 + 32))
  {
    case 1:
      LOBYTE(v58) = 1;
      sub_24F02FF80();
      uint64_t v32 = v57;
      sub_24F072300();
      sub_24F0282D4();
      uint64_t v33 = v46;
      sub_24F072370();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v32, v33);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v24);
      char v28 = 0;
      __int16 v27 = v58;
      break;
    case 2:
      LOBYTE(v58) = 2;
      sub_24F02FF2C();
      sub_24F072300();
      sub_24F028328();
      uint64_t v34 = v44;
      sub_24F072370();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v20, v34);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v24);
      __int16 v27 = v58;
      char v28 = 1;
      break;
    case 3:
      uint64_t v57 = (char *)v23;
      LOBYTE(v58) = 3;
      sub_24F02FED8();
      sub_24F072300();
      unsigned __int8 v60 = 0;
      sub_24F0282D4();
      uint64_t v35 = v49;
      sub_24F072370();
      __int16 v39 = v58;
      char v59 = 1;
      sub_24F004998();
      sub_24F072370();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v21, v35);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v25, v24);
      __int16 v27 = v39 | (v60 << 8);
      char v28 = 2;
      break;
    case 4:
      uint64_t v57 = (char *)v23;
      LOBYTE(v58) = 4;
      sub_24F02FE84();
      sub_24F072300();
      unsigned __int8 v60 = 0;
      sub_24F0282D4();
      uint64_t v36 = v47;
      sub_24F072370();
      __int16 v40 = v58;
      char v59 = 1;
      sub_24F004998();
      sub_24F072370();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v22, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v25, v24);
      __int16 v27 = v40 | (v60 << 8);
      char v28 = 3;
      break;
    default:
      LOBYTE(v58) = 0;
      sub_24F02FFD4();
      uint64_t v26 = v42;
      sub_24F072300();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v26, v11);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v24);
      __int16 v27 = 0;
      char v28 = 4;
      break;
  }
  uint64_t v37 = (uint64_t)v56;
  uint64_t v41 = v52;
  *long long v52 = v27;
  *((unsigned char *)v41 + 2) = v28;
  return __swift_destroy_boxed_opaque_existential_1(v37);
}

uint64_t sub_24F030A14@<X0>(void *a1@<X0>, _WORD *a2@<X8>)
{
  return LibraryAction.init(from:)(a1, a2);
}

uint64_t sub_24F030A2C(void *a1)
{
  return LibraryAction.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for LibraryAction(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC)
  {
    int v2 = (a2 + 16776964) >> 24 == 255 ? 2 : 1;
    int v3 = (a2 + 16776964) >> 24 ? v2 : 0;
    if (v3)
    {
      if (v3 == 2)
      {
        int v4 = *(unsigned __int16 *)((char *)a1 + 3);
        if (*(unsigned __int16 *)((char *)a1 + 3)) {
          return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v4 << 24)) - 16776964;
        }
      }
      else
      {
        int v4 = *((unsigned __int8 *)a1 + 3);
        if (*((unsigned char *)a1 + 3)) {
          return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v4 << 24)) - 16776964;
        }
      }
    }
  }
  unsigned int v6 = *((unsigned __int8 *)a1 + 2);
  if (v6 >= 5) {
    return (v6 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for LibraryAction(uint64_t result, unsigned int a2, unsigned int a3)
{
  if ((a3 + 16776964) >> 24 == 255) {
    int v3 = 2;
  }
  else {
    int v3 = 1;
  }
  if ((a3 + 16776964) >> 24) {
    int v4 = v3;
  }
  else {
    int v4 = 0;
  }
  if (a3 < 0xFC) {
    int v4 = 0;
  }
  if (a2 > 0xFB)
  {
    *(_WORD *)unint64_t result = a2 - 252;
    *(unsigned char *)(result + 2) = (a2 - 252) >> 16;
    if (v4)
    {
      unsigned int v5 = ((a2 - 252) >> 24) + 1;
      if (v4 == 2) {
        *(_WORD *)(result + 3) = v5;
      }
      else {
        *(unsigned char *)(result + 3) = v5;
      }
    }
  }
  else
  {
    if (!v4) {
      goto LABEL_13;
    }
    if (v4 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_13:
      if (!a2) {
        return result;
      }
LABEL_19:
      *(unsigned char *)(result + 2) = -(char)a2;
      return result;
    }
    *(unsigned char *)(result + 3) = 0;
    if (a2) {
      goto LABEL_19;
    }
  }
  return result;
}

uint64_t sub_24F030B54(unsigned __int16 *a1)
{
  uint64_t result = *((unsigned __int8 *)a1 + 2);
  if (result >= 4) {
    return (*a1 | (result << 16)) - 262140;
  }
  return result;
}

uint64_t sub_24F030B7C(uint64_t result, unsigned int a2)
{
  if (a2 > 3)
  {
    __int16 v2 = a2 - 4;
    a2 = ((a2 - 4) >> 16) + 4;
    *(_WORD *)uint64_t result = v2;
  }
  *(unsigned char *)(result + 2) = a2;
  return result;
}

ValueMetadata *type metadata accessor for LibraryAction()
{
  return &type metadata for LibraryAction;
}

uint64_t getEnumTagSinglePayload for LibraryAction.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for LibraryAction.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F030D08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryAction.CodingKeys()
{
  return &type metadata for LibraryAction.CodingKeys;
}

ValueMetadata *type metadata accessor for LibraryAction.DismissHandoffAlertCodingKeys()
{
  return &type metadata for LibraryAction.DismissHandoffAlertCodingKeys;
}

ValueMetadata *type metadata accessor for LibraryAction.FocusChangedCodingKeys()
{
  return &type metadata for LibraryAction.FocusChangedCodingKeys;
}

unsigned char *_s14FitnessLibrary13LibraryActionO22FocusChangedCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24F030E00);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryAction.LayoutChangedCodingKeys()
{
  return &type metadata for LibraryAction.LayoutChangedCodingKeys;
}

ValueMetadata *type metadata accessor for LibraryAction.LibraryPageAppearedCodingKeys()
{
  return &type metadata for LibraryAction.LibraryPageAppearedCodingKeys;
}

unsigned char *_s14FitnessLibrary13LibraryActionO29LibraryPageAppearedCodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F030F18);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryAction.LibraryPageDisappearedCodingKeys()
{
  return &type metadata for LibraryAction.LibraryPageDisappearedCodingKeys;
}

unint64_t sub_24F030F54()
{
  unint64_t result = qword_2699A3A10;
  if (!qword_2699A3A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3A10);
  }
  return result;
}

unint64_t sub_24F030FAC()
{
  unint64_t result = qword_2699A3A18;
  if (!qword_2699A3A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3A18);
  }
  return result;
}

unint64_t sub_24F031004()
{
  unint64_t result = qword_2699A3A20;
  if (!qword_2699A3A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3A20);
  }
  return result;
}

unint64_t sub_24F03105C()
{
  unint64_t result = qword_2699A3A28;
  if (!qword_2699A3A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3A28);
  }
  return result;
}

unint64_t sub_24F0310B4()
{
  unint64_t result = qword_2699A3A30;
  if (!qword_2699A3A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3A30);
  }
  return result;
}

unint64_t sub_24F03110C()
{
  unint64_t result = qword_2699A3A38;
  if (!qword_2699A3A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3A38);
  }
  return result;
}

unint64_t sub_24F031164()
{
  unint64_t result = qword_2699A3A40;
  if (!qword_2699A3A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3A40);
  }
  return result;
}

unint64_t sub_24F0311BC()
{
  unint64_t result = qword_2699A3A48;
  if (!qword_2699A3A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3A48);
  }
  return result;
}

unint64_t sub_24F031214()
{
  unint64_t result = qword_2699A3A50;
  if (!qword_2699A3A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3A50);
  }
  return result;
}

unint64_t sub_24F03126C()
{
  unint64_t result = qword_2699A3A58;
  if (!qword_2699A3A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3A58);
  }
  return result;
}

unint64_t sub_24F0312C4()
{
  unint64_t result = qword_2699A3A60;
  if (!qword_2699A3A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3A60);
  }
  return result;
}

unint64_t sub_24F03131C()
{
  unint64_t result = qword_2699A3A68;
  if (!qword_2699A3A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3A68);
  }
  return result;
}

unint64_t sub_24F031374()
{
  unint64_t result = qword_2699A3A70;
  if (!qword_2699A3A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3A70);
  }
  return result;
}

unint64_t sub_24F0313CC()
{
  unint64_t result = qword_2699A3A78;
  if (!qword_2699A3A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3A78);
  }
  return result;
}

unint64_t sub_24F031424()
{
  unint64_t result = qword_2699A3A80;
  if (!qword_2699A3A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3A80);
  }
  return result;
}

unint64_t sub_24F03147C()
{
  unint64_t result = qword_2699A3A88;
  if (!qword_2699A3A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3A88);
  }
  return result;
}

unint64_t sub_24F0314D4()
{
  unint64_t result = qword_2699A3A90;
  if (!qword_2699A3A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3A90);
  }
  return result;
}

uint64_t sub_24F031528(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x800000024F07AD90 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6168437375636F66 && a2 == 0xEC0000006465676ELL || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x684374756F79616CLL && a2 == 0xED00006465676E61 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000024F07ADB0 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000024F07ADD0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v5 = sub_24F072400();
    swift_bridgeObjectRelease();
    if (v5) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_24F03176C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701273968 && a2 == 0xE400000000000000;
  if (v2 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6361667265746E69 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24F072400();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t LibraryCanvasContentView.init(store:canvasViewBuilder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(void *)a5 = sub_24F006060;
  *(void *)(a5 + 8) = result;
  *(unsigned char *)(a5 + 16) = 0;
  *(void *)(a5 + 24) = a3;
  *(void *)(a5 + 32) = a4;
  return result;
}

uint64_t sub_24F0318E0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3B00);
  sub_24F007760(&qword_2699A3B08, &qword_2699A3B00);
  return sub_24F071600();
}

uint64_t sub_24F031970()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t LibraryCanvasContentView.body.getter@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v75 = a2;
  uint64_t v76 = sub_24F071500();
  uint64_t v74 = *(void *)(v76 - 8);
  MEMORY[0x270FA5388](v76);
  uint64_t v73 = (char *)v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A3A98);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A3AA0);
  uint64_t v59 = *(void *)(a1 + 16);
  uint64_t v62 = a1;
  sub_24F0718B0();
  v50[1] = sub_24F0718B0();
  uint64_t v4 = sub_24F071F00();
  uint64_t v63 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v57 = (char *)v50 - v5;
  uint64_t v6 = sub_24F0716E0();
  uint64_t v68 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  __int16 v58 = (char *)v50 - v7;
  uint64_t v8 = sub_24F0716E0();
  uint64_t v72 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  unsigned __int8 v60 = (char *)v50 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A3AA8);
  unint64_t v11 = sub_24F0323C4();
  unint64_t v12 = sub_24F0324A0();
  uint64_t v13 = *(void *)(a1 + 24);
  unint64_t v93 = v12;
  uint64_t v94 = v13;
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v91 = v11;
  uint64_t v92 = WitnessTable;
  uint64_t v15 = swift_getWitnessTable();
  uint64_t v88 = MEMORY[0x263F1BA00];
  uint64_t v89 = v15;
  uint64_t v90 = MEMORY[0x263F1BA00];
  uint64_t v51 = swift_getWitnessTable();
  uint64_t v16 = MEMORY[0x263F1A240];
  uint64_t v86 = v51;
  uint64_t v87 = MEMORY[0x263F1A240];
  uint64_t v52 = swift_getWitnessTable();
  uint64_t v84 = v52;
  uint64_t v85 = v16;
  uint64_t v17 = swift_getWitnessTable();
  uint64_t v18 = sub_24F007760(&qword_2699A3AF0, &qword_2699A3AA8);
  *(void *)&long long v95 = v8;
  *((void *)&v95 + 1) = v10;
  uint64_t v56 = v10;
  *(void *)&long long v96 = v17;
  *((void *)&v96 + 1) = v18;
  uint64_t v55 = v17;
  uint64_t v54 = v18;
  uint64_t v69 = MEMORY[0x263F1B270];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v71 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v53 = (char *)v50 - v20;
  *(void *)&long long v95 = v8;
  *((void *)&v95 + 1) = v10;
  *(void *)&long long v96 = v17;
  *((void *)&v96 + 1) = v18;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v65 = OpaqueTypeConformance2;
  unint64_t v64 = sub_24F0325F0();
  uint64_t v22 = OpaqueTypeMetadata2;
  *(void *)&long long v95 = OpaqueTypeMetadata2;
  *((void *)&v95 + 1) = v76;
  *(void *)&long long v96 = OpaqueTypeConformance2;
  *((void *)&v96 + 1) = v64;
  uint64_t v23 = swift_getOpaqueTypeMetadata2();
  uint64_t v70 = *(void *)(v23 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v61 = (char *)v50 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v67 = (void *)((char *)v50 - v26);
  long long v27 = v66[1];
  long long v95 = *v66;
  long long v96 = v27;
  uint64_t v97 = *((void *)v66 + 4);
  uint64_t v28 = v59;
  uint64_t v77 = v59;
  uint64_t v78 = v13;
  uint64_t v79 = &v95;
  uint64_t v29 = v57;
  sub_24F071EF0();
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = v28;
  *(void *)(v30 + 24) = v13;
  long long v31 = v96;
  *(_OWORD *)(v30 + 32) = v95;
  *(_OWORD *)(v30 + 48) = v31;
  *(void *)(v30 + 64) = v97;
  sub_24F007298((uint64_t)&v95);
  uint64_t v32 = v58;
  sub_24F071CF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v29, v4);
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = v28;
  *(void *)(v33 + 24) = v13;
  long long v34 = v96;
  *(_OWORD *)(v33 + 32) = v95;
  *(_OWORD *)(v33 + 48) = v34;
  *(void *)(v33 + 64) = v97;
  sub_24F007298((uint64_t)&v95);
  uint64_t v35 = v60;
  sub_24F071BC0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v32, v6);
  long long v81 = v95;
  long long v82 = v96;
  uint64_t v83 = v97;
  sub_24F0318E0();
  swift_getKeyPath();
  sub_24F071FE0();
  swift_release();
  swift_release();
  uint64_t v80 = v81;
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = v28;
  *(void *)(v36 + 24) = v13;
  long long v37 = v96;
  *(_OWORD *)(v36 + 32) = v95;
  *(_OWORD *)(v36 + 48) = v37;
  *(void *)(v36 + 64) = v97;
  sub_24F007298((uint64_t)&v95);
  uint64_t v38 = v53;
  sub_24F071D10();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v35, v8);
  long long v81 = v95;
  long long v82 = v96;
  uint64_t v83 = v97;
  sub_24F0318E0();
  swift_getKeyPath();
  __int16 v39 = v73;
  sub_24F071FE0();
  swift_release();
  swift_release();
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = v28;
  *(void *)(v40 + 24) = v13;
  long long v41 = v96;
  *(_OWORD *)(v40 + 32) = v95;
  *(_OWORD *)(v40 + 48) = v41;
  *(void *)(v40 + 64) = v97;
  sub_24F007298((uint64_t)&v95);
  uint64_t v42 = v61;
  uint64_t v43 = v76;
  uint64_t v44 = v65;
  unint64_t v45 = v64;
  sub_24F071D10();
  swift_release();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v39, v43);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v38, v22);
  *(void *)&long long v81 = v22;
  *((void *)&v81 + 1) = v43;
  *(void *)&long long v82 = v44;
  *((void *)&v82 + 1) = v45;
  uint64_t v46 = swift_getOpaqueTypeConformance2();
  uint64_t v47 = v67;
  sub_24F005EE8(v67, v42, v23, v46);
  uint64_t v48 = *(void (**)(char *, uint64_t))(v70 + 8);
  v48(v42, v23);
  sub_24F005EE8(v75, v47, v23, v46);
  return ((uint64_t (*)(void *, uint64_t))v48)(v47, v23);
}

unint64_t sub_24F0323C4()
{
  unint64_t result = qword_2699A3AB0;
  if (!qword_2699A3AB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A3A98);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A3AB8);
    sub_24F007760(&qword_2699A3AC0, &qword_2699A3AB8);
    swift_getOpaqueTypeConformance2();
    sub_24F0324A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3AB0);
  }
  return result;
}

unint64_t sub_24F0324A0()
{
  unint64_t result = qword_2699A3AC8;
  if (!qword_2699A3AC8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A3AA0);
    sub_24F03257C();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A3AE0);
    sub_24F007760(&qword_2699A3AE8, &qword_2699A3AE0);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3AC8);
  }
  return result;
}

unint64_t sub_24F03257C()
{
  unint64_t result = qword_2699A3AD0;
  if (!qword_2699A3AD0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A3AD8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3AD0);
  }
  return result;
}

unint64_t sub_24F0325F0()
{
  unint64_t result = qword_2699A3AF8;
  if (!qword_2699A3AF8)
  {
    sub_24F071500();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3AF8);
  }
  return result;
}

uint64_t sub_24F032648@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v163 = a2;
  uint64_t v164 = a3;
  uint64_t v161 = a4;
  long long v151 = *(char **)(a2 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  uint64_t v150 = (char *)&v131 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v149 = (char *)&v131 - v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A3AA0);
  uint64_t v9 = sub_24F0718B0();
  uint64_t v154 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  long long v153 = (char *)&v131 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  long long v155 = (char *)&v131 - v12;
  uint64_t v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3AE0);
  MEMORY[0x270FA5388](v143);
  long long v138 = (uint64_t *)((char *)&v131 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3B10);
  uint64_t v140 = *(void *)(v144 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v144);
  long long v137 = (char *)&v131 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  long long v139 = (char *)&v131 - v16;
  uint64_t v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3B18);
  uint64_t v17 = MEMORY[0x270FA5388](v141);
  uint64_t v142 = (uint64_t *)((char *)&v131 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v156 = v8;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v131 = (char *)&v131 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v132 = (char *)&v131 - v21;
  uint64_t v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3B20);
  MEMORY[0x270FA5388](v145);
  uint64_t v146 = (uint64_t)&v131 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3B28);
  uint64_t v133 = *(void *)(v135 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v135);
  unsigned long long v134 = (char *)&v131 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v148 = (char *)&v131 - v25;
  uint64_t v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3AB8);
  MEMORY[0x270FA5388](v152);
  uint64_t v147 = (char *)&v131 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3B30);
  uint64_t v136 = *(void *)(v27 - 8);
  uint64_t v28 = MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)&v131 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v32 = (char *)&v131 - v31;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3A98);
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = (char *)&v131 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t State = type metadata accessor for LibraryCanvasContentLoadState();
  MEMORY[0x270FA5388](State);
  uint64_t v38 = (uint64_t *)((char *)&v131 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v162 = v33;
  uint64_t v160 = v9;
  uint64_t v159 = sub_24F0718B0();
  uint64_t v158 = *(void *)(v159 - 8);
  MEMORY[0x270FA5388](v159);
  long long v157 = (char *)&v131 - v39;
  long long v40 = *(_OWORD *)(a1 + 16);
  long long v175 = *(_OWORD *)a1;
  long long v176 = v40;
  uint64_t v41 = a1;
  *(void *)&long long v177 = *(void *)(a1 + 32);
  type metadata accessor for LibraryCanvasContentView();
  sub_24F0318E0();
  swift_getKeyPath();
  sub_24F071FE0();
  swift_release();
  swift_release();
  if (swift_getEnumCaseMultiPayload() - 2 >= 2)
  {
    uint64_t v66 = v150;
    uint64_t v67 = v151;
    uint64_t v68 = a1;
    uint64_t v69 = *v38;
    uint64_t v70 = (char *)v38 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2699A3B38) + 64);
    uint64_t v71 = sub_24F071500();
    (*(void (**)(char *, uint64_t))(*(void *)(v71 - 8) + 8))(v70, v71);
    uint64_t v72 = v163;
    uint64_t v73 = v155;
    uint64_t v74 = *(void *)(v69 + 16);
    uint64_t v75 = swift_bridgeObjectRelease();
    uint64_t v76 = v149;
    if (v74)
    {
      (*(void (**)(uint64_t))(v41 + 24))(v75);
      uint64_t v62 = v164;
      sub_24F005EE8(v76, v66, v72, v164);
      uint64_t v77 = (void (*)(void *, uint64_t))*((void *)v67 + 1);
      v77(v66, v72);
      sub_24F005EE8(v66, v76, v72, v62);
      sub_24F0324A0();
      sub_24F068EFC((uint64_t)v66, v156, v72);
      v77(v66, v72);
      v77(v76, v72);
      uint64_t v61 = v161;
      uint64_t v78 = v160;
      uint64_t v63 = v159;
      uint64_t v64 = v158;
      uint64_t v65 = v157;
      uint64_t v79 = v154;
      uint64_t v80 = v153;
    }
    else
    {
      long long v83 = *(_OWORD *)(v41 + 16);
      long long v175 = *(_OWORD *)v41;
      long long v176 = v83;
      *(void *)&long long v177 = *(void *)(v41 + 32);
      sub_24F0318E0();
      swift_getKeyPath();
      sub_24F071FE0();
      swift_release();
      swift_release();
      if (v175 == 2)
      {
        long long v84 = *(_OWORD *)(v68 + 16);
        long long v175 = *(_OWORD *)v68;
        long long v176 = v84;
        *(void *)&long long v177 = *(void *)(v68 + 32);
        sub_24F0318E0();
        swift_getKeyPath();
        sub_24F071FE0();
        swift_release();
        swift_release();
        switch((char)v175)
        {
          case 3:
            swift_bridgeObjectRelease();
            break;
          default:
            char v106 = sub_24F072400();
            swift_bridgeObjectRelease();
            if ((v106 & 1) == 0) {
              goto LABEL_19;
            }
            break;
        }
        uint64_t v107 = sub_24F071D60();
        sub_24F071F30();
        sub_24F071650();
        uint64_t v108 = v175;
        char v109 = BYTE8(v175);
        uint64_t v110 = v176;
        char v111 = BYTE8(v176);
        uint64_t v112 = v142;
        *uint64_t v142 = v107;
        v112[1] = v108;
        *((unsigned char *)v112 + 16) = v109;
        v112[3] = v110;
        *((unsigned char *)v112 + 32) = v111;
        *(_OWORD *)(v112 + 5) = v177;
        swift_storeEnumTagMultiPayload();
        __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3AD8);
        sub_24F03257C();
        uint64_t v113 = sub_24F007760(&qword_2699A3AE8, &qword_2699A3AE0);
        uint64_t v167 = v143;
        uint64_t v168 = v113;
        swift_getOpaqueTypeConformance2();
        uint64_t v114 = (uint64_t)v131;
        sub_24F0718A0();
        uint64_t v61 = v161;
        uint64_t v62 = v164;
        uint64_t v78 = v160;
        uint64_t v63 = v159;
        uint64_t v64 = v158;
        uint64_t v65 = v157;
      }
      else
      {
LABEL_19:
        uint64_t v115 = sub_24F071860();
        uint64_t v116 = (uint64_t)v138;
        *long long v138 = v115;
        *(void *)(v116 + 8) = 0;
        *(unsigned char *)(v116 + 16) = 1;
        uint64_t v117 = v116 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2699A3B40) + 44);
        uint64_t v118 = v68;
        uint64_t v62 = v164;
        sub_24F0340CC(v118, v117);
        sub_24F0719C0();
        sub_24F071F30();
        uint64_t v119 = sub_24F007760(&qword_2699A3AE8, &qword_2699A3AE0);
        uint64_t v120 = v137;
        uint64_t v121 = v143;
        sub_24F071C80();
        sub_24F01A7DC(v116, &qword_2699A3AE0);
        uint64_t v122 = v140;
        uint64_t v123 = v139;
        uint64_t v124 = v144;
        (*(void (**)(char *, char *, uint64_t))(v140 + 32))(v139, v120, v144);
        (*(void (**)(uint64_t *, char *, uint64_t))(v122 + 16))(v142, v123, v124);
        swift_storeEnumTagMultiPayload();
        __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3AD8);
        sub_24F03257C();
        *(void *)&long long v175 = v121;
        *((void *)&v175 + 1) = v119;
        swift_getOpaqueTypeConformance2();
        uint64_t v114 = (uint64_t)v131;
        sub_24F0718A0();
        (*(void (**)(char *, uint64_t))(v122 + 8))(v123, v124);
        uint64_t v61 = v161;
        uint64_t v78 = v160;
        uint64_t v63 = v159;
        uint64_t v64 = v158;
        uint64_t v65 = v157;
      }
      uint64_t v80 = v153;
      sub_24F0324A0();
      uint64_t v73 = v155;
      sub_24F068E04(v114, v156);
      sub_24F01A7DC(v114, &qword_2699A3AA0);
      uint64_t v79 = v154;
    }
    unint64_t v173 = sub_24F0324A0();
    uint64_t v174 = v62;
    uint64_t WitnessTable = swift_getWitnessTable();
    sub_24F005EE8(v80, v73, v78, WitnessTable);
    sub_24F0323C4();
    sub_24F068EFC((uint64_t)v80, v162, v78);
    uint64_t v126 = *(void (**)(char *, uint64_t))(v79 + 8);
    v126(v80, v78);
    v126(v73, v78);
  }
  else
  {
    uint64_t v42 = v148;
    long long v151 = v30;
    uint64_t v43 = v147;
    long long v153 = v32;
    uint64_t v154 = v27;
    long long v155 = v35;
    long long v44 = *(_OWORD *)(a1 + 16);
    long long v175 = *(_OWORD *)a1;
    long long v176 = v44;
    *(void *)&long long v177 = *(void *)(a1 + 32);
    sub_24F0318E0();
    swift_getKeyPath();
    sub_24F071FE0();
    swift_release();
    swift_release();
    if (v175 == 1)
    {
      uint64_t v45 = (uint64_t)v43;
      *(void *)uint64_t v43 = sub_24F071860();
      *((void *)v43 + 1) = 0;
      v43[16] = 1;
      uint64_t v46 = &v43[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2699A3B48) + 44)];
      sub_24F071610();
      uint64_t v47 = v133;
      uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v133 + 16);
      uint64_t v49 = v134;
      uint64_t v50 = v135;
      v48(v134, v42, v135);
      *(void *)uint64_t v46 = 0;
      v46[8] = 1;
      uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3B50);
      v48(&v46[*(int *)(v51 + 48)], v49, v50);
      uint64_t v52 = &v46[*(int *)(v51 + 64)];
      *(void *)uint64_t v52 = 0;
      v52[8] = 1;
      uint64_t v53 = *(void (**)(char *, uint64_t))(v47 + 8);
      v53(v42, v50);
      v53(v49, v50);
      sub_24F0719C0();
      sub_24F071F30();
      uint64_t v54 = sub_24F007760(&qword_2699A3AC0, &qword_2699A3AB8);
      uint64_t v55 = v151;
      uint64_t v56 = v152;
      sub_24F071C80();
      sub_24F01A7DC(v45, &qword_2699A3AB8);
      uint64_t v57 = v136;
      __int16 v58 = v153;
      uint64_t v59 = v154;
      (*(void (**)(char *, char *, uint64_t))(v136 + 32))(v153, v55, v154);
      (*(void (**)(uint64_t, char *, uint64_t))(v57 + 16))(v146, v58, v59);
      swift_storeEnumTagMultiPayload();
      *(void *)&long long v175 = v56;
      *((void *)&v175 + 1) = v54;
      swift_getOpaqueTypeConformance2();
      sub_24F0324A0();
      uint64_t v60 = (uint64_t)v155;
      sub_24F0718A0();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v59);
      uint64_t v61 = v161;
      uint64_t v62 = v164;
      uint64_t v63 = v159;
      uint64_t v64 = v158;
      uint64_t v65 = v157;
    }
    else
    {
      long long v81 = *(_OWORD *)(a1 + 16);
      long long v175 = *(_OWORD *)a1;
      long long v176 = v81;
      *(void *)&long long v177 = *(void *)(a1 + 32);
      sub_24F0318E0();
      swift_getKeyPath();
      sub_24F071FE0();
      swift_release();
      swift_release();
      if (v175 == 2)
      {
        long long v82 = *(_OWORD *)(a1 + 16);
        long long v175 = *(_OWORD *)a1;
        long long v176 = v82;
        *(void *)&long long v177 = *(void *)(a1 + 32);
        sub_24F0318E0();
        swift_getKeyPath();
        sub_24F071FE0();
        swift_release();
        swift_release();
        switch((char)v175)
        {
          case 3:
            swift_bridgeObjectRelease();
            break;
          default:
            char v85 = sub_24F072400();
            swift_bridgeObjectRelease();
            if ((v85 & 1) == 0) {
              goto LABEL_13;
            }
            break;
        }
        uint64_t v86 = sub_24F071D60();
        sub_24F071F30();
        sub_24F071650();
        uint64_t v87 = v175;
        char v88 = BYTE8(v175);
        uint64_t v89 = v176;
        char v90 = BYTE8(v176);
        unint64_t v91 = v142;
        *uint64_t v142 = v86;
        v91[1] = v87;
        *((unsigned char *)v91 + 16) = v88;
        v91[3] = v89;
        *((unsigned char *)v91 + 32) = v90;
        *(_OWORD *)(v91 + 5) = v177;
        swift_storeEnumTagMultiPayload();
        __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3AD8);
        sub_24F03257C();
        uint64_t v92 = sub_24F007760(&qword_2699A3AE8, &qword_2699A3AE0);
        uint64_t v167 = v143;
        uint64_t v168 = v92;
        swift_getOpaqueTypeConformance2();
        unint64_t v93 = v132;
        sub_24F0718A0();
        uint64_t v94 = (uint64_t)v93;
        uint64_t v61 = v161;
        uint64_t v62 = v164;
      }
      else
      {
LABEL_13:
        uint64_t v95 = sub_24F071860();
        uint64_t v96 = (uint64_t)v138;
        *long long v138 = v95;
        *(void *)(v96 + 8) = 0;
        *(unsigned char *)(v96 + 16) = 1;
        uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3B40);
        uint64_t v62 = v164;
        sub_24F0340CC(a1, v96 + *(int *)(v97 + 44));
        sub_24F0719C0();
        sub_24F071F30();
        uint64_t v98 = sub_24F007760(&qword_2699A3AE8, &qword_2699A3AE0);
        long long v99 = v137;
        uint64_t v100 = v143;
        sub_24F071C80();
        sub_24F01A7DC(v96, &qword_2699A3AE0);
        uint64_t v101 = v140;
        uint64_t v102 = v139;
        uint64_t v103 = v144;
        (*(void (**)(char *, char *, uint64_t))(v140 + 32))(v139, v99, v144);
        (*(void (**)(uint64_t *, char *, uint64_t))(v101 + 16))(v142, v102, v103);
        swift_storeEnumTagMultiPayload();
        __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3AD8);
        sub_24F03257C();
        *(void *)&long long v175 = v100;
        *((void *)&v175 + 1) = v98;
        swift_getOpaqueTypeConformance2();
        uint64_t v104 = v132;
        sub_24F0718A0();
        (*(void (**)(char *, uint64_t))(v101 + 8))(v102, v103);
        uint64_t v94 = (uint64_t)v104;
        uint64_t v61 = v161;
      }
      uint64_t v63 = v159;
      uint64_t v64 = v158;
      uint64_t v65 = v157;
      sub_24F016984(v94, v146, &qword_2699A3AA0);
      swift_storeEnumTagMultiPayload();
      uint64_t v105 = sub_24F007760(&qword_2699A3AC0, &qword_2699A3AB8);
      uint64_t v167 = v152;
      uint64_t v168 = v105;
      swift_getOpaqueTypeConformance2();
      sub_24F0324A0();
      uint64_t v60 = (uint64_t)v155;
      sub_24F0718A0();
      sub_24F01A7DC(v94, &qword_2699A3AA0);
    }
    sub_24F0323C4();
    unint64_t v165 = sub_24F0324A0();
    uint64_t v166 = v62;
    swift_getWitnessTable();
    sub_24F068E04(v60, v162);
    sub_24F01A7DC(v60, &qword_2699A3A98);
  }
  unint64_t v127 = sub_24F0323C4();
  unint64_t v171 = sub_24F0324A0();
  uint64_t v172 = v62;
  uint64_t v128 = swift_getWitnessTable();
  unint64_t v169 = v127;
  uint64_t v170 = v128;
  uint64_t v129 = swift_getWitnessTable();
  sub_24F005EE8(v61, v65, v63, v129);
  return (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v65, v63);
}

uint64_t sub_24F033DD8@<X0>(void *a1@<X8>)
{
  return sub_24F032648(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_24F033DE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3B68);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  long long v9 = v2[1];
  v28[0] = *v2;
  v28[1] = v9;
  uint64_t v29 = *((void *)v2 + 4);
  long long v10 = v2[1];
  long long v25 = *v2;
  long long v26 = v10;
  uint64_t v27 = *((void *)v2 + 4);
  sub_24F0318E0();
  swift_getKeyPath();
  sub_24F071FE0();
  swift_release();
  swift_release();
  char v11 = v25;
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v20 = *(void *)(a1 + 16);
  uint64_t v21 = v12;
  char v22 = v25;
  uint64_t v23 = v28;
  uint64_t v16 = v20;
  uint64_t v17 = v12;
  char v18 = v25;
  uint64_t v19 = v28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3B70);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3B78);
  sub_24F007760(&qword_2699A3B80, &qword_2699A3B70);
  sub_24F007760(&qword_2699A3B88, &qword_2699A3B78);
  sub_24F0718E0();
  *(void *)&long long v25 = 0;
  *((void *)&v25 + 1) = 0xE000000000000000;
  sub_24F072090();
  char v24 = v11;
  sub_24F072280();
  long long v13 = v25;
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v6 + 16))(a2, v8, v5);
  *(_OWORD *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2699A3B58) + 52)) = v13;
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_24F0340CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3B58);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  long long v9 = (char *)v15 - v8;
  long long v10 = *(_OWORD *)(a1 + 16);
  v15[0] = *(_OWORD *)a1;
  v15[1] = v10;
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v11 = type metadata accessor for LibraryCanvasContentView();
  sub_24F033DE4(v11, (uint64_t)v9);
  sub_24F016984((uint64_t)v9, (uint64_t)v7, &qword_2699A3B58);
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3B60);
  sub_24F016984((uint64_t)v7, a2 + *(int *)(v12 + 48), &qword_2699A3B58);
  uint64_t v13 = a2 + *(int *)(v12 + 64);
  *(void *)uint64_t v13 = 0;
  *(unsigned char *)(v13 + 8) = 1;
  sub_24F01A7DC((uint64_t)v9, &qword_2699A3B58);
  return sub_24F01A7DC((uint64_t)v7, &qword_2699A3B58);
}

uint64_t sub_24F03421C()
{
  return sub_24F034A90();
}

uint64_t sub_24F034244()
{
  return sub_24F034A90();
}

uint64_t sub_24F03426C()
{
  return sub_24F034A90();
}

uint64_t sub_24F034294()
{
  return sub_24F034A90();
}

uint64_t sub_24F0342B8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24F0342FC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24F071500();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v8 = *(_OWORD *)(a1 + 16);
  v16[0] = *(_OWORD *)a1;
  v16[1] = v8;
  uint64_t v17 = *(void *)(a1 + 32);
  type metadata accessor for LibraryCanvasContentView();
  sub_24F0318E0();
  swift_getKeyPath();
  sub_24F071FE0();
  swift_release();
  swift_release();
  uint64_t v9 = LibraryPage.emptyTitle(locale:)((uint64_t)v7);
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *(void *)&v16[0] = v9;
  *((void *)&v16[0] + 1) = v11;
  sub_24F0221E8();
  uint64_t result = sub_24F071B00();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v13;
  *(unsigned char *)(a2 + 16) = v14 & 1;
  *(void *)(a2 + 24) = v15;
  return result;
}

uint64_t sub_24F034470@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24F071DD0();
  *a1 = result;
  return result;
}

uint64_t sub_24F0345A0@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3B90);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v41 - v14;
  uint64_t v16 = sub_24F071500();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v20 = *(_OWORD *)(a2 + 16);
  long long v45 = *(_OWORD *)a2;
  long long v46 = v20;
  uint64_t v47 = *(void *)(a2 + 32);
  uint64_t v43 = a3;
  uint64_t v44 = a4;
  type metadata accessor for LibraryCanvasContentView();
  sub_24F0318E0();
  swift_getKeyPath();
  sub_24F071FE0();
  swift_release();
  swift_release();
  uint64_t v21 = LibraryPage.emptyDescription(locale:)((uint64_t)v19);
  uint64_t v23 = v22;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  *(void *)&long long v45 = v21;
  *((void *)&v45 + 1) = v23;
  sub_24F0221E8();
  uint64_t v24 = sub_24F071B00();
  uint64_t v26 = v25;
  char v28 = v27;
  uint64_t v30 = v29;
  switch(a1)
  {
    case 3:
      swift_bridgeObjectRelease();
      goto LABEL_4;
    default:
      char v31 = sub_24F072400();
      swift_bridgeObjectRelease();
      if (v31)
      {
LABEL_4:
        uint64_t v32 = swift_allocObject();
        uint64_t v42 = v26;
        uint64_t v33 = v44;
        *(void *)(v32 + 16) = v43;
        *(void *)(v32 + 24) = v33;
        long long v34 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)(v32 + 32) = *(_OWORD *)a2;
        *(_OWORD *)(v32 + 48) = v34;
        *(void *)(v32 + 64) = *(void *)(a2 + 32);
        MEMORY[0x270FA5388](v32);
        *(&v41 - 4) = v36;
        *(&v41 - 3) = v35;
        *(&v41 - 2) = a2;
        sub_24F007298(a2);
        sub_24F071E40();
        uint64_t v26 = v42;
        uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3B98);
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v15, 0, 1, v37);
      }
      else
      {
        uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3B98);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v15, 1, 1, v38);
      }
      sub_24F016984((uint64_t)v15, (uint64_t)v13, &qword_2699A3B90);
      *(void *)a5 = v24;
      *(void *)(a5 + 8) = v26;
      *(unsigned char *)(a5 + 16) = v28 & 1;
      *(void *)(a5 + 24) = v30;
      uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3BA0);
      sub_24F016984((uint64_t)v13, a5 + *(int *)(v39 + 48), &qword_2699A3B90);
      sub_24F022280(v24, v26, v28 & 1);
      swift_bridgeObjectRetain();
      sub_24F01A7DC((uint64_t)v15, &qword_2699A3B90);
      sub_24F01A7DC((uint64_t)v13, &qword_2699A3B90);
      sub_24F022538(v24, v26, v28 & 1);
      return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24F034A90()
{
  return swift_release();
}

uint64_t sub_24F034AF0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_24F071500();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_24F072040();
  MEMORY[0x270FA5388](v3 - 8);
  sub_24F072030();
  if (qword_2699A2D08 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)qword_2699B32D8;
  type metadata accessor for LibraryCanvasContentView();
  id v5 = v4;
  sub_24F0318E0();
  swift_getKeyPath();
  sub_24F071FE0();
  swift_release();
  swift_release();
  sub_24F072070();
  sub_24F0221E8();
  uint64_t result = sub_24F071B00();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8 & 1;
  *(void *)(a1 + 24) = v9;
  return result;
}

uint64_t type metadata accessor for LibraryCanvasContentView()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24F034CF0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24F034F3C()
{
  return sub_24F071DF0();
}

uint64_t sub_24F034FC8@<X0>(uint64_t a1@<X8>)
{
  return sub_24F0345A0(*(unsigned char *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t objectdestroy_3Tm()
{
  sub_24F007284();
  swift_release();
  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_24F035020()
{
  return sub_24F034A90();
}

uint64_t sub_24F035044@<X0>(uint64_t a1@<X8>)
{
  return sub_24F034AF0(a1);
}

uint64_t sub_24F035050@<X0>(uint64_t a1@<X8>)
{
  return sub_24F0342FC(*(void *)(v1 + 40), a1);
}

uint64_t sub_24F035060@<X0>(uint64_t *a1@<X8>)
{
  return sub_24F034470(a1);
}

uint64_t sub_24F035068()
{
  return MEMORY[0x270FA0228](v0, 16, 7);
}

uint64_t localizedLibraryString(_:locale:comment:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24F071500();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_24F072040();
  MEMORY[0x270FA5388](v8);
  (*(void (**)(unsigned char *, uint64_t))(v10 + 16))(&v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)], a1);
  if (qword_2699A2D08 != -1) {
    swift_once();
  }
  uint64_t v11 = (void *)qword_2699B32D8;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  id v12 = v11;
  return sub_24F072070();
}

id sub_24F035254()
{
  type metadata accessor for LibraryLocalizationBundle();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id result = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  qword_2699B32D8 = (uint64_t)result;
  return result;
}

uint64_t type metadata accessor for LibraryLocalizationBundle()
{
  return self;
}

uint64_t sub_24F0352CC()
{
  return 12383;
}

uint64_t sub_24F0352D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24F072400();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24F035358(uint64_t a1)
{
  unint64_t v2 = sub_24F035E68();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F035394(uint64_t a1)
{
  unint64_t v2 = sub_24F035E68();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_24F0353D0()
{
  unint64_t result = 0xD000000000000018;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6570704177656976;
      break;
    case 2:
      unint64_t result = 0x4968736572666572;
      break;
    case 3:
      unint64_t result = 0x616F4C7465736572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24F035480@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24F03A030(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24F0354A8(uint64_t a1)
{
  unint64_t v2 = sub_24F035CB4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F0354E4(uint64_t a1)
{
  unint64_t v2 = sub_24F035CB4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F035520(uint64_t a1)
{
  unint64_t v2 = sub_24F035DC0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F03555C(uint64_t a1)
{
  unint64_t v2 = sub_24F035DC0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F035598(uint64_t a1)
{
  unint64_t v2 = sub_24F035D6C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F0355D4(uint64_t a1)
{
  unint64_t v2 = sub_24F035D6C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F035610(uint64_t a1)
{
  unint64_t v2 = sub_24F035E14();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F03564C(uint64_t a1)
{
  unint64_t v2 = sub_24F035E14();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t WorkoutPlanBannerAction.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3BA8);
  uint64_t v39 = *(void *)(v2 - 8);
  uint64_t v40 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v38 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3BB0);
  uint64_t v36 = *(void *)(v4 - 8);
  uint64_t v37 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v35 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3BB8);
  uint64_t v31 = *(void *)(v6 - 8);
  uint64_t v32 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v29 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3BC0);
  uint64_t v33 = *(void *)(v8 - 8);
  uint64_t v34 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v30 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v28 = (uint64_t)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for WorkoutPlanBannerAction();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3BC8);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24F035CB4();
  sub_24F072480();
  sub_24F035D08(v41, (uint64_t)v15);
  switch((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v15, 3, v10))
  {
    case 1u:
      char v43 = 1;
      sub_24F035E14();
      uint64_t v24 = v29;
      sub_24F072390();
      uint64_t v26 = v31;
      uint64_t v25 = v32;
      goto LABEL_6;
    case 2u:
      char v44 = 2;
      sub_24F035DC0();
      uint64_t v24 = v35;
      sub_24F072390();
      uint64_t v26 = v36;
      uint64_t v25 = v37;
      goto LABEL_6;
    case 3u:
      char v45 = 3;
      sub_24F035D6C();
      uint64_t v24 = v38;
      sub_24F072390();
      uint64_t v26 = v39;
      uint64_t v25 = v40;
LABEL_6:
      (*(void (**)(char *, uint64_t))(v26 + 8))(v24, v25);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      break;
    default:
      uint64_t v20 = v28;
      sub_24F00DE1C((uint64_t)v15, v28);
      char v42 = 0;
      sub_24F035E68();
      uint64_t v21 = v30;
      sub_24F072390();
      type metadata accessor for WorkoutPlanDetail();
      sub_24F037158(&qword_2699A3BF8, (void (*)(uint64_t))type metadata accessor for WorkoutPlanDetail);
      uint64_t v22 = v34;
      sub_24F0723B0();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v21, v22);
      sub_24F01A7DC(v20, &qword_26B1EC0F0);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      break;
  }
  return result;
}

uint64_t type metadata accessor for WorkoutPlanBannerAction()
{
  uint64_t result = qword_2699A3C38;
  if (!qword_2699A3C38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_24F035CB4()
{
  unint64_t result = qword_2699A3BD0;
  if (!qword_2699A3BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3BD0);
  }
  return result;
}

uint64_t sub_24F035D08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WorkoutPlanBannerAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_24F035D6C()
{
  unint64_t result = qword_2699A3BD8;
  if (!qword_2699A3BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3BD8);
  }
  return result;
}

unint64_t sub_24F035DC0()
{
  unint64_t result = qword_2699A3BE0;
  if (!qword_2699A3BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3BE0);
  }
  return result;
}

unint64_t sub_24F035E14()
{
  unint64_t result = qword_2699A3BE8;
  if (!qword_2699A3BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3BE8);
  }
  return result;
}

unint64_t sub_24F035E68()
{
  unint64_t result = qword_2699A3BF0;
  if (!qword_2699A3BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3BF0);
  }
  return result;
}

uint64_t WorkoutPlanBannerAction.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v58 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3C00);
  uint64_t v62 = *(void *)(v3 - 8);
  uint64_t v63 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v59 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3C08);
  uint64_t v55 = *(void *)(v5 - 8);
  uint64_t v56 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v61 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3C10);
  uint64_t v51 = *(void *)(v7 - 8);
  uint64_t v52 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v57 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3C18);
  uint64_t v53 = *(void *)(v9 - 8);
  uint64_t v54 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3C20);
  uint64_t v60 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for WorkoutPlanBannerAction();
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v48 - v19;
  uint64_t v21 = a1[3];
  uint64_t v64 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v21);
  sub_24F035CB4();
  uint64_t v22 = v65;
  sub_24F072470();
  if (v22) {
    goto LABEL_13;
  }
  uint64_t v65 = v15;
  uint64_t v48 = v18;
  uint64_t v49 = v20;
  uint64_t v24 = v61;
  uint64_t v23 = v62;
  uint64_t v50 = 0;
  uint64_t v25 = v63;
  uint64_t v26 = v60;
  uint64_t v27 = sub_24F072380();
  if (*(void *)(v27 + 16) != 1)
  {
    uint64_t v30 = sub_24F072260();
    swift_allocError();
    uint64_t v32 = v31;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3060);
    *uint64_t v32 = v65;
    sub_24F072310();
    sub_24F072250();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v30 - 8) + 104))(v32, *MEMORY[0x263F8DCB0], v30);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v12);
LABEL_13:
    uint64_t v38 = (uint64_t)v64;
    return __swift_destroy_boxed_opaque_existential_1(v38);
  }
  uint64_t v28 = v59;
  switch(*(unsigned char *)(v27 + 32))
  {
    case 1:
      char v67 = 1;
      sub_24F035E14();
      uint64_t v33 = v57;
      uint64_t v34 = v50;
      sub_24F072300();
      if (v34) {
        goto LABEL_5;
      }
      (*(void (**)(char *, uint64_t))(v51 + 8))(v33, v52);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v12);
      uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
      uint64_t v44 = (uint64_t)v49;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v49, 1, 3, v45);
      goto LABEL_19;
    case 2:
      uint64_t v35 = v26;
      char v68 = 2;
      sub_24F035DC0();
      uint64_t v36 = v50;
      sub_24F072300();
      if (v36) {
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v55 + 8))(v24, v56);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v12);
      uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
      uint64_t v44 = (uint64_t)v49;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v49, 2, 3, v46);
      goto LABEL_19;
    case 3:
      uint64_t v35 = v26;
      char v69 = 3;
      sub_24F035D6C();
      uint64_t v37 = v50;
      sub_24F072300();
      if (v37)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v12);
        goto LABEL_13;
      }
      (*(void (**)(char *, uint64_t))(v23 + 8))(v28, v25);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v12);
      uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
      uint64_t v44 = (uint64_t)v49;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v49, 3, 3, v47);
LABEL_19:
      uint64_t v38 = (uint64_t)v64;
      goto LABEL_20;
    default:
      char v66 = 0;
      sub_24F035E68();
      uint64_t v29 = v50;
      sub_24F072300();
      if (v29)
      {
LABEL_5:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v12);
        goto LABEL_13;
      }
      type metadata accessor for WorkoutPlanDetail();
      uint64_t v40 = v11;
      sub_24F037158(&qword_2699A3C28, (void (*)(uint64_t))type metadata accessor for WorkoutPlanDetail);
      uint64_t v41 = (uint64_t)v48;
      uint64_t v42 = v54;
      sub_24F072330();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v40, v42);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v12);
      uint64_t v38 = (uint64_t)v64;
      uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v41, 0, 3, v43);
      uint64_t v44 = (uint64_t)v49;
      sub_24F036AA8(v41, (uint64_t)v49, (uint64_t (*)(void))type metadata accessor for WorkoutPlanBannerAction);
LABEL_20:
      sub_24F036AA8(v44, v58, (uint64_t (*)(void))type metadata accessor for WorkoutPlanBannerAction);
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v38);
}

uint64_t sub_24F0367B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return WorkoutPlanBannerAction.init(from:)(a1, a2);
}

uint64_t sub_24F0367C8(void *a1)
{
  return WorkoutPlanBannerAction.encode(to:)(a1);
}

uint64_t WorkoutPlanBannerAction.hash(into:)()
{
  uint64_t v1 = type metadata accessor for WorkoutPlanDetail();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v16 - v10;
  uint64_t v12 = type metadata accessor for WorkoutPlanBannerAction();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24F035D08(v0, (uint64_t)v14);
  switch((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 3, v5))
  {
    case 1u:
    case 2u:
    case 3u:
      uint64_t result = sub_24F072440();
      break;
    default:
      sub_24F00DE1C((uint64_t)v14, (uint64_t)v11);
      sub_24F072440();
      sub_24F00DE84((uint64_t)v11, (uint64_t)v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v9, 1, v1) == 1)
      {
        sub_24F072450();
      }
      else
      {
        sub_24F036AA8((uint64_t)v9, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for WorkoutPlanDetail);
        sub_24F072450();
        WorkoutPlanDetail.hash(into:)();
        sub_24F03A23C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for WorkoutPlanDetail);
      }
      uint64_t result = sub_24F01A7DC((uint64_t)v11, &qword_26B1EC0F0);
      break;
  }
  return result;
}

uint64_t sub_24F036AA8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t WorkoutPlanBannerAction.hashValue.getter()
{
  return sub_24F072460();
}

uint64_t sub_24F036B54()
{
  return sub_24F072460();
}

uint64_t sub_24F036B98()
{
  return sub_24F072460();
}

uint64_t _s14FitnessLibrary23WorkoutPlanBannerActionO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WorkoutPlanDetail();
  uint64_t v32 = *(void *)(v4 - 8);
  uint64_t v33 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v31 = (uint64_t)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_26B1EC100);
  MEMORY[0x270FA5388](v6);
  uint64_t v34 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v31 - v13;
  uint64_t v15 = type metadata accessor for WorkoutPlanBannerAction();
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3CA8);
  uint64_t v19 = MEMORY[0x270FA5388](v18 - 8);
  uint64_t v21 = (char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = (uint64_t)&v21[*(int *)(v19 + 56)];
  sub_24F035D08(a1, (uint64_t)v21);
  sub_24F035D08(a2, v22);
  uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  switch(v23((uint64_t)v21, 3, v8))
  {
    case 1u:
      if (v23(v22, 3, v8) == 1) {
        goto LABEL_9;
      }
      goto LABEL_10;
    case 2u:
      if (v23(v22, 3, v8) != 2) {
        goto LABEL_10;
      }
      goto LABEL_9;
    case 3u:
      if (v23(v22, 3, v8) == 3) {
        goto LABEL_9;
      }
      goto LABEL_10;
    default:
      sub_24F035D08((uint64_t)v21, (uint64_t)v17);
      if (v23(v22, 3, v8))
      {
        sub_24F01A7DC((uint64_t)v17, &qword_26B1EC0F0);
LABEL_10:
        sub_24F01A7DC((uint64_t)v21, &qword_2699A3CA8);
        return 0;
      }
      sub_24F00DE1C(v22, (uint64_t)v14);
      uint64_t v25 = v34;
      uint64_t v26 = v34 + *(int *)(v6 + 48);
      sub_24F00DE1C((uint64_t)v17, v34);
      sub_24F00DE84((uint64_t)v14, v26);
      uint64_t v27 = v33;
      uint64_t v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
      if (v28(v25, 1, v33) == 1)
      {
        sub_24F01A7DC((uint64_t)v14, &qword_26B1EC0F0);
        if (v28(v26, 1, v27) == 1)
        {
          sub_24F01A7DC(v25, &qword_26B1EC0F0);
LABEL_9:
          sub_24F03A23C((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for WorkoutPlanBannerAction);
          return 1;
        }
        goto LABEL_17;
      }
      sub_24F00DE84(v25, (uint64_t)v12);
      if (v28(v26, 1, v27) == 1)
      {
        sub_24F01A7DC((uint64_t)v14, &qword_26B1EC0F0);
        sub_24F03A23C((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for WorkoutPlanDetail);
LABEL_17:
        sub_24F01A7DC(v25, qword_26B1EC100);
        goto LABEL_19;
      }
      uint64_t v29 = v31;
      sub_24F036AA8(v26, v31, (uint64_t (*)(void))type metadata accessor for WorkoutPlanDetail);
      char v30 = static WorkoutPlanDetail.== infix(_:_:)((uint64_t)v12, v29);
      sub_24F03A23C(v29, (uint64_t (*)(void))type metadata accessor for WorkoutPlanDetail);
      sub_24F01A7DC((uint64_t)v14, &qword_26B1EC0F0);
      sub_24F03A23C((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for WorkoutPlanDetail);
      sub_24F01A7DC(v25, &qword_26B1EC0F0);
      if (v30) {
        goto LABEL_9;
      }
LABEL_19:
      sub_24F03A23C((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for WorkoutPlanBannerAction);
      return 0;
  }
}

uint64_t sub_24F037110()
{
  return sub_24F037158(&qword_2699A3C30, (void (*)(uint64_t))type metadata accessor for WorkoutPlanBannerAction);
}

uint64_t sub_24F037158(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for WorkoutPlanBannerAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 3, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = (int *)type metadata accessor for WorkoutPlanDetail();
      uint64_t v11 = *((void *)v10 - 1);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v11 + 48))(a2, 1, v10))
      {
        memcpy(a1, a2, *(void *)(v8 + 64));
      }
      else
      {
        uint64_t v12 = sub_24F071520();
        uint64_t v13 = *(void *)(v12 - 8);
        uint64_t v44 = v11;
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
        {
          uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD78);
          memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v13 + 16))(a1, a2, v12);
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
        }
        uint64_t v15 = v10[5];
        uint64_t v16 = (char *)a1 + v15;
        uint64_t v17 = (char *)a2 + v15;
        uint64_t v18 = sub_24F071490();
        uint64_t v19 = *(void *)(v18 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
        {
          uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD60);
          memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
        }
        uint64_t v21 = v10[6];
        uint64_t v22 = (uint64_t *)((char *)a1 + v21);
        uint64_t v23 = (uint64_t *)((char *)a2 + v21);
        uint64_t v24 = v23[1];
        *uint64_t v22 = *v23;
        v22[1] = v24;
        uint64_t v25 = v10[7];
        uint64_t v43 = (char *)a1 + v25;
        uint64_t v26 = (char *)a2 + v25;
        uint64_t v27 = sub_24F0714D0();
        uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
        swift_bridgeObjectRetain();
        v28(v43, v26, v27);
        *((unsigned char *)a1 + v10[8]) = *((unsigned char *)a2 + v10[8]);
        uint64_t v29 = v10[9];
        char v30 = (uint64_t *)((char *)a1 + v29);
        uint64_t v31 = (uint64_t *)((char *)a2 + v29);
        uint64_t v32 = v31[1];
        *char v30 = *v31;
        v30[1] = v32;
        uint64_t v33 = v10[10];
        uint64_t v34 = (uint64_t *)((char *)a1 + v33);
        uint64_t v35 = (uint64_t *)((char *)a2 + v33);
        uint64_t v36 = v35[1];
        *uint64_t v34 = *v35;
        v34[1] = v36;
        uint64_t v37 = v10[11];
        uint64_t v38 = (uint64_t *)((char *)a1 + v37);
        uint64_t v39 = (uint64_t *)((char *)a2 + v37);
        uint64_t v40 = v39[1];
        *uint64_t v38 = *v39;
        v38[1] = v40;
        uint64_t v41 = *(void (**)(uint64_t *, void, uint64_t, int *))(v44 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v41(a1, 0, 1, v10);
      }
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 3, v7);
    }
  }
  return a1;
}

uint64_t destroy for WorkoutPlanBannerAction(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 3, v2);
  if (!result)
  {
    uint64_t v4 = type metadata accessor for WorkoutPlanDetail();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4);
    if (!result)
    {
      uint64_t v5 = sub_24F071520();
      uint64_t v6 = *(void *)(v5 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
      }
      uint64_t v7 = a1 + *(int *)(v4 + 20);
      uint64_t v8 = sub_24F071490();
      uint64_t v9 = *(void *)(v8 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
      }
      swift_bridgeObjectRelease();
      uint64_t v10 = a1 + *(int *)(v4 + 28);
      uint64_t v11 = sub_24F0714D0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

char *initializeWithCopy for WorkoutPlanBannerAction(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = (int *)type metadata accessor for WorkoutPlanDetail();
    uint64_t v9 = *((void *)v8 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v9 + 48))(a2, 1, v8))
    {
      memcpy(a1, a2, *(void *)(v7 + 64));
    }
    else
    {
      uint64_t v42 = v9;
      uint64_t v10 = sub_24F071520();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
      {
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD78);
        memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))(a1, a2, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
      }
      uint64_t v13 = v8[5];
      uint64_t v14 = &a1[v13];
      uint64_t v15 = &a2[v13];
      uint64_t v16 = sub_24F071490();
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD60);
        memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
      uint64_t v19 = v8[6];
      uint64_t v20 = &a1[v19];
      uint64_t v21 = &a2[v19];
      uint64_t v22 = *((void *)v21 + 1);
      *(void *)uint64_t v20 = *(void *)v21;
      *((void *)v20 + 1) = v22;
      uint64_t v23 = v8[7];
      uint64_t v41 = &a1[v23];
      uint64_t v24 = &a2[v23];
      uint64_t v25 = sub_24F0714D0();
      uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
      swift_bridgeObjectRetain();
      v26(v41, v24, v25);
      a1[v8[8]] = a2[v8[8]];
      uint64_t v27 = v8[9];
      uint64_t v28 = &a1[v27];
      uint64_t v29 = &a2[v27];
      uint64_t v30 = *((void *)v29 + 1);
      *(void *)uint64_t v28 = *(void *)v29;
      *((void *)v28 + 1) = v30;
      uint64_t v31 = v8[10];
      uint64_t v32 = &a1[v31];
      uint64_t v33 = &a2[v31];
      uint64_t v34 = *((void *)v33 + 1);
      *(void *)uint64_t v32 = *(void *)v33;
      *((void *)v32 + 1) = v34;
      uint64_t v35 = v8[11];
      uint64_t v36 = &a1[v35];
      uint64_t v37 = &a2[v35];
      uint64_t v38 = *((void *)v37 + 1);
      *(void *)uint64_t v36 = *(void *)v37;
      *((void *)v36 + 1) = v38;
      uint64_t v39 = *(void (**)(char *, void, uint64_t, int *))(v42 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v39(a1, 0, 1, v8);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

char *assignWithCopy for WorkoutPlanBannerAction(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 3, v6);
  int v10 = v8(a2, 3, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_24F01A7DC((uint64_t)a1, &qword_26B1EC0F0);
      goto LABEL_7;
    }
    uint64_t v14 = (int *)type metadata accessor for WorkoutPlanDetail();
    uint64_t v15 = *((void *)v14 - 1);
    uint64_t v16 = *(uint64_t (**)(char *, uint64_t, int *))(v15 + 48);
    int v17 = v16(a1, 1, v14);
    int v18 = v16(a2, 1, v14);
    if (v17)
    {
      if (!v18)
      {
        uint64_t v19 = sub_24F071520();
        uint64_t v20 = *(void *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(a2, 1, v19))
        {
          uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD78);
          memcpy(a1, a2, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 16))(a1, a2, v19);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(a1, 0, 1, v19);
        }
        uint64_t v54 = v14[5];
        uint64_t v55 = &a1[v54];
        uint64_t v56 = &a2[v54];
        uint64_t v57 = sub_24F071490();
        uint64_t v58 = *(void *)(v57 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
        {
          uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD60);
          memcpy(v55, v56, *(void *)(*(void *)(v59 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v55, v56, v57);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
        }
        uint64_t v60 = v14[6];
        uint64_t v61 = &a1[v60];
        uint64_t v62 = &a2[v60];
        *(void *)uint64_t v61 = *(void *)v62;
        *((void *)v61 + 1) = *((void *)v62 + 1);
        uint64_t v63 = v14[7];
        uint64_t v64 = &a1[v63];
        uint64_t v65 = &a2[v63];
        uint64_t v66 = sub_24F0714D0();
        char v67 = *(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 16);
        swift_bridgeObjectRetain();
        v67(v64, v65, v66);
        a1[v14[8]] = a2[v14[8]];
        uint64_t v68 = v14[9];
        char v69 = &a1[v68];
        uint64_t v70 = &a2[v68];
        *(void *)char v69 = *(void *)v70;
        *((void *)v69 + 1) = *((void *)v70 + 1);
        uint64_t v71 = v14[10];
        uint64_t v72 = &a1[v71];
        uint64_t v73 = &a2[v71];
        *(void *)uint64_t v72 = *(void *)v73;
        *((void *)v72 + 1) = *((void *)v73 + 1);
        uint64_t v74 = v14[11];
        uint64_t v75 = &a1[v74];
        uint64_t v76 = &a2[v74];
        *(void *)uint64_t v75 = *(void *)v76;
        *((void *)v75 + 1) = *((void *)v76 + 1);
        uint64_t v77 = *(void (**)(char *, void, uint64_t, int *))(v15 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v77(a1, 0, 1, v14);
        return a1;
      }
      goto LABEL_17;
    }
    if (v18)
    {
      sub_24F03A23C((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for WorkoutPlanDetail);
LABEL_17:
      size_t v13 = *(void *)(v7 + 64);
      goto LABEL_8;
    }
    uint64_t v49 = sub_24F071520();
    uint64_t v50 = *(void *)(v49 - 8);
    uint64_t v51 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v50 + 48);
    int v52 = v51(a1, 1, v49);
    int v53 = v51(a2, 1, v49);
    if (v52)
    {
      if (!v53)
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(a1, a2, v49);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(a1, 0, 1, v49);
        goto LABEL_36;
      }
    }
    else
    {
      if (!v53)
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 24))(a1, a2, v49);
LABEL_36:
        uint64_t v79 = v14[5];
        uint64_t v80 = &a1[v79];
        long long v81 = &a2[v79];
        uint64_t v82 = sub_24F071490();
        uint64_t v83 = *(void *)(v82 - 8);
        long long v84 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v83 + 48);
        int v85 = v84(v80, 1, v82);
        int v86 = v84(v81, 1, v82);
        if (v85)
        {
          if (!v86)
          {
            (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v80, v81, v82);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v80, 0, 1, v82);
LABEL_42:
            uint64_t v88 = v14[6];
            uint64_t v89 = &a1[v88];
            char v90 = &a2[v88];
            *(void *)uint64_t v89 = *(void *)v90;
            *((void *)v89 + 1) = *((void *)v90 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v91 = v14[7];
            uint64_t v92 = &a1[v91];
            unint64_t v93 = &a2[v91];
            uint64_t v94 = sub_24F0714D0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 24))(v92, v93, v94);
            a1[v14[8]] = a2[v14[8]];
            uint64_t v95 = v14[9];
            uint64_t v96 = &a1[v95];
            uint64_t v97 = &a2[v95];
            *(void *)uint64_t v96 = *(void *)v97;
            *((void *)v96 + 1) = *((void *)v97 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v98 = v14[10];
            long long v99 = &a1[v98];
            uint64_t v100 = &a2[v98];
            *(void *)long long v99 = *(void *)v100;
            *((void *)v99 + 1) = *((void *)v100 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v101 = v14[11];
            uint64_t v102 = &a1[v101];
            uint64_t v103 = &a2[v101];
            *(void *)uint64_t v102 = *(void *)v103;
            *((void *)v102 + 1) = *((void *)v103 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            return a1;
          }
        }
        else
        {
          if (!v86)
          {
            (*(void (**)(char *, char *, uint64_t))(v83 + 24))(v80, v81, v82);
            goto LABEL_42;
          }
          (*(void (**)(char *, uint64_t))(v83 + 8))(v80, v82);
        }
        uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD60);
        memcpy(v80, v81, *(void *)(*(void *)(v87 - 8) + 64));
        goto LABEL_42;
      }
      (*(void (**)(char *, uint64_t))(v50 + 8))(a1, v49);
    }
    uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD78);
    memcpy(a1, a2, *(void *)(*(void *)(v78 - 8) + 64));
    goto LABEL_36;
  }
  if (v10)
  {
LABEL_7:
    size_t v13 = *(void *)(*(void *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v13);
    return a1;
  }
  uint64_t v11 = (int *)type metadata accessor for WorkoutPlanDetail();
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(a2, 1, v11))
  {
    memcpy(a1, a2, *(void *)(v7 + 64));
  }
  else
  {
    uint64_t v105 = v12;
    uint64_t v22 = sub_24F071520();
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(a2, 1, v22))
    {
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD78);
      memcpy(a1, a2, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(a1, a2, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(a1, 0, 1, v22);
    }
    uint64_t v25 = v11[5];
    uint64_t v26 = &a1[v25];
    uint64_t v27 = &a2[v25];
    uint64_t v28 = sub_24F071490();
    uint64_t v29 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD60);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    uint64_t v31 = v11[6];
    uint64_t v32 = &a1[v31];
    uint64_t v33 = &a2[v31];
    *(void *)uint64_t v32 = *(void *)v33;
    *((void *)v32 + 1) = *((void *)v33 + 1);
    uint64_t v34 = v11[7];
    uint64_t v104 = &a1[v34];
    uint64_t v35 = &a2[v34];
    uint64_t v36 = sub_24F0714D0();
    uint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
    swift_bridgeObjectRetain();
    v37(v104, v35, v36);
    a1[v11[8]] = a2[v11[8]];
    uint64_t v38 = v11[9];
    uint64_t v39 = &a1[v38];
    uint64_t v40 = &a2[v38];
    *(void *)uint64_t v39 = *(void *)v40;
    *((void *)v39 + 1) = *((void *)v40 + 1);
    uint64_t v41 = v11[10];
    uint64_t v42 = &a1[v41];
    uint64_t v43 = &a2[v41];
    *(void *)uint64_t v42 = *(void *)v43;
    *((void *)v42 + 1) = *((void *)v43 + 1);
    uint64_t v44 = v11[11];
    uint64_t v45 = &a1[v44];
    uint64_t v46 = &a2[v44];
    *(void *)uint64_t v45 = *(void *)v46;
    *((void *)v45 + 1) = *((void *)v46 + 1);
    uint64_t v47 = *(void (**)(char *, void, uint64_t, int *))(v105 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v47(a1, 0, 1, v11);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

char *initializeWithTake for WorkoutPlanBannerAction(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = (int *)type metadata accessor for WorkoutPlanDetail();
    uint64_t v9 = *((void *)v8 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v9 + 48))(a2, 1, v8))
    {
      memcpy(a1, a2, *(void *)(v7 + 64));
    }
    else
    {
      uint64_t v10 = sub_24F071520();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
      {
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD78);
        memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(a1, a2, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
      }
      uint64_t v13 = v8[5];
      uint64_t v14 = &a1[v13];
      uint64_t v15 = &a2[v13];
      uint64_t v16 = sub_24F071490();
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD60);
        memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
      *(_OWORD *)&a1[v8[6]] = *(_OWORD *)&a2[v8[6]];
      uint64_t v19 = v8[7];
      uint64_t v20 = &a1[v19];
      uint64_t v21 = &a2[v19];
      uint64_t v22 = sub_24F0714D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
      a1[v8[8]] = a2[v8[8]];
      *(_OWORD *)&a1[v8[9]] = *(_OWORD *)&a2[v8[9]];
      *(_OWORD *)&a1[v8[10]] = *(_OWORD *)&a2[v8[10]];
      *(_OWORD *)&a1[v8[11]] = *(_OWORD *)&a2[v8[11]];
      (*(void (**)(char *, void, uint64_t, int *))(v9 + 56))(a1, 0, 1, v8);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

char *assignWithTake for WorkoutPlanBannerAction(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 3, v6);
  int v10 = v8(a2, 3, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_24F01A7DC((uint64_t)a1, &qword_26B1EC0F0);
      goto LABEL_7;
    }
    uint64_t v14 = (int *)type metadata accessor for WorkoutPlanDetail();
    uint64_t v15 = *((void *)v14 - 1);
    uint64_t v16 = *(uint64_t (**)(char *, uint64_t, int *))(v15 + 48);
    int v17 = v16(a1, 1, v14);
    int v18 = v16(a2, 1, v14);
    if (v17)
    {
      if (!v18)
      {
        uint64_t v19 = sub_24F071520();
        uint64_t v20 = *(void *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(a2, 1, v19))
        {
          uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD78);
          memcpy(a1, a2, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 32))(a1, a2, v19);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(a1, 0, 1, v19);
        }
        uint64_t v41 = v14[5];
        uint64_t v42 = &a1[v41];
        uint64_t v43 = &a2[v41];
        uint64_t v44 = sub_24F071490();
        uint64_t v45 = *(void *)(v44 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
        {
          uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD60);
          memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v42, v43, v44);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
        }
        *(_OWORD *)&a1[v14[6]] = *(_OWORD *)&a2[v14[6]];
        uint64_t v47 = v14[7];
        uint64_t v48 = &a1[v47];
        uint64_t v49 = &a2[v47];
        uint64_t v50 = sub_24F0714D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
        a1[v14[8]] = a2[v14[8]];
        *(_OWORD *)&a1[v14[9]] = *(_OWORD *)&a2[v14[9]];
        *(_OWORD *)&a1[v14[10]] = *(_OWORD *)&a2[v14[10]];
        *(_OWORD *)&a1[v14[11]] = *(_OWORD *)&a2[v14[11]];
        (*(void (**)(char *, void, uint64_t, int *))(v15 + 56))(a1, 0, 1, v14);
        return a1;
      }
      goto LABEL_17;
    }
    if (v18)
    {
      sub_24F03A23C((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for WorkoutPlanDetail);
LABEL_17:
      size_t v13 = *(void *)(v7 + 64);
      goto LABEL_8;
    }
    uint64_t v36 = sub_24F071520();
    uint64_t v37 = *(void *)(v36 - 8);
    uint64_t v38 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48);
    int v39 = v38(a1, 1, v36);
    int v40 = v38(a2, 1, v36);
    if (v39)
    {
      if (!v40)
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 32))(a1, a2, v36);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(a1, 0, 1, v36);
        goto LABEL_36;
      }
    }
    else
    {
      if (!v40)
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 40))(a1, a2, v36);
LABEL_36:
        uint64_t v52 = v14[5];
        int v53 = &a1[v52];
        uint64_t v54 = &a2[v52];
        uint64_t v55 = sub_24F071490();
        uint64_t v56 = *(void *)(v55 - 8);
        uint64_t v57 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v56 + 48);
        int v58 = v57(v53, 1, v55);
        int v59 = v57(v54, 1, v55);
        if (v58)
        {
          if (!v59)
          {
            (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v53, v54, v55);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
LABEL_42:
            uint64_t v61 = v14[6];
            uint64_t v62 = &a1[v61];
            uint64_t v63 = &a2[v61];
            uint64_t v65 = *(void *)v63;
            uint64_t v64 = *((void *)v63 + 1);
            *(void *)uint64_t v62 = v65;
            *((void *)v62 + 1) = v64;
            swift_bridgeObjectRelease();
            uint64_t v66 = v14[7];
            char v67 = &a1[v66];
            uint64_t v68 = &a2[v66];
            uint64_t v69 = sub_24F0714D0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 40))(v67, v68, v69);
            a1[v14[8]] = a2[v14[8]];
            uint64_t v70 = v14[9];
            uint64_t v71 = &a1[v70];
            uint64_t v72 = &a2[v70];
            uint64_t v74 = *(void *)v72;
            uint64_t v73 = *((void *)v72 + 1);
            *(void *)uint64_t v71 = v74;
            *((void *)v71 + 1) = v73;
            swift_bridgeObjectRelease();
            uint64_t v75 = v14[10];
            uint64_t v76 = &a1[v75];
            uint64_t v77 = &a2[v75];
            uint64_t v79 = *(void *)v77;
            uint64_t v78 = *((void *)v77 + 1);
            *(void *)uint64_t v76 = v79;
            *((void *)v76 + 1) = v78;
            swift_bridgeObjectRelease();
            uint64_t v80 = v14[11];
            long long v81 = &a1[v80];
            uint64_t v82 = &a2[v80];
            uint64_t v84 = *(void *)v82;
            uint64_t v83 = *((void *)v82 + 1);
            *(void *)long long v81 = v84;
            *((void *)v81 + 1) = v83;
            swift_bridgeObjectRelease();
            return a1;
          }
        }
        else
        {
          if (!v59)
          {
            (*(void (**)(char *, char *, uint64_t))(v56 + 40))(v53, v54, v55);
            goto LABEL_42;
          }
          (*(void (**)(char *, uint64_t))(v56 + 8))(v53, v55);
        }
        uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD60);
        memcpy(v53, v54, *(void *)(*(void *)(v60 - 8) + 64));
        goto LABEL_42;
      }
      (*(void (**)(char *, uint64_t))(v37 + 8))(a1, v36);
    }
    uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD78);
    memcpy(a1, a2, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_36;
  }
  if (v10)
  {
LABEL_7:
    size_t v13 = *(void *)(*(void *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v13);
    return a1;
  }
  uint64_t v11 = (int *)type metadata accessor for WorkoutPlanDetail();
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(a2, 1, v11))
  {
    memcpy(a1, a2, *(void *)(v7 + 64));
  }
  else
  {
    uint64_t v22 = sub_24F071520();
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(a2, 1, v22))
    {
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD78);
      memcpy(a1, a2, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(a1, a2, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(a1, 0, 1, v22);
    }
    uint64_t v25 = v11[5];
    uint64_t v26 = &a1[v25];
    uint64_t v27 = &a2[v25];
    uint64_t v28 = sub_24F071490();
    uint64_t v29 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD60);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v26, v27, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    *(_OWORD *)&a1[v11[6]] = *(_OWORD *)&a2[v11[6]];
    uint64_t v31 = v11[7];
    uint64_t v32 = &a1[v31];
    uint64_t v33 = &a2[v31];
    uint64_t v34 = sub_24F0714D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
    a1[v11[8]] = a2[v11[8]];
    *(_OWORD *)&a1[v11[9]] = *(_OWORD *)&a2[v11[9]];
    *(_OWORD *)&a1[v11[10]] = *(_OWORD *)&a2[v11[10]];
    *(_OWORD *)&a1[v11[11]] = *(_OWORD *)&a2[v11[11]];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(a1, 0, 1, v11);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutPlanBannerAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24F03974C);
}

uint64_t sub_24F03974C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 4) {
    return v5 - 3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for WorkoutPlanBannerAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24F0397D0);
}

uint64_t sub_24F0397D0(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 3);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_24F039858(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 3, v2);
}

uint64_t sub_24F0398C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 3, v4);
}

void sub_24F039938()
{
  sub_24F0399B0();
  if (v0 <= 0x3F) {
    swift_initEnumMetadataSinglePayload();
  }
}

void sub_24F0399B0()
{
  if (!qword_26B1EC0F8)
  {
    type metadata accessor for WorkoutPlanDetail();
    unint64_t v0 = sub_24F0721F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B1EC0F8);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for WorkoutPlanBannerAction.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F039AD4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutPlanBannerAction.CodingKeys()
{
  return &type metadata for WorkoutPlanBannerAction.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for WorkoutPlanBannerAction.ActivePlanDetailsFetchedCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24F039BA8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutPlanBannerAction.ActivePlanDetailsFetchedCodingKeys()
{
  return &type metadata for WorkoutPlanBannerAction.ActivePlanDetailsFetchedCodingKeys;
}

ValueMetadata *type metadata accessor for WorkoutPlanBannerAction.ViewAppearedCodingKeys()
{
  return &type metadata for WorkoutPlanBannerAction.ViewAppearedCodingKeys;
}

ValueMetadata *type metadata accessor for WorkoutPlanBannerAction.RefreshItemsCodingKeys()
{
  return &type metadata for WorkoutPlanBannerAction.RefreshItemsCodingKeys;
}

ValueMetadata *type metadata accessor for WorkoutPlanBannerAction.ResetLoadStateCodingKeys()
{
  return &type metadata for WorkoutPlanBannerAction.ResetLoadStateCodingKeys;
}

unint64_t sub_24F039C14()
{
  unint64_t result = qword_2699A3C48;
  if (!qword_2699A3C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3C48);
  }
  return result;
}

unint64_t sub_24F039C6C()
{
  unint64_t result = qword_2699A3C50;
  if (!qword_2699A3C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3C50);
  }
  return result;
}

unint64_t sub_24F039CC4()
{
  unint64_t result = qword_2699A3C58;
  if (!qword_2699A3C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3C58);
  }
  return result;
}

unint64_t sub_24F039D1C()
{
  unint64_t result = qword_2699A3C60;
  if (!qword_2699A3C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3C60);
  }
  return result;
}

unint64_t sub_24F039D74()
{
  unint64_t result = qword_2699A3C68;
  if (!qword_2699A3C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3C68);
  }
  return result;
}

unint64_t sub_24F039DCC()
{
  unint64_t result = qword_2699A3C70;
  if (!qword_2699A3C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3C70);
  }
  return result;
}

unint64_t sub_24F039E24()
{
  unint64_t result = qword_2699A3C78;
  if (!qword_2699A3C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3C78);
  }
  return result;
}

unint64_t sub_24F039E7C()
{
  unint64_t result = qword_2699A3C80;
  if (!qword_2699A3C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3C80);
  }
  return result;
}

unint64_t sub_24F039ED4()
{
  unint64_t result = qword_2699A3C88;
  if (!qword_2699A3C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3C88);
  }
  return result;
}

unint64_t sub_24F039F2C()
{
  unint64_t result = qword_2699A3C90;
  if (!qword_2699A3C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3C90);
  }
  return result;
}

unint64_t sub_24F039F84()
{
  unint64_t result = qword_2699A3C98;
  if (!qword_2699A3C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3C98);
  }
  return result;
}

unint64_t sub_24F039FDC()
{
  unint64_t result = qword_2699A3CA0;
  if (!qword_2699A3CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3CA0);
  }
  return result;
}

uint64_t sub_24F03A030(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000018 && a2 == 0x800000024F07AE60 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6570704177656976 && a2 == 0xEC00000064657261 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4968736572666572 && a2 == 0xEC000000736D6574 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x616F4C7465736572 && a2 == 0xEE00657461745364)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_24F072400();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_24F03A23C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

ValueMetadata *type metadata accessor for PageCountButtonStyle()
{
  return &type metadata for PageCountButtonStyle;
}

uint64_t sub_24F03A2AC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24F03A2C8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v41 = a1;
  uint64_t v45 = a2;
  uint64_t v2 = sub_24F071920();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3CB0);
  MEMORY[0x270FA5388](v42);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3CB8);
  MEMORY[0x270FA5388](v43);
  int v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3CC0);
  MEMORY[0x270FA5388](v44);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24F071930();
  unsigned __int8 v12 = sub_24F071A10();
  unsigned __int8 v13 = sub_24F071A30();
  char v14 = sub_24F071A20();
  sub_24F071A20();
  if (sub_24F071A20() != v12) {
    char v14 = sub_24F071A20();
  }
  sub_24F071A20();
  if (sub_24F071A20() != v13) {
    char v14 = sub_24F071A20();
  }
  sub_24F071580();
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v7, v5, v2);
  uint64_t v23 = &v7[*(int *)(v42 + 36)];
  *uint64_t v23 = v14;
  *((void *)v23 + 1) = v16;
  *((void *)v23 + 2) = v18;
  *((void *)v23 + 3) = v20;
  *((void *)v23 + 4) = v22;
  v23[40] = 0;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  unsigned __int8 v24 = sub_24F0719F0();
  unsigned __int8 v25 = sub_24F071A00();
  char v26 = sub_24F071A20();
  sub_24F071A20();
  if (sub_24F071A20() != v24) {
    char v26 = sub_24F071A20();
  }
  sub_24F071A20();
  if (sub_24F071A20() != v25) {
    char v26 = sub_24F071A20();
  }
  sub_24F071580();
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  sub_24F016984((uint64_t)v7, (uint64_t)v9, &qword_2699A3CB0);
  uint64_t v35 = &v9[*(int *)(v43 + 36)];
  char *v35 = v26;
  *((void *)v35 + 1) = v28;
  *((void *)v35 + 2) = v30;
  *((void *)v35 + 3) = v32;
  *((void *)v35 + 4) = v34;
  v35[40] = 0;
  sub_24F01A7DC((uint64_t)v7, &qword_2699A3CB0);
  if (sub_24F071940())
  {
    uint64_t v36 = v41;
    swift_retain();
  }
  else
  {
    uint64_t v36 = sub_24F071D60();
  }
  char v37 = sub_24F0719E0();
  sub_24F016984((uint64_t)v9, (uint64_t)v11, &qword_2699A3CB8);
  uint64_t v38 = &v11[*(int *)(v44 + 36)];
  *(void *)uint64_t v38 = v36;
  v38[8] = v37;
  sub_24F01A7DC((uint64_t)v9, &qword_2699A3CB8);
  return sub_24F03A6A0((uint64_t)v11, v45);
}

uint64_t sub_24F03A698@<X0>(uint64_t a1@<X8>)
{
  return sub_24F03A2C8(*v1, a1);
}

uint64_t sub_24F03A6A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3CC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_24F03A70C()
{
  unint64_t result = qword_2699A3CC8;
  if (!qword_2699A3CC8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A3CC0);
    sub_24F03A7D4(&qword_2699A3CD0, &qword_2699A3CB8, (void (*)(void))sub_24F03A7AC);
    sub_24F03A8AC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3CC8);
  }
  return result;
}

uint64_t sub_24F03A7AC()
{
  return sub_24F03A7D4(&qword_2699A3CD8, &qword_2699A3CB0, (void (*)(void))sub_24F03A854);
}

uint64_t sub_24F03A7D4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24F03A854()
{
  unint64_t result = qword_2699A3CE0;
  if (!qword_2699A3CE0)
  {
    sub_24F071920();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3CE0);
  }
  return result;
}

unint64_t sub_24F03A8AC()
{
  unint64_t result = qword_2699A3CE8;
  if (!qword_2699A3CE8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A3CF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3CE8);
  }
  return result;
}

uint64_t LibraryCanvasContentState.init(allowedContentRatings:activeLayout:loadState:locale:page:isSubscribed:)@<X0>(uint64_t a1@<X0>, __int16 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X8>)
{
  __int16 v13 = *a2;
  char v14 = (int *)type metadata accessor for LibraryCanvasContentState();
  uint64_t v15 = v14[9];
  *(void *)a7 = a1;
  *(_WORD *)(a7 + 8) = v13;
  sub_24F03AA20(a3, a7 + v14[7]);
  uint64_t v16 = a7 + v14[8];
  uint64_t v17 = sub_24F071500();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v16, a4, v17);
  *(unsigned char *)(a7 + 10) = a5;
  *(unsigned char *)(a7 + v15) = a6;
  return result;
}

uint64_t type metadata accessor for LibraryCanvasContentState()
{
  uint64_t result = qword_26B1EBF18;
  if (!qword_26B1EBF18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24F03AA20(uint64_t a1, uint64_t a2)
{
  uint64_t State = type metadata accessor for LibraryCanvasContentLoadState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(State - 8) + 32))(a2, a1, State);
  return a2;
}

void LibraryCanvasContentState.activeLayout.getter(_WORD *a1@<X8>)
{
  *a1 = *(_WORD *)(v1 + 8);
}

uint64_t LibraryCanvasContentState.page.getter()
{
  return *(unsigned __int8 *)(v0 + 10);
}

uint64_t LibraryCanvasContentState.loadState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for LibraryCanvasContentState();
  return sub_24F03BC78(v1 + *(int *)(v3 + 28), a1, (uint64_t (*)(void))type metadata accessor for LibraryCanvasContentLoadState);
}

uint64_t LibraryCanvasContentState.loadState.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LibraryCanvasContentState() + 28);
  return sub_24F03AB28(a1, v3);
}

uint64_t sub_24F03AB28(uint64_t a1, uint64_t a2)
{
  uint64_t State = type metadata accessor for LibraryCanvasContentLoadState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(State - 8) + 40))(a2, a1, State);
  return a2;
}

uint64_t (*LibraryCanvasContentState.loadState.modify())()
{
  return nullsub_1;
}

uint64_t LibraryCanvasContentState.isSubscribed.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for LibraryCanvasContentState() + 36));
}

uint64_t LibraryCanvasContentState.isSubscribed.setter(char a1)
{
  uint64_t result = type metadata accessor for LibraryCanvasContentState();
  *(unsigned char *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*LibraryCanvasContentState.isSubscribed.modify())()
{
  return nullsub_1;
}

unint64_t sub_24F03AC70()
{
  unint64_t result = 0xD000000000000015;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x614C657669746361;
      break;
    case 2:
      unint64_t result = 1701273968;
      break;
    case 3:
      unint64_t result = 0x7461745364616F6CLL;
      break;
    case 4:
      unint64_t result = 0x656C61636F6CLL;
      break;
    case 5:
      unint64_t result = 0x7263736275537369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24F03AD44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24F03CF48(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24F03AD6C(uint64_t a1)
{
  unint64_t v2 = sub_24F03B4B8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F03ADA8(uint64_t a1)
{
  unint64_t v2 = sub_24F03B4B8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t LibraryCanvasContentState.withActiveLayout(_:)@<X0>(__int16 *a1@<X0>, uint64_t a2@<X8>)
{
  __int16 v4 = *a1;
  uint64_t v5 = *v2;
  uint64_t v6 = (int *)type metadata accessor for LibraryCanvasContentState();
  sub_24F03BC78((uint64_t)v2 + v6[7], a2 + v6[7], (uint64_t (*)(void))type metadata accessor for LibraryCanvasContentLoadState);
  uint64_t v7 = v6[8];
  uint64_t v8 = (uint64_t)v2 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24F071500();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v9, v8, v10);
  char v11 = *((unsigned char *)v2 + 10);
  uint64_t v12 = v6[9];
  char v13 = *((unsigned char *)v2 + v12);
  *(void *)a2 = v5;
  *(_WORD *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 10) = v11;
  *(unsigned char *)(a2 + v12) = v13;
  return swift_bridgeObjectRetain();
}

uint64_t LibraryCanvasContentState.withLocale(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *v2;
  __int16 v6 = *((_WORD *)v2 + 4);
  uint64_t v7 = (int *)type metadata accessor for LibraryCanvasContentState();
  sub_24F03BC78((uint64_t)v2 + v7[7], a2 + v7[7], (uint64_t (*)(void))type metadata accessor for LibraryCanvasContentLoadState);
  uint64_t v8 = a2 + v7[8];
  uint64_t v9 = sub_24F071500();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v8, a1, v9);
  char v10 = *((unsigned char *)v2 + 10);
  uint64_t v11 = v7[9];
  char v12 = *((unsigned char *)v2 + v11);
  *(void *)a2 = v5;
  *(_WORD *)(a2 + 8) = v6;
  *(unsigned char *)(a2 + 10) = v10;
  *(unsigned char *)(a2 + v11) = v12;
  return swift_bridgeObjectRetain();
}

uint64_t LibraryCanvasContentState.withAllowedContentRatings(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int16 v5 = *(_WORD *)(v2 + 8);
  __int16 v6 = (int *)type metadata accessor for LibraryCanvasContentState();
  sub_24F03BC78(v2 + v6[7], a2 + v6[7], (uint64_t (*)(void))type metadata accessor for LibraryCanvasContentLoadState);
  uint64_t v7 = v6[8];
  uint64_t v8 = v2 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24F071500();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v9, v8, v10);
  char v11 = *(unsigned char *)(v2 + 10);
  uint64_t v12 = v6[9];
  char v13 = *(unsigned char *)(v2 + v12);
  *(void *)a2 = a1;
  *(_WORD *)(a2 + 8) = v5;
  *(unsigned char *)(a2 + 10) = v11;
  *(unsigned char *)(a2 + v12) = v13;
  return swift_bridgeObjectRetain();
}

uint64_t LibraryCanvasContentState.withSubscription(_:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *v2;
  __int16 v6 = *((_WORD *)v2 + 4);
  uint64_t v7 = (int *)type metadata accessor for LibraryCanvasContentState();
  sub_24F03BC78((uint64_t)v2 + v7[7], a2 + v7[7], (uint64_t (*)(void))type metadata accessor for LibraryCanvasContentLoadState);
  uint64_t v8 = v7[8];
  uint64_t v9 = (uint64_t)v2 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_24F071500();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v10, v9, v11);
  char v12 = *((unsigned char *)v2 + 10);
  uint64_t v13 = v7[9];
  *(void *)a2 = v5;
  *(_WORD *)(a2 + 8) = v6;
  *(unsigned char *)(a2 + 10) = v12;
  *(unsigned char *)(a2 + v13) = a1;
  return swift_bridgeObjectRetain();
}

uint64_t LibraryCanvasContentState.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3CF8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24F03B4B8();
  sub_24F072480();
  uint64_t v11 = *v3;
  HIBYTE(v10) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3AA8);
  sub_24F03BB6C(&qword_2699A3D08, (void (*)(void))sub_24F03B50C);
  sub_24F0723F0();
  if (!v2)
  {
    LOWORD(v11) = *((_WORD *)v3 + 4);
    HIBYTE(v10) = 1;
    sub_24F027DDC();
    sub_24F0723F0();
    LOBYTE(v11) = *((unsigned char *)v3 + 10);
    HIBYTE(v10) = 2;
    sub_24F027D88();
    sub_24F0723F0();
    type metadata accessor for LibraryCanvasContentState();
    LOBYTE(v11) = 3;
    type metadata accessor for LibraryCanvasContentLoadState();
    sub_24F03BC30(&qword_2699A3D18, (void (*)(uint64_t))type metadata accessor for LibraryCanvasContentLoadState);
    sub_24F0723F0();
    LOBYTE(v11) = 4;
    sub_24F071500();
    sub_24F03BC30(&qword_2699A2D20, MEMORY[0x263F07690]);
    sub_24F0723F0();
    LOBYTE(v11) = 5;
    sub_24F0723D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_24F03B4B8()
{
  unint64_t result = qword_2699A3D00;
  if (!qword_2699A3D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3D00);
  }
  return result;
}

unint64_t sub_24F03B50C()
{
  unint64_t result = qword_2699A3D10;
  if (!qword_2699A3D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3D10);
  }
  return result;
}

uint64_t LibraryCanvasContentState.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v3 = sub_24F071500();
  uint64_t v34 = *(void *)(v3 - 8);
  uint64_t v35 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v32 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t State = type metadata accessor for LibraryCanvasContentLoadState();
  MEMORY[0x270FA5388](State);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3D20);
  uint64_t v33 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LibraryCanvasContentState();
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(int *)(v11 + 36);
  v13[v14] = 0;
  uint64_t v15 = a1[3];
  uint64_t v38 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_24F03B4B8();
  uint64_t v36 = v9;
  uint64_t v16 = (uint64_t)v39;
  sub_24F072470();
  if (v16) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  }
  int v39 = v7;
  uint64_t v30 = v14;
  uint64_t v17 = v13;
  uint64_t v18 = v33;
  uint64_t v19 = v34;
  uint64_t v20 = v35;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3AA8);
  char v40 = 0;
  sub_24F03BB6C(&qword_2699A3D28, (void (*)(void))sub_24F03BBDC);
  uint64_t v21 = v36;
  sub_24F072370();
  uint64_t v22 = (uint64_t)v17;
  uint64_t v23 = v41;
  *(void *)uint64_t v22 = v41;
  char v40 = 1;
  sub_24F028328();
  sub_24F072370();
  uint64_t v29 = v23;
  *(_WORD *)(v22 + 8) = v41;
  char v40 = 2;
  sub_24F0282D4();
  sub_24F072370();
  *(unsigned char *)(v22 + 10) = v41;
  LOBYTE(v41) = 3;
  sub_24F03BC30(&qword_2699A3D38, (void (*)(uint64_t))type metadata accessor for LibraryCanvasContentLoadState);
  sub_24F072370();
  sub_24F03AA20((uint64_t)v39, v22 + *(int *)(v10 + 28));
  LOBYTE(v41) = 4;
  sub_24F03BC30(&qword_2699A2D38, MEMORY[0x263F07690]);
  unsigned __int8 v24 = v32;
  sub_24F072370();
  uint64_t v25 = v22 + *(int *)(v10 + 32);
  int v39 = (char *)v22;
  (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v25, v24, v20);
  LOBYTE(v41) = 5;
  LOBYTE(v24) = sub_24F072350();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v37);
  uint64_t v26 = v31;
  uint64_t v27 = (uint64_t)v39;
  v39[v30] = v24 & 1;
  sub_24F03BC78(v27, v26, (uint64_t (*)(void))type metadata accessor for LibraryCanvasContentState);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  return sub_24F03BCE0(v27, (uint64_t (*)(void))type metadata accessor for LibraryCanvasContentState);
}

uint64_t sub_24F03BB6C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A3AA8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24F03BBDC()
{
  unint64_t result = qword_2699A3D30;
  if (!qword_2699A3D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3D30);
  }
  return result;
}

uint64_t sub_24F03BC30(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24F03BC78(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24F03BCE0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24F03BD40@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return LibraryCanvasContentState.init(from:)(a1, a2);
}

uint64_t sub_24F03BD58(void *a1)
{
  return LibraryCanvasContentState.encode(to:)(a1);
}

uint64_t _s14FitnessLibrary0B18CanvasContentStateV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_24F04D98C(*(void *)a1, *(void *)a2) & 1) != 0
    && *(unsigned __int8 *)(a1 + 8) == *(unsigned __int8 *)(a2 + 8)
    && (sub_24F071530() & 1) != 0
    && (sub_24F02D65C(*(unsigned char *)(a1 + 10), *(unsigned char *)(a2 + 10)) & 1) != 0
    && (uint64_t v4 = (int *)type metadata accessor for LibraryCanvasContentState(),
        (_s14FitnessLibrary0B22CanvasContentLoadStateO2eeoiySbAC_ACtFZ_0(a1 + v4[7], a2 + v4[7]) & 1) != 0)
    && (MEMORY[0x253351FB0](a1 + v4[8], a2 + v4[8]) & 1) != 0)
  {
    char v5 = *(unsigned char *)(a1 + v4[9]) ^ *(unsigned char *)(a2 + v4[9]) ^ 1;
  }
  else
  {
    char v5 = 0;
  }
  return v5 & 1;
}

uint64_t initializeBufferWithCopyOfBuffer for LibraryCanvasContentState(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *(_WORD *)(a1 + 8) = *((_WORD *)a2 + 4);
    *(unsigned char *)(a1 + 10) = *((unsigned char *)a2 + 10);
    uint64_t v8 = a3[7];
    uint64_t v9 = (_WORD *)(a1 + v8);
    uint64_t v10 = (_WORD *)((char *)a2 + v8);
    uint64_t State = type metadata accessor for LibraryCanvasContentLoadState();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(v9, v10, *(void *)(*(void *)(State - 8) + 64));
    }
    else
    {
      *(void *)uint64_t v9 = *(void *)v10;
      v9[4] = v10[4];
      swift_bridgeObjectRetain();
      uint64_t v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2699A3B38) + 64);
      uint64_t v13 = (char *)v9 + v12;
      uint64_t v14 = (char *)v10 + v12;
      uint64_t v15 = sub_24F071500();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v16 = a3[8];
    uint64_t v17 = v7 + v16;
    uint64_t v18 = (uint64_t)a2 + v16;
    uint64_t v19 = sub_24F071500();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    *(unsigned char *)(v7 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  }
  return v7;
}

uint64_t destroy for LibraryCanvasContentState(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  type metadata accessor for LibraryCanvasContentLoadState();
  if (swift_getEnumCaseMultiPayload() <= 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2699A3B38) + 64);
    uint64_t v6 = sub_24F071500();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 32);
  uint64_t v8 = sub_24F071500();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  return v9(v7, v8);
}

uint64_t initializeWithCopy for LibraryCanvasContentState(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(unsigned char *)(a1 + 10) = *(unsigned char *)(a2 + 10);
  uint64_t v6 = a3[7];
  uint64_t v7 = (_WORD *)(a1 + v6);
  uint64_t v8 = (_WORD *)(a2 + v6);
  uint64_t State = type metadata accessor for LibraryCanvasContentLoadState();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(v7, v8, *(void *)(*(void *)(State - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v7 = *(void *)v8;
    v7[4] = v8[4];
    swift_bridgeObjectRetain();
    uint64_t v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2699A3B38) + 64);
    uint64_t v11 = (char *)v7 + v10;
    uint64_t v12 = (char *)v8 + v10;
    uint64_t v13 = sub_24F071500();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_24F071500();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithCopy for LibraryCanvasContentState(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(unsigned char *)(a1 + 10) = *(unsigned char *)(a2 + 10);
  if (a1 != a2)
  {
    uint64_t v6 = a3[7];
    uint64_t v7 = (_WORD *)(a1 + v6);
    uint64_t v8 = (_WORD *)(a2 + v6);
    sub_24F03BCE0(a1 + v6, (uint64_t (*)(void))type metadata accessor for LibraryCanvasContentLoadState);
    uint64_t State = type metadata accessor for LibraryCanvasContentLoadState();
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(v7, v8, *(void *)(*(void *)(State - 8) + 64));
    }
    else
    {
      *(void *)uint64_t v7 = *(void *)v8;
      v7[4] = v8[4];
      swift_bridgeObjectRetain();
      uint64_t v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2699A3B38) + 64);
      uint64_t v11 = (char *)v7 + v10;
      uint64_t v12 = (char *)v8 + v10;
      uint64_t v13 = sub_24F071500();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_24F071500();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t initializeWithTake for LibraryCanvasContentState(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(unsigned char *)(a1 + 10) = *(unsigned char *)(a2 + 10);
  uint64_t v6 = a3[7];
  uint64_t v7 = (_WORD *)(a1 + v6);
  uint64_t v8 = (_WORD *)(a2 + v6);
  uint64_t State = type metadata accessor for LibraryCanvasContentLoadState();
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(v7, v8, *(void *)(*(void *)(State - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v7 = *(void *)v8;
    v7[4] = v8[4];
    uint64_t v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2699A3B38) + 64);
    uint64_t v11 = (char *)v7 + v10;
    uint64_t v12 = (char *)v8 + v10;
    uint64_t v13 = sub_24F071500();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_24F071500();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for LibraryCanvasContentState(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_WORD *)(a1 + 9) = *(_WORD *)(a2 + 9);
  if (a1 != a2)
  {
    uint64_t v6 = a3[7];
    uint64_t v7 = (_WORD *)(a1 + v6);
    uint64_t v8 = (_WORD *)(a2 + v6);
    sub_24F03BCE0(a1 + v6, (uint64_t (*)(void))type metadata accessor for LibraryCanvasContentLoadState);
    uint64_t State = type metadata accessor for LibraryCanvasContentLoadState();
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(v7, v8, *(void *)(*(void *)(State - 8) + 64));
    }
    else
    {
      *(void *)uint64_t v7 = *(void *)v8;
      v7[4] = v8[4];
      uint64_t v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2699A3B38) + 64);
      uint64_t v11 = (char *)v7 + v10;
      uint64_t v12 = (char *)v8 + v10;
      uint64_t v13 = sub_24F071500();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_24F071500();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 40))(v15, v16, v17);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryCanvasContentState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24F03C9DC);
}

uint64_t sub_24F03C9DC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t State = type metadata accessor for LibraryCanvasContentLoadState();
    uint64_t v9 = *(void *)(State - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = State;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 28);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_24F071500();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 32);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for LibraryCanvasContentState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24F03CB1C);
}

void *sub_24F03CB1C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t State = type metadata accessor for LibraryCanvasContentLoadState();
    uint64_t v9 = *(void *)(State - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = State;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 28);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_24F071500();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 32);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_24F03CC48()
{
  uint64_t result = type metadata accessor for LibraryCanvasContentLoadState();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_24F071500();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LibraryCanvasContentState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F03CE08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryCanvasContentState.CodingKeys()
{
  return &type metadata for LibraryCanvasContentState.CodingKeys;
}

unint64_t sub_24F03CE44()
{
  unint64_t result = qword_2699A3D40;
  if (!qword_2699A3D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3D40);
  }
  return result;
}

unint64_t sub_24F03CE9C()
{
  unint64_t result = qword_2699A3D48;
  if (!qword_2699A3D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3D48);
  }
  return result;
}

unint64_t sub_24F03CEF4()
{
  unint64_t result = qword_2699A3D50;
  if (!qword_2699A3D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3D50);
  }
  return result;
}

uint64_t sub_24F03CF48(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x800000024F07AE80 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x614C657669746361 && a2 == 0xEC00000074756F79 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701273968 && a2 == 0xE400000000000000 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7461745364616F6CLL && a2 == 0xE900000000000065 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7263736275537369 && a2 == 0xEC00000064656269)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v5 = sub_24F072400();
    swift_bridgeObjectRelease();
    if (v5) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_24F03D1EC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3D60);
  sub_24F007760(&qword_2699A3D68, &qword_2699A3D60);
  return sub_24F071600();
}

uint64_t OfflineView.init(store:canvasViewBuilder:contentUnavailableViewBuilder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(void *)a7 = sub_24F006060;
  *(void *)(a7 + 8) = result;
  *(unsigned char *)(a7 + 16) = 0;
  *(void *)(a7 + 24) = a3;
  *(void *)(a7 + 32) = a4;
  *(void *)(a7 + 40) = a5;
  *(void *)(a7 + 48) = a6;
  return result;
}

uint64_t sub_24F03D304()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t OfflineView.body.getter@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v44 = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A3B28);
  uint64_t v4 = a1[3];
  uint64_t v33 = a1[2];
  uint64_t v5 = v33;
  uint64_t v6 = sub_24F0716E0();
  uint64_t v39 = a1[4];
  uint64_t v63 = v39;
  uint64_t v64 = MEMORY[0x263F18C10];
  uint64_t v43 = MEMORY[0x263F18E48];
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v36 = sub_24F0221E8();
  *(void *)&long long v65 = v6;
  *((void *)&v65 + 1) = MEMORY[0x263F8D310];
  *(void *)&long long v66 = WitnessTable;
  *((void *)&v66 + 1) = v36;
  uint64_t v35 = MEMORY[0x263F1ABA8];
  swift_getOpaqueTypeMetadata2();
  uint64_t v34 = sub_24F0718B0();
  uint64_t v38 = sub_24F0718B0();
  uint64_t v7 = v4;
  uint64_t v32 = v4;
  sub_24F0718B0();
  uint64_t v8 = sub_24F071DB0();
  uint64_t v41 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v31 - v9;
  uint64_t v11 = sub_24F0716E0();
  uint64_t v42 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  char v40 = (uint64_t *)((char *)&v31 - v15);
  long long v16 = v2[1];
  long long v65 = *v2;
  long long v66 = v16;
  long long v67 = v2[2];
  uint64_t v68 = *((void *)v2 + 6);
  uint64_t v45 = v5;
  uint64_t v46 = v7;
  uint64_t v17 = a1[5];
  uint64_t v18 = v39;
  uint64_t v47 = v39;
  uint64_t v48 = v17;
  uint64_t v49 = &v65;
  uint64_t v19 = sub_24F007760(&qword_2699A3D58, &qword_2699A3B28);
  uint64_t v59 = v6;
  uint64_t v60 = MEMORY[0x263F8D310];
  uint64_t v61 = WitnessTable;
  unint64_t v62 = v36;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v57 = v17;
  uint64_t v58 = OpaqueTypeConformance2;
  uint64_t v21 = swift_getWitnessTable();
  uint64_t v55 = v19;
  uint64_t v56 = v21;
  uint64_t v53 = swift_getWitnessTable();
  uint64_t v54 = v17;
  uint64_t v22 = swift_getWitnessTable();
  sub_24F071DA0();
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = v32;
  *(void *)(v23 + 16) = v33;
  *(void *)(v23 + 24) = v24;
  *(void *)(v23 + 32) = v18;
  *(void *)(v23 + 40) = v17;
  long long v25 = v66;
  *(_OWORD *)(v23 + 48) = v65;
  *(_OWORD *)(v23 + 64) = v25;
  *(_OWORD *)(v23 + 80) = v67;
  *(void *)(v23 + 96) = v68;
  sub_24F01BC50((uint64_t)&v65);
  uint64_t v52 = v22;
  uint64_t v26 = swift_getWitnessTable();
  sub_24F071CF0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v10, v8);
  uint64_t v50 = v26;
  uint64_t v51 = MEMORY[0x263F1A240];
  uint64_t v27 = swift_getWitnessTable();
  uint64_t v28 = v40;
  sub_24F005EE8(v40, v14, v11, v27);
  uint64_t v29 = *(void (**)(char *, uint64_t))(v42 + 8);
  v29(v14, v11);
  sub_24F005EE8(v44, v28, v11, v27);
  return ((uint64_t (*)(void *, uint64_t))v29)(v28, v11);
}

uint64_t sub_24F03D868@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v134 = a5;
  uint64_t v129 = a6;
  uint64_t v10 = sub_24F071500();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v117 = (char *)&v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24F072040();
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v114 = (char *)&v104 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v107 = (char *)&v104 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_24F0716E0();
  uint64_t v115 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v113 = (char *)&v104 - v17;
  uint64_t v163 = a4;
  uint64_t v164 = MEMORY[0x263F18C10];
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v135 = sub_24F0221E8();
  uint64_t v136 = v16;
  *(void *)&long long v159 = v16;
  *((void *)&v159 + 1) = MEMORY[0x263F8D310];
  uint64_t v133 = WitnessTable;
  *(void *)&long long v160 = WitnessTable;
  *((void *)&v160 + 1) = v135;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v116 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v112 = (char *)&v104 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  char v111 = (uint64_t *)((char *)&v104 - v23);
  uint64_t v126 = *(void *)(a3 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v121 = (char *)&v104 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v123 = (uint64_t *)((char *)&v104 - v26);
  uint64_t v118 = v27;
  uint64_t v28 = sub_24F0718B0();
  uint64_t v120 = *(void *)(v28 - 8);
  uint64_t v29 = MEMORY[0x270FA5388](v28);
  uint64_t v119 = (char *)&v104 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v124 = (char *)&v104 - v31;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A3B28);
  uint64_t v127 = v28;
  uint64_t v33 = sub_24F0718B0();
  uint64_t v125 = *(void *)(v33 - 8);
  uint64_t v34 = MEMORY[0x270FA5388](v33);
  unint64_t v36 = (char *)&v104 - v35;
  uint64_t v122 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v38 = (char *)&v104 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_24F0718B0();
  uint64_t v130 = *(void *)(v39 - 8);
  uint64_t v131 = v39;
  MEMORY[0x270FA5388](v39);
  uint64_t v41 = (char *)&v104 - v40;
  long long v42 = a1[1];
  long long v159 = *a1;
  long long v160 = v42;
  long long v161 = a1[2];
  uint64_t v162 = *((void *)a1 + 6);
  uint64_t v109 = a4;
  uint64_t v110 = a2;
  uint64_t v155 = a2;
  unint64_t v156 = a3;
  uint64_t v132 = a3;
  uint64_t v43 = v134;
  uint64_t v157 = a4;
  uint64_t v158 = v134;
  uint64_t v106 = type metadata accessor for OfflineView();
  sub_24F03D1EC();
  swift_getKeyPath();
  sub_24F071FE0();
  swift_release();
  uint64_t v44 = swift_release();
  unint64_t v45 = v156;
  uint64_t v128 = v41;
  if (v156 >= 2)
  {
    uint64_t v104 = v32;
    uint64_t v105 = v36;
    uint64_t v122 = v33;
    if (v156 == 2)
    {
      uint64_t v54 = v121;
      (*((void (**)(uint64_t))a1 + 5))(v44);
      uint64_t v55 = v123;
      uint64_t v56 = v132;
      uint64_t v57 = v134;
      sub_24F005EE8(v123, v54, v132, v134);
      uint64_t v125 = *(void *)(v126 + 8);
      v126 += 8;
      ((void (*)(void *, uint64_t))v125)(v54, v56);
      sub_24F005EE8(v54, v55, v56, v57);
      uint64_t v58 = sub_24F007760(&qword_2699A3D58, &qword_2699A3B28);
      unint64_t v51 = v135;
      uint64_t v59 = v136;
      *(void *)&long long v159 = v136;
      uint64_t v60 = v133;
      *((void *)&v159 + 1) = MEMORY[0x263F8D310];
      *(void *)&long long v160 = v133;
      *((void *)&v160 + 1) = v135;
      uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
      uint64_t v153 = v57;
      uint64_t v154 = OpaqueTypeConformance2;
      uint64_t v62 = swift_getWitnessTable();
      uint64_t v151 = v58;
      uint64_t v152 = v62;
      uint64_t v50 = v59;
      uint64_t v63 = v122;
      swift_getWitnessTable();
      uint64_t v49 = v128;
      sub_24F068EFC((uint64_t)v54, v63, v56);
      uint64_t v64 = v54;
      long long v65 = (void (*)(void *, uint64_t))v125;
      ((void (*)(void *, uint64_t))v125)(v64, v56);
      v65(v123, v56);
      uint64_t v43 = v134;
      uint64_t v52 = v60;
    }
    else
    {
      uint64_t v66 = v157;
      uint64_t v67 = v155;
      swift_bridgeObjectRetain();
      sub_24F002A98(v67, v45);
      uint64_t v68 = *(void *)(v66 + 16);
      uint64_t v69 = swift_bridgeObjectRelease();
      if (v68)
      {
        uint64_t v70 = v107;
        (*((void (**)(uint64_t))a1 + 3))(v69);
        sub_24F0719F0();
        uint64_t v71 = v113;
        uint64_t v72 = v110;
        sub_24F071CE0();
        (*(void (**)(char *, uint64_t))(v108 + 8))(v70, v72);
        sub_24F072030();
        if (qword_2699A2D08 != -1) {
          swift_once();
        }
        long long v73 = a1[1];
        long long v159 = *a1;
        long long v160 = v73;
        long long v161 = a1[2];
        uint64_t v162 = *((void *)a1 + 6);
        id v74 = (id)qword_2699B32D8;
        sub_24F03D1EC();
        swift_getKeyPath();
        sub_24F071FE0();
        swift_release();
        swift_release();
        *(void *)&long long v159 = sub_24F072070();
        *((void *)&v159 + 1) = v75;
        uint64_t v76 = v112;
        unint64_t v78 = v135;
        uint64_t v77 = v136;
        uint64_t v79 = MEMORY[0x263F8D310];
        uint64_t v52 = v133;
        sub_24F071C20();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v115 + 8))(v71, v77);
        *(void *)&long long v159 = v77;
        *((void *)&v159 + 1) = v79;
        *(void *)&long long v160 = v52;
        *((void *)&v160 + 1) = v78;
        uint64_t v80 = swift_getOpaqueTypeConformance2();
        long long v81 = v111;
        uint64_t v82 = v118;
        sub_24F005EE8(v111, v76, v118, v80);
        uint64_t v83 = *(void (**)(void *, uint64_t))(v116 + 8);
        v83(v76, v82);
        sub_24F005EE8(v76, v81, v82, v80);
        uint64_t v43 = v134;
        sub_24F068EFC((uint64_t)v76, v132, v82);
        v83(v76, v82);
        v83(v81, v82);
      }
      else
      {
        uint64_t v84 = v121;
        (*((void (**)(uint64_t))a1 + 5))(v69);
        int v85 = v123;
        uint64_t v86 = v132;
        uint64_t v43 = v134;
        sub_24F005EE8(v123, v84, v132, v134);
        uint64_t v87 = *(void (**)(void *, uint64_t))(v126 + 8);
        v87(v84, v86);
        sub_24F005EE8(v84, v85, v86, v43);
        *(void *)&long long v159 = v136;
        uint64_t v79 = MEMORY[0x263F8D310];
        uint64_t v88 = v133;
        *((void *)&v159 + 1) = MEMORY[0x263F8D310];
        *(void *)&long long v160 = v133;
        *((void *)&v160 + 1) = v135;
        swift_getOpaqueTypeConformance2();
        sub_24F068E04((uint64_t)v84, v86);
        uint64_t v89 = v84;
        uint64_t v52 = v88;
        v87(v89, v86);
        v87(v85, v86);
      }
      *(void *)&long long v159 = v136;
      *((void *)&v159 + 1) = v79;
      *(void *)&long long v160 = v52;
      *((void *)&v160 + 1) = v135;
      uint64_t v90 = swift_getOpaqueTypeConformance2();
      uint64_t v143 = v43;
      uint64_t v144 = v90;
      uint64_t v133 = MEMORY[0x263F19B40];
      uint64_t v91 = v127;
      uint64_t v92 = swift_getWitnessTable();
      unint64_t v93 = v119;
      sub_24F005EE8(v119, v124, v91, v92);
      uint64_t v94 = sub_24F007760(&qword_2699A3D58, &qword_2699A3B28);
      uint64_t v95 = (uint64_t)v105;
      sub_24F068EFC((uint64_t)v93, v104, v91);
      uint64_t v96 = *(void (**)(char *, uint64_t))(v120 + 8);
      v96(v93, v91);
      uint64_t v141 = v94;
      uint64_t v142 = v92;
      uint64_t v50 = v136;
      uint64_t v97 = v122;
      swift_getWitnessTable();
      uint64_t v49 = v128;
      sub_24F068E04(v95, v97);
      (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v95, v97);
      v96(v124, v91);
      unint64_t v51 = v135;
    }
    uint64_t v53 = v129;
  }
  else
  {
    sub_24F071610();
    uint64_t v46 = sub_24F007760(&qword_2699A3D58, &qword_2699A3B28);
    *(void *)&long long v159 = v136;
    *((void *)&v159 + 1) = MEMORY[0x263F8D310];
    *(void *)&long long v160 = v133;
    *((void *)&v160 + 1) = v135;
    uint64_t v47 = swift_getOpaqueTypeConformance2();
    uint64_t v139 = v43;
    uint64_t v140 = v47;
    uint64_t v48 = swift_getWitnessTable();
    sub_24F068E04((uint64_t)v38, v32);
    uint64_t v137 = v46;
    uint64_t v138 = v48;
    uint64_t v49 = v128;
    swift_getWitnessTable();
    sub_24F068E04((uint64_t)v36, v33);
    (*(void (**)(char *, uint64_t))(v125 + 8))(v36, v33);
    (*(void (**)(char *, uint64_t))(v122 + 8))(v38, v32);
    unint64_t v51 = v135;
    uint64_t v50 = v136;
    uint64_t v52 = v133;
    uint64_t v53 = v129;
  }
  uint64_t v98 = sub_24F007760(&qword_2699A3D58, &qword_2699A3B28);
  *(void *)&long long v159 = v50;
  *((void *)&v159 + 1) = MEMORY[0x263F8D310];
  *(void *)&long long v160 = v52;
  *((void *)&v160 + 1) = v51;
  uint64_t v99 = swift_getOpaqueTypeConformance2();
  uint64_t v149 = v43;
  uint64_t v150 = v99;
  uint64_t v100 = swift_getWitnessTable();
  uint64_t v147 = v98;
  uint64_t v148 = v100;
  uint64_t v145 = swift_getWitnessTable();
  uint64_t v146 = v43;
  uint64_t v101 = v131;
  uint64_t v102 = swift_getWitnessTable();
  sub_24F005EE8(v53, v49, v101, v102);
  return (*(uint64_t (**)(char *, uint64_t))(v130 + 8))(v49, v101);
}

uint64_t sub_24F03E70C@<X0>(void *a1@<X8>)
{
  return sub_24F03D868(*(long long **)(v1 + 48), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), a1);
}

uint64_t sub_24F03E71C()
{
  return swift_release();
}

uint64_t sub_24F03E790()
{
  sub_24F007284();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 104, 7);
}

uint64_t sub_24F03E7DC()
{
  return sub_24F03E71C();
}

uint64_t sub_24F03E7EC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for OfflineView()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24F03E84C()
{
  return swift_getWitnessTable();
}

BOOL static LibraryAccountState.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_24F03EA90()
{
  uint64_t v1 = 0x656E676953746F6ELL;
  if (*v0 == 1) {
    uint64_t v1 = 0x6E4964656E676973;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E4964656E676973;
  }
}

uint64_t sub_24F03EAF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24F03F290(a1, a2);
  *a3 = result;
  return result;
}

void sub_24F03EB18(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_24F03EB24(uint64_t a1)
{
  unint64_t v2 = sub_24F03F070();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F03EB60(uint64_t a1)
{
  unint64_t v2 = sub_24F03F070();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F03EB9C(uint64_t a1)
{
  unint64_t v2 = sub_24F03F0C4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F03EBD8(uint64_t a1)
{
  unint64_t v2 = sub_24F03F0C4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F03EC14(uint64_t a1)
{
  unint64_t v2 = sub_24F03F118();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F03EC50(uint64_t a1)
{
  unint64_t v2 = sub_24F03F118();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F03EC8C(uint64_t a1)
{
  unint64_t v2 = sub_24F03F16C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F03ECC8(uint64_t a1)
{
  unint64_t v2 = sub_24F03F16C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t LibraryAccountState.encode(to:)(void *a1, int a2)
{
  int v24 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3D70);
  uint64_t v22 = *(void *)(v3 - 8);
  uint64_t v23 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v21 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3D78);
  uint64_t v19 = *(void *)(v5 - 8);
  uint64_t v20 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3D80);
  uint64_t v18 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3D88);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24F03F070();
  sub_24F072480();
  if ((_BYTE)v24)
  {
    if (v24 == 1)
    {
      char v26 = 1;
      sub_24F03F118();
      sub_24F072390();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v20);
    }
    else
    {
      char v27 = 2;
      sub_24F03F0C4();
      uint64_t v15 = v21;
      sub_24F072390();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v15, v23);
    }
  }
  else
  {
    char v25 = 0;
    sub_24F03F16C();
    sub_24F072390();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v10, v8);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

unint64_t sub_24F03F070()
{
  unint64_t result = qword_2699A3D90;
  if (!qword_2699A3D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3D90);
  }
  return result;
}

unint64_t sub_24F03F0C4()
{
  unint64_t result = qword_2699A3D98;
  if (!qword_2699A3D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3D98);
  }
  return result;
}

unint64_t sub_24F03F118()
{
  unint64_t result = qword_2699A3DA0;
  if (!qword_2699A3DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3DA0);
  }
  return result;
}

unint64_t sub_24F03F16C()
{
  unint64_t result = qword_2699A3DA8;
  if (!qword_2699A3DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3DA8);
  }
  return result;
}

void *LibraryAccountState.init(from:)(void *a1)
{
  return sub_24F03F41C(a1);
}

void *sub_24F03F1D8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_24F03F41C(a1);
  if (!v2) {
    *a2 = (_BYTE)result;
  }
  return result;
}

uint64_t sub_24F03F204(void *a1)
{
  return LibraryAccountState.encode(to:)(a1, *v1);
}

uint64_t LibraryAccountState.hash(into:)()
{
  return sub_24F072440();
}

uint64_t LibraryAccountState.hashValue.getter()
{
  return sub_24F072460();
}

uint64_t sub_24F03F290(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E4964656E676973 && a2 == 0xE800000000000000;
  if (v2 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E4964656E676973 && a2 == 0xEF74736575477341 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656E676953746F6ELL && a2 == 0xEB000000006E4964)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24F072400();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

void *sub_24F03F41C(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3E00);
  uint64_t v25 = *(void *)(v2 - 8);
  uint64_t v26 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v29 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3E08);
  uint64_t v24 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3E10);
  uint64_t v23 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3E18);
  uint64_t v28 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (uint64_t *)((char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24F03F070();
  uint64_t v12 = (uint64_t)v30;
  sub_24F072470();
  if (v12) {
    goto LABEL_7;
  }
  uint64_t v22 = v6;
  uint64_t v13 = v29;
  uint64_t v30 = a1;
  uint64_t v14 = v11;
  uint64_t v15 = sub_24F072380();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v17 = sub_24F072260();
    swift_allocError();
    uint64_t v11 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3060);
    void *v11 = &type metadata for LibraryAccountState;
    sub_24F072310();
    sub_24F072250();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v17 - 8) + 104))(v11, *MEMORY[0x263F8DCB0], v17);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(void *, uint64_t))(v28 + 8))(v14, v9);
    a1 = v30;
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v11;
  }
  uint64_t v11 = (void *)*(unsigned __int8 *)(v15 + 32);
  if (*(unsigned char *)(v15 + 32))
  {
    if (v11 == 1)
    {
      char v32 = 1;
      sub_24F03F118();
      sub_24F072300();
      uint64_t v16 = v28;
      (*(void (**)(char *, uint64_t))(v24 + 8))(v5, v27);
      swift_bridgeObjectRelease();
      (*(void (**)(void *, uint64_t))(v16 + 8))(v14, v9);
    }
    else
    {
      char v33 = 2;
      sub_24F03F0C4();
      sub_24F072300();
      uint64_t v20 = v28;
      (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v26);
      swift_bridgeObjectRelease();
      (*(void (**)(void *, uint64_t))(v20 + 8))(v14, v9);
    }
  }
  else
  {
    char v31 = 0;
    sub_24F03F16C();
    sub_24F072300();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v22);
    swift_bridgeObjectRelease();
    (*(void (**)(void *, uint64_t))(v28 + 8))(v14, v9);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  return v11;
}

unint64_t sub_24F03F990()
{
  unint64_t result = qword_2699A3DB0;
  if (!qword_2699A3DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3DB0);
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryAccountState()
{
  return &type metadata for LibraryAccountState;
}

unsigned char *_s14FitnessLibrary19LibraryAccountStateOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F03FAC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryAccountState.CodingKeys()
{
  return &type metadata for LibraryAccountState.CodingKeys;
}

ValueMetadata *type metadata accessor for LibraryAccountState.SignedInCodingKeys()
{
  return &type metadata for LibraryAccountState.SignedInCodingKeys;
}

ValueMetadata *type metadata accessor for LibraryAccountState.SignedInAsGuestCodingKeys()
{
  return &type metadata for LibraryAccountState.SignedInAsGuestCodingKeys;
}

ValueMetadata *type metadata accessor for LibraryAccountState.NotSignedInCodingKeys()
{
  return &type metadata for LibraryAccountState.NotSignedInCodingKeys;
}

unint64_t sub_24F03FB34()
{
  unint64_t result = qword_2699A3DB8;
  if (!qword_2699A3DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3DB8);
  }
  return result;
}

unint64_t sub_24F03FB8C()
{
  unint64_t result = qword_2699A3DC0;
  if (!qword_2699A3DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3DC0);
  }
  return result;
}

unint64_t sub_24F03FBE4()
{
  unint64_t result = qword_2699A3DC8;
  if (!qword_2699A3DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3DC8);
  }
  return result;
}

unint64_t sub_24F03FC3C()
{
  unint64_t result = qword_2699A3DD0;
  if (!qword_2699A3DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3DD0);
  }
  return result;
}

unint64_t sub_24F03FC94()
{
  unint64_t result = qword_2699A3DD8;
  if (!qword_2699A3DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3DD8);
  }
  return result;
}

unint64_t sub_24F03FCEC()
{
  unint64_t result = qword_2699A3DE0;
  if (!qword_2699A3DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3DE0);
  }
  return result;
}

unint64_t sub_24F03FD44()
{
  unint64_t result = qword_2699A3DE8;
  if (!qword_2699A3DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3DE8);
  }
  return result;
}

unint64_t sub_24F03FD9C()
{
  unint64_t result = qword_2699A3DF0;
  if (!qword_2699A3DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3DF0);
  }
  return result;
}

unint64_t sub_24F03FDF4()
{
  unint64_t result = qword_2699A3DF8;
  if (!qword_2699A3DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3DF8);
  }
  return result;
}

uint64_t sub_24F03FE50(uint64_t TupleTypeMetadata, unint64_t a2, uint64_t a3)
{
  unsigned int v4 = (uint64_t *)TupleTypeMetadata;
  uint64_t v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    uint64_t v6 = *v5;
  }
  else
  {
    MEMORY[0x270FA5388](TupleTypeMetadata);
    uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (a2)
    {
      unint64_t v9 = 0;
      if (a2 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)(v8 - (char *)v5) < 0x20) {
        goto LABEL_9;
      }
      unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      uint64_t v10 = (long long *)(v5 + 2);
      uint64_t v11 = v8 + 16;
      unint64_t v12 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v13 = *v10;
        *(v11 - 1) = *(v10 - 1);
        _OWORD *v11 = v13;
        v10 += 2;
        v11 += 2;
        v12 -= 4;
      }
      while (v12);
      if (v9 != a2)
      {
LABEL_9:
        unint64_t v14 = a2 - v9;
        uint64_t v15 = v9;
        uint64_t v16 = &v8[8 * v9];
        uint64_t v17 = &v5[v15];
        do
        {
          uint64_t v18 = *v17++;
          *(void *)uint64_t v16 = v18;
          v16 += 8;
          --v14;
        }
        while (v14);
      }
    }
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    uint64_t v6 = TupleTypeMetadata;
  }
  MEMORY[0x270FA5388](TupleTypeMetadata);
  uint64_t v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v21 = (int *)(v6 + 32);
    unint64_t v22 = a2;
    do
    {
      if (a2 == 1) {
        int v23 = 0;
      }
      else {
        int v23 = *v21;
      }
      uint64_t v25 = *v5++;
      uint64_t v24 = v25;
      uint64_t v26 = *v4++;
      (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 16))(&v20[v23], v26);
      v21 += 4;
      --v22;
    }
    while (v22);
  }
  return sub_24F071F70();
}

uint64_t LibraryView.init(navigationViewBuilder:canvasViewBuilder:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = a3;
  a5[1] = a4;
  a5[2] = result;
  a5[3] = a2;
  return result;
}

uint64_t LibraryView.body.getter@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v3 = sub_24F0718D0();
  uint64_t v28 = *(void *)(v3 - 8);
  uint64_t v29 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v26 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A2EF0);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v25 = *(void *)(a1 + 24);
  uint64_t v23 = v5;
  swift_getTupleTypeMetadata2();
  sub_24F071F60();
  swift_getWitnessTable();
  sub_24F071E80();
  sub_24F0716E0();
  swift_getTupleTypeMetadata2();
  sub_24F071F60();
  swift_getWitnessTable();
  sub_24F071EA0();
  swift_getWitnessTable();
  uint64_t v6 = sub_24F0715C0();
  uint64_t v24 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v23 - v7;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v36 = v6;
  uint64_t v37 = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v11 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  unint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (uint64_t *)((char *)&v23 - v15);
  sub_24F0719C0();
  uint64_t v31 = v23;
  uint64_t v32 = v25;
  long long v17 = *v27;
  long long v18 = v27[1];
  long long v33 = *(_OWORD *)(a1 + 32);
  long long v34 = v17;
  long long v35 = v18;
  uint64_t v19 = v26;
  sub_24F0070CC();
  sub_24F0718C0();
  LOBYTE(a1) = sub_24F0719C0();
  sub_24F0719B0();
  sub_24F0719B0();
  if (sub_24F0719B0() != a1) {
    sub_24F0719B0();
  }
  sub_24F071C70();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v19, v29);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v6);
  uint64_t v36 = v6;
  uint64_t v37 = WitnessTable;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_24F005EE8(v16, v14, OpaqueTypeMetadata2, OpaqueTypeConformance2);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v11 + 8);
  v21(v14, OpaqueTypeMetadata2);
  sub_24F005EE8(v30, v16, OpaqueTypeMetadata2, OpaqueTypeConformance2);
  return ((uint64_t (*)(void *, uint64_t))v21)(v16, OpaqueTypeMetadata2);
}

uint64_t sub_24F040480@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  uint64_t v26 = a8;
  uint64_t v27 = a4;
  uint64_t v24 = a7;
  uint64_t v25 = a3;
  uint64_t v28 = a9;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A2EF0);
  swift_getTupleTypeMetadata2();
  sub_24F071F60();
  swift_getWitnessTable();
  sub_24F071E80();
  sub_24F0716E0();
  swift_getTupleTypeMetadata2();
  sub_24F071F60();
  swift_getWitnessTable();
  uint64_t v13 = sub_24F071EA0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  long long v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (uint64_t *)((char *)&v23 - v18);
  sub_24F071F20();
  uint64_t v29 = a5;
  uint64_t v30 = a6;
  uint64_t v31 = v24;
  uint64_t v32 = v26;
  uint64_t v33 = a1;
  uint64_t v34 = a2;
  uint64_t v35 = v25;
  uint64_t v36 = v27;
  sub_24F071E90();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24F005EE8(v19, v17, v13, WitnessTable);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v14 + 8);
  v21(v17, v13);
  sub_24F005EE8(v28, v19, v13, WitnessTable);
  return ((uint64_t (*)(void *, uint64_t))v21)(v19, v13);
}

uint64_t sub_24F0406F4()
{
  return sub_24F041290((uint64_t (*)(void, void, void, void, void, void, void, void))sub_24F040480);
}

uint64_t sub_24F04070C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24F040750@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v49 = a8;
  uint64_t v50 = a4;
  uint64_t v47 = a7;
  uint64_t v48 = a3;
  uint64_t v46 = a2;
  uint64_t v43 = a1;
  uint64_t v55 = a9;
  uint64_t v45 = a6;
  uint64_t v42 = a5;
  swift_getTupleTypeMetadata2();
  uint64_t v44 = sub_24F071F60();
  v41[1] = swift_getWitnessTable();
  uint64_t v9 = sub_24F071E80();
  uint64_t v51 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v41 - v10;
  uint64_t v12 = sub_24F0716E0();
  uint64_t v52 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v54 = (char *)v41 - v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A2EF0);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v53 = (char *)v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)v41 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)v41 - v24;
  uint64_t v60 = 0;
  LOBYTE(v61) = 1;
  unsigned __int8 v26 = sub_24F0719C0();
  sub_24F0719B0();
  sub_24F0719B0();
  if (sub_24F0719B0() != v26) {
    sub_24F0719B0();
  }
  sub_24F071F30();
  sub_24F071C80();
  uint64_t v27 = *(uint64_t (**)(char *, char *, uint64_t))(v18 + 32);
  uint64_t v56 = v25;
  uint64_t v28 = v27(v25, v23, v17);
  MEMORY[0x270FA5388](v28);
  uint64_t v29 = v45;
  v41[-8] = v42;
  v41[-7] = v29;
  uint64_t v30 = v49;
  v41[-6] = v47;
  v41[-5] = v30;
  uint64_t v31 = v46;
  v41[-4] = v43;
  v41[-3] = v31;
  uint64_t v32 = v50;
  v41[-2] = v48;
  v41[-1] = v32;
  sub_24F071860();
  sub_24F071E70();
  sub_24F0719F0();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24F071CE0();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v11, v9);
  uint64_t v62 = WitnessTable;
  uint64_t v63 = MEMORY[0x263F18C10];
  uint64_t v34 = swift_getWitnessTable();
  uint64_t v35 = v54;
  sub_24F005EE8(v54, v15, v12, v34);
  uint64_t v36 = v52;
  uint64_t v37 = *(void (**)(char *, uint64_t))(v52 + 8);
  v37(v15, v12);
  uint64_t v38 = v53;
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v53, v56, v17);
  uint64_t v60 = v38;
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v15, v35, v12);
  uint64_t v61 = v15;
  v59[0] = v17;
  v59[1] = v12;
  uint64_t OpaqueTypeConformance2 = MEMORY[0x263F1B6B0];
  uint64_t v58 = MEMORY[0x263F1B698];
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v58 = v34;
  sub_24F03FE50((uint64_t)&v60, 2uLL, (uint64_t)v59);
  v37(v35, v12);
  uint64_t v39 = *(void (**)(char *, uint64_t))(v18 + 8);
  v39(v56, v17);
  v37(v15, v12);
  return ((uint64_t (*)(char *, uint64_t))v39)(v38, v17);
}

uint64_t sub_24F040CE4@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  uint64_t v32 = a5;
  uint64_t v33 = a6;
  uint64_t v35 = a2;
  uint64_t v36 = a1;
  uint64_t v38 = a7;
  uint64_t v37 = *(void *)(a3 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](a1);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v32 - v15;
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v14);
  uint64_t v21 = (char *)&v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v24 = (uint64_t *)((char *)&v32 - v23);
  uint64_t v39 = (char *)&v32 - v23;
  v25(v22);
  sub_24F005EE8(v24, v21, a4, a6);
  uint64_t v34 = *(uint64_t (**)(char *, uint64_t))(v18 + 8);
  uint64_t v26 = v34(v21, a4);
  v36(v26);
  uint64_t v27 = v16;
  sub_24F005EE8(v16, v13, a3, a5);
  uint64_t v28 = v37;
  uint64_t v29 = *(void (**)(char *, uint64_t))(v37 + 8);
  v29(v13, a3);
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v39, a4);
  v43[0] = v21;
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v13, v27, a3);
  v43[1] = v13;
  v42[0] = a4;
  v42[1] = a3;
  uint64_t v40 = v33;
  uint64_t v41 = v32;
  sub_24F03FE50((uint64_t)v43, 2uLL, (uint64_t)v42);
  v29(v27, a3);
  uint64_t v30 = v34;
  v34(v39, a4);
  v29(v13, a3);
  return v30(v21, a4);
}

uint64_t sub_24F040FAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 40);
}

void *assignWithCopy for WorkoutPlanBannerEnvironment(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for WorkoutPlanBannerEnvironment(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutPlanBannerEnvironment(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkoutPlanBannerEnvironment(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for LibraryView()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24F0410FC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24F041260()
{
  return sub_24F041290((uint64_t (*)(void, void, void, void, void, void, void, void))sub_24F040750);
}

uint64_t sub_24F041278()
{
  return sub_24F041290((uint64_t (*)(void, void, void, void, void, void, void, void))sub_24F040CE4);
}

uint64_t sub_24F041290(uint64_t (*a1)(void, void, void, void, void, void, void, void))
{
  return a1(v1[6], v1[7], v1[8], v1[9], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_24F0412B0()
{
  if (*v0) {
    return 1701602409;
  }
  else {
    return 0x64656863746566;
  }
}

uint64_t sub_24F0412E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24F0453AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24F04130C(uint64_t a1)
{
  unint64_t v2 = sub_24F042774();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F041348(uint64_t a1)
{
  unint64_t v2 = sub_24F042774();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F041384(uint64_t a1)
{
  unint64_t v2 = sub_24F04281C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F0413C0(uint64_t a1)
{
  unint64_t v2 = sub_24F04281C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F0413FC(uint64_t a1)
{
  unint64_t v2 = sub_24F0427C8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F041438(uint64_t a1)
{
  unint64_t v2 = sub_24F0427C8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t WorkoutPlanBannerLoadState.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3E20);
  uint64_t v24 = *(void *)(v2 - 8);
  uint64_t v25 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v22 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3E28);
  uint64_t v27 = *(void *)(v4 - 8);
  uint64_t v28 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v26 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v23 = (uint64_t)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t State = type metadata accessor for WorkoutPlanBannerLoadState();
  MEMORY[0x270FA5388](State - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3E30);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24F042774();
  sub_24F072480();
  sub_24F00D284(v29, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6) == 1)
  {
    char v31 = 1;
    sub_24F0427C8();
    uint64_t v16 = v22;
    sub_24F072390();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v16, v25);
  }
  else
  {
    uint64_t v18 = v23;
    sub_24F00DE1C((uint64_t)v11, v23);
    char v30 = 0;
    sub_24F04281C();
    uint64_t v19 = v26;
    sub_24F072390();
    type metadata accessor for WorkoutPlanDetail();
    sub_24F042920(&qword_2699A3BF8, (void (*)(uint64_t))type metadata accessor for WorkoutPlanDetail);
    uint64_t v20 = v28;
    sub_24F0723B0();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v19, v20);
    sub_24F01A7DC(v18, &qword_26B1EC0F0);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t WorkoutPlanBannerLoadState.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3E50);
  uint64_t v38 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  uint64_t v44 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3E58);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  uint64_t v40 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v42 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3E60);
  uint64_t v43 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t State = type metadata accessor for WorkoutPlanBannerLoadState();
  uint64_t v11 = MEMORY[0x270FA5388](State);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v35 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24F042774();
  uint64_t v16 = v46;
  sub_24F072470();
  if (v16) {
    goto LABEL_7;
  }
  uint64_t v36 = v13;
  uint64_t v37 = v15;
  uint64_t v17 = v44;
  uint64_t v18 = v45;
  uint64_t v46 = a1;
  uint64_t v19 = sub_24F072380();
  uint64_t v20 = v7;
  uint64_t v21 = v9;
  if (*(void *)(v19 + 16) != 1)
  {
    uint64_t v23 = sub_24F072260();
    swift_allocError();
    uint64_t v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3060);
    *uint64_t v25 = State;
    sub_24F072310();
    sub_24F072250();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v23 - 8) + 104))(v25, *MEMORY[0x263F8DCB0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v21, v7);
    a1 = v46;
LABEL_7:
    uint64_t v27 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v27);
  }
  uint64_t v22 = (uint64_t)v46;
  if (*(unsigned char *)(v19 + 32))
  {
    char v48 = 1;
    sub_24F0427C8();
    sub_24F072300();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v17, v18);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v21, v7);
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
    uint64_t v30 = (uint64_t)v37;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v37, 1, 1, v29);
  }
  else
  {
    char v47 = 0;
    sub_24F04281C();
    uint64_t v26 = v42;
    sub_24F072300();
    type metadata accessor for WorkoutPlanDetail();
    sub_24F042920(&qword_2699A3C28, (void (*)(uint64_t))type metadata accessor for WorkoutPlanDetail);
    uint64_t v31 = (uint64_t)v36;
    uint64_t v32 = v39;
    sub_24F072330();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v26, v32);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v21, v20);
    uint64_t v33 = v46;
    uint64_t v30 = (uint64_t)v37;
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v31, 0, 1, v34);
    sub_24F042870(v31, v30, (uint64_t (*)(void))type metadata accessor for WorkoutPlanBannerLoadState);
    uint64_t v22 = (uint64_t)v33;
  }
  sub_24F042870(v30, v41, (uint64_t (*)(void))type metadata accessor for WorkoutPlanBannerLoadState);
  uint64_t v27 = v22;
  return __swift_destroy_boxed_opaque_existential_1(v27);
}

uint64_t sub_24F041EE0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return WorkoutPlanBannerLoadState.init(from:)(a1, a2);
}

uint64_t sub_24F041EF8(void *a1)
{
  return WorkoutPlanBannerLoadState.encode(to:)(a1);
}

uint64_t WorkoutPlanBannerLoadState.hash(into:)()
{
  uint64_t v1 = type metadata accessor for WorkoutPlanDetail();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v16 - v10;
  uint64_t State = type metadata accessor for WorkoutPlanBannerLoadState();
  MEMORY[0x270FA5388](State - 8);
  uint64_t v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24F00D284(v0, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 1, v5) == 1) {
    return sub_24F072440();
  }
  sub_24F00DE1C((uint64_t)v14, (uint64_t)v11);
  sub_24F072440();
  sub_24F00DE84((uint64_t)v11, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v9, 1, v1) == 1)
  {
    sub_24F072450();
  }
  else
  {
    sub_24F042870((uint64_t)v9, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for WorkoutPlanDetail);
    sub_24F072450();
    WorkoutPlanDetail.hash(into:)();
    sub_24F045490((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for WorkoutPlanDetail);
  }
  return sub_24F01A7DC((uint64_t)v11, &qword_26B1EC0F0);
}

uint64_t WorkoutPlanBannerLoadState.hashValue.getter()
{
  return sub_24F072460();
}

uint64_t sub_24F0421DC()
{
  return sub_24F072460();
}

uint64_t sub_24F042220()
{
  return sub_24F072460();
}

uint64_t _s14FitnessLibrary22WorkoutPlanBannerStateV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WorkoutPlanDetail();
  uint64_t v33 = *(void *)(v4 - 8);
  uint64_t v34 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v31 = (uint64_t)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_26B1EC100);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v32 = (uint64_t)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v31 - v13;
  uint64_t State = type metadata accessor for WorkoutPlanBannerLoadState();
  MEMORY[0x270FA5388](State - 8);
  uint64_t v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC218);
  uint64_t v19 = MEMORY[0x270FA5388](v18 - 8);
  uint64_t v21 = (char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = (uint64_t)&v21[*(int *)(v19 + 56)];
  sub_24F00D284(a1, (uint64_t)v21);
  sub_24F00D284(a2, v22);
  uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (v23((uint64_t)v21, 1, v9) == 1)
  {
    if (v23(v22, 1, v9) == 1) {
      goto LABEL_14;
    }
    goto LABEL_6;
  }
  sub_24F00D284((uint64_t)v21, (uint64_t)v17);
  if (v23(v22, 1, v9) != 1)
  {
    sub_24F00DE1C(v22, (uint64_t)v14);
    uint64_t v24 = (uint64_t)&v8[*(int *)(v6 + 48)];
    sub_24F00DE1C((uint64_t)v17, (uint64_t)v8);
    sub_24F00DE84((uint64_t)v14, v24);
    uint64_t v25 = v34;
    uint64_t v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48);
    if (v26((uint64_t)v8, 1, v34) == 1)
    {
      sub_24F01A7DC((uint64_t)v14, &qword_26B1EC0F0);
      if (v26(v24, 1, v25) == 1)
      {
        sub_24F01A7DC((uint64_t)v8, &qword_26B1EC0F0);
LABEL_14:
        sub_24F045490((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for WorkoutPlanBannerLoadState);
        return 1;
      }
    }
    else
    {
      uint64_t v27 = v32;
      sub_24F00DE84((uint64_t)v8, v32);
      if (v26(v24, 1, v25) != 1)
      {
        uint64_t v28 = v31;
        sub_24F042870(v24, v31, (uint64_t (*)(void))type metadata accessor for WorkoutPlanDetail);
        char v29 = static WorkoutPlanDetail.== infix(_:_:)(v27, v28);
        sub_24F045490(v28, (uint64_t (*)(void))type metadata accessor for WorkoutPlanDetail);
        sub_24F01A7DC((uint64_t)v14, &qword_26B1EC0F0);
        sub_24F045490(v27, (uint64_t (*)(void))type metadata accessor for WorkoutPlanDetail);
        sub_24F01A7DC((uint64_t)v8, &qword_26B1EC0F0);
        if (v29) {
          goto LABEL_14;
        }
LABEL_15:
        sub_24F045490((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for WorkoutPlanBannerLoadState);
        return 0;
      }
      sub_24F01A7DC((uint64_t)v14, &qword_26B1EC0F0);
      sub_24F045490(v27, (uint64_t (*)(void))type metadata accessor for WorkoutPlanDetail);
    }
    sub_24F01A7DC((uint64_t)v8, qword_26B1EC100);
    goto LABEL_15;
  }
  sub_24F01A7DC((uint64_t)v17, &qword_26B1EC0F0);
LABEL_6:
  sub_24F01A7DC((uint64_t)v21, &qword_26B1EC218);
  return 0;
}

uint64_t type metadata accessor for WorkoutPlanBannerLoadState()
{
  uint64_t result = qword_26B1EC208;
  if (!qword_26B1EC208) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_24F042774()
{
  unint64_t result = qword_2699A3E38;
  if (!qword_2699A3E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3E38);
  }
  return result;
}

unint64_t sub_24F0427C8()
{
  unint64_t result = qword_2699A3E40;
  if (!qword_2699A3E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3E40);
  }
  return result;
}

unint64_t sub_24F04281C()
{
  unint64_t result = qword_2699A3E48;
  if (!qword_2699A3E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3E48);
  }
  return result;
}

uint64_t sub_24F042870(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24F0428D8()
{
  return sub_24F042920(&qword_2699A3E68, (void (*)(uint64_t))type metadata accessor for WorkoutPlanBannerLoadState);
}

uint64_t sub_24F042920(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for WorkoutPlanBannerLoadState(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = (int *)type metadata accessor for WorkoutPlanDetail();
      uint64_t v11 = *((void *)v10 - 1);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v11 + 48))(a2, 1, v10))
      {
        memcpy(a1, a2, *(void *)(v8 + 64));
      }
      else
      {
        uint64_t v12 = sub_24F071520();
        uint64_t v13 = *(void *)(v12 - 8);
        uint64_t v44 = v11;
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
        {
          uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD78);
          memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v13 + 16))(a1, a2, v12);
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
        }
        uint64_t v15 = v10[5];
        uint64_t v16 = (char *)a1 + v15;
        uint64_t v17 = (char *)a2 + v15;
        uint64_t v18 = sub_24F071490();
        uint64_t v19 = *(void *)(v18 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
        {
          uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD60);
          memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
        }
        uint64_t v21 = v10[6];
        uint64_t v22 = (uint64_t *)((char *)a1 + v21);
        uint64_t v23 = (uint64_t *)((char *)a2 + v21);
        uint64_t v24 = v23[1];
        *uint64_t v22 = *v23;
        v22[1] = v24;
        uint64_t v25 = v10[7];
        uint64_t v43 = (char *)a1 + v25;
        uint64_t v26 = (char *)a2 + v25;
        uint64_t v27 = sub_24F0714D0();
        uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
        swift_bridgeObjectRetain();
        v28(v43, v26, v27);
        *((unsigned char *)a1 + v10[8]) = *((unsigned char *)a2 + v10[8]);
        uint64_t v29 = v10[9];
        uint64_t v30 = (uint64_t *)((char *)a1 + v29);
        uint64_t v31 = (uint64_t *)((char *)a2 + v29);
        uint64_t v32 = v31[1];
        *uint64_t v30 = *v31;
        v30[1] = v32;
        uint64_t v33 = v10[10];
        uint64_t v34 = (uint64_t *)((char *)a1 + v33);
        uint64_t v35 = (uint64_t *)((char *)a2 + v33);
        uint64_t v36 = v35[1];
        *uint64_t v34 = *v35;
        v34[1] = v36;
        uint64_t v37 = v10[11];
        uint64_t v38 = (uint64_t *)((char *)a1 + v37);
        uint64_t v39 = (uint64_t *)((char *)a2 + v37);
        uint64_t v40 = v39[1];
        *uint64_t v38 = *v39;
        v38[1] = v40;
        uint64_t v41 = *(void (**)(uint64_t *, void, uint64_t, int *))(v44 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v41(a1, 0, 1, v10);
      }
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

char *initializeWithCopy for WorkoutPlanBannerLoadState(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = (int *)type metadata accessor for WorkoutPlanDetail();
    uint64_t v9 = *((void *)v8 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v9 + 48))(a2, 1, v8))
    {
      memcpy(a1, a2, *(void *)(v7 + 64));
    }
    else
    {
      uint64_t v42 = v9;
      uint64_t v10 = sub_24F071520();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
      {
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD78);
        memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))(a1, a2, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
      }
      uint64_t v13 = v8[5];
      uint64_t v14 = &a1[v13];
      uint64_t v15 = &a2[v13];
      uint64_t v16 = sub_24F071490();
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD60);
        memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
      uint64_t v19 = v8[6];
      uint64_t v20 = &a1[v19];
      uint64_t v21 = &a2[v19];
      uint64_t v22 = *((void *)v21 + 1);
      *(void *)uint64_t v20 = *(void *)v21;
      *((void *)v20 + 1) = v22;
      uint64_t v23 = v8[7];
      uint64_t v41 = &a1[v23];
      uint64_t v24 = &a2[v23];
      uint64_t v25 = sub_24F0714D0();
      uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
      swift_bridgeObjectRetain();
      v26(v41, v24, v25);
      a1[v8[8]] = a2[v8[8]];
      uint64_t v27 = v8[9];
      uint64_t v28 = &a1[v27];
      uint64_t v29 = &a2[v27];
      uint64_t v30 = *((void *)v29 + 1);
      *(void *)uint64_t v28 = *(void *)v29;
      *((void *)v28 + 1) = v30;
      uint64_t v31 = v8[10];
      uint64_t v32 = &a1[v31];
      uint64_t v33 = &a2[v31];
      uint64_t v34 = *((void *)v33 + 1);
      *(void *)uint64_t v32 = *(void *)v33;
      *((void *)v32 + 1) = v34;
      uint64_t v35 = v8[11];
      uint64_t v36 = &a1[v35];
      uint64_t v37 = &a2[v35];
      uint64_t v38 = *((void *)v37 + 1);
      *(void *)uint64_t v36 = *(void *)v37;
      *((void *)v36 + 1) = v38;
      uint64_t v39 = *(void (**)(char *, void, uint64_t, int *))(v42 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v39(a1, 0, 1, v8);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

char *assignWithCopy for WorkoutPlanBannerLoadState(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_24F01A7DC((uint64_t)a1, &qword_26B1EC0F0);
      goto LABEL_7;
    }
    uint64_t v14 = (int *)type metadata accessor for WorkoutPlanDetail();
    uint64_t v15 = *((void *)v14 - 1);
    uint64_t v16 = *(uint64_t (**)(char *, uint64_t, int *))(v15 + 48);
    int v17 = v16(a1, 1, v14);
    int v18 = v16(a2, 1, v14);
    if (v17)
    {
      if (!v18)
      {
        uint64_t v19 = sub_24F071520();
        uint64_t v20 = *(void *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(a2, 1, v19))
        {
          uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD78);
          memcpy(a1, a2, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 16))(a1, a2, v19);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(a1, 0, 1, v19);
        }
        uint64_t v54 = v14[5];
        uint64_t v55 = &a1[v54];
        uint64_t v56 = &a2[v54];
        uint64_t v57 = sub_24F071490();
        uint64_t v58 = *(void *)(v57 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
        {
          uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD60);
          memcpy(v55, v56, *(void *)(*(void *)(v59 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v55, v56, v57);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
        }
        uint64_t v60 = v14[6];
        uint64_t v61 = &a1[v60];
        uint64_t v62 = &a2[v60];
        *(void *)uint64_t v61 = *(void *)v62;
        *((void *)v61 + 1) = *((void *)v62 + 1);
        uint64_t v63 = v14[7];
        uint64_t v64 = &a1[v63];
        long long v65 = &a2[v63];
        uint64_t v66 = sub_24F0714D0();
        uint64_t v67 = *(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 16);
        swift_bridgeObjectRetain();
        v67(v64, v65, v66);
        a1[v14[8]] = a2[v14[8]];
        uint64_t v68 = v14[9];
        uint64_t v69 = &a1[v68];
        uint64_t v70 = &a2[v68];
        *(void *)uint64_t v69 = *(void *)v70;
        *((void *)v69 + 1) = *((void *)v70 + 1);
        uint64_t v71 = v14[10];
        uint64_t v72 = &a1[v71];
        long long v73 = &a2[v71];
        *(void *)uint64_t v72 = *(void *)v73;
        *((void *)v72 + 1) = *((void *)v73 + 1);
        uint64_t v74 = v14[11];
        uint64_t v75 = &a1[v74];
        uint64_t v76 = &a2[v74];
        *(void *)uint64_t v75 = *(void *)v76;
        *((void *)v75 + 1) = *((void *)v76 + 1);
        uint64_t v77 = *(void (**)(char *, void, uint64_t, int *))(v15 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v77(a1, 0, 1, v14);
        return a1;
      }
      goto LABEL_17;
    }
    if (v18)
    {
      sub_24F045490((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for WorkoutPlanDetail);
LABEL_17:
      size_t v13 = *(void *)(v7 + 64);
      goto LABEL_8;
    }
    uint64_t v49 = sub_24F071520();
    uint64_t v50 = *(void *)(v49 - 8);
    uint64_t v51 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v50 + 48);
    int v52 = v51(a1, 1, v49);
    int v53 = v51(a2, 1, v49);
    if (v52)
    {
      if (!v53)
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(a1, a2, v49);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(a1, 0, 1, v49);
        goto LABEL_36;
      }
    }
    else
    {
      if (!v53)
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 24))(a1, a2, v49);
LABEL_36:
        uint64_t v79 = v14[5];
        uint64_t v80 = &a1[v79];
        long long v81 = &a2[v79];
        uint64_t v82 = sub_24F071490();
        uint64_t v83 = *(void *)(v82 - 8);
        uint64_t v84 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v83 + 48);
        int v85 = v84(v80, 1, v82);
        int v86 = v84(v81, 1, v82);
        if (v85)
        {
          if (!v86)
          {
            (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v80, v81, v82);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v80, 0, 1, v82);
LABEL_42:
            uint64_t v88 = v14[6];
            uint64_t v89 = &a1[v88];
            uint64_t v90 = &a2[v88];
            *(void *)uint64_t v89 = *(void *)v90;
            *((void *)v89 + 1) = *((void *)v90 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v91 = v14[7];
            uint64_t v92 = &a1[v91];
            unint64_t v93 = &a2[v91];
            uint64_t v94 = sub_24F0714D0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 24))(v92, v93, v94);
            a1[v14[8]] = a2[v14[8]];
            uint64_t v95 = v14[9];
            uint64_t v96 = &a1[v95];
            uint64_t v97 = &a2[v95];
            *(void *)uint64_t v96 = *(void *)v97;
            *((void *)v96 + 1) = *((void *)v97 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v98 = v14[10];
            uint64_t v99 = &a1[v98];
            uint64_t v100 = &a2[v98];
            *(void *)uint64_t v99 = *(void *)v100;
            *((void *)v99 + 1) = *((void *)v100 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v101 = v14[11];
            uint64_t v102 = &a1[v101];
            uint64_t v103 = &a2[v101];
            *(void *)uint64_t v102 = *(void *)v103;
            *((void *)v102 + 1) = *((void *)v103 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            return a1;
          }
        }
        else
        {
          if (!v86)
          {
            (*(void (**)(char *, char *, uint64_t))(v83 + 24))(v80, v81, v82);
            goto LABEL_42;
          }
          (*(void (**)(char *, uint64_t))(v83 + 8))(v80, v82);
        }
        uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD60);
        memcpy(v80, v81, *(void *)(*(void *)(v87 - 8) + 64));
        goto LABEL_42;
      }
      (*(void (**)(char *, uint64_t))(v50 + 8))(a1, v49);
    }
    uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD78);
    memcpy(a1, a2, *(void *)(*(void *)(v78 - 8) + 64));
    goto LABEL_36;
  }
  if (v10)
  {
LABEL_7:
    size_t v13 = *(void *)(*(void *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v13);
    return a1;
  }
  uint64_t v11 = (int *)type metadata accessor for WorkoutPlanDetail();
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(a2, 1, v11))
  {
    memcpy(a1, a2, *(void *)(v7 + 64));
  }
  else
  {
    uint64_t v105 = v12;
    uint64_t v22 = sub_24F071520();
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(a2, 1, v22))
    {
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD78);
      memcpy(a1, a2, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(a1, a2, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(a1, 0, 1, v22);
    }
    uint64_t v25 = v11[5];
    uint64_t v26 = &a1[v25];
    uint64_t v27 = &a2[v25];
    uint64_t v28 = sub_24F071490();
    uint64_t v29 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD60);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    uint64_t v31 = v11[6];
    uint64_t v32 = &a1[v31];
    uint64_t v33 = &a2[v31];
    *(void *)uint64_t v32 = *(void *)v33;
    *((void *)v32 + 1) = *((void *)v33 + 1);
    uint64_t v34 = v11[7];
    uint64_t v104 = &a1[v34];
    uint64_t v35 = &a2[v34];
    uint64_t v36 = sub_24F0714D0();
    uint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
    swift_bridgeObjectRetain();
    v37(v104, v35, v36);
    a1[v11[8]] = a2[v11[8]];
    uint64_t v38 = v11[9];
    uint64_t v39 = &a1[v38];
    uint64_t v40 = &a2[v38];
    *(void *)uint64_t v39 = *(void *)v40;
    *((void *)v39 + 1) = *((void *)v40 + 1);
    uint64_t v41 = v11[10];
    uint64_t v42 = &a1[v41];
    uint64_t v43 = &a2[v41];
    *(void *)uint64_t v42 = *(void *)v43;
    *((void *)v42 + 1) = *((void *)v43 + 1);
    uint64_t v44 = v11[11];
    uint64_t v45 = &a1[v44];
    uint64_t v46 = &a2[v44];
    *(void *)uint64_t v45 = *(void *)v46;
    *((void *)v45 + 1) = *((void *)v46 + 1);
    char v47 = *(void (**)(char *, void, uint64_t, int *))(v105 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v47(a1, 0, 1, v11);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

char *initializeWithTake for WorkoutPlanBannerLoadState(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = (int *)type metadata accessor for WorkoutPlanDetail();
    uint64_t v9 = *((void *)v8 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v9 + 48))(a2, 1, v8))
    {
      memcpy(a1, a2, *(void *)(v7 + 64));
    }
    else
    {
      uint64_t v10 = sub_24F071520();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
      {
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD78);
        memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(a1, a2, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
      }
      uint64_t v13 = v8[5];
      uint64_t v14 = &a1[v13];
      uint64_t v15 = &a2[v13];
      uint64_t v16 = sub_24F071490();
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD60);
        memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
      *(_OWORD *)&a1[v8[6]] = *(_OWORD *)&a2[v8[6]];
      uint64_t v19 = v8[7];
      uint64_t v20 = &a1[v19];
      uint64_t v21 = &a2[v19];
      uint64_t v22 = sub_24F0714D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
      a1[v8[8]] = a2[v8[8]];
      *(_OWORD *)&a1[v8[9]] = *(_OWORD *)&a2[v8[9]];
      *(_OWORD *)&a1[v8[10]] = *(_OWORD *)&a2[v8[10]];
      *(_OWORD *)&a1[v8[11]] = *(_OWORD *)&a2[v8[11]];
      (*(void (**)(char *, void, uint64_t, int *))(v9 + 56))(a1, 0, 1, v8);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

char *assignWithTake for WorkoutPlanBannerLoadState(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_24F01A7DC((uint64_t)a1, &qword_26B1EC0F0);
      goto LABEL_7;
    }
    uint64_t v14 = (int *)type metadata accessor for WorkoutPlanDetail();
    uint64_t v15 = *((void *)v14 - 1);
    uint64_t v16 = *(uint64_t (**)(char *, uint64_t, int *))(v15 + 48);
    int v17 = v16(a1, 1, v14);
    int v18 = v16(a2, 1, v14);
    if (v17)
    {
      if (!v18)
      {
        uint64_t v19 = sub_24F071520();
        uint64_t v20 = *(void *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(a2, 1, v19))
        {
          uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD78);
          memcpy(a1, a2, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 32))(a1, a2, v19);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(a1, 0, 1, v19);
        }
        uint64_t v41 = v14[5];
        uint64_t v42 = &a1[v41];
        uint64_t v43 = &a2[v41];
        uint64_t v44 = sub_24F071490();
        uint64_t v45 = *(void *)(v44 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
        {
          uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD60);
          memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v42, v43, v44);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
        }
        *(_OWORD *)&a1[v14[6]] = *(_OWORD *)&a2[v14[6]];
        uint64_t v47 = v14[7];
        char v48 = &a1[v47];
        uint64_t v49 = &a2[v47];
        uint64_t v50 = sub_24F0714D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
        a1[v14[8]] = a2[v14[8]];
        *(_OWORD *)&a1[v14[9]] = *(_OWORD *)&a2[v14[9]];
        *(_OWORD *)&a1[v14[10]] = *(_OWORD *)&a2[v14[10]];
        *(_OWORD *)&a1[v14[11]] = *(_OWORD *)&a2[v14[11]];
        (*(void (**)(char *, void, uint64_t, int *))(v15 + 56))(a1, 0, 1, v14);
        return a1;
      }
      goto LABEL_17;
    }
    if (v18)
    {
      sub_24F045490((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for WorkoutPlanDetail);
LABEL_17:
      size_t v13 = *(void *)(v7 + 64);
      goto LABEL_8;
    }
    uint64_t v36 = sub_24F071520();
    uint64_t v37 = *(void *)(v36 - 8);
    uint64_t v38 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48);
    int v39 = v38(a1, 1, v36);
    int v40 = v38(a2, 1, v36);
    if (v39)
    {
      if (!v40)
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 32))(a1, a2, v36);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(a1, 0, 1, v36);
        goto LABEL_36;
      }
    }
    else
    {
      if (!v40)
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 40))(a1, a2, v36);
LABEL_36:
        uint64_t v52 = v14[5];
        int v53 = &a1[v52];
        uint64_t v54 = &a2[v52];
        uint64_t v55 = sub_24F071490();
        uint64_t v56 = *(void *)(v55 - 8);
        uint64_t v57 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v56 + 48);
        int v58 = v57(v53, 1, v55);
        int v59 = v57(v54, 1, v55);
        if (v58)
        {
          if (!v59)
          {
            (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v53, v54, v55);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
LABEL_42:
            uint64_t v61 = v14[6];
            uint64_t v62 = &a1[v61];
            uint64_t v63 = &a2[v61];
            uint64_t v65 = *(void *)v63;
            uint64_t v64 = *((void *)v63 + 1);
            *(void *)uint64_t v62 = v65;
            *((void *)v62 + 1) = v64;
            swift_bridgeObjectRelease();
            uint64_t v66 = v14[7];
            uint64_t v67 = &a1[v66];
            uint64_t v68 = &a2[v66];
            uint64_t v69 = sub_24F0714D0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 40))(v67, v68, v69);
            a1[v14[8]] = a2[v14[8]];
            uint64_t v70 = v14[9];
            uint64_t v71 = &a1[v70];
            uint64_t v72 = &a2[v70];
            uint64_t v74 = *(void *)v72;
            uint64_t v73 = *((void *)v72 + 1);
            *(void *)uint64_t v71 = v74;
            *((void *)v71 + 1) = v73;
            swift_bridgeObjectRelease();
            uint64_t v75 = v14[10];
            uint64_t v76 = &a1[v75];
            uint64_t v77 = &a2[v75];
            uint64_t v79 = *(void *)v77;
            uint64_t v78 = *((void *)v77 + 1);
            *(void *)uint64_t v76 = v79;
            *((void *)v76 + 1) = v78;
            swift_bridgeObjectRelease();
            uint64_t v80 = v14[11];
            long long v81 = &a1[v80];
            uint64_t v82 = &a2[v80];
            uint64_t v84 = *(void *)v82;
            uint64_t v83 = *((void *)v82 + 1);
            *(void *)long long v81 = v84;
            *((void *)v81 + 1) = v83;
            swift_bridgeObjectRelease();
            return a1;
          }
        }
        else
        {
          if (!v59)
          {
            (*(void (**)(char *, char *, uint64_t))(v56 + 40))(v53, v54, v55);
            goto LABEL_42;
          }
          (*(void (**)(char *, uint64_t))(v56 + 8))(v53, v55);
        }
        uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD60);
        memcpy(v53, v54, *(void *)(*(void *)(v60 - 8) + 64));
        goto LABEL_42;
      }
      (*(void (**)(char *, uint64_t))(v37 + 8))(a1, v36);
    }
    uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD78);
    memcpy(a1, a2, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_36;
  }
  if (v10)
  {
LABEL_7:
    size_t v13 = *(void *)(*(void *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v13);
    return a1;
  }
  uint64_t v11 = (int *)type metadata accessor for WorkoutPlanDetail();
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(a2, 1, v11))
  {
    memcpy(a1, a2, *(void *)(v7 + 64));
  }
  else
  {
    uint64_t v22 = sub_24F071520();
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(a2, 1, v22))
    {
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD78);
      memcpy(a1, a2, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(a1, a2, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(a1, 0, 1, v22);
    }
    uint64_t v25 = v11[5];
    uint64_t v26 = &a1[v25];
    uint64_t v27 = &a2[v25];
    uint64_t v28 = sub_24F071490();
    uint64_t v29 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EBD60);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v26, v27, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    *(_OWORD *)&a1[v11[6]] = *(_OWORD *)&a2[v11[6]];
    uint64_t v31 = v11[7];
    uint64_t v32 = &a1[v31];
    uint64_t v33 = &a2[v31];
    uint64_t v34 = sub_24F0714D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
    a1[v11[8]] = a2[v11[8]];
    *(_OWORD *)&a1[v11[9]] = *(_OWORD *)&a2[v11[9]];
    *(_OWORD *)&a1[v11[10]] = *(_OWORD *)&a2[v11[10]];
    *(_OWORD *)&a1[v11[11]] = *(_OWORD *)&a2[v11[11]];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(a1, 0, 1, v11);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutPlanBannerLoadState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24F044CA4);
}

uint64_t sub_24F044CA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for WorkoutPlanBannerLoadState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24F044D28);
}

uint64_t sub_24F044D28(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_24F044DAC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 1, v2);
}

uint64_t sub_24F044E18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 1, v4);
}

void sub_24F044E8C()
{
  sub_24F0399B0();
  if (v0 <= 0x3F) {
    swift_initEnumMetadataSinglePayload();
  }
}

unsigned char *storeEnumTagSinglePayload for WorkoutPlanBannerLoadState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F044FD0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutPlanBannerLoadState.CodingKeys()
{
  return &type metadata for WorkoutPlanBannerLoadState.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for WorkoutPlanBannerLoadState.FetchedCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24F0450A4);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutPlanBannerLoadState.FetchedCodingKeys()
{
  return &type metadata for WorkoutPlanBannerLoadState.FetchedCodingKeys;
}

ValueMetadata *type metadata accessor for WorkoutPlanBannerLoadState.IdleCodingKeys()
{
  return &type metadata for WorkoutPlanBannerLoadState.IdleCodingKeys;
}

unint64_t sub_24F0450F0()
{
  unint64_t result = qword_2699A3E70;
  if (!qword_2699A3E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3E70);
  }
  return result;
}

unint64_t sub_24F045148()
{
  unint64_t result = qword_2699A3E78;
  if (!qword_2699A3E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3E78);
  }
  return result;
}

unint64_t sub_24F0451A0()
{
  unint64_t result = qword_2699A3E80;
  if (!qword_2699A3E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3E80);
  }
  return result;
}

unint64_t sub_24F0451F8()
{
  unint64_t result = qword_2699A3E88;
  if (!qword_2699A3E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3E88);
  }
  return result;
}

unint64_t sub_24F045250()
{
  unint64_t result = qword_2699A3E90;
  if (!qword_2699A3E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3E90);
  }
  return result;
}

unint64_t sub_24F0452A8()
{
  unint64_t result = qword_2699A3E98;
  if (!qword_2699A3E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3E98);
  }
  return result;
}

unint64_t sub_24F045300()
{
  unint64_t result = qword_2699A3EA0;
  if (!qword_2699A3EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3EA0);
  }
  return result;
}

unint64_t sub_24F045358()
{
  unint64_t result = qword_2699A3EA8;
  if (!qword_2699A3EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3EA8);
  }
  return result;
}

uint64_t sub_24F0453AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64656863746566 && a2 == 0xE700000000000000;
  if (v2 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701602409 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24F072400();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24F045490(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

BOOL static LibraryInterface.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t LibraryInterface.hash(into:)()
{
  return sub_24F072440();
}

uint64_t sub_24F045530()
{
  uint64_t v1 = 0x647261646E617473;
  if (*v0 != 1) {
    uint64_t v1 = 30324;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x746361706D6F63;
  }
}

uint64_t sub_24F045580@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24F046724(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24F0455A8(uint64_t a1)
{
  unint64_t v2 = sub_24F045B34();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F0455E4(uint64_t a1)
{
  unint64_t v2 = sub_24F045B34();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F045620(uint64_t a1)
{
  unint64_t v2 = sub_24F045C30();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F04565C(uint64_t a1)
{
  unint64_t v2 = sub_24F045C30();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F045698(uint64_t a1)
{
  unint64_t v2 = sub_24F045BDC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F0456D4(uint64_t a1)
{
  unint64_t v2 = sub_24F045BDC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F045710(uint64_t a1)
{
  unint64_t v2 = sub_24F045B88();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F04574C(uint64_t a1)
{
  unint64_t v2 = sub_24F045B88();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t LibraryInterface.hashValue.getter()
{
  return sub_24F072460();
}

uint64_t LibraryInterface.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3EB0);
  uint64_t v24 = *(void *)(v4 - 8);
  uint64_t v25 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v23 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3EB8);
  uint64_t v21 = *(void *)(v6 - 8);
  uint64_t v22 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3EC0);
  uint64_t v19 = *(void *)(v9 - 8);
  uint64_t v20 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3EC8);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v16 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24F045B34();
  sub_24F072480();
  if (v16)
  {
    if (v16 == 1)
    {
      char v27 = 1;
      sub_24F045BDC();
      sub_24F072390();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v22);
    }
    else
    {
      char v28 = 2;
      sub_24F045B88();
      int v17 = v23;
      sub_24F072390();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v25);
    }
  }
  else
  {
    char v26 = 0;
    sub_24F045C30();
    sub_24F072390();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v20);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

unint64_t sub_24F045B34()
{
  unint64_t result = qword_2699A3ED0;
  if (!qword_2699A3ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3ED0);
  }
  return result;
}

unint64_t sub_24F045B88()
{
  unint64_t result = qword_2699A3ED8;
  if (!qword_2699A3ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3ED8);
  }
  return result;
}

unint64_t sub_24F045BDC()
{
  unint64_t result = qword_2699A3EE0;
  if (!qword_2699A3EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3EE0);
  }
  return result;
}

unint64_t sub_24F045C30()
{
  unint64_t result = qword_2699A3EE8;
  if (!qword_2699A3EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3EE8);
  }
  return result;
}

uint64_t LibraryInterface.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3EF0);
  uint64_t v33 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v37 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3EF8);
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3F00);
  uint64_t v31 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3F08);
  uint64_t v36 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24F045B34();
  uint64_t v12 = (uint64_t)v39;
  sub_24F072470();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v29 = v6;
  uint64_t v30 = 0;
  uint64_t v14 = v37;
  uint64_t v13 = v38;
  int v39 = a1;
  uint64_t v15 = v11;
  uint64_t v16 = sub_24F072380();
  if (*(void *)(v16 + 16) != 1)
  {
    uint64_t v21 = sub_24F072260();
    swift_allocError();
    uint64_t v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3060);
    *uint64_t v23 = &type metadata for LibraryInterface;
    sub_24F072310();
    sub_24F072250();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, *MEMORY[0x263F8DCB0], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v9);
    a1 = v39;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  int v17 = *(unsigned __int8 *)(v16 + 32);
  if (*(unsigned char *)(v16 + 32))
  {
    if (v17 == 1)
    {
      char v41 = 1;
      sub_24F045BDC();
      uint64_t v18 = v30;
      sub_24F072300();
      uint64_t v20 = v35;
      uint64_t v19 = v36;
      uint64_t v30 = v18;
      if (v18)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
LABEL_12:
        a1 = v39;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      }
      (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v34);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
    }
    else
    {
      char v42 = 2;
      sub_24F045B88();
      uint64_t v25 = v30;
      sub_24F072300();
      uint64_t v20 = v35;
      uint64_t v26 = v36;
      uint64_t v30 = v25;
      if (v25)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v13);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
    }
  }
  else
  {
    char v40 = 0;
    sub_24F045C30();
    uint64_t v24 = v30;
    sub_24F072300();
    uint64_t v30 = v24;
    if (v24)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
    uint64_t v20 = v35;
  }
  *uint64_t v20 = v17;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
}

unint64_t sub_24F046240()
{
  unint64_t result = qword_2699A3F10;
  if (!qword_2699A3F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3F10);
  }
  return result;
}

uint64_t sub_24F046294@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return LibraryInterface.init(from:)(a1, a2);
}

uint64_t sub_24F0462AC(void *a1)
{
  return LibraryInterface.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for LibraryInterface()
{
  return &type metadata for LibraryInterface;
}

unsigned char *_s14FitnessLibrary16LibraryInterfaceOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F0463A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryInterface.CodingKeys()
{
  return &type metadata for LibraryInterface.CodingKeys;
}

ValueMetadata *type metadata accessor for LibraryInterface.CompactCodingKeys()
{
  return &type metadata for LibraryInterface.CompactCodingKeys;
}

ValueMetadata *type metadata accessor for LibraryInterface.StandardCodingKeys()
{
  return &type metadata for LibraryInterface.StandardCodingKeys;
}

ValueMetadata *type metadata accessor for LibraryInterface.TvCodingKeys()
{
  return &type metadata for LibraryInterface.TvCodingKeys;
}

unint64_t sub_24F046410()
{
  unint64_t result = qword_2699A3F18;
  if (!qword_2699A3F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3F18);
  }
  return result;
}

unint64_t sub_24F046468()
{
  unint64_t result = qword_2699A3F20;
  if (!qword_2699A3F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3F20);
  }
  return result;
}

unint64_t sub_24F0464C0()
{
  unint64_t result = qword_2699A3F28;
  if (!qword_2699A3F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3F28);
  }
  return result;
}

unint64_t sub_24F046518()
{
  unint64_t result = qword_2699A3F30;
  if (!qword_2699A3F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3F30);
  }
  return result;
}

unint64_t sub_24F046570()
{
  unint64_t result = qword_2699A3F38;
  if (!qword_2699A3F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3F38);
  }
  return result;
}

unint64_t sub_24F0465C8()
{
  unint64_t result = qword_2699A3F40;
  if (!qword_2699A3F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3F40);
  }
  return result;
}

unint64_t sub_24F046620()
{
  unint64_t result = qword_2699A3F48;
  if (!qword_2699A3F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3F48);
  }
  return result;
}

unint64_t sub_24F046678()
{
  unint64_t result = qword_2699A3F50;
  if (!qword_2699A3F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3F50);
  }
  return result;
}

unint64_t sub_24F0466D0()
{
  unint64_t result = qword_2699A3F58;
  if (!qword_2699A3F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3F58);
  }
  return result;
}

uint64_t sub_24F046724(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746361706D6F63 && a2 == 0xE700000000000000;
  if (v2 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x647261646E617473 && a2 == 0xE800000000000000 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 30324 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24F072400();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t WorkoutPlanBannerEnvironment.init(fetchActivePlanDetail:makeWorkoutPlanUpdatedStream:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutPlanBannerEnvironment()
{
  return &type metadata for WorkoutPlanBannerEnvironment;
}

uint64_t OfflineCanvasItemPlaceholder.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

FitnessLibrary::OfflineCanvasItemPlaceholder __swiftcall OfflineCanvasItemPlaceholder.init(identifier:)(FitnessLibrary::OfflineCanvasItemPlaceholder identifier)
{
  *uint64_t v1 = identifier;
  return identifier;
}

uint64_t sub_24F0468B8(uint64_t a1)
{
  unint64_t v2 = sub_24F046A68();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F0468F4(uint64_t a1)
{
  unint64_t v2 = sub_24F046A68();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t OfflineCanvasItemPlaceholder.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3F60);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24F046A68();
  sub_24F072480();
  sub_24F0723C0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_24F046A68()
{
  unint64_t result = qword_2699A3F68;
  if (!qword_2699A3F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3F68);
  }
  return result;
}

uint64_t OfflineCanvasItemPlaceholder.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3F70);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24F046A68();
  sub_24F072470();
  if (!v2)
  {
    uint64_t v9 = sub_24F072340();
    uint64_t v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_24F046C2C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return OfflineCanvasItemPlaceholder.init(from:)(a1, a2);
}

uint64_t sub_24F046C44(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3F60);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24F046A68();
  sub_24F072480();
  sub_24F0723C0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t OfflineCanvasItemPlaceholder.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_24F072080();
  return swift_bridgeObjectRelease();
}

uint64_t static OfflineCanvasItemPlaceholder.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_24F072400();
  }
}

uint64_t OfflineCanvasItemPlaceholder.hashValue.getter()
{
  return sub_24F072460();
}

uint64_t sub_24F046E60()
{
  return sub_24F072460();
}

uint64_t sub_24F046EBC()
{
  swift_bridgeObjectRetain();
  sub_24F072080();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F046F14()
{
  return sub_24F072460();
}

unint64_t sub_24F046F70()
{
  unint64_t result = qword_2699A3F78;
  if (!qword_2699A3F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3F78);
  }
  return result;
}

uint64_t sub_24F046FC4(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_24F072400();
  }
}

uint64_t getEnumTagSinglePayload for OfflineCanvasItemPlaceholder(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OfflineCanvasItemPlaceholder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OfflineCanvasItemPlaceholder()
{
  return &type metadata for OfflineCanvasItemPlaceholder;
}

unsigned char *storeEnumTagSinglePayload for OfflineCanvasItemPlaceholder.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24F047124);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for OfflineCanvasItemPlaceholder.CodingKeys()
{
  return &type metadata for OfflineCanvasItemPlaceholder.CodingKeys;
}

unint64_t sub_24F047160()
{
  unint64_t result = qword_2699A3F80;
  if (!qword_2699A3F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3F80);
  }
  return result;
}

unint64_t sub_24F0471B8()
{
  unint64_t result = qword_2699A3F88;
  if (!qword_2699A3F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3F88);
  }
  return result;
}

unint64_t sub_24F047210()
{
  unint64_t result = qword_2699A3F90;
  if (!qword_2699A3F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3F90);
  }
  return result;
}

uint64_t LibraryCanvasPlaceholder.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LibraryCanvasPlaceholder.secondaryIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LibraryCanvasPlaceholder.referenceType.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

void __swiftcall LibraryCanvasPlaceholder.init(identifier:secondaryIdentifier:referenceType:)(FitnessLibrary::LibraryCanvasPlaceholder *__return_ptr retstr, Swift::String identifier, Swift::String_optional secondaryIdentifier, FitnessLibrary::LibraryCanvasPlaceholderReferenceType referenceType)
{
  retstr->identifier = identifier;
  retstr->secondaryIdentifier = secondaryIdentifier;
  retstr->referenceType = referenceType;
}

uint64_t sub_24F0472DC()
{
  unint64_t v1 = 0xD000000000000013;
  if (*v0 != 1) {
    unint64_t v1 = 0x636E657265666572;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_24F04734C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24F04814C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24F047374(uint64_t a1)
{
  unint64_t v2 = sub_24F0475B0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F0473B0(uint64_t a1)
{
  unint64_t v2 = sub_24F0475B0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t LibraryCanvasPlaceholder.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3F98);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  v11[1] = *(void *)(v1 + 24);
  v11[2] = v7;
  int v12 = *(unsigned __int8 *)(v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24F0475B0();
  sub_24F072480();
  char v16 = 0;
  uint64_t v8 = v11[3];
  sub_24F0723C0();
  if (!v8)
  {
    char v9 = v12;
    char v15 = 1;
    sub_24F0723A0();
    char v14 = v9;
    char v13 = 2;
    sub_24F047604();
    sub_24F0723F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_24F0475B0()
{
  unint64_t result = qword_2699A3FA0;
  if (!qword_2699A3FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3FA0);
  }
  return result;
}

unint64_t sub_24F047604()
{
  unint64_t result = qword_2699A3FA8;
  if (!qword_2699A3FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3FA8);
  }
  return result;
}

uint64_t LibraryCanvasPlaceholder.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3FB0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24F0475B0();
  sub_24F072470();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v25 = 0;
  uint64_t v9 = sub_24F072340();
  uint64_t v11 = v10;
  uint64_t v21 = v9;
  char v24 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_24F072320();
  uint64_t v14 = v13;
  uint64_t v19 = v12;
  char v22 = 2;
  sub_24F0478F0();
  swift_bridgeObjectRetain();
  uint64_t v20 = v14;
  sub_24F072370();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  char v15 = v23;
  uint64_t v16 = v20;
  *(void *)a2 = v21;
  *(void *)(a2 + 8) = v11;
  *(void *)(a2 + 16) = v19;
  *(void *)(a2 + 24) = v16;
  *(unsigned char *)(a2 + 32) = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_24F0478F0()
{
  unint64_t result = qword_2699A3FB8;
  if (!qword_2699A3FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3FB8);
  }
  return result;
}

uint64_t sub_24F047944@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return LibraryCanvasPlaceholder.init(from:)(a1, a2);
}

uint64_t sub_24F04795C(void *a1)
{
  return LibraryCanvasPlaceholder.encode(to:)(a1);
}

uint64_t LibraryCanvasPlaceholder.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_24F072080();
  swift_bridgeObjectRelease();
  sub_24F072450();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_24F072080();
    swift_bridgeObjectRelease();
  }
  sub_24F072080();
  return swift_bridgeObjectRelease();
}

uint64_t LibraryCanvasPlaceholder.hashValue.getter()
{
  return sub_24F072460();
}

uint64_t sub_24F047B64()
{
  return sub_24F072460();
}

uint64_t sub_24F047BC4()
{
  return sub_24F072460();
}

uint64_t _s14FitnessLibrary0B17CanvasPlaceholderV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 32);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  BOOL v8 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (!v8 && (sub_24F072400() & 1) == 0) {
    return 0;
  }
  if (v3)
  {
    if (v5)
    {
      BOOL v9 = v2 == v6 && v3 == v5;
      if (v9 || (sub_24F072400() & 1) != 0) {
        goto LABEL_13;
      }
    }
    return 0;
  }
  if (v5) {
    return 0;
  }
LABEL_13:
  return sub_24F02D8D8(v4, v7);
}

unint64_t sub_24F047CF0()
{
  unint64_t result = qword_2699A3FC0;
  if (!qword_2699A3FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3FC0);
  }
  return result;
}

uint64_t destroy for LibraryCanvasPlaceholder()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LibraryCanvasPlaceholder(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LibraryCanvasPlaceholder(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for LibraryCanvasPlaceholder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryCanvasPlaceholder(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LibraryCanvasPlaceholder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryCanvasPlaceholder()
{
  return &type metadata for LibraryCanvasPlaceholder;
}

unsigned char *storeEnumTagSinglePayload for LibraryCanvasPlaceholder.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F04800CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryCanvasPlaceholder.CodingKeys()
{
  return &type metadata for LibraryCanvasPlaceholder.CodingKeys;
}

unint64_t sub_24F048048()
{
  unint64_t result = qword_2699A3FC8;
  if (!qword_2699A3FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3FC8);
  }
  return result;
}

unint64_t sub_24F0480A0()
{
  unint64_t result = qword_2699A3FD0;
  if (!qword_2699A3FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3FD0);
  }
  return result;
}

unint64_t sub_24F0480F8()
{
  unint64_t result = qword_2699A3FD8;
  if (!qword_2699A3FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A3FD8);
  }
  return result;
}

uint64_t sub_24F04814C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000024F07AEA0 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x636E657265666572 && a2 == 0xED00006570795465)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24F072400();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_24F0482CC(uint64_t a1)
{
  unint64_t v2 = sub_24F048C20();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F048308(uint64_t a1)
{
  unint64_t v2 = sub_24F048C20();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F048344()
{
  uint64_t result = 0x756F6D796E6F6E61;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6C61636F6CLL;
      break;
    case 2:
      uint64_t result = 0x65746F6D6572;
      break;
    case 3:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24F0483D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24F04A214(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24F0483F8(uint64_t a1)
{
  unint64_t v2 = sub_24F048A7C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F048434(uint64_t a1)
{
  unint64_t v2 = sub_24F048A7C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F048470(uint64_t a1)
{
  unint64_t v2 = sub_24F048BCC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F0484AC(uint64_t a1)
{
  unint64_t v2 = sub_24F048BCC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F0484E8(uint64_t a1)
{
  unint64_t v2 = sub_24F048B24();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F048524(uint64_t a1)
{
  unint64_t v2 = sub_24F048B24();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F048560(uint64_t a1)
{
  unint64_t v2 = sub_24F048AD0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F04859C(uint64_t a1)
{
  unint64_t v2 = sub_24F048AD0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t BrowsingIdentity.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3FE0);
  uint64_t v29 = *(void *)(v4 - 8);
  uint64_t v30 = v4;
  MEMORY[0x270FA5388](v4);
  char v27 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3FE8);
  uint64_t v31 = *(void *)(v6 - 8);
  uint64_t v32 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v28 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3FF0);
  uint64_t v25 = *(void *)(v8 - 8);
  uint64_t v26 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3FF8);
  uint64_t v24 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4000);
  uint64_t v33 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = v2[1];
  uint64_t v23 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24F048A7C();
  sub_24F072480();
  switch(v17)
  {
    case 3:
      LOBYTE(v34) = 3;
      sub_24F048AD0();
      uint64_t v18 = v27;
      sub_24F072390();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v18, v30);
      break;
    case 2:
      LOBYTE(v34) = 1;
      sub_24F048BCC();
      sub_24F072390();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v26);
      break;
    case 1:
      LOBYTE(v34) = 0;
      sub_24F048C20();
      sub_24F072390();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v11);
      break;
    default:
      LOBYTE(v34) = 2;
      sub_24F048B24();
      uint64_t v19 = v28;
      sub_24F072390();
      uint64_t v34 = v23;
      uint64_t v35 = v17;
      sub_24F048B78();
      uint64_t v20 = v32;
      sub_24F0723F0();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v19, v20);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v16, v14);
}

unint64_t sub_24F048A7C()
{
  unint64_t result = qword_2699A4008;
  if (!qword_2699A4008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4008);
  }
  return result;
}

unint64_t sub_24F048AD0()
{
  unint64_t result = qword_2699A4010;
  if (!qword_2699A4010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4010);
  }
  return result;
}

unint64_t sub_24F048B24()
{
  unint64_t result = qword_2699A4018;
  if (!qword_2699A4018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4018);
  }
  return result;
}

unint64_t sub_24F048B78()
{
  unint64_t result = qword_2699A4020;
  if (!qword_2699A4020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4020);
  }
  return result;
}

unint64_t sub_24F048BCC()
{
  unint64_t result = qword_2699A4028;
  if (!qword_2699A4028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4028);
  }
  return result;
}

unint64_t sub_24F048C20()
{
  unint64_t result = qword_2699A4030;
  if (!qword_2699A4030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4030);
  }
  return result;
}

uint64_t BrowsingIdentity.init(from:)@<X0>(void *a1@<X0>, long long *a2@<X8>)
{
  char v48 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4038);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v41 = v3;
  uint64_t v42 = v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v47 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4040);
  uint64_t v44 = *(void *)(v6 - 8);
  uint64_t v45 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v46 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4048);
  uint64_t v39 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4050);
  uint64_t v40 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4058);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1[3];
  uint64_t v49 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_24F048A7C();
  uint64_t v18 = v51;
  sub_24F072470();
  if (v18) {
    goto LABEL_14;
  }
  uint64_t v19 = v12;
  uint64_t v37 = v10;
  uint64_t v38 = 0;
  uint64_t v20 = v46;
  uint64_t v21 = v47;
  uint64_t v51 = v14;
  uint64_t v22 = v48;
  uint64_t v23 = sub_24F072380();
  if (*(void *)(v23 + 16) != 1)
  {
    uint64_t v26 = sub_24F072260();
    swift_allocError();
    uint64_t v28 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3060);
    *uint64_t v28 = &type metadata for BrowsingIdentity;
    sub_24F072310();
    sub_24F072250();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v26 - 8) + 104))(v28, *MEMORY[0x263F8DCB0], v26);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v16, v13);
LABEL_14:
    uint64_t v34 = (uint64_t)v49;
    return __swift_destroy_boxed_opaque_existential_1(v34);
  }
  switch(*(unsigned char *)(v23 + 32))
  {
    case 1:
      LOBYTE(v50) = 1;
      sub_24F048BCC();
      uint64_t v29 = v38;
      sub_24F072300();
      if (v29) {
        goto LABEL_13;
      }
      (*(void (**)(char *, uint64_t))(v39 + 8))(v9, v43);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v16, v13);
      long long v25 = xmmword_24F075170;
      goto LABEL_17;
    case 2:
      LOBYTE(v50) = 2;
      sub_24F048B24();
      uint64_t v30 = v20;
      uint64_t v31 = v38;
      sub_24F072300();
      if (v31) {
        goto LABEL_13;
      }
      sub_24F04933C();
      uint64_t v32 = v45;
      sub_24F072370();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v30, v32);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v16, v13);
      long long v25 = v50;
      goto LABEL_17;
    case 3:
      LOBYTE(v50) = 3;
      sub_24F048AD0();
      uint64_t v33 = v38;
      sub_24F072300();
      if (v33) {
        goto LABEL_13;
      }
      (*(void (**)(char *, uint64_t))(v42 + 8))(v21, v41);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v16, v13);
      long long v25 = xmmword_24F077E80;
      goto LABEL_17;
    default:
      LOBYTE(v50) = 0;
      sub_24F048C20();
      uint64_t v24 = v38;
      sub_24F072300();
      if (v24)
      {
LABEL_13:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v51 + 8))(v16, v13);
        goto LABEL_14;
      }
      (*(void (**)(char *, uint64_t))(v40 + 8))(v19, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v16, v13);
      long long v25 = xmmword_24F075180;
LABEL_17:
      uint64_t v34 = (uint64_t)v49;
      *uint64_t v22 = v25;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v34);
}

unint64_t sub_24F04933C()
{
  unint64_t result = qword_2699A4060;
  if (!qword_2699A4060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4060);
  }
  return result;
}

uint64_t sub_24F049390@<X0>(void *a1@<X0>, long long *a2@<X8>)
{
  return BrowsingIdentity.init(from:)(a1, a2);
}

uint64_t sub_24F0493A8(void *a1)
{
  return BrowsingIdentity.encode(to:)(a1);
}

uint64_t BrowsingIdentity.hash(into:)()
{
  uint64_t v1 = v0[1];
  if (v1 == 3 || v1 == 2 || v1 == 1) {
    return sub_24F072440();
  }
  uint64_t v3 = *v0;
  sub_24F072440();
  if (!v1) {
    return sub_24F072450();
  }
  sub_24F072450();
  swift_bridgeObjectRetain();
  sub_24F072080();
  return sub_24F049484(v3, v1);
}

uint64_t sub_24F049484(uint64_t a1, uint64_t a2)
{
  if ((unint64_t)(a2 - 1) >= 3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t BrowsingIdentity.hashValue.getter()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  sub_24F072430();
  if (v1 == 3 || v1 == 2 || v1 == 1)
  {
    sub_24F072440();
  }
  else
  {
    sub_24F072440();
    sub_24F072450();
    if (v1)
    {
      swift_bridgeObjectRetain();
      sub_24F072080();
      sub_24F049484(v2, v1);
    }
  }
  return sub_24F072460();
}

uint64_t sub_24F049568()
{
  uint64_t v1 = v0[1];
  if (v1 == 3 || v1 == 2 || v1 == 1) {
    return sub_24F072440();
  }
  uint64_t v3 = *v0;
  sub_24F072440();
  if (!v1) {
    return sub_24F072450();
  }
  sub_24F072450();
  swift_bridgeObjectRetain();
  sub_24F072080();
  return sub_24F049484(v3, v1);
}

uint64_t sub_24F04962C()
{
  sub_24F072430();
  uint64_t v1 = v0[1];
  if (v1 == 3 || v1 == 2 || v1 == 1)
  {
    sub_24F072440();
  }
  else
  {
    uint64_t v3 = *v0;
    sub_24F072440();
    sub_24F072450();
    if (v1)
    {
      swift_bridgeObjectRetain();
      sub_24F072080();
      sub_24F049484(v3, v1);
    }
  }
  return sub_24F072460();
}

BOOL _s14FitnessLibrary16BrowsingIdentityO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  if (v3 == 3)
  {
    if (v5 != 3) {
      goto LABEL_12;
    }
    sub_24F049484(*a1, 3);
    uint64_t v7 = v4;
    uint64_t v8 = 3;
LABEL_10:
    sub_24F049484(v7, v8);
    return 1;
  }
  if (v3 == 2)
  {
    if (v5 != 2) {
      goto LABEL_12;
    }
    sub_24F049484(*a1, 2);
    uint64_t v7 = v4;
    uint64_t v8 = 2;
    goto LABEL_10;
  }
  if (v3 != 1)
  {
    if ((unint64_t)(v5 - 1) < 3) {
      goto LABEL_12;
    }
    if (v3)
    {
      if (!v5)
      {
        sub_24F04A3CC(*a1, v3);
        uint64_t v9 = v4;
        uint64_t v10 = 0;
        goto LABEL_13;
      }
      if (v2 != v4 || v3 != v5)
      {
        char v12 = sub_24F072400();
        sub_24F04A3CC(v2, v3);
        sub_24F04A3CC(v4, v5);
        sub_24F049484(v2, v3);
        sub_24F049484(v4, v5);
        return (v12 & 1) != 0;
      }
      sub_24F04A3CC(*a1, v3);
      sub_24F04A3CC(v2, v3);
      sub_24F049484(v2, v3);
      uint64_t v7 = v2;
      uint64_t v8 = v3;
    }
    else
    {
      if (v5)
      {
        swift_bridgeObjectRetain();
        uint64_t v3 = 0;
        goto LABEL_14;
      }
      sub_24F049484(*a1, 0);
      uint64_t v7 = v4;
      uint64_t v8 = 0;
    }
    goto LABEL_10;
  }
  if (v5 != 1)
  {
LABEL_12:
    sub_24F04A3CC(*a1, v3);
    uint64_t v9 = v4;
    uint64_t v10 = v5;
LABEL_13:
    sub_24F04A3CC(v9, v10);
LABEL_14:
    sub_24F049484(v2, v3);
    sub_24F049484(v4, v5);
    return 0;
  }
  uint64_t v6 = 1;
  sub_24F049484(*a1, 1);
  sub_24F049484(v4, 1);
  return v6;
}

unint64_t sub_24F0498E8()
{
  unint64_t result = qword_2699A4068;
  if (!qword_2699A4068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4068);
  }
  return result;
}

unint64_t destroy for BrowsingIdentity(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  int v2 = -1;
  if (result < 0xFFFFFFFF) {
    int v2 = result;
  }
  if (v2 - 1 < 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *_s14FitnessLibrary16BrowsingIdentityOwCP_0(void *a1, void *a2)
{
  unint64_t v3 = a2[1];
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF) {
    uint64_t v4 = a2[1];
  }
  if ((int)v4 - 1 < 0)
  {
    *a1 = *a2;
    a1[1] = v3;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  return a1;
}

void *assignWithCopy for BrowsingIdentity(void *a1, void *a2)
{
  LODWORD(v4) = -1;
  if (a1[1] >= 0xFFFFFFFFuLL) {
    LODWORD(v5) = -1;
  }
  else {
    uint64_t v5 = a1[1];
  }
  int v6 = v5 - 1;
  if (a2[1] < 0xFFFFFFFFuLL) {
    uint64_t v4 = a2[1];
  }
  int v7 = v4 - 1;
  if (v6 < 0)
  {
    if (v7 < 0)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if ((v7 & 0x80000000) == 0)
  {
LABEL_11:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithTake for BrowsingIdentity(void *a1, void *a2)
{
  unint64_t v4 = a1[1];
  int v5 = -1;
  if (v4 < 0xFFFFFFFF) {
    int v5 = v4;
  }
  if (v5 - 1 < 0)
  {
    unint64_t v6 = a2[1];
    LODWORD(v7) = -1;
    if (v6 < 0xFFFFFFFF) {
      uint64_t v7 = a2[1];
    }
    if ((int)v7 - 1 < 0)
    {
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t getEnumTagSinglePayload for BrowsingIdentity(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFC && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483644);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  unsigned int v5 = v4 + 1;
  unsigned int v6 = v4 - 2;
  if (v5 >= 4) {
    return v6;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for BrowsingIdentity(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 3;
    }
  }
  return result;
}

uint64_t sub_24F049B8C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

void *sub_24F049BB0(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *unint64_t result = a2 - 0x7FFFFFFF;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowsingIdentity()
{
  return &type metadata for BrowsingIdentity;
}

unsigned char *storeEnumTagSinglePayload for BrowsingIdentity.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F049CB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowsingIdentity.CodingKeys()
{
  return &type metadata for BrowsingIdentity.CodingKeys;
}

ValueMetadata *type metadata accessor for BrowsingIdentity.AnonymousCodingKeys()
{
  return &type metadata for BrowsingIdentity.AnonymousCodingKeys;
}

ValueMetadata *type metadata accessor for BrowsingIdentity.LocalCodingKeys()
{
  return &type metadata for BrowsingIdentity.LocalCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for BrowsingIdentity.RemoteCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24F049DACLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowsingIdentity.RemoteCodingKeys()
{
  return &type metadata for BrowsingIdentity.RemoteCodingKeys;
}

ValueMetadata *type metadata accessor for BrowsingIdentity.UnknownCodingKeys()
{
  return &type metadata for BrowsingIdentity.UnknownCodingKeys;
}

unint64_t sub_24F049DF8()
{
  unint64_t result = qword_2699A4070;
  if (!qword_2699A4070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4070);
  }
  return result;
}

unint64_t sub_24F049E50()
{
  unint64_t result = qword_2699A4078;
  if (!qword_2699A4078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4078);
  }
  return result;
}

unint64_t sub_24F049EA8()
{
  unint64_t result = qword_2699A4080;
  if (!qword_2699A4080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4080);
  }
  return result;
}

unint64_t sub_24F049F00()
{
  unint64_t result = qword_2699A4088;
  if (!qword_2699A4088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4088);
  }
  return result;
}

unint64_t sub_24F049F58()
{
  unint64_t result = qword_2699A4090;
  if (!qword_2699A4090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4090);
  }
  return result;
}

unint64_t sub_24F049FB0()
{
  unint64_t result = qword_2699A4098;
  if (!qword_2699A4098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4098);
  }
  return result;
}

unint64_t sub_24F04A008()
{
  unint64_t result = qword_2699A40A0;
  if (!qword_2699A40A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A40A0);
  }
  return result;
}

unint64_t sub_24F04A060()
{
  unint64_t result = qword_2699A40A8;
  if (!qword_2699A40A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A40A8);
  }
  return result;
}

unint64_t sub_24F04A0B8()
{
  unint64_t result = qword_2699A40B0;
  if (!qword_2699A40B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A40B0);
  }
  return result;
}

unint64_t sub_24F04A110()
{
  unint64_t result = qword_2699A40B8;
  if (!qword_2699A40B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A40B8);
  }
  return result;
}

unint64_t sub_24F04A168()
{
  unint64_t result = qword_2699A40C0;
  if (!qword_2699A40C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A40C0);
  }
  return result;
}

unint64_t sub_24F04A1C0()
{
  unint64_t result = qword_2699A40C8;
  if (!qword_2699A40C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A40C8);
  }
  return result;
}

uint64_t sub_24F04A214(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x756F6D796E6F6E61 && a2 == 0xE900000000000073;
  if (v2 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C61636F6CLL && a2 == 0xE500000000000000 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65746F6D6572 && a2 == 0xE600000000000000 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24F072400();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_24F04A3CC(uint64_t a1, uint64_t a2)
{
  if ((unint64_t)(a2 - 1) >= 3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t TVLibraryPickerView.init(store:pages:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_24F00CFE4();
  sub_24F0715A0();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(void *)a4 = sub_24F006060;
  *(void *)(a4 + 8) = result;
  *(unsigned char *)(a4 + 16) = 0;
  *(unsigned char *)(a4 + 24) = v9;
  *(void *)(a4 + 32) = v10;
  *(unsigned char *)(a4 + 40) = v11;
  *(void *)(a4 + 48) = a3;
  return result;
}

uint64_t sub_24F04A494()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t TVLibraryPickerView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v79 = a1;
  uint64_t v70 = sub_24F071980();
  uint64_t v69 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  uint64_t v66 = (char *)v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A40D0);
  uint64_t v3 = *(void *)(v61 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v61);
  uint64_t v62 = (char *)v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v60 = (char *)v56 - v6;
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A40D8);
  MEMORY[0x270FA5388](v63);
  uint64_t v8 = (char *)v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A40E0);
  uint64_t v65 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  uint64_t v80 = (char *)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A40E8);
  uint64_t v71 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  long long v81 = (char *)v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A40F0);
  uint64_t v74 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  uint64_t v67 = (char *)v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A40F8);
  MEMORY[0x270FA5388](v73);
  uint64_t v72 = (char *)v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4100);
  uint64_t v77 = *(void *)(v78 - 8);
  MEMORY[0x270FA5388](v78);
  uint64_t v76 = (char *)v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned long long v14 = v1[1];
  unsigned long long v91 = *v1;
  *(_OWORD *)uint64_t v92 = v14;
  *(_OWORD *)&v92[16] = v1[2];
  uint64_t v93 = *((void *)v1 + 6);
  *(void *)uint64_t v8 = sub_24F071860();
  *((void *)v8 + 1) = 0x4018000000000000;
  unsigned char v8[16] = 0;
  int v58 = &v8[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2699A4108) + 44)];
  uint64_t v94 = v93;
  *(void *)&long long v85 = v93;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v15 = swift_allocObject();
  unsigned long long v16 = v1[1];
  *(_OWORD *)(v15 + 16) = *v1;
  *(_OWORD *)(v15 + 32) = v16;
  *(_OWORD *)(v15 + 48) = v1[2];
  *(void *)(v15 + 64) = *((void *)v1 + 6);
  sub_24F04B778((uint64_t)&v94);
  sub_24F04B7A4((uint64_t)&v91);
  v56[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3150);
  void v56[2] = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4110);
  v56[1] = sub_24F007760(&qword_2699A4118, &qword_2699A3150);
  unint64_t v17 = sub_24F00CFE4();
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A4120);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A4128);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A4130);
  uint64_t v21 = type metadata accessor for TVLibraryItemCell();
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A4138);
  unint64_t v23 = sub_24F04B7F8();
  unint64_t v59 = sub_24F04B850();
  uint64_t v87 = v21;
  uint64_t v88 = (ValueMetadata *)v22;
  unint64_t v89 = v23;
  unint64_t v90 = v59;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v87 = v20;
  uint64_t v88 = &type metadata for LibraryPage;
  unint64_t v89 = OpaqueTypeConformance2;
  unint64_t v90 = v17;
  uint64_t v25 = swift_getOpaqueTypeConformance2();
  uint64_t v87 = v19;
  uint64_t v88 = (ValueMetadata *)v25;
  uint64_t v26 = swift_getOpaqueTypeConformance2();
  uint64_t v87 = v18;
  uint64_t v88 = (ValueMetadata *)v26;
  swift_getOpaqueTypeConformance2();
  char v27 = v60;
  sub_24F071ED0();
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  uint64_t v29 = v62;
  uint64_t v30 = v61;
  v28(v62, v27, v61);
  uint64_t v31 = v58;
  v28(v58, v29, v30);
  uint64_t v32 = &v31[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2699A4150) + 48)];
  *(void *)uint64_t v32 = 0;
  v32[8] = 1;
  uint64_t v33 = *(void (**)(char *, uint64_t))(v3 + 8);
  v33(v27, v30);
  v33(v29, v30);
  uint64_t v34 = sub_24F007760(&qword_2699A4158, &qword_2699A40D8);
  uint64_t v35 = v63;
  sub_24F071B20();
  sub_24F01A7DC((uint64_t)v8, &qword_2699A40D8);
  long long v85 = *(_OWORD *)&v92[8];
  char v86 = v92[24];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4160);
  sub_24F071590();
  unsigned long long v36 = v91;
  LODWORD(v3) = v92[0];
  sub_24F04B7A4((uint64_t)&v91);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A34E0);
  uint64_t v62 = (char *)sub_24F007760((unint64_t *)&qword_2699A34E8, &qword_2699A34E0);
  int v58 = (char *)(v36 >> 64);
  uint64_t v60 = (char *)v36;
  LODWORD(KeyPath) = v3;
  uint64_t v61 = v37;
  sub_24F071600();
  sub_24F04B8C4((uint64_t)&v91);
  swift_getKeyPath();
  sub_24F071FE0();
  swift_release();
  swift_release();
  char v84 = v82;
  uint64_t v38 = v66;
  sub_24F071970();
  *(void *)&long long v85 = v35;
  *((void *)&v85 + 1) = v34;
  uint64_t v39 = swift_getOpaqueTypeConformance2();
  uint64_t v40 = v38;
  uint64_t v41 = v38;
  uint64_t v42 = v64;
  unint64_t v43 = v59;
  uint64_t v44 = v80;
  MEMORY[0x2533526A0](&v87, &v84, v40, v64, v22, v39, v59);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v41, v70);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v44, v42);
  sub_24F04B7A4((uint64_t)&v91);
  sub_24F071600();
  sub_24F04B8C4((uint64_t)&v91);
  swift_getKeyPath();
  sub_24F072000();
  swift_release();
  swift_release();
  long long v82 = v85;
  char v83 = v86;
  uint64_t v87 = v42;
  uint64_t v88 = (ValueMetadata *)v22;
  unint64_t v89 = v39;
  unint64_t v90 = v43;
  swift_getOpaqueTypeConformance2();
  sub_24F04B918();
  uint64_t v45 = v67;
  uint64_t v46 = v68;
  uint64_t v47 = v81;
  sub_24F071C60();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v47, v46);
  sub_24F04B7A4((uint64_t)&v91);
  sub_24F071600();
  sub_24F04B8C4((uint64_t)&v91);
  swift_getKeyPath();
  sub_24F071FE0();
  swift_release();
  swift_release();
  if ((_BYTE)v87) {
    double v48 = 0.3;
  }
  else {
    double v48 = 1.0;
  }
  uint64_t v49 = v74;
  uint64_t v50 = (uint64_t)v72;
  uint64_t v51 = v75;
  (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v72, v45, v75);
  *(double *)(v50 + *(int *)(v73 + 36)) = v48;
  (*(void (**)(char *, uint64_t))(v49 + 8))(v45, v51);
  sub_24F04B7A4((uint64_t)&v91);
  sub_24F071600();
  sub_24F04B8C4((uint64_t)&v91);
  swift_getKeyPath();
  sub_24F071FE0();
  swift_release();
  swift_release();
  LOBYTE(v85) = v87;
  uint64_t v52 = swift_allocObject();
  long long v53 = *(_OWORD *)v92;
  *(_OWORD *)(v52 + 16) = v91;
  *(_OWORD *)(v52 + 32) = v53;
  *(_OWORD *)(v52 + 48) = *(_OWORD *)&v92[16];
  *(void *)(v52 + 64) = v93;
  sub_24F04B7A4((uint64_t)&v91);
  sub_24F04BB04();
  sub_24F03F990();
  uint64_t v54 = v76;
  sub_24F071D10();
  swift_release();
  sub_24F01A7DC(v50, &qword_2699A40F8);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v77 + 32))(v79, v54, v78);
}

uint64_t sub_24F04B188@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v51 = a3;
  uint64_t v5 = sub_24F071500();
  uint64_t v40 = *(void *)(v5 - 8);
  uint64_t v41 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TVLibraryItemCell();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4130);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v44 = v11;
  uint64_t v45 = v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v42 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4128);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v47 = v14;
  uint64_t v48 = v15;
  MEMORY[0x270FA5388](v14);
  unint64_t v43 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4120);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v49 = v17;
  uint64_t v50 = v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v46 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v20 = *a1;
  sub_24F04B7A4(a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A34E0);
  sub_24F007760((unint64_t *)&qword_2699A34E8, &qword_2699A34E0);
  sub_24F071600();
  sub_24F04B8C4(a2);
  swift_getKeyPath();
  sub_24F071FE0();
  swift_release();
  swift_release();
  uint64_t v21 = swift_allocObject();
  long long v22 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v21 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v21 + 32) = v22;
  *(_OWORD *)(v21 + 48) = *(_OWORD *)(a2 + 32);
  *(void *)(v21 + 64) = *(void *)(a2 + 48);
  *(unsigned char *)(v21 + 72) = v20;
  v10[*(int *)(v8 + 20)] = v20;
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v10, v7, v41);
  unint64_t v23 = (uint64_t (**)())&v10[*(int *)(v8 + 24)];
  *unint64_t v23 = sub_24F04C000;
  v23[1] = (uint64_t (*)())v21;
  long long v56 = *(_OWORD *)(a2 + 24);
  char v57 = *(unsigned char *)(a2 + 40);
  sub_24F04B7A4(a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4160);
  sub_24F071590();
  LOBYTE(v56) = v20;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4138);
  unint64_t v25 = sub_24F04B7F8();
  unint64_t v26 = sub_24F04B850();
  char v27 = v42;
  sub_24F071CB0();
  swift_release();
  swift_release();
  sub_24F04C00C((uint64_t)v10);
  LOBYTE(v56) = v20;
  uint64_t v52 = v8;
  long long v53 = (ValueMetadata *)v24;
  unint64_t v54 = v25;
  unint64_t v55 = v26;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  unint64_t v29 = sub_24F00CFE4();
  uint64_t v31 = v43;
  uint64_t v30 = v44;
  sub_24F071B90();
  uint64_t v32 = v30;
  (*(void (**)(char *, uint64_t))(v45 + 8))(v27, v30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4178);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_24F0783D0;
  uint64_t v52 = 0;
  long long v53 = (ValueMetadata *)0xE000000000000000;
  LOBYTE(v56) = v20;
  sub_24F072280();
  uint64_t v34 = v53;
  *(void *)(v33 + 32) = v52;
  *(void *)(v33 + 40) = v34;
  uint64_t v52 = v32;
  long long v53 = &type metadata for LibraryPage;
  unint64_t v54 = OpaqueTypeConformance2;
  unint64_t v55 = v29;
  uint64_t v35 = swift_getOpaqueTypeConformance2();
  uint64_t v37 = v46;
  uint64_t v36 = v47;
  sub_24F071B30();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v31, v36);
  uint64_t v52 = v36;
  long long v53 = (ValueMetadata *)v35;
  swift_getOpaqueTypeConformance2();
  uint64_t v38 = v49;
  sub_24F071B10();
  return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v37, v38);
}

uint64_t sub_24F04B768()
{
  return objectdestroy_2Tm_0(72);
}

uint64_t sub_24F04B770@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24F04B188(a1, v2 + 16, a2);
}

uint64_t sub_24F04B778(uint64_t a1)
{
  return a1;
}

uint64_t sub_24F04B7A4(uint64_t a1)
{
  return a1;
}

unint64_t sub_24F04B7F8()
{
  unint64_t result = qword_2699A4140;
  if (!qword_2699A4140)
  {
    type metadata accessor for TVLibraryItemCell();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4140);
  }
  return result;
}

unint64_t sub_24F04B850()
{
  unint64_t result = qword_2699A4148;
  if (!qword_2699A4148)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A4138);
    sub_24F00CFE4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4148);
  }
  return result;
}

uint64_t sub_24F04B8C4(uint64_t a1)
{
  return a1;
}

unint64_t sub_24F04B918()
{
  unint64_t result = qword_2699A4168;
  if (!qword_2699A4168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4168);
  }
  return result;
}

uint64_t sub_24F04B96C(uint64_t a1)
{
  return swift_release();
}

uint64_t sub_24F04BA38(uint64_t a1)
{
  return swift_release();
}

uint64_t sub_24F04BAF4()
{
  return objectdestroy_2Tm_0(72);
}

uint64_t sub_24F04BAFC()
{
  return sub_24F04BA38(v0 + 16);
}

unint64_t sub_24F04BB04()
{
  unint64_t result = qword_2699A4170;
  if (!qword_2699A4170)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A40F8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A40E8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A40E0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A4138);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A40D8);
    sub_24F007760(&qword_2699A4158, &qword_2699A40D8);
    swift_getOpaqueTypeConformance2();
    sub_24F04B850();
    swift_getOpaqueTypeConformance2();
    sub_24F04B918();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4170);
  }
  return result;
}

uint64_t sub_24F04BC80()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for TVLibraryPickerView()
{
  sub_24F007284();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TVLibraryPickerView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_24F0072D8();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 32) = a2[4];
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  *(void *)(a1 + 48) = a2[6];
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TVLibraryPickerView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_24F0072D8();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  sub_24F007284();
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 32) = a2[4];
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  *(void *)(a1 + 48) = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TVLibraryPickerView(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  sub_24F007284();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TVLibraryPickerView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TVLibraryPickerView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TVLibraryPickerView()
{
  return &type metadata for TVLibraryPickerView;
}

uint64_t sub_24F04BF30()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24F04BFA0()
{
  return objectdestroy_2Tm_0(73);
}

uint64_t objectdestroy_2Tm_0(uint64_t a1)
{
  sub_24F007284();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v1, a1, 7);
}

uint64_t sub_24F04C000()
{
  return sub_24F04B96C(v0 + 16);
}

uint64_t sub_24F04C00C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TVLibraryItemCell();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

__n128 LibraryPageCountEnvironment.init(makeBookmarkUpdatedStream:makeCatalogUpdatedStream:makeDownloadedAssetsCountUpdateStream:makePlaylistCountUpdateStream:makeWorkoutPlanCountUpdateStream:navigateToLibraryGalleryPage:queryLibraryPageCount:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, __n128 a11, uint64_t a12, uint64_t a13)
{
  __n128 result = a11;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(_OWORD *)(a9 + 64) = a10;
  *(__n128 *)(a9 + 80) = a11;
  *(void *)(a9 + 96) = a12;
  *(void *)(a9 + 104) = a13;
  return result;
}

uint64_t destroy for LibraryPageCountEnvironment()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for LibraryPageCountEnvironment(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v3 = *(void *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 104) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for LibraryPageCountEnvironment(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_retain();
  swift_release();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_retain();
  swift_release();
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_retain();
  swift_release();
  uint64_t v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy112_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

_OWORD *assignWithTake for LibraryPageCountEnvironment(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  a1[4] = a2[4];
  swift_release();
  a1[5] = a2[5];
  swift_release();
  a1[6] = a2[6];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryPageCountEnvironment(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LibraryPageCountEnvironment(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryPageCountEnvironment()
{
  return &type metadata for LibraryPageCountEnvironment;
}

uint64_t sub_24F04C404(uint64_t a1, unsigned __int8 *a2, char *a3)
{
  unint64_t v59 = a3;
  uint64_t v60 = a1;
  uint64_t v4 = sub_24F071500();
  uint64_t v61 = *(void *)(v4 - 8);
  uint64_t v62 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)v55 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)v55 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)v55 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)v55 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)v55 - v20;
  uint64_t State = type metadata accessor for LibraryCanvasContentLoadState();
  MEMORY[0x270FA5388](State);
  uint64_t v24 = (char *)v55 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v25 = *a2;
  int v26 = a2[1];
  sub_24F04C8CC(v63, (uint64_t)v24);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 2) >= 2)
  {
    LODWORD(v63) = v25;
    v55[3] = v26;
    unint64_t v29 = v21;
    long long v56 = v19;
    char v57 = v16;
    uint64_t v30 = v61;
    uint64_t v31 = v62;
    int v58 = v7;
    if (!EnumCaseMultiPayload)
    {
      uint64_t v32 = *(void *)v24;
      int v33 = v24[8];
      uint64_t v34 = &v24[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2699A3B38) + 64)];
      uint64_t v35 = v13;
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v13, v34, v31);
      char v36 = sub_24F05C930(v32, v60);
      swift_bridgeObjectRelease();
      if ((v36 & 1) != 0 && v33 == v63)
      {
        char v37 = sub_24F071530();
        uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
        uint64_t v39 = v10;
        v38(v10, v35, v31);
        uint64_t v40 = v58;
        v38(v58, v59, v31);
        if (v37)
        {
          sub_24F0325F0();
          char v28 = sub_24F072020() ^ 1;
LABEL_14:
          uint64_t v51 = *(void (**)(char *, uint64_t))(v30 + 8);
          v51(v40, v31);
          v51(v39, v31);
          v51(v35, v31);
          return v28 & 1;
        }
      }
      else
      {
        uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
        uint64_t v39 = v10;
        v50(v10, v35, v31);
        uint64_t v40 = v58;
        v50(v58, v59, v31);
      }
      char v28 = 1;
      goto LABEL_14;
    }
    uint64_t v41 = *(void *)v24;
    int v42 = v24[8];
    unint64_t v43 = &v24[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2699A3B38) + 64)];
    uint64_t v44 = v30;
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v29, v43, v31);
    char v45 = sub_24F05C930(v41, v60);
    swift_bridgeObjectRelease();
    if ((v45 & 1) != 0 && v42 == v63)
    {
      char v46 = sub_24F071530();
      uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
      uint64_t v48 = v56;
      v47(v56, v29, v31);
      uint64_t v49 = v57;
      v47(v57, v59, v31);
      if (v46)
      {
        sub_24F0325F0();
        char v28 = sub_24F072020() ^ 1;
LABEL_17:
        long long v53 = *(void (**)(char *, uint64_t))(v44 + 8);
        v53(v49, v31);
        v53(v48, v31);
        v53(v29, v31);
        return v28 & 1;
      }
    }
    else
    {
      uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
      uint64_t v48 = v56;
      v52(v56, v29, v31);
      uint64_t v49 = v57;
      v52(v57, v59, v31);
    }
    char v28 = 1;
    goto LABEL_17;
  }
  char v28 = 1;
  return v28 & 1;
}

uint64_t sub_24F04C8CC(uint64_t a1, uint64_t a2)
{
  uint64_t State = type metadata accessor for LibraryCanvasContentLoadState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(State - 8) + 16))(a2, a1, State);
  return a2;
}

uint64_t sub_24F04C930@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  *(void *)a2 = swift_getKeyPath();
  *(unsigned char *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = swift_getKeyPath();
  *(unsigned char *)(a2 + 24) = 0;
  uint64_t v4 = (int *)type metadata accessor for LibrarySidebarButtonStyle();
  uint64_t v5 = (uint64_t *)(a2 + v4[6]);
  *uint64_t v5 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4180);
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = a2 + v4[7];
  *(void *)uint64_t v6 = swift_getKeyPath();
  *(unsigned char *)(v6 + 8) = 0;
  uint64_t v7 = a2 + v4[8];
  *(void *)uint64_t v7 = swift_getKeyPath();
  *(unsigned char *)(v7 + 8) = 0;
  uint64_t v8 = a2 + v4[9];
  uint64_t result = swift_getKeyPath();
  *(void *)uint64_t v8 = result;
  *(unsigned char *)(v8 + 8) = 0;
  *(unsigned char *)(a2 + v4[10]) = a1;
  return result;
}

uint64_t sub_24F04CA20()
{
  return sub_24F071930();
}

uint64_t sub_24F04CA44@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24F0717F0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_24F04CA74()
{
  return sub_24F071800();
}

uint64_t sub_24F04CA9C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24F071810();
  *a1 = result & 1;
  return result;
}

uint64_t type metadata accessor for LibrarySidebarButtonStyle()
{
  uint64_t result = qword_2699A4190;
  if (!qword_2699A4190) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24F04CB18()
{
  return sub_24F071790();
}

uint64_t sub_24F04CB3C(uint64_t a1)
{
  uint64_t v2 = sub_24F0715E0();
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_24F0717A0();
}

uint64_t sub_24F04CC08@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24F0717C0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_24F04CC38@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24F0717B0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_24F04CC68@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24F071780();
  *a1 = result & 1;
  return result;
}

unint64_t sub_24F04CC98(unint64_t a1, uint64_t a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    sub_24F04CE70(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v8;
    uint64_t v9 = *(void *)(a2 + 16);
    char v10 = *(unsigned char *)(a2 + 24);
    sub_24F04CE70(v9, v10);
    *(void *)(a1 + 16) = v9;
    *(unsigned char *)(a1 + 24) = v10;
    uint64_t v11 = a3[6];
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = (void *)(a2 + v11);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4180);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_24F0715E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      *uint64_t v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v16 = a3[7];
    uint64_t v17 = a1 + v16;
    uint64_t v18 = a2 + v16;
    uint64_t v19 = *(void *)v18;
    char v20 = *(unsigned char *)(v18 + 8);
    sub_24F04CE70(*(void *)v18, v20);
    *(void *)uint64_t v17 = v19;
    *(unsigned char *)(v17 + 8) = v20;
    uint64_t v21 = a3[8];
    uint64_t v22 = a1 + v21;
    uint64_t v23 = a2 + v21;
    uint64_t v24 = *(void *)v23;
    char v25 = *(unsigned char *)(v23 + 8);
    sub_24F04CE70(*(void *)v23, v25);
    *(void *)uint64_t v22 = v24;
    *(unsigned char *)(v22 + 8) = v25;
    uint64_t v26 = a3[9];
    uint64_t v27 = a1 + v26;
    uint64_t v28 = a2 + v26;
    uint64_t v29 = *(void *)v28;
    char v30 = *(unsigned char *)(v28 + 8);
    sub_24F04CE70(*(void *)v28, v30);
    *(void *)uint64_t v27 = v29;
    *(unsigned char *)(v27 + 8) = v30;
    *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  }
  return a1;
}

uint64_t sub_24F04CE70(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_24F04CE7C(uint64_t a1, int *a2)
{
  sub_24F04CF74(*(void *)a1, *(unsigned char *)(a1 + 8));
  sub_24F04CF74(*(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  uint64_t v4 = a1 + a2[6];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4180);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_24F0715E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  sub_24F04CF74(*(void *)(a1 + a2[7]), *(unsigned char *)(a1 + a2[7] + 8));
  sub_24F04CF74(*(void *)(a1 + a2[8]), *(unsigned char *)(a1 + a2[8] + 8));
  uint64_t v6 = a1 + a2[9];
  uint64_t v7 = *(void *)v6;
  char v8 = *(unsigned char *)(v6 + 8);
  return sub_24F04CF74(v7, v8);
}

uint64_t sub_24F04CF74(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_24F04CF80(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_24F04CE70(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = *(void *)(a2 + 16);
  char v9 = *(unsigned char *)(a2 + 24);
  sub_24F04CE70(v8, v9);
  *(void *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 24) = v9;
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4180);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = sub_24F0715E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  }
  else
  {
    void *v11 = *v12;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = *(void *)v16;
  char v18 = *(unsigned char *)(v16 + 8);
  sub_24F04CE70(*(void *)v16, v18);
  *(void *)uint64_t v15 = v17;
  *(unsigned char *)(v15 + 8) = v18;
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = *(void *)v21;
  char v23 = *(unsigned char *)(v21 + 8);
  sub_24F04CE70(*(void *)v21, v23);
  *(void *)uint64_t v20 = v22;
  *(unsigned char *)(v20 + 8) = v23;
  uint64_t v24 = a3[9];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = *(void *)v26;
  char v28 = *(unsigned char *)(v26 + 8);
  sub_24F04CE70(*(void *)v26, v28);
  *(void *)uint64_t v25 = v27;
  *(unsigned char *)(v25 + 8) = v28;
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_24F04D108(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_24F04CE70(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_24F04CF74(v8, v9);
  uint64_t v10 = *(void *)(a2 + 16);
  char v11 = *(unsigned char *)(a2 + 24);
  sub_24F04CE70(v10, v11);
  uint64_t v12 = *(void *)(a1 + 16);
  char v13 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v10;
  *(unsigned char *)(a1 + 24) = v11;
  sub_24F04CF74(v12, v13);
  if (a1 != a2)
  {
    uint64_t v14 = a3[6];
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (void *)(a2 + v14);
    sub_24F04D2DC(a1 + v14);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4180);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_24F0715E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = *(void *)v20;
  char v22 = *(unsigned char *)(v20 + 8);
  sub_24F04CE70(*(void *)v20, v22);
  uint64_t v23 = *(void *)v19;
  char v24 = *(unsigned char *)(v19 + 8);
  *(void *)uint64_t v19 = v21;
  *(unsigned char *)(v19 + 8) = v22;
  sub_24F04CF74(v23, v24);
  uint64_t v25 = a3[8];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  uint64_t v28 = *(void *)v27;
  char v29 = *(unsigned char *)(v27 + 8);
  sub_24F04CE70(*(void *)v27, v29);
  uint64_t v30 = *(void *)v26;
  char v31 = *(unsigned char *)(v26 + 8);
  *(void *)uint64_t v26 = v28;
  *(unsigned char *)(v26 + 8) = v29;
  sub_24F04CF74(v30, v31);
  uint64_t v32 = a3[9];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  uint64_t v35 = *(void *)v34;
  char v36 = *(unsigned char *)(v34 + 8);
  sub_24F04CE70(*(void *)v34, v36);
  uint64_t v37 = *(void *)v33;
  char v38 = *(unsigned char *)(v33 + 8);
  *(void *)uint64_t v33 = v35;
  *(unsigned char *)(v33 + 8) = v36;
  sub_24F04CF74(v37, v38);
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_24F04D2DC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4180);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24F04D33C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = a3[6];
  char v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4180);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_24F0715E0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(void *)uint64_t v13 = *(void *)v14;
  *(unsigned char *)(v13 + 8) = *(unsigned char *)(v14 + 8);
  uint64_t v15 = a1 + v12;
  uint64_t v16 = a2 + v12;
  *(void *)uint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  uint64_t v17 = a3[9];
  uint64_t v18 = a3[10];
  uint64_t v19 = a1 + v17;
  uint64_t v20 = a2 + v17;
  *(void *)uint64_t v19 = *(void *)v20;
  *(unsigned char *)(v19 + 8) = *(unsigned char *)(v20 + 8);
  *(unsigned char *)(a1 + v18) = *(unsigned char *)(a2 + v18);
  return a1;
}

uint64_t sub_24F04D490(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_24F04CF74(v8, v9);
  char v10 = *((unsigned char *)a2 + 24);
  uint64_t v11 = *(void *)(a1 + 16);
  char v12 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = a2[2];
  *(unsigned char *)(a1 + 24) = v10;
  sub_24F04CF74(v11, v12);
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v13 = a3[6];
    uint64_t v14 = (void *)(a1 + v13);
    uint64_t v15 = (char *)a2 + v13;
    sub_24F04D2DC(a1 + v13);
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4180);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_24F0715E0();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = (uint64_t *)((char *)a2 + v18);
  uint64_t v21 = *v20;
  LOBYTE(v20) = *((unsigned char *)v20 + 8);
  uint64_t v22 = *(void *)v19;
  char v23 = *(unsigned char *)(v19 + 8);
  *(void *)uint64_t v19 = v21;
  *(unsigned char *)(v19 + 8) = (_BYTE)v20;
  sub_24F04CF74(v22, v23);
  uint64_t v24 = a3[8];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = (uint64_t *)((char *)a2 + v24);
  uint64_t v27 = *v26;
  LOBYTE(v26) = *((unsigned char *)v26 + 8);
  uint64_t v28 = *(void *)v25;
  char v29 = *(unsigned char *)(v25 + 8);
  *(void *)uint64_t v25 = v27;
  *(unsigned char *)(v25 + 8) = (_BYTE)v26;
  sub_24F04CF74(v28, v29);
  uint64_t v30 = a3[9];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = (uint64_t *)((char *)a2 + v30);
  uint64_t v33 = *v32;
  LOBYTE(v32) = *((unsigned char *)v32 + 8);
  uint64_t v34 = *(void *)v31;
  char v35 = *(unsigned char *)(v31 + 8);
  *(void *)uint64_t v31 = v33;
  *(unsigned char *)(v31 + 8) = (_BYTE)v32;
  sub_24F04CF74(v34, v35);
  *(unsigned char *)(a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  return a1;
}

uint64_t sub_24F04D638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24F04D64C);
}

uint64_t sub_24F04D64C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4188);
    char v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_24F04D6F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24F04D70C);
}

uint64_t sub_24F04D70C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 8) = -(char)a2;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4188);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_24F04D7B4()
{
  sub_24F04D85C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_24F04D85C()
{
  if (!qword_2699A41A0)
  {
    sub_24F0715E0();
    unint64_t v0 = sub_24F0715F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2699A41A0);
    }
  }
}

uint64_t sub_24F04D8B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t LibraryPageCountState.init(locale:focusedLibraryPage:pageCounts:allowedContentRatings:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  sub_24F04DD14(MEMORY[0x263F8EE78]);
  uint64_t v10 = a5 + *(int *)(type metadata accessor for LibraryPageCountState() + 28);
  uint64_t v11 = sub_24F071500();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10, a1, v11);
  uint64_t result = swift_bridgeObjectRelease();
  *(unsigned char *)(a5 + 8) = a2;
  *(void *)a5 = a3;
  *(void *)(a5 + 16) = a4;
  return result;
}

uint64_t sub_24F04D98C(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = *(void *)(result + 56);
  uint64_t v26 = result + 56;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & v5;
  int64_t v27 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v28 = result;
  uint64_t v9 = a2 + 56;
  if ((v7 & v5) == 0) {
    goto LABEL_8;
  }
  while (2)
  {
    unint64_t v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v11 = v10 | (v4 << 6);
LABEL_24:
    int v15 = *(unsigned __int8 *)(*(void *)(v3 + 48) + v11);
    sub_24F072430();
    sub_24F072080();
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_24F072460();
    uint64_t v17 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v18 = v16 & ~v17;
    if (((*(void *)(v9 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    int64_t v19 = v4;
    uint64_t v20 = ~v17;
    while (!*(unsigned char *)(*(void *)(a2 + 48) + v18))
    {
      unint64_t v21 = 0xE500000000000000;
      uint64_t v22 = 0x6E61656C63;
      if (!v15) {
        goto LABEL_40;
      }
LABEL_29:
      if (v15 == 1) {
        uint64_t v23 = 0x746963696C707865;
      }
      else {
        uint64_t v23 = 0x6669636570736E75;
      }
      if (v15 == 1) {
        unint64_t v24 = 0xE800000000000000;
      }
      else {
        unint64_t v24 = 0xEB00000000646569;
      }
      if (v22 == v23) {
        goto LABEL_41;
      }
LABEL_42:
      char v25 = sub_24F072400();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v25) {
        goto LABEL_46;
      }
      unint64_t v18 = (v18 + 1) & v20;
      if (((*(void *)(v9 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
        return 0;
      }
    }
    if (*(unsigned char *)(*(void *)(a2 + 48) + v18) == 1)
    {
      unint64_t v21 = 0xE800000000000000;
      uint64_t v22 = 0x746963696C707865;
      if (!v15) {
        goto LABEL_40;
      }
      goto LABEL_29;
    }
    uint64_t v22 = 0x6669636570736E75;
    unint64_t v21 = 0xEB00000000646569;
    if (v15) {
      goto LABEL_29;
    }
LABEL_40:
    unint64_t v24 = 0xE500000000000000;
    if (v22 != 0x6E61656C63) {
      goto LABEL_42;
    }
LABEL_41:
    if (v21 != v24) {
      goto LABEL_42;
    }
    uint64_t result = swift_bridgeObjectRelease_n();
LABEL_46:
    int64_t v4 = v19;
    uint64_t v3 = v28;
    if (v8) {
      continue;
    }
    break;
  }
LABEL_8:
  int64_t v12 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_51;
  }
  if (v12 >= v27) {
    return 1;
  }
  unint64_t v13 = *(void *)(v26 + 8 * v12);
  ++v4;
  if (v13) {
    goto LABEL_23;
  }
  int64_t v4 = v12 + 1;
  if (v12 + 1 >= v27) {
    return 1;
  }
  unint64_t v13 = *(void *)(v26 + 8 * v4);
  if (v13) {
    goto LABEL_23;
  }
  int64_t v4 = v12 + 2;
  if (v12 + 2 >= v27) {
    return 1;
  }
  unint64_t v13 = *(void *)(v26 + 8 * v4);
  if (v13) {
    goto LABEL_23;
  }
  int64_t v4 = v12 + 3;
  if (v12 + 3 >= v27) {
    return 1;
  }
  unint64_t v13 = *(void *)(v26 + 8 * v4);
  if (v13) {
    goto LABEL_23;
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v27) {
    return 1;
  }
  unint64_t v13 = *(void *)(v26 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
LABEL_23:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v27) {
      return 1;
    }
    unint64_t v13 = *(void *)(v26 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_23;
    }
  }
LABEL_51:
  __break(1u);
  return result;
}

unint64_t sub_24F04DD14(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4200);
  uint64_t v2 = (void *)sub_24F0722C0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  int64_t v4 = (void *)(a1 + 40);
  while (1)
  {
    unsigned __int8 v5 = *((unsigned char *)v4 - 8);
    uint64_t v6 = *v4;
    unint64_t result = sub_24F0602F8(v5);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    *(void *)(v2[7] + 8 * result) = v6;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v4 += 2;
    v2[2] = v11;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for LibraryPageCountState()
{
  uint64_t result = qword_2699A41D8;
  if (!qword_2699A41D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t LibraryPageCountState.pageCounts.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t LibraryPageCountState.pageCounts.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*LibraryPageCountState.pageCounts.modify())()
{
  return nullsub_1;
}

uint64_t LibraryPageCountState.focusedLibraryPage.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t LibraryPageCountState.focusedLibraryPage.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 8) = result;
  return result;
}

uint64_t (*LibraryPageCountState.focusedLibraryPage.modify())()
{
  return nullsub_1;
}

unint64_t sub_24F04DEE0()
{
  unint64_t result = 0x6E756F4365676170;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0x656C61636F6CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24F04DF7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24F04F4CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24F04DFA4(uint64_t a1)
{
  unint64_t v2 = sub_24F04E448();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F04DFE0(uint64_t a1)
{
  unint64_t v2 = sub_24F04E448();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t LibraryPageCountState.withAllowedContentRatings(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(int *)(type metadata accessor for LibraryPageCountState() + 28);
  uint64_t v6 = (uint64_t)v2 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_24F071500();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v7, v6, v8);
  LOBYTE(v6) = *((unsigned char *)v2 + 8);
  uint64_t v9 = *v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24F04DD14(MEMORY[0x263F8EE78]);
  uint64_t result = swift_bridgeObjectRelease();
  *(unsigned char *)(a2 + 8) = v6;
  *(void *)a2 = v9;
  *(void *)(a2 + 16) = a1;
  return result;
}

uint64_t LibraryPageCountState.withFocusedLibraryPage(_:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(int *)(type metadata accessor for LibraryPageCountState() + 28);
  uint64_t v6 = (char *)v2 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_24F071500();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v7, v6, v8);
  uint64_t v9 = *v2;
  uint64_t v10 = v2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24F04DD14(MEMORY[0x263F8EE78]);
  uint64_t result = swift_bridgeObjectRelease();
  *(unsigned char *)(a2 + 8) = a1;
  *(void *)a2 = v9;
  *(void *)(a2 + 16) = v10;
  return result;
}

uint64_t LibraryPageCountState.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A41A8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24F04E448();
  sub_24F072480();
  uint64_t v11 = *v3;
  HIBYTE(v10) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A41B8);
  sub_24F04E90C(&qword_2699A41C0, (void (*)(void))sub_24F027D88);
  sub_24F0723F0();
  if (!v2)
  {
    LOBYTE(v11) = *((unsigned char *)v3 + 8);
    HIBYTE(v10) = 1;
    sub_24F027D88();
    sub_24F0723F0();
    uint64_t v11 = v3[2];
    HIBYTE(v10) = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3AA8);
    sub_24F03BB6C(&qword_2699A3D08, (void (*)(void))sub_24F03B50C);
    sub_24F0723F0();
    type metadata accessor for LibraryPageCountState();
    LOBYTE(v11) = 3;
    sub_24F071500();
    sub_24F0033D8(&qword_2699A2D20);
    sub_24F0723F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_24F04E448()
{
  unint64_t result = qword_2699A41B0;
  if (!qword_2699A41B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A41B0);
  }
  return result;
}

uint64_t LibraryPageCountState.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v4 = sub_24F071500();
  uint64_t v20 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A41C8);
  uint64_t v22 = *(void *)(v7 - 8);
  uint64_t v23 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LibraryPageCountState();
  MEMORY[0x270FA5388](v10);
  int64_t v12 = (unint64_t *)((char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v13 = sub_24F04DD14(MEMORY[0x263F8EE78]);
  char v25 = a1;
  uint64_t v26 = v12;
  *int64_t v12 = v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24F04E448();
  unint64_t v24 = v9;
  sub_24F072470();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = v22;
    int v15 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2699A41B8);
    char v27 = 0;
    sub_24F04E90C(&qword_2699A41D0, (void (*)(void))sub_24F0282D4);
    uint64_t v16 = v23;
    sub_24F072370();
    swift_bridgeObjectRelease();
    uint64_t v17 = (uint64_t)v26;
    *uint64_t v26 = v28;
    char v27 = 1;
    sub_24F0282D4();
    sub_24F072370();
    *(unsigned char *)(v17 + 8) = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3AA8);
    char v27 = 2;
    sub_24F03BB6C(&qword_2699A3D28, (void (*)(void))sub_24F03BBDC);
    sub_24F072370();
    *(void *)(v17 + 16) = v28;
    LOBYTE(v28) = 3;
    sub_24F0033D8(&qword_2699A2D38);
    unint64_t v18 = v24;
    sub_24F072370();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v16);
    (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v17 + *(int *)(v10 + 28), v15, v4);
    sub_24F04E988(v17, v21);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    return sub_24F04E9EC(v17);
  }
}

uint64_t sub_24F04E90C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A41B8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24F04E988(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LibraryPageCountState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24F04E9EC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LibraryPageCountState();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24F04EA48@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return LibraryPageCountState.init(from:)(a1, a2);
}

uint64_t sub_24F04EA60(void *a1)
{
  return LibraryPageCountState.encode(to:)(a1);
}

unint64_t sub_24F04EA7C(unint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  unint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  unint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_24;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13)
        {
          int64_t v4 = v12 + 3;
          if (v12 + 3 >= v9) {
            return 1;
          }
          unint64_t v13 = *(void *)(v5 + 8 * v4);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_24:
    uint64_t v15 = *(void *)(*(void *)(v3 + 56) + 8 * v11);
    uint64_t result = sub_24F0602F8(*(unsigned char *)(*(void *)(v3 + 48) + v11));
    if ((v16 & 1) == 0 || *(void *)(*(void *)(a2 + 56) + 8 * result) != v15) {
      return 0;
    }
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_23;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t _s14FitnessLibrary0B14PageCountStateV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_24F04EA7C(*(void *)a1, *(void *)a2) & 1) != 0
    && (sub_24F02D65C(*(unsigned char *)(a1 + 8), *(unsigned char *)(a2 + 8)) & 1) != 0
    && (sub_24F04D98C(*(void *)(a1 + 16), *(void *)(a2 + 16)) & 1) != 0)
  {
    type metadata accessor for LibraryPageCountState();
    JUMPOUT(0x253351FB0);
  }
  return 0;
}

uint64_t initializeBufferWithCopyOfBuffer for LibraryPageCountState(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(void *)(a1 + 16) = a2[2];
    uint64_t v6 = *(int *)(a3 + 28);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = sub_24F071500();
    unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t destroy for LibraryPageCountState(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_24F071500();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for LibraryPageCountState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_24F071500();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

uint64_t assignWithCopy for LibraryPageCountState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_24F071500();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for LibraryPageCountState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_24F071500();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for LibraryPageCountState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_24F071500();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryPageCountState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24F04F0AC);
}

uint64_t sub_24F04F0AC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_24F071500();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    unint64_t v11 = (char *)a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for LibraryPageCountState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24F04F170);
}

void *sub_24F04F170(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_24F071500();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 28);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_24F04F218()
{
  uint64_t result = sub_24F071500();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LibraryPageCountState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F04F38CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryPageCountState.CodingKeys()
{
  return &type metadata for LibraryPageCountState.CodingKeys;
}

unint64_t sub_24F04F3C8()
{
  unint64_t result = qword_2699A41E8;
  if (!qword_2699A41E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A41E8);
  }
  return result;
}

unint64_t sub_24F04F420()
{
  unint64_t result = qword_2699A41F0;
  if (!qword_2699A41F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A41F0);
  }
  return result;
}

unint64_t sub_24F04F478()
{
  unint64_t result = qword_2699A41F8;
  if (!qword_2699A41F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A41F8);
  }
  return result;
}

uint64_t sub_24F04F4CC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E756F4365676170 && a2 == 0xEA00000000007374;
  if (v2 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000024F07AD30 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000024F07AE80 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24F072400();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

__n128 LibraryPageCountFeature.init(environment:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v2;
  long long v3 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v3;
  long long v4 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(a2 + 80) = v4;
  __n128 result = *(__n128 *)(a1 + 96);
  *(__n128 *)(a2 + 96) = result;
  return result;
}

uint64_t LibraryPageCountFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, unsigned char *a2, unint64_t *a3, unint64_t a4, uint64_t a5)
{
  long long v177 = a3;
  uint64_t v180 = a2;
  uint64_t v176 = a1;
  uint64_t v178 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3310);
  uint64_t v179 = *(void *)(v178 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v178);
  uint64_t v10 = (char *)&v159 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  int64_t v14 = (char *)&v159 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v159 - v16;
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)&v159 - v19;
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v23 = (char *)&v159 - v22;
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v26 = (char *)&v159 - v25;
  uint64_t result = MEMORY[0x270FA5388](v24);
  uint64_t v30 = (char *)&v159 - v29;
  long long v31 = v5[5];
  long long v192 = v5[4];
  long long v193 = v31;
  long long v194 = v5[6];
  long long v32 = v5[1];
  long long v188 = *v5;
  long long v189 = v32;
  long long v33 = v5[3];
  long long v190 = v5[2];
  long long v191 = v33;
  if (a4 >> 62)
  {
    if (a4 >> 62 == 1)
    {
      uint64_t v34 = v180;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v181 = *v34;
      *uint64_t v34 = 0x8000000000000000;
      sub_24F055470(a5, a4, isUniquelyReferenced_nonNull_native);
      *uint64_t v34 = v181;
      return swift_bridgeObjectRelease();
    }
    else
    {
      switch(a4)
      {
        case 0x8000000000000001:
          if (!*(void *)(*(void *)v180 + 16))
          {
            long long v160 = v28;
            uint64_t v72 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2699A32A8);
            uint64_t v73 = &v23[v72[16]];
            uint64_t v74 = &v23[v72[20]];
            uint64_t v75 = &v23[v72[24]];
            LOBYTE(v181) = 3;
            unint64_t v175 = sub_24F0509FC();
            sub_24F072230();
            sub_24F072150();
            uint64_t v76 = *MEMORY[0x263F39590];
            uint64_t v77 = sub_24F071FD0();
            uint64_t v78 = *(void *)(v77 - 8);
            uint64_t v79 = *(void (**)(char *, void, uint64_t))(v78 + 104);
            unsigned int v174 = v76;
            uint64_t v173 = v77;
            uint64_t v172 = v79;
            uint64_t v171 = v78 + 104;
            ((void (*)(char *, uint64_t))v79)(v73, v76);
            uint64_t v80 = *MEMORY[0x263F39570];
            uint64_t v81 = sub_24F071FC0();
            uint64_t v82 = *(void *)(v81 - 8);
            char v83 = *(void (**)(char *, void, uint64_t))(v82 + 104);
            unsigned int v170 = v80;
            uint64_t v169 = v81;
            uint64_t v168 = v83;
            uint64_t v167 = v82 + 104;
            ((void (*)(char *, uint64_t))v83)(v74, v80);
            char v84 = (_OWORD *)swift_allocObject();
            long long v85 = v193;
            v84[5] = v192;
            v84[6] = v85;
            v84[7] = v194;
            long long v86 = v189;
            v84[1] = v188;
            v84[2] = v86;
            long long v87 = v191;
            v84[3] = v190;
            v84[4] = v87;
            *(void *)uint64_t v75 = &unk_2699A4228;
            *((void *)v75 + 1) = v84;
            uint64_t v88 = v179;
            unint64_t v89 = *(void (**)(void))(v179 + 104);
            unsigned int v165 = *MEMORY[0x263F39530];
            uint64_t v166 = v179 + 104;
            uint64_t v164 = (void (*)(char *, void, uint64_t))v89;
            v89(v23);
            unint64_t v90 = *v177;
            sub_24F0545E8((uint64_t)&v188);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v90 = sub_24F0145E8(0, *(void *)(v90 + 16) + 1, 1, v90);
            }
            unint64_t v92 = *(void *)(v90 + 16);
            unint64_t v91 = *(void *)(v90 + 24);
            if (v92 >= v91 >> 1) {
              unint64_t v90 = sub_24F0145E8(v91 > 1, v92 + 1, 1, v90);
            }
            *(void *)(v90 + 16) = v92 + 1;
            uint64_t v94 = *(void (**)(unint64_t, char *, uint64_t))(v88 + 32);
            uint64_t v93 = v88 + 32;
            unint64_t v162 = (*(unsigned __int8 *)(v93 + 48) + 32) & ~(unint64_t)*(unsigned __int8 *)(v93 + 48);
            uint64_t v161 = *(void *)(v93 + 40);
            uint64_t v95 = v178;
            uint64_t v179 = v93;
            uint64_t v163 = v94;
            v94(v90 + v162 + v161 * v92, v23, v178);
            uint64_t v96 = v177;
            *long long v177 = v90;
            uint64_t v97 = &v20[v72[16]];
            uint64_t v98 = &v20[v72[20]];
            uint64_t v99 = &v20[v72[24]];
            LOBYTE(v181) = 4;
            sub_24F072230();
            sub_24F072150();
            v172(v97, v174, v173);
            v168(v98, v170, v169);
            uint64_t v100 = (_OWORD *)swift_allocObject();
            long long v101 = v193;
            v100[5] = v192;
            v100[6] = v101;
            v100[7] = v194;
            long long v102 = v189;
            v100[1] = v188;
            v100[2] = v102;
            long long v103 = v191;
            v100[3] = v190;
            v100[4] = v103;
            *(void *)uint64_t v99 = &unk_2699A4238;
            *((void *)v99 + 1) = v100;
            v164(v20, v165, v95);
            unint64_t v104 = *v96;
            sub_24F0545E8((uint64_t)&v188);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v104 = sub_24F0145E8(0, *(void *)(v104 + 16) + 1, 1, v104);
            }
            unint64_t v106 = *(void *)(v104 + 16);
            unint64_t v105 = *(void *)(v104 + 24);
            if (v106 >= v105 >> 1) {
              unint64_t v104 = sub_24F0145E8(v105 > 1, v106 + 1, 1, v104);
            }
            *(void *)(v104 + 16) = v106 + 1;
            uint64_t v107 = v178;
            v163(v104 + v162 + v106 * v161, v20, v178);
            uint64_t v108 = v177;
            *long long v177 = v104;
            uint64_t v109 = &v17[v72[16]];
            uint64_t v110 = &v17[v72[20]];
            char v111 = &v17[v72[24]];
            LOBYTE(v181) = 6;
            sub_24F072230();
            sub_24F072150();
            v172(v109, v174, v173);
            v168(v110, v170, v169);
            uint64_t v112 = (_OWORD *)swift_allocObject();
            long long v113 = v193;
            v112[5] = v192;
            v112[6] = v113;
            v112[7] = v194;
            long long v114 = v189;
            v112[1] = v188;
            v112[2] = v114;
            long long v115 = v191;
            v112[3] = v190;
            v112[4] = v115;
            *(void *)char v111 = &unk_2699A4248;
            *((void *)v111 + 1) = v112;
            v164(v17, v165, v107);
            unint64_t v116 = *v108;
            sub_24F0545E8((uint64_t)&v188);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v116 = sub_24F0145E8(0, *(void *)(v116 + 16) + 1, 1, v116);
            }
            unint64_t v118 = *(void *)(v116 + 16);
            unint64_t v117 = *(void *)(v116 + 24);
            if (v118 >= v117 >> 1) {
              unint64_t v116 = sub_24F0145E8(v117 > 1, v118 + 1, 1, v116);
            }
            *(void *)(v116 + 16) = v118 + 1;
            uint64_t v119 = v17;
            uint64_t v120 = v178;
            v163(v116 + v162 + v118 * v161, v119, v178);
            *uint64_t v108 = v116;
            uint64_t v121 = &v14[v72[16]];
            uint64_t v122 = &v14[v72[20]];
            uint64_t v123 = &v14[v72[24]];
            LOBYTE(v181) = 7;
            sub_24F072230();
            sub_24F072150();
            v172(v121, v174, v173);
            v168(v122, v170, v169);
            uint64_t v124 = (_OWORD *)swift_allocObject();
            long long v125 = v193;
            v124[5] = v192;
            v124[6] = v125;
            v124[7] = v194;
            long long v126 = v189;
            v124[1] = v188;
            v124[2] = v126;
            long long v127 = v191;
            v124[3] = v190;
            v124[4] = v127;
            *(void *)uint64_t v123 = &unk_2699A4258;
            *((void *)v123 + 1) = v124;
            v164(v14, v165, v120);
            unint64_t v128 = *v108;
            sub_24F0545E8((uint64_t)&v188);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v128 = sub_24F0145E8(0, *(void *)(v128 + 16) + 1, 1, v128);
            }
            unint64_t v130 = *(void *)(v128 + 16);
            unint64_t v129 = *(void *)(v128 + 24);
            if (v130 >= v129 >> 1) {
              unint64_t v128 = sub_24F0145E8(v129 > 1, v130 + 1, 1, v128);
            }
            *(void *)(v128 + 16) = v130 + 1;
            v163(v128 + v162 + v130 * v161, v14, v120);
            *uint64_t v108 = v128;
            uint64_t v131 = v160;
            uint64_t v132 = &v160[v72[16]];
            uint64_t v133 = &v160[v72[20]];
            uint64_t v134 = &v160[v72[24]];
            LOBYTE(v181) = 5;
            sub_24F072230();
            sub_24F072150();
            v172(v132, v174, v173);
            v168(v133, v170, v169);
            unint64_t v135 = (_OWORD *)swift_allocObject();
            long long v136 = v193;
            v135[5] = v192;
            v135[6] = v136;
            v135[7] = v194;
            long long v137 = v189;
            v135[1] = v188;
            v135[2] = v137;
            long long v138 = v191;
            v135[3] = v190;
            v135[4] = v138;
            *(void *)uint64_t v134 = &unk_2699A4268;
            *((void *)v134 + 1) = v135;
            v164(v131, v165, v120);
            unint64_t v139 = *v108;
            sub_24F0545E8((uint64_t)&v188);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v139 = sub_24F0145E8(0, *(void *)(v139 + 16) + 1, 1, v139);
            }
            unint64_t v141 = *(void *)(v139 + 16);
            unint64_t v140 = *(void *)(v139 + 24);
            if (v141 >= v140 >> 1) {
              unint64_t v139 = sub_24F0145E8(v140 > 1, v141 + 1, 1, v139);
            }
            *(void *)(v139 + 16) = v141 + 1;
            v163(v139 + v162 + v141 * v161, v160, v120);
            *uint64_t v108 = v139;
            long long v185 = v192;
            long long v186 = v193;
            long long v187 = v194;
            long long v181 = v188;
            long long v182 = v189;
            long long v184 = v191;
            long long v183 = v190;
            uint64_t result = LibraryPageCountFeature.reduce(localState:sharedState:sideEffects:action:)(v176, v180, v108, 0x8000000000000003, 0);
          }
          break;
        case 0x8000000000000002:
          return result;
        case 0x8000000000000003:
          uint64_t v142 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2699A32A8);
          uint64_t v143 = &v10[v142[16]];
          uint64_t v144 = &v10[v142[20]];
          uint64_t v145 = &v10[v142[24]];
          LOBYTE(v181) = 0;
          sub_24F0509FC();
          sub_24F072230();
          sub_24F072130();
          uint64_t v146 = *MEMORY[0x263F39590];
          uint64_t v147 = sub_24F071FD0();
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v147 - 8) + 104))(v143, v146, v147);
          uint64_t v148 = (_OWORD *)swift_allocObject();
          long long v149 = v193;
          v148[5] = v192;
          v148[6] = v149;
          v148[7] = v194;
          long long v150 = v189;
          v148[1] = v188;
          v148[2] = v150;
          long long v151 = v191;
          v148[3] = v190;
          v148[4] = v151;
          *(void *)uint64_t v145 = &unk_2699A4218;
          *((void *)v145 + 1) = v148;
          uint64_t v152 = *MEMORY[0x263F39578];
          uint64_t v153 = sub_24F071FC0();
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v153 - 8) + 104))(v144, v152, v153);
          uint64_t v154 = v178;
          (*(void (**)(char *, void, uint64_t))(v179 + 104))(v10, *MEMORY[0x263F39530], v178);
          uint64_t v155 = v177;
          unint64_t v156 = *v177;
          sub_24F0545E8((uint64_t)&v188);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v156 = sub_24F0145E8(0, *(void *)(v156 + 16) + 1, 1, v156);
          }
          unint64_t v158 = *(void *)(v156 + 16);
          unint64_t v157 = *(void *)(v156 + 24);
          if (v158 >= v157 >> 1) {
            unint64_t v156 = sub_24F0145E8(v157 > 1, v158 + 1, 1, v156);
          }
          *(void *)(v156 + 16) = v158 + 1;
          uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v179 + 32))(v156+ ((*(unsigned __int8 *)(v179 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v179 + 80))+ *(void *)(v179 + 72) * v158, v10, v154);
          *uint64_t v155 = v156;
          break;
        default:
          unint64_t v54 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2699A32A8);
          unint64_t v55 = &v30[v54[16]];
          long long v56 = &v30[v54[20]];
          char v57 = &v30[v54[24]];
          LOBYTE(v181) = 1;
          sub_24F0509FC();
          sub_24F072230();
          sub_24F072150();
          uint64_t v58 = *MEMORY[0x263F39590];
          uint64_t v59 = sub_24F071FD0();
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v59 - 8) + 104))(v55, v58, v59);
          uint64_t v60 = (_OWORD *)swift_allocObject();
          long long v61 = v193;
          v60[5] = v192;
          v60[6] = v61;
          v60[7] = v194;
          long long v62 = v189;
          v60[1] = v188;
          v60[2] = v62;
          long long v63 = v191;
          v60[3] = v190;
          v60[4] = v63;
          *(void *)char v57 = &unk_2699A4288;
          *((void *)v57 + 1) = v60;
          uint64_t v64 = *MEMORY[0x263F39578];
          uint64_t v65 = sub_24F071FC0();
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v65 - 8) + 104))(v56, v64, v65);
          uint64_t v66 = v179;
          uint64_t v67 = v178;
          (*(void (**)(char *, void, uint64_t))(v179 + 104))(v30, *MEMORY[0x263F39530], v178);
          uint64_t v68 = v177;
          unint64_t v69 = *v177;
          sub_24F0545E8((uint64_t)&v188);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v69 = sub_24F0145E8(0, *(void *)(v69 + 16) + 1, 1, v69);
          }
          unint64_t v71 = *(void *)(v69 + 16);
          unint64_t v70 = *(void *)(v69 + 24);
          if (v71 >= v70 >> 1) {
            unint64_t v69 = sub_24F0145E8(v70 > 1, v71 + 1, 1, v69);
          }
          *(void *)(v69 + 16) = v71 + 1;
          uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v66 + 32))(v69+ ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80))+ *(void *)(v66 + 72) * v71, v30, v67);
          *uint64_t v68 = v69;
          break;
      }
    }
  }
  else
  {
    char v36 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2699A32A8);
    uint64_t v37 = &v26[v36[16]];
    char v38 = &v26[v36[20]];
    uint64_t v39 = &v26[v36[24]];
    LOBYTE(v181) = 2;
    sub_24F0509FC();
    sub_24F072230();
    sub_24F072130();
    uint64_t v40 = *MEMORY[0x263F39580];
    uint64_t v41 = sub_24F071FD0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 104))(v37, v40, v41);
    uint64_t v42 = swift_allocObject();
    long long v43 = v193;
    *(_OWORD *)(v42 + 80) = v192;
    *(_OWORD *)(v42 + 96) = v43;
    *(_OWORD *)(v42 + 112) = v194;
    long long v44 = v189;
    *(_OWORD *)(v42 + 16) = v188;
    *(_OWORD *)(v42 + 32) = v44;
    long long v45 = v191;
    *(_OWORD *)(v42 + 48) = v190;
    *(_OWORD *)(v42 + 64) = v45;
    *(unsigned char *)(v42 + 128) = a4;
    *(void *)uint64_t v39 = &unk_2699A4278;
    *((void *)v39 + 1) = v42;
    uint64_t v46 = *MEMORY[0x263F39578];
    uint64_t v47 = sub_24F071FC0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v47 - 8) + 104))(v38, v46, v47);
    uint64_t v48 = v179;
    uint64_t v49 = v178;
    (*(void (**)(char *, void, uint64_t))(v179 + 104))(v26, *MEMORY[0x263F39530], v178);
    uint64_t v50 = v177;
    unint64_t v51 = *v177;
    sub_24F0545E8((uint64_t)&v188);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v51 = sub_24F0145E8(0, *(void *)(v51 + 16) + 1, 1, v51);
    }
    unint64_t v53 = *(void *)(v51 + 16);
    unint64_t v52 = *(void *)(v51 + 24);
    if (v53 >= v52 >> 1) {
      unint64_t v51 = sub_24F0145E8(v52 > 1, v53 + 1, 1, v51);
    }
    *(void *)(v51 + 16) = v53 + 1;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v48 + 32))(v51+ ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))+ *(void *)(v48 + 72) * v53, v26, v49);
    unint64_t *v50 = v51;
    v180[8] = a4;
  }
  return result;
}

unint64_t sub_24F0509FC()
{
  unint64_t result = qword_2699A4208;
  if (!qword_2699A4208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_2699A4208);
  }
  return result;
}

uint64_t sub_24F050A50(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  v2[4] = sub_24F072120();
  v2[5] = sub_24F072110();
  uint64_t v4 = sub_24F0720F0();
  v2[6] = v4;
  v2[7] = v3;
  return MEMORY[0x270FA2498](sub_24F050AEC, v4, v3);
}

uint64_t sub_24F050AEC()
{
  int8x16_t v4 = v0[1];
  v0[4].i64[0] = sub_24F072110();
  uint64_t v1 = swift_task_alloc();
  v0[4].i64[1] = v1;
  *(void *)(v1 + 16) = &unk_2700A5A58;
  *(int8x16_t *)(v1 + 24) = vextq_s8(v4, v4, 8uLL);
  long long v2 = (void *)swift_task_alloc();
  v0[5].i64[0] = (uint64_t)v2;
  *long long v2 = v0;
  v2[1] = sub_24F050C04;
  return MEMORY[0x270FA22B8]();
}

uint64_t sub_24F050C04()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return MEMORY[0x270FA2498](sub_24F056268, v3, v2);
}

uint64_t sub_24F050D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[11] = a4;
  v5[12] = a5;
  v5[9] = a2;
  v5[10] = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A42C0);
  v5[13] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[14] = v7;
  v5[15] = *(void *)(v7 + 64);
  v5[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A42C8);
  v5[17] = swift_task_alloc();
  v5[18] = swift_task_alloc();
  sub_24F072120();
  v5[19] = sub_24F072110();
  uint64_t v9 = sub_24F0720F0();
  return MEMORY[0x270FA2498](sub_24F050EA8, v9, v8);
}

uint64_t sub_24F050EA8()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_release();
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = (char *)(*(void *)(v0 + 80) + 32);
    uint64_t v30 = *(void *)(v0 + 112);
    uint64_t v29 = sub_24F072170();
    uint64_t v4 = *(void *)(v29 - 8);
    unint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
    char v27 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    uint64_t v26 = (void (**)(uint64_t, uint64_t))(v4 + 8);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v31 = v2;
      uint64_t v6 = *(void *)(v0 + 144);
      uint64_t v33 = *(void *)(v0 + 136);
      uint64_t v7 = *(void *)(v0 + 128);
      uint64_t v9 = *(void *)(v0 + 96);
      uint64_t v8 = *(void *)(v0 + 104);
      uint64_t v10 = *(_OWORD **)(v0 + 88);
      char v32 = *v3;
      v28(v6, 1, 1, v29);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v7, v9, v8);
      unint64_t v11 = (*(unsigned __int8 *)(v30 + 80) + 145) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = 0;
      *(void *)(v12 + 24) = 0;
      long long v14 = v10[5];
      long long v13 = v10[6];
      long long v15 = v10[4];
      *(_OWORD *)(v12 + 80) = v10[3];
      *(_OWORD *)(v12 + 96) = v15;
      *(_OWORD *)(v12 + 112) = v14;
      *(_OWORD *)(v12 + 128) = v13;
      long long v17 = v10[1];
      long long v16 = v10[2];
      *(_OWORD *)(v12 + 32) = *v10;
      *(_OWORD *)(v12 + 48) = v17;
      *(_OWORD *)(v12 + 64) = v16;
      *(unsigned char *)(v12 + 144) = v32;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v30 + 32))(v12 + v11, v7, v8);
      sub_24F055B8C(v6, v33);
      LODWORD(v8) = (*v27)(v33, 1, v29);
      sub_24F0545E8((uint64_t)v10);
      uint64_t v18 = *(void *)(v0 + 136);
      if (v8 == 1)
      {
        sub_24F055BF4(*(void *)(v0 + 136));
      }
      else
      {
        sub_24F072160();
        (*v26)(v18, v29);
      }
      ++v3;
      if (*(void *)(v12 + 16))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v19 = sub_24F0720F0();
        uint64_t v21 = v20;
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v19 = 0;
        uint64_t v21 = 0;
      }
      uint64_t v22 = **(void **)(v0 + 72);
      uint64_t v23 = v21 | v19;
      if (v21 | v19)
      {
        uint64_t v23 = v0 + 16;
        *(void *)(v0 + 16) = 0;
        *(void *)(v0 + 24) = 0;
        *(void *)(v0 + 32) = v19;
        *(void *)(v0 + 40) = v21;
      }
      uint64_t v5 = *(void *)(v0 + 144);
      *(void *)(v0 + 48) = 1;
      *(void *)(v0 + 56) = v23;
      *(void *)(v0 + 64) = v22;
      swift_task_create();
      swift_release();
      sub_24F055BF4(v5);
      uint64_t v2 = v31 - 1;
    }
    while (v31 != 1);
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t sub_24F0511F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 32) = a6;
  *(unsigned char *)(v6 + 56) = a5;
  uint64_t v10 = (uint64_t (*)(uint64_t))(*(void *)(a4 + 96) + **(int **)(a4 + 96));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v6 + 40) = v8;
  void *v8 = v6;
  v8[1] = sub_24F0512D4;
  return v10(a5);
}

uint64_t sub_24F0512D4(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 16) = *(unsigned __int8 *)(v4 + 56) | 0x4000000000000000;
    *(void *)(v4 + 24) = a1;
    uint64_t v8 = v4 + 16;
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v8 + 32) = v9;
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A42C0);
    *uint64_t v9 = v5;
    v9[1] = sub_24F056264;
    return MEMORY[0x270F252C8](v8, v10);
  }
}

uint64_t sub_24F05146C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[2] = sub_24F072120();
  v3[3] = sub_24F072110();
  uint64_t v8 = (uint64_t (*)(uint64_t))(*(void *)(a2 + 80) + **(int **)(a2 + 80));
  uint64_t v6 = (void *)swift_task_alloc();
  v3[4] = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_24F013A4C;
  return v8(a3);
}

uint64_t sub_24F051560(uint64_t a1, void *a2)
{
  v2[14] = a1;
  v2[15] = sub_24F072120();
  v2[16] = sub_24F072110();
  uint64_t v6 = (uint64_t (*)(void *))(*a2 + *(int *)*a2);
  uint64_t v4 = (void *)swift_task_alloc();
  v2[17] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24F05165C;
  return v6(v2 + 2);
}

uint64_t sub_24F05165C()
{
  uint64_t v2 = (void *)*v1;
  v2[18] = v0;
  swift_task_dealloc();
  uint64_t v4 = sub_24F0720F0();
  v2[19] = v4;
  v2[20] = v3;
  if (v0) {
    uint64_t v5 = sub_24F051E18;
  }
  else {
    uint64_t v5 = sub_24F0517BC;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_24F0517BC()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t v4 = swift_task_alloc();
  (*(void (**)(uint64_t, void *, uint64_t))(v3 + 16))(v4, v2, v1);
  v0[10] = swift_getAssociatedTypeWitness();
  v0[11] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1(v0 + 7);
  sub_24F0721B0();
  swift_task_dealloc();
  uint64_t v5 = sub_24F072110();
  v0[21] = v5;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 7), v0[10]);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[22] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_24F0519A0;
  uint64_t v7 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1E88](v0 + 24, v5, v7);
}

uint64_t sub_24F0519A0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 160);
  uint64_t v3 = *(void *)(v1 + 152);
  return MEMORY[0x270FA2498](sub_24F051AE4, v3, v2);
}

uint64_t sub_24F051AE4()
{
  if (*(unsigned char *)(v0 + 192) == 1)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    *(_OWORD *)(v0 + 96) = xmmword_24F0788A0;
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 184) = v3;
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A42C0);
    *uint64_t v3 = v0;
    v3[1] = sub_24F051C0C;
    return MEMORY[0x270F252C8](v0 + 96, v4);
  }
}

uint64_t sub_24F051C0C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 160);
  uint64_t v3 = *(void *)(v1 + 152);
  return MEMORY[0x270FA2498](sub_24F051D2C, v3, v2);
}

uint64_t sub_24F051D2C()
{
  uint64_t v1 = sub_24F072110();
  v0[21] = v1;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 7), v0[10]);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[22] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = sub_24F0519A0;
  uint64_t v3 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1E88](v0 + 24, v1, v3);
}

uint64_t sub_24F051E18()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24F051E7C(uint64_t a1, uint64_t a2)
{
  v2[14] = a1;
  v2[15] = sub_24F072120();
  v2[16] = sub_24F072110();
  uint64_t v6 = (uint64_t (*)(void *))(*(void *)(a2 + 16) + **(int **)(a2 + 16));
  uint64_t v4 = (void *)swift_task_alloc();
  v2[17] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24F051F78;
  return v6(v2 + 2);
}

uint64_t sub_24F051F78()
{
  uint64_t v2 = (void *)*v1;
  v2[18] = v0;
  swift_task_dealloc();
  uint64_t v4 = sub_24F0720F0();
  v2[19] = v4;
  v2[20] = v3;
  if (v0) {
    uint64_t v5 = sub_24F05625C;
  }
  else {
    uint64_t v5 = sub_24F0520D8;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_24F0520D8()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t v4 = swift_task_alloc();
  (*(void (**)(uint64_t, void *, uint64_t))(v3 + 16))(v4, v2, v1);
  v0[10] = swift_getAssociatedTypeWitness();
  v0[11] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1(v0 + 7);
  sub_24F0721B0();
  swift_task_dealloc();
  uint64_t v5 = sub_24F072110();
  v0[21] = v5;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 7), v0[10]);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[22] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_24F0522BC;
  uint64_t v7 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1E88](v0 + 24, v5, v7);
}

uint64_t sub_24F0522BC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 160);
  uint64_t v3 = *(void *)(v1 + 152);
  return MEMORY[0x270FA2498](sub_24F052400, v3, v2);
}

uint64_t sub_24F052400()
{
  if (*(unsigned char *)(v0 + 192) == 1)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    *(_OWORD *)(v0 + 96) = xmmword_24F0788B0;
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 184) = v3;
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A42C0);
    *uint64_t v3 = v0;
    v3[1] = sub_24F052528;
    return MEMORY[0x270F252C8](v0 + 96, v4);
  }
}

uint64_t sub_24F052528()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 160);
  uint64_t v3 = *(void *)(v1 + 152);
  return MEMORY[0x270FA2498](sub_24F052648, v3, v2);
}

uint64_t sub_24F052648()
{
  uint64_t v1 = sub_24F072110();
  v0[21] = v1;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 7), v0[10]);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[22] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = sub_24F0522BC;
  uint64_t v3 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1E88](v0 + 24, v1, v3);
}

uint64_t sub_24F052734(uint64_t a1, uint64_t a2)
{
  v2[16] = a1;
  v2[17] = sub_24F072120();
  v2[18] = sub_24F072110();
  uint64_t v6 = (uint64_t (*)(void *))(*(void *)(a2 + 48) + **(int **)(a2 + 48));
  uint64_t v4 = (void *)swift_task_alloc();
  v2[19] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24F052830;
  return v6(v2 + 2);
}

uint64_t sub_24F052830()
{
  uint64_t v2 = (void *)*v1;
  v2[20] = v0;
  swift_task_dealloc();
  uint64_t v4 = sub_24F0720F0();
  v2[21] = v4;
  v2[22] = v3;
  if (v0) {
    uint64_t v5 = sub_24F052FF4;
  }
  else {
    uint64_t v5 = sub_24F052990;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_24F052990()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t v4 = swift_task_alloc();
  (*(void (**)(uint64_t, void *, uint64_t))(v3 + 16))(v4, v2, v1);
  v0[10] = swift_getAssociatedTypeWitness();
  v0[11] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1(v0 + 7);
  sub_24F0721B0();
  swift_task_dealloc();
  uint64_t v5 = sub_24F072110();
  v0[23] = v5;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 7), v0[10]);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[24] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_24F052B74;
  uint64_t v7 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1E88](v0 + 14, v5, v7);
}

uint64_t sub_24F052B74()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 176);
  uint64_t v3 = *(void *)(v1 + 168);
  return MEMORY[0x270FA2498](sub_24F052CB8, v3, v2);
}

uint64_t sub_24F052CB8()
{
  if (*(unsigned char *)(v0 + 120) == 1)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 112);
    *(void *)(v0 + 96) = 0x4000000000000002;
    *(void *)(v0 + 104) = v3;
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 200) = v4;
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A42C0);
    *uint64_t v4 = v0;
    v4[1] = sub_24F052DE8;
    return MEMORY[0x270F252C8](v0 + 96, v5);
  }
}

uint64_t sub_24F052DE8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 176);
  uint64_t v3 = *(void *)(v1 + 168);
  return MEMORY[0x270FA2498](sub_24F052F08, v3, v2);
}

uint64_t sub_24F052F08()
{
  uint64_t v1 = sub_24F072110();
  v0[23] = v1;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 7), v0[10]);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[24] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = sub_24F052B74;
  uint64_t v3 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1E88](v0 + 14, v1, v3);
}

uint64_t sub_24F052FF4()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24F053058(uint64_t a1, uint64_t a2)
{
  v2[16] = a1;
  v2[17] = sub_24F072120();
  v2[18] = sub_24F072110();
  uint64_t v6 = (uint64_t (*)(void *))(*(void *)(a2 + 64) + **(int **)(a2 + 64));
  uint64_t v4 = (void *)swift_task_alloc();
  v2[19] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24F053154;
  return v6(v2 + 2);
}

uint64_t sub_24F053154()
{
  uint64_t v2 = (void *)*v1;
  v2[20] = v0;
  swift_task_dealloc();
  uint64_t v4 = sub_24F0720F0();
  v2[21] = v4;
  v2[22] = v3;
  if (v0) {
    uint64_t v5 = sub_24F056260;
  }
  else {
    uint64_t v5 = sub_24F0532B4;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_24F0532B4()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t v4 = swift_task_alloc();
  (*(void (**)(uint64_t, void *, uint64_t))(v3 + 16))(v4, v2, v1);
  v0[10] = swift_getAssociatedTypeWitness();
  v0[11] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1(v0 + 7);
  sub_24F0721B0();
  swift_task_dealloc();
  uint64_t v5 = sub_24F072110();
  v0[23] = v5;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 7), v0[10]);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[24] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_24F053498;
  uint64_t v7 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1E88](v0 + 14, v5, v7);
}

uint64_t sub_24F053498()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 176);
  uint64_t v3 = *(void *)(v1 + 168);
  return MEMORY[0x270FA2498](sub_24F0535DC, v3, v2);
}

uint64_t sub_24F0535DC()
{
  if (*(unsigned char *)(v0 + 120) == 1)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 112);
    *(void *)(v0 + 96) = 0x4000000000000003;
    *(void *)(v0 + 104) = v3;
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 200) = v4;
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A42C0);
    *uint64_t v4 = v0;
    v4[1] = sub_24F05370C;
    return MEMORY[0x270F252C8](v0 + 96, v5);
  }
}

uint64_t sub_24F05370C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 176);
  uint64_t v3 = *(void *)(v1 + 168);
  return MEMORY[0x270FA2498](sub_24F05382C, v3, v2);
}

uint64_t sub_24F05382C()
{
  uint64_t v1 = sub_24F072110();
  v0[23] = v1;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 7), v0[10]);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[24] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = sub_24F053498;
  uint64_t v3 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1E88](v0 + 14, v1, v3);
}

uint64_t sub_24F053918(uint64_t a1, uint64_t a2)
{
  v2[16] = a1;
  v2[17] = sub_24F072120();
  v2[18] = sub_24F072110();
  uint64_t v6 = (uint64_t (*)(void *))(*(void *)(a2 + 32) + **(int **)(a2 + 32));
  uint64_t v4 = (void *)swift_task_alloc();
  v2[19] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24F053A14;
  return v6(v2 + 2);
}

uint64_t sub_24F053A14()
{
  uint64_t v2 = (void *)*v1;
  v2[20] = v0;
  swift_task_dealloc();
  uint64_t v4 = sub_24F0720F0();
  v2[21] = v4;
  v2[22] = v3;
  if (v0) {
    uint64_t v5 = sub_24F056260;
  }
  else {
    uint64_t v5 = sub_24F053B74;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_24F053B74()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t v4 = swift_task_alloc();
  (*(void (**)(uint64_t, void *, uint64_t))(v3 + 16))(v4, v2, v1);
  v0[10] = swift_getAssociatedTypeWitness();
  v0[11] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1(v0 + 7);
  sub_24F0721B0();
  swift_task_dealloc();
  uint64_t v5 = sub_24F072110();
  v0[23] = v5;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 7), v0[10]);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[24] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_24F053D58;
  uint64_t v7 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1E88](v0 + 14, v5, v7);
}

uint64_t sub_24F053D58()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 176);
  uint64_t v3 = *(void *)(v1 + 168);
  return MEMORY[0x270FA2498](sub_24F053E9C, v3, v2);
}

uint64_t sub_24F053E9C()
{
  if (*(unsigned char *)(v0 + 120) == 1)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 112);
    *(void *)(v0 + 96) = 0x4000000000000005;
    *(void *)(v0 + 104) = v3;
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 200) = v4;
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A42C0);
    *uint64_t v4 = v0;
    v4[1] = sub_24F053FCC;
    return MEMORY[0x270F252C8](v0 + 96, v5);
  }
}

uint64_t sub_24F053FCC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 176);
  uint64_t v3 = *(void *)(v1 + 168);
  return MEMORY[0x270FA2498](sub_24F0540EC, v3, v2);
}

uint64_t sub_24F0540EC()
{
  uint64_t v1 = sub_24F072110();
  v0[23] = v1;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 7), v0[10]);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[24] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = sub_24F053D58;
  uint64_t v3 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1E88](v0 + 14, v1, v3);
}

uint64_t sub_24F0541D8(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  v2[4] = sub_24F072120();
  v2[5] = sub_24F072110();
  uint64_t v4 = sub_24F0720F0();
  v2[6] = v4;
  v2[7] = v3;
  return MEMORY[0x270FA2498](sub_24F054274, v4, v3);
}

uint64_t sub_24F054274()
{
  int8x16_t v4 = v0[1];
  v0[4].i64[0] = sub_24F072110();
  uint64_t v1 = (int8x16_t *)swift_task_alloc();
  v0[4].i64[1] = (uint64_t)v1;
  v1[1] = vextq_s8(v4, v4, 8uLL);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[5].i64[0] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = sub_24F054380;
  return MEMORY[0x270FA22B8]();
}

uint64_t sub_24F054380()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return MEMORY[0x270FA2498](sub_24F0544E0, v3, v2);
}

uint64_t sub_24F0544E0()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24F054544()
{
  return objectdestroyTm_0(128);
}

uint64_t sub_24F05454C(uint64_t a1)
{
  int8x16_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *int8x16_t v4 = v2;
  v4[1] = sub_24F027208;
  return sub_24F0541D8(a1, v1 + 16);
}

uint64_t sub_24F0545E8(uint64_t a1)
{
  return a1;
}

uint64_t sub_24F054674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[10] = a3;
  v4[11] = a4;
  v4[9] = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A42C0);
  v4[12] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[13] = v6;
  v4[14] = *(void *)(v6 + 64);
  v4[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A42C8);
  v4[16] = swift_task_alloc();
  v4[17] = swift_task_alloc();
  sub_24F072120();
  v4[18] = sub_24F072110();
  uint64_t v8 = sub_24F0720F0();
  return MEMORY[0x270FA2498](sub_24F0547B8, v8, v7);
}

uint64_t sub_24F0547B8()
{
  swift_release();
  if (qword_2699A2CF0 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_2699B32C8;
  uint64_t v32 = *(void *)(qword_2699B32C8 + 16);
  if (v32)
  {
    uint64_t v30 = *(void *)(v0 + 104);
    uint64_t v29 = sub_24F072170();
    uint64_t v2 = *(void *)(v29 - 8);
    unint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
    char v27 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
    uint64_t v26 = (void (**)(uint64_t, uint64_t))(v2 + 8);
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
    uint64_t v31 = v1;
    while (1)
    {
      uint64_t v5 = *(void *)(v0 + 136);
      uint64_t v34 = *(void *)(v0 + 128);
      uint64_t v35 = v3;
      uint64_t v6 = *(void *)(v0 + 120);
      uint64_t v8 = *(void *)(v0 + 88);
      uint64_t v7 = *(void *)(v0 + 96);
      uint64_t v9 = *(_OWORD **)(v0 + 80);
      char v33 = *(unsigned char *)(v1 + v3 + 32);
      v28(v5, 1, 1, v29);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v6, v8, v7);
      unint64_t v10 = (*(unsigned __int8 *)(v30 + 80) + 145) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = 0;
      uint64_t v12 = (void *)(v11 + 16);
      *(void *)(v11 + 24) = 0;
      long long v14 = v9[5];
      long long v13 = v9[6];
      long long v15 = v9[4];
      *(_OWORD *)(v11 + 80) = v9[3];
      *(_OWORD *)(v11 + 96) = v15;
      *(_OWORD *)(v11 + 112) = v14;
      *(_OWORD *)(v11 + 128) = v13;
      long long v17 = v9[1];
      long long v16 = v9[2];
      *(_OWORD *)(v11 + 32) = *v9;
      *(_OWORD *)(v11 + 48) = v17;
      *(_OWORD *)(v11 + 64) = v16;
      *(unsigned char *)(v11 + 144) = v33;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v30 + 32))(v11 + v10, v6, v7);
      sub_24F055B8C(v5, v34);
      LODWORD(v7) = (*v27)(v34, 1, v29);
      sub_24F0545E8((uint64_t)v9);
      uint64_t v18 = *(void *)(v0 + 128);
      if (v7 == 1)
      {
        sub_24F055BF4(*(void *)(v0 + 128));
        if (!*v12) {
          goto LABEL_10;
        }
      }
      else
      {
        sub_24F072160();
        (*v26)(v18, v29);
        if (!*v12)
        {
LABEL_10:
          uint64_t v19 = 0;
          uint64_t v21 = 0;
          goto LABEL_11;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v19 = sub_24F0720F0();
      uint64_t v21 = v20;
      swift_unknownObjectRelease();
LABEL_11:
      uint64_t v22 = **(void **)(v0 + 72);
      uint64_t v23 = v21 | v19;
      if (v21 | v19)
      {
        uint64_t v23 = v0 + 16;
        *(void *)(v0 + 16) = 0;
        *(void *)(v0 + 24) = 0;
        *(void *)(v0 + 32) = v19;
        *(void *)(v0 + 40) = v21;
      }
      ++v3;
      uint64_t v4 = *(void *)(v0 + 136);
      *(void *)(v0 + 48) = 1;
      *(void *)(v0 + 56) = v23;
      *(void *)(v0 + 64) = v22;
      swift_task_create();
      swift_release();
      sub_24F055BF4(v4);
      uint64_t v1 = v31;
      if (v32 == v35 + 1)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t sub_24F054B48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 32) = a6;
  *(unsigned char *)(v6 + 56) = a5;
  unint64_t v10 = (uint64_t (*)(uint64_t))(*(void *)(a4 + 96) + **(int **)(a4 + 96));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v6 + 40) = v8;
  void *v8 = v6;
  v8[1] = sub_24F054C24;
  return v10(a5);
}

uint64_t sub_24F054C24(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 16) = *(unsigned __int8 *)(v4 + 56) | 0x4000000000000000;
    *(void *)(v4 + 24) = a1;
    uint64_t v8 = v4 + 16;
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v8 + 32) = v9;
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A42C0);
    *uint64_t v9 = v5;
    v9[1] = sub_24F054DBC;
    return MEMORY[0x270F252C8](v8, v10);
  }
}

uint64_t sub_24F054DBC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24F054EB8(uint64_t a1, unsigned char *a2, unint64_t *a3, uint64_t a4)
{
  return LibraryPageCountFeature.reduce(localState:sharedState:sideEffects:action:)(a1, a2, a3, *(void *)a4, *(void *)(a4 + 8));
}

uint64_t sub_24F054EC4()
{
  return objectdestroyTm_0(128);
}

uint64_t sub_24F054ECC(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24F027208;
  return sub_24F051560(a1, (void *)(v1 + 16));
}

uint64_t sub_24F054F68()
{
  return objectdestroyTm_0(128);
}

uint64_t sub_24F054F70(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24F027208;
  return sub_24F051E7C(a1, v1 + 16);
}

uint64_t sub_24F05500C()
{
  return objectdestroyTm_0(128);
}

uint64_t sub_24F055014(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24F027208;
  return sub_24F052734(a1, v1 + 16);
}

uint64_t sub_24F0550B0()
{
  return objectdestroyTm_0(128);
}

uint64_t sub_24F0550B8(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24F027208;
  return sub_24F053058(a1, v1 + 16);
}

uint64_t sub_24F055154()
{
  return objectdestroyTm_0(128);
}

uint64_t sub_24F05515C(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24F027208;
  return sub_24F053918(a1, v1 + 16);
}

uint64_t sub_24F0551F8()
{
  return objectdestroyTm_0(129);
}

uint64_t sub_24F055200(uint64_t a1)
{
  uint64_t v4 = v1 + 16;
  uint64_t v5 = *(unsigned __int8 *)(v1 + 128);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_24F013D58;
  return sub_24F05146C(a1, v4, v5);
}

unint64_t sub_24F0552AC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4200);
  uint64_t v6 = (void *)sub_24F0722B0();
  if (*(void *)(v5 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v8 = (void *)(v5 + 64);
    uint64_t v9 = -1;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v15 = v14 | (v13 << 6);
      }
      else
      {
        int64_t v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_27:
          __break(1u);
          return result;
        }
        if (v16 >= v11) {
          goto LABEL_20;
        }
        unint64_t v17 = v8[v16];
        ++v13;
        if (!v17)
        {
          int64_t v13 = v16 + 1;
          if (v16 + 1 >= v11) {
            goto LABEL_20;
          }
          unint64_t v17 = v8[v13];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_20:
              swift_release();
              if (a2)
              {
                uint64_t v19 = 1 << *(unsigned char *)(v5 + 32);
                if (v19 > 63) {
                  bzero((void *)(v5 + 64), ((unint64_t)(v19 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v8 = -1 << v19;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v13 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_27;
                }
                if (v13 >= v11) {
                  goto LABEL_20;
                }
                unint64_t v17 = v8[v13];
                ++v18;
                if (v17) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v13 = v18;
          }
        }
LABEL_19:
        unint64_t v10 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      unint64_t result = sub_24F055C54(*(unsigned char *)(*(void *)(v5 + 48) + v15), *(void *)(*(void *)(v5 + 56) + 8 * v15), v6);
    }
  }
  unint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_24F055470(uint64_t a1, unsigned __int8 a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_24F0602F8(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_24F055E04();
LABEL_7:
    int64_t v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      *(void *)(v16[7] + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = a2;
    *(void *)(v16[7] + 8 * v10) = a1;
    uint64_t v18 = v16[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (!v19)
    {
      _OWORD v16[2] = v20;
      return result;
    }
    goto LABEL_14;
  }
  sub_24F0552AC(result, a3 & 1);
  uint64_t result = sub_24F0602F8(a2);
  if ((v14 & 1) == (v17 & 1))
  {
    unint64_t v10 = result;
    int64_t v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_24F072410();
  __break(1u);
  return result;
}

uint64_t sub_24F05559C()
{
  return objectdestroyTm_0(128);
}

uint64_t objectdestroyTm_0(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v1, a1, 7);
}

uint64_t sub_24F055618(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24F027208;
  return sub_24F050A50(a1, v1 + 16);
}

unint64_t sub_24F0556B8()
{
  unint64_t result = qword_2699A4290;
  if (!qword_2699A4290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4290);
  }
  return result;
}

unint64_t sub_24F055710()
{
  unint64_t result = qword_2699A4298;
  if (!qword_2699A4298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4298);
  }
  return result;
}

unint64_t sub_24F055768()
{
  unint64_t result = qword_2699A42A0;
  if (!qword_2699A42A0)
  {
    type metadata accessor for LibraryPageCountState();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A42A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryPageCountFeature()
{
  return &type metadata for LibraryPageCountFeature;
}

uint64_t getEnumTagSinglePayload for LibraryPageCountFeature.TaskIdentifier(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for LibraryPageCountFeature.TaskIdentifier(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F05592CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryPageCountFeature.TaskIdentifier()
{
  return &type metadata for LibraryPageCountFeature.TaskIdentifier;
}

unint64_t sub_24F055968()
{
  unint64_t result = qword_2699A42A8;
  if (!qword_2699A42A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_2699A42A8);
  }
  return result;
}

uint64_t sub_24F0559BC(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  char v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  *char v9 = v3;
  v9[1] = sub_24F027208;
  return sub_24F050D64(a1, a2, v6, v7, v8);
}

uint64_t sub_24F055A84(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2699A42C0) - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + 32;
  uint64_t v8 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 145) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = *(unsigned __int8 *)(v1 + 144);
  unint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *unint64_t v10 = v2;
  v10[1] = sub_24F027208;
  return sub_24F0511F8(a1, v5, v6, v7, v9, v8);
}

uint64_t sub_24F055B8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A42C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24F055BF4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A42C8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_24F055C54(char a1, uint64_t a2, void *a3)
{
  sub_24F072430();
  sub_24F072080();
  swift_bridgeObjectRelease();
  sub_24F072460();
  unint64_t result = sub_24F072220();
  *(void *)((char *)a3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  *(unsigned char *)(a3[6] + result) = a1;
  *(void *)(a3[7] + 8 * result) = a2;
  ++a3[2];
  return result;
}

void *sub_24F055E04()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4200);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24F0722A0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = __clz(__rbit64(v18));
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = v20 + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_24F055F94(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  void *v8 = v3;
  v8[1] = sub_24F027208;
  return sub_24F054674(a1, a2, v7, v6);
}

uint64_t objectdestroy_37Tm()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A42C0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 145) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_24F056154(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2699A42C0) - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + 32;
  uint64_t v8 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 145) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = *(unsigned __int8 *)(v1 + 144);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_24F027208;
  return sub_24F054B48(a1, v5, v6, v7, v9, v8);
}

unint64_t sub_24F05626C(char a1)
{
  unint64_t result = 0xD000000000000015;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6570704177656976;
      break;
    case 2:
      unint64_t result = 0x6173694477656976;
      break;
    case 4:
      unint64_t result = 0x4368736572666572;
      break;
    case 5:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24F05634C(uint64_t a1)
{
  unint64_t v2 = sub_24F056FD0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F056388(uint64_t a1)
{
  unint64_t v2 = sub_24F056FD0();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_24F0563C4()
{
  return sub_24F05626C(*v0);
}

uint64_t sub_24F0563CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24F057084(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24F0563F4(uint64_t a1)
{
  unint64_t v2 = sub_24F056DD8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F056430(uint64_t a1)
{
  unint64_t v2 = sub_24F056DD8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F05646C(uint64_t a1)
{
  unint64_t v2 = sub_24F056ED4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F0564A8(uint64_t a1)
{
  unint64_t v2 = sub_24F056ED4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F0564E4(uint64_t a1)
{
  unint64_t v2 = sub_24F056E80();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F056520(uint64_t a1)
{
  unint64_t v2 = sub_24F056E80();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F05655C()
{
  if (*v0) {
    return 0x746E756F63;
  }
  else {
    return 1701273968;
  }
}

uint64_t sub_24F05658C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24F057344(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24F0565B4(uint64_t a1)
{
  unint64_t v2 = sub_24F056E2C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F0565F0(uint64_t a1)
{
  unint64_t v2 = sub_24F056E2C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F05662C(uint64_t a1)
{
  unint64_t v2 = sub_24F056F7C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F056668(uint64_t a1)
{
  unint64_t v2 = sub_24F056F7C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F0566A4(uint64_t a1)
{
  unint64_t v2 = sub_24F056F28();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F0566E0(uint64_t a1)
{
  unint64_t v2 = sub_24F056F28();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t LibraryPageCountAction.encode(to:)(void *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v41 = a3;
  unint64_t v47 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4300);
  uint64_t v45 = *(void *)(v4 - 8);
  uint64_t v46 = v4;
  MEMORY[0x270FA5388](v4);
  long long v44 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4308);
  uint64_t v39 = *(void *)(v6 - 8);
  uint64_t v40 = v6;
  MEMORY[0x270FA5388](v6);
  char v38 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4310);
  uint64_t v42 = *(void *)(v8 - 8);
  uint64_t v43 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4318);
  uint64_t v36 = *(void *)(v11 - 8);
  uint64_t v37 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v35 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4320);
  uint64_t v33 = *(void *)(v13 - 8);
  uint64_t v34 = v13;
  MEMORY[0x270FA5388](v13);
  unint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4328);
  uint64_t v32 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  unint64_t v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4330);
  uint64_t v48 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24F056DD8();
  unint64_t v22 = v47;
  sub_24F072480();
  if (v22 >> 62)
  {
    if (v22 >> 62 == 1)
    {
      char v59 = 5;
      sub_24F056E2C();
      uint64_t v23 = v44;
      sub_24F072390();
      char v58 = v22;
      char v57 = 0;
      sub_24F027D88();
      uint64_t v24 = v46;
      uint64_t v25 = v49;
      sub_24F0723F0();
      if (!v25)
      {
        char v56 = 1;
        sub_24F0723E0();
      }
      (*(void (**)(char *, uint64_t))(v45 + 8))(v23, v24);
      return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v21, v19);
    }
    else
    {
      switch(v22)
      {
        case 0x8000000000000001:
          char v51 = 1;
          sub_24F056F7C();
          sub_24F072390();
          uint64_t v30 = v33;
          uint64_t v29 = v34;
          goto LABEL_13;
        case 0x8000000000000002:
          char v52 = 2;
          sub_24F056F28();
          unint64_t v15 = v35;
          sub_24F072390();
          uint64_t v30 = v36;
          uint64_t v29 = v37;
          goto LABEL_13;
        case 0x8000000000000003:
          char v55 = 4;
          sub_24F056E80();
          unint64_t v15 = v38;
          sub_24F072390();
          uint64_t v30 = v39;
          uint64_t v29 = v40;
LABEL_13:
          (*(void (**)(char *, uint64_t))(v30 + 8))(v15, v29);
          break;
        default:
          char v50 = 0;
          sub_24F056FD0();
          sub_24F072390();
          (*(void (**)(char *, uint64_t))(v32 + 8))(v18, v16);
          break;
      }
      return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v21, v19);
    }
  }
  else
  {
    char v54 = 3;
    sub_24F056ED4();
    uint64_t v27 = v19;
    sub_24F072390();
    char v53 = v22;
    sub_24F027D88();
    uint64_t v28 = v43;
    sub_24F0723F0();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v10, v28);
    return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v21, v27);
  }
}

unint64_t sub_24F056DD8()
{
  unint64_t result = qword_2699A4338;
  if (!qword_2699A4338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4338);
  }
  return result;
}

unint64_t sub_24F056E2C()
{
  unint64_t result = qword_2699A4340;
  if (!qword_2699A4340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4340);
  }
  return result;
}

unint64_t sub_24F056E80()
{
  unint64_t result = qword_2699A4348;
  if (!qword_2699A4348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4348);
  }
  return result;
}

unint64_t sub_24F056ED4()
{
  unint64_t result = qword_2699A4350;
  if (!qword_2699A4350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4350);
  }
  return result;
}

unint64_t sub_24F056F28()
{
  unint64_t result = qword_2699A4358;
  if (!qword_2699A4358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4358);
  }
  return result;
}

unint64_t sub_24F056F7C()
{
  unint64_t result = qword_2699A4360;
  if (!qword_2699A4360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4360);
  }
  return result;
}

unint64_t sub_24F056FD0()
{
  unint64_t result = qword_2699A4368;
  if (!qword_2699A4368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4368);
  }
  return result;
}

unint64_t LibraryPageCountAction.init(from:)(void *a1)
{
  return sub_24F057420(a1);
}

unint64_t sub_24F05703C@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t result = sub_24F057420(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_24F057068(void *a1)
{
  return LibraryPageCountAction.encode(to:)(a1, *(void *)v1, *(void *)(v1 + 8));
}

uint64_t sub_24F057084(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x800000024F07AEC0 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6570704177656976 && a2 == 0xEC00000064657261 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6173694477656976 && a2 == 0xEF64657261657070 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000024F07AEE0 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4368736572666572 && a2 == 0xEC000000746E756FLL || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000024F07AF00)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v5 = sub_24F072400();
    swift_bridgeObjectRelease();
    if (v5) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_24F057344(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701273968 && a2 == 0xE400000000000000;
  if (v2 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E756F63 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24F072400();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_24F057420(void *a1)
{
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A43F8);
  uint64_t v49 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  char v53 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4400);
  uint64_t v45 = *(void *)(v3 - 8);
  uint64_t v46 = v3;
  MEMORY[0x270FA5388](v3);
  char v50 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4408);
  uint64_t v48 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  char v52 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4410);
  uint64_t v44 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  char v51 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4418);
  uint64_t v41 = *(void *)(v7 - 8);
  uint64_t v42 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4420);
  uint64_t v40 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4428);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1[3];
  char v54 = a1;
  unint64_t v18 = (unint64_t)__swift_project_boxed_opaque_existential_1(a1, v17);
  sub_24F056DD8();
  uint64_t v19 = v55;
  sub_24F072470();
  if (v19) {
    goto LABEL_11;
  }
  uint64_t v20 = v12;
  uint64_t v37 = v10;
  char v38 = v9;
  uint64_t v21 = v51;
  unint64_t v22 = v52;
  uint64_t v23 = v53;
  uint64_t v55 = v14;
  uint64_t v24 = sub_24F072380();
  if (*(void *)(v24 + 16) != 1)
  {
    uint64_t v25 = sub_24F072260();
    swift_allocError();
    uint64_t v27 = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3060);
    *uint64_t v27 = &type metadata for LibraryPageCountAction;
    unint64_t v18 = (unint64_t)v16;
    sub_24F072310();
    sub_24F072250();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v25 - 8) + 104))(v27, *MEMORY[0x263F8DCB0], v25);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v16, v13);
LABEL_11:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
    return v18;
  }
  switch(*(unsigned char *)(v24 + 32))
  {
    case 1:
      char v57 = 1;
      sub_24F056F7C();
      uint64_t v28 = v38;
      sub_24F072300();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v28, v42);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v16, v13);
      unint64_t v18 = 0x8000000000000001;
      goto LABEL_11;
    case 2:
      char v58 = 2;
      sub_24F056F28();
      sub_24F072300();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v21, v39);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v16, v13);
      unint64_t v18 = 0x8000000000000002;
      goto LABEL_11;
    case 3:
      char v60 = 3;
      sub_24F056ED4();
      sub_24F072300();
      sub_24F0282D4();
      uint64_t v29 = v43;
      sub_24F072370();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v22, v29);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v16, v13);
      unint64_t v18 = v59;
      goto LABEL_11;
    case 4:
      char v61 = 4;
      sub_24F056E80();
      uint64_t v30 = v50;
      sub_24F072300();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v30, v46);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v16, v13);
      unint64_t v18 = 0x8000000000000003;
      goto LABEL_11;
    case 5:
      char v65 = 5;
      sub_24F056E2C();
      uint64_t v31 = v23;
      sub_24F072300();
      char v63 = 0;
      sub_24F0282D4();
      uint64_t v32 = v47;
      sub_24F072370();
      uint64_t v34 = v64;
      char v62 = 1;
      sub_24F072360();
      uint64_t v35 = v55;
      (*(void (**)(char *, uint64_t))(v49 + 8))(v31, v32);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v16, v13);
      unint64_t v18 = v34 | 0x4000000000000000;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
      break;
    default:
      char v56 = 0;
      sub_24F056FD0();
      sub_24F072300();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v20, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v16, v13);
      unint64_t v18 = 0x8000000000000000;
      goto LABEL_11;
  }
  return v18;
}

uint64_t getEnumTagSinglePayload for LibraryPageCountAction(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *(void *)a1 >> 3;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for LibraryPageCountAction(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = 8 * -a2;
      *(void *)(result + 8) = 0;
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_24F057E74(uint64_t a1)
{
  uint64_t v1 = *(void *)a1 >> 62;
  if (v1 <= 1) {
    return v1;
  }
  else {
    return (*(void *)a1 & 7 | (8 * *(_DWORD *)(a1 + 8))) + 2;
  }
}

void *sub_24F057E94(void *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

void *sub_24F057EA4(void *result, uint64_t a2)
{
  if (a2 < 2)
  {
    *unint64_t result = *result & 7 | (a2 << 62);
  }
  else
  {
    *unint64_t result = ((_BYTE)a2 - 2) & 7 | 0x8000000000000000;
    result[1] = (unint64_t)(a2 - 2) >> 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryPageCountAction()
{
  return &type metadata for LibraryPageCountAction;
}

unsigned char *storeEnumTagSinglePayload for LibraryPageCountAction.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F057FB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryPageCountAction.CodingKeys()
{
  return &type metadata for LibraryPageCountAction.CodingKeys;
}

ValueMetadata *type metadata accessor for LibraryPageCountAction.BookmarkCountsUpdatedCodingKeys()
{
  return &type metadata for LibraryPageCountAction.BookmarkCountsUpdatedCodingKeys;
}

ValueMetadata *type metadata accessor for LibraryPageCountAction.ViewAppearedCodingKeys()
{
  return &type metadata for LibraryPageCountAction.ViewAppearedCodingKeys;
}

ValueMetadata *type metadata accessor for LibraryPageCountAction.ViewDisappearedCodingKeys()
{
  return &type metadata for LibraryPageCountAction.ViewDisappearedCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for LibraryPageCountAction.NavigateToLibraryPageCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24F0580B4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryPageCountAction.NavigateToLibraryPageCodingKeys()
{
  return &type metadata for LibraryPageCountAction.NavigateToLibraryPageCodingKeys;
}

ValueMetadata *type metadata accessor for LibraryPageCountAction.RefreshCountCodingKeys()
{
  return &type metadata for LibraryPageCountAction.RefreshCountCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for LibraryPageCountAction.UpdateLibraryPageCountCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F0581C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryPageCountAction.UpdateLibraryPageCountCodingKeys()
{
  return &type metadata for LibraryPageCountAction.UpdateLibraryPageCountCodingKeys;
}

unint64_t sub_24F058204()
{
  unint64_t result = qword_2699A4370;
  if (!qword_2699A4370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4370);
  }
  return result;
}

unint64_t sub_24F05825C()
{
  unint64_t result = qword_2699A4378;
  if (!qword_2699A4378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4378);
  }
  return result;
}

unint64_t sub_24F0582B4()
{
  unint64_t result = qword_2699A4380;
  if (!qword_2699A4380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4380);
  }
  return result;
}

unint64_t sub_24F05830C()
{
  unint64_t result = qword_2699A4388;
  if (!qword_2699A4388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4388);
  }
  return result;
}

unint64_t sub_24F058364()
{
  unint64_t result = qword_2699A4390;
  if (!qword_2699A4390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4390);
  }
  return result;
}

unint64_t sub_24F0583BC()
{
  unint64_t result = qword_2699A4398;
  if (!qword_2699A4398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4398);
  }
  return result;
}

unint64_t sub_24F058414()
{
  unint64_t result = qword_2699A43A0;
  if (!qword_2699A43A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A43A0);
  }
  return result;
}

unint64_t sub_24F05846C()
{
  unint64_t result = qword_2699A43A8;
  if (!qword_2699A43A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A43A8);
  }
  return result;
}

unint64_t sub_24F0584C4()
{
  unint64_t result = qword_2699A43B0;
  if (!qword_2699A43B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A43B0);
  }
  return result;
}

unint64_t sub_24F05851C()
{
  unint64_t result = qword_2699A43B8;
  if (!qword_2699A43B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A43B8);
  }
  return result;
}

unint64_t sub_24F058574()
{
  unint64_t result = qword_2699A43C0;
  if (!qword_2699A43C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A43C0);
  }
  return result;
}

unint64_t sub_24F0585CC()
{
  unint64_t result = qword_2699A43C8;
  if (!qword_2699A43C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A43C8);
  }
  return result;
}

unint64_t sub_24F058624()
{
  unint64_t result = qword_2699A43D0;
  if (!qword_2699A43D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A43D0);
  }
  return result;
}

unint64_t sub_24F05867C()
{
  unint64_t result = qword_2699A43D8;
  if (!qword_2699A43D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A43D8);
  }
  return result;
}

unint64_t sub_24F0586D4()
{
  unint64_t result = qword_2699A43E0;
  if (!qword_2699A43E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A43E0);
  }
  return result;
}

unint64_t sub_24F05872C()
{
  unint64_t result = qword_2699A43E8;
  if (!qword_2699A43E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A43E8);
  }
  return result;
}

unint64_t sub_24F058784()
{
  unint64_t result = qword_2699A43F0;
  if (!qword_2699A43F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A43F0);
  }
  return result;
}

__n128 LibraryCanvasContentEnvironment.init(fetchSectionDescriptors:makeArchivedSessionsUpdatedStream:makeCatalogUpdatedStream:makeItemsUpdatedStream:navigateToBuildCustomPlan:publishPageEnter:refreshCanvas:refreshCatalog:reloadWorkouts:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, long long a11, long long a12, __n128 a13, uint64_t a14, uint64_t a15)
{
  __n128 result = a13;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(_OWORD *)(a9 + 64) = a10;
  *(_OWORD *)(a9 + 80) = a11;
  *(_OWORD *)(a9 + 96) = a12;
  *(__n128 *)(a9 + 112) = a13;
  *(void *)(a9 + 128) = a14;
  *(void *)(a9 + 136) = a15;
  return result;
}

uint64_t destroy for LibraryCanvasContentEnvironment()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for LibraryCanvasContentEnvironment(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  uint64_t v3 = *(void *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(void *)(a1 + 136) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for LibraryCanvasContentEnvironment(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_retain();
  swift_release();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_retain();
  swift_release();
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_retain();
  swift_release();
  uint64_t v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_retain();
  swift_release();
  uint64_t v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  swift_retain();
  swift_release();
  uint64_t v12 = a2[17];
  a1[16] = a2[16];
  a1[17] = v12;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy144_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

_OWORD *assignWithTake for LibraryCanvasContentEnvironment(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  a1[4] = a2[4];
  swift_release();
  a1[5] = a2[5];
  swift_release();
  a1[6] = a2[6];
  swift_release();
  a1[7] = a2[7];
  swift_release();
  a1[8] = a2[8];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryCanvasContentEnvironment(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 144)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LibraryCanvasContentEnvironment(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 144) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 144) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryCanvasContentEnvironment()
{
  return &type metadata for LibraryCanvasContentEnvironment;
}

double LibraryPickerView.init(store:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_24F071D30();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[1] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4430);
  sub_24F071E00();
  uint64_t v10 = v16[2];
  uint64_t v11 = v16[3];
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F1B388], v6);
  uint64_t v12 = MEMORY[0x253352850](v9, 0.694117647, 0.694117647, 0.694117647, 1.0);
  uint64_t v13 = sub_24F071D70();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  *(void *)a3 = sub_24F006060;
  *(void *)(a3 + 8) = v14;
  *(unsigned char *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = v10;
  *(void *)(a3 + 32) = v11;
  double result = 20.0;
  *(_OWORD *)(a3 + 40) = xmmword_24F0790D0;
  *(void *)(a3 + 56) = 0x3FD0000000000000;
  *(void *)(a3 + 64) = v12;
  *(void *)(a3 + 72) = v13;
  return result;
}

uint64_t sub_24F058D98()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

double LibraryPickerView.body.getter@<D0>(double *a1@<X8>)
{
  long long v3 = v1[3];
  v11[2] = v1[2];
  v11[3] = v3;
  void v11[4] = v1[4];
  long long v4 = v1[1];
  v11[0] = *v1;
  v11[1] = v4;
  uint64_t v5 = (_OWORD *)swift_allocObject();
  long long v6 = v1[3];
  v5[3] = v1[2];
  v5[4] = v6;
  v5[5] = v1[4];
  long long v7 = v1[1];
  v5[1] = *v1;
  void v5[2] = v7;
  sub_24F058FE0((uint64_t)v11);
  sub_24F071E00();
  double result = v9;
  *a1 = v9;
  *((void *)a1 + 1) = v10;
  *((void *)a1 + 2) = sub_24F058FD8;
  *((void *)a1 + 3) = v5;
  return result;
}

uint64_t sub_24F058E90@<X0>(_OWORD *a1@<X0>, uint64_t (**a2)()@<X8>, double a3@<D0>)
{
  uint64_t v6 = swift_allocObject();
  long long v7 = a1[3];
  *(_OWORD *)(v6 + 48) = a1[2];
  *(_OWORD *)(v6 + 64) = v7;
  *(_OWORD *)(v6 + 80) = a1[4];
  long long v8 = a1[1];
  *(_OWORD *)(v6 + 16) = *a1;
  *(_OWORD *)(v6 + 32) = v8;
  *(double *)(v6 + 96) = a3;
  sub_24F058FE0((uint64_t)a1);
  uint64_t v9 = sub_24F071F30();
  uint64_t v11 = v10;
  uint64_t v12 = (uint64_t (*)())swift_allocObject();
  long long v13 = a1[3];
  *((_OWORD *)v12 + 3) = a1[2];
  *((_OWORD *)v12 + 4) = v13;
  *((_OWORD *)v12 + 5) = a1[4];
  long long v14 = a1[1];
  *((_OWORD *)v12 + 1) = *a1;
  *((_OWORD *)v12 + 2) = v14;
  uint64_t v15 = (uint64_t (*)())swift_allocObject();
  long long v16 = a1[3];
  *((_OWORD *)v15 + 3) = a1[2];
  *((_OWORD *)v15 + 4) = v16;
  *((_OWORD *)v15 + 5) = a1[4];
  long long v17 = a1[1];
  *((_OWORD *)v15 + 1) = *a1;
  *((_OWORD *)v15 + 2) = v17;
  *a2 = sub_24F05B570;
  a2[1] = (uint64_t (*)())v6;
  a2[2] = (uint64_t (*)())v9;
  a2[3] = v11;
  a2[4] = (uint64_t (*)())sub_24F05B584;
  a2[5] = v12;
  a2[6] = sub_24F05B5FC;
  a2[7] = v15;
  sub_24F058FE0((uint64_t)a1);
  return sub_24F058FE0((uint64_t)a1);
}

uint64_t sub_24F058FD0()
{
  return objectdestroy_2Tm_1(96);
}

uint64_t sub_24F058FD8@<X0>(uint64_t (**a1)()@<X8>, double a2@<D0>)
{
  return sub_24F058E90((_OWORD *)(v2 + 16), a1, a2);
}

uint64_t sub_24F058FE0(uint64_t a1)
{
  return a1;
}

uint64_t sub_24F05904C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24F059068()
{
  return sub_24F0715D0();
}

uint64_t sub_24F059134@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v34 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4488);
  MEMORY[0x270FA5388](v5 - 8);
  long long v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4478);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4460);
  MEMORY[0x270FA5388](v11);
  long long v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4458);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  long long v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)long long v7 = sub_24F071850();
  *((void *)v7 + 1) = 0;
  v7[16] = 0;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4490);
  sub_24F0594C8(a1, a2, &v7[*(int *)(v18 + 44)]);
  sub_24F071F30();
  sub_24F071740();
  sub_24F016984((uint64_t)v7, (uint64_t)v10, &qword_2699A4488);
  uint64_t v19 = &v10[*(int *)(v8 + 36)];
  long long v20 = v40;
  *((_OWORD *)v19 + 4) = v39;
  *((_OWORD *)v19 + 5) = v20;
  *((_OWORD *)v19 + 6) = v41;
  long long v21 = v36;
  *(_OWORD *)uint64_t v19 = v35;
  *((_OWORD *)v19 + 1) = v21;
  long long v22 = v38;
  *((_OWORD *)v19 + 2) = v37;
  *((_OWORD *)v19 + 3) = v22;
  sub_24F01A7DC((uint64_t)v7, &qword_2699A4488);
  LOBYTE(v7) = sub_24F0719D0();
  sub_24F071580();
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  sub_24F016984((uint64_t)v10, (uint64_t)v13, &qword_2699A4478);
  uint64_t v31 = &v13[*(int *)(v11 + 36)];
  *uint64_t v31 = (char)v7;
  *((void *)v31 + 1) = v24;
  *((void *)v31 + 2) = v26;
  *((void *)v31 + 3) = v28;
  *((void *)v31 + 4) = v30;
  v31[40] = 0;
  sub_24F01A7DC((uint64_t)v10, &qword_2699A4478);
  sub_24F05B610();
  sub_24F071C50();
  sub_24F01A7DC((uint64_t)v13, &qword_2699A4460);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(v34, v17, v14);
}

uint64_t sub_24F0594C8@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v37 = a2;
  long long v41 = a3;
  uint64_t v4 = sub_24F071710();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4498);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A44A0);
  MEMORY[0x270FA5388](v38);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A44A8);
  uint64_t v12 = MEMORY[0x270FA5388](v39);
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v40 = (uint64_t)&v36 - v15;
  *(void *)uint64_t v9 = sub_24F071850();
  *((void *)v9 + 1) = 0x4034000000000000;
  v9[16] = 0;
  uint64_t v16 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2699A44B0) + 44);
  if (qword_2699A2CF8 != -1) {
    swift_once();
  }
  long long v36 = &v9[v16];
  uint64_t v42 = qword_2699B32D0;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v37, v4);
  unint64_t v17 = (*(unsigned __int8 *)(v5 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v18 = (char *)swift_allocObject();
  long long v19 = a1[3];
  *((_OWORD *)v18 + 3) = a1[2];
  *((_OWORD *)v18 + 4) = v19;
  *((_OWORD *)v18 + 5) = a1[4];
  long long v20 = a1[1];
  *((_OWORD *)v18 + 1) = *a1;
  *((_OWORD *)v18 + 2) = v20;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v18[v17], (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  swift_bridgeObjectRetain();
  sub_24F058FE0((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3150);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A44B8);
  sub_24F007760(&qword_2699A4118, &qword_2699A3150);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A44C0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A44C8);
  unint64_t v23 = sub_24F05B8B4();
  uint64_t v43 = v22;
  unint64_t v44 = v23;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v43 = v21;
  unint64_t v44 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  sub_24F05B954();
  sub_24F071EE0();
  sub_24F0719D0();
  sub_24F071580();
  uint64_t v43 = v25;
  unint64_t v44 = v26;
  uint64_t v45 = v27;
  uint64_t v46 = v28;
  char v47 = 0;
  sub_24F071910();
  sub_24F016F34((uint64_t)v9, (uint64_t)v11, &qword_2699A4498);
  uint64_t v29 = sub_24F071E30();
  sub_24F016984((uint64_t)v11, (uint64_t)v14, &qword_2699A44A0);
  uint64_t v30 = (uint64_t *)&v14[*(int *)(v39 + 36)];
  *uint64_t v30 = v29;
  v30[1] = (uint64_t)sub_24F05A1A0;
  void v30[2] = 0;
  sub_24F01A7DC((uint64_t)v11, &qword_2699A44A0);
  uint64_t v31 = v40;
  sub_24F016F34((uint64_t)v14, v40, &qword_2699A44A8);
  sub_24F016984(v31, (uint64_t)v14, &qword_2699A44A8);
  uint64_t v32 = v41;
  *long long v41 = 0;
  *((unsigned char *)v32 + 8) = 1;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A44F0);
  sub_24F016984((uint64_t)v14, (uint64_t)v32 + *(int *)(v33 + 48), &qword_2699A44A8);
  uint64_t v34 = (char *)v32 + *(int *)(v33 + 64);
  *(void *)uint64_t v34 = 0;
  v34[8] = 1;
  sub_24F01A7DC(v31, &qword_2699A44A8);
  return sub_24F01A7DC((uint64_t)v14, &qword_2699A44A8);
}

uint64_t sub_24F0599AC@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v65 = a3;
  uint64_t v5 = sub_24F071710();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A44F8);
  uint64_t v55 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56);
  uint64_t v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4500);
  uint64_t v11 = v10 - 8;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A44E0);
  uint64_t v15 = v14 - 8;
  MEMORY[0x270FA5388](v14);
  char v54 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A44C8);
  MEMORY[0x270FA5388](v62);
  uint64_t v58 = (uint64_t)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A44C0);
  uint64_t v63 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  char v60 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A44B8);
  uint64_t v59 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  char v57 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v20 = v3[3];
  long long v73 = v3[2];
  long long v74 = v20;
  long long v75 = v3[4];
  long long v21 = v3[1];
  long long v71 = *v3;
  long long v72 = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v53, v5);
  unint64_t v22 = (*(unsigned __int8 *)(v6 + 80) + 97) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v23 = swift_allocObject();
  long long v24 = v74;
  *(_OWORD *)(v23 + 48) = v73;
  *(_OWORD *)(v23 + 64) = v24;
  *(_OWORD *)(v23 + 80) = v75;
  long long v25 = v72;
  *(_OWORD *)(v23 + 16) = v71;
  *(_OWORD *)(v23 + 32) = v25;
  *(unsigned char *)(v23 + 96) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v23 + v22, (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  char v66 = a1;
  uint64_t v67 = &v71;
  sub_24F058FE0((uint64_t)&v71);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4508);
  sub_24F05BB0C();
  sub_24F071E40();
  sub_24F058FE0((uint64_t)&v71);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A34E0);
  uint64_t v26 = (uint64_t)v54;
  sub_24F007760((unint64_t *)&qword_2699A34E8, &qword_2699A34E0);
  sub_24F071600();
  sub_24F05BBD0((uint64_t)&v71);
  swift_getKeyPath();
  sub_24F071FE0();
  swift_release();
  swift_release();
  LOBYTE(v7) = sub_24F02D65C(v69, a1);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v28 = swift_allocObject();
  *(unsigned char *)(v28 + 16) = v7 & 1;
  uint64_t v29 = v55;
  uint64_t v30 = v56;
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v13, v9, v56);
  uint64_t v31 = (uint64_t *)&v13[*(int *)(v11 + 44)];
  *uint64_t v31 = KeyPath;
  v31[1] = (uint64_t)sub_24F05BCA4;
  v31[2] = v28;
  (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v30);
  sub_24F016984((uint64_t)v13, v26, &qword_2699A4500);
  *(unsigned char *)(v26 + *(int *)(v15 + 60)) = a1;
  sub_24F01A7DC((uint64_t)v13, &qword_2699A4500);
  LOBYTE(v28) = sub_24F0719F0();
  unsigned __int8 v32 = sub_24F071A00();
  char v33 = sub_24F071A20();
  sub_24F071A20();
  if (sub_24F071A20() != v28) {
    char v33 = sub_24F071A20();
  }
  sub_24F071A20();
  if (sub_24F071A20() != v32) {
    char v33 = sub_24F071A20();
  }
  sub_24F071580();
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v42 = v58;
  sub_24F016984(v26, v58, &qword_2699A44E0);
  uint64_t v43 = v62;
  uint64_t v44 = v42 + *(int *)(v62 + 36);
  *(unsigned char *)uint64_t v44 = v33;
  *(void *)(v44 + 8) = v35;
  *(void *)(v44 + 16) = v37;
  *(void *)(v44 + 24) = v39;
  *(void *)(v44 + 32) = v41;
  *(unsigned char *)(v44 + 40) = 0;
  sub_24F01A7DC(v26, &qword_2699A44E0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4178);
  uint64_t v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_24F0783D0;
  uint64_t v69 = 0;
  unint64_t v70 = 0xE000000000000000;
  char v68 = a1;
  sub_24F072280();
  unint64_t v46 = v70;
  *(void *)(v45 + 32) = v69;
  *(void *)(v45 + 40) = v46;
  unint64_t v47 = sub_24F05B8B4();
  uint64_t v48 = v60;
  sub_24F071B30();
  swift_bridgeObjectRelease();
  sub_24F01A7DC(v42, &qword_2699A44C8);
  uint64_t v69 = v43;
  unint64_t v70 = v47;
  swift_getOpaqueTypeConformance2();
  uint64_t v49 = v57;
  uint64_t v50 = v64;
  sub_24F071B10();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v48, v50);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v59 + 32))(v65, v49, v61);
}

uint64_t sub_24F05A1A0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = a1;
  return swift_retain();
}

uint64_t sub_24F05A1A8()
{
  return sub_24F071E20();
}

uint64_t sub_24F05A1FC(uint64_t a1)
{
  return swift_release();
}

uint64_t sub_24F05A310()
{
  return sub_24F071700();
}

uint64_t sub_24F05A37C@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v19 = sub_24F071F30();
  uint64_t v7 = v6;
  sub_24F05A450(a1, a2, v20);
  uint64_t v8 = v20[0];
  uint64_t v9 = v20[1];
  char v10 = v21;
  uint64_t v11 = v22;
  uint64_t v12 = v23;
  uint64_t v13 = v24;
  uint64_t v14 = v25;
  char v15 = v26;
  uint64_t v16 = v27;
  uint64_t v17 = v28;
  uint64_t result = swift_getKeyPath();
  *(void *)a3 = v19;
  *(void *)(a3 + 8) = v7;
  *(void *)(a3 + 16) = v8;
  *(void *)(a3 + 24) = v9;
  *(unsigned char *)(a3 + 32) = v10;
  *(void *)(a3 + 40) = v11;
  *(void *)(a3 + 48) = v12;
  *(void *)(a3 + 56) = v13;
  *(void *)(a3 + 64) = v14;
  *(unsigned char *)(a3 + 72) = v15;
  *(void *)(a3 + 80) = v16;
  *(void *)(a3 + 88) = v17;
  *(void *)(a3 + 96) = result;
  *(void *)(a3 + 104) = 1;
  *(unsigned char *)(a3 + 112) = 0;
  return result;
}

uint64_t sub_24F05A450@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  int v70 = a1;
  uint64_t v64 = a3;
  uint64_t v4 = sub_24F071500();
  uint64_t v58 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)a2;
  uint64_t v68 = *(void *)(a2 + 8);
  uint64_t v69 = v8;
  int v67 = *(unsigned __int8 *)(a2 + 16);
  sub_24F058FE0(a2);
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A34E0);
  uint64_t v65 = sub_24F007760((unint64_t *)&qword_2699A34E8, &qword_2699A34E0);
  sub_24F071600();
  sub_24F05BBD0(a2);
  swift_getKeyPath();
  sub_24F071FE0();
  swift_release();
  swift_release();
  uint64_t v9 = LibraryPage.title(locale:)((uint64_t)v7);
  uint64_t v11 = v10;
  uint64_t v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v57 = v5 + 8;
  uint64_t v59 = v12;
  v12(v7, v4);
  uint64_t v72 = v9;
  uint64_t v73 = v11;
  unint64_t v56 = sub_24F0221E8();
  uint64_t v13 = sub_24F071B00();
  uint64_t v15 = v14;
  LOBYTE(v4) = v16 & 1;
  sub_24F071A70();
  uint64_t v17 = sub_24F071AE0();
  uint64_t v19 = v18;
  LOBYTE(v8) = v20 & 1;
  sub_24F022538(v13, v15, v4);
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(a2 + 72);
  uint64_t v55 = *(void *)(a2 + 64);
  uint64_t v74 = v21;
  uint64_t v72 = v21;
  swift_retain();
  uint64_t v22 = sub_24F071AF0();
  uint64_t v62 = v23;
  uint64_t v63 = v22;
  uint64_t v61 = v24;
  int v60 = v25 & 1;
  sub_24F022538(v17, v19, v8);
  swift_bridgeObjectRelease();
  sub_24F05BCC4((uint64_t)&v74);
  sub_24F058FE0(a2);
  sub_24F071600();
  sub_24F05BBD0(a2);
  swift_getKeyPath();
  sub_24F071FE0();
  swift_release();
  swift_release();
  if (sub_24F02D65C(v72, v70)) {
    double v26 = 1.0;
  }
  else {
    double v26 = 0.0;
  }
  sub_24F058FE0(a2);
  sub_24F071600();
  sub_24F05BBD0(a2);
  swift_getKeyPath();
  sub_24F071FE0();
  swift_release();
  swift_release();
  uint64_t v27 = LibraryPage.title(locale:)((uint64_t)v7);
  uint64_t v29 = v28;
  v59(v7, v58);
  uint64_t v72 = v27;
  uint64_t v73 = v29;
  uint64_t v30 = sub_24F071B00();
  uint64_t v32 = v31;
  char v34 = v33 & 1;
  sub_24F071A60();
  uint64_t v35 = sub_24F071AE0();
  uint64_t v37 = v36;
  char v39 = v38 & 1;
  sub_24F022538(v30, v32, v34);
  swift_bridgeObjectRelease();
  uint64_t v72 = v55;
  uint64_t v71 = v55;
  swift_retain();
  uint64_t v40 = sub_24F071AF0();
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  char v46 = v45 & 1;
  sub_24F022538(v35, v37, v39);
  swift_bridgeObjectRelease();
  sub_24F05BCC4((uint64_t)&v72);
  sub_24F058FE0(a2);
  sub_24F071600();
  sub_24F05BBD0(a2);
  swift_getKeyPath();
  sub_24F071FE0();
  swift_release();
  swift_release();
  char v47 = sub_24F02D65C(v71, v70);
  char v48 = v60;
  LOBYTE(v71) = v60;
  if (v47) {
    double v49 = 0.0;
  }
  else {
    double v49 = 1.0;
  }
  uint64_t v51 = v63;
  uint64_t v50 = v64;
  uint64_t v52 = v62;
  *uint64_t v64 = v63;
  v50[1] = v52;
  *((unsigned char *)v50 + 16) = v48;
  v50[3] = v61;
  *((double *)v50 + 4) = v26;
  v50[5] = v40;
  v50[6] = v42;
  *((unsigned char *)v50 + 56) = v46;
  v50[8] = v44;
  *((double *)v50 + 9) = v49;
  sub_24F022280(v51, v52, v48);
  swift_bridgeObjectRetain();
  sub_24F022280(v40, v42, v46);
  swift_bridgeObjectRetain();
  sub_24F022538(v40, v42, v46);
  swift_bridgeObjectRelease();
  sub_24F022538(v51, v52, v71);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F05A9F0()
{
  v2.origin = *(CGPoint *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4448);
  uint64_t result = sub_24F071E10();
  if (v3)
  {
    type metadata accessor for CGRect(0);
    sub_24F071670();
    CGRectGetMinX(v2);
    return swift_release();
  }
  return result;
}

uint64_t sub_24F05AAC8()
{
  v2.origin = *(CGPoint *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4448);
  uint64_t result = sub_24F071E10();
  if (v3)
  {
    sub_24F071660();
    type metadata accessor for CGRect(0);
    sub_24F071670();
    CGRectGetMaxX(v2);
    return swift_release();
  }
  return result;
}

double sub_24F05ABAC@<D0>(long long *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24F071850();
  sub_24F05ACB0(a1, (uint64_t)v12);
  *(_OWORD *)&v13[135] = v12[8];
  *(_OWORD *)&v13[151] = v12[9];
  *(_OWORD *)&v13[167] = v12[10];
  *(_OWORD *)&v13[183] = v12[11];
  *(_OWORD *)&v13[71] = v12[4];
  *(_OWORD *)&v13[87] = v12[5];
  *(_OWORD *)&v13[103] = v12[6];
  *(_OWORD *)&v13[119] = v12[7];
  *(_OWORD *)&v13[7] = v12[0];
  *(_OWORD *)&v13[23] = v12[1];
  *(_OWORD *)&v13[39] = v12[2];
  *(_OWORD *)&v13[55] = v12[3];
  long long v5 = *(_OWORD *)&v13[128];
  *(_OWORD *)(a2 + 161) = *(_OWORD *)&v13[144];
  long long v6 = *(_OWORD *)&v13[176];
  *(_OWORD *)(a2 + 177) = *(_OWORD *)&v13[160];
  *(_OWORD *)(a2 + 193) = v6;
  long long v7 = *(_OWORD *)&v13[64];
  *(_OWORD *)(a2 + 97) = *(_OWORD *)&v13[80];
  long long v8 = *(_OWORD *)&v13[112];
  *(_OWORD *)(a2 + 113) = *(_OWORD *)&v13[96];
  *(_OWORD *)(a2 + 129) = v8;
  *(_OWORD *)(a2 + 145) = v5;
  long long v9 = *(_OWORD *)v13;
  *(_OWORD *)(a2 + 33) = *(_OWORD *)&v13[16];
  double result = *(double *)&v13[32];
  long long v11 = *(_OWORD *)&v13[48];
  *(_OWORD *)(a2 + 49) = *(_OWORD *)&v13[32];
  *(_OWORD *)(a2 + 65) = v11;
  *(_OWORD *)(a2 + 81) = v7;
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  *(void *)(a2 + 208) = *(void *)&v13[191];
  *(_OWORD *)(a2 + 17) = v9;
  return result;
}

double sub_24F05ACB0@<D0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4450);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_24F0790E0;
  sub_24F071D50();
  sub_24F05A9F0();
  uint64_t v5 = sub_24F071D80();
  swift_release();
  *(void *)(v4 + 32) = v5;
  *(void *)(v4 + 40) = sub_24F071D50();
  sub_24F0720E0();
  MEMORY[0x2533529D0](v4);
  sub_24F071F90();
  sub_24F071FA0();
  sub_24F0716D0();
  sub_24F071F30();
  sub_24F071650();
  uint64_t v6 = sub_24F071D50();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_24F0790E0;
  *(void *)(v7 + 32) = sub_24F071D50();
  sub_24F071D50();
  long long v12 = a1[2];
  long long v10 = *a1;
  long long v11 = a1[1];
  sub_24F05AAC8();
  uint64_t v8 = sub_24F071D80();
  swift_release();
  *(void *)(v7 + 40) = v8;
  sub_24F0720E0();
  MEMORY[0x2533529D0](v7);
  sub_24F071F90();
  sub_24F071FA0();
  sub_24F0716D0();
  sub_24F071F30();
  sub_24F071650();
  *(void *)a2 = v13;
  *(_OWORD *)(a2 + 8) = v14;
  *(void *)(a2 + 24) = v15;
  *(void *)(a2 + 32) = v16;
  *(void *)(a2 + 40) = v17;
  *(unsigned char *)(a2 + 48) = v18;
  *(void *)(a2 + 56) = v19;
  *(unsigned char *)(a2 + 64) = v20;
  *(void *)(a2 + 72) = v21;
  *(void *)(a2 + 80) = v22;
  *(void *)(a2 + 88) = v6;
  *(_WORD *)(a2 + 96) = 256;
  *(void *)(a2 + 104) = v23;
  *(_OWORD *)(a2 + 112) = v24;
  *(void *)(a2 + 128) = v25;
  *(void *)(a2 + 136) = v26;
  *(void *)(a2 + 144) = v7;
  *(unsigned char *)(a2 + 152) = BYTE8(v10);
  *(void *)(a2 + 160) = v11;
  *(unsigned char *)(a2 + 168) = BYTE8(v11);
  double result = *(double *)&v12;
  *(_OWORD *)(a2 + 176) = v12;
  return result;
}

double sub_24F05AF9C@<D0>(double *a1@<X8>)
{
  long long v3 = v1[3];
  v11[2] = v1[2];
  v11[3] = v3;
  void v11[4] = v1[4];
  long long v4 = v1[1];
  v11[0] = *v1;
  v11[1] = v4;
  uint64_t v5 = (_OWORD *)swift_allocObject();
  long long v6 = v1[3];
  v5[3] = v1[2];
  v5[4] = v6;
  v5[5] = v1[4];
  long long v7 = v1[1];
  v5[1] = *v1;
  void v5[2] = v7;
  sub_24F058FE0((uint64_t)v11);
  sub_24F071E00();
  double result = v9;
  *a1 = v9;
  *((void *)a1 + 1) = v10;
  *((void *)a1 + 2) = sub_24F05BD10;
  *((void *)a1 + 3) = v5;
  return result;
}

uint64_t destroy for LibraryPickerView()
{
  sub_24F007284();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for LibraryPickerView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_24F0072D8();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  uint64_t v7 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v7;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
  uint64_t v8 = a2[8];
  *(void *)(a1 + 56) = a2[7];
  *(void *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = a2[9];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for LibraryPickerView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_24F0072D8();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  sub_24F007284();
  *(void *)(a1 + 24) = a2[3];
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = a2[4];
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = a2[5];
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = a2[7];
  *(void *)(a1 + 64) = a2[8];
  swift_retain();
  swift_release();
  *(void *)(a1 + 72) = a2[9];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for LibraryPickerView(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  sub_24F007284();
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryPickerView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 64);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LibraryPickerView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)double result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 64) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryPickerView()
{
  return &type metadata for LibraryPickerView;
}

uint64_t sub_24F05B35C()
{
  return sub_24F007760(&qword_2699A4438, &qword_2699A4440);
}

uint64_t destroy for LibraryPickerView.Layout()
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for LibraryPickerView.Layout(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for LibraryPickerView.Layout(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for LibraryPickerView.Layout(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for LibraryPickerView.Layout()
{
  return &type metadata for LibraryPickerView.Layout;
}

ValueMetadata *type metadata accessor for ContentTargetBoundsPreferenceKey()
{
  return &type metadata for ContentTargetBoundsPreferenceKey;
}

void sub_24F05B504(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_24F05B50C(void *a1, void *(*a2)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v4 = swift_release();
  double result = a2(&v6, v4);
  *a1 = v6;
  return result;
}

uint64_t sub_24F05B560()
{
  return objectdestroy_2Tm_1(96);
}

uint64_t sub_24F05B568()
{
  return objectdestroy_2Tm_1(104);
}

uint64_t sub_24F05B570()
{
  return sub_24F059068();
}

uint64_t sub_24F05B57C()
{
  return objectdestroy_2Tm_1(96);
}

double sub_24F05B584@<D0>(uint64_t a1@<X8>)
{
  return sub_24F05ABAC((long long *)(v1 + 16), a1);
}

uint64_t sub_24F05B58C()
{
  return objectdestroy_2Tm_1(96);
}

uint64_t objectdestroy_2Tm_1(uint64_t a1)
{
  sub_24F007284();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v1, a1, 7);
}

uint64_t sub_24F05B5FC()
{
  return sub_24F05A1A8();
}

uint64_t sub_24F05B604@<X0>(uint64_t a1@<X8>)
{
  return sub_24F059134(*(_OWORD **)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_24F05B610()
{
  unint64_t result = qword_2699A4468;
  if (!qword_2699A4468)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A4460);
    sub_24F05B68C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4468);
  }
  return result;
}

unint64_t sub_24F05B68C()
{
  unint64_t result = qword_2699A4470;
  if (!qword_2699A4470)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A4478);
    sub_24F007760(&qword_2699A4480, &qword_2699A4488);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4470);
  }
  return result;
}

uint64_t sub_24F05B72C()
{
  uint64_t v1 = sub_24F071710();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 96) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  sub_24F007284();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_24F05B81C@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_24F071710() - 8);
  return sub_24F0599AC(*a1, v2 + ((*(unsigned __int8 *)(v5 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a2);
}

unint64_t sub_24F05B8B4()
{
  unint64_t result = qword_2699A44D0;
  if (!qword_2699A44D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A44C8);
    sub_24F007760(&qword_2699A44D8, &qword_2699A44E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A44D0);
  }
  return result;
}

unint64_t sub_24F05B954()
{
  unint64_t result = qword_2699A44E8;
  if (!qword_2699A44E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A44E8);
  }
  return result;
}

uint64_t sub_24F05B9A8()
{
  uint64_t v1 = sub_24F071710();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 97) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  sub_24F007284();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_24F05BA98()
{
  sub_24F071710();
  return sub_24F05A1FC(v0 + 16);
}

uint64_t sub_24F05BB00@<X0>(uint64_t a1@<X8>)
{
  return sub_24F05A37C(*(unsigned __int8 *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_24F05BB0C()
{
  unint64_t result = qword_2699A4510;
  if (!qword_2699A4510)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A4508);
    sub_24F007760(&qword_2699A4518, &qword_2699A4520);
    sub_24F007760(&qword_2699A3690, &qword_2699A3698);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4510);
  }
  return result;
}

uint64_t sub_24F05BBD0(uint64_t a1)
{
  return a1;
}

uint64_t sub_24F05BC3C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24F0717F0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_24F05BC6C()
{
  return sub_24F071800();
}

uint64_t sub_24F05BC94()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

unsigned char *sub_24F05BCA4(unsigned char *result)
{
  *result &= ~*(unsigned char *)(v1 + 16) & 1;
  return result;
}

uint64_t sub_24F05BCC4(uint64_t a1)
{
  return a1;
}

uint64_t sub_24F05BCF0()
{
  return sub_24F05A310();
}

uint64_t LibraryEnvironment.init(navigateToLibraryGalleryPage:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

ValueMetadata *type metadata accessor for LibraryEnvironment()
{
  return &type metadata for LibraryEnvironment;
}

uint64_t static OfflineSectionDescriptor.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a2[2];
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_24F072400() & 1) == 0) {
    return 0;
  }
  return sub_24F05C3E0(v2, v3);
}

uint64_t OfflineSectionDescriptor.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OfflineSectionDescriptor.items.getter()
{
  return swift_bridgeObjectRetain();
}

FitnessLibrary::OfflineSectionDescriptor __swiftcall OfflineSectionDescriptor.init(identifier:items:)(Swift::String identifier, Swift::OpaquePointer items)
{
  *(Swift::String *)uint64_t v2 = identifier;
  *(Swift::OpaquePointer *)(v2 + 16) = items;
  result.identifier = identifier;
  result.items = items;
  return result;
}

uint64_t sub_24F05BDE4()
{
  if (*v0) {
    return 0x736D657469;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_24F05BE20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24F05D0CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24F05BE48(uint64_t a1)
{
  unint64_t v2 = sub_24F05C468();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F05BE84(uint64_t a1)
{
  unint64_t v2 = sub_24F05C468();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t OfflineSectionDescriptor.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4528);
  uint64_t v10 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24F05C468();
  sub_24F072480();
  char v13 = 0;
  sub_24F0723C0();
  if (!v2)
  {
    uint64_t v11 = v9;
    char v12 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4538);
    sub_24F05C510(&qword_2699A4540, (void (*)(void))sub_24F05C4BC);
    sub_24F0723F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v6, v4);
}

uint64_t OfflineSectionDescriptor.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4550);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24F05C468();
  sub_24F072470();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v16 = 0;
  uint64_t v9 = sub_24F072340();
  uint64_t v11 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4538);
  char v15 = 1;
  sub_24F05C510(&qword_2699A4558, (void (*)(void))sub_24F05C580);
  swift_bridgeObjectRetain();
  sub_24F072370();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v12 = v14[1];
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v12;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F05C2E0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return OfflineSectionDescriptor.init(from:)(a1, a2);
}

uint64_t sub_24F05C2F8(void *a1)
{
  return OfflineSectionDescriptor.encode(to:)(a1);
}

uint64_t OfflineSectionDescriptor.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  sub_24F072080();
  swift_bridgeObjectRelease();
  uint64_t result = sub_24F072440();
  uint64_t v3 = *(void *)(v1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_24F072080();
      swift_bridgeObjectRelease();
      v4 += 16;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24F05C3E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (void *)(a1 + 40);
    for (i = (void *)(a2 + 40); ; i += 2)
    {
      BOOL v5 = *(v3 - 1) == *(i - 1) && *v3 == *i;
      if (!v5 && (sub_24F072400() & 1) == 0) {
        break;
      }
      v3 += 2;
      if (!--v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

unint64_t sub_24F05C468()
{
  unint64_t result = qword_2699A4530;
  if (!qword_2699A4530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4530);
  }
  return result;
}

unint64_t sub_24F05C4BC()
{
  unint64_t result = qword_2699A4548;
  if (!qword_2699A4548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4548);
  }
  return result;
}

uint64_t sub_24F05C510(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A4538);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24F05C580()
{
  unint64_t result = qword_2699A4560;
  if (!qword_2699A4560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4560);
  }
  return result;
}

uint64_t sub_24F05C5D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unsigned __int8 *)(a1 + 64);
    uint64_t v4 = (unsigned __int8 *)(a2 + 64);
    while (1)
    {
      uint64_t v6 = *((void *)v3 - 2);
      uint64_t v7 = *((void *)v3 - 1);
      uint64_t v8 = *v3;
      uint64_t v10 = *((void *)v4 - 2);
      uint64_t v9 = *((void *)v4 - 1);
      uint64_t v11 = *v4;
      if (*((void *)v3 - 4) != *((void *)v4 - 4) || *((void *)v3 - 3) != *((void *)v4 - 3))
      {
        uint64_t v13 = *v4;
        char v14 = sub_24F072400();
        uint64_t v11 = v13;
        if ((v14 & 1) == 0) {
          return 0;
        }
      }
      if (v7)
      {
        if (!v9) {
          return 0;
        }
        if (v6 != v10 || v7 != v9)
        {
          uint64_t v16 = v11;
          char v17 = sub_24F072400();
          uint64_t v11 = v16;
          if ((v17 & 1) == 0) {
            return 0;
          }
        }
      }
      else if (v9)
      {
        return 0;
      }
      v3 += 40;
      v4 += 40;
      unint64_t v18 = 0x800000024F07A850;
      unint64_t v19 = 0xD000000000000010;
      switch(v8)
      {
        case 1:
          unint64_t v18 = 0xE700000000000000;
          unint64_t v19 = 0x6D6172676F7270;
          break;
        case 2:
          unint64_t v18 = 0xE500000000000000;
          unint64_t v19 = 0x6B63617473;
          break;
        case 3:
          unint64_t v18 = 0xE700000000000000;
          unint64_t v19 = 0x74756F6B726F77;
          break;
        case 4:
          unint64_t v19 = 0x5074756F6B726F77;
          unint64_t v18 = 0xEB000000006E616CLL;
          break;
        case 5:
          unint64_t v19 = 0xD000000000000011;
          unint64_t v18 = 0x800000024F07A890;
          break;
        default:
          break;
      }
      unint64_t v20 = 0x800000024F07A850;
      unint64_t v21 = 0xD000000000000010;
      switch(v11)
      {
        case 1:
          unint64_t v20 = 0xE700000000000000;
          if (v19 == 0x6D6172676F7270) {
            goto LABEL_36;
          }
          goto LABEL_5;
        case 2:
          unint64_t v20 = 0xE500000000000000;
          if (v19 != 0x6B63617473) {
            goto LABEL_5;
          }
          goto LABEL_36;
        case 3:
          unint64_t v20 = 0xE700000000000000;
          if (v19 != 0x74756F6B726F77) {
            goto LABEL_5;
          }
          goto LABEL_36;
        case 4:
          unint64_t v21 = 0x5074756F6B726F77;
          unint64_t v20 = 0xEB000000006E616CLL;
          goto LABEL_35;
        case 5:
          unint64_t v20 = 0x800000024F07A890;
          if (v19 != 0xD000000000000011) {
            goto LABEL_5;
          }
          goto LABEL_36;
        default:
LABEL_35:
          if (v19 != v21) {
            goto LABEL_5;
          }
LABEL_36:
          if (v18 == v20)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            if (!--v2) {
              return 1;
            }
          }
          else
          {
LABEL_5:
            char v5 = sub_24F072400();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v5 & 1) == 0) {
              return 0;
            }
            if (!--v2) {
              return 1;
            }
          }
          break;
      }
    }
  }
  return 1;
}

uint64_t sub_24F05C930(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2) {
      return 1;
    }
    uint64_t v3 = 0;
    uint64_t v15 = a1;
    uint64_t v16 = a2;
    while (1)
    {
      uint64_t v4 = *(void *)(a1 + v3 + 48);
      uint64_t v5 = *(void *)(a1 + v3 + 56);
      uint64_t v7 = *(void *)(a1 + v3 + 64);
      uint64_t v6 = *(void *)(a1 + v3 + 72);
      uint64_t v18 = *(void *)(a1 + v3 + 80);
      uint64_t v9 = *(void *)(a2 + v3 + 48);
      uint64_t v8 = *(void *)(a2 + v3 + 56);
      uint64_t v10 = *(void *)(a2 + v3 + 64);
      uint64_t v11 = *(void *)(a2 + v3 + 72);
      uint64_t v12 = *(void *)(a2 + v3 + 80);
      uint64_t v19 = v8;
      if (*(void *)(a1 + v3 + 32) != *(void *)(a2 + v3 + 32)
        || *(void *)(a1 + v3 + 40) != *(void *)(a2 + v3 + 40))
      {
        char v13 = sub_24F072400();
        uint64_t v8 = v19;
        if ((v13 & 1) == 0) {
          break;
        }
      }
      if (v5)
      {
        if (!v8 || (v4 != v9 || v5 != v8) && (sub_24F072400() & 1) == 0) {
          return 0;
        }
      }
      else if (v8)
      {
        return 0;
      }
      if (v6)
      {
        if (!v11 || (v7 != v10 || v6 != v11) && (sub_24F072400() & 1) == 0) {
          return 0;
        }
      }
      else if (v11)
      {
        return 0;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v17 = sub_24F05C5D4(v18, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v17 & 1) == 0) {
        return 0;
      }
      v3 += 56;
      --v2;
      a1 = v15;
      a2 = v16;
      if (!v2) {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t OfflineSectionDescriptor.hashValue.getter()
{
  return sub_24F072460();
}

uint64_t sub_24F05CB84()
{
  return sub_24F072460();
}

uint64_t sub_24F05CBDC()
{
  return sub_24F072460();
}

unint64_t sub_24F05CC30()
{
  unint64_t result = qword_2699A4568;
  if (!qword_2699A4568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4568);
  }
  return result;
}

uint64_t sub_24F05CC84(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a2[2];
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_24F072400() & 1) == 0) {
    return 0;
  }
  return sub_24F05C3E0(v2, v3);
}

uint64_t destroy for OfflineSectionDescriptor()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s14FitnessLibrary24OfflineSectionDescriptorVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for OfflineSectionDescriptor(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for OfflineSectionDescriptor(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for OfflineSectionDescriptor(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OfflineSectionDescriptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OfflineSectionDescriptor()
{
  return &type metadata for OfflineSectionDescriptor;
}

unsigned char *storeEnumTagSinglePayload for OfflineSectionDescriptor.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F05CF8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OfflineSectionDescriptor.CodingKeys()
{
  return &type metadata for OfflineSectionDescriptor.CodingKeys;
}

unint64_t sub_24F05CFC8()
{
  unint64_t result = qword_2699A4570;
  if (!qword_2699A4570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4570);
  }
  return result;
}

unint64_t sub_24F05D020()
{
  unint64_t result = qword_2699A4578;
  if (!qword_2699A4578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4578);
  }
  return result;
}

unint64_t sub_24F05D078()
{
  unint64_t result = qword_2699A4580;
  if (!qword_2699A4580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4580);
  }
  return result;
}

uint64_t sub_24F05D0CC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736D657469 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24F072400();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t LibraryPageCountView.init(store:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  type metadata accessor for LibraryPageCountView();
  sub_24F05D338();
  sub_24F071620();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  *(void *)a3 = sub_24F006060;
  *(void *)(a3 + 8) = v6;
  *(unsigned char *)(a3 + 16) = 0;
  id v7 = objc_allocWithZone(MEMORY[0x263F08A30]);
  swift_retain();
  id v9 = objc_msgSend(v7, sel_init);
  sub_24F05D3C4();
  sub_24F071E00();
  *(void *)(a3 + 24) = 0x4039000000000000;
  *(void *)(a3 + 32) = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4590);
  sub_24F071E10();
  objc_msgSend(v9, sel_setMaximumFractionDigits_, 0);

  return swift_release();
}

uint64_t type metadata accessor for LibraryPageCountView()
{
  uint64_t result = qword_26B1EBE08;
  if (!qword_26B1EBE08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_24F05D338()
{
  unint64_t result = qword_26B1EBD70;
  if (!qword_26B1EBD70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1EBD70);
  }
  return result;
}

uint64_t sub_24F05D38C()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

unint64_t sub_24F05D3C4()
{
  unint64_t result = qword_2699A4588;
  if (!qword_2699A4588)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2699A4588);
  }
  return result;
}

uint64_t LibraryPageCountView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v28 = a1;
  uint64_t v3 = type metadata accessor for LibraryPageCountView();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4598);
  MEMORY[0x270FA5388](v7 - 8);
  id v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A45A0);
  MEMORY[0x270FA5388](v25);
  uint64_t v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A45A8);
  MEMORY[0x270FA5388](v26);
  uint64_t v27 = (uint64_t)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)id v9 = sub_24F071860();
  *((void *)v9 + 1) = 0;
  v9[16] = 0;
  uint64_t v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2699A45B0) + 44);
  if (qword_2699A2CF0 != -1) {
    swift_once();
  }
  v24[1] = &v9[v13];
  uint64_t v32 = qword_2699B32C8;
  sub_24F05DCC4(v2, (uint64_t)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v15 = (v14 + 16) & ~v14;
  uint64_t v29 = v14 | 7;
  uint64_t v30 = v15 + v5;
  uint64_t v16 = swift_allocObject();
  sub_24F05DD2C((uint64_t)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3150);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A45C0);
  sub_24F007760(&qword_2699A4118, &qword_2699A3150);
  sub_24F007760(&qword_2699A45C8, &qword_2699A45C0);
  sub_24F05B954();
  sub_24F071EE0();
  sub_24F05DCC4(v2, (uint64_t)v6);
  uint64_t v17 = swift_allocObject();
  sub_24F05DD2C((uint64_t)v6, v17 + v15);
  sub_24F016984((uint64_t)v9, (uint64_t)v11, &qword_2699A4598);
  uint64_t v18 = (uint64_t (**)())&v11[*(int *)(v25 + 36)];
  *uint64_t v18 = sub_24F05E360;
  v18[1] = (uint64_t (*)())v17;
  v18[2] = 0;
  v18[3] = 0;
  sub_24F01A7DC((uint64_t)v9, &qword_2699A4598);
  sub_24F05DCC4(v2, (uint64_t)v6);
  uint64_t v19 = swift_allocObject();
  sub_24F05DD2C((uint64_t)v6, v19 + v15);
  uint64_t v20 = v27;
  sub_24F016984((uint64_t)v11, v27, &qword_2699A45A0);
  unint64_t v21 = (void *)(v20 + *(int *)(v26 + 36));
  *unint64_t v21 = 0;
  v21[1] = 0;
  v21[2] = sub_24F05E41C;
  v21[3] = v19;
  sub_24F01A7DC((uint64_t)v11, &qword_2699A45A0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A45D0);
  sub_24F007760(&qword_2699A45D8, &qword_2699A45D0);
  sub_24F071600();
  swift_getKeyPath();
  sub_24F071FE0();
  swift_release();
  swift_release();
  uint64_t v31 = v32;
  sub_24F05DCC4(v2, (uint64_t)v6);
  uint64_t v22 = swift_allocObject();
  sub_24F05DD2C((uint64_t)v6, v22 + v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3AA8);
  sub_24F06047C(&qword_2699A45E0, &qword_2699A45A8, (void (*)(void))sub_24F05E5A8);
  sub_24F007760(&qword_2699A3AF0, &qword_2699A3AA8);
  sub_24F071D10();
  swift_release();
  swift_bridgeObjectRelease();
  return sub_24F01A7DC(v20, &qword_2699A45A8);
}

uint64_t sub_24F05D98C@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v38 = a2;
  char v39 = a3;
  uint64_t v4 = sub_24F071EC0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A45F8);
  uint64_t v9 = v8 - 8;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v37 = (uint64_t)&v36 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4600);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v36 - v19;
  sub_24F05DE10(*a1, (uint64_t)&v36 - v19);
  sub_24F071EB0();
  LOBYTE(a1) = sub_24F071A10();
  sub_24F071580();
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v12, v7, v4);
  uint64_t v29 = &v12[*(int *)(v9 + 44)];
  *uint64_t v29 = (char)a1;
  *((void *)v29 + 1) = v22;
  *((void *)v29 + 2) = v24;
  *((void *)v29 + 3) = v26;
  *((void *)v29 + 4) = v28;
  v29[40] = 0;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v30 = v37;
  sub_24F016F34((uint64_t)v12, v37, &qword_2699A45F8);
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  v31(v18, v20, v14);
  sub_24F016984(v30, (uint64_t)v12, &qword_2699A45F8);
  uint64_t v32 = v39;
  v31(v39, v18, v14);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4608);
  sub_24F016984((uint64_t)v12, (uint64_t)&v32[*(int *)(v33 + 48)], &qword_2699A45F8);
  sub_24F01A7DC(v30, &qword_2699A45F8);
  char v34 = *(void (**)(char *, uint64_t))(v15 + 8);
  v34(v20, v14);
  sub_24F01A7DC((uint64_t)v12, &qword_2699A45F8);
  return ((uint64_t (*)(char *, uint64_t))v34)(v18, v14);
}

uint64_t sub_24F05DCC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LibraryPageCountView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24F05DD2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LibraryPageCountView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24F05DD90@<X0>(unsigned __int8 *a1@<X0>, char *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for LibraryPageCountView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_24F05D98C(a1, v6, a2);
}

uint64_t sub_24F05DE10@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  int v34 = a1;
  uint64_t v42 = a2;
  uint64_t v36 = sub_24F071D30();
  uint64_t v3 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v5 = &v33[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for LibraryPageCountView();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = &v33[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4610);
  uint64_t v37 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = &v33[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4618);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v38 = v13;
  uint64_t v39 = v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = &v33[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4620);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v40 = v17;
  uint64_t v41 = v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v35 = &v33[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_24F05DCC4(v2, (uint64_t)v9);
  unint64_t v20 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v21 = v20 + v8;
  uint64_t v22 = swift_allocObject();
  sub_24F05DD2C((uint64_t)v9, v22 + v20);
  char v23 = v34;
  *(unsigned char *)(v22 + v21) = v34;
  uint64_t v43 = v2;
  char v44 = v23;
  LOBYTE(v21) = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4628);
  sub_24F0601E0();
  sub_24F071E40();
  (*(void (**)(unsigned char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F1B388], v36);
  uint64_t v45 = MEMORY[0x253352850](v5, 0.22745098, 0.223529412, 0.231372549, 1.0);
  uint64_t v24 = sub_24F007760(&qword_2699A4658, &qword_2699A4610);
  unint64_t v25 = sub_24F0602A4();
  sub_24F071BB0();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v37 + 8))(v12, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4178);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_24F0783D0;
  uint64_t v45 = 0;
  char v46 = (ValueMetadata *)0xE000000000000000;
  char v49 = v21;
  sub_24F072280();
  uint64_t v27 = v46;
  *(void *)(v26 + 32) = v45;
  *(void *)(v26 + 40) = v27;
  uint64_t v45 = v10;
  char v46 = &type metadata for PageCountButtonStyle;
  uint64_t v47 = v24;
  unint64_t v48 = v25;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v29 = v35;
  uint64_t v30 = v38;
  sub_24F071B30();
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v39 + 8))(v16, v30);
  uint64_t v45 = v30;
  char v46 = (ValueMetadata *)OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v31 = v40;
  sub_24F071B10();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v41 + 8))(v29, v31);
}

uint64_t sub_24F05E360()
{
  return sub_24F05E544();
}

uint64_t sub_24F05E36C()
{
  return swift_release();
}

uint64_t sub_24F05E41C()
{
  return sub_24F05E544();
}

uint64_t objectdestroy_2Tm_2()
{
  uint64_t v1 = (int *)(type metadata accessor for LibraryPageCountView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  sub_24F007284();

  swift_release();
  uint64_t v7 = v6 + v1[8];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A45B8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_24F05E538()
{
  return sub_24F05E544();
}

uint64_t sub_24F05E544()
{
  return sub_24F05E36C();
}

unint64_t sub_24F05E5A8()
{
  unint64_t result = qword_2699A45E8;
  if (!qword_2699A45E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A45A0);
    sub_24F007760(&qword_2699A45F0, &qword_2699A4598);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A45E8);
  }
  return result;
}

uint64_t sub_24F05E648()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24F05E664(uint64_t a1)
{
  _OWORD v15[2] = a1;
  uint64_t v2 = sub_24F071500();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v16 = *(void *)(v1 + 24);
  uint64_t v17 = v6;
  v15[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4590);
  sub_24F071E10();
  uint64_t v7 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A45D0);
  sub_24F007760(&qword_2699A45D8, &qword_2699A45D0);
  sub_24F071600();
  swift_getKeyPath();
  sub_24F071FE0();
  swift_release();
  swift_release();
  uint64_t v8 = (void *)sub_24F0714E0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  objc_msgSend(v7, sel_setLocale_, v8);

  uint64_t v9 = *(void *)(v1 + 32);
  uint64_t v16 = *(void *)(v1 + 24);
  uint64_t v17 = v9;
  sub_24F071E10();
  uint64_t v10 = v18;
  uint64_t v11 = (void *)sub_24F0721C0();
  id v12 = objc_msgSend(v10, sel_stringFromNumber_, v11);

  if (!v12) {
    return 0;
  }
  uint64_t v13 = sub_24F072050();

  return v13;
}

uint64_t sub_24F05E890()
{
  return swift_release();
}

uint64_t sub_24F05E93C@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4640);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A45D0);
  sub_24F007760(&qword_2699A45D8, &qword_2699A45D0);
  sub_24F071600();
  swift_getKeyPath();
  sub_24F071FE0();
  swift_release();
  swift_release();
  uint64_t v9 = v16;
  if (*(void *)(v16 + 16) && (unint64_t v10 = sub_24F0602F8(a2), (v11 & 1) != 0)) {
    uint64_t v12 = *(void *)(*(void *)(v9 + 56) + 8 * v10);
  }
  else {
    uint64_t v12 = 0;
  }
  swift_bridgeObjectRelease();
  *(void *)uint64_t v8 = sub_24F071850();
  *((void *)v8 + 1) = 0x4014000000000000;
  unsigned char v8[16] = 0;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4668);
  sub_24F05EAF8(a2, a1, v12, (uint64_t)&v8[*(int *)(v13 + 44)]);
  sub_24F016984((uint64_t)v8, a3, &qword_2699A4640);
  *(unsigned char *)(a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2699A4628) + 36)) = 0;
  return sub_24F01A7DC((uint64_t)v8, &qword_2699A4640);
}

uint64_t sub_24F05EAF8@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v71 = a3;
  uint64_t v72 = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4670);
  uint64_t v74 = *(void *)(v6 - 8);
  uint64_t v75 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v73 = (char *)v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v78 = (char *)v66 - v9;
  uint64_t v70 = sub_24F071D30();
  uint64_t v69 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  uint64_t v68 = (char *)v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4678);
  uint64_t v11 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  uint64_t v13 = (char *)v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4680);
  uint64_t v15 = v14 - 8;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4688);
  uint64_t v19 = v18 - 8;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v77 = (uint64_t)v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)v66 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v76 = (uint64_t)v66 - v25;
  char v81 = a1;
  v66[1] = a2;
  uint64_t v82 = a2;
  char v79 = a1;
  uint64_t v80 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3688);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4690);
  sub_24F022330();
  sub_24F06047C(&qword_2699A4698, &qword_2699A4690, (void (*)(void))sub_24F0604F8);
  sub_24F071DF0();
  uint64_t v26 = sub_24F071A40();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v28 = v67;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v17, v13, v67);
  uint64_t v29 = (uint64_t *)&v17[*(int *)(v15 + 44)];
  *uint64_t v29 = KeyPath;
  v29[1] = v26;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v28);
  uint64_t v30 = v68;
  (*(void (**)(char *, void, uint64_t))(v69 + 104))(v68, *MEMORY[0x263F1B388], v70);
  uint64_t v31 = MEMORY[0x253352850](v30, 0.650980392, 1.0, 0.0, 1.0);
  sub_24F016984((uint64_t)v17, (uint64_t)v24, &qword_2699A4680);
  *(void *)&v24[*(int *)(v19 + 44)] = v31;
  sub_24F01A7DC((uint64_t)v17, &qword_2699A4680);
  uint64_t v32 = v76;
  sub_24F016F34((uint64_t)v24, v76, &qword_2699A4688);
  uint64_t v33 = sub_24F05E664(v71);
  if (v34)
  {
    uint64_t v83 = v33;
    uint64_t v84 = v34;
    uint64_t v83 = sub_24F0720B0();
    uint64_t v84 = v35;
    sub_24F0221E8();
    uint64_t v36 = sub_24F071B00();
    uint64_t v38 = v37;
    char v40 = v39 & 1;
    uint64_t v83 = sub_24F071D40();
    uint64_t v71 = sub_24F071AF0();
    uint64_t v70 = v41;
    uint64_t v69 = v42;
    uint64_t v44 = v43 & 1;
    sub_24F022538(v36, v38, v40);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v71 = 0;
    uint64_t v70 = 0;
    uint64_t v44 = 0;
    uint64_t v69 = 0;
  }
  uint64_t v45 = sub_24F071DC0();
  uint64_t v46 = sub_24F071D40();
  int v47 = sub_24F0718F0();
  uint64_t v48 = sub_24F071AB0();
  uint64_t v49 = swift_getKeyPath();
  uint64_t v83 = v45;
  uint64_t v84 = v46;
  int v85 = v47;
  uint64_t v86 = v49;
  uint64_t v87 = v48;
  sub_24F071A50();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A46C0);
  sub_24F0609A4();
  uint64_t v50 = v78;
  sub_24F071B70();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v51 = v32;
  uint64_t v52 = v77;
  sub_24F016984(v51, v77, &qword_2699A4688);
  uint64_t v54 = v73;
  uint64_t v53 = v74;
  uint64_t v55 = *(void (**)(char *, char *, uint64_t))(v74 + 16);
  uint64_t v56 = v75;
  v55(v73, v50, v75);
  uint64_t v57 = v72;
  sub_24F016984(v52, v72, &qword_2699A4688);
  uint64_t v58 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2699A46F0);
  uint64_t v59 = v57 + v58[12];
  *(void *)uint64_t v59 = 0;
  *(unsigned char *)(v59 + 8) = 1;
  int v60 = (void *)(v57 + v58[16]);
  uint64_t v61 = v71;
  uint64_t v62 = v70;
  *int v60 = v71;
  v60[1] = v62;
  uint64_t v63 = v69;
  v60[2] = v44;
  v60[3] = v63;
  v55((char *)(v57 + v58[20]), v54, v56);
  sub_24F060AE4(v61, v62, v44, v63);
  uint64_t v64 = *(void (**)(char *, uint64_t))(v53 + 8);
  v64(v78, v56);
  sub_24F01A7DC(v76, &qword_2699A4688);
  v64(v54, v56);
  sub_24F060B28(v61, v62, v44, v63);
  return sub_24F01A7DC(v77, &qword_2699A4688);
}

uint64_t sub_24F05F278@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_24F071500();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A45D0);
  sub_24F007760(&qword_2699A45D8, &qword_2699A45D0);
  sub_24F071600();
  swift_getKeyPath();
  sub_24F071FE0();
  swift_release();
  swift_release();
  uint64_t v6 = LibraryPage.title(locale:)((uint64_t)v5);
  uint64_t v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v16[0] = v6;
  v16[1] = v8;
  sub_24F0221E8();
  uint64_t v9 = sub_24F071B00();
  uint64_t v11 = v10;
  LOBYTE(v8) = v12;
  uint64_t v14 = v13;
  uint64_t result = swift_getKeyPath();
  *(void *)a1 = v9;
  *(void *)(a1 + 8) = v11;
  *(unsigned char *)(a1 + 16) = v8 & 1;
  *(void *)(a1 + 24) = v14;
  *(void *)(a1 + 32) = result;
  *(void *)(a1 + 40) = 2;
  *(unsigned char *)(a1 + 48) = 0;
  return result;
}

uint64_t sub_24F05F444@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v21 = a1;
  uint64_t v22 = a2;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A46B8);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (uint64_t *)((char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_24F071DE0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A46A8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (uint64_t *)((char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4690);
  MEMORY[0x270FA5388](v20);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24F071DD0();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F1B540], v5);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))((char *)v4 + *(int *)(v2 + 28), v8, v5);
  *uint64_t v4 = KeyPath;
  sub_24F016984((uint64_t)v4, (uint64_t)v11 + *(int *)(v9 + 36), &qword_2699A46B8);
  uint64_t *v11 = v14;
  swift_retain();
  sub_24F01A7DC((uint64_t)v4, &qword_2699A46B8);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
  type metadata accessor for LibraryPageCountView();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A45B8);
  sub_24F071630();
  sub_24F071F30();
  sub_24F071650();
  sub_24F016984((uint64_t)v11, (uint64_t)v13, &qword_2699A46A8);
  uint64_t v16 = &v13[*(int *)(v20 + 36)];
  long long v17 = v24;
  *(_OWORD *)uint64_t v16 = v23;
  *((_OWORD *)v16 + 1) = v17;
  *((_OWORD *)v16 + 2) = v25;
  sub_24F01A7DC((uint64_t)v11, &qword_2699A46A8);
  return sub_24F016F34((uint64_t)v13, v22, &qword_2699A4690);
}

uint64_t initializeBufferWithCopyOfBuffer for LibraryPageCountView(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *(void *)a1 = *a2;
    a1 = v17 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    uint64_t v8 = a2[1];
    char v9 = *((unsigned char *)a2 + 16);
    sub_24F0072D8();
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(unsigned char *)(a1 + 16) = v9;
    uint64_t v10 = (void *)a2[3];
    uint64_t v11 = a2[4];
    *(void *)(a1 + 24) = v10;
    *(void *)(a1 + 32) = v11;
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = a1 + v12;
    uint64_t v14 = (uint64_t)a2 + v12;
    id v15 = v10;
    swift_retain();
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A45B8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v13, v14, v16);
  }
  return a1;
}

uint64_t destroy for LibraryPageCountView(uint64_t a1, uint64_t a2)
{
  sub_24F007284();

  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A45B8);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for LibraryPageCountView(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  char v8 = *((unsigned char *)a2 + 16);
  sub_24F0072D8();
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  char v9 = (void *)a2[3];
  uint64_t v10 = a2[4];
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v10;
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = (uint64_t)a2 + v11;
  id v14 = v9;
  swift_retain();
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A45B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v12, v13, v15);
  return a1;
}

uint64_t assignWithCopy for LibraryPageCountView(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  char v8 = *((unsigned char *)a2 + 16);
  sub_24F0072D8();
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  sub_24F007284();
  char v9 = (void *)a2[3];
  uint64_t v10 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v9;
  id v11 = v9;

  *(void *)(a1 + 32) = a2[4];
  swift_retain();
  swift_release();
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = (uint64_t)a2 + v12;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A45B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  return a1;
}

uint64_t initializeWithTake for LibraryPageCountView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A45B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for LibraryPageCountView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v6;
  sub_24F007284();
  uint64_t v7 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A45B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryPageCountView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24F05FD00);
}

uint64_t sub_24F05FD00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A45B8);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for LibraryPageCountView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24F05FDC8);
}

uint64_t sub_24F05FDC8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A45B8);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_24F05FE74()
{
  sub_24F05FF14();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_24F05FF14()
{
  if (!qword_26B1EC220)
  {
    sub_24F05D338();
    unint64_t v0 = sub_24F071640();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B1EC220);
    }
  }
}

uint64_t sub_24F05FF70()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24F060040()
{
  uint64_t v1 = (int *)(type metadata accessor for LibraryPageCountView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  uint64_t v5 = *(void *)(*(void *)v1 + 64) + v3 + 1;
  uint64_t v6 = v0 + v3;
  sub_24F007284();

  swift_release();
  uint64_t v7 = v6 + v1[8];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A45B8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  return MEMORY[0x270FA0238](v0, v5, v4);
}

uint64_t sub_24F060150()
{
  type metadata accessor for LibraryPageCountView();
  return sub_24F05E890();
}

uint64_t sub_24F0601D4@<X0>(uint64_t a1@<X8>)
{
  return sub_24F05E93C(*(void *)(v1 + 16), *(unsigned char *)(v1 + 24), a1);
}

unint64_t sub_24F0601E0()
{
  unint64_t result = qword_2699A4630;
  if (!qword_2699A4630)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A4628);
    sub_24F007760(&qword_2699A4638, &qword_2699A4640);
    sub_24F007760(&qword_2699A4648, &qword_2699A4650);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4630);
  }
  return result;
}

unint64_t sub_24F0602A4()
{
  unint64_t result = qword_2699A4660;
  if (!qword_2699A4660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4660);
  }
  return result;
}

unint64_t sub_24F0602F8(unsigned __int8 a1)
{
  sub_24F072430();
  sub_24F072080();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_24F072460();
  return sub_24F060598(a1, v2);
}

uint64_t sub_24F060464@<X0>(uint64_t a1@<X8>)
{
  return sub_24F05F278(a1);
}

uint64_t sub_24F060470@<X0>(uint64_t a1@<X8>)
{
  return sub_24F05F444(*(void *)(v1 + 24), a1);
}

uint64_t sub_24F06047C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24F0604F8()
{
  unint64_t result = qword_2699A46A0;
  if (!qword_2699A46A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A46A8);
    sub_24F007760(&qword_2699A46B0, &qword_2699A46B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A46A0);
  }
  return result;
}

unint64_t sub_24F060598(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE800000000000000;
      uint64_t v8 = 0x7374756F6B726F77;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          uint64_t v8 = 0x697461746964656DLL;
          unint64_t v7 = 0xEB00000000736E6FLL;
          break;
        case 2:
          unint64_t v7 = 0xE600000000000000;
          uint64_t v8 = 0x736B63617473;
          break;
        case 3:
          uint64_t v8 = 0x5074756F6B726F77;
          unint64_t v7 = 0xEC000000736E616CLL;
          break;
        case 4:
          uint64_t v8 = 0x736D6172676F7270;
          break;
        case 5:
          uint64_t v8 = 0x64616F6C6E776F64;
          unint64_t v7 = 0xEA00000000006465;
          break;
        case 6:
          uint64_t v8 = 0x796C746E65636572;
          unint64_t v7 = 0xED00006465646441;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xE800000000000000;
      uint64_t v10 = 0x7374756F6B726F77;
      switch(v6)
      {
        case 1:
          unint64_t v9 = 0xEB00000000736E6FLL;
          if (v8 == 0x697461746964656DLL) {
            goto LABEL_21;
          }
          goto LABEL_22;
        case 2:
          unint64_t v9 = 0xE600000000000000;
          if (v8 != 0x736B63617473) {
            goto LABEL_22;
          }
          goto LABEL_21;
        case 3:
          unint64_t v9 = 0xEC000000736E616CLL;
          if (v8 != 0x5074756F6B726F77) {
            goto LABEL_22;
          }
          goto LABEL_21;
        case 4:
          if (v8 != 0x736D6172676F7270) {
            goto LABEL_22;
          }
          goto LABEL_21;
        case 5:
          uint64_t v10 = 0x64616F6C6E776F64;
          unint64_t v9 = 0xEA00000000006465;
          goto LABEL_20;
        case 6:
          unint64_t v9 = 0xED00006465646441;
          if (v8 != 0x796C746E65636572) {
            goto LABEL_22;
          }
          goto LABEL_21;
        default:
LABEL_20:
          if (v8 != v10) {
            goto LABEL_22;
          }
LABEL_21:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_22:
          char v11 = sub_24F072400();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

uint64_t sub_24F060890@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_24F071820();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_24F0608C4()
{
  return sub_24F071830();
}

uint64_t sub_24F0608F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24F0717D0();
  *a1 = result;
  return result;
}

uint64_t sub_24F060920@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24F0717D0();
  *a1 = result;
  return result;
}

uint64_t sub_24F06094C()
{
  return sub_24F0717E0();
}

uint64_t sub_24F060978()
{
  return sub_24F0717E0();
}

unint64_t sub_24F0609A4()
{
  unint64_t result = qword_2699A46C8;
  if (!qword_2699A46C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A46C0);
    sub_24F060A44();
    sub_24F007760(&qword_2699A36B0, &qword_2699A36B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A46C8);
  }
  return result;
}

unint64_t sub_24F060A44()
{
  unint64_t result = qword_2699A46D0;
  if (!qword_2699A46D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A46D8);
    sub_24F007760(&qword_2699A46E0, &qword_2699A46E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A46D0);
  }
  return result;
}

uint64_t sub_24F060AE4(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_24F022280(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_24F060B28(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_24F022538(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24F060B6C()
{
  return sub_24F071760();
}

uint64_t sub_24F060B90(uint64_t a1)
{
  uint64_t v2 = sub_24F071DE0();
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_24F071770();
}

uint64_t sub_24F060C5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_24F071820();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_24F060C90()
{
  return sub_24F071830();
}

uint64_t sub_24F060CC4()
{
  uint64_t result = 1701602409;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x676E696863746566;
      break;
    case 2:
      uint64_t result = 0x64656863746566;
      break;
    case 3:
      uint64_t result = 0x6968736572666572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24F060D50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24F063ED0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24F060D78(uint64_t a1)
{
  unint64_t v2 = sub_24F062C40();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F060DB4(uint64_t a1)
{
  unint64_t v2 = sub_24F062C40();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F060DF0()
{
  uint64_t v1 = 0x74756F79616CLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x656C61636F6CLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7470697263736564;
  }
}

uint64_t sub_24F060E4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24F064088(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24F060E74(uint64_t a1)
{
  unint64_t v2 = sub_24F062D3C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F060EB0(uint64_t a1)
{
  unint64_t v2 = sub_24F062D3C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F060EEC(uint64_t a1)
{
  unint64_t v2 = sub_24F062D90();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F060F28(uint64_t a1)
{
  unint64_t v2 = sub_24F062D90();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F060F64(uint64_t a1)
{
  unint64_t v2 = sub_24F062DE4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F060FA0(uint64_t a1)
{
  unint64_t v2 = sub_24F062DE4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F060FDC(uint64_t a1)
{
  unint64_t v2 = sub_24F062C94();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F061018(uint64_t a1)
{
  unint64_t v2 = sub_24F062C94();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t LibraryCanvasContentLoadState.encode(to:)(void *a1)
{
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A46F8);
  uint64_t v50 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  uint64_t v56 = (char *)&v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4700);
  uint64_t v49 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v54 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24F071500();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v60 = v4;
  uint64_t v61 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v59 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v58 = (char *)&v48 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4708);
  uint64_t v52 = *(void *)(v9 - 8);
  uint64_t v53 = v9;
  MEMORY[0x270FA5388](v9);
  char v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4710);
  uint64_t v51 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t State = type metadata accessor for LibraryCanvasContentLoadState();
  MEMORY[0x270FA5388](State);
  uint64_t v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4718);
  uint64_t v62 = *(void *)(v18 - 8);
  uint64_t v63 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24F062C40();
  uint64_t v66 = v20;
  sub_24F072480();
  sub_24F04C8CC(v65, (uint64_t)v17);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v31 = *(void *)v17;
      LODWORD(v58) = v17[8];
      LODWORD(v55) = v17[9];
      uint64_t v32 = &v17[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2699A3B38) + 64)];
      uint64_t v33 = v60;
      uint64_t v34 = v61;
      uint64_t v35 = v59;
      (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v59, v32, v60);
      LOBYTE(v68) = 3;
      sub_24F062C94();
      uint64_t v36 = v56;
      uint64_t v37 = v63;
      uint64_t v38 = v66;
      sub_24F072390();
      uint64_t v65 = v31;
      uint64_t v68 = v31;
      char v67 = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4730);
      sub_24F062E38(&qword_2699A4738, (void (*)(void))sub_24F062CE8);
      uint64_t v39 = v57;
      uint64_t v40 = v64;
      sub_24F0723F0();
      if (v40)
      {
        (*(void (**)(char *, uint64_t))(v50 + 8))(v36, v39);
        (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v33);
        (*(void (**)(char *, uint64_t))(v62 + 8))(v38, v37);
        goto LABEL_6;
      }
      uint64_t v45 = v33;
      swift_bridgeObjectRelease();
      LOBYTE(v68) = (_BYTE)v58;
      BYTE1(v68) = v55;
      char v67 = 1;
      sub_24F027DDC();
      sub_24F0723F0();
      LOBYTE(v68) = 2;
      sub_24F0033D8(&qword_2699A2D20);
      int v47 = v59;
      sub_24F0723F0();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v36, v39);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v47, v45);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v38, v37);
      break;
    case 2u:
      LOBYTE(v68) = 0;
      sub_24F062DE4();
      uint64_t v42 = v63;
      char v43 = v66;
      sub_24F072390();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v14, v12);
      goto LABEL_9;
    case 3u:
      LOBYTE(v68) = 1;
      sub_24F062D90();
      uint64_t v42 = v63;
      char v43 = v66;
      sub_24F072390();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v11, v53);
LABEL_9:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v43, v42);
      break;
    default:
      uint64_t v21 = *(void *)v17;
      LODWORD(v59) = v17[8];
      LODWORD(v57) = v17[9];
      uint64_t v22 = &v17[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2699A3B38) + 64)];
      uint64_t v23 = v60;
      uint64_t v24 = v61;
      long long v25 = v58;
      (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v58, v22, v60);
      LOBYTE(v68) = 2;
      sub_24F062D3C();
      uint64_t v26 = v54;
      uint64_t v27 = v63;
      uint64_t v28 = v66;
      sub_24F072390();
      uint64_t v65 = v21;
      uint64_t v68 = v21;
      char v67 = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4730);
      sub_24F062E38(&qword_2699A4738, (void (*)(void))sub_24F062CE8);
      uint64_t v29 = v55;
      uint64_t v30 = v64;
      sub_24F0723F0();
      if (v30)
      {
        (*(void (**)(char *, uint64_t))(v49 + 8))(v26, v29);
        (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v23);
        (*(void (**)(char *, uint64_t))(v62 + 8))(v28, v27);
LABEL_6:
        uint64_t result = swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v44 = v23;
        swift_bridgeObjectRelease();
        LOBYTE(v68) = (_BYTE)v59;
        BYTE1(v68) = v57;
        char v67 = 1;
        sub_24F027DDC();
        sub_24F0723F0();
        LOBYTE(v68) = 2;
        sub_24F0033D8(&qword_2699A2D20);
        uint64_t v46 = v58;
        sub_24F0723F0();
        (*(void (**)(char *, uint64_t))(v49 + 8))(v26, v29);
        (*(void (**)(char *, uint64_t))(v24 + 8))(v46, v44);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v66, v27);
      }
      break;
  }
  return result;
}

uint64_t LibraryCanvasContentLoadState.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v58 = a2;
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4760);
  uint64_t v53 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  uint64_t v61 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4768);
  uint64_t v52 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56);
  uint64_t v65 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4770);
  uint64_t v55 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  uint64_t v60 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4778);
  uint64_t v54 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  uint64_t v59 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4780);
  uint64_t v62 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t State = type metadata accessor for LibraryCanvasContentLoadState();
  uint64_t v11 = MEMORY[0x270FA5388](State);
  uint64_t v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v49 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v49 - v17;
  uint64_t v19 = a1[3];
  uint64_t v66 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v19);
  sub_24F062C40();
  uint64_t v20 = v67;
  sub_24F072470();
  if (v20)
  {
    uint64_t v21 = (uint64_t)v66;
  }
  else
  {
    uint64_t v67 = 0;
    uint64_t v23 = v63;
    uint64_t v22 = v64;
    uint64_t v50 = v16;
    uint64_t v51 = v18;
    uint64_t v24 = v65;
    uint64_t v25 = sub_24F072380();
    uint64_t v26 = v7;
    if (*(void *)(v25 + 16) == 1)
    {
      switch(*(unsigned char *)(v25 + 32))
      {
        case 1:
          char v69 = 1;
          sub_24F062D90();
          uint64_t v35 = v60;
          uint64_t v36 = v67;
          sub_24F072300();
          if (!v36)
          {
            (*(void (**)(char *, uint64_t))(v55 + 8))(v35, v22);
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v62 + 8))(v9, v7);
            uint64_t v39 = (uint64_t)v51;
            swift_storeEnumTagMultiPayload();
            uint64_t v40 = (uint64_t)v66;
            uint64_t v41 = v58;
            goto LABEL_17;
          }
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v62 + 8))(v9, v7);
          uint64_t v21 = (uint64_t)v66;
          return __swift_destroy_boxed_opaque_existential_1(v21);
        case 2:
          uint64_t v64 = v25;
          char v73 = 2;
          sub_24F062D3C();
          uint64_t v29 = v7;
          uint64_t v37 = v67;
          sub_24F072300();
          if (v37) {
            goto LABEL_12;
          }
          uint64_t v67 = v7;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4730);
          char v72 = 0;
          sub_24F062E38(&qword_2699A4788, (void (*)(void))sub_24F062EA8);
          uint64_t v43 = (uint64_t)v50;
          uint64_t v44 = v56;
          sub_24F072370();
          char v71 = 1;
          sub_24F028328();
          sub_24F072370();
          __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3B38);
          sub_24F071500();
          char v70 = 2;
          sub_24F0033D8(&qword_2699A2D38);
          sub_24F072370();
          (*(void (**)(char *, uint64_t))(v52 + 8))(v24, v44);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v62 + 8))(v9, v67);
          swift_storeEnumTagMultiPayload();
          uint64_t v39 = (uint64_t)v51;
          sub_24F03AA20(v43, (uint64_t)v51);
          uint64_t v40 = (uint64_t)v66;
          uint64_t v41 = v58;
          goto LABEL_17;
        case 3:
          uint64_t v64 = v25;
          uint64_t v65 = (char *)State;
          char v77 = 3;
          sub_24F062C94();
          uint64_t v38 = v67;
          sub_24F072300();
          if (v38)
          {
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v62 + 8))(v9, v7);
            goto LABEL_8;
          }
          uint64_t v67 = v7;
          uint64_t v63 = (uint64_t)v9;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4730);
          char v76 = 0;
          sub_24F062E38(&qword_2699A4788, (void (*)(void))sub_24F062EA8);
          uint64_t v45 = (uint64_t)v13;
          sub_24F072370();
          char v75 = 1;
          sub_24F028328();
          uint64_t v46 = v61;
          sub_24F072370();
          __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3B38);
          sub_24F071500();
          char v74 = 2;
          sub_24F0033D8(&qword_2699A2D38);
          uint64_t v47 = v57;
          sub_24F072370();
          uint64_t v48 = v62;
          (*(void (**)(char *, uint64_t))(v53 + 8))(v46, v47);
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v63, v67);
          swift_storeEnumTagMultiPayload();
          uint64_t v39 = (uint64_t)v51;
          sub_24F03AA20(v45, (uint64_t)v51);
          uint64_t v40 = (uint64_t)v66;
          uint64_t v41 = v58;
          goto LABEL_17;
        default:
          uint64_t v27 = v23;
          char v68 = 0;
          sub_24F062DE4();
          uint64_t v28 = v59;
          uint64_t v29 = v26;
          uint64_t v30 = v67;
          sub_24F072300();
          if (v30)
          {
LABEL_12:
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v62 + 8))(v9, v29);
            uint64_t v21 = (uint64_t)v66;
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v54 + 8))(v28, v27);
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v62 + 8))(v9, v26);
            uint64_t v39 = (uint64_t)v51;
            swift_storeEnumTagMultiPayload();
            uint64_t v40 = (uint64_t)v66;
            uint64_t v41 = v58;
LABEL_17:
            sub_24F03AA20(v39, v41);
            uint64_t v21 = v40;
          }
          break;
      }
    }
    else
    {
      uint64_t v31 = v9;
      uint64_t v32 = sub_24F072260();
      swift_allocError();
      uint64_t v34 = v33;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3060);
      *uint64_t v34 = State;
      sub_24F072310();
      sub_24F072250();
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v32 - 8) + 104))(v34, *MEMORY[0x263F8DCB0], v32);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v62 + 8))(v31, v7);
LABEL_8:
      uint64_t v21 = (uint64_t)v66;
    }
  }
  return __swift_destroy_boxed_opaque_existential_1(v21);
}

uint64_t sub_24F062640@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return LibraryCanvasContentLoadState.init(from:)(a1, a2);
}

uint64_t sub_24F062658(void *a1)
{
  return LibraryCanvasContentLoadState.encode(to:)(a1);
}

uint64_t _s14FitnessLibrary0B22CanvasContentLoadStateO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24F071500();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v63 = v4;
  uint64_t v64 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v62 = (char *)v58 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v58 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v58 - v14;
  uint64_t State = type metadata accessor for LibraryCanvasContentLoadState();
  uint64_t v17 = MEMORY[0x270FA5388](State);
  uint64_t v19 = (char *)v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)v58 - v20;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4800);
  uint64_t v23 = MEMORY[0x270FA5388](v22 - 8);
  uint64_t v25 = (char *)v58 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = (uint64_t)&v25[*(int *)(v23 + 56)];
  sub_24F04C8CC(a1, (uint64_t)v25);
  sub_24F04C8CC(a2, v26);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_24F04C8CC((uint64_t)v25, (uint64_t)v19);
      uint64_t v40 = *(void *)v19;
      int v41 = v19[8];
      int v42 = v19[9];
      uint64_t v43 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2699A3B38) + 64);
      uint64_t v30 = &v19[v43];
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_13;
      }
      int v61 = v41;
      uint64_t v44 = *(void *)v26;
      int v60 = *(unsigned __int8 *)(v26 + 8);
      int v45 = *(unsigned __int8 *)(v26 + 9);
      v58[2] = v42;
      int v59 = v45;
      uint64_t v46 = v64;
      uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v64 + 32);
      uint64_t v48 = v62;
      uint64_t v49 = v30;
      uint64_t v50 = v63;
      v47(v62, v49, v63);
      v47(v8, (char *)(v26 + v43), v50);
      char v51 = sub_24F05C930(v40, v44);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v51)
      {
        if (v61 == v60 && (sub_24F071530() & 1) != 0)
        {
          uint64_t v52 = v62;
          char v38 = MEMORY[0x253351FB0](v62, v8);
          uint64_t v53 = *(void (**)(char *, uint64_t))(v64 + 8);
          v53(v8, v50);
          v53(v52, v50);
          goto LABEL_12;
        }
        uint64_t v55 = *(void (**)(char *, uint64_t))(v64 + 8);
        v55(v8, v50);
        v55(v62, v50);
      }
      else
      {
        uint64_t v54 = *(void (**)(char *, uint64_t))(v46 + 8);
        v54(v8, v50);
        v54(v48, v50);
      }
      goto LABEL_22;
    case 2u:
      if (swift_getEnumCaseMultiPayload() == 2) {
        goto LABEL_15;
      }
      goto LABEL_17;
    case 3u:
      if (swift_getEnumCaseMultiPayload() != 3) {
        goto LABEL_17;
      }
LABEL_15:
      sub_24F063418((uint64_t)v25);
      char v38 = 1;
      return v38 & 1;
    default:
      sub_24F04C8CC((uint64_t)v25, (uint64_t)v21);
      uint64_t v27 = *(void *)v21;
      LODWORD(v62) = v21[8];
      int v28 = v21[9];
      uint64_t v29 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2699A3B38) + 64);
      uint64_t v30 = &v21[v29];
      if (swift_getEnumCaseMultiPayload())
      {
LABEL_13:
        (*(void (**)(char *, uint64_t))(v64 + 8))(v30, v63);
        swift_bridgeObjectRelease();
LABEL_17:
        sub_24F0641E8((uint64_t)v25);
        goto LABEL_23;
      }
      int v59 = v28;
      uint64_t v31 = *(void *)v26;
      int v32 = *(unsigned __int8 *)(v26 + 8);
      int v60 = *(unsigned __int8 *)(v26 + 9);
      int v61 = v32;
      uint64_t v33 = (char *)(v26 + v29);
      uint64_t v34 = v64;
      uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v64 + 32);
      uint64_t v36 = v30;
      uint64_t v37 = v63;
      v35(v15, v36, v63);
      v35(v13, v33, v37);
      LOBYTE(v33) = sub_24F05C930(v27, v31);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v33 & 1) == 0) {
        goto LABEL_21;
      }
      if (v62 != v61 || (sub_24F071530() & 1) == 0)
      {
        uint64_t v34 = v64;
LABEL_21:
        uint64_t v56 = *(void (**)(char *, uint64_t))(v34 + 8);
        v56(v13, v37);
        v56(v15, v37);
LABEL_22:
        sub_24F063418((uint64_t)v25);
LABEL_23:
        char v38 = 0;
        return v38 & 1;
      }
      char v38 = MEMORY[0x253351FB0](v15, v13);
      uint64_t v39 = *(void (**)(char *, uint64_t))(v64 + 8);
      v39(v13, v37);
      v39(v15, v37);
LABEL_12:
      sub_24F063418((uint64_t)v25);
      return v38 & 1;
  }
}

uint64_t type metadata accessor for LibraryCanvasContentLoadState()
{
  uint64_t result = qword_26B1EBF28;
  if (!qword_26B1EBF28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_24F062C40()
{
  unint64_t result = qword_2699A4720;
  if (!qword_2699A4720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4720);
  }
  return result;
}

unint64_t sub_24F062C94()
{
  unint64_t result = qword_2699A4728;
  if (!qword_2699A4728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4728);
  }
  return result;
}

unint64_t sub_24F062CE8()
{
  unint64_t result = qword_2699A4740;
  if (!qword_2699A4740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4740);
  }
  return result;
}

unint64_t sub_24F062D3C()
{
  unint64_t result = qword_2699A4748;
  if (!qword_2699A4748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4748);
  }
  return result;
}

unint64_t sub_24F062D90()
{
  unint64_t result = qword_2699A4750;
  if (!qword_2699A4750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4750);
  }
  return result;
}

unint64_t sub_24F062DE4()
{
  unint64_t result = qword_2699A4758;
  if (!qword_2699A4758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4758);
  }
  return result;
}

uint64_t sub_24F062E38(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A4730);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24F062EA8()
{
  unint64_t result = qword_2699A4790;
  if (!qword_2699A4790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4790);
  }
  return result;
}

_WORD *initializeBufferWithCopyOfBuffer for LibraryCanvasContentLoadState(_WORD *a1, _WORD *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (_WORD *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      a1[4] = a2[4];
      swift_bridgeObjectRetain();
      uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2699A3B38) + 64);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_24F071500();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for LibraryCanvasContentLoadState(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2699A3B38) + 64);
    uint64_t v4 = sub_24F071500();
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v5(v3, v4);
  }
  return result;
}

_WORD *initializeWithCopy for LibraryCanvasContentLoadState(_WORD *a1, _WORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    a1[4] = a2[4];
    swift_bridgeObjectRetain();
    uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2699A3B38) + 64);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_24F071500();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_WORD *assignWithCopy for LibraryCanvasContentLoadState(_WORD *a1, _WORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24F063418((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      a1[4] = a2[4];
      swift_bridgeObjectRetain();
      uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2699A3B38) + 64);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_24F071500();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_24F063418(uint64_t a1)
{
  uint64_t State = type metadata accessor for LibraryCanvasContentLoadState();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(State - 8) + 8))(a1, State);
  return a1;
}

_WORD *initializeWithTake for LibraryCanvasContentLoadState(_WORD *a1, _WORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    a1[4] = a2[4];
    uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2699A3B38) + 64);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_24F071500();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_WORD *assignWithTake for LibraryCanvasContentLoadState(_WORD *a1, _WORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24F063418((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      a1[4] = a2[4];
      uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2699A3B38) + 64);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_24F071500();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_24F06373C()
{
  uint64_t result = sub_24F071500();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    uint64_t v4 = &v3;
    swift_getTupleTypeLayout3();
    int v5 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LibraryCanvasContentLoadState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F0638E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryCanvasContentLoadState.CodingKeys()
{
  return &type metadata for LibraryCanvasContentLoadState.CodingKeys;
}

ValueMetadata *type metadata accessor for LibraryCanvasContentLoadState.IdleCodingKeys()
{
  return &type metadata for LibraryCanvasContentLoadState.IdleCodingKeys;
}

ValueMetadata *type metadata accessor for LibraryCanvasContentLoadState.FetchingCodingKeys()
{
  return &type metadata for LibraryCanvasContentLoadState.FetchingCodingKeys;
}

ValueMetadata *type metadata accessor for LibraryCanvasContentLoadState.FetchedCodingKeys()
{
  return &type metadata for LibraryCanvasContentLoadState.FetchedCodingKeys;
}

unsigned char *_s14FitnessLibrary29LibraryCanvasContentLoadStateO17FetchedCodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F063A20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryCanvasContentLoadState.RefreshingCodingKeys()
{
  return &type metadata for LibraryCanvasContentLoadState.RefreshingCodingKeys;
}

unint64_t sub_24F063A5C()
{
  unint64_t result = qword_2699A4798;
  if (!qword_2699A4798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4798);
  }
  return result;
}

unint64_t sub_24F063AB4()
{
  unint64_t result = qword_2699A47A0;
  if (!qword_2699A47A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A47A0);
  }
  return result;
}

unint64_t sub_24F063B0C()
{
  unint64_t result = qword_2699A47A8;
  if (!qword_2699A47A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A47A8);
  }
  return result;
}

unint64_t sub_24F063B64()
{
  unint64_t result = qword_2699A47B0;
  if (!qword_2699A47B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A47B0);
  }
  return result;
}

unint64_t sub_24F063BBC()
{
  unint64_t result = qword_2699A47B8;
  if (!qword_2699A47B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A47B8);
  }
  return result;
}

unint64_t sub_24F063C14()
{
  unint64_t result = qword_2699A47C0;
  if (!qword_2699A47C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A47C0);
  }
  return result;
}

unint64_t sub_24F063C6C()
{
  unint64_t result = qword_2699A47C8;
  if (!qword_2699A47C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A47C8);
  }
  return result;
}

unint64_t sub_24F063CC4()
{
  unint64_t result = qword_2699A47D0;
  if (!qword_2699A47D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A47D0);
  }
  return result;
}

unint64_t sub_24F063D1C()
{
  unint64_t result = qword_2699A47D8;
  if (!qword_2699A47D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A47D8);
  }
  return result;
}

unint64_t sub_24F063D74()
{
  unint64_t result = qword_2699A47E0;
  if (!qword_2699A47E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A47E0);
  }
  return result;
}

unint64_t sub_24F063DCC()
{
  unint64_t result = qword_2699A47E8;
  if (!qword_2699A47E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A47E8);
  }
  return result;
}

unint64_t sub_24F063E24()
{
  unint64_t result = qword_2699A47F0;
  if (!qword_2699A47F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A47F0);
  }
  return result;
}

unint64_t sub_24F063E7C()
{
  unint64_t result = qword_2699A47F8;
  if (!qword_2699A47F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A47F8);
  }
  return result;
}

uint64_t sub_24F063ED0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701602409 && a2 == 0xE400000000000000;
  if (v2 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E696863746566 && a2 == 0xE800000000000000 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64656863746566 && a2 == 0xE700000000000000 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6968736572666572 && a2 == 0xEA0000000000676ELL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24F072400();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_24F064088(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7470697263736564 && a2 == 0xEB0000000073726FLL;
  if (v2 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74756F79616CLL && a2 == 0xE600000000000000 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24F072400();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_24F0641E8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4800);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_24F064250(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_24F071500();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    uint64_t v9 = (void *)((char *)a1 + v8);
    uint64_t v10 = (void *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
  }
  swift_retain();
  return a1;
}

uint64_t sub_24F06432C(uint64_t a1)
{
  uint64_t v2 = sub_24F071500();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_release();
}

uint64_t sub_24F0643A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24F071500();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  void *v8 = *v9;
  v8[1] = v10;
  swift_retain();
  return a1;
}

uint64_t sub_24F064434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24F071500();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  void *v8 = *v9;
  v8[1] = v10;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_24F0644D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24F071500();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_24F064558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24F071500();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  swift_release();
  return a1;
}

uint64_t sub_24F0645E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24F0645FC);
}

uint64_t sub_24F0645FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24F071500();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_24F0646BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24F0646D0);
}

uint64_t sub_24F0646D0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_24F071500();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for TVLibraryItemCell()
{
  uint64_t result = qword_2699A4808;
  if (!qword_2699A4808) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24F0647D8()
{
  uint64_t result = sub_24F071500();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24F06487C()
{
  return swift_getOpaqueTypeConformance2();
}

__n128 sub_24F064898@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_24F0721D0();
    uint64_t v23 = (void *)sub_24F071990();
    sub_24F071540();
  }
  sub_24F071740();
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3B70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(a9, v13, v24);
  uint64_t v25 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2699A4820) + 36));
  v25[4] = v31;
  v25[5] = v32;
  v25[6] = v33;
  *uint64_t v25 = v27;
  v25[1] = v28;
  __n128 result = v30;
  v25[2] = v29;
  v25[3] = v30;
  return result;
}

uint64_t sub_24F064A84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3B70);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = a1;
  uint64_t v11 = a1;
  sub_24F071DF0();
  sub_24F071F30();
  __n128 v8 = sub_24F064898(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a2, 0.0, 1, 0.0, 1);
  return (*(uint64_t (**)(unsigned char *, uint64_t, __n128))(v5 + 8))(v7, v4, v8);
}

uint64_t sub_24F064C04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for TVLibraryItemCell();
  LibraryPage.title(locale:)(a1);
  sub_24F0221E8();
  uint64_t result = sub_24F071B00();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v5;
  *(unsigned char *)(a2 + 16) = v6 & 1;
  *(void *)(a2 + 24) = v7;
  return result;
}

uint64_t sub_24F064C74@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for TVLibraryItemCell();
  uint64_t result = sub_24F071DD0();
  *a1 = result;
  return result;
}

uint64_t sub_24F064DB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v17[1] = a2;
  uint64_t v4 = type metadata accessor for LibrarySidebarButtonStyle();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4818);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24F065040(v2, (uint64_t)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v14 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v15 = swift_allocObject();
  sub_24F065198((uint64_t)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14);
  uint64_t v18 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4820);
  sub_24F065270();
  sub_24F071E40();
  sub_24F04C930(0, (uint64_t)v7);
  sub_24F007760(&qword_2699A4830, &qword_2699A4818);
  sub_24F065310();
  sub_24F071BB0();
  sub_24F065368((uint64_t)v7);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_24F065040(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TVLibraryItemCell();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24F0650A4()
{
  uint64_t v1 = *(void *)(type metadata accessor for TVLibraryItemCell() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_24F071500();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_release();
  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_24F065198(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TVLibraryItemCell();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24F0651FC()
{
  uint64_t v1 = type metadata accessor for TVLibraryItemCell();
  return (*(uint64_t (**)(void))(v0
                              + *(int *)(v1 + 24)
                              + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80))))();
}

uint64_t sub_24F065268@<X0>(uint64_t a1@<X8>)
{
  return sub_24F064A84(*(void *)(v1 + 16), a1);
}

unint64_t sub_24F065270()
{
  unint64_t result = qword_2699A4828;
  if (!qword_2699A4828)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A4820);
    sub_24F007760(&qword_2699A3B80, &qword_2699A3B70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4828);
  }
  return result;
}

unint64_t sub_24F065310()
{
  unint64_t result = qword_2699A4838;
  if (!qword_2699A4838)
  {
    type metadata accessor for LibrarySidebarButtonStyle();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4838);
  }
  return result;
}

uint64_t sub_24F065368(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LibrarySidebarButtonStyle();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24F0653C4@<X0>(uint64_t a1@<X8>)
{
  return sub_24F064C04(*(void *)(v1 + 16), a1);
}

uint64_t sub_24F0653CC@<X0>(uint64_t *a1@<X8>)
{
  return sub_24F064C74(a1);
}

uint64_t sub_24F0653D4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t LibraryCanvasSectionDescriptor.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LibraryCanvasSectionDescriptor.title.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LibraryCanvasSectionDescriptor.subtitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LibraryCanvasSectionDescriptor.items.getter()
{
  return swift_bridgeObjectRetain();
}

void __swiftcall LibraryCanvasSectionDescriptor.init(identifier:title:subtitle:items:)(FitnessLibrary::LibraryCanvasSectionDescriptor *__return_ptr retstr, Swift::String identifier, Swift::String_optional title, Swift::String_optional subtitle, Swift::OpaquePointer items)
{
  retstr->identifier = identifier;
  retstr->title = title;
  retstr->subtitle = subtitle;
  retstr->items = items;
}

uint64_t sub_24F065520()
{
  uint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656C746974;
      break;
    case 2:
      uint64_t result = 0x656C746974627573;
      break;
    case 3:
      uint64_t result = 0x736D657469;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24F0655AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24F0667C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24F0655D4(uint64_t a1)
{
  unint64_t v2 = sub_24F065884();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F065610(uint64_t a1)
{
  unint64_t v2 = sub_24F065884();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t LibraryCanvasSectionDescriptor.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4840);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  uint64_t v16 = v1[3];
  uint64_t v17 = v7;
  uint64_t v8 = v1[4];
  uint64_t v14 = v1[5];
  uint64_t v15 = v8;
  uint64_t v13 = v1[6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24F065884();
  sub_24F072480();
  char v23 = 0;
  uint64_t v9 = v18;
  sub_24F0723C0();
  if (!v9)
  {
    uint64_t v10 = v13;
    char v22 = 1;
    sub_24F0723A0();
    char v21 = 2;
    sub_24F0723A0();
    uint64_t v19 = v10;
    char v20 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4850);
    sub_24F065CCC(&qword_2699A4858, (void (*)(void))sub_24F0658D8);
    sub_24F0723F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_24F065884()
{
  unint64_t result = qword_2699A4848;
  if (!qword_2699A4848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4848);
  }
  return result;
}

unint64_t sub_24F0658D8()
{
  unint64_t result = qword_2699A4860;
  if (!qword_2699A4860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4860);
  }
  return result;
}

uint64_t LibraryCanvasSectionDescriptor.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4868);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24F065884();
  sub_24F072470();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v29 = 0;
  uint64_t v9 = sub_24F072340();
  uint64_t v11 = v10;
  char v28 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_24F072320();
  uint64_t v24 = v13;
  uint64_t v21 = v12;
  uint64_t v22 = v9;
  char v27 = 2;
  swift_bridgeObjectRetain();
  uint64_t v23 = 0;
  uint64_t v20 = sub_24F072320();
  uint64_t v15 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4850);
  char v26 = 3;
  sub_24F065CCC(&qword_2699A4870, (void (*)(void))sub_24F065D3C);
  swift_bridgeObjectRetain();
  sub_24F072370();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v17 = v25;
  swift_bridgeObjectRetain();
  uint64_t v18 = v15;
  uint64_t v19 = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a2 = v22;
  a2[1] = v11;
  a2[2] = v21;
  a2[3] = v19;
  a2[4] = v20;
  a2[5] = v18;
  a2[6] = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F065CCC(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2699A4850);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24F065D3C()
{
  unint64_t result = qword_2699A4878;
  if (!qword_2699A4878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4878);
  }
  return result;
}

uint64_t sub_24F065D90@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return LibraryCanvasSectionDescriptor.init(from:)(a1, a2);
}

uint64_t sub_24F065DA8(void *a1)
{
  return LibraryCanvasSectionDescriptor.encode(to:)(a1);
}

uint64_t LibraryCanvasSectionDescriptor.hash(into:)(uint64_t a1)
{
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[5];
  uint64_t v5 = v1[6];
  swift_bridgeObjectRetain();
  sub_24F072080();
  swift_bridgeObjectRelease();
  if (v3)
  {
    sub_24F072450();
    swift_bridgeObjectRetain();
    sub_24F072080();
    swift_bridgeObjectRelease();
    if (v4)
    {
LABEL_3:
      sub_24F072450();
      swift_bridgeObjectRetain();
      sub_24F072080();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_24F072450();
    if (v4) {
      goto LABEL_3;
    }
  }
  sub_24F072450();
LABEL_6:
  swift_bridgeObjectRetain();
  sub_24F066000(a1, v5);
  return swift_bridgeObjectRelease();
}

uint64_t LibraryCanvasSectionDescriptor.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 48);
  v5[9] = *(void *)v0;
  v5[10] = v1;
  long long v3 = *(_OWORD *)(v0 + 32);
  long long v6 = *(_OWORD *)(v0 + 16);
  long long v7 = v3;
  uint64_t v8 = v2;
  sub_24F072430();
  LibraryCanvasSectionDescriptor.hash(into:)((uint64_t)v5);
  return sub_24F072460();
}

uint64_t sub_24F065F3C()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 48);
  v5[9] = *(void *)v0;
  v5[10] = v1;
  long long v3 = *(_OWORD *)(v0 + 32);
  long long v6 = *(_OWORD *)(v0 + 16);
  long long v7 = v3;
  uint64_t v8 = v2;
  sub_24F072430();
  LibraryCanvasSectionDescriptor.hash(into:)((uint64_t)v5);
  return sub_24F072460();
}

uint64_t sub_24F065FA0()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 48);
  v5[9] = *(void *)v0;
  v5[10] = v1;
  long long v3 = *(_OWORD *)(v0 + 32);
  long long v6 = *(_OWORD *)(v0 + 16);
  long long v7 = v3;
  uint64_t v8 = v2;
  sub_24F072430();
  LibraryCanvasSectionDescriptor.hash(into:)((uint64_t)v5);
  return sub_24F072460();
}

uint64_t sub_24F066000(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_24F072440();
  if (v3)
  {
    uint64_t v5 = a2 + 64;
    do
    {
      uint64_t v6 = *(void *)(v5 - 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      sub_24F072080();
      swift_bridgeObjectRelease();
      sub_24F072450();
      if (v6)
      {
        swift_bridgeObjectRetain();
        sub_24F072080();
        swift_bridgeObjectRelease();
      }
      v5 += 40;
      sub_24F072080();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t _s14FitnessLibrary0B23CanvasSectionDescriptorV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v6 = a1[5];
  uint64_t v5 = a1[6];
  uint64_t v8 = a2[2];
  uint64_t v7 = a2[3];
  uint64_t v10 = a2[4];
  uint64_t v9 = a2[5];
  uint64_t v11 = a2[6];
  if ((*a1 != *a2 || a1[1] != a2[1]) && (sub_24F072400() & 1) == 0) {
    return 0;
  }
  if (v4)
  {
    if (!v7 || (v2 != v8 || v4 != v7) && (sub_24F072400() & 1) == 0) {
      return 0;
    }
  }
  else if (v7)
  {
    return 0;
  }
  if (v6)
  {
    if (v9 && (v3 == v10 && v6 == v9 || (sub_24F072400() & 1) != 0)) {
      goto LABEL_16;
    }
    return 0;
  }
  if (v9) {
    return 0;
  }
LABEL_16:
  return sub_24F05C5D4(v5, v11);
}

unint64_t sub_24F066300()
{
  unint64_t result = qword_2699A4880;
  if (!qword_2699A4880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4880);
  }
  return result;
}

uint64_t destroy for LibraryCanvasSectionDescriptor()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for LibraryCanvasSectionDescriptor(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for LibraryCanvasSectionDescriptor(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for LibraryCanvasSectionDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryCanvasSectionDescriptor(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LibraryCanvasSectionDescriptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryCanvasSectionDescriptor()
{
  return &type metadata for LibraryCanvasSectionDescriptor;
}

unsigned char *storeEnumTagSinglePayload for LibraryCanvasSectionDescriptor.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F066688);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryCanvasSectionDescriptor.CodingKeys()
{
  return &type metadata for LibraryCanvasSectionDescriptor.CodingKeys;
}

unint64_t sub_24F0666C4()
{
  unint64_t result = qword_2699A4888;
  if (!qword_2699A4888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4888);
  }
  return result;
}

unint64_t sub_24F06671C()
{
  unint64_t result = qword_2699A4890;
  if (!qword_2699A4890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4890);
  }
  return result;
}

unint64_t sub_24F066774()
{
  unint64_t result = qword_2699A4898;
  if (!qword_2699A4898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4898);
  }
  return result;
}

uint64_t sub_24F0667C8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736D657469 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24F072400();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_24F066980(uint64_t a1)
{
  unint64_t v2 = sub_24F067760();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F0669BC(uint64_t a1)
{
  unint64_t v2 = sub_24F067760();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_24F0669F8()
{
  unint64_t result = 0xD000000000000015;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6843656C61636F6CLL;
      break;
    case 2:
      unint64_t result = 0x647055736D657469;
      break;
    case 3:
      unint64_t result = 0x6570704177656976;
      break;
    case 4:
      unint64_t result = 0x6173694477656976;
      break;
    case 5:
      unint64_t result = 0x4968736572666572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24F066AF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24F068B04(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24F066B20(uint64_t a1)
{
  unint64_t v2 = sub_24F067568();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F066B5C(uint64_t a1)
{
  unint64_t v2 = sub_24F067568();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F066B98()
{
  return 0x7470697263736564;
}

uint64_t sub_24F066BB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x7470697263736564 && a2 == 0xEB0000000073726FLL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24F072400();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24F066C68(uint64_t a1)
{
  unint64_t v2 = sub_24F0676B8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F066CA4(uint64_t a1)
{
  unint64_t v2 = sub_24F0676B8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F066CE0(uint64_t a1)
{
  unint64_t v2 = sub_24F06770C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F066D1C(uint64_t a1)
{
  unint64_t v2 = sub_24F06770C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F066D58(uint64_t a1)
{
  unint64_t v2 = sub_24F0675BC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F066D94(uint64_t a1)
{
  unint64_t v2 = sub_24F0675BC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F066DD0(uint64_t a1)
{
  unint64_t v2 = sub_24F067664();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F066E0C(uint64_t a1)
{
  unint64_t v2 = sub_24F067664();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24F066E48(uint64_t a1)
{
  unint64_t v2 = sub_24F067610();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24F066E84(uint64_t a1)
{
  unint64_t v2 = sub_24F067610();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t LibraryCanvasContentAction.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A48A0);
  uint64_t v45 = *(void *)(v3 - 8);
  uint64_t v46 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v44 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A48A8);
  uint64_t v42 = *(void *)(v5 - 8);
  uint64_t v43 = v5;
  MEMORY[0x270FA5388](v5);
  int v41 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A48B0);
  uint64_t v37 = *(void *)(v7 - 8);
  uint64_t v38 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v35 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A48B8);
  uint64_t v39 = *(void *)(v9 - 8);
  uint64_t v40 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v36 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A48C0);
  uint64_t v34 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A48C8);
  uint64_t v33 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A48D0);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v47 = v17;
  uint64_t v48 = v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = *v1;
  uint64_t v21 = a1[3];
  uint64_t v22 = a1;
  uint64_t v23 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v22, v21);
  sub_24F067568();
  sub_24F072480();
  switch(v20)
  {
    case 0:
      char v50 = 0;
      sub_24F067760();
      uint64_t v24 = v47;
      sub_24F072390();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v16, v14);
      goto LABEL_9;
    case 1:
      char v51 = 1;
      sub_24F06770C();
      uint64_t v29 = v47;
      sub_24F072390();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v11);
      return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v23, v29);
    case 2:
      char v53 = 3;
      sub_24F067664();
      __n128 v30 = v35;
      uint64_t v24 = v47;
      sub_24F072390();
      uint64_t v32 = v37;
      uint64_t v31 = v38;
      goto LABEL_8;
    case 3:
      char v54 = 4;
      sub_24F067610();
      __n128 v30 = v41;
      uint64_t v24 = v47;
      sub_24F072390();
      uint64_t v32 = v42;
      uint64_t v31 = v43;
      goto LABEL_8;
    case 4:
      char v55 = 5;
      sub_24F0675BC();
      __n128 v30 = v44;
      uint64_t v24 = v47;
      sub_24F072390();
      uint64_t v32 = v45;
      uint64_t v31 = v46;
LABEL_8:
      (*(void (**)(char *, uint64_t))(v32 + 8))(v30, v31);
LABEL_9:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v23, v24);
      break;
    default:
      char v52 = 2;
      sub_24F0676B8();
      uint64_t v25 = v36;
      uint64_t v26 = v47;
      sub_24F072390();
      uint64_t v49 = v20;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4730);
      sub_24F062E38(&qword_2699A4738, (void (*)(void))sub_24F062CE8);
      uint64_t v27 = v40;
      sub_24F0723F0();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v25, v27);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v23, v26);
      break;
  }
  return result;
}

unint64_t sub_24F067568()
{
  unint64_t result = qword_2699A48D8;
  if (!qword_2699A48D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A48D8);
  }
  return result;
}

unint64_t sub_24F0675BC()
{
  unint64_t result = qword_2699A48E0;
  if (!qword_2699A48E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A48E0);
  }
  return result;
}

unint64_t sub_24F067610()
{
  unint64_t result = qword_2699A48E8;
  if (!qword_2699A48E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A48E8);
  }
  return result;
}

unint64_t sub_24F067664()
{
  unint64_t result = qword_2699A48F0;
  if (!qword_2699A48F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A48F0);
  }
  return result;
}

unint64_t sub_24F0676B8()
{
  unint64_t result = qword_2699A48F8;
  if (!qword_2699A48F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A48F8);
  }
  return result;
}

unint64_t sub_24F06770C()
{
  unint64_t result = qword_2699A4900;
  if (!qword_2699A4900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4900);
  }
  return result;
}

unint64_t sub_24F067760()
{
  unint64_t result = qword_2699A4908;
  if (!qword_2699A4908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4908);
  }
  return result;
}

uint64_t LibraryCanvasContentAction.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  char v54 = a2;
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4910);
  uint64_t v45 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  uint64_t v57 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4918);
  uint64_t v46 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v56 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4920);
  uint64_t v47 = *(void *)(v5 - 8);
  uint64_t v48 = v5;
  MEMORY[0x270FA5388](v5);
  char v55 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4928);
  uint64_t v49 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  char v53 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4930);
  uint64_t v43 = *(void *)(v8 - 8);
  uint64_t v44 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4938);
  uint64_t v42 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4940);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1[3];
  uint64_t v58 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_24F067568();
  uint64_t v19 = v59;
  sub_24F072470();
  if (v19) {
    goto LABEL_17;
  }
  uint64_t v20 = v13;
  uint64_t v40 = v11;
  uint64_t v41 = 0;
  uint64_t v22 = v55;
  uint64_t v21 = v56;
  uint64_t v23 = v57;
  uint64_t v59 = v15;
  uint64_t v24 = sub_24F072380();
  if (*(void *)(v24 + 16) != 1)
  {
    uint64_t v28 = sub_24F072260();
    swift_allocError();
    __n128 v30 = v29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3060);
    *__n128 v30 = &type metadata for LibraryCanvasContentAction;
    sub_24F072310();
    sub_24F072250();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v28 - 8) + 104))(v30, *MEMORY[0x263F8DCB0], v28);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v17, v14);
LABEL_17:
    uint64_t v37 = (uint64_t)v58;
    return __swift_destroy_boxed_opaque_existential_1(v37);
  }
  uint64_t v25 = v59;
  switch(*(unsigned char *)(v24 + 32))
  {
    case 1:
      char v62 = 1;
      sub_24F06770C();
      uint64_t v31 = v41;
      sub_24F072300();
      if (v31) {
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v43 + 8))(v10, v44);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v17, v14);
      uint64_t v27 = 1;
      goto LABEL_23;
    case 2:
      char v63 = 2;
      sub_24F0676B8();
      uint64_t v32 = v53;
      uint64_t v33 = v41;
      sub_24F072300();
      if (v33) {
        goto LABEL_16;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4730);
      sub_24F062E38(&qword_2699A4788, (void (*)(void))sub_24F062EA8);
      uint64_t v39 = v51;
      sub_24F072370();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v32, v39);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v17, v14);
      uint64_t v27 = v60;
      goto LABEL_23;
    case 3:
      char v64 = 3;
      sub_24F067664();
      uint64_t v34 = v41;
      sub_24F072300();
      if (v34) {
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v47 + 8))(v22, v48);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v17, v14);
      uint64_t v27 = 2;
      goto LABEL_23;
    case 4:
      char v65 = 4;
      sub_24F067610();
      uint64_t v35 = v41;
      sub_24F072300();
      if (v35) {
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v46 + 8))(v21, v50);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v17, v14);
      uint64_t v27 = 3;
      goto LABEL_23;
    case 5:
      char v66 = 5;
      sub_24F0675BC();
      uint64_t v36 = v41;
      sub_24F072300();
      if (v36) {
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v45 + 8))(v23, v52);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v17, v14);
      uint64_t v27 = 4;
      goto LABEL_23;
    default:
      char v61 = 0;
      sub_24F067760();
      uint64_t v26 = v41;
      sub_24F072300();
      if (v26)
      {
LABEL_16:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v25 + 8))(v17, v14);
        goto LABEL_17;
      }
      (*(void (**)(char *, uint64_t))(v42 + 8))(v20, v40);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v17, v14);
      uint64_t v27 = 0;
LABEL_23:
      uint64_t v37 = (uint64_t)v58;
      *char v54 = v27;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v37);
}

uint64_t sub_24F0680F0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return LibraryCanvasContentAction.init(from:)(a1, a2);
}

uint64_t sub_24F068108(void *a1)
{
  return LibraryCanvasContentAction.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for LibraryCanvasContentAction(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    uint64_t v3 = swift_bridgeObjectRetain();
  }
  *a1 = v3;
  return a1;
}

unint64_t destroy for LibraryCanvasContentAction(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t *assignWithCopy for LibraryCanvasContentAction(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    *a1 = v4;
    if (v4 >= 0xFFFFFFFF) {
      swift_bridgeObjectRetain();
    }
  }
  else if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    *a1 = *a2;
  }
  else
  {
    *a1 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

unint64_t *assignWithTake for LibraryCanvasContentAction(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if (*a1 < 0xFFFFFFFF) {
    goto LABEL_5;
  }
  if (v3 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryCanvasContentAction(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFFA && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483643);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 4;
  if (v4 >= 6) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for LibraryCanvasContentAction(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFB)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483643;
    if (a3 >= 0x7FFFFFFB) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFB) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 4;
    }
  }
  return result;
}

uint64_t sub_24F068314(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_24F06832C(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for LibraryCanvasContentAction()
{
  return &type metadata for LibraryCanvasContentAction;
}

unsigned char *storeEnumTagSinglePayload for LibraryCanvasContentAction.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F068428);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryCanvasContentAction.CodingKeys()
{
  return &type metadata for LibraryCanvasContentAction.CodingKeys;
}

ValueMetadata *type metadata accessor for LibraryCanvasContentAction.BuildCustomPlanTappedCodingKeys()
{
  return &type metadata for LibraryCanvasContentAction.BuildCustomPlanTappedCodingKeys;
}

ValueMetadata *type metadata accessor for LibraryCanvasContentAction.LocaleChangedCodingKeys()
{
  return &type metadata for LibraryCanvasContentAction.LocaleChangedCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for LibraryCanvasContentAction.ItemsUpdatedCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24F06851CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryCanvasContentAction.ItemsUpdatedCodingKeys()
{
  return &type metadata for LibraryCanvasContentAction.ItemsUpdatedCodingKeys;
}

ValueMetadata *type metadata accessor for LibraryCanvasContentAction.ViewAppearedCodingKeys()
{
  return &type metadata for LibraryCanvasContentAction.ViewAppearedCodingKeys;
}

ValueMetadata *type metadata accessor for LibraryCanvasContentAction.ViewDisappearedCodingKeys()
{
  return &type metadata for LibraryCanvasContentAction.ViewDisappearedCodingKeys;
}

ValueMetadata *type metadata accessor for LibraryCanvasContentAction.RefreshItemsCodingKeys()
{
  return &type metadata for LibraryCanvasContentAction.RefreshItemsCodingKeys;
}

unint64_t sub_24F068588()
{
  unint64_t result = qword_2699A4948;
  if (!qword_2699A4948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4948);
  }
  return result;
}

unint64_t sub_24F0685E0()
{
  unint64_t result = qword_2699A4950;
  if (!qword_2699A4950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4950);
  }
  return result;
}

unint64_t sub_24F068638()
{
  unint64_t result = qword_2699A4958;
  if (!qword_2699A4958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4958);
  }
  return result;
}

unint64_t sub_24F068690()
{
  unint64_t result = qword_2699A4960;
  if (!qword_2699A4960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4960);
  }
  return result;
}

unint64_t sub_24F0686E8()
{
  unint64_t result = qword_2699A4968;
  if (!qword_2699A4968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4968);
  }
  return result;
}

unint64_t sub_24F068740()
{
  unint64_t result = qword_2699A4970;
  if (!qword_2699A4970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4970);
  }
  return result;
}

unint64_t sub_24F068798()
{
  unint64_t result = qword_2699A4978;
  if (!qword_2699A4978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4978);
  }
  return result;
}

unint64_t sub_24F0687F0()
{
  unint64_t result = qword_2699A4980;
  if (!qword_2699A4980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4980);
  }
  return result;
}

unint64_t sub_24F068848()
{
  unint64_t result = qword_2699A4988;
  if (!qword_2699A4988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4988);
  }
  return result;
}

unint64_t sub_24F0688A0()
{
  unint64_t result = qword_2699A4990;
  if (!qword_2699A4990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4990);
  }
  return result;
}

unint64_t sub_24F0688F8()
{
  unint64_t result = qword_2699A4998;
  if (!qword_2699A4998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4998);
  }
  return result;
}

unint64_t sub_24F068950()
{
  unint64_t result = qword_2699A49A0;
  if (!qword_2699A49A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A49A0);
  }
  return result;
}

unint64_t sub_24F0689A8()
{
  unint64_t result = qword_2699A49A8;
  if (!qword_2699A49A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A49A8);
  }
  return result;
}

unint64_t sub_24F068A00()
{
  unint64_t result = qword_2699A49B0;
  if (!qword_2699A49B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A49B0);
  }
  return result;
}

unint64_t sub_24F068A58()
{
  unint64_t result = qword_2699A49B8;
  if (!qword_2699A49B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A49B8);
  }
  return result;
}

unint64_t sub_24F068AB0()
{
  unint64_t result = qword_2699A49C0;
  if (!qword_2699A49C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A49C0);
  }
  return result;
}

uint64_t sub_24F068B04(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x800000024F07AF50 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6843656C61636F6CLL && a2 == 0xED00006465676E61 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x647055736D657469 && a2 == 0xEC00000064657461 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6570704177656976 && a2 == 0xEC00000064657261 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6173694477656976 && a2 == 0xEF64657261657070 || (sub_24F072400() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x4968736572666572 && a2 == 0xEC000000736D6574)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v5 = sub_24F072400();
    swift_bridgeObjectRelease();
    if (v5) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_24F068E04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24F071890();
  MEMORY[0x270FA5388](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))((char *)&v7 - v5, a1, a2);
  swift_storeEnumTagMultiPayload();
  return sub_24F0718A0();
}

uint64_t sub_24F068EFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_24F071890();
  MEMORY[0x270FA5388](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))((char *)&v8 - v6, a1, a3);
  swift_storeEnumTagMultiPayload();
  return sub_24F0718A0();
}

uint64_t LibraryDispatcherView.init(store:compactViewBuilder:standardViewBuilder:tvViewBuilder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(void *)a9 = sub_24F006060;
  *(void *)(a9 + 8) = result;
  *(unsigned char *)(a9 + 16) = 0;
  *(void *)(a9 + 24) = a3;
  *(void *)(a9 + 32) = a4;
  *(void *)(a9 + 40) = a5;
  *(void *)(a9 + 48) = a6;
  *(void *)(a9 + 56) = a7;
  *(void *)(a9 + 64) = a8;
  return result;
}

uint64_t sub_24F069090()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t LibraryDispatcherView.body.getter@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v50 = a2;
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[2];
  sub_24F0718B0();
  uint64_t v6 = a1[4];
  uint64_t v38 = sub_24F0718B0();
  uint64_t v7 = sub_24F071F00();
  uint64_t v49 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v51 = (char *)&v36 - v8;
  uint64_t v9 = a1[5];
  uint64_t v39 = a1[6];
  uint64_t v40 = v9;
  uint64_t v70 = v9;
  uint64_t v71 = v39;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v37 = a1[7];
  uint64_t v68 = WitnessTable;
  uint64_t v69 = v37;
  uint64_t v11 = swift_getWitnessTable();
  uint64_t v65 = MEMORY[0x263F1BA00];
  uint64_t v66 = v11;
  uint64_t v67 = MEMORY[0x263F1BA00];
  uint64_t v45 = v7;
  uint64_t v12 = swift_getWitnessTable();
  uint64_t v44 = v12;
  unint64_t v43 = sub_24F0068B0();
  *(void *)&long long v72 = v7;
  *((void *)&v72 + 1) = &type metadata for LibraryLayout;
  *(void *)&long long v73 = v12;
  *((void *)&v73 + 1) = v43;
  uint64_t v47 = MEMORY[0x263F1B260];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v48 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v41 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v42 = (uint64_t *)((char *)&v36 - v15);
  long long v16 = v2[3];
  long long v74 = v2[2];
  long long v75 = v16;
  uint64_t v76 = *((void *)v2 + 8);
  long long v17 = v2[1];
  long long v72 = *v2;
  long long v73 = v17;
  uint64_t v18 = v5;
  uint64_t v52 = v5;
  uint64_t v53 = v4;
  uint64_t v19 = v6;
  uint64_t v20 = v39;
  uint64_t v21 = v40;
  uint64_t v54 = v6;
  uint64_t v55 = v40;
  uint64_t v22 = v37;
  uint64_t v56 = v39;
  uint64_t v57 = v37;
  uint64_t v58 = &v72;
  sub_24F071EF0();
  long long v62 = v74;
  long long v63 = v75;
  uint64_t v64 = v76;
  long long v60 = v72;
  long long v61 = v73;
  sub_24F01A880();
  swift_getKeyPath();
  sub_24F071FE0();
  swift_release();
  swift_release();
  __int16 v59 = v60;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v18;
  *(void *)(v23 + 24) = v4;
  *(void *)(v23 + 32) = v19;
  *(void *)(v23 + 40) = v21;
  *(void *)(v23 + 48) = v20;
  *(void *)(v23 + 56) = v22;
  long long v24 = v75;
  *(_OWORD *)(v23 + 96) = v74;
  *(_OWORD *)(v23 + 112) = v24;
  *(void *)(v23 + 128) = v76;
  long long v25 = v73;
  *(_OWORD *)(v23 + 64) = v72;
  *(_OWORD *)(v23 + 80) = v25;
  sub_24F069E04((uint64_t)&v72);
  uint64_t v26 = v41;
  uint64_t v28 = v44;
  uint64_t v27 = v45;
  unint64_t v29 = v43;
  __n128 v30 = v51;
  sub_24F071D00();
  swift_release();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v30, v27);
  *(void *)&long long v60 = v27;
  *((void *)&v60 + 1) = &type metadata for LibraryLayout;
  *(void *)&long long v61 = v28;
  *((void *)&v61 + 1) = v29;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v32 = v42;
  uint64_t v33 = OpaqueTypeMetadata2;
  sub_24F005EE8(v42, v26, OpaqueTypeMetadata2, OpaqueTypeConformance2);
  uint64_t v34 = *(void (**)(char *, uint64_t))(v48 + 8);
  v34(v26, v33);
  sub_24F005EE8(v50, v32, v33, OpaqueTypeConformance2);
  return ((uint64_t (*)(void *, uint64_t))v34)(v32, v33);
}

uint64_t sub_24F069524@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  uint64_t v69 = a8;
  uint64_t v58 = *(void *)(a4 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](a1);
  uint64_t v56 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v55 = (uint64_t *)((char *)&v54 - v18);
  uint64_t v57 = *(void *)(v19 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v22 = (uint64_t *)((char *)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v20);
  long long v60 = (uint64_t *)((char *)&v54 - v23);
  uint64_t v24 = sub_24F0718B0();
  uint64_t v62 = *(void *)(v24 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v24);
  long long v61 = (char *)&v54 - v26;
  uint64_t v54 = *(void *)(a2 - 8);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  unint64_t v29 = (uint64_t *)((char *)&v54 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v27);
  __int16 v59 = (uint64_t *)((char *)&v54 - v30);
  uint64_t v65 = sub_24F0718B0();
  uint64_t v64 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65);
  long long v63 = (char *)&v54 - v31;
  long long v32 = a1[3];
  long long v88 = a1[2];
  long long v89 = v32;
  uint64_t v90 = *((void *)a1 + 8);
  long long v33 = a1[1];
  long long v86 = *a1;
  long long v87 = v33;
  uint64_t v80 = a2;
  uint64_t v81 = a3;
  uint64_t v82 = a4;
  uint64_t v83 = a5;
  uint64_t v66 = a5;
  uint64_t v67 = a6;
  uint64_t v84 = a6;
  uint64_t v85 = a7;
  uint64_t v68 = a7;
  type metadata accessor for LibraryDispatcherView();
  sub_24F01A880();
  swift_getKeyPath();
  sub_24F071FE0();
  swift_release();
  uint64_t v34 = swift_release();
  if ((_BYTE)v86)
  {
    if (v86 == 1)
    {
      (*((void (**)(uint64_t))a1 + 5))(v34);
      uint64_t v35 = v60;
      uint64_t v36 = v67;
      sub_24F005EE8(v60, v22, a3, v67);
      uint64_t v37 = *(void (**)(void *, uint64_t))(v57 + 8);
      v37(v22, a3);
      sub_24F005EE8(v22, v35, a3, v36);
      uint64_t v38 = (uint64_t)v61;
      uint64_t v39 = v66;
      sub_24F068EFC((uint64_t)v22, a2, a3);
      v37(v22, a3);
      uint64_t v40 = v37;
      uint64_t v72 = v39;
      uint64_t v73 = v36;
      swift_getWitnessTable();
      uint64_t v41 = v63;
      uint64_t v42 = v68;
      sub_24F068E04(v38, v24);
      (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v38, v24);
      v40(v60, a3);
    }
    else
    {
      uint64_t v48 = v56;
      (*((void (**)(uint64_t))a1 + 7))(v34);
      uint64_t v49 = v55;
      uint64_t v42 = v68;
      sub_24F005EE8(v55, v48, a4, v68);
      uint64_t v50 = *(void (**)(void *, uint64_t))(v58 + 8);
      v50(v48, a4);
      sub_24F005EE8(v48, v49, a4, v42);
      uint64_t v39 = v66;
      uint64_t v36 = v67;
      uint64_t v78 = v66;
      uint64_t v79 = v67;
      swift_getWitnessTable();
      uint64_t v41 = v63;
      sub_24F068EFC((uint64_t)v48, v24, a4);
      v50(v48, a4);
      v50(v49, a4);
    }
  }
  else
  {
    (*((void (**)(uint64_t))a1 + 3))(v34);
    unint64_t v43 = v59;
    uint64_t v39 = v66;
    sub_24F005EE8(v59, v29, a2, v66);
    uint64_t v44 = *(void (**)(void *, uint64_t))(v54 + 8);
    v44(v29, a2);
    uint64_t v45 = v44;
    sub_24F005EE8(v29, v43, a2, v39);
    uint64_t v46 = (uint64_t)v61;
    uint64_t v36 = v67;
    sub_24F068E04((uint64_t)v29, a2);
    v45(v29, a2);
    uint64_t v47 = v45;
    uint64_t v70 = v39;
    uint64_t v71 = v36;
    swift_getWitnessTable();
    uint64_t v41 = v63;
    uint64_t v42 = v68;
    sub_24F068E04(v46, v24);
    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v46, v24);
    v47(v59, a2);
  }
  uint64_t v76 = v39;
  uint64_t v77 = v36;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v75 = v42;
  uint64_t v51 = v65;
  uint64_t v52 = swift_getWitnessTable();
  sub_24F005EE8(v69, v41, v51, v52);
  return (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v41, v51);
}

uint64_t sub_24F069CE4@<X0>(void *a1@<X8>)
{
  return sub_24F069524(*(long long **)(v1 + 64), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), a1);
}

uint64_t sub_24F069CF8()
{
  return swift_release();
}

uint64_t sub_24F069D7C()
{
  sub_24F007284();
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 136, 7);
}

uint64_t sub_24F069DD0()
{
  return sub_24F069CF8();
}

uint64_t sub_24F069E04(uint64_t a1)
{
  return a1;
}

uint64_t sub_24F069E64()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24F069EB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 64);
}

uint64_t sub_24F069EBC()
{
  sub_24F007284();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_24F069F10(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_24F0072D8();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = a2[3];
  uint64_t v7 = a2[8];
  long long v8 = *((_OWORD *)a2 + 3);
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
  *(_OWORD *)(a1 + 48) = v8;
  *(void *)(a1 + 64) = v7;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_24F069FA8(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_24F0072D8();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  sub_24F007284();
  uint64_t v7 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v7;
  swift_retain();
  swift_release();
  uint64_t v8 = a2[6];
  *(void *)(a1 + 40) = a2[5];
  *(void *)(a1 + 48) = v8;
  swift_retain();
  swift_release();
  uint64_t v9 = a2[8];
  *(void *)(a1 + 56) = a2[7];
  *(void *)(a1 + 64) = v9;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_24F06A078(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  sub_24F007284();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  return a1;
}

uint64_t sub_24F06A0F0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_24F06A138(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for LibraryDispatcherView()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24F06A1A0()
{
  return swift_getOpaqueTypeConformance2();
}

__n128 WorkoutPlanBannerFeature.init(environment:)@<Q0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t WorkoutPlanBannerFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  uint64_t v59 = a1;
  long long v60 = a3;
  uint64_t State = type metadata accessor for WorkoutPlanBannerLoadState();
  MEMORY[0x270FA5388](State - 8);
  uint64_t v9 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3300);
  uint64_t v66 = *(void *)(v61 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v61);
  uint64_t v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v59 - v13;
  uint64_t v15 = type metadata accessor for WorkoutPlanBannerAction();
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v59 - v19;
  uint64_t v21 = v4[1];
  uint64_t v63 = *v4;
  uint64_t v64 = v21;
  uint64_t v62 = v4[2];
  uint64_t v65 = v4[3];
  sub_24F06AA74(a4, (uint64_t)&v59 - v19, (uint64_t (*)(void))type metadata accessor for WorkoutPlanBannerAction);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
  switch(v24(v20, 3, v22))
  {
    case 1u:
      uint64_t v26 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2699A32A8);
      uint64_t v27 = &v14[v26[16]];
      uint64_t v28 = &v14[v26[20]];
      unint64_t v29 = &v14[v26[24]];
      LOBYTE(v67) = 1;
      sub_24F06AADC();
      sub_24F072230();
      sub_24F072130();
      uint64_t v30 = *MEMORY[0x263F39590];
      uint64_t v31 = sub_24F071FD0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 104))(v27, v30, v31);
      uint64_t v32 = *MEMORY[0x263F39570];
      uint64_t v33 = sub_24F071FC0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 104))(v28, v32, v33);
      uint64_t v34 = (void *)swift_allocObject();
      uint64_t v35 = v64;
      v34[2] = v63;
      v34[3] = v35;
      uint64_t v36 = v65;
      v34[4] = v62;
      v34[5] = v36;
      *(void *)unint64_t v29 = &unk_2699A49E8;
      *((void *)v29 + 1) = v34;
      uint64_t v37 = v61;
      (*(void (**)(char *, void, uint64_t))(v66 + 104))(v14, *MEMORY[0x263F39530], v61);
      uint64_t v38 = v60;
      unint64_t v39 = *v60;
      swift_retain();
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v39 = sub_24F0145FC(0, *(void *)(v39 + 16) + 1, 1, v39);
      }
      unint64_t v41 = *(void *)(v39 + 16);
      unint64_t v40 = *(void *)(v39 + 24);
      if (v41 >= v40 >> 1) {
        unint64_t v39 = sub_24F0145FC(v40 > 1, v41 + 1, 1, v39);
      }
      *(void *)(v39 + 16) = v41 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v66 + 32))(v39+ ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80))+ *(void *)(v66 + 72) * v41, v14, v37);
      *uint64_t v38 = v39;
      uint64_t v67 = v63;
      uint64_t v68 = v64;
      uint64_t v69 = v62;
      uint64_t v70 = v65;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v18, 2, 3, v22);
      WorkoutPlanBannerFeature.reduce(localState:sharedState:sideEffects:action:)(v59, a2, v38, v18);
      uint64_t v42 = type metadata accessor for WorkoutPlanBannerAction;
      uint64_t v43 = (uint64_t)v18;
      goto LABEL_17;
    case 2u:
      sub_24F06AA74(a2, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for WorkoutPlanBannerLoadState);
      if (v24(v9, 1, v22) == 1)
      {
        uint64_t v44 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2699A32A8);
        uint64_t v45 = &v12[v44[16]];
        uint64_t v46 = &v12[v44[20]];
        uint64_t v47 = &v12[v44[24]];
        LOBYTE(v67) = 0;
        sub_24F06AADC();
        sub_24F072230();
        sub_24F072150();
        uint64_t v48 = *MEMORY[0x263F39590];
        uint64_t v49 = sub_24F071FD0();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v49 - 8) + 104))(v45, v48, v49);
        uint64_t v50 = (void *)swift_allocObject();
        uint64_t v51 = v64;
        void v50[2] = v63;
        v50[3] = v51;
        uint64_t v52 = v65;
        v50[4] = v62;
        v50[5] = v52;
        *(void *)uint64_t v47 = &unk_2699A49D8;
        *((void *)v47 + 1) = v50;
        uint64_t v53 = *MEMORY[0x263F39578];
        uint64_t v54 = sub_24F071FC0();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v54 - 8) + 104))(v46, v53, v54);
        (*(void (**)(char *, void, uint64_t))(v66 + 104))(v12, *MEMORY[0x263F39530], v61);
        uint64_t v55 = v60;
        unint64_t v56 = *v60;
        swift_retain();
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v56 = sub_24F0145FC(0, *(void *)(v56 + 16) + 1, 1, v56);
        }
        unint64_t v58 = *(void *)(v56 + 16);
        unint64_t v57 = *(void *)(v56 + 24);
        if (v58 >= v57 >> 1) {
          unint64_t v56 = sub_24F0145FC(v57 > 1, v58 + 1, 1, v56);
        }
        *(void *)(v56 + 16) = v58 + 1;
        uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v66 + 32))(v56+ ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80))+ *(void *)(v66 + 72) * v58, v12, v61);
        *uint64_t v55 = v56;
      }
      else
      {
        uint64_t v42 = type metadata accessor for WorkoutPlanBannerLoadState;
        uint64_t v43 = (uint64_t)v9;
LABEL_17:
        uint64_t result = sub_24F06BF14(v43, (uint64_t (*)(void))v42);
      }
      break;
    case 3u:
      sub_24F06BF14(a2, (uint64_t (*)(void))type metadata accessor for WorkoutPlanBannerLoadState);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(a2, 1, 1, v22);
      break;
    default:
      sub_24F06BF14(a2, (uint64_t (*)(void))type metadata accessor for WorkoutPlanBannerLoadState);
      sub_24F00DE1C((uint64_t)v20, a2);
      uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v23 + 56))(a2, 0, 1, v22);
      break;
  }
  return result;
}

uint64_t sub_24F06AA74(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_24F06AADC()
{
  unint64_t result = qword_2699A49C8;
  if (!qword_2699A49C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_2699A49C8);
  }
  return result;
}

uint64_t sub_24F06AB30(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  v4[12] = a1;
  type metadata accessor for WorkoutPlanBannerAction();
  v4[13] = swift_task_alloc();
  v4[14] = sub_24F072120();
  v4[15] = sub_24F072110();
  uint64_t v8 = (uint64_t (*)(void *))((char *)a4 + *a4);
  char v6 = (void *)swift_task_alloc();
  v4[16] = v6;
  *char v6 = v4;
  v6[1] = sub_24F06AC68;
  return v8(v4 + 7);
}

uint64_t sub_24F06AC68()
{
  unint64_t v2 = (void *)*v1;
  v2[17] = v0;
  swift_task_dealloc();
  uint64_t v4 = sub_24F0720F0();
  v2[18] = v4;
  v2[19] = v3;
  if (v0) {
    uint64_t v5 = sub_24F06B6B0;
  }
  else {
    uint64_t v5 = sub_24F06ADC8;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_24F06ADC8()
{
  uint64_t v1 = v0[10];
  unint64_t v2 = __swift_project_boxed_opaque_existential_1(v0 + 7, v1);
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t v4 = swift_task_alloc();
  (*(void (**)(uint64_t, void *, uint64_t))(v3 + 16))(v4, v2, v1);
  v0[5] = swift_getAssociatedTypeWitness();
  v0[6] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1(v0 + 2);
  sub_24F0721B0();
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 7));
  uint64_t v5 = sub_24F072110();
  v0[20] = v5;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 2), v0[5]);
  char v6 = (void *)swift_task_alloc();
  v0[21] = (uint64_t)v6;
  *char v6 = v0;
  v6[1] = sub_24F06AFB8;
  uint64_t v7 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1E88](v0 + 28, v5, v7);
}

uint64_t sub_24F06AFB8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 152);
  uint64_t v3 = *(void *)(v1 + 144);
  return MEMORY[0x270FA2498](sub_24F06B0FC, v3, v2);
}

uint64_t sub_24F06B0FC()
{
  if (*(unsigned char *)(v0 + 224) == 1)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 104);
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
    *(void *)(v0 + 176) = v4;
    uint64_t v5 = *(void *)(v4 - 8);
    char v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    *(void *)(v0 + 184) = v6;
    *(void *)(v0 + 192) = (v5 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    v6(v3, 3, 3, v4);
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 200) = v7;
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4A08);
    *(void *)(v0 + 208) = v8;
    void *v7 = v0;
    v7[1] = sub_24F06B260;
    uint64_t v9 = *(void *)(v0 + 104);
    return MEMORY[0x270F252C8](v9, v8);
  }
}

uint64_t sub_24F06B260()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 104);
  swift_task_dealloc();
  sub_24F06BF14(v2, (uint64_t (*)(void))type metadata accessor for WorkoutPlanBannerAction);
  uint64_t v3 = *(void *)(v1 + 152);
  uint64_t v4 = *(void *)(v1 + 144);
  return MEMORY[0x270FA2498](sub_24F06B3B8, v4, v3);
}

uint64_t sub_24F06B3B8()
{
  (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 184))(*(void *)(v0 + 104), 2, 3, *(void *)(v0 + 176));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 216) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_24F06B46C;
  uint64_t v2 = *(void *)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 104);
  return MEMORY[0x270F252C8](v3, v2);
}

uint64_t sub_24F06B46C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 104);
  swift_task_dealloc();
  sub_24F06BF14(v2, (uint64_t (*)(void))type metadata accessor for WorkoutPlanBannerAction);
  uint64_t v3 = *(void *)(v1 + 152);
  uint64_t v4 = *(void *)(v1 + 144);
  return MEMORY[0x270FA2498](sub_24F06B5C4, v4, v3);
}

uint64_t sub_24F06B5C4()
{
  uint64_t v1 = sub_24F072110();
  v0[20] = v1;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 2), v0[5]);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[21] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = sub_24F06AFB8;
  uint64_t v3 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1E88](v0 + 28, v1, v3);
}

uint64_t sub_24F06B6B0()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24F06B720(uint64_t a1, int *a2)
{
  v2[2] = a1;
  type metadata accessor for WorkoutPlanBannerAction();
  v2[3] = swift_task_alloc();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1EC0F0);
  v2[4] = v4;
  v2[5] = *(void *)(v4 - 8);
  uint64_t v5 = swift_task_alloc();
  v2[6] = v5;
  v2[7] = sub_24F072120();
  v2[8] = sub_24F072110();
  uint64_t v8 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v6 = (void *)swift_task_alloc();
  v2[9] = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_24F06B8B4;
  return v8(v5);
}

uint64_t sub_24F06B8B4()
{
  uint64_t v2 = (void *)*v1;
  v2[10] = v0;
  swift_task_dealloc();
  uint64_t v4 = sub_24F0720F0();
  v2[11] = v4;
  v2[12] = v3;
  if (v0) {
    uint64_t v5 = sub_24F06BCD0;
  }
  else {
    uint64_t v5 = sub_24F06BA14;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_24F06BA14()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  sub_24F00DE84(v0[6], v2);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v1 + 56))(v2, 0, 3, v3);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[13] = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4A08);
  *uint64_t v4 = v0;
  v4[1] = sub_24F06BAF4;
  uint64_t v6 = v0[3];
  return MEMORY[0x270F252C8](v6, v5);
}

uint64_t sub_24F06BAF4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 24);
  swift_task_dealloc();
  sub_24F06BF14(v2, (uint64_t (*)(void))type metadata accessor for WorkoutPlanBannerAction);
  uint64_t v3 = *(void *)(v1 + 96);
  uint64_t v4 = *(void *)(v1 + 88);
  return MEMORY[0x270FA2498](sub_24F06BC4C, v4, v3);
}

uint64_t sub_24F06BC4C()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_release();
  sub_24F00DFB0(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_24F06BCD0()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24F06BD50(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24F013D58;
  return sub_24F06B720(a1, v4);
}

uint64_t objectdestroyTm_1()
{
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_24F06BE58(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_24F027208;
  return sub_24F06AB30(a1, v4, v5, v6);
}

uint64_t sub_24F06BF14(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24F06BF74()
{
  return sub_24F06C04C(&qword_2699A49F0, (void (*)(uint64_t))type metadata accessor for WorkoutPlanBannerAction);
}

uint64_t sub_24F06BFBC()
{
  return sub_24F06C04C(&qword_2699A49F8, (void (*)(uint64_t))type metadata accessor for WorkoutPlanBannerAction);
}

uint64_t sub_24F06C004()
{
  return sub_24F06C04C(&qword_2699A3198, (void (*)(uint64_t))type metadata accessor for WorkoutPlanBannerState);
}

uint64_t sub_24F06C04C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutPlanBannerFeature()
{
  return &type metadata for WorkoutPlanBannerFeature;
}

unsigned char *storeEnumTagSinglePayload for WorkoutPlanBannerFeature.TaskIdentifier(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F06C170);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutPlanBannerFeature.TaskIdentifier()
{
  return &type metadata for WorkoutPlanBannerFeature.TaskIdentifier;
}

unint64_t sub_24F06C1AC()
{
  unint64_t result = qword_2699A4A00;
  if (!qword_2699A4A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4A00);
  }
  return result;
}

__n128 LibraryCanvasContentFeature.init(environment:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v2 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(a2 + 96) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(a2 + 112) = v2;
  *(_OWORD *)(a2 + 128) = *(_OWORD *)(a1 + 128);
  long long v3 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v3;
  long long v4 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(a2 + 80) = v4;
  __n128 result = *(__n128 *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t sub_24F06C22C(uint64_t a1, unsigned __int8 a2)
{
  if (a2 >> 6 && a2 >> 6 != 1) {
    return sub_24F072440();
  }
  sub_24F072440();
  sub_24F072080();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24F06C468()
{
  unsigned __int8 v1 = *v0;
  sub_24F072430();
  sub_24F06C22C((uint64_t)v3, v1);
  return sub_24F072460();
}

uint64_t sub_24F06C4B0(uint64_t a1)
{
  return sub_24F06C22C(a1, *v1);
}

uint64_t sub_24F06C4B8()
{
  unsigned __int8 v1 = *v0;
  sub_24F072430();
  sub_24F06C22C((uint64_t)v3, v1);
  return sub_24F072460();
}

uint64_t sub_24F06C4FC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_24F071308(*a1, *a2);
}

uint64_t LibraryCanvasContentFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, unsigned char *a2, unint64_t *a3, uint64_t *a4)
{
  v209 = a3;
  uint64_t v203 = a1;
  uint64_t State = (void (*)(uint64_t, void, uint64_t))type metadata accessor for LibraryCanvasContentLoadState();
  MEMORY[0x270FA5388](State);
  uint64_t v8 = (char *)&v185 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24F071500();
  uint64_t v205 = *(void *)(v9 - 8);
  unint64_t v206 = v9;
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  v202 = (char *)&v185 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A32F0);
  uint64_t v207 = *(void *)(v12 - 8);
  uint64_t v208 = v12;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v185 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = MEMORY[0x270FA5388]((char *)&v185 - v20);
  uint64_t v23 = (char *)&v185 - v22;
  uint64_t result = MEMORY[0x270FA5388](v21);
  uint64_t v30 = (char *)&v185 - v29;
  uint64_t v31 = *a4;
  long long v32 = v4[7];
  long long v218 = v4[6];
  long long v219 = v32;
  long long v220 = v4[8];
  long long v33 = v4[3];
  long long v214 = v4[2];
  long long v215 = v33;
  long long v34 = v4[5];
  long long v216 = v4[4];
  long long v217 = v34;
  long long v35 = v4[1];
  long long v212 = *v4;
  long long v213 = v35;
  uint64_t v36 = (char *)a2[10];
  switch(v31)
  {
    case 0:
      uint64_t v37 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2699A32A8);
      uint64_t v38 = &v30[v37[16]];
      unint64_t v39 = &v30[v37[20]];
      unint64_t v40 = &v30[v37[24]];
      LOBYTE(v211[0]) = 0x80;
      sub_24F06DA14();
      sub_24F072230();
      sub_24F072130();
      uint64_t v41 = *MEMORY[0x263F39580];
      uint64_t v42 = sub_24F071FD0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 104))(v38, v41, v42);
      uint64_t v43 = (_OWORD *)swift_allocObject();
      long long v44 = v219;
      v43[7] = v218;
      v43[8] = v44;
      v43[9] = v220;
      long long v45 = v215;
      v43[3] = v214;
      v43[4] = v45;
      long long v46 = v217;
      v43[5] = v216;
      v43[6] = v46;
      long long v47 = v213;
      v43[1] = v212;
      void v43[2] = v47;
      *(void *)unint64_t v40 = &unk_2699A4A80;
      *((void *)v40 + 1) = v43;
      uint64_t v48 = *MEMORY[0x263F39578];
      uint64_t v49 = sub_24F071FC0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v49 - 8) + 104))(v39, v48, v49);
      uint64_t v50 = v207;
      (*(void (**)(char *, void, uint64_t))(v207 + 104))(v30, *MEMORY[0x263F39530], v208);
      unint64_t v51 = *v209;
      sub_24F070418((uint64_t)&v212);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v51 = sub_24F014610(0, *(void *)(v51 + 16) + 1, 1, v51);
      }
      unint64_t v53 = *(void *)(v51 + 16);
      unint64_t v52 = *(void *)(v51 + 24);
      if (v53 >= v52 >> 1) {
        unint64_t v51 = sub_24F014610(v52 > 1, v53 + 1, 1, v51);
      }
      *(void *)(v51 + 16) = v53 + 1;
      uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v50 + 32))(v51+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(void *)(v50 + 72) * v53, v30, v208);
LABEL_51:
      unint64_t *v209 = v51;
      break;
    case 1:
      *(void *)&v211[0] = 4;
      uint64_t result = LibraryCanvasContentFeature.reduce(localState:sharedState:sideEffects:action:)(v203, a2);
      break;
    case 2:
      uint64_t v189 = v28;
      uint64_t v190 = v27;
      long long v186 = a2;
      long long v187 = v36;
      uint64_t v191 = v26;
      uint64_t v64 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2699A32A8);
      uint64_t v65 = &v19[v64[16]];
      uint64_t v66 = &v19[v64[20]];
      uint64_t v67 = &v19[v64[24]];
      LOBYTE(v211[0]) = -126;
      unint64_t v206 = sub_24F06DA14();
      sub_24F072230();
      sub_24F072150();
      uint64_t v68 = *MEMORY[0x263F39590];
      uint64_t v69 = sub_24F071FD0();
      uint64_t v70 = *(void *)(v69 - 8);
      uint64_t v71 = *(void (**)(uint64_t, void, uint64_t))(v70 + 104);
      unsigned int v188 = v68;
      uint64_t State = v71;
      uint64_t v205 = v69;
      v202 = (char *)(v70 + 104);
      ((void (*)(char *, uint64_t))v71)(v65, v68);
      uint64_t v72 = *MEMORY[0x263F39570];
      uint64_t v73 = sub_24F071FC0();
      uint64_t v74 = *(void *)(v73 - 8);
      uint64_t v75 = *(void (**)(uint64_t, void, uint64_t))(v74 + 104);
      unsigned int v201 = v72;
      v199 = v75;
      uint64_t v200 = v73;
      uint64_t v198 = v74 + 104;
      ((void (*)(char *, uint64_t))v75)(v66, v72);
      uint64_t v76 = (_OWORD *)swift_allocObject();
      long long v77 = v219;
      v76[7] = v218;
      v76[8] = v77;
      v76[9] = v220;
      long long v78 = v215;
      v76[3] = v214;
      v76[4] = v78;
      long long v79 = v217;
      v76[5] = v216;
      v76[6] = v79;
      long long v80 = v213;
      v76[1] = v212;
      v76[2] = v80;
      *(void *)uint64_t v67 = &unk_2699A4A20;
      *((void *)v67 + 1) = v76;
      uint64_t v81 = v207;
      uint64_t v83 = v207 + 104;
      uint64_t v82 = *(void (**)(void))(v207 + 104);
      unsigned int v196 = *MEMORY[0x263F39530];
      v195 = (void (*)(uint64_t, void, uint64_t))v82;
      v82(v19);
      unint64_t v84 = *v209;
      sub_24F070418((uint64_t)&v212);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v84 = sub_24F014610(0, *(void *)(v84 + 16) + 1, 1, v84);
      }
      unint64_t v86 = *(void *)(v84 + 16);
      unint64_t v85 = *(void *)(v84 + 24);
      uint64_t v197 = v83;
      if (v86 >= v85 >> 1) {
        unint64_t v84 = sub_24F014610(v85 > 1, v86 + 1, 1, v84);
      }
      *(void *)(v84 + 16) = v86 + 1;
      long long v88 = *(void (**)(unint64_t, uint64_t, uint64_t))(v81 + 32);
      uint64_t v87 = v81 + 32;
      unint64_t v193 = (*(unsigned __int8 *)(v87 + 48) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 48);
      long long v194 = v88;
      uint64_t v192 = *(void *)(v87 + 40);
      uint64_t v89 = v208;
      uint64_t v207 = v87;
      v88(v84 + v193 + v192 * v86, (uint64_t)v19, v208);
      uint64_t v90 = v209;
      unint64_t *v209 = v84;
      uint64_t v91 = v189;
      uint64_t v92 = v189 + v64[16];
      uint64_t v93 = v189 + v64[20];
      uint64_t v94 = (void *)(v189 + v64[24]);
      LOBYTE(v211[0]) = -124;
      sub_24F072230();
      sub_24F072150();
      State(v92, v188, v205);
      v199(v93, v201, v200);
      uint64_t v95 = (_OWORD *)swift_allocObject();
      long long v96 = v219;
      v95[7] = v218;
      v95[8] = v96;
      v95[9] = v220;
      long long v97 = v215;
      v95[3] = v214;
      v95[4] = v97;
      long long v98 = v217;
      v95[5] = v216;
      v95[6] = v98;
      long long v99 = v213;
      v95[1] = v212;
      v95[2] = v99;
      void *v94 = &unk_2699A4A30;
      v94[1] = v95;
      v195(v91, v196, v89);
      unint64_t v100 = *v90;
      sub_24F070418((uint64_t)&v212);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v100 = sub_24F014610(0, *(void *)(v100 + 16) + 1, 1, v100);
      }
      unint64_t v102 = *(void *)(v100 + 16);
      unint64_t v101 = *(void *)(v100 + 24);
      if (v102 >= v101 >> 1) {
        unint64_t v100 = sub_24F014610(v101 > 1, v102 + 1, 1, v100);
      }
      *(void *)(v100 + 16) = v102 + 1;
      uint64_t v103 = v208;
      v194(v100 + v193 + v102 * v192, v189, v208);
      unint64_t *v209 = v100;
      uint64_t v104 = v190;
      uint64_t v105 = v190 + v64[16];
      uint64_t v106 = v190 + v64[20];
      uint64_t v107 = (void *)(v190 + v64[24]);
      char v108 = (char)v187;
      LOBYTE(v211[0]) = v187 | 0x40;
      sub_24F072230();
      sub_24F072150();
      State(v105, v188, v205);
      v199(v106, v201, v200);
      uint64_t v109 = swift_allocObject();
      long long v110 = v219;
      *(_OWORD *)(v109 + 112) = v218;
      *(_OWORD *)(v109 + 128) = v110;
      *(_OWORD *)(v109 + 144) = v220;
      long long v111 = v215;
      *(_OWORD *)(v109 + 48) = v214;
      *(_OWORD *)(v109 + 64) = v111;
      long long v112 = v217;
      *(_OWORD *)(v109 + 80) = v216;
      *(_OWORD *)(v109 + 96) = v112;
      long long v113 = v213;
      *(_OWORD *)(v109 + 16) = v212;
      *(_OWORD *)(v109 + 32) = v113;
      *(unsigned char *)(v109 + 160) = v108;
      *uint64_t v107 = &unk_2699A4A40;
      v107[1] = v109;
      v195(v104, v196, v103);
      unint64_t v114 = *v209;
      sub_24F070418((uint64_t)&v212);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v114 = sub_24F014610(0, *(void *)(v114 + 16) + 1, 1, v114);
      }
      unint64_t v116 = *(void *)(v114 + 16);
      unint64_t v115 = *(void *)(v114 + 24);
      if (v116 >= v115 >> 1) {
        unint64_t v114 = sub_24F014610(v115 > 1, v116 + 1, 1, v114);
      }
      *(void *)(v114 + 16) = v116 + 1;
      uint64_t v117 = v208;
      v194(v114 + v193 + v116 * v192, v190, v208);
      unint64_t v118 = v209;
      unint64_t *v209 = v114;
      uint64_t v119 = v191;
      uint64_t v120 = v191 + v64[16];
      uint64_t v121 = v191 + v64[20];
      uint64_t v122 = (void *)(v191 + v64[24]);
      LOBYTE(v211[0]) = -123;
      sub_24F072230();
      sub_24F072150();
      State(v120, *MEMORY[0x263F39580], v205);
      v199(v121, v201, v200);
      uint64_t v123 = (_OWORD *)swift_allocObject();
      long long v124 = v219;
      v123[7] = v218;
      v123[8] = v124;
      v123[9] = v220;
      long long v125 = v215;
      v123[3] = v214;
      v123[4] = v125;
      long long v126 = v217;
      v123[5] = v216;
      v123[6] = v126;
      long long v127 = v213;
      v123[1] = v212;
      v123[2] = v127;
      void *v122 = &unk_2699A4A50;
      v122[1] = v123;
      v195(v119, v196, v117);
      unint64_t v128 = *v118;
      sub_24F070418((uint64_t)&v212);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v128 = sub_24F014610(0, *(void *)(v128 + 16) + 1, 1, v128);
      }
      unint64_t v129 = v186;
      uint64_t v130 = v203;
      unint64_t v132 = *(void *)(v128 + 16);
      unint64_t v131 = *(void *)(v128 + 24);
      if (v132 >= v131 >> 1) {
        unint64_t v128 = sub_24F014610(v131 > 1, v132 + 1, 1, v128);
      }
      *(void *)(v128 + 16) = v132 + 1;
      v194(v128 + v193 + v132 * v192, v191, v208);
      unint64_t *v209 = v128;
      v211[6] = v218;
      v211[7] = v219;
      v211[8] = v220;
      v211[2] = v214;
      v211[3] = v215;
      v211[4] = v216;
      v211[5] = v217;
      v211[0] = v212;
      v211[1] = v213;
      uint64_t v210 = 4;
      uint64_t result = LibraryCanvasContentFeature.reduce(localState:sharedState:sideEffects:action:)(v130, v129);
      break;
    case 3:
      if (a2[8] != 2)
      {
        switch(a2[10])
        {
          case 3:
            uint64_t result = swift_bridgeObjectRelease();
            break;
          default:
            uint64_t v178 = v25;
            char v179 = sub_24F072400();
            uint64_t result = swift_bridgeObjectRelease();
            if ((v179 & 1) == 0)
            {
              LOBYTE(v211[0]) = v36 | 0x40;
              sub_24F06DA14();
              sub_24F072230();
              uint64_t v180 = v207;
              (*(void (**)(uint64_t, void, uint64_t))(v207 + 104))(v178, *MEMORY[0x263F39540], v208);
              unint64_t v51 = *v209;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                unint64_t v51 = sub_24F014610(0, *(void *)(v51 + 16) + 1, 1, v51);
              }
              unint64_t v182 = *(void *)(v51 + 16);
              unint64_t v181 = *(void *)(v51 + 24);
              if (v182 >= v181 >> 1)
              {
                uint64_t v184 = sub_24F014610(v181 > 1, v182 + 1, 1, v51);
                uint64_t v183 = v178;
                unint64_t v51 = v184;
              }
              else
              {
                uint64_t v183 = v178;
              }
              *(void *)(v51 + 16) = v182 + 1;
              uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v180 + 32))(v51+ ((*(unsigned __int8 *)(v180 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v180 + 80))+ *(void *)(v180 + 72) * v182, v183, v208);
              goto LABEL_51;
            }
            break;
        }
      }
      break;
    case 4:
      uint64_t v203 = result;
      uint64_t v133 = (uint64_t)&a2[*(int *)(type metadata accessor for LibraryCanvasContentState() + 28)];
      sub_24F04C8CC(v133, (uint64_t)v8);
      uint64_t result = swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 1:
          swift_bridgeObjectRelease();
          uint64_t v161 = &v8[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2699A3B38) + 64)];
          ((void (*)(void))v218)();
          uint64_t result = (*(uint64_t (**)(char *, unint64_t))(v205 + 8))(v161, v206);
          break;
        case 2:
          sub_24F063418(v133);
          swift_storeEnumTagMultiPayload();
          unint64_t v162 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2699A32A8);
          uint64_t v163 = &v23[v162[16]];
          uint64_t v164 = &v23[v162[20]];
          unsigned int v165 = &v23[v162[24]];
          LOBYTE(v211[0]) = (_BYTE)v36;
          sub_24F06DA14();
          sub_24F072230();
          sub_24F072150();
          uint64_t v166 = *MEMORY[0x263F39590];
          uint64_t v167 = sub_24F071FD0();
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v167 - 8) + 104))(v163, v166, v167);
          uint64_t v168 = (_OWORD *)swift_allocObject();
          long long v169 = v219;
          v168[7] = v218;
          v168[8] = v169;
          v168[9] = v220;
          long long v170 = v215;
          v168[3] = v214;
          v168[4] = v170;
          long long v171 = v217;
          v168[5] = v216;
          v168[6] = v171;
          long long v172 = v213;
          v168[1] = v212;
          v168[2] = v172;
          *(void *)unsigned int v165 = &unk_2699A4A70;
          *((void *)v165 + 1) = v168;
          uint64_t v173 = *MEMORY[0x263F39578];
          uint64_t v174 = sub_24F071FC0();
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v174 - 8) + 104))(v164, v173, v174);
          uint64_t v175 = v207;
          (*(void (**)(char *, void, uint64_t))(v207 + 104))(v23, *MEMORY[0x263F39530], v208);
          unint64_t v51 = *v209;
          sub_24F070418((uint64_t)&v212);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v51 = sub_24F014610(0, *(void *)(v51 + 16) + 1, 1, v51);
          }
          unint64_t v177 = *(void *)(v51 + 16);
          unint64_t v176 = *(void *)(v51 + 24);
          if (v177 >= v176 >> 1) {
            unint64_t v51 = sub_24F014610(v176 > 1, v177 + 1, 1, v51);
          }
          *(void *)(v51 + 16) = v177 + 1;
          uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v175 + 32))(v51+ ((*(unsigned __int8 *)(v175 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v175 + 80))+ *(void *)(v175 + 72) * v177, v23, v208);
          goto LABEL_51;
        case 3:
          return result;
        default:
          uint64_t v134 = *(void *)v8;
          char v135 = (char)v36;
          __int16 v136 = *((_WORD *)v8 + 4);
          uint64_t v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A3B38);
          long long v138 = &v8[*(int *)(v137 + 64)];
          uint64_t v140 = v205;
          unint64_t v139 = v206;
          unint64_t v141 = v202;
          (*(void (**)(char *, char *, unint64_t))(v205 + 32))(v202, v138, v206);
          sub_24F063418(v133);
          uint64_t v142 = v133 + *(int *)(v137 + 64);
          *(void *)uint64_t v133 = v134;
          *(_WORD *)(v133 + 8) = v136;
          (*(void (**)(uint64_t, char *, unint64_t))(v140 + 16))(v142, v141, v139);
          swift_storeEnumTagMultiPayload();
          uint64_t v143 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2699A32A8);
          uint64_t v144 = v203;
          uint64_t v145 = v203 + v143[16];
          uint64_t v146 = v203 + v143[20];
          uint64_t v147 = (void *)(v203 + v143[24]);
          LOBYTE(v211[0]) = v135;
          sub_24F06DA14();
          sub_24F072230();
          sub_24F072150();
          uint64_t v148 = *MEMORY[0x263F39590];
          uint64_t v149 = sub_24F071FD0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v149 - 8) + 104))(v145, v148, v149);
          long long v150 = (_OWORD *)swift_allocObject();
          long long v151 = v219;
          v150[7] = v218;
          v150[8] = v151;
          v150[9] = v220;
          long long v152 = v215;
          v150[3] = v214;
          v150[4] = v152;
          long long v153 = v217;
          v150[5] = v216;
          v150[6] = v153;
          long long v154 = v213;
          v150[1] = v212;
          v150[2] = v154;
          *uint64_t v147 = &unk_2699A4A60;
          v147[1] = v150;
          uint64_t v155 = *MEMORY[0x263F39578];
          uint64_t v156 = sub_24F071FC0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v156 - 8) + 104))(v146, v155, v156);
          uint64_t v157 = v207;
          (*(void (**)(uint64_t, void, uint64_t))(v207 + 104))(v144, *MEMORY[0x263F39530], v208);
          unint64_t v158 = *v209;
          sub_24F070418((uint64_t)&v212);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v158 = sub_24F014610(0, *(void *)(v158 + 16) + 1, 1, v158);
          }
          unint64_t v160 = *(void *)(v158 + 16);
          unint64_t v159 = *(void *)(v158 + 24);
          if (v160 >= v159 >> 1) {
            unint64_t v158 = sub_24F014610(v159 > 1, v160 + 1, 1, v158);
          }
          *(void *)(v158 + 16) = v160 + 1;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v157 + 32))(v158+ ((*(unsigned __int8 *)(v157 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v157 + 80))+ *(void *)(v157 + 72) * v160, v203, v208);
          unint64_t *v209 = v158;
          uint64_t result = (*(uint64_t (**)(char *, unint64_t))(v205 + 8))(v141, v206);
          break;
      }
      break;
    default:
      uint64_t v54 = type metadata accessor for LibraryCanvasContentState();
      unint64_t v55 = v206;
      unint64_t v56 = *(void (**)(char *, char *, unint64_t))(v205 + 16);
      v56(v36, &a2[*(int *)(v54 + 32)], v206);
      char v58 = a2[9];
      uint64_t v59 = (uint64_t)&a2[*(int *)(v54 + 28)];
      LOBYTE(v211[0]) = a2[8];
      char v57 = v211[0];
      BYTE1(v211[0]) = v58;
      uint64_t v60 = swift_bridgeObjectRetain();
      char v61 = sub_24F04C404(v60, (unsigned __int8 *)v211, v36);
      sub_24F063418(v59);
      uint64_t v62 = v59 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2699A3B38) + 64);
      *(void *)uint64_t v59 = v31;
      *(unsigned char *)(v59 + 8) = v57;
      *(unsigned char *)(v59 + 9) = v58;
      v56((char *)v62, v36, v55);
      uint64_t v63 = swift_storeEnumTagMultiPayload();
      if (v61) {
        ((void (*)(uint64_t))v218)(v63);
      }
      uint64_t result = (*(uint64_t (**)(char *, unint64_t))(v205 + 8))(v36, v206);
      break;
  }
  return result;
}

unint64_t sub_24F06DA14()
{
  unint64_t result = qword_2699A4A10;
  if (!qword_2699A4A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_2699A4A10);
  }
  return result;
}

uint64_t sub_24F06DA68(uint64_t a1, uint64_t a2)
{
  v2[2] = sub_24F072120();
  v2[3] = sub_24F072110();
  unsigned int v6 = (uint64_t (*)(void))(*(void *)(a2 + 64) + **(int **)(a2 + 64));
  long long v4 = (void *)swift_task_alloc();
  v2[4] = v4;
  *long long v4 = v2;
  v4[1] = sub_24F06DB50;
  return v6();
}

uint64_t sub_24F06DB50()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_24F0720F0();
  if (v0) {
    long long v4 = sub_24F071460;
  }
  else {
    long long v4 = sub_24F014784;
  }
  return MEMORY[0x270FA2498](v4, v3, v2);
}

uint64_t sub_24F06DCAC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = sub_24F072120();
  *(void *)(v2 + 40) = sub_24F072110();
  *(_OWORD *)(v2 + 48) = *(_OWORD *)a2;
  uint64_t v6 = (uint64_t (*)(void))(*(void *)(a2 + 112) + **(int **)(a2 + 112));
  long long v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 64) = v4;
  *long long v4 = v2;
  v4[1] = sub_24F06DDA0;
  return v6();
}

uint64_t sub_24F06DDA0()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0) {
    MEMORY[0x2533531E0](v0);
  }
  uint64_t v6 = (uint64_t (*)(void))(*(void *)(v2 + 48) + **(int **)(v2 + 48));
  long long v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 72) = v4;
  *long long v4 = v3;
  v4[1] = sub_24F06DF18;
  return v6();
}

uint64_t sub_24F06DF18(uint64_t a1)
{
  long long v4 = (void *)*v2;
  v4[10] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = sub_24F0720F0();
    return MEMORY[0x270FA2498](sub_24F06E230, v6, v5);
  }
  else
  {
    v4[2] = a1;
    v4[11] = a1;
    uint64_t v7 = (void *)swift_task_alloc();
    v4[12] = v7;
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4AA8);
    void *v7 = v4;
    v7[1] = sub_24F06E0D0;
    return MEMORY[0x270F252C8](v4 + 2, v8);
  }
}

uint64_t sub_24F06E0D0()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v1 = sub_24F0720F0();
  return MEMORY[0x270FA2498](sub_24F0544E0, v1, v0);
}

uint64_t sub_24F06E230()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24F06E294(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = sub_24F072120();
  *(void *)(v2 + 40) = sub_24F072110();
  *(_OWORD *)(v2 + 48) = *(_OWORD *)a2;
  uint64_t v6 = (uint64_t (*)(void))(*(void *)(a2 + 112) + **(int **)(a2 + 112));
  long long v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 64) = v4;
  *long long v4 = v2;
  v4[1] = sub_24F06E388;
  return v6();
}

uint64_t sub_24F06E388()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0) {
    MEMORY[0x2533531E0](v0);
  }
  uint64_t v6 = (uint64_t (*)(void))(*(void *)(v2 + 48) + **(int **)(v2 + 48));
  long long v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 72) = v4;
  *long long v4 = v3;
  v4[1] = sub_24F06E500;
  return v6();
}

uint64_t sub_24F06E500(uint64_t a1)
{
  long long v4 = (void *)*v2;
  v4[10] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = sub_24F0720F0();
    return MEMORY[0x270FA2498](sub_24F07145C, v6, v5);
  }
  else
  {
    v4[2] = a1;
    v4[11] = a1;
    uint64_t v7 = (void *)swift_task_alloc();
    v4[12] = v7;
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4AA8);
    void *v7 = v4;
    v7[1] = sub_24F06E6B8;
    return MEMORY[0x270F252C8](v4 + 2, v8);
  }
}

uint64_t sub_24F06E6B8()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v1 = sub_24F0720F0();
  return MEMORY[0x270FA2498](sub_24F056268, v1, v0);
}

uint64_t sub_24F06E818(uint64_t a1, uint64_t a2)
{
  v2[13] = a1;
  v2[14] = sub_24F072120();
  v2[15] = sub_24F072110();
  uint64_t v6 = (uint64_t (*)(void *))(*(void *)(a2 + 32) + **(int **)(a2 + 32));
  long long v4 = (void *)swift_task_alloc();
  v2[16] = v4;
  *long long v4 = v2;
  v4[1] = sub_24F06E914;
  return v6(v2 + 2);
}

uint64_t sub_24F06E914()
{
  uint64_t v2 = (void *)*v1;
  v2[17] = v0;
  swift_task_dealloc();
  uint64_t v4 = sub_24F0720F0();
  v2[18] = v4;
  v2[19] = v3;
  if (v0) {
    uint64_t v5 = sub_24F06F0CC;
  }
  else {
    uint64_t v5 = sub_24F06EA74;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_24F06EA74()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t v4 = swift_task_alloc();
  (*(void (**)(uint64_t, void *, uint64_t))(v3 + 16))(v4, v2, v1);
  v0[10] = swift_getAssociatedTypeWitness();
  v0[11] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1(v0 + 7);
  sub_24F0721B0();
  swift_task_dealloc();
  uint64_t v5 = sub_24F072110();
  v0[20] = v5;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 7), v0[10]);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[21] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_24F06EC58;
  uint64_t v7 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1E88](v0 + 23, v5, v7);
}

uint64_t sub_24F06EC58()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 152);
  uint64_t v3 = *(void *)(v1 + 144);
  return MEMORY[0x270FA2498](sub_24F06ED9C, v3, v2);
}

uint64_t sub_24F06ED9C()
{
  if (*(unsigned char *)(v0 + 184) == 1)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    *(void *)(v0 + 96) = 4;
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v3;
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4AA8);
    *uint64_t v3 = v0;
    v3[1] = sub_24F06EEC0;
    return MEMORY[0x270F252C8](v0 + 96, v4);
  }
}

uint64_t sub_24F06EEC0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 152);
  uint64_t v3 = *(void *)(v1 + 144);
  return MEMORY[0x270FA2498](sub_24F06EFE0, v3, v2);
}

uint64_t sub_24F06EFE0()
{
  uint64_t v1 = sub_24F072110();
  v0[20] = v1;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 7), v0[10]);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[21] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = sub_24F06EC58;
  uint64_t v3 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1E88](v0 + 23, v1, v3);
}

uint64_t sub_24F06F0CC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24F06F130(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4AB8);
  *(void *)(v2 + 24) = v4;
  *(void *)(v2 + 32) = *(void *)(v4 - 8);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v2 + 40) = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2699A4AC0);
  *(void *)(v2 + 48) = v6;
  *(void *)(v2 + 56) = *(void *)(v6 - 8);
  *(void *)(v2 + 64) = swift_task_alloc();
  *(void *)(v2 + 72) = sub_24F072120();
  *(void *)(v2 + 80) = sub_24F072110();
  uint64_t v7 = *(int **)(a2 + 16);
  *(_OWORD *)(v2 + 88) = *(_OWORD *)(a2 + 128);
  uint64_t v10 = (uint64_t (*)(uint64_t))((char *)v7 + *v7);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 104) = v8;
  void *v8 = v2;
  v8[1] = sub_24F06F2F0;
  return v10(v5);
}

uint64_t sub_24F06F2F0()
{
  uint64_t v2 = (void *)*v1;
  v2[14] = v0;
  swift_task_dealloc();
  uint64_t v4 = sub_24F0720F0();
  v2[15] = v4;
  v2[16] = v3;
  if (v0) {
    uint64_t v5 = sub_24F06F7E0;
  }
  else {
    uint64_t v5 = sub_24F06F450;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_24F06F450()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[3];
  sub_24F072180();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = sub_24F072110();
  v0[17] = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[18] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_24F06F544;
  uint64_t v6 = v0[6];
  uint64_t v7 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1F68](v0 + 2, v4, v7, v6);
}

uint64_t sub_24F06F544()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 128);
  uint64_t v3 = *(void *)(v1 + 120);
  return MEMORY[0x270FA2498](sub_24F06F688, v3, v2);
}

uint64_t sub_24F06F688()
{
  if (*(void *)(v0 + 16))
  {
    (*(void (**)(void))(v0 + 88))(*(void *)(v0 + 16));
    swift_bridgeObjectRelease();
    uint64_t v1 = sub_24F072110();
    *(void *)(v0 + 136) = v1;
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_24F06F544;
    uint64_t v3 = *(void *)(v0 + 48);
    uint64_t v4 = MEMORY[0x263F8F500];
    return MEMORY[0x270FA1F68](v0 + 16, v1, v4, v3);
  }
  else
  {
    (*(void (**)(void, void))(*(void *)(v0 + 56) + 8))(*(void *)(v0 + 64), *(void *)(v0 + 48));
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_24F06F7E0()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24F06F85C(uint64_t a1, uint64_t a2, char a3)
{
  *(unsigned char *)(v3 + 194) = a3;
  *(void *)(v3 + 112) = a1;
  *(void *)(v3 + 120) = sub_24F072120();
  *(void *)(v3 + 128) = sub_24F072110();
  uint64_t v7 = (uint64_t (*)(uint64_t))(*(void *)(a2 + 48) + **(int **)(a2 + 48));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 136) = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_24F06F95C;
  return v7(v3 + 16);
}

uint64_t sub_24F06F95C()
{
  uint64_t v2 = (void *)*v1;
  v2[18] = v0;
  swift_task_dealloc();
  uint64_t v4 = sub_24F0720F0();
  v2[19] = v4;
  v2[20] = v3;
  if (v0) {
    uint64_t v5 = sub_24F051E18;
  }
  else {
    uint64_t v5 = sub_24F06FABC;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_24F06FABC()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t v4 = swift_task_alloc();
  (*(void (**)(uint64_t, void *, uint64_t))(v3 + 16))(v4, v2, v1);
  v0[10] = swift_getAssociatedTypeWitness();
  v0[11] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1(v0 + 7);
  sub_24F0721B0();
  swift_task_dealloc();
  uint64_t v5 = sub_24F072110();
  v0[21] = v5;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 7), v0[10]);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[22] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_24F06FCA0;
  uint64_t v7 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1E88](v0 + 24, v5, v7);
}

uint64_t sub_24F06FCA0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 160);
  uint64_t v3 = *(void *)(v1 + 152);
  return MEMORY[0x270FA2498](sub_24F06FDE4, v3, v2);
}

uint64_t sub_24F06FDE4()
{
  uint64_t v14 = v0;
  if (*(unsigned char *)(v0 + 192) == 1)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
    if (qword_2699A2CE0 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_24F071570();
    __swift_project_value_buffer(v1, (uint64_t)qword_2699B32B0);
    uint64_t v2 = sub_24F071550();
    os_log_type_t v3 = sub_24F0721E0();
    if (os_log_type_enabled(v2, v3))
    {
      char v4 = *(unsigned char *)(v0 + 194);
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      uint64_t v6 = swift_slowAlloc();
      uint64_t v13 = v6;
      *(_DWORD *)uint64_t v5 = 136315138;
      *(unsigned char *)(v0 + 193) = v4;
      uint64_t v7 = sub_24F072060();
      *(void *)(v0 + 96) = sub_24F070CB0(v7, v8, &v13);
      sub_24F072200();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24F000000, v2, v3, "finished items updated observation for %s", v5, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533533D0](v6, -1, -1);
      MEMORY[0x2533533D0](v5, -1, -1);
    }

    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
  else
  {
    *(void *)(v0 + 104) = 4;
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 184) = v11;
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4AA8);
    void *v11 = v0;
    v11[1] = sub_24F070078;
    return MEMORY[0x270F252C8](v0 + 104, v12);
  }
}

uint64_t sub_24F070078()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 160);
  uint64_t v3 = *(void *)(v1 + 152);
  return MEMORY[0x270FA2498](sub_24F070198, v3, v2);
}

uint64_t sub_24F070198()
{
  uint64_t v1 = sub_24F072110();
  v0[21] = v1;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 7), v0[10]);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[22] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = sub_24F06FCA0;
  uint64_t v3 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1E88](v0 + 24, v1, v3);
}

uint64_t sub_24F070284(uint64_t a1, uint64_t a2)
{
  v2[2] = sub_24F072120();
  v2[3] = sub_24F072110();
  uint64_t v6 = (uint64_t (*)(void))(*(void *)(a2 + 80) + **(int **)(a2 + 80));
  char v4 = (void *)swift_task_alloc();
  v2[4] = v4;
  *char v4 = v2;
  v4[1] = sub_24F013A4C;
  return v6();
}

uint64_t sub_24F070374()
{
  return objectdestroyTm_2(160);
}

uint64_t sub_24F07037C(uint64_t a1)
{
  char v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *char v4 = v2;
  v4[1] = sub_24F027208;
  return sub_24F06E818(a1, v1 + 16);
}

uint64_t sub_24F070418(uint64_t a1)
{
  return a1;
}

uint64_t sub_24F0704C4()
{
  return objectdestroyTm_2(160);
}

uint64_t sub_24F0704CC(uint64_t a1)
{
  char v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *char v4 = v2;
  v4[1] = sub_24F027208;
  return sub_24F06F130(a1, v1 + 16);
}

uint64_t sub_24F070568()
{
  return objectdestroyTm_2(161);
}

uint64_t sub_24F070570(uint64_t a1)
{
  uint64_t v4 = v1 + 16;
  char v5 = *(unsigned char *)(v1 + 160);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_24F027208;
  return sub_24F06F85C(a1, v4, v5);
}

uint64_t sub_24F07061C()
{
  return objectdestroyTm_2(160);
}

uint64_t sub_24F070624(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24F027208;
  return sub_24F070284(a1, v1 + 16);
}

uint64_t sub_24F0706C0()
{
  return objectdestroyTm_2(160);
}

uint64_t sub_24F0706C8(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24F027208;
  return sub_24F06E294(a1, v1 + 16);
}

uint64_t sub_24F070764()
{
  return objectdestroyTm_2(160);
}

uint64_t sub_24F07076C(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24F013D58;
  return sub_24F06DCAC(a1, v1 + 16);
}

uint64_t sub_24F070808()
{
  return objectdestroyTm_2(160);
}

uint64_t objectdestroyTm_2(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v1, a1, 7);
}

uint64_t sub_24F070894(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24F027208;
  return sub_24F06DA68(a1, v1 + 16);
}

unint64_t sub_24F070934()
{
  unint64_t result = qword_2699A4A88;
  if (!qword_2699A4A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4A88);
  }
  return result;
}

unint64_t sub_24F07098C()
{
  unint64_t result = qword_2699A4A90;
  if (!qword_2699A4A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4A90);
  }
  return result;
}

unint64_t sub_24F0709E4()
{
  unint64_t result = qword_2699A4A98;
  if (!qword_2699A4A98)
  {
    type metadata accessor for LibraryCanvasContentState();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4A98);
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryCanvasContentFeature()
{
  return &type metadata for LibraryCanvasContentFeature;
}

uint64_t getEnumTagSinglePayload for LibraryCanvasContentFeature.TaskIdentifier(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x1E) {
    goto LABEL_17;
  }
  if (a2 + 226 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 226) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 226;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 226;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 226;
    }
  }
LABEL_17:
  unsigned int v6 = ((*a1 >> 1) & 0x1C | (*a1 >> 6)) ^ 0x1F;
  if (v6 >= 0x1D) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

unsigned char *storeEnumTagSinglePayload for LibraryCanvasContentFeature.TaskIdentifier(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 226 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 226) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x1E) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x1D)
  {
    unsigned int v6 = ((a2 - 30) >> 8) + 1;
    *unint64_t result = a2 - 30;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24F070BC4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = 8 * (((-a2 >> 2) & 7) - 8 * a2);
        break;
    }
  }
  return result;
}

uint64_t sub_24F070BEC(unsigned char *a1)
{
  int v1 = (char)*a1;
  if (v1 >= 0) {
    return *a1 >> 6;
  }
  else {
    return (v1 & 7u) + 2;
  }
}

unsigned char *sub_24F070C08(unsigned char *result)
{
  *result &= 0x3Fu;
  return result;
}

unsigned char *sub_24F070C18(unsigned char *result, unsigned int a2)
{
  if (a2 < 2) {
    *unint64_t result = *result & 7 | ((_BYTE)a2 << 6);
  }
  else {
    *unint64_t result = (a2 + 6) & 7 | 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryCanvasContentFeature.TaskIdentifier()
{
  return &type metadata for LibraryCanvasContentFeature.TaskIdentifier;
}

unint64_t sub_24F070C5C()
{
  unint64_t result = qword_2699A4AA0;
  if (!qword_2699A4AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2699A4AA0);
  }
  return result;
}

uint64_t sub_24F070CB0(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_24F070D84(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_24F071400((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_24F071400((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_24F070D84(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_24F072210();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_24F070F40(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_24F072270();
  if (!v8)
  {
    sub_24F072290();
    __break(1u);
LABEL_17:
    uint64_t result = sub_24F0722D0();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_24F070F40(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_24F070FD8(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_24F0711B8(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_24F0711B8(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_24F070FD8(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_24F071150(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_24F072240();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_24F072290();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_24F0720A0();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_24F0722D0();
    __break(1u);
LABEL_14:
    uint64_t result = sub_24F072290();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_24F071150(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4AB0);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_24F0711B8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2699A4AB0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_24F0722D0();
  __break(1u);
  return result;
}

uint64_t sub_24F071308(unsigned __int8 a1, unsigned __int8 a2)
{
  if (!(a1 >> 6))
  {
    if (a2 <= 0x3Fu) {
      return sub_24F02D65C(a1, a2);
    }
    return 0;
  }
  if (a1 >> 6 == 1)
  {
    if ((a2 & 0xC0) == 0x40)
    {
      a1 &= 0x3Fu;
      a2 &= 0x3Fu;
      return sub_24F02D65C(a1, a2);
    }
    return 0;
  }
  switch(a1)
  {
    case 0x81u:
      if (a2 != 129) {
        return 0;
      }
      uint64_t result = 1;
      break;
    case 0x82u:
      if (a2 != 130) {
        return 0;
      }
      uint64_t result = 1;
      break;
    case 0x83u:
      if (a2 != 131) {
        return 0;
      }
      uint64_t result = 1;
      break;
    case 0x84u:
      if (a2 != 132) {
        return 0;
      }
      uint64_t result = 1;
      break;
    case 0x85u:
      if (a2 != 133) {
        return 0;
      }
      uint64_t result = 1;
      break;
    default:
      if (a2 != 128) {
        return 0;
      }
      uint64_t result = 1;
      break;
  }
  return result;
}

uint64_t sub_24F071400(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t OfflineEnvironment.init(fetchSectionDescriptor:makeArchivedSessionsUpdatedStream:makeAssetBundleUpdatedStream:refreshCanvas:reloadWorkouts:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  a9[8] = a10;
  a9[9] = a11;
  return result;
}

ValueMetadata *type metadata accessor for OfflineEnvironment()
{
  return &type metadata for OfflineEnvironment;
}

uint64_t sub_24F071490()
{
  return MEMORY[0x270EEFF68]();
}

uint64_t sub_24F0714A0()
{
  return MEMORY[0x270EF0C68]();
}

uint64_t sub_24F0714B0()
{
  return MEMORY[0x270EF0CB0]();
}

uint64_t sub_24F0714C0()
{
  return MEMORY[0x270EF0D08]();
}

uint64_t sub_24F0714D0()
{
  return MEMORY[0x270EF0D18]();
}

uint64_t sub_24F0714E0()
{
  return MEMORY[0x270EF0EE0]();
}

uint64_t sub_24F0714F0()
{
  return MEMORY[0x270EF0F30]();
}

uint64_t sub_24F071500()
{
  return MEMORY[0x270EF10A8]();
}

uint64_t sub_24F071510()
{
  return MEMORY[0x270F2B2F0]();
}

uint64_t sub_24F071520()
{
  return MEMORY[0x270F2B2F8]();
}

uint64_t sub_24F071530()
{
  return MEMORY[0x270F2B078]();
}

uint64_t sub_24F071540()
{
  return MEMORY[0x270FA2C78]();
}

uint64_t sub_24F071550()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_24F071560()
{
  return MEMORY[0x270FA2E08]();
}

uint64_t sub_24F071570()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_24F071580()
{
  return MEMORY[0x270EFECF8]();
}

uint64_t sub_24F071590()
{
  return MEMORY[0x270EFED40]();
}

uint64_t sub_24F0715A0()
{
  return MEMORY[0x270EFED70]();
}

uint64_t sub_24F0715B0()
{
  return MEMORY[0x270EFED78]();
}

uint64_t sub_24F0715C0()
{
  return MEMORY[0x270EFEDF0]();
}

uint64_t sub_24F0715D0()
{
  return MEMORY[0x270EFEDF8]();
}

uint64_t sub_24F0715E0()
{
  return MEMORY[0x270EFEF30]();
}

uint64_t sub_24F0715F0()
{
  return MEMORY[0x270EFEFD0]();
}

uint64_t sub_24F071600()
{
  return MEMORY[0x270EFF108]();
}

uint64_t sub_24F071610()
{
  return MEMORY[0x270EFF3B8]();
}

uint64_t sub_24F071620()
{
  return MEMORY[0x270EFF3F8]();
}

uint64_t sub_24F071630()
{
  return MEMORY[0x270EFF408]();
}

uint64_t sub_24F071640()
{
  return MEMORY[0x270EFF418]();
}

uint64_t sub_24F071650()
{
  return MEMORY[0x270EFF598]();
}

uint64_t sub_24F071660()
{
  return MEMORY[0x270EFF6D0]();
}

uint64_t sub_24F071670()
{
  return MEMORY[0x270EFF700]();
}

uint64_t sub_24F071680()
{
  return MEMORY[0x270EFF888]();
}

uint64_t sub_24F071690()
{
  return MEMORY[0x270EFF898]();
}

uint64_t sub_24F0716A0()
{
  return MEMORY[0x270EFF940]();
}

uint64_t sub_24F0716B0()
{
  return MEMORY[0x270EFFA08]();
}

uint64_t sub_24F0716C0()
{
  return MEMORY[0x270EFFA10]();
}

uint64_t sub_24F0716D0()
{
  return MEMORY[0x270EFFA68]();
}

uint64_t sub_24F0716E0()
{
  return MEMORY[0x270F001A8]();
}

uint64_t sub_24F0716F0()
{
  return MEMORY[0x270F00220]();
}

uint64_t sub_24F071700()
{
  return MEMORY[0x270F00268]();
}

uint64_t sub_24F071710()
{
  return MEMORY[0x270F00270]();
}

uint64_t sub_24F071720()
{
  return MEMORY[0x270F00560]();
}

uint64_t sub_24F071730()
{
  return MEMORY[0x270F00578]();
}

uint64_t sub_24F071740()
{
  return MEMORY[0x270F00688]();
}

uint64_t sub_24F071750()
{
  return MEMORY[0x270F00698]();
}

uint64_t sub_24F071760()
{
  return MEMORY[0x270F00860]();
}

uint64_t sub_24F071770()
{
  return MEMORY[0x270F00868]();
}

uint64_t sub_24F071780()
{
  return MEMORY[0x270F00870]();
}

uint64_t sub_24F071790()
{
  return MEMORY[0x270F008D0]();
}

uint64_t sub_24F0717A0()
{
  return MEMORY[0x270F008D8]();
}

uint64_t sub_24F0717B0()
{
  return MEMORY[0x270F00950]();
}

uint64_t sub_24F0717C0()
{
  return MEMORY[0x270F00D38]();
}

uint64_t sub_24F0717D0()
{
  return MEMORY[0x270F00D80]();
}

uint64_t sub_24F0717E0()
{
  return MEMORY[0x270F00D90]();
}

uint64_t sub_24F0717F0()
{
  return MEMORY[0x270F00E50]();
}

uint64_t sub_24F071800()
{
  return MEMORY[0x270F00E68]();
}

uint64_t sub_24F071810()
{
  return MEMORY[0x270F00E70]();
}

uint64_t sub_24F071820()
{
  return MEMORY[0x270F00E88]();
}

uint64_t sub_24F071830()
{
  return MEMORY[0x270F00E98]();
}

uint64_t sub_24F071840()
{
  return MEMORY[0x270F01050]();
}

uint64_t sub_24F071850()
{
  return MEMORY[0x270F01070]();
}

uint64_t sub_24F071860()
{
  return MEMORY[0x270F01510]();
}

uint64_t sub_24F071870()
{
  return MEMORY[0x270F01520]();
}

uint64_t sub_24F071880()
{
  return MEMORY[0x270F017E8]();
}

uint64_t sub_24F071890()
{
  return MEMORY[0x270F017F8]();
}

uint64_t sub_24F0718A0()
{
  return MEMORY[0x270F01800]();
}

uint64_t sub_24F0718B0()
{
  return MEMORY[0x270F01818]();
}

uint64_t sub_24F0718C0()
{
  return MEMORY[0x270F01940]();
}

uint64_t sub_24F0718D0()
{
  return MEMORY[0x270F01950]();
}

uint64_t sub_24F0718E0()
{
  return MEMORY[0x270F01CB0]();
}

uint64_t sub_24F0718F0()
{
  return MEMORY[0x270F01D20]();
}

uint64_t sub_24F071900()
{
  return MEMORY[0x270F01D38]();
}

uint64_t sub_24F071910()
{
  return MEMORY[0x270F02080]();
}

uint64_t sub_24F071920()
{
  return MEMORY[0x270F020E8]();
}

uint64_t sub_24F071930()
{
  return MEMORY[0x270F020F0]();
}

uint64_t sub_24F071940()
{
  return MEMORY[0x270F02100]();
}

uint64_t sub_24F071950()
{
  return MEMORY[0x270F02368]();
}

uint64_t sub_24F071960()
{
  return MEMORY[0x270F02460]();
}

uint64_t sub_24F071970()
{
  return MEMORY[0x270F02738]();
}

uint64_t sub_24F071980()
{
  return MEMORY[0x270F02748]();
}

uint64_t sub_24F071990()
{
  return MEMORY[0x270F029E0]();
}

uint64_t sub_24F0719A0()
{
  return MEMORY[0x270F029F0]();
}

uint64_t sub_24F0719B0()
{
  return MEMORY[0x270F029F8]();
}

uint64_t sub_24F0719C0()
{
  return MEMORY[0x270F02A00]();
}

uint64_t sub_24F0719D0()
{
  return MEMORY[0x270F02A20]();
}

uint64_t sub_24F0719E0()
{
  return MEMORY[0x270F02A30]();
}

uint64_t sub_24F0719F0()
{
  return MEMORY[0x270F02A38]();
}

uint64_t sub_24F071A00()
{
  return MEMORY[0x270F02A48]();
}

uint64_t sub_24F071A10()
{
  return MEMORY[0x270F02A60]();
}

uint64_t sub_24F071A20()
{
  return MEMORY[0x270F02A68]();
}

uint64_t sub_24F071A30()
{
  return MEMORY[0x270F02A78]();
}

uint64_t sub_24F071A40()
{
  return MEMORY[0x270F02B48]();
}

uint64_t sub_24F071A50()
{
  return MEMORY[0x270F02BC0]();
}

uint64_t sub_24F071A60()
{
  return MEMORY[0x270F02BE8]();
}

uint64_t sub_24F071A70()
{
  return MEMORY[0x270F02C10]();
}

uint64_t sub_24F071A80()
{
  return MEMORY[0x270F02C88]();
}

uint64_t sub_24F071A90()
{
  return MEMORY[0x270F02C98]();
}

uint64_t sub_24F071AA0()
{
  return MEMORY[0x270F02CB0]();
}

uint64_t sub_24F071AB0()
{
  return MEMORY[0x270F02CD0]();
}

uint64_t sub_24F071AC0()
{
  return MEMORY[0x270F02CE8]();
}

uint64_t sub_24F071AD0()
{
  return MEMORY[0x270F02D08]();
}

uint64_t sub_24F071AE0()
{
  return MEMORY[0x270F02F28]();
}

uint64_t sub_24F071AF0()
{
  return MEMORY[0x270F03010]();
}

uint64_t sub_24F071B00()
{
  return MEMORY[0x270F03250]();
}

uint64_t sub_24F071B10()
{
  return MEMORY[0x270F2B440]();
}

uint64_t sub_24F071B20()
{
  return MEMORY[0x270F2B448]();
}

uint64_t sub_24F071B30()
{
  return MEMORY[0x270F2B458]();
}

uint64_t sub_24F071B40()
{
  return MEMORY[0x270F032C0]();
}

uint64_t sub_24F071B50()
{
  return MEMORY[0x270F032D0]();
}

uint64_t sub_24F071B60()
{
  return MEMORY[0x270F03340]();
}

uint64_t sub_24F071B70()
{
  return MEMORY[0x270F03360]();
}

uint64_t sub_24F071B80()
{
  return MEMORY[0x270F033B0]();
}

uint64_t sub_24F071B90()
{
  return MEMORY[0x270F033E8]();
}

uint64_t sub_24F071BA0()
{
  return MEMORY[0x270F03430]();
}

uint64_t sub_24F071BB0()
{
  return MEMORY[0x270F03448]();
}

uint64_t sub_24F071BC0()
{
  return MEMORY[0x270F034E8]();
}

uint64_t sub_24F071BD0()
{
  return MEMORY[0x270F03590]();
}

uint64_t sub_24F071BE0()
{
  return MEMORY[0x270F03598]();
}

uint64_t sub_24F071BF0()
{
  return MEMORY[0x270F03690]();
}

uint64_t sub_24F071C00()
{
  return MEMORY[0x270F036C0]();
}

uint64_t sub_24F071C10()
{
  return MEMORY[0x270F037D8]();
}

uint64_t sub_24F071C20()
{
  return MEMORY[0x270F03810]();
}

uint64_t sub_24F071C30()
{
  return MEMORY[0x270F03A88]();
}

uint64_t sub_24F071C40()
{
  return MEMORY[0x270F03AB0]();
}

uint64_t sub_24F071C50()
{
  return MEMORY[0x270F03AC0]();
}

uint64_t sub_24F071C60()
{
  return MEMORY[0x270F03AC8]();
}

uint64_t sub_24F071C70()
{
  return MEMORY[0x270F03C30]();
}

uint64_t sub_24F071C80()
{
  return MEMORY[0x270F03CD8]();
}

uint64_t sub_24F071C90()
{
  return MEMORY[0x270F03FE8]();
}

uint64_t sub_24F071CA0()
{
  return MEMORY[0x270F03FF8]();
}

uint64_t sub_24F071CB0()
{
  return MEMORY[0x270F040A0]();
}

uint64_t sub_24F071CC0()
{
  return MEMORY[0x270F040E0]();
}

uint64_t sub_24F071CD0()
{
  return MEMORY[0x270F04108]();
}

uint64_t sub_24F071CE0()
{
  return MEMORY[0x270F04110]();
}

uint64_t sub_24F071CF0()
{
  return MEMORY[0x270F04178]();
}

uint64_t sub_24F071D00()
{
  return MEMORY[0x270F04188]();
}

uint64_t sub_24F071D10()
{
  return MEMORY[0x270F041A0]();
}

uint64_t sub_24F071D20()
{
  return MEMORY[0x270F041C8]();
}

uint64_t sub_24F071D30()
{
  return MEMORY[0x270F043A8]();
}

uint64_t sub_24F071D40()
{
  return MEMORY[0x270F04410]();
}

uint64_t sub_24F071D50()
{
  return MEMORY[0x270F04460]();
}

uint64_t sub_24F071D60()
{
  return MEMORY[0x270F04478]();
}

uint64_t sub_24F071D70()
{
  return MEMORY[0x270F04498]();
}

uint64_t sub_24F071D80()
{
  return MEMORY[0x270F044E8]();
}

uint64_t sub_24F071D90()
{
  return MEMORY[0x270F04570]();
}

uint64_t sub_24F071DA0()
{
  return MEMORY[0x270F04608]();
}

uint64_t sub_24F071DB0()
{
  return MEMORY[0x270F04620]();
}

uint64_t sub_24F071DC0()
{
  return MEMORY[0x270F04650]();
}

uint64_t sub_24F071DD0()
{
  return MEMORY[0x270F046C8]();
}

uint64_t sub_24F071DE0()
{
  return MEMORY[0x270F04708]();
}

uint64_t sub_24F071DF0()
{
  return MEMORY[0x270F04748]();
}

uint64_t sub_24F071E00()
{
  return MEMORY[0x270F04818]();
}

uint64_t sub_24F071E10()
{
  return MEMORY[0x270F04820]();
}

uint64_t sub_24F071E20()
{
  return MEMORY[0x270F04830]();
}

uint64_t sub_24F071E30()
{
  return MEMORY[0x270F04870]();
}

uint64_t sub_24F071E40()
{
  return MEMORY[0x270F048B0]();
}

uint64_t sub_24F071E50()
{
  return MEMORY[0x270F04950]();
}

uint64_t sub_24F071E60()
{
  return MEMORY[0x270F04960]();
}

uint64_t sub_24F071E70()
{
  return MEMORY[0x270F04AF0]();
}

uint64_t sub_24F071E80()
{
  return MEMORY[0x270F04AF8]();
}

uint64_t sub_24F071E90()
{
  return MEMORY[0x270F04B08]();
}

uint64_t sub_24F071EA0()
{
  return MEMORY[0x270F04B10]();
}

uint64_t sub_24F071EB0()
{
  return MEMORY[0x270F04C20]();
}

uint64_t sub_24F071EC0()
{
  return MEMORY[0x270F04C30]();
}

uint64_t sub_24F071ED0()
{
  return MEMORY[0x270F04C90]();
}

uint64_t sub_24F071EE0()
{
  return MEMORY[0x270F04CA8]();
}

uint64_t sub_24F071EF0()
{
  return MEMORY[0x270F04D68]();
}

uint64_t sub_24F071F00()
{
  return MEMORY[0x270F04D80]();
}

uint64_t sub_24F071F10()
{
  return MEMORY[0x270F04EE8]();
}

uint64_t sub_24F071F20()
{
  return MEMORY[0x270F05058]();
}

uint64_t sub_24F071F30()
{
  return MEMORY[0x270F05078]();
}

uint64_t sub_24F071F40()
{
  return MEMORY[0x270F05088]();
}

uint64_t sub_24F071F50()
{
  return MEMORY[0x270F05140]();
}

uint64_t sub_24F071F60()
{
  return MEMORY[0x270F05320]();
}

uint64_t sub_24F071F70()
{
  return MEMORY[0x270F05330]();
}

uint64_t sub_24F071F80()
{
  return MEMORY[0x270F053C8]();
}

uint64_t sub_24F071F90()
{
  return MEMORY[0x270F053D0]();
}

uint64_t sub_24F071FA0()
{
  return MEMORY[0x270F053D8]();
}

uint64_t sub_24F071FC0()
{
  return MEMORY[0x270F25398]();
}

uint64_t sub_24F071FD0()
{
  return MEMORY[0x270F253A0]();
}

uint64_t sub_24F071FE0()
{
  return MEMORY[0x270F253B0]();
}

uint64_t sub_24F071FF0()
{
  return MEMORY[0x270F253C0]();
}

uint64_t sub_24F072000()
{
  return MEMORY[0x270F253D0]();
}

uint64_t sub_24F072010()
{
  return MEMORY[0x270F9D320]();
}

uint64_t sub_24F072020()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_24F072030()
{
  return MEMORY[0x270EF18D0]();
}

uint64_t sub_24F072040()
{
  return MEMORY[0x270EF1958]();
}

uint64_t sub_24F072050()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_24F072060()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_24F072070()
{
  return MEMORY[0x270F2CE98]();
}

uint64_t sub_24F072080()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_24F072090()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_24F0720A0()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_24F0720B0()
{
  return MEMORY[0x270F9D8E0]();
}

uint64_t sub_24F0720C0()
{
  return MEMORY[0x270F9DA80]();
}

uint64_t sub_24F0720D0()
{
  return MEMORY[0x270F9DB00]();
}

uint64_t sub_24F0720E0()
{
  return MEMORY[0x270F9DBB8]();
}

uint64_t sub_24F0720F0()
{
  return MEMORY[0x270FA1DF8]();
}

uint64_t sub_24F072110()
{
  return MEMORY[0x270FA1EA0]();
}

uint64_t sub_24F072120()
{
  return MEMORY[0x270FA1EA8]();
}

uint64_t sub_24F072130()
{
  return MEMORY[0x270FA1EC0]();
}

uint64_t sub_24F072140()
{
  return MEMORY[0x270FA1EF0]();
}

uint64_t sub_24F072150()
{
  return MEMORY[0x270FA1F00]();
}

uint64_t sub_24F072160()
{
  return MEMORY[0x270FA1F08]();
}

uint64_t sub_24F072170()
{
  return MEMORY[0x270FA1F10]();
}

uint64_t sub_24F072180()
{
  return MEMORY[0x270FA1F60]();
}

uint64_t sub_24F0721A0()
{
  return MEMORY[0x270FA1FE8]();
}

uint64_t sub_24F0721B0()
{
  return MEMORY[0x270FA2080]();
}

uint64_t sub_24F0721C0()
{
  return MEMORY[0x270EF1CE0]();
}

uint64_t sub_24F0721D0()
{
  return MEMORY[0x270FA2E70]();
}

uint64_t sub_24F0721E0()
{
  return MEMORY[0x270FA2E80]();
}

uint64_t sub_24F0721F0()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_24F072200()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_24F072210()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_24F072220()
{
  return MEMORY[0x270F9E800]();
}

uint64_t sub_24F072230()
{
  return MEMORY[0x270F9E8E8]();
}

uint64_t sub_24F072240()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_24F072250()
{
  return MEMORY[0x270F9EA78]();
}

uint64_t sub_24F072260()
{
  return MEMORY[0x270F9EA98]();
}

uint64_t sub_24F072270()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_24F072280()
{
  return MEMORY[0x270F9ED70]();
}

uint64_t sub_24F072290()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_24F0722A0()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_24F0722B0()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_24F0722C0()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_24F0722D0()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_24F0722E0()
{
  return MEMORY[0x270F9F230]();
}

uint64_t sub_24F072300()
{
  return MEMORY[0x270F9F250]();
}

uint64_t sub_24F072310()
{
  return MEMORY[0x270F9F258]();
}

uint64_t sub_24F072320()
{
  return MEMORY[0x270F9F270]();
}

uint64_t sub_24F072330()
{
  return MEMORY[0x270F9F2A0]();
}

uint64_t sub_24F072340()
{
  return MEMORY[0x270F9F2E8]();
}

uint64_t sub_24F072350()
{
  return MEMORY[0x270F9F2F0]();
}

uint64_t sub_24F072360()
{
  return MEMORY[0x270F9F308]();
}

uint64_t sub_24F072370()
{
  return MEMORY[0x270F9F318]();
}

uint64_t sub_24F072380()
{
  return MEMORY[0x270F9F360]();
}

uint64_t sub_24F072390()
{
  return MEMORY[0x270F9F390]();
}

uint64_t sub_24F0723A0()
{
  return MEMORY[0x270F9F3B0]();
}

uint64_t sub_24F0723B0()
{
  return MEMORY[0x270F9F3E0]();
}

uint64_t sub_24F0723C0()
{
  return MEMORY[0x270F9F428]();
}

uint64_t sub_24F0723D0()
{
  return MEMORY[0x270F9F430]();
}

uint64_t sub_24F0723E0()
{
  return MEMORY[0x270F9F448]();
}

uint64_t sub_24F0723F0()
{
  return MEMORY[0x270F9F458]();
}

uint64_t sub_24F072400()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_24F072410()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_24F072420()
{
  return MEMORY[0x270EF2680]();
}

uint64_t sub_24F072430()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_24F072440()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_24F072450()
{
  return MEMORY[0x270F9FC68]();
}

uint64_t sub_24F072460()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_24F072470()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t sub_24F072480()
{
  return MEMORY[0x270F9FD98]();
}

CGFloat CGRectGetMaxX(CGRect rect)
{
  MEMORY[0x270EE71C0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinX(CGRect rect)
{
  MEMORY[0x270EE71F8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void bzero(void *a1, size_t a2)
{
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x270FA01D0]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x270FA01D8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x270FA0208]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x270FA02F8]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x270FA0300]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x270FA0338]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x270FA0348]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x270FA0370]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x270FA03B0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x270FA03B8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x270FA03D0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x270FA03F0]();
}

uint64_t swift_getOpaqueTypeMetadata2()
{
  return MEMORY[0x270FA03F8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTupleTypeLayout3()
{
  return MEMORY[0x270FA0418]();
}

uint64_t swift_getTupleTypeMetadata()
{
  return MEMORY[0x270FA0420]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x270FA0428]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x270FA0440]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x270FA0448]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x270FA0460]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x270FA0470]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x270FA04D8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x270FA0578]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x270FA2450]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x270FA2458]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x270FA2460]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}