id sub_1C0DF4B30()
{
  return sub_1C0DF4E6C();
}

void sub_1C0DF4B38()
{
  MEMORY[0x1C18C4390]();
  v0 = (void *)sub_1C151C84C();
}

void sub_1C0DF4B7C()
{
  sub_1C0DF5174(&qword_1EA1A77C8);
  JUMPOUT(0x1C18C4650);
}

uint64_t sub_1C0DF4BD4()
{
  return sub_1C0DF5174(&qword_1EA1A77C0);
}

void sub_1C0DF4C08(void *a1)
{
  v2 = v1;
  v4 = (char *)objc_msgSend(a1, sel_parentViewController);
  if (v4)
  {
    v5 = v4;

    if (v5 == v2)
    {
      id v16 = objc_msgSend(a1, sel_viewIfLoaded);
      if (v16)
      {
        v17 = v16;
        unsigned __int8 v18 = objc_msgSend(v16, sel_isDescendantOfView_, *(void *)&v2[OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_videoContainerView]);

        if (v18) {
          return;
        }
      }
    }
  }
  sub_1C0DF48F4();
  id v6 = objc_msgSend(a1, sel_view);
  if (!v6)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v7 = v6;
  id v8 = objc_msgSend(v6, sel_constraints);

  if (!v8)
  {
    sub_1BFC39268(0, (unint64_t *)&qword_1EA1A7F70);
    sub_1C151EBCC();
    id v8 = (id)sub_1C151EBAC();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(self, sel_deactivateConstraints_, v8);

  objc_msgSend(a1, sel_willMoveToParentViewController_, 0);
  id v9 = objc_msgSend(a1, sel_view);
  if (!v9) {
    goto LABEL_16;
  }
  v10 = v9;
  objc_msgSend(v9, sel_removeFromSuperview);

  objc_msgSend(a1, sel_removeFromParentViewController);
  objc_msgSend(v2, sel_addChildViewController_, a1);
  v11 = *(void **)&v2[OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_videoContainerView];
  id v12 = objc_msgSend(a1, sel_view);
  if (!v12)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v13 = v12;
  objc_msgSend(v11, sel_addSubview_, v12);

  id v14 = objc_msgSend(a1, sel_view);
  if (!v14)
  {
LABEL_18:
    __break(1u);
    return;
  }
  v15 = v14;
  objc_msgSend(v11, sel_bounds);
  sub_1C151F8FC();

  objc_msgSend(a1, sel_didMoveToParentViewController_, v2);
}

id sub_1C0DF4E6C()
{
  v1 = v0;
  v2 = (void *)sub_1C151BE9C();
  objc_msgSend(v2, sel_bounds);
  double v4 = v3;
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;

  v11 = (void *)sub_1C151BE9C();
  objc_msgSend(v11, sel_contentSize);
  double v13 = v12;

  id v14 = (void *)sub_1C151BE9C();
  objc_msgSend(v14, sel_contentSize);
  double v16 = v15;

  if (v16 < v13)
  {
    v17 = (void *)sub_1C151BE9C();
    id v18 = objc_msgSend(v17, sel_window);

    if (v18)
    {
      objc_msgSend(v18, sel_safeAreaInsets);
      double v20 = v19;
      double v22 = v21;
    }
    else
    {
      double v20 = *MEMORY[0x1E4FB2848];
      double v22 = *(double *)(MEMORY[0x1E4FB2848] + 8);
    }
    double v4 = UIEdgeInsetsInsetRect(v4, v6, v8, v10, v20, v22);
    double v6 = v23;
    double v8 = v24;
    double v10 = v25;
  }
  v26 = (void *)sub_1C151BE9C();
  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_14;
  }
  v28 = result;
  objc_msgSend(result, sel_bounds);
  double v30 = v29;
  double v32 = v31;
  double v34 = v33;
  double v36 = v35;

  id v37 = objc_msgSend(v1, sel_view);
  objc_msgSend(v26, sel_convertRect_fromView_, v37, v30, v32, v34, v36);
  CGFloat v39 = v38;
  CGFloat v41 = v40;
  CGFloat v43 = v42;
  CGFloat v45 = v44;

  v64.origin.CGFloat x = v4;
  v64.origin.CGFloat y = v6;
  v64.size.CGFloat width = v8;
  v64.size.CGFloat height = v10;
  v69.origin.CGFloat x = v39;
  v69.origin.CGFloat y = v41;
  v69.size.CGFloat width = v43;
  v69.size.CGFloat height = v45;
  CGRect v65 = CGRectIntersection(v64, v69);
  CGFloat x = v65.origin.x;
  CGFloat y = v65.origin.y;
  CGFloat width = v65.size.width;
  CGFloat height = v65.size.height;
  double v50 = CGRectGetWidth(v65);
  v66.origin.CGFloat x = x;
  v66.origin.CGFloat y = y;
  v66.size.CGFloat width = width;
  v66.size.CGFloat height = height;
  double v51 = CGRectGetHeight(v66);
  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  v52 = result;
  objc_msgSend(result, sel_bounds);
  CGFloat v54 = v53;
  CGFloat v56 = v55;
  CGFloat v58 = v57;
  CGFloat v60 = v59;

  v67.origin.CGFloat x = v54;
  v67.origin.CGFloat y = v56;
  v67.size.CGFloat width = v58;
  v67.size.CGFloat height = v60;
  double v61 = CGRectGetWidth(v67);
  v68.origin.CGFloat x = v54;
  v68.origin.CGFloat y = v56;
  v68.size.CGFloat width = v58;
  v68.size.CGFloat height = v60;
  double v62 = CGRectGetHeight(v68);
  id result = (id)MEMORY[0x1C18C9C60](&v1[OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_delegate]);
  if (result)
  {
    sub_1C0D91AC0(v50 * v51 / (v61 * v62));
    return (id)swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1C0DF5174(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatVideoPlayerViewController();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0DF51B4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1C0DF51EC()
{
  sub_1C0DF41F8(v0);
}

void sub_1C0DF51F4()
{
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v1 = &v0[OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_identifier];
  void *v1 = 0;
  v1[1] = 0xE000000000000000;
  v2 = &v0[OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_reuseIdentifier];
  void *v2 = 0;
  v2[1] = 0;
  uint64_t v3 = OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_onReuse;
  sub_1BFD22278();
  *(void *)&v0[v3] = objc_msgSend(objc_allocWithZone(v4), sel_init);
  uint64_t v5 = OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_posterFrame;
  *(void *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for VideoView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v6 = OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_placeholderView;
  *(void *)&v0[v6] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for VideoPlaceholderView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v0[OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_isLiveIconHidden] = 0;
  uint64_t v7 = OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_videoContainerView;
  *(void *)&v0[v7] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  sub_1C152040C();
  __break(1u);
}

void sub_1C0DF535C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v8 = sub_1C151CE3C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *v3;
  if (*v3 < 0)
  {
    uint64_t v18 = sub_1C0DF55AC(a2, a1, *(void *)((v12 & 0x7FFFFFFFFFFFFFFFLL) + 0x10), *(void *)((v12 & 0x7FFFFFFFFFFFFFFFLL) + 0x18));
    if (!v4)
    {
      if (*(void *)(v18 + 16))
      {
        uint64_t v19 = a1;
        uint64_t v20 = *(void *)(v18 + 32);
        swift_retain();
        swift_bridgeObjectRelease();
        uint64_t v24 = v20;
        swift_retain();
        sub_1C0DF535C(v19, a2);
        swift_release_n();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v21 = type metadata accessor for FormatSourceItemTipSource();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(a3, 1, 1, v21);
      }
    }
  }
  else
  {
    uint64_t v28 = a3;
    char v13 = *(unsigned char *)(v12 + 16);
    uint64_t v14 = *(void *)(v12 + 24);
    uint64_t v23 = *(void *)(v12 + 32);
    char v15 = *(unsigned char *)(v12 + 40);
    LOBYTE(v24) = v13;
    sub_1C133FE68(a1, (uint64_t)v11);
    if (!v4)
    {
      LOBYTE(v24) = v13;
      uint64_t v25 = v14;
      uint64_t v26 = v23;
      char v27 = v15;
      uint64_t v16 = type metadata accessor for FormatSourceItemTipSource();
      uint64_t v17 = v28;
      sub_1C111E504(a1, v28 + *(int *)(v16 + 20));
      (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v17, v11, v8);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v17, 0, 1, v16);
    }
  }
}

uint64_t sub_1C0DF55AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v5 = *(void *)(a3 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = (uint64_t *)(a3 + 40);
    while (1)
    {
      uint64_t v4 = *v9;
      swift_retain_n();
      uint64_t v10 = swift_bridgeObjectRetain();
      v11 = sub_1BFF273E0(v10);
      char v13 = (v12 & 1) != 0
          ? ((uint64_t (*)(uint64_t, uint64_t))v11)(a2, a1)
          : ((uint64_t (*)(uint64_t))v11)(a2);
      sub_1BFF27F20();
      swift_release();
      if (v13) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_release();
      v9 += 2;
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        uint64_t v4 = a4;
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
LABEL_9:
    if (v4) {
      swift_bridgeObjectRetain();
    }
    else {
      return MEMORY[0x1E4FBC860];
    }
  }
  return v4;
}

uint64_t sub_1C0DF5704@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return FormatSourceItem.init(from:)(a1, a2);
}

uint64_t sub_1C0DF571C(void *a1)
{
  return FormatSourceItem.encode(to:)(a1);
}

BOOL _s8NewsFeed16FormatSourceItemO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  if (*a1 < 0)
  {
    if ((v3 & 0x8000000000000000) == 0) {
      return 0;
    }
    uint64_t v8 = v2 & 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v10 = *(void *)(v8 + 16);
    uint64_t v9 = *(void *)(v8 + 24);
    uint64_t v12 = *(void *)((v3 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v11 = *(void *)((v3 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
    swift_retain();
    swift_retain();
    if (sub_1C00EC3A4(v10, v12))
    {
      if (v9)
      {
        if (v11)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v13 = sub_1C00EC4C8(v9, v11);
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return (v13 & 1) != 0;
        }
      }
      else if (!v11)
      {
        swift_release();
        swift_release();
        return 1;
      }
    }
    swift_release();
    swift_release();
    return 0;
  }
  if (v3 < 0) {
    return 0;
  }
  char v4 = *(unsigned char *)(v2 + 40);
  unsigned __int8 v5 = *(unsigned char *)(v3 + 16);
  char v6 = *(unsigned char *)(v3 + 40);
  v18[0] = *(unsigned char *)(v2 + 16);
  long long v19 = *(_OWORD *)(v2 + 24);
  char v20 = v4;
  v15[0] = v5;
  long long v16 = *(_OWORD *)(v3 + 24);
  char v17 = v6;
  swift_retain();
  swift_retain();
  BOOL v7 = _s8NewsFeed19FormatSourceItemTipV2eeoiySbAC_ACtFZ_0(v18, v15);
  swift_release();
  swift_release();
  return v7;
}

unint64_t sub_1C0DF589C(uint64_t a1)
{
  unint64_t result = sub_1C08B4B18();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0DF58C4(void *a1)
{
  a1[1] = sub_1C08F7950();
  a1[2] = sub_1C08F77C4();
  unint64_t result = sub_1C0DF58FC();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0DF58FC()
{
  unint64_t result = qword_1EB894320;
  if (!qword_1EB894320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB894320);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatSourceItem()
{
  return &type metadata for FormatSourceItem;
}

uint64_t sub_1C0DF5960(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

void sub_1C0DF59B4(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v8 = self;
  sub_1BFC66384(a2, (uint64_t)v24);
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = a1;
  sub_1BFC773DC(v24, (uint64_t)(v9 + 3));
  v9[8] = a3;
  v9[9] = a4;
  uint64_t v22 = sub_1C0DF7438;
  uint64_t v23 = v9;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v19 = 1107296256;
  char v20 = sub_1BFC9FC68;
  uint64_t v21 = &block_descriptor_67;
  uint64_t v10 = _Block_copy(&aBlock);
  swift_retain();
  id v11 = a3;
  id v12 = a4;
  swift_release();
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  sub_1BFC66384(a2, (uint64_t)v24);
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = v13;
  v14[3] = v12;
  v14[4] = v11;
  sub_1BFC773DC(v24, (uint64_t)(v14 + 5));
  uint64_t v22 = sub_1C0DF74D0;
  uint64_t v23 = v14;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v19 = 1107296256;
  char v20 = sub_1C0DF5960;
  uint64_t v21 = &block_descriptor_14_1;
  char v15 = _Block_copy(&aBlock);
  id v16 = v11;
  id v17 = v12;
  swift_release();
  objc_msgSend(v8, sel_animateWithDuration_animations_completion_, v10, v15, 0.2);
  _Block_release(v15);
  _Block_release(v10);
}

id sub_1C0DF5BD4(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v16 = a4;
  uint64_t v6 = type metadata accessor for FeedItemDimmingType();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (uint64_t *)((char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void *)(a1 + 120);
  uint64_t v10 = *(void *)(a1 + 128);
  __swift_project_boxed_opaque_existential_1((void *)(a1 + 96), v9);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  *uint64_t v8 = sub_1C151811C();
  v8[1] = v11;
  swift_storeEnumTagMultiPayload();
  char v12 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v10 + 8))(v8, v9, v10);
  sub_1C0DF74E0((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FeedItemDimmingType);
  uint64_t v13 = (void *)sub_1C151AFCC();
  sub_1C0DF7544(v13, v12 & 1, *(double *)(a1 + 144));

  return objc_msgSend(v16, sel_setAlpha_, 0.0);
}

uint64_t sub_1C0DF5D30(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    objc_msgSend(a3, sel_removeFromSuperview);
    uint64_t v8 = (void *)sub_1C151AFCC();
    objc_msgSend(v8, sel_setIsAccessibilityElement_, 1);

    sub_1C0DF5DD0(a5);
    return swift_release();
  }
  return result;
}

unint64_t sub_1C0DF5DD0(void *a1)
{
  uint64_t v2 = sub_1C151BBCC();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unsigned __int8 v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEE1780(0, &qword_1EB873480, (void (*)(uint64_t))type metadata accessor for FeedItem);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v16 - v7;
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  (*(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t))(v10 + 48))(&v19, v9, v10);
  unint64_t result = v19;
  if (v19 != 2)
  {
    if (v19)
    {
      return sub_1C0A63304(result);
    }
    else
    {
      sub_1BFC66384((uint64_t)a1, (uint64_t)v17);
      sub_1BFFFCF34();
      uint64_t v12 = type metadata accessor for FeedItem(0);
      int v13 = swift_dynamicCast();
      uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
      if (v13)
      {
        v14(v8, 0, 1, v12);
        uint64_t v15 = FeedItem.headline.getter();
        unint64_t result = sub_1C0DF74E0((uint64_t)v8, type metadata accessor for FeedItem);
        if (v15)
        {
          if (qword_1EB87B170 != -1) {
            swift_once();
          }
          v16[1] = v15;
          (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FACB48], v2);
          memset(v17, 0, sizeof(v17));
          char v18 = 1;
          swift_unknownObjectRetain();
          sub_1C151BBAC();
          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
          return swift_unknownObjectRelease();
        }
      }
      else
      {
        v14(v8, 1, 1, v12);
        return sub_1BFEE4AE8((uint64_t)v8, &qword_1EB873480, (void (*)(uint64_t))type metadata accessor for FeedItem);
      }
    }
  }
  return result;
}

uint64_t sub_1C0DF6124()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  swift_release();
  return swift_deallocClassInstance();
}

void *sub_1C0DF6174(void *a1, void *a2, double a3, double a4, CGFloat a5, CGFloat a6)
{
  return sub_1C0DF6CD0(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1C0DF6198(char *a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151631C();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v14[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*((void (**)(void *__return_ptr, uint64_t, __n128))a1 + 3))(v14, a2, v6);
  uint64_t v9 = *(void *)(*(void *)a1 + 120);
  uint64_t v10 = *(void **)&a1[v9];
  *(void *)&a1[v9] = v14[0];

  sub_1C151630C();
  uint64_t v11 = &a1[*(void *)(*(void *)a1 + 128)];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v5 + 40))(v11, v8, v4);
  swift_endAccess();
  return *(void *)&a1[v9];
}

uint64_t sub_1C0DF62E0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C151631C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEE1780(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v21 - v9;
  uint64_t v11 = sub_1C151E24C();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (uint64_t *)((char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFE4597C();
  *uint64_t v14 = sub_1C151F56C();
  (*(void (**)(uint64_t *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E4FBCBF0], v11);
  char v15 = sub_1C151E26C();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v12 + 8))(v14, v11);
  if (v15)
  {
    sub_1BFF97B80((uint64_t)&v2[qword_1EB8739C8], (uint64_t)v10);
    int v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4);
    sub_1BFEE4AE8((uint64_t)v10, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
    if (v17 == 1) {
      return *(void *)&v2[*(void *)(*(void *)v2 + 120)];
    }
    char v18 = &v2[*(void *)(*(void *)v2 + 128)];
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v18, v4);
    sub_1C151627C();
    double v20 = v19;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if (v20 >= -60.0) {
      return *(void *)&v2[*(void *)(*(void *)v2 + 120)];
    }
    else {
      return sub_1C0DF6198(v2, a1);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0DF65F4(char *a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151631C();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*((void (**)(_OWORD *__return_ptr, uint64_t, __n128))a1 + 3))(v12, a2, v6);
  uint64_t v9 = &a1[*(void *)(*(void *)a1 + 120)];
  *(_OWORD *)uint64_t v9 = v12[0];
  swift_bridgeObjectRelease();
  sub_1C151630C();
  uint64_t v10 = &a1[*(void *)(*(void *)a1 + 128)];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v5 + 40))(v10, v8, v4);
  swift_endAccess();
  return *(void *)v9;
}

uint64_t sub_1C0DF6740(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C151631C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEE1780(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v21 - v9;
  uint64_t v11 = sub_1C151E24C();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (uint64_t *)((char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFE4597C();
  *uint64_t v14 = sub_1C151F56C();
  (*(void (**)(uint64_t *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E4FBCBF0], v11);
  char v15 = sub_1C151E26C();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v12 + 8))(v14, v11);
  if (v15)
  {
    sub_1BFF97B80((uint64_t)&v2[qword_1EB8739C8], (uint64_t)v10);
    int v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4);
    sub_1BFEE4AE8((uint64_t)v10, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
    if (v17 == 1) {
      return *(void *)&v2[*(void *)(*(void *)v2 + 120)];
    }
    char v18 = &v2[*(void *)(*(void *)v2 + 128)];
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v18, v4);
    sub_1C151627C();
    double v20 = v19;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if (v20 >= -60.0) {
      return *(void *)&v2[*(void *)(*(void *)v2 + 120)];
    }
    else {
      return sub_1C0DF65F4(v2, a1);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1C0DF6A58(void *a1, double *a2, char *a3)
{
  objc_msgSend(a3, sel_setFrame_, *a2, a2[1], a2[2], a2[3]);
  uint64_t v6 = *(void **)&a3[OBJC_IVAR____TtC8NewsFeed24HiddenContentPlacardView_titleLabel];
  objc_msgSend(v6, sel_setNumberOfLines_, 0);
  uint64_t v7 = a1 + 1;
  uint64_t v8 = a1[4];
  uint64_t v9 = __swift_project_boxed_opaque_existential_1(a1 + 1, v8);
  double v24 = *(double *)&v8;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v23);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(boxed_opaque_existential_0, v9, v8);
  id v11 = (id)sub_1C0DF62E0((uint64_t)v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  objc_msgSend(v6, sel_setAttributedText_, v11);

  objc_msgSend(v6, sel_setFrame_, a2[4], a2[5], a2[6], a2[7]);
  if (!a1[7]) {
    goto LABEL_4;
  }
  uint64_t v12 = a1[4];
  uint64_t v13 = __swift_project_boxed_opaque_existential_1(v7, v12);
  double v24 = *(double *)&v12;
  uint64_t v14 = __swift_allocate_boxed_opaque_existential_0(v23);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v14, v13, v12);
  id v15 = (id)sub_1C0DF62E0((uint64_t)v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  sub_1BFF5984C((uint64_t)(a2 + 8), (uint64_t)v22);
  sub_1BFF5984C((uint64_t)v22, (uint64_t)v23);
  if (v25 == 1)
  {

LABEL_4:
    objc_msgSend(*(id *)&a3[OBJC_IVAR____TtC8NewsFeed24HiddenContentPlacardView_dismissalButton], sel_setHidden_, 1);
    return;
  }
  double v16 = *(double *)v23;
  double v17 = *(double *)&v23[1];
  double v18 = *(double *)&v23[2];
  double v19 = v24;
  double v20 = *(void **)&a3[OBJC_IVAR____TtC8NewsFeed24HiddenContentPlacardView_dismissalButton];
  id v21 = objc_msgSend(v20, sel_titleLabel);
  objc_msgSend(v21, sel_setNumberOfLines_, 0);

  objc_msgSend(v20, sel_setAttributedTitle_forState_, v15, 0);
  objc_msgSend(v20, sel_setFrame_, v16, v17, v18, v19);
}

void *sub_1C0DF6CD0(void *a1, void *a2, double a3, double a4, CGFloat a5, CGFloat a6)
{
  uint64_t v7 = v6;
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v13 + 48))(v97, v12, v13);
  CGFloat v15 = *(double *)v97;
  if (v97[0] != 2)
  {
    if (sub_1C151F83C())
    {
      return (void *)sub_1C0A63304(*(unint64_t *)&v15);
    }
    else
    {
      double v16 = (void *)sub_1C151AFCC();
      sub_1C151F8EC();

      double v17 = (void *)sub_1C151AFCC();
      objc_msgSend(v17, sel_setIsAccessibilityElement_, 0);

      v92.size.CGFloat height = v15;
      sub_1BFC66384(v7 + 56, (uint64_t)v97);
      sub_1C01A6E20(*(unint64_t *)&v15);
      sub_1C1393E08((unint64_t *)&v92.size.height, (uint64_t)v97, &v93);
      id v18 = objc_msgSend(self, sel_mainScreen);
      objc_msgSend(v18, sel_bounds);
      CGFloat v20 = v19;
      CGFloat v22 = v21;
      CGFloat v24 = v23;
      CGFloat v26 = v25;

      v109.origin.CGFloat x = v20;
      v109.origin.CGFloat y = v22;
      v109.size.CGFloat width = v24;
      v109.size.CGFloat height = v26;
      double Width = CGRectGetWidth(v109);
      v110.origin.CGFloat x = 0.0;
      v110.origin.CGFloat y = 0.0;
      v110.size.CGFloat width = a5;
      v110.size.CGFloat height = a6;
      if (CGRectGetWidth(v110) / Width <= 0.5) {
        double v28 = 0.85;
      }
      else {
        double v28 = 0.6;
      }
      uint64_t v29 = v95;
      double v30 = __swift_project_boxed_opaque_existential_1(v94, v95);
      CGFloat v98 = *(double *)&v29;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v97);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(boxed_opaque_existential_0, v30, v29);
      id v32 = (id)sub_1C0DF62E0((uint64_t)v97);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v97);
      v111.origin.CGFloat x = 0.0;
      v111.origin.CGFloat y = 0.0;
      v111.size.CGFloat width = a5;
      v111.size.CGFloat height = a6;
      v92.origin.CGFloat x = v28;
      objc_msgSend(v32, sel_boundingRectWithSize_options_context_, 3, 0, v28 * CGRectGetWidth(v111), 1.79769313e308);
      CGFloat v34 = v33;
      CGFloat v36 = v35;
      CGFloat v38 = v37;
      CGFloat v40 = v39;
      v112.origin.CGFloat x = 0.0;
      v112.origin.CGFloat y = 0.0;
      v112.size.CGFloat width = a5;
      v112.size.CGFloat height = a6;
      double v41 = CGRectGetWidth(v112);
      v113.origin.CGFloat x = v34;
      v113.origin.CGFloat y = v36;
      v113.size.CGFloat width = v38;
      v113.size.CGFloat height = v40;
      double v42 = v41 - CGRectGetWidth(v113);
      double v43 = v42 * 0.5;
      if (v93 == 1)
      {
        v114.origin.CGFloat x = 0.0;
        v114.origin.CGFloat y = 0.0;
        v114.size.CGFloat width = a5;
        v114.size.CGFloat height = a6;
        double Height = CGRectGetHeight(v114);
        v115.origin.CGFloat x = v34;
        v115.origin.CGFloat y = v36;
        v115.size.CGFloat width = v38;
        v115.size.CGFloat height = v40;
        double v45 = Height - CGRectGetHeight(v115);
      }
      else
      {
        v92.size.CGFloat width = v42 * 0.5;
        double v46 = 0.0;
        if (v96)
        {
          uint64_t v47 = v95;
          v48 = __swift_project_boxed_opaque_existential_1(v94, v95);
          CGFloat v98 = *(double *)&v47;
          v49 = __swift_allocate_boxed_opaque_existential_0(v97);
          (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v47 - 8) + 16))(v49, v48, v47);
          id v50 = (id)sub_1C0DF62E0((uint64_t)v97);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v97);
          sub_1C151F80C();
          sub_1C151F60C();
          CGFloat v52 = v51;
          CGFloat v54 = v53;
          v92.origin.CGFloat y = v55;
          CGFloat rect = v56;

          v116.origin.CGFloat x = v52;
          v116.origin.CGFloat y = v54;
          v116.size.CGFloat width = v92.origin.y;
          v116.size.CGFloat height = rect;
          double v46 = CGRectGetHeight(v116);
        }
        v117.origin.CGFloat x = 0.0;
        v117.origin.CGFloat y = 0.0;
        v117.size.CGFloat width = a5;
        v117.size.CGFloat height = a6;
        double v57 = CGRectGetHeight(v117);
        v118.origin.CGFloat x = v34;
        v118.origin.CGFloat y = v36;
        v118.size.CGFloat width = v38;
        v118.size.CGFloat height = v40;
        double v45 = v57 - CGRectGetHeight(v118) - v46 + -16.0;
        double v43 = v92.size.width;
      }
      v119.origin.CGFloat y = v45 * 0.5;
      v119.origin.CGFloat x = v43;
      v119.size.CGFloat width = v38;
      v119.size.CGFloat height = v40;
      CGRect v120 = CGRectIntegral(v119);
      CGFloat x = v120.origin.x;
      CGFloat y = v120.origin.y;
      v92.origin.CGFloat y = v120.size.height;
      v92.size.CGFloat width = v120.size.width;

      uint64_t v60 = v96;
      if (v96)
      {
        uint64_t v61 = v95;
        double v62 = __swift_project_boxed_opaque_existential_1(v94, v95);
        CGFloat v98 = *(double *)&v61;
        v63 = __swift_allocate_boxed_opaque_existential_0(v97);
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v61 - 8) + 16))(v63, v62, v61);
        id v64 = (id)sub_1C0DF62E0((uint64_t)v97);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v97);
        v121.origin.CGFloat x = 0.0;
        v121.origin.CGFloat y = 0.0;
        v121.size.CGFloat width = a5;
        v121.size.CGFloat height = a6;
        objc_msgSend(v64, sel_boundingRectWithSize_options_context_, 3, 0, v92.origin.x * CGRectGetWidth(v121), 1.79769313e308);
        v92.origin.CGFloat x = v65;
        CGFloat v67 = v66;
        CGFloat v69 = v68;
        CGFloat v71 = v70;
        v122.origin.CGFloat x = 0.0;
        v122.origin.CGFloat y = 0.0;
        v122.size.CGFloat width = a5;
        v122.size.CGFloat height = a6;
        double v72 = a5;
        double v73 = a6;
        double v74 = y;
        double v75 = x;
        double v76 = CGRectGetWidth(v122);
        v123.origin.CGFloat x = v92.origin.x;
        v123.origin.CGFloat y = v67;
        v123.size.CGFloat width = v69;
        v123.size.CGFloat height = v71;
        CGFloat v77 = v71;
        double v78 = v76 - CGRectGetWidth(v123);
        CGFloat x = v75;
        CGFloat y = v74;
        a6 = v73;
        a5 = v72;
        CGFloat v79 = v78 * 0.5;
        v124.origin.CGFloat x = x;
        v124.origin.CGFloat y = y;
        v124.size.CGFloat height = v92.origin.y;
        v124.size.CGFloat width = v92.size.width;
        v125.origin.CGFloat y = CGRectGetMaxY(v124) + 16.0;
        v125.origin.CGFloat x = v79;
        v125.size.CGFloat width = v69;
        v125.size.CGFloat height = v77;
        CGRect v126 = CGRectIntegral(v125);
        CGFloat v80 = v126.origin.x;
        CGFloat v81 = v126.origin.y;
        CGFloat v82 = v126.size.width;
        CGFloat v83 = v126.size.height;
      }
      else
      {
        CGFloat v80 = 0.0;
        CGFloat v81 = 0.0;
        CGFloat v82 = 0.0;
        CGFloat v83 = 0.0;
      }
      v97[0] = 0;
      v97[1] = 0;
      *(CGFloat *)&v97[2] = a5;
      CGFloat v98 = a6;
      CGFloat v99 = x;
      CGFloat v100 = y;
      CGFloat v101 = v92.size.width;
      CGFloat v102 = v92.origin.y;
      CGFloat v103 = v80;
      CGFloat v104 = v81;
      CGFloat v105 = v82;
      CGFloat v106 = v83;
      BOOL v107 = v60 == 0;
      v84 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for HiddenContentPlacardView()), sel_initWithFrame_, 0.0, 0.0, a5, a6);
      sub_1C0DF6A58(&v93, (double *)v97, v84);
      v85 = *(void **)&v84[OBJC_IVAR____TtC8NewsFeed24HiddenContentPlacardView_onTap];
      sub_1BFC66384((uint64_t)a1, (uint64_t)&v92.size.height);
      v86 = (void *)swift_allocObject();
      v86[2] = v7;
      sub_1BFC773DC((long long *)&v92.size.height, (uint64_t)(v86 + 3));
      v86[8] = a2;
      v86[9] = v84;
      id v87 = v85;
      swift_retain();
      id v88 = a2;
      v89 = v84;

      swift_release();
      id v90 = objc_msgSend(v88, sel_contentView);
      objc_msgSend(v90, sel_addSubview_, v89);

      sub_1C0A63304(*(unint64_t *)&v15);
      return (void *)sub_1C0DF73E0((uint64_t)&v93);
    }
  }
  return result;
}

void sub_1C0DF73D0()
{
  sub_1C0DF59B4(*(void *)(v0 + 16), v0 + 24, *(void **)(v0 + 64), *(void **)(v0 + 72));
}

uint64_t sub_1C0DF73E0(uint64_t a1)
{
  return a1;
}

id sub_1C0DF7438()
{
  return sub_1C0DF5BD4(*(void *)(v0 + 16), (void *)(v0 + 24), *(void *)(v0 + 64), *(void **)(v0 + 72));
}

uint64_t sub_1C0DF7448()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C0DF7480()
{
  swift_release();

  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  return swift_deallocObject();
}

uint64_t sub_1C0DF74D0(uint64_t a1)
{
  return sub_1C0DF5D30(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), (void *)(v1 + 40));
}

uint64_t sub_1C0DF74E0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C0DF7544(id a1, char a2, double a3)
{
  if (a2)
  {
    id v5 = objc_msgSend(a1, sel_layer);
    id v6 = objc_msgSend(a1, sel_traitCollection);
    objc_msgSend(v6, sel_displayScale);
    double v8 = v7;

    objc_msgSend(v5, sel_setRasterizationScale_, v8);
    id v9 = objc_msgSend(a1, sel_layer);
    objc_msgSend(v9, sel_setShouldRasterize_, 1);

    objc_msgSend(a1, sel_setAlpha_, a3);
  }
  else
  {
    objc_msgSend(a1, sel_setAlpha_, 1.0);
    id v10 = objc_msgSend(a1, sel_layer);
    objc_msgSend(v10, sel_setShouldRasterize_, 0);
  }
}

uint64_t static FormatImageAdjustmentMask.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_1C00F61EC(a1, (uint64_t)v6);
  sub_1C00F61EC(a2, (uint64_t)v7);
  sub_1C00F61EC((uint64_t)v6, (uint64_t)v8);
  sub_1C00F61EC((uint64_t)v7, (uint64_t)v9);
  sub_1C00F6034((uint64_t)v8, (uint64_t)v5);
  sub_1C00F6034((uint64_t)v9, (uint64_t)v4);
  return _s8NewsFeed25FormatDirectionalGradientO2eeoiySbAC_ACtFZ_0((uint64_t)v5, (uint64_t)v4) & 1;
}

uint64_t sub_1C0DF7724@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatImageAdjustmentMask.init(from:)(a1, a2);
}

uint64_t sub_1C0DF773C(void *a1)
{
  return FormatImageAdjustmentMask.encode(to:)(a1);
}

uint64_t sub_1C0DF7754(uint64_t a1, uint64_t a2)
{
  sub_1C00F61EC(a1, (uint64_t)v6);
  sub_1C00F61EC(a2, (uint64_t)v7);
  sub_1C00F61EC((uint64_t)v6, (uint64_t)v8);
  sub_1C00F61EC((uint64_t)v7, (uint64_t)v9);
  sub_1C00F6034((uint64_t)v8, (uint64_t)v5);
  sub_1C00F6034((uint64_t)v9, (uint64_t)v4);
  return _s8NewsFeed25FormatDirectionalGradientO2eeoiySbAC_ACtFZ_0((uint64_t)v5, (uint64_t)v4) & 1;
}

unint64_t sub_1C0DF77D0(uint64_t a1)
{
  unint64_t result = sub_1C0DF77F8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0DF77F8()
{
  unint64_t result = qword_1EA1A77D0;
  if (!qword_1EA1A77D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A77D0);
  }
  return result;
}

unint64_t sub_1C0DF784C(void *a1)
{
  a1[1] = sub_1C0862D44();
  a1[2] = sub_1C09078A8();
  unint64_t result = sub_1C0DF7884();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0DF7884()
{
  unint64_t result = qword_1EA1A77D8[0];
  if (!qword_1EA1A77D8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA1A77D8);
  }
  return result;
}

uint64_t *initializeWithCopy for FormatDirectionalGradient(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  uint64_t v13 = a2[9];
  uint64_t v14 = a2[10];
  uint64_t v15 = a2[11];
  uint64_t v16 = a2[12];
  uint64_t v17 = a2[13];
  uint64_t v18 = a2[14];
  uint64_t v19 = a2[15];
  sub_1C00F5C0C(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16, v17);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v13;
  a1[10] = v14;
  a1[11] = v15;
  a1[12] = v16;
  a1[13] = v17;
  a1[14] = v18;
  a1[15] = v19;
  return a1;
}

uint64_t assignWithCopy for FormatDirectionalGradient(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  uint64_t v24 = a2[9];
  uint64_t v25 = a2[10];
  uint64_t v26 = a2[11];
  uint64_t v27 = a2[12];
  uint64_t v28 = a2[13];
  uint64_t v29 = a2[14];
  uint64_t v30 = a2[15];
  sub_1C00F5C0C(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v24, v25, v26, v27, v28);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  long long v20 = *(_OWORD *)(a1 + 64);
  long long v21 = *(_OWORD *)(a1 + 80);
  long long v22 = *(_OWORD *)(a1 + 96);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v24;
  *(void *)(a1 + 80) = v25;
  *(void *)(a1 + 88) = v26;
  *(void *)(a1 + 96) = v27;
  *(void *)(a1 + 104) = v28;
  *(void *)(a1 + 112) = v29;
  *(void *)(a1 + 120) = v30;
  sub_1C00F5DC0(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1));
  return a1;
}

uint64_t assignWithTake for FormatDirectionalGradient(uint64_t a1, _OWORD *a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v10 = *(void *)(a1 + 56);
  long long v11 = *(_OWORD *)(a1 + 64);
  long long v12 = *(_OWORD *)(a1 + 80);
  long long v13 = *(_OWORD *)(a1 + 96);
  long long v14 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v14;
  long long v15 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v15;
  long long v16 = a2[5];
  *(_OWORD *)(a1 + 64) = a2[4];
  *(_OWORD *)(a1 + 80) = v16;
  long long v17 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v17;
  sub_1C00F5DC0(v3, v5, v4, v6, v7, v8, v9, v10, v11, *((uint64_t *)&v11 + 1), v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1));
  return a1;
}

ValueMetadata *type metadata accessor for FormatImageAdjustmentMask()
{
  return &type metadata for FormatImageAdjustmentMask;
}

uint64_t SharingPuzzleActivityTypeProvider.supportedActivityTypes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SharingPuzzleActivityTypeProvider.__allocating_init(supportedActivityTypes:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t SharingPuzzleActivityTypeProvider.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SharingPuzzleActivityTypeProvider.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t dispatch thunk of SharingPuzzleActivityTypeProviderType.supportedActivityTypes.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t method lookup function for SharingPuzzleActivityTypeProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SharingPuzzleActivityTypeProvider);
}

uint64_t dispatch thunk of SharingPuzzleActivityTypeProvider.__allocating_init(supportedActivityTypes:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t FormatFileReferenceCollection.init(references:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t static FormatFileReferenceCollection.== infix(_:_:)()
{
  type metadata accessor for FormatFileReference();
  swift_getWitnessTable();
  return sub_1C151ED6C();
}

uint64_t FormatFileReferenceCollection.references.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatFileReferenceCollection.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520EEC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  type metadata accessor for FormatFileReference();
  sub_1C151ED5C();
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_1C1520B2C();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
}

uint64_t sub_1C0DF7DE8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1C0DF7E70(void *a1)
{
  type metadata accessor for FormatFileReferenceCollection.MetadataContainer.CodingKeys();
  swift_getWitnessTable();
  uint64_t v2 = sub_1C152083C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - v4;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520F0C();
  type metadata accessor for FormatMetadata();
  sub_1BFEBE3AC(&qword_1EB85D128);
  sub_1C152078C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1C0DF8004@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  sub_1BFEC2B10(0, &qword_1EB874B58, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
  MEMORY[0x1F4188790](v3 - 8);
  double v23 = (char *)&v18 - v4;
  type metadata accessor for FormatFileReferenceCollection.MetadataContainer.CodingKeys();
  swift_getWitnessTable();
  uint64_t v5 = sub_1C152072C();
  uint64_t v21 = *(void *)(v5 - 8);
  uint64_t v22 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v18 - v6;
  uint64_t v8 = type metadata accessor for FormatFileReferenceCollection.MetadataContainer();
  uint64_t v20 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v18 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v11 = v24;
  sub_1C1520EBC();
  if (!v11)
  {
    uint64_t v12 = (uint64_t)v10;
    uint64_t v13 = v20;
    uint64_t v14 = v21;
    uint64_t v24 = v8;
    type metadata accessor for FormatMetadata();
    sub_1BFEBE3AC(&qword_1EB874B00);
    uint64_t v16 = v22;
    uint64_t v15 = (uint64_t)v23;
    sub_1C152065C();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v7, v16);
    sub_1C098C0C0(v15, v12);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v19, v12, v24);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C0DF82EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0DF7DE8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1C0DF8320@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFE31C54();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1C0DF8350(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1C0DF83A4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1C0DF83F8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0DF8004(a1, a2);
}

uint64_t sub_1C0DF8418(void *a1)
{
  return sub_1C0DF7E70(a1);
}

uint64_t sub_1C0DF8430(void *a1)
{
  return FormatFileReferenceCollection.encode(to:)(a1);
}

uint64_t sub_1C0DF8448()
{
  return static FormatFileReferenceCollection.== infix(_:_:)();
}

uint64_t sub_1C0DF8454(void *a1)
{
  a1[1] = swift_getWitnessTable();
  a1[2] = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  a1[3] = result;
  return result;
}

uint64_t *sub_1C0DF84D4(uint64_t *a1, uint64_t *a2)
{
  sub_1BFEC2B10(0, &qword_1EB874B58, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(v4 - 8);
    uint64_t v7 = (int *)type metadata accessor for FormatMetadata();
    uint64_t v8 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v23 = v8;
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      uint64_t v11 = v7[5];
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = sub_1C151928C();
      uint64_t v15 = *(void *)(v14 - 8);
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
      swift_bridgeObjectRetain();
      v16(v12, v13, v14);
      v16((char *)a1 + v7[6], (char *)a2 + v7[6], v14);
      uint64_t v17 = v7[7];
      uint64_t v18 = (char *)a1 + v17;
      uint64_t v19 = (char *)a2 + v17;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))((char *)a2 + v17, 1, v14))
      {
        sub_1BFEC2B10(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
        memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        v16(v18, v19, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
      }
      *(uint64_t *)((char *)a1 + v7[8]) = *(uint64_t *)((char *)a2 + v7[8]);
      *(uint64_t *)((char *)a1 + v7[9]) = *(uint64_t *)((char *)a2 + v7[9]);
      *(uint64_t *)((char *)a1 + v7[10]) = *(uint64_t *)((char *)a2 + v7[10]);
      *(uint64_t *)((char *)a1 + v7[11]) = *(uint64_t *)((char *)a2 + v7[11]);
      uint64_t v21 = *(void (**)(uint64_t *, void, uint64_t, int *))(v23 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v21(a1, 0, 1, v7);
    }
  }
  return a1;
}

void *sub_1C0DF87D0(void *a1, void *a2)
{
  uint64_t v4 = (int *)type metadata accessor for FormatMetadata();
  uint64_t v5 = *((void *)v4 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v5 + 48))(a2, 1, v4))
  {
    sub_1BFEC2B10(0, &qword_1EB874B58, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    uint64_t v20 = v5;
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = v4[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C151928C();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    swift_bridgeObjectRetain();
    v13(v9, v10, v11);
    v13((char *)a1 + v4[6], (char *)a2 + v4[6], v11);
    uint64_t v14 = v4[7];
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))((char *)a2 + v14, 1, v11))
    {
      sub_1BFEC2B10(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      v13(v15, v16, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
    }
    *(void *)((char *)a1 + v4[8]) = *(void *)((char *)a2 + v4[8]);
    *(void *)((char *)a1 + v4[9]) = *(void *)((char *)a2 + v4[9]);
    *(void *)((char *)a1 + v4[10]) = *(void *)((char *)a2 + v4[10]);
    *(void *)((char *)a1 + v4[11]) = *(void *)((char *)a2 + v4[11]);
    uint64_t v18 = *(void (**)(void *, void, uint64_t, int *))(v20 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18(a1, 0, 1, v4);
  }
  return a1;
}

char *sub_1C0DF8A8C(char *a1, char *a2)
{
  uint64_t v4 = (int *)type metadata accessor for FormatMetadata();
  uint64_t v5 = (void *)*((void *)v4 - 1);
  uint64_t v6 = (uint64_t (*)(char *, uint64_t, int *))v5[6];
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (v8)
    {
      sub_1BFEFDB90((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      goto LABEL_7;
    }
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = *((void *)a2 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v20 = v4[5];
    uint64_t v21 = &a1[v20];
    uint64_t v22 = &a2[v20];
    uint64_t v23 = sub_1C151928C();
    uint64_t v24 = *(void *)(v23 - 8);
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v24 + 24);
    v25(v21, v22, v23);
    v25(&a1[v4[6]], &a2[v4[6]], v23);
    uint64_t v26 = v4[7];
    uint64_t v27 = &a2[v26];
    double v37 = &a1[v26];
    uint64_t v28 = *(uint64_t (**)(void))(v24 + 48);
    int v29 = v28();
    int v30 = ((uint64_t (*)(char *, uint64_t, uint64_t))v28)(v27, 1, v23);
    if (v29)
    {
      if (!v30)
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v37, v27, v23);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v37, 0, 1, v23);
        goto LABEL_18;
      }
      sub_1BFEC2B10(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
      size_t v32 = *(void *)(*(void *)(v31 - 8) + 64);
      double v33 = v37;
    }
    else
    {
      if (!v30)
      {
        v25(v37, v27, v23);
        goto LABEL_18;
      }
      (*(void (**)(char *, uint64_t))(v24 + 8))(v37, v23);
      sub_1BFEC2B10(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
      size_t v32 = *(void *)(*(void *)(v35 - 8) + 64);
      double v33 = v37;
    }
    memcpy(v33, v27, v32);
LABEL_18:
    *(void *)&a1[v4[8]] = *(void *)&a2[v4[8]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)&a1[v4[9]] = *(void *)&a2[v4[9]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)&a1[v4[10]] = *(void *)&a2[v4[10]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)&a1[v4[11]] = *(void *)&a2[v4[11]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return a1;
  }
  if (v8)
  {
LABEL_7:
    sub_1BFEC2B10(0, &qword_1EB874B58, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
    return a1;
  }
  __src = v5;
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  uint64_t v9 = v4[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_1C151928C();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  swift_bridgeObjectRetain();
  v14(v10, v11, v12);
  v14(&a1[v4[6]], &a2[v4[6]], v12);
  uint64_t v15 = v4[7];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(&a2[v15], 1, v12))
  {
    sub_1BFEC2B10(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    v14(v16, v17, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v16, 0, 1, v12);
  }
  *(void *)&a1[v4[8]] = *(void *)&a2[v4[8]];
  *(void *)&a1[v4[9]] = *(void *)&a2[v4[9]];
  *(void *)&a1[v4[10]] = *(void *)&a2[v4[10]];
  *(void *)&a1[v4[11]] = *(void *)&a2[v4[11]];
  CGFloat v34 = (void (*)(char *, void, uint64_t, int *))__src[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v34(a1, 0, 1, v4);
  return a1;
}

_OWORD *sub_1C0DF8FF8(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4 = (int *)type metadata accessor for FormatMetadata();
  uint64_t v5 = *((void *)v4 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v5 + 48))(a2, 1, v4))
  {
    sub_1BFEC2B10(0, &qword_1EB874B58, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = v4[5];
    int v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1C151928C();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v12(v8, v9, v10);
    v12((char *)a1 + v4[6], (char *)a2 + v4[6], v10);
    uint64_t v13 = v4[7];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))((char *)a2 + v13, 1, v10))
    {
      sub_1BFEC2B10(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      v12(v14, v15, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
    }
    *(void *)((char *)a1 + v4[8]) = *(void *)((char *)a2 + v4[8]);
    *(void *)((char *)a1 + v4[9]) = *(void *)((char *)a2 + v4[9]);
    *(void *)((char *)a1 + v4[10]) = *(void *)((char *)a2 + v4[10]);
    *(void *)((char *)a1 + v4[11]) = *(void *)((char *)a2 + v4[11]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

char *sub_1C0DF9280(char *a1, char *a2)
{
  uint64_t v4 = (int *)type metadata accessor for FormatMetadata();
  uint64_t v5 = *((void *)v4 - 1);
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, int *))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (v8)
    {
      sub_1BFEFDB90((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      goto LABEL_7;
    }
    uint64_t v20 = *((void *)a2 + 1);
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = v20;
    swift_bridgeObjectRelease();
    uint64_t v21 = v4[5];
    uint64_t v22 = &a1[v21];
    uint64_t v23 = &a2[v21];
    uint64_t v24 = sub_1C151928C();
    uint64_t v25 = *(void *)(v24 - 8);
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v25 + 40);
    v26(v22, v23, v24);
    v26(&a1[v4[6]], &a2[v4[6]], v24);
    uint64_t v27 = v4[7];
    uint64_t v28 = &a2[v27];
    double v37 = &a1[v27];
    int v29 = *(uint64_t (**)(void))(v25 + 48);
    int v30 = v29();
    int v31 = ((uint64_t (*)(char *, uint64_t, uint64_t))v29)(v28, 1, v24);
    if (v30)
    {
      if (!v31)
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v37, v28, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v37, 0, 1, v24);
        goto LABEL_18;
      }
      sub_1BFEC2B10(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
      size_t v33 = *(void *)(*(void *)(v32 - 8) + 64);
      CGFloat v34 = v37;
    }
    else
    {
      if (!v31)
      {
        v26(v37, v28, v24);
        goto LABEL_18;
      }
      (*(void (**)(char *, uint64_t))(v25 + 8))(v37, v24);
      sub_1BFEC2B10(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
      size_t v33 = *(void *)(*(void *)(v35 - 8) + 64);
      CGFloat v34 = v37;
    }
    memcpy(v34, v28, v33);
LABEL_18:
    *(void *)&a1[v4[8]] = *(void *)&a2[v4[8]];
    swift_bridgeObjectRelease();
    *(void *)&a1[v4[9]] = *(void *)&a2[v4[9]];
    swift_bridgeObjectRelease();
    *(void *)&a1[v4[10]] = *(void *)&a2[v4[10]];
    swift_bridgeObjectRelease();
    *(void *)&a1[v4[11]] = *(void *)&a2[v4[11]];
    swift_bridgeObjectRelease();
    return a1;
  }
  if (v8)
  {
LABEL_7:
    sub_1BFEC2B10(0, &qword_1EB874B58, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
    return a1;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v9 = v4[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_1C151928C();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v14(v10, v11, v12);
  v14(&a1[v4[6]], &a2[v4[6]], v12);
  uint64_t v15 = v4[7];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(&a2[v15], 1, v12))
  {
    sub_1BFEC2B10(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    v14(v16, v17, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v16, 0, 1, v12);
  }
  *(void *)&a1[v4[8]] = *(void *)&a2[v4[8]];
  *(void *)&a1[v4[9]] = *(void *)&a2[v4[9]];
  *(void *)&a1[v4[10]] = *(void *)&a2[v4[10]];
  *(void *)&a1[v4[11]] = *(void *)&a2[v4[11]];
  (*(void (**)(char *, void, uint64_t, int *))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t sub_1C0DF9788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0DF979C);
}

uint64_t sub_1C0DF979C(uint64_t a1, uint64_t a2)
{
  sub_1BFEC2B10(0, &qword_1EB874B58, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1C0DF9824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0DF9838);
}

uint64_t sub_1C0DF9838(uint64_t a1, uint64_t a2)
{
  sub_1BFEC2B10(0, &qword_1EB874B58, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for FormatFileReferenceCollection.MetadataContainer.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

unsigned char *sub_1C0DF98DC(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C0DF9978);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0DF99A0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C0DF99BC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C0DF99D8()
{
  return swift_getWitnessTable();
}

ValueMetadata *type metadata accessor for A12_V15()
{
  return &type metadata for A12_V15;
}

uint64_t sub_1C0DF9A04(void *a1)
{
  uint64_t v3 = v1;
  sub_1C0DFCA30(0, &qword_1EA1A7910, (uint64_t (*)(void))sub_1C0DFC9DC, (uint64_t)&type metadata for A12_V15.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0DFC9DC();
  sub_1C1520F0C();
  long long v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  char v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1C0DFCA98(&qword_1EA197288, type metadata accessor for CGRect);
  sub_1C152080C();
  if (!v2)
  {
    *(void *)&v12[0] = *(void *)(v3 + 32);
    char v13 = 1;
    sub_1BFC6CA08(0, &qword_1EB879DF0);
    sub_1BFC86580(&qword_1EA197720, (void (*)(void))sub_1C007AA58);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C0DF9C4C(uint64_t a1)
{
  unint64_t v2 = sub_1C0DFC9DC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0DF9C88(uint64_t a1)
{
  unint64_t v2 = sub_1C0DFC9DC();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C0DF9CC4@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0DFC72C(a1, v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1C0DF9D0C(void *a1)
{
  return sub_1C0DF9A04(a1);
}

uint64_t sub_1C0DF9D24()
{
  sub_1C0DFC3C8();
  return sub_1C151798C();
}

uint64_t sub_1C0DF9DA0@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  sub_1C0DFCA30(0, &qword_1EB871310, (uint64_t (*)(void))sub_1C007AAAC, (uint64_t)&type metadata for HeadlineViewLayout.Attributes, MEMORY[0x1E4FAB718]);
  swift_allocObject();
  uint64_t result = sub_1C151775C();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1C0DF9E5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v74 = a2;
  uint64_t v61 = a3;
  uint64_t v5 = sub_1C151635C();
  uint64_t v56 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for GroupLayoutContext();
  uint64_t v59 = *(void *)(v8 - 8);
  uint64_t v60 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v62 = (uint64_t)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v49 - v11;
  uint64_t v13 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v57 = *(void *)(v13 - 8);
  uint64_t v58 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v16 = *v3;
  uint64_t v17 = (void *)*((void *)v3 + 1);
  unsigned __int8 v18 = v3[16];
  *(void *)&long long v70 = 4;
  if (GroupLayoutBindingContext.count(for:)((NewsFeed::FeedItemTraits)&v70))
  {
    sub_1C0020AF0();
    swift_allocError();
    *(_OWORD *)uint64_t v19 = 0u;
    *(_OWORD *)(v19 + 16) = 0u;
    *(void *)(v19 + 32) = 0;
    *(unsigned char *)(v19 + 40) = 13;
    return swift_willThrow();
  }
  else
  {
    uint64_t v55 = a1;
    CGFloat v52 = v15;
    sub_1BFF1AFA4(a1, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
    CGFloat v54 = type metadata accessor for GroupLayoutContext;
    double v53 = v12;
    sub_1BFF1AFA4(v74, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    uint64_t v21 = v17;
    uint64_t v22 = v17;
    unsigned __int8 v23 = v18;
    sub_1BFFFC7A0(v22, v18);
    sub_1C151634C();
    uint64_t v51 = sub_1C151633C();
    uint64_t v50 = v24;
    (*(void (**)(char *, uint64_t))(v56 + 8))(v7, v5);
    double v72 = &type metadata for A12_V15;
    unint64_t v25 = sub_1C01869C8();
    unint64_t v73 = v25;
    LOBYTE(v70) = v16;
    *((void *)&v70 + 1) = v21;
    unsigned __int8 v71 = v18;
    type metadata accessor for GroupLayoutKey();
    uint64_t v26 = swift_allocObject();
    sub_1BFFFC7A0(v21, v18);
    uint64_t v64 = sub_1C1520FAC();
    uint64_t v65 = v27;
    uint64_t v68 = 95;
    unint64_t v69 = 0xE100000000000000;
    uint64_t v66 = 45;
    unint64_t v67 = 0xE100000000000000;
    sub_1BFF27ECC();
    uint64_t v28 = sub_1C151FEBC();
    uint64_t v30 = v29;
    swift_bridgeObjectRelease();
    *(void *)(v26 + 16) = v28;
    *(void *)(v26 + 24) = v30;
    int v31 = (uint64_t *)(v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
    uint64_t v32 = v50;
    *int v31 = v51;
    v31[1] = v32;
    sub_1BFC66384((uint64_t)&v70, v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
    uint64_t v33 = v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
    sub_1BFF2389C((uint64_t)v52, v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v57 + 56))(v33, 0, 1, v58);
    uint64_t v34 = v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
    sub_1BFF2389C((uint64_t)v53, v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v59 + 56))(v34, 0, 1, v60);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v70);
    sub_1BFFFC630(v21, v18);
    double v72 = &type metadata for A12_V15;
    unint64_t v73 = v25;
    LOBYTE(v70) = v16;
    *((void *)&v70 + 1) = v21;
    unsigned __int8 v71 = v18;
    uint64_t v35 = v62;
    sub_1BFF1AFA4(v74, v62, (uint64_t (*)(void))v54);
    sub_1C00192A8(0, qword_1EB871A20, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = MEMORY[0x1E4FBC860];
    double v37 = (void *)(v36 + 16);
    swift_beginAccess();
    CGFloat v38 = *(void **)(v36 + 16);
    sub_1BFFFC7A0(v21, v23);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v36 + 16) = v38;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      CGFloat v38 = sub_1BFFB83AC(0, v38[2] + 1, 1, v38);
      *double v37 = v38;
    }
    CGFloat v40 = v61;
    uint64_t v41 = v63;
    unint64_t v43 = v38[2];
    unint64_t v42 = v38[3];
    if (v43 >= v42 >> 1)
    {
      CGFloat v38 = sub_1BFFB83AC((void *)(v42 > 1), v43 + 1, 1, v38);
      *double v37 = v38;
    }
    v38[2] = v43 + 1;
    double v44 = &v38[2 * v43];
    v44[4] = sub_1C064667C;
    v44[5] = 0;
    swift_endAccess();
    uint64_t v45 = sub_1C001E608((uint64_t)&unk_1F1B835D0, 0, 0, v36, 0, 0, 0, 0);
    if (v41)
    {
      swift_release();
      swift_release();
      sub_1BFF1F104(v35, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v70);
    }
    else
    {
      uint64_t v46 = v45;
      swift_release();
      uint64_t v47 = type metadata accessor for A12_V15.Bound();
      v40[3] = v47;
      v40[4] = sub_1C0DFCA98(&qword_1EA1A7870, (void (*)(uint64_t))type metadata accessor for A12_V15.Bound);
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v40);
      uint64_t *boxed_opaque_existential_0 = v26;
      sub_1BFC773DC(&v70, (uint64_t)(boxed_opaque_existential_0 + 1));
      uint64_t result = sub_1BFF2389C(v35, (uint64_t)boxed_opaque_existential_0 + *(int *)(v47 + 24), (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
      *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v47 + 28)) = v46;
    }
  }
  return result;
}

double sub_1C0DFA54C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C1517A9C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v2 + *(int *)(type metadata accessor for A12_V15.Bound() + 28));
  uint64_t v23 = v2;
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1C0182EAC((void (*)(uint64_t))sub_1C0DFC34C, (uint64_t)v22, v8, (uint64_t)v29);
  swift_bridgeObjectRelease();
  uint64_t v10 = *MEMORY[0x1E4FAB6D8];
  uint64_t v11 = sub_1C151759C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v7, v10, v11);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB8F0], v4);
  uint64_t v21 = v9;
  sub_1C0DFC480(0, &qword_1EA1A7890, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  uint64_t v20 = sub_1C1517BEC();
  uint64_t v12 = sub_1C1517BFC();
  *(_OWORD *)uint64_t v19 = v25;
  uint64_t v13 = v26;
  uint64_t v14 = v27;
  uint64_t v24 = v28;
  *(void *)&long long v25 = v9;
  MEMORY[0x1F4188790](v12);
  sub_1C00192A8(0, &qword_1EB879E08, type metadata accessor for HeadlineViewLayout.Context, MEMORY[0x1E4FBB320]);
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  sub_1BFEB368C();
  sub_1BFEB2B48(&qword_1EB879DF8, &qword_1EB879DF0);
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1C151951C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v25 = v15;
  sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB2B48((unint64_t *)&qword_1EB879CC0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB0FD4();
  uint64_t v16 = sub_1C151E91C();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(unsigned char *)a1 = 0;
  double result = v19[0];
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v19;
  *(void *)(a1 + 24) = v13;
  *(void *)(a1 + 32) = v14;
  uint64_t v18 = MEMORY[0x1E4FBC860];
  *(void *)(a1 + 40) = v16;
  *(void *)(a1 + 48) = v18;
  return result;
}

uint64_t sub_1C0DFA924@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = *a2;
  sub_1BFF1AFA4(a1, (uint64_t)v8, type metadata accessor for FeedHeadline);
  uint64_t v10 = (char *)a2 + *(int *)(type metadata accessor for A12_V15.Bound() + 24);
  uint64_t v11 = type metadata accessor for GroupLayoutContext();
  uint64_t v12 = *(void *)(*(void *)&v10[*(int *)(v11 + 40)] + 16);
  double v13 = *(double *)&v10[*(int *)(v11 + 32)];
  sub_1BFC66384(v12 + 16, (uint64_t)v19);
  sub_1BFC66384(v12 + 56, (uint64_t)v18);
  double v14 = v13 * *(double *)(v12 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  uint64_t inited = swift_initStackObject();
  sub_1BFC773DC(v19, inited + 16);
  sub_1BFC773DC(v18, inited + 56);
  *(double *)(inited + 96) = v14;
  char v21 = 2;
  swift_retain();
  FeedLayoutStylerFactory.styler(withHeading:)(&v21, v20);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  return HeadlineViewLayout.Context.init(key:model:styler:)(v9, (uint64_t)v8, (uint64_t)v20, a3);
}

uint64_t sub_1C0DFAAB0(uint64_t a1, uint64_t a2)
{
  sub_1C0DFCA30(0, &qword_1EA1A78A8, (uint64_t (*)(void))sub_1C0DFC374, (uint64_t)&type metadata for A12_V15.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)&v12[-v7];
  uint64_t v14 = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 12;
  *uint64_t v8 = v9;
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FABA10], v5);
  uint64_t v13 = a2;
  uint64_t v10 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C0DFC480(0, &qword_1EA1A78B0, MEMORY[0x1E4FAB6F0]);
  sub_1C0DFC43C(&qword_1EA1A78B8, &qword_1EA1A78B0, v10);
  sub_1C151734C();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C0DFAC9C(uint64_t a1, uint64_t a2)
{
  uint64_t v23 = a2;
  uint64_t v22 = sub_1C0DFC374;
  sub_1C0DFCA30(0, &qword_1EA1A78A8, (uint64_t (*)(void))sub_1C0DFC374, (uint64_t)&type metadata for A12_V15.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (void *)((char *)v21 - v6);
  uint64_t v25 = a1;
  uint64_t v8 = sub_1C151729C();
  uint64_t v9 = swift_allocBox();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v8 - 8) + 104))(v10, *MEMORY[0x1E4FAB4E8], v8);
  uint64_t *v7 = v9;
  uint64_t v11 = *(void (**)(uint64_t *, void, uint64_t))(v5 + 104);
  v11(v7, *MEMORY[0x1E4FAB940], v4);
  uint64_t v12 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0DFC480(0, &qword_1EA1A78C0, MEMORY[0x1E4FAB4D0]);
  v21[1] = v13;
  sub_1C0DFC43C(&qword_1EA1A78C8, &qword_1EA1A78C0, v12);
  sub_1C151738C();
  uint64_t v14 = *(void (**)(uint64_t *, uint64_t))(v5 + 8);
  v14(v7, v4);
  uint64_t v25 = a1;
  v11(v7, *MEMORY[0x1E4FABA28], v4);
  sub_1C0DFC504();
  sub_1C0DFCA30(0, &qword_1EA1A78D8, (uint64_t (*)(void))v22, (uint64_t)&type metadata for A12_V15.Layout, MEMORY[0x1E4FAB678]);
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C1529AE0;
  (*(void (**)(unint64_t, void, uint64_t))(v17 + 104))(v19 + v18, *MEMORY[0x1E4FAB638], v16);
  uint64_t v24 = v23;
  sub_1C151731C();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t *, uint64_t))v14)(v7, v4);
}

uint64_t sub_1C0DFB008(uint64_t a1, uint64_t a2)
{
  uint64_t v16 = a2;
  uint64_t v17 = a1;
  sub_1C0DFCA30(0, &qword_1EA1A78A8, (uint64_t (*)(void))sub_1C0DFC374, (uint64_t)&type metadata for A12_V15.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)((char *)&v16 - v7);
  uint64_t v20 = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 6;
  *uint64_t v8 = v9;
  uint64_t v10 = *MEMORY[0x1E4FABA10];
  uint64_t v11 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104);
  v11(v8, v10, v5);
  uint64_t v19 = a2;
  uint64_t v12 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0DFC480(0, &qword_1EA1A78C0, MEMORY[0x1E4FAB4D0]);
  sub_1C0DFC43C(&qword_1EA1A78C8, &qword_1EA1A78C0, v12);
  sub_1C151734C();
  uint64_t v13 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v13(v8, v5);
  uint64_t v20 = v17;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 6;
  *uint64_t v8 = v14;
  v11(v8, v10, v5);
  uint64_t v18 = v16;
  sub_1C151734C();
  return ((uint64_t (*)(uint64_t *, uint64_t))v13)(v8, v5);
}

uint64_t sub_1C0DFB2AC(uint64_t a1, uint64_t a2)
{
  uint64_t v43 = a1;
  uint64_t v3 = sub_1C1517A9C();
  uint64_t v39 = *(void *)(v3 - 8);
  uint64_t v40 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v41 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C151794C();
  uint64_t v42 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (uint64_t *)((char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0DFCA30(0, &qword_1EA1A78A8, (uint64_t (*)(void))sub_1C0DFC374, (uint64_t)&type metadata for A12_V15.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v35 - v18;
  uint64_t v44 = v43;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v20 = *MEMORY[0x1E4FAB9E0];
  uint64_t v43 = v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v19, v20, v16);
  if (!*(void *)(a2 + 16))
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v36 = v5;
  uint64_t v37 = v16;
  sub_1BFF1AFA4(a2 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), (uint64_t)v14, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v21 = qword_1F1B8A030;
  uint64_t v22 = (char *)v10 + v8[5];
  uint64_t v23 = *MEMORY[0x1E4FAB8C8];
  uint64_t v24 = sub_1C1517A7C();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  uint64_t v26 = (void **)MEMORY[0x1E4FB27D0];
  uint64_t *v10 = v21;
  *(uint64_t *)((char *)v10 + v8[6]) = 5;
  uint64_t v27 = *v26;
  *(uint64_t *)((char *)v10 + v8[7]) = (uint64_t)v27;
  uint64_t v28 = qword_1EB87CC48;
  id v29 = v27;
  if (v28 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  uint64_t v30 = swift_release();
  __n128 v31 = MEMORY[0x1F4188790](v30);
  *(&v35 - 4) = (uint64_t)v14;
  *(&v35 - 3) = (uint64_t)v10;
  unint64_t v34 = (unint64_t)v7;
  (*(void (**)(char *, void, uint64_t, __n128))(v39 + 104))(v41, *MEMORY[0x1E4FAB8F8], v40, v31);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v7, v36);
  sub_1BFF1F104((uint64_t)v10, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F104((uint64_t)v14, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v32 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0DFC480(0, &qword_1EA1A78C0, MEMORY[0x1E4FAB4D0]);
  sub_1C0DFC43C(&qword_1EA1A78C8, &qword_1EA1A78C0, v32);
  unint64_t v34 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v19, v37);
}

uint64_t sub_1C0DFB894(uint64_t a1, uint64_t a2)
{
  uint64_t v43 = a1;
  uint64_t v3 = sub_1C1517A9C();
  uint64_t v39 = *(void *)(v3 - 8);
  uint64_t v40 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v41 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C151794C();
  uint64_t v42 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (uint64_t *)((char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0DFCA30(0, &qword_1EA1A78A8, (uint64_t (*)(void))sub_1C0DFC374, (uint64_t)&type metadata for A12_V15.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v35 - v18;
  uint64_t v44 = v43;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v20 = *MEMORY[0x1E4FAB9E0];
  uint64_t v43 = v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v19, v20, v16);
  if (*(void *)(a2 + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v36 = v5;
  uint64_t v37 = v16;
  sub_1BFF1AFA4(a2+ *(void *)(v12 + 72)+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), (uint64_t)v14, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v21 = qword_1F1B8A058;
  uint64_t v22 = (char *)v10 + v8[5];
  uint64_t v23 = *MEMORY[0x1E4FAB8C8];
  uint64_t v24 = sub_1C1517A7C();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  uint64_t v26 = (void **)MEMORY[0x1E4FB27D0];
  uint64_t *v10 = v21;
  *(uint64_t *)((char *)v10 + v8[6]) = 5;
  uint64_t v27 = *v26;
  *(uint64_t *)((char *)v10 + v8[7]) = (uint64_t)v27;
  uint64_t v28 = qword_1EB87CC48;
  id v29 = v27;
  if (v28 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  uint64_t v30 = swift_release();
  __n128 v31 = MEMORY[0x1F4188790](v30);
  *(&v35 - 4) = (uint64_t)v14;
  *(&v35 - 3) = (uint64_t)v10;
  unint64_t v34 = (unint64_t)v7;
  (*(void (**)(char *, void, uint64_t, __n128))(v39 + 104))(v41, *MEMORY[0x1E4FAB8F8], v40, v31);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v7, v36);
  sub_1BFF1F104((uint64_t)v10, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F104((uint64_t)v14, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v32 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0DFC480(0, &qword_1EA1A78C0, MEMORY[0x1E4FAB4D0]);
  sub_1C0DFC43C(&qword_1EA1A78C8, &qword_1EA1A78C0, v32);
  unint64_t v34 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v19, v37);
}

uint64_t sub_1C0DFBE88@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  memcpy(v21, __src, sizeof(v21));
  sub_1BFE298EC();
  uint64_t v10 = v9;
  uint64_t v11 = swift_allocBox();
  uint64_t v13 = v12;
  uint64_t v14 = (void *)(v12 + *(int *)(v10 + 48));
  uint64_t v15 = *(int *)(v10 + 64);
  sub_1BFF1AFA4(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  uint64_t v16 = a4 + *(int *)(type metadata accessor for A12_V15.Bound() + 24);
  uint64_t result = type metadata accessor for GroupLayoutContext();
  uint64_t v18 = *(void *)(v16 + *(int *)(result + 28));
  BOOL v19 = __OFADD__(v18, a2);
  uint64_t v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1C0DFBF78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C0DF9E5C(a1, a2, a3);
}

uint64_t sub_1C0DFBF90()
{
  return sub_1C12BC340();
}

unint64_t sub_1C0DFBFA0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C0DFBFD0();
  unint64_t result = sub_1C0DFC024();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0DFBFD0()
{
  unint64_t result = qword_1EA1A7860;
  if (!qword_1EA1A7860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7860);
  }
  return result;
}

unint64_t sub_1C0DFC024()
{
  unint64_t result = qword_1EA1A7868;
  if (!qword_1EA1A7868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7868);
  }
  return result;
}

uint64_t type metadata accessor for A12_V15.Bound()
{
  uint64_t result = qword_1EA1A7878;
  if (!qword_1EA1A7878) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0DFC0C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0DFC0D8);
}

uint64_t sub_1C0DFC0D8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C0DFC188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0DFC19C);
}

void *sub_1C0DFC19C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for GroupLayoutContext();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C0DFC244()
{
  uint64_t result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C0DFC2F4(uint64_t a1)
{
  uint64_t result = sub_1C0DFCA98(&qword_1EA1A7888, (void (*)(uint64_t))type metadata accessor for A12_V15.Bound);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0DFC34C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C0DFA924(a1, *(uint64_t **)(v2 + 16), a2);
}

uint64_t sub_1C0DFC36C(uint64_t a1)
{
  return sub_1C0DFAAB0(a1, *(void *)(v1 + 16));
}

unint64_t sub_1C0DFC374()
{
  unint64_t result = qword_1EA1A7898;
  if (!qword_1EA1A7898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7898);
  }
  return result;
}

unint64_t sub_1C0DFC3C8()
{
  unint64_t result = qword_1EA1A78A0;
  if (!qword_1EA1A78A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A78A0);
  }
  return result;
}

uint64_t sub_1C0DFC41C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1C0DFBE88(a3, a1, a2, *(void *)(v4 + 16), a4);
}

uint64_t sub_1C0DFC424()
{
  return swift_deallocObject();
}

uint64_t sub_1C0DFC434(uint64_t a1)
{
  return sub_1C0DFAC9C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0DFC43C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0DFC480(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C0DFC480(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for A12_V15.Layout;
    v8[1] = &type metadata for A12_V15.Layout.Attributes;
    v8[2] = sub_1C0DFC374();
    v8[3] = sub_1C0DFC3C8();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C0DFC504()
{
  if (!qword_1EA1A78D0)
  {
    sub_1C0DFCA30(255, &qword_1EA1A78D8, (uint64_t (*)(void))sub_1C0DFC374, (uint64_t)&type metadata for A12_V15.Layout, MEMORY[0x1E4FAB678]);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A78D0);
    }
  }
}

uint64_t sub_1C0DFC594(uint64_t a1)
{
  return sub_1C0DFB008(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0DFC59C(uint64_t a1)
{
  return sub_1C0DFB2AC(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0DFC5A4(uint64_t a1)
{
  return sub_1C0DFB894(a1, *(void *)(v1 + 16));
}

ValueMetadata *type metadata accessor for A12_V15.Layout.Attributes()
{
  return &type metadata for A12_V15.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A12_V15.Layout()
{
  return &type metadata for A12_V15.Layout;
}

unint64_t sub_1C0DFC5D0()
{
  unint64_t result = qword_1EA1A78E0;
  if (!qword_1EA1A78E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A78E0);
  }
  return result;
}

unint64_t sub_1C0DFC628()
{
  unint64_t result = qword_1EA1A78E8;
  if (!qword_1EA1A78E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A78E8);
  }
  return result;
}

unint64_t sub_1C0DFC680()
{
  unint64_t result = qword_1EA1A78F0;
  if (!qword_1EA1A78F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A78F0);
  }
  return result;
}

unint64_t sub_1C0DFC6D8()
{
  unint64_t result = qword_1EA1A78F8;
  if (!qword_1EA1A78F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A78F8);
  }
  return result;
}

uint64_t sub_1C0DFC72C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v18 = a2;
  sub_1C0DFCA30(0, &qword_1EA1A7900, (uint64_t (*)(void))sub_1C0DFC9DC, (uint64_t)&type metadata for A12_V15.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0DFC9DC();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v18;
  type metadata accessor for CGRect(0);
  char v23 = 0;
  sub_1C0DFCA98(&qword_1EB87A290, type metadata accessor for CGRect);
  sub_1C15206EC();
  uint64_t v11 = v19;
  uint64_t v12 = v20;
  uint64_t v13 = v21;
  uint64_t v14 = v22;
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  char v23 = 1;
  sub_1BFC86580(&qword_1EB879E00, (void (*)(void))sub_1C007AA04);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v15 = v19;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  void *v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1C0DFC9DC()
{
  unint64_t result = qword_1EA1A7908;
  if (!qword_1EA1A7908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7908);
  }
  return result;
}

void sub_1C0DFCA30(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C0DFCA98(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for A12_V15.Layout.Attributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0DFCBACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for A12_V15.Layout.Attributes.CodingKeys()
{
  return &type metadata for A12_V15.Layout.Attributes.CodingKeys;
}

unint64_t sub_1C0DFCBE8()
{
  unint64_t result = qword_1EA1A7918;
  if (!qword_1EA1A7918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7918);
  }
  return result;
}

unint64_t sub_1C0DFCC40()
{
  unint64_t result = qword_1EA1A7920;
  if (!qword_1EA1A7920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7920);
  }
  return result;
}

unint64_t sub_1C0DFCC98()
{
  unint64_t result = qword_1EA1A7928;
  if (!qword_1EA1A7928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7928);
  }
  return result;
}

uint64_t initializeWithCopy for DebugInspectionAggregate(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DebugInspectionAggregate(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v4;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v5 = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 80) = v5;
  return a1;
}

__n128 __swift_memcpy89_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for DebugInspectionAggregate(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugInspectionAggregate(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 89)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugInspectionAggregate(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 88) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 89) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 89) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionAggregate()
{
  return &type metadata for DebugInspectionAggregate;
}

uint64_t sub_1C0DFCF88(void *a1)
{
  uint64_t v3 = v1;
  sub_1C0DFD988(0, &qword_1EA1A7940, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0DFD934();
  sub_1C1520F0C();
  v12[0] = 0;
  sub_1C15207CC();
  if (!v2)
  {
    sub_1C0DFD9EC(v3 + 16, (uint64_t)v13);
    sub_1C0DFD9EC((uint64_t)v13, (uint64_t)v12);
    v11[15] = 1;
    sub_1BFED9C20();
    sub_1BFD4A88C((unint64_t *)&qword_1EB85DF50);
    sub_1C152078C();
    v12[0] = 2;
    sub_1C15207CC();
    v12[0] = 3;
    sub_1C15207EC();
    v12[0] = 4;
    sub_1C152076C();
    v12[0] = 5;
    sub_1C15207EC();
    v12[0] = 6;
    sub_1C15207EC();
    v12[0] = 7;
    sub_1C15207BC();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C0DFD248()
{
  uint64_t result = 1701667182;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1936154996;
      break;
    case 2:
      uint64_t result = 0x696669746E656469;
      break;
    case 3:
      uint64_t result = 7500899;
      break;
    case 4:
      uint64_t result = 0x6B63696C43776172;
      break;
    case 5:
      uint64_t result = 0x736B63696C63;
      break;
    case 6:
      uint64_t result = 0x6973736572706D69;
      break;
    case 7:
      uint64_t result = 0x756F43746E657665;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0DFD340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0DFDCB4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0DFD368(uint64_t a1)
{
  unint64_t v2 = sub_1C0DFD934();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0DFD3A4(uint64_t a1)
{
  unint64_t v2 = sub_1C0DFD934();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C0DFD3E0@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1C0DFD480(a1, (uint64_t)v7);
  if (!v2)
  {
    long long v5 = v7[3];
    a2[2] = v7[2];
    a2[3] = v5;
    a2[4] = v8[0];
    *(_OWORD *)((char *)a2 + 73) = *(_OWORD *)((char *)v8 + 9);
    double result = *(double *)v7;
    long long v6 = v7[1];
    *a2 = v7[0];
    a2[1] = v6;
  }
  return result;
}

uint64_t sub_1C0DFD434(void *a1)
{
  return sub_1C0DFCF88(a1);
}

uint64_t sub_1C0DFD480@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0DFD988(0, &qword_1EA1A7930, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v32 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0DFD934();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v39) = 0;
  uint64_t v10 = sub_1C152069C();
  uint64_t v12 = v11;
  sub_1BFED9C20();
  char v38 = 1;
  sub_1BFD4A88C((unint64_t *)&qword_1EB879F50);
  swift_bridgeObjectRetain();
  sub_1C152065C();
  uint64_t v36 = v10;
  uint64_t v13 = v39;
  LOBYTE(v39) = 2;
  swift_bridgeObjectRetain();
  uint64_t v34 = sub_1C152069C();
  uint64_t v35 = v13;
  LOBYTE(v39) = 3;
  uint64_t v15 = v14;
  swift_bridgeObjectRetain();
  sub_1C15206BC();
  uint64_t v37 = v15;
  uint64_t v17 = v16;
  LOBYTE(v39) = 4;
  uint64_t v18 = sub_1C152062C();
  HIDWORD(v32) = v19;
  uint64_t v33 = v18;
  LOBYTE(v39) = 5;
  sub_1C15206BC();
  uint64_t v21 = v20;
  LOBYTE(v39) = 6;
  sub_1C15206BC();
  uint64_t v23 = v22;
  LOBYTE(v39) = 7;
  uint64_t v24 = sub_1C152068C();
  uint64_t v25 = v9;
  char v27 = v26;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v25, v6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  uint64_t v28 = v37;
  swift_bridgeObjectRelease();
  uint64_t v29 = v35;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v36;
  *(void *)(a2 + 8) = v12;
  uint64_t v31 = v34;
  *(void *)(a2 + 16) = v29;
  *(void *)(a2 + 24) = v31;
  *(void *)(a2 + 32) = v28;
  *(void *)(a2 + 40) = v17;
  *(void *)(a2 + 48) = v33;
  *(unsigned char *)(a2 + 56) = BYTE4(v32) & 1;
  *(void *)(a2 + 64) = v21;
  *(void *)(a2 + 72) = v23;
  *(void *)(a2 + 80) = v24;
  *(unsigned char *)(a2 + 88) = v27 & 1;
  return result;
}

unint64_t sub_1C0DFD934()
{
  unint64_t result = qword_1EA1A7938;
  if (!qword_1EA1A7938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7938);
  }
  return result;
}

void sub_1C0DFD988(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0DFD934();
    unint64_t v7 = a3(a1, &type metadata for DebugInspectionAggregate.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C0DFD9EC(uint64_t a1, uint64_t a2)
{
  sub_1C0DFDA50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C0DFDA50()
{
  if (!qword_1EA1A7948)
  {
    sub_1BFED9C20();
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A7948);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for DebugInspectionAggregate.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0DFDB74);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionAggregate.CodingKeys()
{
  return &type metadata for DebugInspectionAggregate.CodingKeys;
}

unint64_t sub_1C0DFDBB0()
{
  unint64_t result = qword_1EA1A7950;
  if (!qword_1EA1A7950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7950);
  }
  return result;
}

unint64_t sub_1C0DFDC08()
{
  unint64_t result = qword_1EA1A7958;
  if (!qword_1EA1A7958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7958);
  }
  return result;
}

unint64_t sub_1C0DFDC60()
{
  unint64_t result = qword_1EA1A7960;
  if (!qword_1EA1A7960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7960);
  }
  return result;
}

uint64_t sub_1C0DFDCB4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1936154996 && a2 == 0xE400000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 7500899 && a2 == 0xE300000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6B63696C43776172 && a2 == 0xE900000000000073 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x736B63696C63 && a2 == 0xE600000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6973736572706D69 && a2 == 0xEB00000000736E6FLL || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x756F43746E657665 && a2 == 0xEA0000000000746ELL)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

unsigned char *storeEnumTagSinglePayload for DebugFormatBackgroundColor(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0DFE0C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatBackgroundColor()
{
  return &type metadata for DebugFormatBackgroundColor;
}

unint64_t sub_1C0DFE104()
{
  unint64_t result = qword_1EA1A7968;
  if (!qword_1EA1A7968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7968);
  }
  return result;
}

id sub_1C0DFE158(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 1:
      int v3 = self;
      id v4 = objc_msgSend(v3, sel_secondarySystemBackgroundColor);
      id v5 = objc_msgSend(v3, sel_systemBackgroundColor);
      id v6 = objc_msgSend(v3, sel_ts_dynamicColor_withDarkStyleVariant_, v4, v5);

      id result = v6;
      break;
    case 2:
      id v7 = objc_msgSend(self, sel_systemBackgroundColor);
      goto LABEL_6;
    case 3:
      id v7 = objc_msgSend(self, sel_secondarySystemBackgroundColor);
LABEL_6:
      id result = v7;
      break;
    case 4:
      uint64_t v8 = self;
      sub_1BFF6B690();
      swift_retain();
      sub_1C151709C();
      swift_release();
      Class isa = UIColor.init(hex:)(v12).super.isa;
      swift_retain();
      sub_1C151709C();
      swift_release();
      Class v10 = UIColor.init(hex:)(v12).super.isa;
      id v11 = objc_msgSend(v8, sel_ts_dynamicColor_withDarkStyleVariant_, isa, v10);

      id result = v11;
      break;
    default:
      swift_retain();
      sub_1C151894C();
      swift_release();
      id result = sub_1C0DFE394();
      break;
  }
  return result;
}

id sub_1C0DFE394()
{
  switch(*v0)
  {
    case 2:
      id result = sub_1C0DFF040();
      if (!result) {
        goto LABEL_15;
      }
      break;
    case 3:
      id result = sub_1C0DFF040();
      if (!result) {
        goto LABEL_15;
      }
      break;
    case 6:
      id result = sub_1C0DFF040();
      if (!result) {
        goto LABEL_15;
      }
      break;
    case 7:
      id result = sub_1C0DFF040();
      if (!result) {
        goto LABEL_15;
      }
      break;
    case 0x14:
      id result = sub_1C0DFF040();
      if (!result) {
        goto LABEL_15;
      }
      break;
    case 0x16:
    case 0x17:
      id v2 = objc_msgSend(self, sel_systemBackgroundColor);
      id result = v2;
      break;
    default:
LABEL_15:
      int v3 = self;
      id v4 = objc_msgSend(v3, sel_secondarySystemBackgroundColor);
      id v5 = objc_msgSend(v3, sel_systemBackgroundColor);
      id v6 = objc_msgSend(v3, sel_ts_dynamicColor_withDarkStyleVariant_, v4, v5);

      id result = v6;
      break;
  }
  return result;
}

unint64_t sub_1C0DFEDF0(char a1)
{
  unint64_t result = 0x6574697265686E69;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6B63614264656566;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0xD000000000000019;
      break;
    case 4:
      unint64_t result = 0x6D6F74737563;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0DFEEBC(unsigned __int8 *a1, char *a2)
{
  return sub_1C147F4B0(*a1, *a2);
}

uint64_t sub_1C0DFEEC8()
{
  return sub_1C015EBA8();
}

uint64_t sub_1C0DFEED0()
{
  return sub_1C04488AC();
}

uint64_t sub_1C0DFEED8()
{
  return sub_1C044D79C();
}

uint64_t sub_1C0DFEEE0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0DFF3C8();
  *a1 = result;
  return result;
}

unint64_t sub_1C0DFEF10@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1C0DFEDF0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C0DFEF3C(uint64_t a1)
{
  unint64_t v2 = sub_1C0C7BE64();
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F8](a1, v2, v3);
}

uint64_t sub_1C0DFEF90(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1C0C7BE64();
  uint64_t v5 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F0](a1, a2, v4, v5);
}

uint64_t sub_1C0DFEFEC(uint64_t a1)
{
  unint64_t v2 = sub_1C0C7BE64();
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4E8](a1, v2, v3);
}

id sub_1C0DFF040()
{
  uint64_t v0 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1F4188790](v0 - 8);
  unint64_t v2 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  swift_retain();
  sub_1C151894C();
  swift_release();
  uint64_t v3 = *((void *)v2 + 8);
  swift_bridgeObjectRetain();
  sub_1BFF7712C((uint64_t)v2);
  if (*(void *)(v3 + 16) && (unint64_t v4 = sub_1BFEF2D8C(0x6373654464656546, 0xEE00726F74706972), (v5 & 1) != 0))
  {
    sub_1BFC66384(*(void *)(v3 + 56) + 40 * v4, (uint64_t)&v32);
  }
  else
  {
    uint64_t v34 = 0;
    long long v32 = 0u;
    long long v33 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v33 + 1))
  {
    sub_1C002D164((uint64_t)&v32);
    return 0;
  }
  sub_1C008B33C();
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  id v6 = v31;
  id v7 = FCFeedDescriptor.feedTag.getter();

  id v8 = objc_msgSend(v7, sel_theme);
  swift_unknownObjectRelease();
  if (!v8)
  {
LABEL_13:

    return 0;
  }
  id v9 = objc_msgSend(v8, sel_feedBackgroundColor);
  id v10 = objc_msgSend(v8, sel_darkStyleFeedBackgroundColor);
  if (!v9)
  {

    swift_unknownObjectRelease();
    goto LABEL_13;
  }
  if (v10)
  {
    id v11 = v10;
    objc_msgSend(v9, sel_red);
    double v13 = v12;
    objc_msgSend(v9, sel_green);
    double v15 = v14;
    objc_msgSend(v9, sel_blue);
    double v17 = v16;
    objc_msgSend(v9, sel_alpha);
    id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, v13, v15, v17, v18);
    id v20 = v11;
    objc_msgSend(v20, sel_red);
    double v22 = v21;
    objc_msgSend(v20, sel_green);
    double v24 = v23;
    objc_msgSend(v20, sel_blue);
    double v26 = v25;
    objc_msgSend(v20, sel_alpha);
    id v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, v22, v24, v26, v27);
    id v29 = objc_msgSend(self, sel_ts_dynamicColor_withDarkStyleVariant_, v19, v28);

    swift_unknownObjectRelease();
  }
  else
  {
    id v29 = objc_msgSend(v9, sel_ne_color);

    swift_unknownObjectRelease();
  }
  return v29;
}

uint64_t sub_1C0DFF3C8()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C0DFF414()
{
  sub_1C0DFF678(0, &qword_1EA1A7970, (uint64_t (*)(uint64_t))sub_1C0DFF6DC, MEMORY[0x1E4FBBE00]);
  sub_1C0DFF6DC();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C152C7E0;
  sub_1C15171AC();
  sub_1C15171AC();
  sub_1C15171AC();
  sub_1C15171AC();
  sub_1C15171AC();
  return v0;
}

void sub_1C0DFF678(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C0DFF6DC()
{
  if (!qword_1EA1A7978)
  {
    unint64_t v0 = sub_1C15171BC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A7978);
    }
  }
}

uint64_t dispatch thunk of HeadlineViewRendererType.presentingViewController.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of HeadlineViewRendererType.presentingViewController.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of HeadlineViewRendererType.presentingViewController.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of HeadlineViewRendererType.render(for:with:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of HeadlineViewRendererType.render(for:with:in:actionSenderHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 40))();
}

void (*sub_1C0DFF798(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess();
  v3[3] = MEMORY[0x1C18C9C60](v1 + 16);
  return sub_1C0DFF814;
}

void sub_1C0DFF814(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = *(void **)(*a1 + 24);
  swift_unknownObjectWeakAssign();
  if (a2)
  {

    swift_endAccess();
  }
  else
  {
    uint64_t v5 = *(void *)(v3 + 32) + 16;
    swift_endAccess();

    id v6 = (void *)MEMORY[0x1C18C9C60](v5);
    swift_beginAccess();
    swift_unknownObjectWeakAssign();
  }
  free((void *)v3);
}

uint64_t sub_1C0DFF8D0(void *a1, double *a2, void *a3, char *a4)
{
  v190 = a3;
  v199 = a1;
  id v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFE457AC(0, (unint64_t *)&qword_1EB871510, MEMORY[0x1E4FABC10], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  v185 = (char *)v167 - v8;
  uint64_t v192 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v183 = *(void *)(v192 - 8);
  MEMORY[0x1F4188790](v192);
  uint64_t v171 = v9;
  uint64_t v184 = (uint64_t)v167 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v182 = type metadata accessor for ImageRequestOptions();
  MEMORY[0x1F4188790](v182);
  v195 = (void *)((char *)v167 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v11);
  v191 = (char *)v167 - v12;
  sub_1BFE457AC(0, &qword_1EB87C4F0, type metadata accessor for FeedHeadline.State, v6);
  *(void *)&double v14 = MEMORY[0x1F4188790](v13 - 8).n128_u64[0];
  v186 = (char *)v167 - v15;
  double v16 = *(void **)&a4[qword_1EB874260];
  objc_msgSend(v16, sel_setNumberOfLines_, 0, v14);
  double v17 = *(void **)&a4[qword_1EB874270];
  objc_msgSend(v17, sel_setNumberOfLines_, 0);
  double v18 = *(void **)&a4[qword_1EB874280];
  objc_msgSend(v18, sel_setAttributedText_, 0);
  uint64_t v19 = *(void *)&a4[qword_1EB874250];
  sub_1C151CD6C();
  id v20 = *(char **)&a4[qword_1EB874258];
  sub_1C151CD6C();
  double v21 = *(void **)&a4[qword_1EB874278];
  objc_msgSend(v21, sel_setHidden_, 1);
  objc_msgSend(*(id *)&v20[qword_1EB93C718], sel_setHidden_, 1);
  objc_msgSend(v16, sel_setFrame_, a2[4], a2[5], a2[6], a2[7]);
  double v22 = a2[16];
  double v23 = a2[17];
  double v24 = a2[18];
  double v25 = a2[19];
  id v196 = v17;
  double v26 = v17;
  double v27 = v16;
  objc_msgSend(v26, sel_setFrame_, v22, v23, v24, v25);
  double v28 = a2[28];
  double v29 = a2[29];
  double v30 = a2[30];
  double v31 = a2[31];
  v194 = v20;
  objc_msgSend(v20, sel_setFrame_, v28, v29, v30, v31);
  double v32 = a2[34];
  double v33 = a2[35];
  double v34 = a2[36];
  double v35 = a2[37];
  v189 = (void *)v19;
  uint64_t v36 = (void *)v19;
  uint64_t v37 = v192;
  objc_msgSend(v36, sel_setFrame_, v32, v33, v34, v35);
  objc_msgSend(v18, sel_setFrame_, a2[8], a2[9], a2[10], a2[11]);
  double v38 = a2[12];
  double v39 = a2[13];
  double v40 = a2[14];
  double v41 = a2[15];
  v188 = (void (*)(void, void, void, void))v21;
  uint64_t v42 = v21;
  uint64_t v43 = v190;
  objc_msgSend(v42, sel_setFrame_, v38, v39, v40, v41);
  v197 = a4;
  double v44 = a2[24];
  double v45 = a2[25];
  double v46 = a2[26];
  double v47 = a2[27];
  id v193 = *(id *)&a4[qword_1EB874248];
  objc_msgSend(v193, sel_setFrame_, v44, v45, v46, v47);
  v48 = v199;
  uint64_t v49 = v43[3];
  uint64_t v50 = __swift_project_boxed_opaque_existential_1(v43, v49);
  v200[3] = v49;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v200);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v49 - 8) + 16))(boxed_opaque_existential_0, v50, v49);
  id v52 = (id)sub_1C0DF62E0((uint64_t)v200);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v200);
  objc_msgSend(v27, sel_setAttributedText_, v52);

  id v53 = *(id *)((char *)v48 + *(int *)(v37 + 32));
  v179 = v27;
  v180 = v18;
  uint64_t v54 = v37;
  if (v53)
  {
    uint64_t v55 = v43[3];
    uint64_t v56 = __swift_project_boxed_opaque_existential_1(v43, v55);
    v200[3] = v55;
    uint64_t v57 = __swift_allocate_boxed_opaque_existential_0(v200);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v55 - 8) + 16))(v57, v56, v55);
    id v53 = (id)sub_1C0DF62E0((uint64_t)v200);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v200);
  }
  uint64_t v58 = v188;
  uint64_t v59 = (uint64_t)v186;
  objc_msgSend(v196, sel_setAttributedText_, v53);

  uint64_t v60 = v43[3];
  uint64_t v61 = __swift_project_boxed_opaque_existential_1(v43, v60);
  v200[3] = v60;
  uint64_t v62 = __swift_allocate_boxed_opaque_existential_0(v200);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v60 - 8) + 16))(v62, v61, v60);
  id v63 = (id)sub_1C0DF62E0((uint64_t)v200);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v200);
  objc_msgSend(v58, sel_setAttributedText_, v63);

  objc_msgSend(v58, sel_setHidden_, 0);
  uint64_t v64 = v43[3];
  uint64_t v65 = v43[4];
  __swift_project_boxed_opaque_existential_1(v43, v64);
  (*(void (**)(void *, uint64_t, uint64_t, double))(v65 + 80))(v194, v64, v65, a2[33]);
  uint64_t v66 = v43[3];
  uint64_t v67 = v43[4];
  __swift_project_boxed_opaque_existential_1(v43, v66);
  uint64_t v68 = (id *)((char *)v199 + *(int *)(v54 + 20));
  v170 = (char *)v68 + *(int *)(type metadata accessor for FeedHeadline(0) + 40);
  sub_1C0E02130((uint64_t)v170, v59, type metadata accessor for FeedHeadline.State);
  uint64_t v69 = type metadata accessor for FeedHeadline.State(0);
  uint64_t v70 = *(void *)(v69 - 8);
  v168 = *(void (**)(uint64_t, void, uint64_t))(v70 + 56);
  uint64_t v169 = v69;
  v167[1] = v70 + 56;
  v168(v59, 0, 1);
  (*(void (**)(id, uint64_t, uint64_t, uint64_t))(v67 + 88))(v193, v59, v66, v67);
  sub_1BFE45E60(v59);
  id v71 = objc_msgSend(v68[5], sel_articleID);
  id v72 = v197;
  objc_msgSend(v197, sel_setAccessibilityIdentifier_, v71);

  MEMORY[0x1F4188790](v73);
  sub_1BFE477A0();
  sub_1BFE45E18(&qword_1EB874910, (void (*)(uint64_t))sub_1BFE477A0);
  sub_1C151F97C();
  objc_msgSend(v72, sel_setIsAccessibilityElement_, 1);
  sub_1BFE457AC(0, (unint64_t *)&qword_1EB87A898, (uint64_t (*)(uint64_t))sub_1BFF97D54, MEMORY[0x1E4FBBE00]);
  uint64_t v74 = swift_allocObject();
  *(_OWORD *)(v74 + 16) = xmmword_1C1527210;
  uint64_t v75 = v43[3];
  double v76 = __swift_project_boxed_opaque_existential_1(v43, v75);
  v200[3] = v75;
  CGFloat v77 = __swift_allocate_boxed_opaque_existential_0(v200);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v75 - 8) + 16))(v77, v76, v75);
  *(void *)(v74 + 32) = sub_1C0DF6740((uint64_t)v200);
  *(void *)(v74 + 40) = v78;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v200);
  LOBYTE(v200[0]) = *((unsigned char *)v68 + 56);
  *(void *)(v74 + 48) = sub_1BFE477FC();
  *(void *)(v74 + 56) = v79;
  sub_1C151A2DC();
  uint64_t v81 = v80;
  swift_bridgeObjectRelease();
  v198 = a2;
  if (v81)
  {
    CGFloat v82 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    CGFloat v82 = 0;
  }
  id v83 = v196;
  v84 = v197;
  v85 = v189;
  uint64_t v86 = v187;
  objc_msgSend(v197, sel_setAccessibilityLabel_, v82);

  id v87 = v68[5];
  id v88 = objc_msgSend(v87, sel_language);
  objc_msgSend(v84, sel_setAccessibilityLanguage_, v88);

  objc_msgSend(v83, sel_frame);
  IsEmptCGFloat y = CGRectIsEmpty(v218);
  v177 = v87;
  if (IsEmpty)
  {
    id v90 = 0;
  }
  else
  {
    id v90 = objc_msgSend(v87, sel_shortExcerpt);
    if (v90)
    {
      sub_1C151E62C();

      id v90 = (id)sub_1C151E5EC();
      swift_bridgeObjectRelease();
    }
  }
  objc_msgSend(v84, sel_setAccessibilityValue_, v90);

  v91 = *(void **)&v84[qword_1EB874268];
  uint64_t v92 = *v199;
  CGFloat v93 = *v198;
  CGFloat v94 = v198[1];
  CGFloat v95 = v198[2];
  CGFloat v96 = v198[3];
  uint64_t v178 = *(void *)(v86 + 112);
  sub_1C146162C(v91, v92, v178, v93, v94, v95, v96);
  id v97 = v68[2];
  v181 = v68;
  int v98 = *((unsigned __int8 *)v68 + 24);
  long long v204 = xmmword_1C152C7E0;
  v176 = v205;
  uint64_t v99 = sub_1C151CD7C();
  v205[4] = &off_1F1C29F88;
  v205[3] = v99;
  v205[0] = v85;
  v172 = &v206;
  unint64_t v207 = sub_1BFE46170();
  CGFloat v100 = v179;
  v206 = v179;
  unint64_t v210 = v207;
  v211 = &off_1F1C29F78;
  v208 = &off_1F1C29F78;
  CGFloat v101 = v188;
  v209 = v188;
  v173 = &v209;
  v174 = &v212;
  unint64_t v213 = v207;
  id v102 = v196;
  id v212 = v196;
  v175 = &v215;
  unint64_t v216 = v207;
  v217 = &off_1F1C29F78;
  v214 = &off_1F1C29F78;
  CGFloat v103 = v180;
  uint64_t v215 = (uint64_t)v180;
  if (v98 == 1)
  {
    CGFloat v104 = self;
    id v105 = v85;
    id v106 = v100;
    id v107 = v101;
    id v108 = v102;
    id v109 = v103;
    id v97 = objc_msgSend(v104, sel_userInterfaceLayoutDirectionForSemanticContentAttribute_, objc_msgSend(v84, sel_semanticContentAttribute));
  }
  else
  {
    id v110 = v85;
    id v111 = v100;
    id v112 = v101;
    id v113 = v102;
    id v114 = v103;
  }
  __swift_project_boxed_opaque_existential_1(v176, v99);
  off_1F1C29F90((uint64_t)v97);
  unint64_t v115 = v207;
  CGRect v116 = v208;
  __swift_project_boxed_opaque_existential_1(v172, v207);
  ((void (*)(id, unint64_t, _UNKNOWN **))v116[1])(v97, v115, v116);
  uint64_t v117 = v210;
  CGRect v118 = v211;
  __swift_project_boxed_opaque_existential_1(v173, v210);
  ((void (*)(id, uint64_t, _UNKNOWN **))v118[1])(v97, v117, v118);
  uint64_t v119 = v213;
  CGRect v120 = v214;
  __swift_project_boxed_opaque_existential_1(v174, v213);
  ((void (*)(id, uint64_t, _UNKNOWN **))v120[1])(v97, v119, v120);
  uint64_t v121 = v216;
  CGRect v122 = v217;
  __swift_project_boxed_opaque_existential_1(v175, v216);
  ((void (*)(id, uint64_t, _UNKNOWN **))v122[1])(v97, v121, v122);
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB873430);
  swift_arrayDestroy();
  id v123 = objc_msgSend(self, sel_mainScreen);
  objc_msgSend(v123, sel_scale);
  uint64_t v125 = v124;

  id v126 = objc_msgSend(v84, sel_traitCollection);
  v127 = v191;
  v128 = &v191[*(int *)(v182 + 24)];
  v129 = (void *)sub_1C151A01C();
  uint64_t v130 = *(v129 - 1);
  v131 = *(void (**)(void, void, void))(v130 + 56);
  id v196 = v129;
  v188 = (void (*)(void, void, void, void))v131;
  uint64_t v182 = v130 + 56;
  v131(v128, 1, 1);
  void *v127 = v125;
  v127[1] = v126;
  v180 = (void *)type metadata accessor for PublisherLogoProcessorRequest(0);
  v132 = (void *)((char *)v199 + *(int *)(v192 + 24));
  uint64_t v133 = v132[3];
  uint64_t v134 = v132[4];
  v135 = __swift_project_boxed_opaque_existential_1(v132, v133);
  uint64_t v202 = v133;
  uint64_t v203 = *(void *)(v134 + 8);
  uint64_t v136 = v203;
  v137 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v201);
  v138 = *(void (**)(char *, uint64_t *, uint64_t, __n128))(*(void *)(v133 - 8) + 16);
  ((void (*)(uint64_t *, void *, uint64_t))v138)(v137, v135, v133);
  uint64_t v139 = (uint64_t)v195;
  sub_1C0E02130((uint64_t)v127, (uint64_t)v195, (uint64_t (*)(void))type metadata accessor for ImageRequestOptions);
  v140 = memcpy(v200, v198, 0x130uLL);
  __n128 v141 = MEMORY[0x1F4188790](v140);
  v143 = (char *)v167 - v142;
  v138((char *)v167 - v142, v137, v133, v141);
  v144 = (void *)swift_unknownObjectRetain();
  uint64_t v145 = v139;
  uint64_t v146 = (uint64_t)v180;
  uint64_t v147 = sub_1BFE4621C(v144, (uint64_t)v200, (uint64_t)v143, v145, (uint64_t)v180, (uint64_t)&type metadata for HeadlineViewLayout.Attributes, v133, (uint64_t)&protocol witness table for HeadlineViewLayout.Attributes, v136);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v201);
  if (v147)
  {
    v200[3] = v146;
    v200[4] = sub_1BFE45E18(&qword_1EB893400, (void (*)(uint64_t))type metadata accessor for PublisherLogoProcessorRequest);
    v200[0] = v147;
  }
  else
  {
    memset(v200, 0, 40);
  }
  uint64_t v149 = (uint64_t)v186;
  uint64_t v148 = v187;
  uint64_t v150 = (uint64_t)v190;
  uint64_t v151 = (uint64_t)v191;
  uint64_t v152 = v171;
  uint64_t v153 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v154 = v184;
  sub_1C0E02130((uint64_t)v199, v184, type metadata accessor for HeadlineViewLayout.Context);
  sub_1BFC66384(v150, (uint64_t)&v201);
  unint64_t v155 = (*(unsigned __int8 *)(v183 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v183 + 80);
  uint64_t v156 = swift_allocObject();
  *(void *)(v156 + 16) = v153;
  sub_1BFE43938(v154, v156 + v155);
  sub_1BFC773DC(&v201, v156 + ((v152 + v155 + 7) & 0xFFFFFFFFFFFFFFF8));
  swift_retain();
  sub_1BFE459BC((uint64_t)v200, (void *)(v148 + 72), (uint64_t)v189, (void (*)(uint64_t))sub_1BFE47180, v156);
  swift_release();
  swift_release();
  sub_1BFE45EEC((uint64_t)v200, (uint64_t (*)(void))sub_1C0E020C8);
  v157 = v195;
  sub_1C0E02130(v151, (uint64_t)v195, (uint64_t (*)(void))type metadata accessor for ImageRequestOptions);
  uint64_t v158 = (uint64_t)v185;
  v188(v185, 1, 1, v196);
  memset(v200, 0, 40);
  v159 = (void *)swift_unknownObjectRetain();
  id v160 = sub_1BFE465F0(v159, v198, v157, v158, (uint64_t)v200);
  uint64_t v161 = v151;
  if (v160)
  {
    uint64_t v162 = (uint64_t)v160;
    v200[3] = type metadata accessor for ThumbnailProcessorRequest();
    v200[4] = sub_1BFE45E18((unint64_t *)&qword_1EB8907E8, (void (*)(uint64_t))type metadata accessor for ThumbnailProcessorRequest);
    v200[0] = v162;
  }
  else
  {
    memset(v200, 0, 40);
  }
  uint64_t v164 = v169;
  uint64_t v163 = (uint64_t)v170;
  v165 = (void (*)(uint64_t, void, uint64_t, uint64_t))v168;
  sub_1BFE459BC((uint64_t)v200, (void *)(v148 + 32), (uint64_t)v194, 0, 0);
  sub_1BFE45EEC((uint64_t)v200, (uint64_t (*)(void))sub_1C0E020C8);
  sub_1C0E02130(v163, v149, type metadata accessor for FeedHeadline.State);
  v165(v149, 0, 1, v164);
  sub_1BFE47A50((uint64_t)v193, v149);
  sub_1BFE45E60(v149);
  return sub_1BFE45EEC(v161, (uint64_t (*)(void))type metadata accessor for ImageRequestOptions);
}

uint64_t sub_1C0E009E8(void *a1, double *a2, void *a3, char *a4)
{
  v189 = a1;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFE457AC(0, (unint64_t *)&qword_1EB871510, MEMORY[0x1E4FABC10], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  v175 = (char *)&v158 - v9;
  uint64_t v187 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v173 = *(void *)(v187 - 8);
  MEMORY[0x1F4188790](v187);
  uint64_t v162 = v10;
  uint64_t v174 = (uint64_t)&v158 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v172 = type metadata accessor for ImageRequestOptions();
  MEMORY[0x1F4188790](v172);
  uint64_t v183 = (uint64_t *)((char *)&v158 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v12);
  v179 = (char *)&v158 - v13;
  sub_1BFE457AC(0, &qword_1EB87C4F0, type metadata accessor for FeedHeadline.State, v7);
  *(void *)&double v15 = MEMORY[0x1F4188790](v14 - 8).n128_u64[0];
  uint64_t v178 = (uint64_t)&v158 - v16;
  id v180 = *(id *)&a4[qword_1EB874260];
  objc_msgSend(v180, sel_setNumberOfLines_, 0, v15);
  double v17 = *(void **)&a4[qword_1EB874270];
  objc_msgSend(v17, sel_setNumberOfLines_, 0);
  id v181 = *(id *)&a4[qword_1EB874280];
  objc_msgSend(v181, sel_setAttributedText_, 0);
  double v18 = *(void **)&a4[qword_1EB874250];
  sub_1C151CD6C();
  uint64_t v19 = *(void **)&a4[qword_1EB874258];
  sub_1C151CD6C();
  id v185 = *(id *)&a4[qword_1EB874278];
  objc_msgSend(v185, sel_setHidden_, 1);
  type metadata accessor for VideoView();
  uint64_t v20 = swift_dynamicCastClass();
  if (v20) {
    objc_msgSend(*(id *)(v20 + qword_1EB93C718), sel_setHidden_, 1);
  }
  id v21 = v180;
  objc_msgSend(v180, sel_setFrame_, a2[4], a2[5], a2[6], a2[7]);
  double v22 = a2[16];
  double v23 = a2[17];
  double v24 = a2[18];
  double v25 = a2[19];
  id v186 = v17;
  objc_msgSend(v17, sel_setFrame_, v22, v23, v24, v25);
  double v26 = a2[28];
  double v27 = a2[29];
  double v28 = a2[30];
  double v29 = a2[31];
  v177 = v19;
  objc_msgSend(v19, sel_setFrame_, v26, v27, v28, v29);
  double v30 = a2[34];
  double v31 = a2[35];
  double v32 = a2[36];
  double v33 = a2[37];
  v176 = v18;
  objc_msgSend(v18, sel_setFrame_, v30, v31, v32, v33);
  objc_msgSend(v181, sel_setFrame_, a2[8], a2[9], a2[10], a2[11]);
  objc_msgSend(v185, sel_setFrame_, a2[12], a2[13], a2[14], a2[15]);
  v188 = a4;
  double v34 = a2[24];
  double v35 = a2[25];
  double v36 = a2[26];
  double v37 = a2[27];
  id v182 = *(id *)&a4[qword_1EB874248];
  objc_msgSend(v182, sel_setFrame_, v34, v35, v36, v37);
  uint64_t v38 = v187;
  double v39 = v189;
  uint64_t v40 = a3[3];
  double v41 = a3;
  uint64_t v42 = __swift_project_boxed_opaque_existential_1(a3, v40);
  v190[3] = v40;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v190);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v40 - 8) + 16))(boxed_opaque_existential_0, v42, v40);
  id v44 = (id)sub_1C0DF62E0((uint64_t)v190);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v190);
  objc_msgSend(v21, sel_setAttributedText_, v44);

  id v45 = *(id *)((char *)v39 + *(int *)(v38 + 32));
  if (v45)
  {
    uint64_t v46 = v41[3];
    double v47 = __swift_project_boxed_opaque_existential_1(v41, v46);
    v190[3] = v46;
    v48 = __swift_allocate_boxed_opaque_existential_0(v190);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v46 - 8) + 16))(v48, v47, v46);
    id v45 = (id)sub_1C0DF62E0((uint64_t)v190);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v190);
  }
  id v49 = v185;
  objc_msgSend(v186, sel_setAttributedText_, v45);

  uint64_t v50 = v187;
  uint64_t v51 = v189;
  uint64_t v52 = v41[3];
  id v53 = __swift_project_boxed_opaque_existential_1(v41, v52);
  v190[3] = v52;
  uint64_t v54 = __swift_allocate_boxed_opaque_existential_0(v190);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v52 - 8) + 16))(v54, v53, v52);
  id v55 = (id)sub_1C0DF62E0((uint64_t)v190);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v190);
  objc_msgSend(v49, sel_setAttributedText_, v55);

  objc_msgSend(v49, sel_setHidden_, 0);
  uint64_t v56 = v41[3];
  uint64_t v57 = v41[4];
  __swift_project_boxed_opaque_existential_1(v41, v56);
  (*(void (**)(void *, uint64_t, uint64_t, double))(v57 + 80))(v177, v56, v57, a2[33]);
  uint64_t v58 = v41[3];
  uint64_t v59 = v41[4];
  __swift_project_boxed_opaque_existential_1(v41, v58);
  uint64_t v60 = (id *)((char *)v51 + *(int *)(v50 + 20));
  uint64_t v161 = (char *)v60 + *(int *)(type metadata accessor for FeedHeadline(0) + 40);
  uint64_t v61 = v178;
  sub_1C0E02130((uint64_t)v161, v178, type metadata accessor for FeedHeadline.State);
  uint64_t v62 = type metadata accessor for FeedHeadline.State(0);
  uint64_t v63 = *(void *)(v62 - 8);
  v159 = *(void (**)(uint64_t, void, uint64_t))(v63 + 56);
  uint64_t v160 = v62;
  uint64_t v158 = v63 + 56;
  v159(v61, 0, 1);
  (*(void (**)(id, uint64_t, uint64_t, uint64_t))(v59 + 88))(v182, v61, v58, v59);
  sub_1BFE45E60(v61);
  id v64 = objc_msgSend(v60[5], sel_articleID);
  id v65 = v188;
  objc_msgSend(v188, sel_setAccessibilityIdentifier_, v64);

  MEMORY[0x1F4188790](v66);
  sub_1BFE477A0();
  sub_1BFE45E18(&qword_1EB874910, (void (*)(uint64_t))sub_1BFE477A0);
  sub_1C151F97C();
  objc_msgSend(v65, sel_setIsAccessibilityElement_, 1);
  sub_1BFE457AC(0, (unint64_t *)&qword_1EB87A898, (uint64_t (*)(uint64_t))sub_1BFF97D54, MEMORY[0x1E4FBBE00]);
  uint64_t v67 = swift_allocObject();
  *(_OWORD *)(v67 + 16) = xmmword_1C1527210;
  uint64_t v68 = v41[3];
  uint64_t v163 = v41;
  uint64_t v69 = __swift_project_boxed_opaque_existential_1(v41, v68);
  v190[3] = v68;
  uint64_t v70 = __swift_allocate_boxed_opaque_existential_0(v190);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v68 - 8) + 16))(v70, v69, v68);
  *(void *)(v67 + 32) = sub_1C0DF6740((uint64_t)v190);
  *(void *)(v67 + 40) = v71;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v190);
  LOBYTE(v190[0]) = *((unsigned char *)v60 + 56);
  *(void *)(v67 + 48) = sub_1BFE477FC();
  *(void *)(v67 + 56) = v72;
  sub_1C151A2DC();
  uint64_t v74 = v73;
  swift_bridgeObjectRelease();
  if (v74)
  {
    uint64_t v75 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v75 = 0;
  }
  double v76 = v188;
  CGFloat v77 = v176;
  uint64_t v78 = v184;
  objc_msgSend(v188, sel_setAccessibilityLabel_, v75);

  id v79 = v60[5];
  id v80 = objc_msgSend(v79, sel_language);
  objc_msgSend(v76, sel_setAccessibilityLanguage_, v80);

  objc_msgSend(v186, sel_frame);
  IsEmptCGFloat y = CGRectIsEmpty(v208);
  uint64_t v169 = v79;
  if (IsEmpty)
  {
    id v82 = 0;
  }
  else
  {
    id v82 = objc_msgSend(v79, sel_shortExcerpt);
    if (v82)
    {
      sub_1C151E62C();

      id v82 = (id)sub_1C151E5EC();
      swift_bridgeObjectRelease();
    }
  }
  objc_msgSend(v76, sel_setAccessibilityValue_, v82);

  id v83 = *(void **)&v76[qword_1EB874268];
  uint64_t v84 = *v189;
  CGFloat v85 = *a2;
  CGFloat v86 = a2[1];
  CGFloat v87 = a2[2];
  CGFloat v88 = a2[3];
  uint64_t v170 = *(void *)(v78 + 112);
  sub_1C146162C(v83, v84, v170, v85, v86, v87, v88);
  id v89 = v60[2];
  uint64_t v171 = v60;
  int v90 = *((unsigned __int8 *)v60 + 24);
  long long v194 = xmmword_1C152C7E0;
  v168 = v195;
  uint64_t v91 = sub_1C151CD7C();
  v195[4] = &off_1F1C29F88;
  v195[3] = v91;
  v195[0] = v77;
  uint64_t v164 = &v196;
  unint64_t v197 = sub_1BFE46170();
  id v92 = v180;
  id v196 = v180;
  unint64_t v200 = v197;
  long long v201 = &off_1F1C29F78;
  v198 = &off_1F1C29F78;
  id v94 = v185;
  id v93 = v186;
  id v199 = v185;
  v165 = &v199;
  v166 = &v202;
  unint64_t v203 = v197;
  id v202 = v186;
  v167 = &v205;
  unint64_t v206 = v197;
  unint64_t v207 = &off_1F1C29F78;
  long long v204 = &off_1F1C29F78;
  id v95 = v181;
  id v205 = v181;
  if (v90 == 1)
  {
    CGFloat v96 = self;
    id v97 = v77;
    id v98 = v92;
    id v99 = v94;
    id v100 = v93;
    id v101 = v95;
    id v102 = v188;
    id v89 = objc_msgSend(v96, sel_userInterfaceLayoutDirectionForSemanticContentAttribute_, objc_msgSend(v188, sel_semanticContentAttribute));
  }
  else
  {
    id v103 = v77;
    id v104 = v92;
    id v105 = v94;
    id v106 = v93;
    id v107 = v95;
    id v102 = v188;
  }
  __swift_project_boxed_opaque_existential_1(v168, v91);
  off_1F1C29F90((uint64_t)v89);
  unint64_t v108 = v197;
  id v109 = v198;
  __swift_project_boxed_opaque_existential_1(v164, v197);
  ((void (*)(id, unint64_t, _UNKNOWN **))v109[1])(v89, v108, v109);
  uint64_t v110 = v200;
  id v111 = v201;
  __swift_project_boxed_opaque_existential_1(v165, v200);
  ((void (*)(id, uint64_t, _UNKNOWN **))v111[1])(v89, v110, v111);
  uint64_t v112 = v203;
  id v113 = v204;
  __swift_project_boxed_opaque_existential_1(v166, v203);
  ((void (*)(id, uint64_t, _UNKNOWN **))v113[1])(v89, v112, v113);
  uint64_t v114 = v206;
  unint64_t v115 = v207;
  __swift_project_boxed_opaque_existential_1(v167, v206);
  ((void (*)(id, uint64_t, _UNKNOWN **))v115[1])(v89, v114, v115);
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB873430);
  swift_arrayDestroy();
  id v116 = objc_msgSend(self, sel_mainScreen);
  objc_msgSend(v116, sel_scale);
  uint64_t v118 = v117;

  id v119 = objc_msgSend(v102, sel_traitCollection);
  CGRect v120 = v179;
  uint64_t v121 = &v179[*(int *)(v172 + 24)];
  CGRect v122 = (void *)sub_1C151A01C();
  uint64_t v123 = *(v122 - 1);
  id v185 = *(id *)(v123 + 56);
  id v186 = v122;
  id v181 = (id)(v123 + 56);
  ((void (*)(char *, uint64_t, uint64_t))v185)(v121, 1, 1);
  *CGRect v120 = v118;
  v120[1] = v119;
  id v180 = (id)type metadata accessor for PublisherLogoProcessorRequest(0);
  uint64_t v124 = (void *)((char *)v189 + *(int *)(v187 + 24));
  uint64_t v125 = v124[3];
  uint64_t v126 = v124[4];
  v127 = __swift_project_boxed_opaque_existential_1(v124, v125);
  uint64_t v192 = v125;
  uint64_t v193 = *(void *)(v126 + 8);
  uint64_t v128 = v193;
  v129 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v191);
  uint64_t v130 = *(void (**)(char *, uint64_t *, uint64_t, __n128))(*(void *)(v125 - 8) + 16);
  ((void (*)(uint64_t *, void *, uint64_t))v130)(v129, v127, v125);
  uint64_t v131 = (uint64_t)v183;
  sub_1C0E02130((uint64_t)v120, (uint64_t)v183, (uint64_t (*)(void))type metadata accessor for ImageRequestOptions);
  v132 = memcpy(v190, a2, 0x130uLL);
  __n128 v133 = MEMORY[0x1F4188790](v132);
  v135 = (char *)&v158 - v134;
  v130((char *)&v158 - v134, v129, v125, v133);
  uint64_t v136 = (void *)swift_unknownObjectRetain();
  uint64_t v137 = v131;
  uint64_t v138 = (uint64_t)v180;
  uint64_t v139 = sub_1BFE4621C(v136, (uint64_t)v190, (uint64_t)v135, v137, (uint64_t)v180, (uint64_t)&type metadata for HeadlineViewLayout.Attributes, v125, (uint64_t)&protocol witness table for HeadlineViewLayout.Attributes, v128);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v191);
  if (v139)
  {
    v190[3] = v138;
    v190[4] = sub_1BFE45E18(&qword_1EB893400, (void (*)(uint64_t))type metadata accessor for PublisherLogoProcessorRequest);
    v190[0] = v139;
  }
  else
  {
    memset(v190, 0, 40);
  }
  uint64_t v141 = v178;
  uint64_t v140 = (uint64_t)v179;
  uint64_t v143 = v162;
  uint64_t v142 = (uint64_t)v163;
  v144 = (void *)(v184 + 72);
  uint64_t v145 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v146 = v174;
  sub_1C0E02130((uint64_t)v189, v174, type metadata accessor for HeadlineViewLayout.Context);
  sub_1BFC66384(v142, (uint64_t)&v191);
  unint64_t v147 = (*(unsigned __int8 *)(v173 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v173 + 80);
  uint64_t v148 = swift_allocObject();
  *(void *)(v148 + 16) = v145;
  sub_1BFE43938(v146, v148 + v147);
  sub_1BFC773DC(&v191, v148 + ((v143 + v147 + 7) & 0xFFFFFFFFFFFFFFF8));
  swift_retain();
  sub_1BFE459BC((uint64_t)v190, v144, (uint64_t)v176, (void (*)(uint64_t))sub_1BFE47180, v148);
  swift_release();
  swift_release();
  sub_1BFE45EEC((uint64_t)v190, (uint64_t (*)(void))sub_1C0E020C8);
  uint64_t v149 = v183;
  sub_1C0E02130(v140, (uint64_t)v183, (uint64_t (*)(void))type metadata accessor for ImageRequestOptions);
  uint64_t v150 = (uint64_t)v175;
  ((void (*)(char *, uint64_t, uint64_t, id))v185)(v175, 1, 1, v186);
  memset(v190, 0, 40);
  uint64_t v151 = (void *)swift_unknownObjectRetain();
  id v152 = sub_1BFE465F0(v151, a2, v149, v150, (uint64_t)v190);
  if (v152)
  {
    uint64_t v153 = (uint64_t)v152;
    v190[3] = type metadata accessor for ThumbnailProcessorRequest();
    v190[4] = sub_1BFE45E18((unint64_t *)&qword_1EB8907E8, (void (*)(uint64_t))type metadata accessor for ThumbnailProcessorRequest);
    v190[0] = v153;
  }
  else
  {
    memset(v190, 0, 40);
  }
  uint64_t v155 = v160;
  uint64_t v154 = (uint64_t)v161;
  uint64_t v156 = (void (*)(uint64_t, void, uint64_t, uint64_t))v159;
  sub_1BFE459BC((uint64_t)v190, (void *)(v184 + 32), (uint64_t)v177, 0, 0);
  sub_1BFE45EEC((uint64_t)v190, (uint64_t (*)(void))sub_1C0E020C8);
  sub_1C0E02130(v154, v141, type metadata accessor for FeedHeadline.State);
  v156(v141, 0, 1, v155);
  sub_1BFE47A50((uint64_t)v182, v141);
  sub_1BFE45E60(v141);
  return sub_1BFE45EEC(v140, (uint64_t (*)(void))type metadata accessor for ImageRequestOptions);
}

void sub_1C0E01AD8(void *a1, const void *a2, char *a3, uint64_t a4, uint64_t a5)
{
  memcpy(__dst, a2, sizeof(__dst));
  uint64_t v9 = type metadata accessor for HeadlineViewLayout.Context(0);
  sub_1C0DFF8D0(a1, __dst, (void *)((char *)a1 + *(int *)(v9 + 24)), a3);
  uint64_t v10 = *(void *)&a3[qword_1EB874258];
  objc_msgSend(*(id *)(v10 + qword_1EB93C9D0), sel_setHidden_, 1);
  objc_msgSend(*(id *)(v10 + qword_1EB93C9C0), sel_setHidden_, 1);
  objc_msgSend(*(id *)(v10 + qword_1EB93C9C8), sel_setHidden_, 1);
  uint64_t v11 = qword_1EB93C718;
  CGFloat v12 = __dst[21];
  rect.origin.CGFloat x = __dst[20];
  CGFloat v13 = __dst[22];
  CGFloat v14 = __dst[23];
  CGFloat v15 = __dst[28];
  CGFloat v16 = __dst[29];
  CGFloat v17 = __dst[30];
  CGFloat v18 = __dst[31];
  id v19 = *(id *)(v10 + qword_1EB93C718);
  v32.origin.CGFloat x = v15;
  v32.origin.CGFloat y = v16;
  v32.size.CGFloat width = v17;
  v32.size.CGFloat height = v18;
  CGFloat v20 = -CGRectGetMinX(v32);
  v33.origin.CGFloat x = v15;
  v33.origin.CGFloat y = v16;
  v33.size.CGFloat width = v17;
  v33.size.CGFloat height = v18;
  CGFloat MinY = CGRectGetMinY(v33);
  v34.origin.CGFloat x = rect.origin.x;
  v34.origin.CGFloat y = v12;
  v34.size.CGFloat width = v13;
  v34.size.CGFloat height = v14;
  CGRect v35 = CGRectOffset(v34, v20, MinY);
  objc_msgSend(v19, sel_setFrame_, v35.origin.x, v35.origin.y, v35.size.width, v35.size.height);

  double v22 = *(void **)(v10 + v11);
  objc_msgSend(v22, sel_setHidden_, 0);
  double v23 = (void *)swift_allocObject();
  v23[2] = a4;
  uint64_t v23[3] = a5;
  v23[4] = a3;
  double v29 = sub_1C0E020B0;
  double v30 = v23;
  *(void *)&rect.origin.CGFloat y = MEMORY[0x1E4F143A8];
  *(void *)&rect.size.CGFloat width = 1107296256;
  *(void *)&rect.size.CGFloat height = sub_1BFC9FC68;
  double v28 = &block_descriptor_68;
  double v24 = _Block_copy(&rect.origin.y);
  id v25 = v22;
  swift_retain();
  double v26 = a3;
  swift_release();
  objc_msgSend(v25, sel_onTouchUpInside_, v24);
  _Block_release(v24);
}

uint64_t sub_1C0E01D34(void (*a1)(unsigned char *), uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for FeedActionSender();
  uint64_t v6 = v5 - 8;
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v8 = 0;
  type metadata accessor for FeedAction(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = *(void **)(a3 + qword_1EB874258);
  *(void *)&v8[*(int *)(v6 + 28)] = v9;
  id v10 = v9;
  a1(v8);
  return sub_1BFE45EEC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FeedActionSender);
}

uint64_t sub_1C0E01E18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v17[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for HeadlineViewLayout.Context(0);
  sub_1C0E02130(a1 + *(int *)(v7 + 20), (uint64_t)v6, type metadata accessor for FeedHeadline);
  uint64_t v8 = (void *)swift_unknownObjectRetain();
  ArticleAutomation.init(headline:)(v8, (uint64_t)v17);
  uint64_t result = sub_1BFE45EEC((uint64_t)v6, type metadata accessor for FeedHeadline);
  uint64_t v10 = v17[1];
  char v11 = v18;
  char v12 = v19;
  char v13 = v20;
  char v14 = v21;
  char v15 = v22;
  *(void *)(a2 + 16) = v17[0];
  *(void *)(a2 + 24) = v10;
  *(unsigned char *)(a2 + 32) = v11;
  *(unsigned char *)(a2 + 33) = v12;
  *(unsigned char *)(a2 + 34) = v13;
  *(unsigned char *)(a2 + 35) = v14;
  *(unsigned char *)(a2 + 36) = v15;
  *(void *)a2 = 0x656C6369747261;
  *(void *)(a2 + 8) = 0xE700000000000000;
  return result;
}

uint64_t sub_1C0E01F30()
{
  swift_unknownObjectWeakDestroy();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  swift_release();
  return swift_deallocClassInstance();
}

void sub_1C0E01F88(void *a1)
{
  swift_beginAccess();
  uint64_t v2 = swift_unknownObjectWeakAssign();
  uint64_t v3 = (void *)MEMORY[0x1C18C9C60](v2);
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
}

void (*sub_1C0E02014(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1C0DFF798(v2);
  return sub_1C02B53A8;
}

uint64_t sub_1C0E02070()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C0E020B0()
{
  return sub_1C0E01D34(*(void (**)(unsigned char *))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1C0E020BC@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0E01E18(*(void *)(v1 + 16), a1);
}

void sub_1C0E020C8()
{
  if (!qword_1EB882B88)
  {
    sub_1BFC845BC(255, (unint64_t *)&qword_1EB8715C0);
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB882B88);
    }
  }
}

uint64_t sub_1C0E02130(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0E02198()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t TraversalOnlyEncoder.codingPath.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TraversalOnlyEncoder.userInfo.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TraversalOnlyEncoder.userInfo.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t sub_1C0E02218@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v6 = *v2;
  uint64_t v5 = v2[1];
  sub_1BFEFCD08();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  uint64_t v8 = sub_1C152088C();
  uint64_t v10 = v9;
  *(void *)(inited + 56) = &type metadata for TraversalOnlyEncoder.AnyCodingKey;
  *(void *)(inited + 64) = sub_1BFE98820();
  uint64_t v11 = swift_allocObject();
  *(void *)(inited + 32) = v11;
  *(void *)(v11 + 16) = v8;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = a1;
  *(unsigned char *)(v11 + 40) = 0;
  swift_bridgeObjectRetain();
  sub_1BFEFCE78(inited);
  *a2 = v6;
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t TraversalOnlyEncoder.unkeyedContainer()@<X0>(void *a1@<X8>)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  a1[3] = &type metadata for TraversalOnlyEncoder.UnkeyedContainer;
  a1[4] = sub_1BFDC4BA4();
  *a1 = v4;
  a1[1] = v3;
  a1[2] = 0;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t TraversalOnlyEncoder.singleValueContainer()@<X0>(void *a1@<X8>)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  a1[3] = &type metadata for TraversalOnlyEncoder.SingleValueContainer;
  a1[4] = sub_1BFE96228();
  *a1 = v4;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0E023F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BFEFC938(a2, *(void *)(a3 + 16), *(void *)(a3 + 24), &v4);
  TraversalOnlyEncoder.container<A>(keyedBy:)();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

double sub_1C0E02488@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1BFEFC938(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), &v5);
  *(void *)(a3 + 24) = &type metadata for TraversalOnlyEncoder.UnkeyedContainer;
  *(void *)(a3 + 32) = sub_1BFDC4BA4();
  double result = *(double *)&v5;
  *(_OWORD *)a3 = v5;
  *(void *)(a3 + 16) = 0;
  return result;
}

uint64_t sub_1C0E024EC@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  a1[3] = &type metadata for TraversalOnlyEncoder;
  a1[4] = sub_1BFEFC8E4();
  sub_1BFEFCD08();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  *(void *)(inited + 56) = &type metadata for TraversalOnlyEncoder.AnyCodingKey;
  *(void *)(inited + 64) = sub_1BFE98820();
  uint64_t v6 = swift_allocObject();
  *(void *)(inited + 32) = v6;
  *(void *)(v6 + 16) = 0x7265707573;
  *(void *)(v6 + 24) = 0xE500000000000000;
  *(void *)(v6 + 32) = 0;
  *(unsigned char *)(v6 + 40) = 1;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1BFEFCE78(inited);
  *a1 = v3;
  a1[1] = v4;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0E02608@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  a3[3] = &type metadata for TraversalOnlyEncoder;
  a3[4] = sub_1BFEFC8E4();
  return sub_1BFEFC938(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_1C0E02670()
{
  return sub_1C1520C6C();
}

uint64_t sub_1C0E02688()
{
  return sub_1C1520C7C();
}

uint64_t sub_1C0E026A0()
{
  return sub_1C1520C5C();
}

uint64_t sub_1C0E026CC()
{
  return sub_1C1520BDC();
}

uint64_t sub_1C0E026E8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0E028C0(a1, a2, a3, a4, MEMORY[0x1E4FBBFF0]);
}

uint64_t sub_1C0E02714(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0E02818(a1, a2, a3, a4, MEMORY[0x1E4FBC008]);
}

uint64_t sub_1C0E02740(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0E0286C(a1, a2, a3, a4, MEMORY[0x1E4FBC010]);
}

uint64_t sub_1C0E0276C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0E028C0(a1, a2, a3, a4, MEMORY[0x1E4FBC018]);
}

uint64_t sub_1C0E02798()
{
  return sub_1C1520C1C();
}

uint64_t sub_1C0E027B4()
{
  return sub_1C1520C2C();
}

uint64_t sub_1C0E027D0()
{
  return sub_1C1520BFC();
}

uint64_t sub_1C0E027EC(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0E02818(a1, a2, a3, a4, MEMORY[0x1E4FBC028]);
}

uint64_t sub_1C0E02818(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5(a1 & 0x1FF);
}

uint64_t sub_1C0E02840(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0E0286C(a1, a2, a3, a4, MEMORY[0x1E4FBC038]);
}

uint64_t sub_1C0E0286C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5(a1 & 0x1FFFF);
}

uint64_t sub_1C0E02894(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0E028C0(a1, a2, a3, a4, MEMORY[0x1E4FBC040]);
}

uint64_t sub_1C0E028C0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  return a5(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t sub_1C0E028F0()
{
  return sub_1C1520C3C();
}

uint64_t sub_1C0E0290C()
{
  return sub_1C1520C4C();
}

uint64_t sub_1C0E02928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C0E023F4(a1, a2, a5);
}

uint64_t sub_1C0E02948()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (__OFADD__(v1, 1)) {
    __break(1u);
  }
  *(void *)(v0 + 16) = v1 + 1;
  sub_1BFEFCD08();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C152088C();
  uint64_t v5 = v4;
  *(void *)(inited + 56) = &type metadata for TraversalOnlyEncoder.AnyCodingKey;
  *(void *)(inited + 64) = sub_1BFE98820();
  uint64_t v6 = swift_allocObject();
  *(void *)(inited + 32) = v6;
  *(void *)(v6 + 16) = v3;
  *(void *)(v6 + 24) = v5;
  *(void *)(v6 + 32) = v1;
  *(unsigned char *)(v6 + 40) = 0;
  swift_bridgeObjectRetain();
  sub_1BFEFCE78(inited);
  swift_bridgeObjectRelease();
  TraversalOnlyEncoder.container<A>(keyedBy:)();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1C0E02AB4@<X0>(void *a1@<X8>)
{
  uint64_t v3 = v1[2];
  if (__OFADD__(v3, 1)) {
    __break(1u);
  }
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  v1[2] = v3 + 1;
  sub_1BFEFCD08();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1C152088C();
  uint64_t v9 = v8;
  *(void *)(inited + 56) = &type metadata for TraversalOnlyEncoder.AnyCodingKey;
  *(void *)(inited + 64) = sub_1BFE98820();
  uint64_t v10 = swift_allocObject();
  *(void *)(inited + 32) = v10;
  *(void *)(v10 + 16) = v7;
  *(void *)(v10 + 24) = v9;
  *(void *)(v10 + 32) = v3;
  *(unsigned char *)(v10 + 40) = 0;
  swift_bridgeObjectRetain();
  sub_1BFEFCE78(inited);
  swift_bridgeObjectRelease();
  a1[3] = &type metadata for TraversalOnlyEncoder.UnkeyedContainer;
  unint64_t result = sub_1BFDC4BA4();
  a1[4] = result;
  *a1 = v5;
  a1[1] = v4;
  a1[2] = 0;
  return result;
}

uint64_t sub_1C0E02C04()
{
  return sub_1C1520A0C();
}

uint64_t sub_1C0E02C1C()
{
  return sub_1C1520A1C();
}

uint64_t sub_1C0E02C34()
{
  return sub_1C15208EC();
}

uint64_t sub_1C0E02C60()
{
  return sub_1C152091C();
}

uint64_t sub_1C0E02C8C()
{
  return sub_1C152090C();
}

uint64_t sub_1C0E02CB8()
{
  return sub_1C152092C();
}

uint64_t sub_1C0E02CE4()
{
  return sub_1C152093C();
}

uint64_t sub_1C0E02D10()
{
  return sub_1C152094C();
}

uint64_t sub_1C0E02D3C()
{
  return sub_1C152096C();
}

uint64_t sub_1C0E02D68()
{
  return sub_1C152097C();
}

uint64_t sub_1C0E02D94()
{
  return sub_1C152098C();
}

uint64_t sub_1C0E02DC0()
{
  return sub_1C152099C();
}

uint64_t sub_1C0E02DEC()
{
  return sub_1C15209BC();
}

uint64_t sub_1C0E02E18()
{
  return sub_1C152095C();
}

uint64_t sub_1C0E02E44()
{
  return sub_1C15209AC();
}

uint64_t sub_1C0E02E70()
{
  return sub_1C15209CC();
}

uint64_t sub_1C0E02E9C()
{
  return sub_1C15209DC();
}

uint64_t sub_1C0E02EC8()
{
  return sub_1C15209EC();
}

uint64_t sub_1C0E02EF4()
{
  return sub_1C15209FC();
}

uint64_t sub_1C0E02F20()
{
  return sub_1C15208FC();
}

void sub_1C0E02F5C(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    *(void *)(v1 + 16) = v3 + 1;
    a1[3] = &type metadata for TraversalOnlyEncoder;
    a1[4] = sub_1BFEFC8E4();
    sub_1C0E02218(v3, a1);
  }
}

uint64_t sub_1C0E02FCC()
{
  return sub_1C1520B3C();
}

uint64_t sub_1C0E02FE4()
{
  return sub_1C1520B4C();
}

uint64_t sub_1C0E02FFC()
{
  int v1 = *(unsigned __int8 *)(v0 + 24);
  sub_1C1520DBC();
  sub_1C151E77C();
  sub_1C1520DDC();
  if (v1 != 1) {
    sub_1C1520DCC();
  }
  return sub_1C1520E0C();
}

uint64_t sub_1C0E03088()
{
  int v1 = *(unsigned __int8 *)(v0 + 24);
  sub_1C151E77C();
  if (v1 == 1) {
    return sub_1C1520DDC();
  }
  sub_1C1520DDC();
  return sub_1C1520DCC();
}

uint64_t sub_1C0E030EC()
{
  int v1 = *(unsigned __int8 *)(v0 + 24);
  sub_1C1520DBC();
  sub_1C151E77C();
  sub_1C1520DDC();
  if (v1 != 1) {
    sub_1C1520DCC();
  }
  return sub_1C1520E0C();
}

uint64_t sub_1C0E03174@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = result;
  *(void *)(a3 + 8) = a2;
  *(void *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 24) = 1;
  return result;
}

uint64_t sub_1C0E03188@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1C152088C();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = a1;
  *(unsigned char *)(a2 + 24) = 0;
  return result;
}

uint64_t sub_1C0E031E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  char v3 = *(unsigned char *)(a1 + 24);
  uint64_t v4 = *(void *)(a2 + 16);
  int v5 = *(unsigned __int8 *)(a2 + 24);
  BOOL v6 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v6 || (char v7 = sub_1C1520A9C(), result = 0, (v7 & 1) != 0))
  {
    if (v3)
    {
      if (v5) {
        return 1;
      }
    }
    else
    {
      if (v2 == v4) {
        char v9 = v5;
      }
      else {
        char v9 = 1;
      }
      if ((v9 & 1) == 0) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_1C0E03268(uint64_t a1)
{
  unint64_t v2 = sub_1BFE98820();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0E032A4(uint64_t a1)
{
  unint64_t v2 = sub_1BFE98820();
  return MEMORY[0x1F41862B0](a1, v2);
}

ValueMetadata *type metadata accessor for TraversalOnlyEncoder.SingleValueContainer()
{
  return &type metadata for TraversalOnlyEncoder.SingleValueContainer;
}

ValueMetadata *type metadata accessor for TraversalOnlyEncoder.UnkeyedContainer()
{
  return &type metadata for TraversalOnlyEncoder.UnkeyedContainer;
}

uint64_t sub_1C0E03310()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for TraversalOnlyEncoder.AnyCodingKey()
{
  return &type metadata for TraversalOnlyEncoder.AnyCodingKey;
}

unint64_t sub_1C0E0335C()
{
  unint64_t result = qword_1EA1A7980;
  if (!qword_1EA1A7980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7980);
  }
  return result;
}

uint64_t UILegibilityWeight.description.getter(uint64_t a1)
{
  uint64_t v1 = 1684828002;
  uint64_t v2 = 0x6E776F6E6B6E75;
  if (!a1) {
    uint64_t v2 = 0x72616C75676572;
  }
  if (a1 != 1) {
    uint64_t v1 = v2;
  }
  if (a1 == -1) {
    return 0x6669636570736E75;
  }
  else {
    return v1;
  }
}

unint64_t UILegibilityWeight.isBoldTextEnabled.getter(unint64_t result)
{
  if (result >= 2) {
    return UIAccessibilityIsBoldTextEnabled();
  }
  return result;
}

uint64_t sub_1C0E03458()
{
  uint64_t v1 = *v0;
  uint64_t v2 = 1684828002;
  uint64_t v3 = 0x6E776F6E6B6E75;
  if (!*v0) {
    uint64_t v3 = 0x72616C75676572;
  }
  if (v1 != 1) {
    uint64_t v2 = v3;
  }
  if (v1 == -1) {
    return 0x6669636570736E75;
  }
  else {
    return v2;
  }
}

unint64_t FormatImageGravity.rawValue.getter()
{
  unint64_t result = 0x7265746E6563;
  switch(*v0)
  {
    case 1:
      unint64_t result = 7368564;
      break;
    case 2:
      unint64_t result = 0x6D6F74746F62;
      break;
    case 3:
      unint64_t result = 1952867692;
      break;
    case 4:
      unint64_t result = 0x7468676972;
      break;
    case 5:
      unint64_t result = 0x7466654C706F74;
      break;
    case 6:
      unint64_t result = 0x7468676952706F74;
      break;
    case 7:
      unint64_t result = 0x654C6D6F74746F62;
      break;
    case 8:
      unint64_t result = 0x69526D6F74746F62;
      break;
    case 9:
      unint64_t result = 0x657A69736572;
      break;
    case 0xA:
      unint64_t result = 0x7341657A69736572;
      break;
    case 0xB:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

NewsFeed::FormatImageGravity_optional __swiftcall FormatImageGravity.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 12;
  if (v3 < 0xC) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

uint64_t sub_1C0E03690(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C148F054(*a1, *a2);
}

uint64_t sub_1C0E0369C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0E03704()
{
  FormatImageGravity.rawValue.getter();
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0E03768()
{
  return sub_1C1520E0C();
}

NewsFeed::FormatImageGravity_optional sub_1C0E037CC(Swift::String *a1)
{
  return FormatImageGravity.init(rawValue:)(*a1);
}

unint64_t sub_1C0E037D8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = FormatImageGravity.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C0E03800()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0E03860(void *a1)
{
  return FormatImageGravity.encode(to:)(a1);
}

unint64_t FormatImageGravity.description.getter()
{
  unint64_t result = 0x7265746E6563;
  switch(*v0)
  {
    case 1:
      unint64_t result = 7368564;
      break;
    case 2:
      unint64_t result = 0x6D6F74746F62;
      break;
    case 3:
      unint64_t result = 1952867692;
      break;
    case 4:
      unint64_t result = 0x7468676972;
      break;
    case 5:
      unint64_t result = 0x7466654C706F74;
      break;
    case 6:
      unint64_t result = 0x7468676952706F74;
      break;
    case 7:
      unint64_t result = 0x654C6D6F74746F62;
      break;
    case 8:
      unint64_t result = 0x69526D6F74746F62;
      break;
    case 9:
      unint64_t result = 0x657A69736572;
      break;
    case 0xA:
      unint64_t result = 0x7341657A69736572;
      break;
    case 0xB:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C0E039DC()
{
  unint64_t result = qword_1EA1A7988;
  if (!qword_1EA1A7988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7988);
  }
  return result;
}

unint64_t sub_1C0E03A30(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C0E03A60();
  unint64_t result = sub_1C0E03AB4();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0E03A60()
{
  unint64_t result = qword_1EA1A7990;
  if (!qword_1EA1A7990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7990);
  }
  return result;
}

unint64_t sub_1C0E03AB4()
{
  unint64_t result = qword_1EA1A7998;
  if (!qword_1EA1A7998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7998);
  }
  return result;
}

unint64_t sub_1C0E03B08(uint64_t a1)
{
  unint64_t result = sub_1C0E03B30();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0E03B30()
{
  unint64_t result = qword_1EA1A79A0;
  if (!qword_1EA1A79A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A79A0);
  }
  return result;
}

unint64_t sub_1C0E03B84(void *a1)
{
  a1[1] = sub_1C086B834();
  a1[2] = sub_1C0903640();
  unint64_t result = sub_1C0E039DC();
  a1[3] = result;
  return result;
}

unsigned char *storeEnumTagSinglePayload for FormatImageGravity(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *unint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0E03C8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatImageGravity()
{
  return &type metadata for FormatImageGravity;
}

uint64_t sub_1C0E03CC4(char *a1)
{
  return **((void **)&unk_1E6417720 + *a1);
}

uint64_t static Commands.Sports.ReportScore.inaccurate.getter()
{
  return sub_1BFC387A8(&qword_1EB885388);
}

uint64_t static Commands.Sports.ReportScore.delayed.getter()
{
  return sub_1BFC387A8(&qword_1EB8853D0);
}

uint64_t static Commands.Sports.ReportScore.teamInfo.getter()
{
  return sub_1BFC387A8(&qword_1EB8853F8);
}

uint64_t static Commands.Sports.ReportScore.gameTime.getter()
{
  return sub_1BFC387A8(&qword_1EB8853E0);
}

uint64_t static Commands.Sports.ReportScore.streamingProvider.getter()
{
  return sub_1BFC387A8(&qword_1EB8853B8);
}

uint64_t static Commands.Sports.ReportScore.somethingElse.getter()
{
  return sub_1BFC387A8(&qword_1EB8853A0);
}

uint64_t sub_1C0E03DB4()
{
  sub_1BFE4F8BC(0, &qword_1EA1A79C0, (uint64_t)&type metadata for SportsStandingConcern, MEMORY[0x1E4FAD778]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  unsigned int v4 = (char *)&v6 - v3;
  sub_1BFE4F8BC(0, &qword_1EA1A79C8, (uint64_t)&type metadata for SportsStandingConcern, MEMORY[0x1E4FAD790]);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FAD770], v1);
  uint64_t result = sub_1C151C9BC();
  qword_1EA1A79B0 = result;
  return result;
}

uint64_t static Commands.Sports.ReportStanding.inaccurate.getter()
{
  return sub_1BFC387A8(&qword_1EA1948A8);
}

uint64_t sub_1C0E03F18()
{
  sub_1BFE4F8BC(0, &qword_1EA1A79C0, (uint64_t)&type metadata for SportsStandingConcern, MEMORY[0x1E4FAD778]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  unsigned int v4 = (char *)&v6 - v3;
  sub_1BFE4F8BC(0, &qword_1EA1A79C8, (uint64_t)&type metadata for SportsStandingConcern, MEMORY[0x1E4FAD790]);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FAD770], v1);
  uint64_t result = sub_1C151C9BC();
  qword_1EA1A79B8 = result;
  return result;
}

uint64_t static Commands.Sports.ReportStanding.somethingElse.getter()
{
  return sub_1BFC387A8(&qword_1EA1948B0);
}

uint64_t static Commands.Sports.ReportStanding.all.getter()
{
  sub_1BFE4F8BC(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C15320F0;
  if (qword_1EA1948A8 != -1) {
    swift_once();
  }
  *(void *)(v0 + 32) = qword_1EA1A79B0;
  uint64_t v1 = qword_1EA1948B0;
  swift_retain();
  if (v1 != -1) {
    swift_once();
  }
  *(void *)(v0 + 40) = qword_1EA1A79B8;
  sub_1C151EBEC();
  swift_retain();
  return v0;
}

uint64_t static Commands.Sports.Event.tapToRadar.getter()
{
  return sub_1BFC387A8(&qword_1EB885410);
}

uint64_t static Commands.Sports.Event.copyUmcId.getter()
{
  return sub_1BFC387A8(&qword_1EB885438);
}

uint64_t static ContextMenuItem.report(scoreConcern:)(uint64_t a1, char a2)
{
  uint64_t v4 = sub_1C151B03C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (((1 << a2) & 9) != 0)
  {
    if (qword_1EB885388 == -1) {
      goto LABEL_8;
    }
    goto LABEL_9;
  }
  if (((1 << a2) & 0x12) != 0)
  {
    if (qword_1EB8853D0 == -1) {
      goto LABEL_8;
    }
    goto LABEL_9;
  }
  if (qword_1EB8853A0 != -1) {
LABEL_9:
  }
    swift_once();
LABEL_8:
  swift_retain();
  sub_1C0DB73CC(a1, a2);
  sub_1C0DB7528();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAC3E0], v4);
  uint64_t v9 = a1;
  char v10 = a2;
  swift_allocObject();
  return sub_1C151A7FC();
}

uint64_t static ContextMenuItem.report(standingConcern:)(uint64_t a1)
{
  uint64_t v2 = sub_1C151B03C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0x8000000000000000) == 0)
  {
    if (qword_1EA1948A8 == -1) {
      goto LABEL_5;
    }
    goto LABEL_6;
  }
  if (qword_1EA1948B0 != -1) {
LABEL_6:
  }
    swift_once();
LABEL_5:
  swift_retain();
  swift_retain();
  sub_1C0FFF320();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAC3E0], v2);
  v7[1] = a1;
  swift_allocObject();
  return sub_1C151A7FC();
}

uint64_t static UIActivityType.openSportsEvent.getter()
{
  return sub_1C151E5EC();
}

uint64_t sub_1C0E045DC()
{
  uint64_t v0 = sub_1C151B3AC();
  MEMORY[0x1F4188790](v0 - 8);
  if (qword_1EB885428 != -1) {
    swift_once();
  }
  swift_retain();
  swift_unknownObjectRetain();
  sub_1C151E5EC();
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v2 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1818]), sel_init);
  sub_1C151B39C();
  sub_1C151A9FC();
  swift_allocObject();
  return sub_1C151A9EC();
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE14manageMySportsACyFZ_0()
{
  uint64_t v0 = sub_1C151B03C();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB864508 != -1) {
    swift_once();
  }
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v5 = self;
  swift_retain();
  id v6 = objc_msgSend(v5, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  char v7 = (void *)sub_1C151E5EC();
  id v8 = objc_msgSend(self, sel_systemImageNamed_, v7);

  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FAC3E0], v0);
  sub_1C151A81C();
  swift_allocObject();
  return sub_1C151A7FC();
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE15openSportsEvent3forACSo19FCHeadlineProviding_p_tFZ_0(uint64_t a1)
{
  uint64_t v2 = sub_1C151B03C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB885428 != -1) {
    swift_once();
  }
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  char v7 = self;
  swift_retain();
  swift_unknownObjectRetain();
  id v8 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAC3E0], v2);
  uint64_t v10 = a1;
  char v11 = 1;
  sub_1C151A81C();
  swift_allocObject();
  return sub_1C151A7FC();
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE15openSportsEvent3forAcD0I22ScoreDataVisualizationC_tFZ_0(uint64_t a1)
{
  uint64_t v2 = sub_1C151B03C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB885428 != -1) {
    swift_once();
  }
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  char v7 = self;
  swift_retain();
  swift_retain();
  id v8 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAC3E0], v2);
  uint64_t v10 = a1;
  char v11 = 0;
  sub_1C151A81C();
  swift_allocObject();
  return sub_1C151A7FC();
}

uint64_t initializeBufferWithCopyOfBuffer for OpenSportEventContext(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1C0E04E68(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_1C0E04E68(uint64_t a1, char a2)
{
  if (a2) {
    return swift_unknownObjectRetain();
  }
  else {
    return swift_retain();
  }
}

uint64_t destroy for OpenSportEventContext(uint64_t a1)
{
  return sub_1C0E04E84(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t sub_1C0E04E84(uint64_t a1, char a2)
{
  if (a2) {
    return swift_unknownObjectRelease();
  }
  else {
    return swift_release();
  }
}

uint64_t assignWithCopy for OpenSportEventContext(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1C0E04E68(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_1C0E04E84(v5, v6);
  return a1;
}

uint64_t assignWithTake for OpenSportEventContext(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_1C0E04E84(v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for Commands.Sports()
{
  return &type metadata for Commands.Sports;
}

ValueMetadata *type metadata accessor for Commands.Sports.ReportScore()
{
  return &type metadata for Commands.Sports.ReportScore;
}

ValueMetadata *type metadata accessor for Commands.Sports.ReportStanding()
{
  return &type metadata for Commands.Sports.ReportStanding;
}

ValueMetadata *type metadata accessor for Commands.Sports.Event()
{
  return &type metadata for Commands.Sports.Event;
}

uint64_t sub_1C0E04F64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151B03C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB885438 != -1) {
    swift_once();
  }
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v9 = self;
  swift_bridgeObjectRetain();
  swift_retain();
  id v10 = objc_msgSend(v9, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  char v11 = (void *)sub_1C151E5EC();
  id v12 = objc_msgSend(self, sel_systemImageNamed_, v11);

  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAC3E0], v4);
  v14[0] = a1;
  v14[1] = a2;
  sub_1C151A81C();
  swift_allocObject();
  return sub_1C151A7FC();
}

uint64_t sub_1C0E051D0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FormatResizing.init(from:)(a1, a2);
}

uint64_t sub_1C0E051E8(void *a1)
{
  return FormatResizing.encode(to:)(a1);
}

uint64_t _s8NewsFeed14FormatResizingO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v2 + 16);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v3 + 16);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v6 = sub_1C00ACCAC(v4, v5);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6 & 1;
}

unint64_t sub_1C0E052C4(uint64_t a1)
{
  unint64_t result = sub_1C0E052EC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0E052EC()
{
  unint64_t result = qword_1EA1A79D0;
  if (!qword_1EA1A79D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A79D0);
  }
  return result;
}

unint64_t sub_1C0E05340(void *a1)
{
  a1[1] = sub_1C0260F28();
  a1[2] = sub_1C026063C();
  unint64_t result = sub_1C0E05378();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0E05378()
{
  unint64_t result = qword_1EA1A79D8;
  if (!qword_1EA1A79D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A79D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatResizing()
{
  return &type metadata for FormatResizing;
}

uint64_t FormatProgressCircleOptions.radius.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t FormatProgressCircleOptions.clockwise.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  char v4 = *(unsigned char *)(v1 + 24);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1BFE94AB4(v2, v3, v4);
}

uint64_t FormatProgressCircleOptions.stepPercentage.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t FormatProgressCircleOptions.minPercentage.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 40);
  return swift_bridgeObjectRetain();
}

uint64_t FormatProgressCircleOptions.maxPercentage.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 48);
  return swift_bridgeObjectRetain();
}

void FormatProgressCircleOptions.lineCap.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 56);
}

uint64_t FormatProgressCircleOptions.radius.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = v2;
  return result;
}

uint64_t (*FormatProgressCircleOptions.radius.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatProgressCircleOptions.clockwise.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  uint64_t result = sub_1BFE94AD4(*(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
  *(void *)(v1 + 8) = v2;
  *(void *)(v1 + 16) = v3;
  *(unsigned char *)(v1 + 24) = v4;
  return result;
}

uint64_t (*FormatProgressCircleOptions.clockwise.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatProgressCircleOptions.stepPercentage.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = v2;
  return result;
}

uint64_t (*FormatProgressCircleOptions.stepPercentage.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatProgressCircleOptions.minPercentage.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 40) = v2;
  return result;
}

uint64_t (*FormatProgressCircleOptions.minPercentage.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatProgressCircleOptions.maxPercentage.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = v2;
  return result;
}

uint64_t (*FormatProgressCircleOptions.maxPercentage.modify())(void)
{
  return nullsub_1;
}

unsigned char *FormatProgressCircleOptions.lineCap.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 56) = *result;
  return result;
}

uint64_t (*FormatProgressCircleOptions.lineCap.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatProgressCircleOptions.value(contextLayoutOptions:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)v2;
  uint64_t v6 = *(void *)(v2 + 8);
  uint64_t v7 = *(void *)(v2 + 16);
  char v8 = *(unsigned char *)(v2 + 24);
  uint64_t v10 = *(void *)(v2 + 32);
  uint64_t v9 = *(void *)(v2 + 40);
  uint64_t v19 = *(void *)(v2 + 48);
  char v17 = *(unsigned char *)(v2 + 56);
  swift_bridgeObjectRetain();
  double v11 = sub_1BFF493E4(a1, v5);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v3)
  {
    sub_1BFE94AB4(v6, v7, v8);
    char v13 = FormatBoolean.value(contextLayoutOptions:)(a1);
    sub_1BFE94AD4(v6, v7, v8);
    swift_bridgeObjectRetain();
    double v14 = sub_1BFF493E4(a1, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    double v15 = sub_1BFF493E4(a1, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    double v16 = sub_1BFF493E4(a1, v19);
    uint64_t result = swift_bridgeObjectRelease();
    *(double *)a2 = v11;
    *(unsigned char *)(a2 + 8) = v13 & 1;
    *(double *)(a2 + 16) = v14;
    *(double *)(a2 + 24) = v15;
    *(double *)(a2 + 32) = v16;
    *(unsigned char *)(a2 + 40) = v17;
  }
  return result;
}

uint64_t sub_1C0E0577C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatProgressCircleOptions.init(from:)(a1, a2);
}

uint64_t sub_1C0E05794(void *a1)
{
  return FormatProgressCircleOptions.encode(to:)(a1);
}

double FormatProgressCircleOptionsResolved.radius.getter()
{
  return *(double *)v0;
}

void FormatProgressCircleOptionsResolved.radius.setter(double a1)
{
  double *v1 = a1;
}

uint64_t (*FormatProgressCircleOptionsResolved.radius.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatProgressCircleOptionsResolved.clockwise.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t FormatProgressCircleOptionsResolved.clockwise.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 8) = result;
  return result;
}

uint64_t (*FormatProgressCircleOptionsResolved.clockwise.modify())(void)
{
  return nullsub_1;
}

double FormatProgressCircleOptionsResolved.stepPercentage.getter()
{
  return *(double *)(v0 + 16);
}

void FormatProgressCircleOptionsResolved.stepPercentage.setter(double a1)
{
  *(double *)(v1 + 16) = a1;
}

uint64_t (*FormatProgressCircleOptionsResolved.stepPercentage.modify())(void)
{
  return nullsub_1;
}

double FormatProgressCircleOptionsResolved.minPercentage.getter()
{
  return *(double *)(v0 + 24);
}

void FormatProgressCircleOptionsResolved.minPercentage.setter(double a1)
{
  *(double *)(v1 + 24) = a1;
}

uint64_t (*FormatProgressCircleOptionsResolved.minPercentage.modify())(void)
{
  return nullsub_1;
}

double FormatProgressCircleOptionsResolved.maxPercentage.getter()
{
  return *(double *)(v0 + 32);
}

void FormatProgressCircleOptionsResolved.maxPercentage.setter(double a1)
{
  *(double *)(v1 + 32) = a1;
}

uint64_t (*FormatProgressCircleOptionsResolved.maxPercentage.modify())(void)
{
  return nullsub_1;
}

void FormatProgressCircleOptionsResolved.lineCap.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 40);
}

unsigned char *FormatProgressCircleOptionsResolved.lineCap.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 40) = *result;
  return result;
}

uint64_t (*FormatProgressCircleOptionsResolved.lineCap.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1C0E058DC()
{
  uint64_t result = 0x737569646172;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7369776B636F6C63;
      break;
    case 2:
      uint64_t result = 0x6372655070657473;
      break;
    case 3:
      unsigned int v2 = 1349413229;
      goto LABEL_6;
    case 4:
      unsigned int v2 = 1350066541;
LABEL_6:
      uint64_t result = v2 | 0x6563726500000000;
      break;
    case 5:
      uint64_t result = 0x706143656E696CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0E059B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0E06B5C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0E059D8(uint64_t a1)
{
  unint64_t v2 = sub_1C0E062E0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0E05A14(uint64_t a1)
{
  unint64_t v2 = sub_1C0E062E0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatProgressCircleOptionsResolved.encode(to:)(void *a1)
{
  sub_1C0E06334(0, &qword_1EA1A79E0, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v8 = (char *)v11 - v7;
  v11[3] = *(unsigned __int8 *)(v1 + 8);
  char v9 = *(unsigned char *)(v1 + 40);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0E062E0();
  sub_1C1520F0C();
  char v18 = 0;
  sub_1C15207EC();
  if (!v2)
  {
    char v17 = 1;
    sub_1C15207DC();
    char v16 = 2;
    sub_1C15207EC();
    char v15 = 3;
    sub_1C15207EC();
    char v14 = 4;
    sub_1C15207EC();
    char v13 = v9;
    char v12 = 5;
    sub_1BFDF85F0();
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t FormatProgressCircleOptionsResolved.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0E06334(0, &qword_1EA1A79F0, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v9 = (char *)&v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0E062E0();
  sub_1C1520EBC();
  if (!v2)
  {
    char v28 = 0;
    sub_1C15206BC();
    uint64_t v11 = v10;
    char v27 = 1;
    char v12 = sub_1C15206AC();
    char v26 = 2;
    sub_1C15206BC();
    uint64_t v14 = v13;
    char v25 = 3;
    sub_1C15206BC();
    uint64_t v16 = v15;
    char v24 = 4;
    sub_1C15206BC();
    uint64_t v18 = v17;
    char v22 = 5;
    sub_1BFDFD194();
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    char v20 = v23;
    *(void *)a2 = v11;
    *(unsigned char *)(a2 + 8) = v12 & 1;
    *(void *)(a2 + 16) = v14;
    *(void *)(a2 + 24) = v16;
    *(void *)(a2 + 32) = v18;
    *(unsigned char *)(a2 + 40) = v20;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C0E05F30@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatProgressCircleOptionsResolved.init(from:)(a1, a2);
}

uint64_t sub_1C0E05F48(void *a1)
{
  return FormatProgressCircleOptionsResolved.encode(to:)(a1);
}

uint64_t _s8NewsFeed27FormatProgressCircleOptionsV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  char v5 = *(unsigned char *)(a1 + 24);
  uint64_t v25 = *(void *)(a1 + 48);
  uint64_t v26 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  char v9 = *(unsigned char *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v24 = *(void *)(a2 + 48);
  int v22 = *(unsigned __int8 *)(a1 + 56);
  int v23 = *(unsigned __int8 *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v11 = sub_1C00DE998(v2, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0) {
    return 0;
  }
  if ((v5 & 1) == 0)
  {
    if ((v9 & 1) == 0)
    {
      sub_1BFE94AB4(v7, v8, 0);
      sub_1BFE94AD4(v3, v4, 0);
      sub_1BFE94AD4(v7, v8, 0);
      sub_1BFE94AD4(v3, v4, 0);
      uint64_t result = 0;
      if (((((v3 & 1) == 0) ^ v7) & 1) == 0) {
        return result;
      }
      goto LABEL_13;
    }
LABEL_11:
    sub_1BFE94AB4(v7, v8, v9);
    sub_1BFE94AD4(v3, v4, v5);
    sub_1BFE94AD4(v7, v8, v9);
    sub_1BFE94AD4(v3, v4, v5);
    return 0;
  }
  if ((v9 & 1) == 0)
  {
    sub_1BFE94AB4(v3, v4, 1);
    swift_bridgeObjectRetain();
    goto LABEL_11;
  }
  if (v3 == v7 && v4 == v8)
  {
    sub_1BFE94AB4(v3, v4, 1);
    sub_1BFE94AB4(v3, v4, 1);
    sub_1BFE94AD4(v3, v4, 1);
    sub_1BFE94AD4(v3, v4, 1);
  }
  else
  {
    char v13 = sub_1C1520A9C();
    sub_1BFE94AB4(v7, v8, 1);
    sub_1BFE94AB4(v3, v4, 1);
    sub_1BFE94AD4(v3, v4, 1);
    sub_1BFE94AD4(v7, v8, 1);
    uint64_t result = 0;
    if ((v13 & 1) == 0) {
      return result;
    }
  }
LABEL_13:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v14 = sub_1C00DE998(v26, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v14 & 1) == 0) {
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v15 = sub_1C00DE998(v25, v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v15 & 1) == 0) {
    return 0;
  }
  uint64_t v16 = 1953789282;
  if (v22)
  {
    int v17 = v23;
    if (v22 == 1)
    {
      unint64_t v18 = 0xE500000000000000;
      uint64_t v19 = 0x646E756F72;
    }
    else
    {
      unint64_t v18 = 0xE600000000000000;
      uint64_t v19 = 0x657261757173;
    }
  }
  else
  {
    unint64_t v18 = 0xE400000000000000;
    uint64_t v19 = 1953789282;
    int v17 = v23;
  }
  if (v17)
  {
    if (v17 == 1)
    {
      unint64_t v20 = 0xE500000000000000;
      uint64_t v16 = 0x646E756F72;
    }
    else
    {
      unint64_t v20 = 0xE600000000000000;
      uint64_t v16 = 0x657261757173;
    }
  }
  else
  {
    unint64_t v20 = 0xE400000000000000;
  }
  if (v19 == v16 && v18 == v20)
  {
    swift_bridgeObjectRelease_n();
    return 1;
  }
  else
  {
    char v21 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v21 & 1;
  }
}

unint64_t sub_1C0E062E0()
{
  unint64_t result = qword_1EA1A79E8;
  if (!qword_1EA1A79E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A79E8);
  }
  return result;
}

void sub_1C0E06334(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0E062E0();
    unint64_t v7 = a3(a1, &type metadata for FormatProgressCircleOptionsResolved.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C0E06398(uint64_t a1)
{
  unint64_t result = sub_1C0E063C0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0E063C0()
{
  unint64_t result = qword_1EA1A79F8;
  if (!qword_1EA1A79F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A79F8);
  }
  return result;
}

unint64_t sub_1C0E06414(void *a1)
{
  a1[1] = sub_1C08A54F4();
  a1[2] = sub_1C08F3630();
  unint64_t result = sub_1C0E0644C();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0E0644C()
{
  unint64_t result = qword_1EA1A7A00;
  if (!qword_1EA1A7A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7A00);
  }
  return result;
}

uint64_t sub_1C0E064A0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0E064AC(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_1C0E064F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  char v4 = *(unsigned char *)(a1 + 24);
  *(void *)a2 = v3;
  *(void *)(a2 + 8) = v2;
  *(unsigned char *)(a2 + 16) = v4;
  return sub_1BFE94AB4(v3, v2, v4);
}

uint64_t sub_1C0E0650C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0E06518(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 32) = v3;
  return result;
}

uint64_t sub_1C0E0655C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 40);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0E06568(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 40) = v3;
  return result;
}

uint64_t sub_1C0E065AC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0E065B8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 48) = v3;
  return result;
}

uint64_t sub_1C0E065FC@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 56);
  return result;
}

unsigned char *sub_1C0E06608(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 56) = *result;
  return result;
}

uint64_t initializeWithCopy for FormatProgressCircleOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  sub_1BFE94AB4(v4, v5, v6);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatProgressCircleOptions(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1BFE94AB4(v4, v5, v6);
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  char v9 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  sub_1BFE94AD4(v7, v8, v9);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t assignWithTake for FormatProgressCircleOptions(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  char v7 = *(unsigned char *)(a1 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = v4;
  sub_1BFE94AD4(v5, v6, v7);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatProgressCircleOptions(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 57)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatProgressCircleOptions(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatProgressCircleOptions()
{
  return &type metadata for FormatProgressCircleOptions;
}

uint64_t getEnumTagSinglePayload for FormatProgressCircleOptionsResolved(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatProgressCircleOptionsResolved(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatProgressCircleOptionsResolved()
{
  return &type metadata for FormatProgressCircleOptionsResolved;
}

unsigned char *storeEnumTagSinglePayload for FormatProgressCircleOptionsResolved.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0E06A1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatProgressCircleOptionsResolved.CodingKeys()
{
  return &type metadata for FormatProgressCircleOptionsResolved.CodingKeys;
}

unint64_t sub_1C0E06A58()
{
  unint64_t result = qword_1EA1A7A08;
  if (!qword_1EA1A7A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7A08);
  }
  return result;
}

unint64_t sub_1C0E06AB0()
{
  unint64_t result = qword_1EA1A7A10;
  if (!qword_1EA1A7A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7A10);
  }
  return result;
}

unint64_t sub_1C0E06B08()
{
  unint64_t result = qword_1EA1A7A18;
  if (!qword_1EA1A7A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7A18);
  }
  return result;
}

uint64_t sub_1C0E06B5C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x737569646172 && a2 == 0xE600000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7369776B636F6C63 && a2 == 0xE900000000000065 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6372655070657473 && a2 == 0xEE00656761746E65 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65637265506E696DLL && a2 == 0xED0000656761746ELL || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656372655078616DLL && a2 == 0xED0000656761746ELL || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x706143656E696CLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

double FeedGroupGlobalBundleArticleQuota.ratio.getter()
{
  return *(double *)v0;
}

BOOL static FeedGroupGlobalBundleArticleQuota.== infix(_:_:)(double *a1, double *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1C0E06E64()
{
  return 0x6F69746172;
}

uint64_t sub_1C0E06E78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6F69746172 && a2 == 0xE500000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C0E06F08(uint64_t a1)
{
  unint64_t v2 = sub_1C0E070C8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0E06F44(uint64_t a1)
{
  unint64_t v2 = sub_1C0E070C8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FeedGroupGlobalBundleArticleQuota.encode(to:)(void *a1)
{
  sub_1C0E072A4(0, &qword_1EA1A7A20, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0E070C8();
  sub_1C1520F0C();
  sub_1C15207EC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1C0E070C8()
{
  unint64_t result = qword_1EA1A7A28;
  if (!qword_1EA1A7A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7A28);
  }
  return result;
}

uint64_t FeedGroupGlobalBundleArticleQuota.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1C0E072A4(0, &qword_1EA1A7A30, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0E070C8();
  sub_1C1520EBC();
  if (!v2)
  {
    sub_1C15206BC();
    uint64_t v11 = v10;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1C0E072A4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0E070C8();
    unint64_t v7 = a3(a1, &type metadata for FeedGroupGlobalBundleArticleQuota.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C0E07308@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FeedGroupGlobalBundleArticleQuota.init(from:)(a1, a2);
}

uint64_t sub_1C0E07320(void *a1)
{
  sub_1C0E072A4(0, &qword_1EA1A7A20, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0E070C8();
  sub_1C1520F0C();
  sub_1C15207EC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

BOOL sub_1C0E07468(double *a1, double *a2)
{
  return *a1 == *a2;
}

ValueMetadata *type metadata accessor for FeedGroupGlobalBundleArticleQuota()
{
  return &type metadata for FeedGroupGlobalBundleArticleQuota;
}

unsigned char *storeEnumTagSinglePayload for FeedGroupGlobalBundleArticleQuota.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C0E07528);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupGlobalBundleArticleQuota.CodingKeys()
{
  return &type metadata for FeedGroupGlobalBundleArticleQuota.CodingKeys;
}

unint64_t sub_1C0E07564()
{
  unint64_t result = qword_1EA1A7A38;
  if (!qword_1EA1A7A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7A38);
  }
  return result;
}

unint64_t sub_1C0E075BC()
{
  unint64_t result = qword_1EA1A7A40;
  if (!qword_1EA1A7A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7A40);
  }
  return result;
}

unint64_t sub_1C0E07614()
{
  unint64_t result = qword_1EA1A7A48;
  if (!qword_1EA1A7A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7A48);
  }
  return result;
}

uint64_t FormatMenuItemData.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  char v4 = *(unsigned char *)(v1 + 16);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1C04B5340(v2, v3, v4);
}

id FormatMenuItemData.image.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + 24);
  char v3 = *(unsigned char *)(v1 + 32);
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3;
  return sub_1C01DCFFC(v2, v3);
}

uint64_t FormatMenuItemData.action.getter()
{
  return swift_retain();
}

uint64_t destroy for FormatMenuItemData(uint64_t a1)
{
  sub_1C04B5360(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  sub_1C01DD018(*(void **)(a1 + 24), *(unsigned char *)(a1 + 32));
  return swift_release();
}

uint64_t initializeWithCopy for FormatMenuItemData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_1C04B5340(*(void *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  unint64_t v7 = *(void **)(a2 + 24);
  LOBYTE(v5) = *(unsigned char *)(a2 + 32);
  sub_1C01DCFFC(v7, v5);
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for FormatMenuItemData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_1C04B5340(*(void *)a2, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  char v9 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  sub_1C04B5360(v7, v8, v9);
  uint64_t v10 = *(void **)(a2 + 24);
  LOBYTE(v5) = *(unsigned char *)(a2 + 32);
  sub_1C01DCFFC(v10, v5);
  uint64_t v11 = *(void **)(a1 + 24);
  char v12 = *(unsigned char *)(a1 + 32);
  *(void *)(a1 + 24) = v10;
  *(unsigned char *)(a1 + 32) = v5;
  sub_1C01DD018(v11, v12);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for FormatMenuItemData(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  char v7 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  sub_1C04B5360(v5, v6, v7);
  char v8 = *(unsigned char *)(a2 + 32);
  char v9 = *(void **)(a1 + 24);
  char v10 = *(unsigned char *)(a1 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = v8;
  sub_1C01DD018(v9, v10);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatMenuItemData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 40);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatMenuItemData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)(result + 40) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatMenuItemData()
{
  return &type metadata for FormatMenuItemData;
}

uint64_t sub_1C0E0794C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a2 + 56))(a3, a4, a5);
}

uint64_t FeedGroupDebuggable.debugCandidates.getter()
{
  return 0;
}

uint64_t FeedGroupDebuggable.debugFormat.getter()
{
  return 0;
}

uint64_t dispatch thunk of FeedGroupDebuggable.debugIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FeedGroupDebuggable.debugTitle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FeedGroupDebuggable.debugCandidates.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1C0E07B1C()
{
  return sub_1C021C1F4(*v0);
}

uint64_t sub_1C0E07B24()
{
  return sub_1C0218448(*v0);
}

uint64_t sub_1C0E07B2C(uint64_t a1, uint64_t a2)
{
  return sub_1C0E07E80(a1, a2, (uint64_t (*)(void, void, void))sub_1C021B5E8);
}

uint64_t sub_1C0E07B44(uint64_t a1, uint64_t a2)
{
  return sub_1C0E07C64(a1, a2, sub_1C0215DB8);
}

uint64_t sub_1C0E07B5C()
{
  return sub_1C0215064(*(void *)v0, *(unsigned char *)(v0 + 8));
}

uint64_t sub_1C0E07B68()
{
  return sub_1C0215CD4(*v0);
}

uint64_t sub_1C0E07B70()
{
  return sub_1C021B5D0(*v0);
}

uint64_t sub_1C0E07B78()
{
  sub_1C022425C(v0, (uint64_t)v2);
  return sub_1C0218460();
}

uint64_t sub_1C0E07BB0()
{
  return sub_1C021A94C(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1C0E07BC4()
{
  return sub_1C021A960(*v0);
}

uint64_t sub_1C0E07BCC()
{
  return sub_1C0215D10(*v0);
}

uint64_t sub_1C0E07BD4()
{
  return sub_1C021968C(*v0);
}

uint64_t sub_1C0E07BDC()
{
  return sub_1C021437C(*v0);
}

uint64_t sub_1C0E07BE4()
{
  return sub_1C0216438(*v0);
}

uint64_t sub_1C0E07BEC()
{
  return sub_1C0216B24(*v0);
}

uint64_t sub_1C0E07BF4()
{
  return sub_1C021779C(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16), *(unsigned __int8 *)(v0 + 24));
}

uint64_t sub_1C0E07C08()
{
  return sub_1C0217138(*v0);
}

uint64_t sub_1C0E07C10()
{
  return sub_1C0215CF8(*v0);
}

uint64_t sub_1C0E07C18()
{
  return sub_1C02164A0(*v0);
}

uint64_t sub_1C0E07C20()
{
  return sub_1C0214370(*v0);
}

uint64_t sub_1C0E07C28()
{
  return sub_1C0214364(*v0);
}

uint64_t sub_1C0E07C30()
{
  return sub_1C0215058(*(void *)v0, *(unsigned char *)(v0 + 8));
}

uint64_t sub_1C0E07C40()
{
  return sub_1C021A96C(*(void *)v0, *(void *)(v0 + 8), *(unsigned __int8 *)(v0 + 16));
}

uint64_t sub_1C0E07C4C(uint64_t a1, uint64_t a2)
{
  return sub_1C0E07C64(a1, a2, sub_1C0215DD8);
}

uint64_t sub_1C0E07C64(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void, void))
{
  return a3(*(void *)v3, *(void *)(v3 + 8), *(unsigned __int16 *)(v3 + 16));
}

uint64_t sub_1C0E07C78()
{
  return sub_1C0214358(*v0);
}

uint64_t sub_1C0E07C84()
{
  return sub_1C0216470(*v0);
}

uint64_t sub_1C0E07C8C()
{
  sub_1C0224024(v0, (uint64_t)v2);
  return sub_1C02164AC();
}

uint64_t sub_1C0E07CC4()
{
  return sub_1C0219698(*(void *)v0, *(void *)(v0 + 8), *(unsigned __int8 *)(v0 + 16));
}

uint64_t sub_1C0E07CD0()
{
  return sub_1C0216444(*(void *)v0, *(void *)(v0 + 8), *(unsigned __int8 *)(v0 + 16));
}

uint64_t sub_1C0E07CDC()
{
  return sub_1C0218A78(*(void *)v0, *(void *)(v0 + 8), *(unsigned __int16 *)(v0 + 16) | (*(unsigned __int8 *)(v0 + 18) << 16));
}

uint64_t sub_1C0E07CF4()
{
  return sub_1C0216B18(*v0);
}

uint64_t sub_1C0E07D00()
{
  return sub_1C0215CBC(*v0);
}

uint64_t sub_1C0E07D08()
{
  return sub_1C0215C80(*v0);
}

uint64_t sub_1C0E07D10(uint64_t a1, uint64_t a2)
{
  return sub_1C0E07E18(a1, a2, (uint64_t (*)(void, void))sub_1C0218454);
}

uint64_t sub_1C0E07D28()
{
  return sub_1C021AFA0(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C0E07D34()
{
  return sub_1C021504C(*(void *)v0, *(unsigned char *)(v0 + 8));
}

uint64_t sub_1C0E07D40()
{
  return sub_1C0217144(*v0);
}

uint64_t sub_1C0E07D48()
{
  return sub_1C0216B3C(*v0);
}

uint64_t sub_1C0E07D50()
{
  return sub_1C021507C(*(void *)v0, *(unsigned char *)(v0 + 8));
}

uint64_t sub_1C0E07D5C()
{
  return sub_1C0217760(*v0);
}

uint64_t sub_1C0E07D68()
{
  return sub_1C0215D70(*v0);
}

uint64_t sub_1C0E07D70()
{
  return sub_1C0219CAC(*v0);
}

uint64_t sub_1C0E07D78()
{
  return sub_1C021BBF8(*v0);
}

uint64_t sub_1C0E07D80()
{
  return sub_1C0215CE0(*v0);
}

uint64_t sub_1C0E07D88()
{
  return sub_1C0215D04(*v0);
}

uint64_t sub_1C0E07D94()
{
  return sub_1C0216464(*v0);
}

uint64_t sub_1C0E07D9C()
{
  return sub_1C0216488(*v0);
}

uint64_t sub_1C0E07DA4()
{
  return sub_1C0216B0C(*v0);
}

uint64_t sub_1C0E07DAC()
{
  return sub_1C02149C8(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1C0E07DBC()
{
  return sub_1C021B5DC(*v0);
}

uint64_t sub_1C0E07DC4()
{
  sub_1C0223E44(v0, (uint64_t)v2);
  return sub_1C0215D1C();
}

uint64_t sub_1C0E07E00(uint64_t a1, uint64_t a2)
{
  return sub_1C0E07E18(a1, a2, (uint64_t (*)(void, void))sub_1C0219080);
}

uint64_t sub_1C0E07E18(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void))
{
  return a3(*(void *)v3, *(unsigned __int16 *)(v3 + 8));
}

uint64_t sub_1C0E07E28()
{
  return sub_1C0214388(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1C0E07E38()
{
  return sub_1C0217790(*v0);
}

uint64_t sub_1C0E07E40()
{
  return sub_1C0215C98(*v0);
}

uint64_t sub_1C0E07E48()
{
  return sub_1C0215CC8(*v0);
}

uint64_t sub_1C0E07E50()
{
  return sub_1C0215680(*(void *)v0, *(unsigned char *)(v0 + 8));
}

uint64_t sub_1C0E07E68(uint64_t a1, uint64_t a2)
{
  return sub_1C0E07E80(a1, a2, (uint64_t (*)(void, void, void))sub_1C0215D58);
}

uint64_t sub_1C0E07E80(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void, void))
{
  return a3(*(void *)v3, *(void *)(v3 + 8), *(unsigned __int16 *)(v3 + 16) | (*(unsigned __int8 *)(v3 + 18) << 16));
}

uint64_t sub_1C0E07EA0()
{
  return sub_1C0215D88(*v0);
}

uint64_t sub_1C0E07EA8()
{
  return sub_1C0215CEC(*v0);
}

uint64_t sub_1C0E07EB0()
{
  return sub_1C021A344(*v0);
}

uint64_t sub_1C0E07EC0()
{
  return sub_1C0219CB8(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1C0E07ED0()
{
  return sub_1C0217150(*(void *)(v0 + 8), *(_WORD *)(v0 + 16), *(double *)v0);
}

uint64_t sub_1C0E07EE0()
{
  sub_1C0223D44(v0, (uint64_t)&v2);
  return sub_1C0215010();
}

uint64_t sub_1C0E07F18()
{
  return sub_1C0215CA4(*v0);
}

uint64_t sub_1C0E07F20()
{
  return sub_1C021A350(*(void *)v0, *(_WORD *)(v0 + 8));
}

uint64_t sub_1C0E07F2C()
{
  return sub_1C0215D64(*v0);
}

uint64_t sub_1C0E07F34()
{
  sub_1C0223ACC(v0, (uint64_t)&v2);
  return sub_1C0217DE8();
}

void sub_1C0E07F6C()
{
}

void sub_1C0E07F90()
{
}

void sub_1C0E07FB4(void *a1, void *a2, void *a3, void *a4)
{
  char v7 = *(void **)(v4 + *a1);
  CGRect v22 = *(CGRect *)(v4 + *a2);
  long long v8 = *(_OWORD *)(v4 + OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentTransformation + 16);
  *(_OWORD *)&v21.a = *(_OWORD *)(v4 + OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentTransformation);
  *(_OWORD *)&v21.c = v8;
  *(_OWORD *)&v21.tCGFloat x = *(_OWORD *)(v4 + OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentTransformation + 32);
  CGRect v23 = CGRectApplyAffineTransform(v22, &v21);
  objc_msgSend(v7, sel_setFrame_, v23.origin.x, v23.origin.y, v23.size.width, v23.size.height);
  uint64_t v9 = MEMORY[0x1C18C9C60](v4 + OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_rulerView);
  if (v9)
  {
    char v10 = (char *)v9;
    objc_msgSend(v7, sel_frame);
    uint64_t v11 = &v10[*a3];
    *(void *)uint64_t v11 = v12;
    *((void *)v11 + 1) = v13;
    *((void *)v11 + 2) = v14;
    *((void *)v11 + 3) = v15;
    uint64_t v16 = *(char **)&v10[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_verticalRulerEdgeView];
    int v17 = &v16[*a4];
    *(void *)int v17 = v12;
    *((void *)v17 + 1) = v13;
    *((void *)v17 + 2) = v14;
    *((void *)v17 + 3) = v15;
    objc_msgSend(v16, sel_setNeedsLayout);
    unint64_t v18 = *(char **)&v10[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_horizontalRulerEdgeView];
    uint64_t v19 = &v18[*a4];
    long long v20 = *((_OWORD *)v11 + 1);
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v11;
    *((_OWORD *)v19 + 1) = v20;
    objc_msgSend(v18, sel_setNeedsLayout);
  }
}

void sub_1C0E080C4(char *a1)
{
  CGRect v35 = CGRectOffset(*(CGRect *)&a1[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentFrame], *(CGFloat *)&a1[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentOffset], *(CGFloat *)&a1[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentOffset + 8]);
  uint64_t v2 = &a1[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentTransformation];
  long long v3 = *(_OWORD *)&a1[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentTransformation + 16];
  *(_OWORD *)&v34.a = *(_OWORD *)&a1[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentTransformation];
  *(_OWORD *)&v34.c = v3;
  *(_OWORD *)&v34.tCGFloat x = *(_OWORD *)&a1[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentTransformation + 32];
  CGRect v36 = CGRectApplyAffineTransform(v35, &v34);
  objc_msgSend(a1, sel_setFrame_, v36.origin.x, v36.origin.y, v36.size.width, v36.size.height);
  uint64_t v4 = *(char **)&a1[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_selectionView];
  CGRect v37 = *(CGRect *)&a1[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_selectionFrame];
  long long v5 = *((_OWORD *)v2 + 1);
  *(_OWORD *)&v34.a = *(_OWORD *)v2;
  *(_OWORD *)&v34.c = v5;
  *(_OWORD *)&v34.tCGFloat x = *((_OWORD *)v2 + 2);
  CGRect v38 = CGRectApplyAffineTransform(v37, &v34);
  objc_msgSend(v4, sel_setFrame_, v38.origin.x, v38.origin.y, v38.size.width, v38.size.height);
  CGRect v39 = *(CGRect *)&a1[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_selectionContentFrame];
  long long v6 = *((_OWORD *)v2 + 1);
  *(_OWORD *)&v34.a = *(_OWORD *)v2;
  *(_OWORD *)&v34.c = v6;
  *(_OWORD *)&v34.tCGFloat x = *((_OWORD *)v2 + 2);
  *(CGRect *)&v4[OBJC_IVAR____TtC8NewsFeed24DebugFormatSelectionView_contentFrame] = CGRectApplyAffineTransform(v39, &v34);
  objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC8NewsFeed24DebugFormatSelectionView_contentView], sel_setFrame_);
  char v7 = &a1[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_rulerView];
  uint64_t v8 = MEMORY[0x1C18C9C60](&a1[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_rulerView]);
  if (v8)
  {
    uint64_t v9 = (char *)v8;
    objc_msgSend(v4, sel_frame);
    char v10 = &v9[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_selectionFrame];
    *(void *)char v10 = v11;
    *((void *)v10 + 1) = v12;
    *((void *)v10 + 2) = v13;
    *((void *)v10 + 3) = v14;
    uint64_t v15 = *(char **)&v9[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_verticalRulerEdgeView];
    uint64_t v16 = &v15[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_selectionFrame];
    *(void *)uint64_t v16 = v11;
    *((void *)v16 + 1) = v12;
    *((void *)v16 + 2) = v13;
    *((void *)v16 + 3) = v14;
    objc_msgSend(v15, sel_setNeedsLayout);
    int v17 = *(char **)&v9[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_horizontalRulerEdgeView];
    unint64_t v18 = &v17[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_selectionFrame];
    long long v19 = *((_OWORD *)v10 + 1);
    *(_OWORD *)unint64_t v18 = *(_OWORD *)v10;
    *((_OWORD *)v18 + 1) = v19;
    objc_msgSend(v17, sel_setNeedsLayout);
  }
  long long v20 = *(void **)&a1[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_metricSelectionView];
  CGRect v40 = *(CGRect *)&a1[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_metricSelectionFrame];
  long long v21 = *((_OWORD *)v2 + 1);
  *(_OWORD *)&v34.a = *(_OWORD *)v2;
  *(_OWORD *)&v34.c = v21;
  *(_OWORD *)&v34.tCGFloat x = *((_OWORD *)v2 + 2);
  CGRect v41 = CGRectApplyAffineTransform(v40, &v34);
  objc_msgSend(v20, sel_setFrame_, v41.origin.x, v41.origin.y, v41.size.width, v41.size.height);
  uint64_t v22 = MEMORY[0x1C18C9C60](v7);
  if (v22)
  {
    CGRect v23 = (char *)v22;
    objc_msgSend(v20, sel_frame);
    uint64_t v24 = &v23[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_metricSelectionFrame];
    *(void *)uint64_t v24 = v25;
    *((void *)v24 + 1) = v26;
    *((void *)v24 + 2) = v27;
    *((void *)v24 + 3) = v28;
    double v29 = *(char **)&v23[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_verticalRulerEdgeView];
    double v30 = &v29[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_metricSelectionFrame];
    *(void *)double v30 = v25;
    *((void *)v30 + 1) = v26;
    *((void *)v30 + 2) = v27;
    *((void *)v30 + 3) = v28;
    objc_msgSend(v29, sel_setNeedsLayout);
    double v31 = *(char **)&v23[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_horizontalRulerEdgeView];
    CGRect v32 = &v31[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_metricSelectionFrame];
    long long v33 = *((_OWORD *)v24 + 1);
    *(_OWORD *)CGRect v32 = *(_OWORD *)v24;
    *((_OWORD *)v32 + 1) = v33;
    objc_msgSend(v31, sel_setNeedsLayout);
  }
}

char *sub_1C0E08494(void *a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = &v1[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_selectionFrame];
  *(_OWORD *)uint64_t v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  long long v5 = &v1[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_selectionContentFrame];
  *(_OWORD *)long long v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  long long v6 = &v1[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_metricSelectionFrame];
  *(_OWORD *)long long v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  char v7 = &v1[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentOffset];
  *(void *)char v7 = 0;
  *((void *)v7 + 1) = 0;
  uint64_t v8 = &v1[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentFrame];
  *(_OWORD *)uint64_t v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  uint64_t v9 = &v1[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentTransformation];
  *(void *)uint64_t v9 = 0x3FF0000000000000;
  *((void *)v9 + 1) = 0;
  *((void *)v9 + 2) = 0;
  *((void *)v9 + 3) = 0x3FF0000000000000;
  *((void *)v9 + 4) = 0;
  *((void *)v9 + 5) = 0;
  uint64_t v10 = OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_selectionView;
  uint64_t v11 = (objc_class *)type metadata accessor for DebugFormatSelectionView();
  id v12 = objc_allocWithZone(v11);
  uint64_t v13 = v1;
  *(void *)&v1[v10] = sub_1C1400660(0, 0.0, 0.0, 0.0, 0.0);
  uint64_t v14 = OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_metricSelectionView;
  id v15 = objc_allocWithZone(v11);
  *(void *)&v13[v14] = sub_1C1400660(1, 0.0, 0.0, 0.0, 0.0);
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();

  v24.receiver = v13;
  v24.super_class = ObjectType;
  uint64_t v16 = (char *)objc_msgSendSuper2(&v24, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v17 = *(void *)&v16[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_selectionView];
  unint64_t v18 = v16;
  objc_msgSend(v18, sel_addSubview_, v17);
  objc_msgSend(v18, sel_addSubview_, *(void *)&v18[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_metricSelectionView]);
  v23.receiver = v18;
  v23.super_class = ObjectType;
  objc_msgSendSuper2(&v23, sel_setUserInteractionEnabled_, 1);
  v22.receiver = v18;
  v22.super_class = ObjectType;
  if ((objc_msgSendSuper2(&v22, sel_isUserInteractionEnabled) & 1) == 0)
  {
    long long v19 = &v18[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_selectionFrame];
    *(_OWORD *)long long v19 = 0u;
    *((_OWORD *)v19 + 1) = 0u;
    sub_1C0E07FB4(&OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_selectionView, &OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_selectionFrame, &OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_selectionFrame, &OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_selectionFrame);
    long long v20 = &v18[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_metricSelectionFrame];
    *(_OWORD *)long long v20 = 0u;
    *((_OWORD *)v20 + 1) = 0u;
    sub_1C0E07FB4(&OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_metricSelectionView, &OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_metricSelectionFrame, &OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_metricSelectionFrame, &OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_metricSelectionFrame);
  }

  return v18;
}

uint64_t type metadata accessor for DebugFormatOverlayView()
{
  return self;
}

void sub_1C0E087B8()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_selectionFrame];
  *(_OWORD *)uint64_t v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  uint64_t v2 = &v0[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_selectionContentFrame];
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  long long v3 = &v0[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_metricSelectionFrame];
  *(_OWORD *)long long v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  uint64_t v4 = &v0[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentOffset];
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  long long v5 = &v0[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentFrame];
  *(_OWORD *)long long v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  long long v6 = &v0[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentTransformation];
  *(void *)long long v6 = 0x3FF0000000000000;
  *((void *)v6 + 1) = 0;
  *((void *)v6 + 2) = 0;
  *((void *)v6 + 3) = 0x3FF0000000000000;
  *((void *)v6 + 4) = 0;
  *((void *)v6 + 5) = 0;
  uint64_t v7 = OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_selectionView;
  uint64_t v8 = (objc_class *)type metadata accessor for DebugFormatSelectionView();
  id v9 = objc_allocWithZone(v8);
  *(void *)&v0[v7] = sub_1C1400660(0, 0.0, 0.0, 0.0, 0.0);
  uint64_t v10 = OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_metricSelectionView;
  id v11 = objc_allocWithZone(v8);
  *(void *)&v0[v10] = sub_1C1400660(1, 0.0, 0.0, 0.0, 0.0);
  swift_unknownObjectWeakInit();

  sub_1C152040C();
  __break(1u);
}

__n128 ArticleThumbnailViewLayoutOptions.init(origin:sizeConstraint:aspectRatio:shadowRadius:cornerRadius:roundedCorners:layeredMedia:)@<Q0>(__n128 *a1@<X0>, unint64_t a2@<X1>, unsigned __int8 a3@<W2>, __n128 *a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>, double a9@<D4>)
{
  unsigned __int8 v9 = a1[1].n128_u8[0];
  a4->n128_f64[0] = a5;
  a4->n128_f64[1] = a6;
  __n128 result = *a1;
  a4[1] = *a1;
  a4[2].n128_u8[0] = v9;
  a4[2].n128_f64[1] = a7;
  a4[3].n128_f64[0] = a8;
  a4[3].n128_f64[1] = a9;
  a4[4].n128_u64[0] = a2;
  a4[4].n128_u8[8] = a3;
  return result;
}

double ArticleThumbnailViewLayoutOptions.origin.getter()
{
  return *(double *)v0;
}

__n128 ArticleThumbnailViewLayoutOptions.sizeConstraint.getter@<Q0>(__n128 *a1@<X8>)
{
  unsigned __int8 v2 = v1[2].n128_u8[0];
  __n128 result = v1[1];
  *a1 = result;
  a1[1].n128_u8[0] = v2;
  return result;
}

double ArticleThumbnailViewLayoutOptions.aspectRatio.getter()
{
  return *(double *)(v0 + 40);
}

double ArticleThumbnailViewLayoutOptions.shadowRadius.getter()
{
  return *(double *)(v0 + 48);
}

double ArticleThumbnailViewLayoutOptions.cornerRadius.getter()
{
  return *(double *)(v0 + 56);
}

uint64_t ArticleThumbnailViewLayoutOptions.roundedCorners.getter()
{
  return *(void *)(v0 + 64);
}

uint64_t ArticleThumbnailViewLayoutOptions.layeredMedia.getter()
{
  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t getEnumTagSinglePayload for ArticleThumbnailViewLayoutOptions(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 73)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 72);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ArticleThumbnailViewLayoutOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 72) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 73) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 73) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 72) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArticleThumbnailViewLayoutOptions()
{
  return &type metadata for ArticleThumbnailViewLayoutOptions;
}

ValueMetadata *type metadata accessor for ArticleThumbnailViewLayoutOptions.SizeConstraint()
{
  return &type metadata for ArticleThumbnailViewLayoutOptions.SizeConstraint;
}

double FeedLowFlowEstimationConfiguration.exponent.getter()
{
  return *(double *)v0;
}

double FeedLowFlowEstimationConfiguration.padding.getter()
{
  return *(double *)(v0 + 8);
}

double FeedLowFlowEstimationConfiguration.prior.getter()
{
  return *(double *)(v0 + 16);
}

uint64_t sub_1C0E08A60()
{
  uint64_t v1 = 0x676E6964646170;
  if (*v0 != 1) {
    uint64_t v1 = 0x726F697270;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x746E656E6F707865;
  }
}

uint64_t sub_1C0E08AB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0E09260(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0E08AE0(uint64_t a1)
{
  unint64_t v2 = sub_1C0E08D04();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0E08B1C(uint64_t a1)
{
  unint64_t v2 = sub_1C0E08D04();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FeedLowFlowEstimationConfiguration.encode(to:)(void *a1)
{
  sub_1C0E08F48(0, &qword_1EA1A7A98, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0E08D04();
  sub_1C1520F0C();
  char v12 = 0;
  sub_1C15207EC();
  if (!v1)
  {
    char v11 = 1;
    sub_1C15207EC();
    char v10 = 2;
    sub_1C15207EC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1C0E08D04()
{
  unint64_t result = qword_1EA1A7AA0;
  if (!qword_1EA1A7AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7AA0);
  }
  return result;
}

uint64_t FeedLowFlowEstimationConfiguration.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1C0E08F48(0, &qword_1EA1A7AA8, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v17[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0E08D04();
  sub_1C1520EBC();
  if (!v2)
  {
    v17[15] = 0;
    sub_1C15206BC();
    uint64_t v11 = v10;
    v17[14] = 1;
    sub_1C15206BC();
    uint64_t v13 = v12;
    v17[13] = 2;
    sub_1C15206BC();
    uint64_t v16 = v15;
    (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11;
    a2[1] = v13;
    a2[2] = v16;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1C0E08F48(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0E08D04();
    unint64_t v7 = a3(a1, &type metadata for FeedLowFlowEstimationConfiguration.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C0E08FAC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FeedLowFlowEstimationConfiguration.init(from:)(a1, a2);
}

uint64_t sub_1C0E08FC4(void *a1)
{
  return FeedLowFlowEstimationConfiguration.encode(to:)(a1);
}

id lowFlowEstimationConfiguration(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  objc_msgSend(a1, sel_exponent);
  uint64_t v5 = v4;
  objc_msgSend(a1, sel_padding);
  uint64_t v7 = v6;
  id result = objc_msgSend(a1, sel_prior);
  *a2 = v5;
  a2[1] = v7;
  a2[2] = v9;
  return result;
}

ValueMetadata *type metadata accessor for FeedLowFlowEstimationConfiguration()
{
  return &type metadata for FeedLowFlowEstimationConfiguration;
}

unsigned char *storeEnumTagSinglePayload for FeedLowFlowEstimationConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *id result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0E09120);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedLowFlowEstimationConfiguration.CodingKeys()
{
  return &type metadata for FeedLowFlowEstimationConfiguration.CodingKeys;
}

unint64_t sub_1C0E0915C()
{
  unint64_t result = qword_1EA1A7AB0;
  if (!qword_1EA1A7AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7AB0);
  }
  return result;
}

unint64_t sub_1C0E091B4()
{
  unint64_t result = qword_1EA1A7AB8;
  if (!qword_1EA1A7AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7AB8);
  }
  return result;
}

unint64_t sub_1C0E0920C()
{
  unint64_t result = qword_1EA1A7AC0;
  if (!qword_1EA1A7AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7AC0);
  }
  return result;
}

uint64_t sub_1C0E09260(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E656E6F707865 && a2 == 0xE800000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E6964646170 && a2 == 0xE700000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F697270 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

char *initializeBufferWithCopyOfBuffer for FormatAction(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)a1 = *a2;
    a1 = &v9[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(void *)a1 = *a2;
        uint64_t v7 = (id *)(a2 + 1);
        unsigned int v8 = *((unsigned __int8 *)a2 + 16);
        swift_bridgeObjectRetain();
        if (v8 <= 0xFD)
        {
          id v39 = *v7;
          sub_1BFF43A68(*v7, v8);
          *((void *)a1 + 1) = v39;
          a1[16] = v8;
        }
        else
        {
          *((void *)a1 + 1) = *v7;
          a1[16] = *((unsigned char *)a2 + 16);
        }
        goto LABEL_16;
      case 1u:
        uint64_t v11 = *a2;
        uint64_t v12 = (uint64_t)a2[1];
        uint64_t v13 = (uint64_t)a2[2];
        uint64_t v14 = (uint64_t)a2[3];
        uint64_t v15 = (uint64_t)a2[4];
        char v16 = *((unsigned char *)a2 + 41);
        unsigned __int8 v17 = *((unsigned char *)a2 + 40);
        sub_1BFF43AA4(*a2, v12, v13, v14, v15, v17, v16);
        *(void *)a1 = v11;
        *((void *)a1 + 1) = v12;
        *((void *)a1 + 2) = v13;
        *((void *)a1 + 3) = v14;
        *((void *)a1 + 4) = v15;
        a1[40] = v17;
        a1[41] = v16;
        unint64_t v18 = a2[7];
        *((void *)a1 + 6) = a2[6];
        unsigned __int8 v19 = *((unsigned char *)a2 + 64);
        swift_bridgeObjectRetain();
        sub_1BFF43A68(v18, v19);
        *((void *)a1 + 7) = v18;
        a1[64] = v19;
        swift_storeEnumTagMultiPayload();
        return a1;
      case 2u:
        *(void *)a1 = *a2;
        swift_retain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 4u:
        long long v20 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v20;
        long long v21 = a2[3];
        *((void *)a1 + 2) = a2[2];
        *((void *)a1 + 3) = v21;
        objc_super v22 = a2[5];
        *((void *)a1 + 4) = a2[4];
        *((void *)a1 + 5) = v22;
        uint64_t v23 = (uint64_t)a2[6];
        uint64_t v24 = (uint64_t)a2[7];
        uint64_t v25 = (uint64_t)a2[8];
        uint64_t v26 = (uint64_t)a2[9];
        char v56 = *((unsigned char *)a2 + 80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFF429DC(v23, v24, v25, v26, v56);
        *((void *)a1 + 6) = v23;
        *((void *)a1 + 7) = v24;
        *((void *)a1 + 8) = v25;
        *((void *)a1 + 9) = v26;
        a1[80] = v56;
        uint64_t v27 = a2[12];
        *((void *)a1 + 11) = a2[11];
        *((void *)a1 + 12) = v27;
        uint64_t v28 = a2[14];
        *((void *)a1 + 13) = a2[13];
        *((void *)a1 + 14) = v28;
        *((void *)a1 + 15) = a2[15];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 5u:
        uint64_t v29 = type metadata accessor for FormatPurchaseData(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v40 = type metadata accessor for FormatPurchaseLandingPageData();
          uint64_t v41 = *(void *)(v40 - 8);
          if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v41 + 48))(a2, 1, v40))
          {
            sub_1BFFEBB9C(0, &qword_1EB87BBB8, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
            memcpy(a1, a2, *(void *)(*(void *)(v42 - 8) + 64));
          }
          else
          {
            id v45 = a2[1];
            *(void *)a1 = *a2;
            *((void *)a1 + 1) = v45;
            uint64_t v46 = *(int *)(v40 + 20);
            __dst = &a1[v46];
            uint64_t v57 = v41;
            double v47 = (char *)a2 + v46;
            uint64_t v48 = type metadata accessor for FormatPostPurchaseData();
            uint64_t v49 = *(void *)(v48 - 8);
            uint64_t v50 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48);
            swift_bridgeObjectRetain();
            uint64_t v51 = v47;
            if (v50(v47, 1, v48))
            {
              sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
              memcpy(__dst, v47, *(void *)(*(void *)(v52 - 8) + 64));
            }
            else
            {
              uint64_t v53 = sub_1C1515FDC();
              uint64_t v54 = *(void *)(v53 - 8);
              if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v54 + 48))(v51, 2, v53))
              {
                memcpy(__dst, v51, *(void *)(v49 + 64));
              }
              else
              {
                (*(void (**)(char *, const void *, uint64_t))(v54 + 16))(__dst, v51, v53);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(__dst, 0, 2, v53);
              }
              (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(__dst, 0, 1, v48);
            }
            (*(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(a1, 0, 1, v40);
          }
        }
        else
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(a1, a2, *(void *)(*(void *)(v29 - 8) + 64));
            goto LABEL_16;
          }
          double v31 = a2[1];
          *(void *)a1 = *a2;
          *((void *)a1 + 1) = v31;
          uint64_t v32 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
          long long v33 = &a1[v32];
          CGAffineTransform v34 = (char *)a2 + v32;
          uint64_t v35 = type metadata accessor for FormatPostPurchaseData();
          uint64_t v36 = *(void *)(v35 - 8);
          CGRect v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
          swift_bridgeObjectRetain();
          if (v37(v34, 1, v35))
          {
            sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
            memcpy(v33, v34, *(void *)(*(void *)(v38 - 8) + 64));
          }
          else
          {
            uint64_t v43 = sub_1C1515FDC();
            uint64_t v44 = *(void *)(v43 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v34, 2, v43))
            {
              memcpy(v33, v34, *(void *)(v36 + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v33, v34, v43);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v33, 0, 2, v43);
            }
            (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
          }
        }
        swift_storeEnumTagMultiPayload();
LABEL_16:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        return a1;
    }
  }
  return a1;
}

void destroy for FormatAction(uint64_t a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      unsigned int v2 = *(unsigned __int8 *)(a1 + 16);
      if (v2 <= 0xFD)
      {
        int v3 = *(void **)(a1 + 8);
        goto LABEL_5;
      }
      break;
    case 1u:
      sub_1BFF4363C(*(void **)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned __int8 *)(a1 + 40), *(unsigned char *)(a1 + 41));
      swift_bridgeObjectRelease();
      int v3 = *(void **)(a1 + 56);
      LOBYTE(v2) = *(unsigned char *)(a1 + 64);
LABEL_5:
      sub_1BFF43600(v3, v2);
      break;
    case 2u:
      swift_release();
      break;
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFEC41E8(*(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(unsigned char *)(a1 + 80));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 5u:
      type metadata accessor for FormatPurchaseData(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v6 = type metadata accessor for FormatPurchaseLandingPageData();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(a1, 1, v6)) {
          return;
        }
        swift_bridgeObjectRelease();
        uint64_t v5 = *(int *)(v6 + 20);
      }
      else
      {
        if (EnumCaseMultiPayload) {
          return;
        }
        swift_bridgeObjectRelease();
        uint64_t v5 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      }
      uint64_t v7 = a1 + v5;
      uint64_t v8 = type metadata accessor for FormatPostPurchaseData();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
      {
        uint64_t v9 = sub_1C1515FDC();
        uint64_t v11 = *(void *)(v9 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v7, 2, v9))
        {
          uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
          v10(v7, v9);
        }
      }
      break;
    default:
      return;
  }
}

uint64_t *assignWithCopy for FormatAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C0D75474((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *a1 = *a2;
        uint64_t v6 = (id *)(a2 + 1);
        unsigned int v7 = *((unsigned __int8 *)a2 + 16);
        swift_bridgeObjectRetain();
        if (v7 <= 0xFD)
        {
          id v32 = *v6;
          sub_1BFF43A68(*v6, v7);
          a1[1] = (uint64_t)v32;
          *((unsigned char *)a1 + 16) = v7;
        }
        else
        {
          id v8 = *v6;
          *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
          a1[1] = (uint64_t)v8;
        }
        goto LABEL_31;
      case 1u:
        uint64_t v9 = *a2;
        uint64_t v10 = a2[1];
        uint64_t v11 = a2[2];
        uint64_t v12 = a2[3];
        uint64_t v13 = a2[4];
        char v14 = *((unsigned char *)a2 + 41);
        unsigned __int8 v15 = *((unsigned char *)a2 + 40);
        sub_1BFF43AA4((id)*a2, v10, v11, v12, v13, v15, v14);
        *a1 = v9;
        a1[1] = v10;
        a1[2] = v11;
        a1[3] = v12;
        a1[4] = v13;
        *((unsigned char *)a1 + 40) = v15;
        *((unsigned char *)a1 + 41) = v14;
        a1[6] = a2[6];
        char v16 = (void *)a2[7];
        unsigned __int8 v17 = *((unsigned char *)a2 + 64);
        swift_bridgeObjectRetain();
        sub_1BFF43A68(v16, v17);
        a1[7] = (uint64_t)v16;
        *((unsigned char *)a1 + 64) = v17;
        goto LABEL_31;
      case 2u:
        *a1 = *a2;
        swift_retain();
        goto LABEL_31;
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        uint64_t v18 = a2[6];
        uint64_t v19 = a2[7];
        uint64_t v20 = a2[8];
        uint64_t v21 = a2[9];
        char v22 = *((unsigned char *)a2 + 80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFF429DC(v18, v19, v20, v21, v22);
        a1[6] = v18;
        a1[7] = v19;
        a1[8] = v20;
        a1[9] = v21;
        *((unsigned char *)a1 + 80) = v22;
        a1[11] = a2[11];
        a1[12] = a2[12];
        a1[13] = a2[13];
        a1[14] = a2[14];
        a1[15] = a2[15];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_31;
      case 5u:
        uint64_t v23 = type metadata accessor for FormatPurchaseData(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v33 = type metadata accessor for FormatPurchaseLandingPageData();
          uint64_t v34 = *(void *)(v33 - 8);
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v34 + 48))(a2, 1, v33))
          {
            sub_1BFFEBB9C(0, &qword_1EB87BBB8, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
            memcpy(a1, a2, *(void *)(*(void *)(v35 - 8) + 64));
          }
          else
          {
            *a1 = *a2;
            a1[1] = a2[1];
            uint64_t v38 = *(int *)(v33 + 20);
            __dst = (char *)a1 + v38;
            id v39 = (char *)a2 + v38;
            uint64_t v40 = type metadata accessor for FormatPostPurchaseData();
            uint64_t v41 = *(void *)(v40 - 8);
            uint64_t v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
            swift_bridgeObjectRetain();
            if (v42(v39, 1, v40))
            {
              sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
              memcpy(__dst, v39, *(void *)(*(void *)(v43 - 8) + 64));
            }
            else
            {
              uint64_t v44 = sub_1C1515FDC();
              uint64_t v45 = *(void *)(v44 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v39, 2, v44))
              {
                memcpy(__dst, v39, *(void *)(v41 + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v45 + 16))(__dst, v39, v44);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(__dst, 0, 2, v44);
              }
              (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(__dst, 0, 1, v40);
            }
            (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v34 + 56))(a1, 0, 1, v33);
          }
        }
        else
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(a1, a2, *(void *)(*(void *)(v23 - 8) + 64));
            goto LABEL_31;
          }
          *a1 = *a2;
          a1[1] = a2[1];
          uint64_t v25 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
          uint64_t v26 = (char *)a1 + v25;
          uint64_t v27 = (char *)a2 + v25;
          uint64_t v28 = type metadata accessor for FormatPostPurchaseData();
          uint64_t v29 = *(void *)(v28 - 8);
          double v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
          swift_bridgeObjectRetain();
          if (v30(v27, 1, v28))
          {
            sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
            memcpy(v26, v27, *(void *)(*(void *)(v31 - 8) + 64));
          }
          else
          {
            uint64_t v36 = sub_1C1515FDC();
            uint64_t v37 = *(void *)(v36 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v27, 2, v36))
            {
              memcpy(v26, v27, *(void *)(v29 + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v26, v27, v36);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v26, 0, 2, v36);
            }
            (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
          }
        }
        swift_storeEnumTagMultiPayload();
LABEL_31:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

_OWORD *initializeWithTake for FormatAction(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 5)
  {
    uint64_t v6 = type metadata accessor for FormatPurchaseData(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v14 = type metadata accessor for FormatPurchaseLandingPageData();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(a2, 1, v14))
      {
        sub_1BFFEBB9C(0, &qword_1EB87BBB8, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
        memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        uint64_t v19 = *(int *)(v14 + 20);
        uint64_t v20 = (char *)a1 + v19;
        uint64_t v21 = (char *)a2 + v19;
        uint64_t v22 = type metadata accessor for FormatPostPurchaseData();
        uint64_t v23 = *(void *)(v22 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
        {
          sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
          uint64_t v25 = sub_1C1515FDC();
          uint64_t v27 = *(void *)(v25 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v21, 2, v25))
          {
            memcpy(v20, v21, *(void *)(v23 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v20, v21, v25);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v20, 0, 2, v25);
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
        }
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_23:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      *a1 = *a2;
      uint64_t v8 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = type metadata accessor for FormatPostPurchaseData();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        uint64_t v17 = sub_1C1515FDC();
        uint64_t v18 = *(void *)(v17 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v10, 2, v17))
        {
          memcpy(v9, v10, *(void *)(v12 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v9, v10, v17);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v9, 0, 2, v17);
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_23;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

_OWORD *assignWithTake for FormatAction(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C0D75474((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      uint64_t v6 = type metadata accessor for FormatPurchaseData(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v14 = type metadata accessor for FormatPurchaseLandingPageData();
        uint64_t v15 = *(void *)(v14 - 8);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(a2, 1, v14))
        {
          sub_1BFFEBB9C(0, &qword_1EB87BBB8, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
          memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          uint64_t v19 = *(int *)(v14 + 20);
          uint64_t v20 = (char *)a1 + v19;
          uint64_t v21 = (char *)a2 + v19;
          uint64_t v22 = type metadata accessor for FormatPostPurchaseData();
          uint64_t v23 = *(void *)(v22 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
          {
            sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
            memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
          }
          else
          {
            uint64_t v25 = sub_1C1515FDC();
            uint64_t v27 = *(void *)(v25 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v21, 2, v25))
            {
              memcpy(v20, v21, *(void *)(v23 + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v20, v21, v25);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v20, 0, 2, v25);
            }
            (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
          }
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
        }
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_24:
          swift_storeEnumTagMultiPayload();
          return a1;
        }
        *a1 = *a2;
        uint64_t v8 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
        uint64_t v9 = (char *)a1 + v8;
        uint64_t v10 = (char *)a2 + v8;
        uint64_t v11 = type metadata accessor for FormatPostPurchaseData();
        uint64_t v12 = *(void *)(v11 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        {
          sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
        }
        else
        {
          uint64_t v17 = sub_1C1515FDC();
          uint64_t v18 = *(void *)(v17 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v10, 2, v17))
          {
            memcpy(v9, v10, *(void *)(v12 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v9, v10, v17);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v9, 0, 2, v17);
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
        }
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_24;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t FormatStateViewNodeState.children.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatStateViewNodeState.state.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatStateViewNodeState.children.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = a1;
  return result;
}

uint64_t (*FormatStateViewNodeState.children.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1C0E0B034(void *a1)
{
  return FormatStateViewNodeState.encode(to:)(a1);
}

uint64_t FormatStateViewNodeState.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v26 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  unsigned int v7 = (char *)&v24 - v6;
  sub_1C08E597C();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v1[3];
  uint64_t v27 = v1[2];
  uint64_t v25 = v1[4];
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  unint64_t v14 = sub_1BFCAB46C();
  sub_1BFEFBD78((uint64_t)&type metadata for FormatStateViewNodeState, v15, v12, (uint64_t)&type metadata for FormatStateViewNodeState, (uint64_t)&type metadata for FormatStateViewNodeState.CodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonG, v13, (uint64_t)v10, v14, (uint64_t)&off_1F1C39AE8);
  uint64_t v16 = qword_1EB887640;
  swift_bridgeObjectRetain();
  if (v16 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_1C151928C();
  uint64_t v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1EB93CAC8);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16);
  v19(v7, v18, v17);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = v28;
  sub_1C06C7F20(v27, v11, 0, (uint64_t)v7, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEC88((uint64_t)v7, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v20)
  {
    uint64_t v21 = (uint64_t)v26;
    v19(v26, v18, v17);
    swift_storeEnumTagMultiPayload();
    uint64_t v22 = v25;
    swift_bridgeObjectRetain();
    if (sub_1C0845DB8(v21, 1, (uint64_t)sub_1C01B158C, 0))
    {
      char v30 = 1;
      uint64_t v29 = v22;
      sub_1BFCAB408(0, &qword_1EB85C610, MEMORY[0x1E4FBBDE0]);
      sub_1C08E5A18();
      sub_1C0E0B794();
      sub_1BFE407E0();
      sub_1C1520BAC();
    }
    sub_1BFEFEC88(v21, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  return sub_1BFEFEC88((uint64_t)v10, (uint64_t (*)(void))sub_1C08E597C);
}

uint64_t sub_1C0E0B3E0(char *a1, char *a2)
{
  return sub_1C14952A8(*a1, *a2);
}

uint64_t sub_1C0E0B3EC()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0E0B46C()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0E0B4D8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0E0B554@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1C0E0B5B4(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6574617473;
  if (*v1) {
    uint64_t v2 = 0x6E6572646C696863;
  }
  unint64_t v3 = 0xE500000000000000;
  if (*v1) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C0E0B5F0@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1C0E0B654(uint64_t a1)
{
  unint64_t v2 = sub_1BFCAB46C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0E0B690(uint64_t a1)
{
  unint64_t v2 = sub_1BFCAB46C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t _s8NewsFeed019FormatStateViewNodeD0V2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  BOOL v8 = *a1 == *a2 && a1[1] == a2[1];
  if (!v8 && (sub_1C1520A9C() & 1) == 0) {
    return 0;
  }
  BOOL v9 = v2 == v5 && v4 == v6;
  if (!v9 && (sub_1C1520A9C() & 1) == 0) {
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v10 = sub_1C00E0E68(v3, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10 & 1;
}

void sub_1C0E0B794()
{
  if (!qword_1EB863300)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB863300);
    }
  }
}

unint64_t sub_1C0E0B7EC(void *a1)
{
  a1[1] = sub_1C008DDC0();
  a1[2] = sub_1C08EE568();
  unint64_t result = sub_1C0E0B824();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0E0B824()
{
  unint64_t result = qword_1EA1A7AC8;
  if (!qword_1EA1A7AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7AC8);
  }
  return result;
}

uint64_t sub_1C0E0B878@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0E0B884(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 32) = v3;
  return result;
}

ValueMetadata *type metadata accessor for FormatStateViewNodeState()
{
  return &type metadata for FormatStateViewNodeState;
}

unsigned char *storeEnumTagSinglePayload for FormatStateViewNodeState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0E0B9A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatStateViewNodeState.CodingKeys()
{
  return &type metadata for FormatStateViewNodeState.CodingKeys;
}

unint64_t sub_1C0E0B9E0()
{
  unint64_t result = qword_1EA1A7AD0;
  if (!qword_1EA1A7AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7AD0);
  }
  return result;
}

uint64_t static AssetManagerReference.identifier.getter()
{
  return 0x6E614D7465737361;
}

ValueMetadata *type metadata accessor for AssetManagerReference()
{
  return &type metadata for AssetManagerReference;
}

uint64_t sub_1C0E0BA64(uint64_t a1, uint64_t a2)
{
  uint64_t v39 = sub_1C151829C();
  uint64_t v5 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  uint64_t v38 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFCF7AA0(0, &qword_1EB863F10, (uint64_t (*)(uint64_t))sub_1C0064054, MEMORY[0x1E4FAB160]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v37 = (char *)v30 - v8;
  uint64_t v36 = sub_1C151808C();
  uint64_t v9 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = MEMORY[0x1E4FBC860];
  if (!v12) {
    return v13;
  }
  v30[0] = v2;
  uint64_t v43 = MEMORY[0x1E4FBC860];
  sub_1C0062EF4(0, v12, 0);
  uint64_t v13 = v43;
  uint64_t result = sub_1BFD44A04(a1);
  int64_t v15 = result;
  int v17 = v16;
  int v19 = v18 & 1;
  uint64_t v34 = a1;
  uint64_t v35 = a1 + 56;
  uint64_t v20 = *(void **)(a2 + 16);
  uint64_t v31 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  id v32 = v20;
  v30[1] = v9 + 32;
  uint64_t v33 = v9;
  while ((v15 & 0x8000000000000000) == 0 && v15 < 1 << *(unsigned char *)(a1 + 32))
  {
    if (((*(void *)(v35 + (((unint64_t)v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
      goto LABEL_15;
    }
    if (*(_DWORD *)(a1 + 36) != v17) {
      goto LABEL_16;
    }
    int v40 = v19;
    uint64_t v41 = v13;
    uint64_t v21 = v11;
    id v42 = v32;
    uint64_t v22 = qword_1EB863CC0;
    id v23 = v32;
    swift_bridgeObjectRetain();
    if (v22 != -1) {
      swift_once();
    }
    uint64_t v24 = v39;
    uint64_t v25 = __swift_project_value_buffer(v39, (uint64_t)qword_1EB863CA0);
    (*v31)(v38, v25, v24);
    sub_1C0064054();
    sub_1C151945C();

    uint64_t v11 = v21;
    sub_1C151807C();
    swift_bridgeObjectRelease();
    uint64_t v13 = v41;
    uint64_t v43 = v41;
    unint64_t v27 = *(void *)(v41 + 16);
    unint64_t v26 = *(void *)(v41 + 24);
    if (v27 >= v26 >> 1)
    {
      sub_1C0062EF4(v26 > 1, v27 + 1, 1);
      uint64_t v13 = v43;
    }
    *(void *)(v13 + 16) = v27 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v33 + 32))(v13+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(void *)(v33 + 72) * v27, v11, v36);
    a1 = v34;
    uint64_t result = sub_1BFD43BF8(v15, v17, v40 & 1, v34);
    int64_t v15 = result;
    int v17 = v28;
    int v19 = v29 & 1;
    if (!--v12)
    {
      sub_1C0153754(result, v28, v19);
      return v13;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t FeedCatalogItem.identifier.getter()
{
  sub_1C024A070(v0, (uint64_t)&v15);
  if (v24)
  {
    if (v24 != 1)
    {
      long long v10 = v21;
      *(_OWORD *)uint64_t v11 = *(_OWORD *)v22;
      *(_OWORD *)&unsigned char v11[16] = *(_OWORD *)&v22[16];
      char v12 = v23[0];
      long long v6 = v17;
      long long v7 = v18;
      long long v8 = v19;
      long long v9 = v20;
      long long v4 = v15;
      long long v5 = v16;
      uint64_t v1 = v15;
      swift_bridgeObjectRetain();
      sub_1BFEA4290((uint64_t)&v4);
      return v1;
    }
    v13[6] = v21;
    v14[0] = *(_OWORD *)v22;
    *(_OWORD *)((char *)v14 + 9) = *(_OWORD *)&v22[9];
    v13[2] = v17;
    v13[3] = v18;
    v13[4] = v19;
    v13[5] = v20;
    v13[0] = v15;
    v13[1] = v16;
    sub_1C0181C7C((uint64_t)v23, (uint64_t)&v4);
    sub_1C01B3B54((uint64_t)&v4);
    uint64_t v1 = *((void *)&v13[0] + 1);
    swift_bridgeObjectRetain();
    uint64_t v2 = v13;
  }
  else
  {
    long long v4 = v15;
    long long v5 = v16;
    long long v10 = v21;
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v22;
    *(_OWORD *)&v11[9] = *(_OWORD *)&v22[9];
    long long v6 = v17;
    long long v7 = v18;
    long long v8 = v19;
    long long v9 = v20;
    uint64_t v1 = *((void *)&v15 + 1);
    swift_bridgeObjectRetain();
    uint64_t v2 = &v4;
  }
  sub_1C01880A4((uint64_t)v2);
  return v1;
}

void FeedCatalogItem.traits.getter(void *a1@<X8>)
{
  *a1 = qword_1F1B64918;
}

uint64_t FeedCatalogItem.layoutDirection.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1C024A070(v1, (uint64_t)&v24);
  if (!v33)
  {
    long long v14 = v30;
    *(_OWORD *)long long v15 = *(_OWORD *)v31;
    *(_OWORD *)&v15[9] = *(_OWORD *)&v31[9];
    long long v10 = v26;
    long long v11 = v27;
    long long v12 = v28;
    long long v13 = v29;
    long long v8 = v24;
    long long v9 = v25;
    uint64_t result = sub_1C01880A4((uint64_t)&v8);
    uint64_t v4 = v10;
    char v5 = BYTE8(v10);
    goto LABEL_5;
  }
  if (v33 == 1)
  {
    long long v22 = v30;
    v23[0] = *(_OWORD *)v31;
    *(_OWORD *)((char *)v23 + 9) = *(_OWORD *)&v31[9];
    long long v18 = v26;
    long long v19 = v27;
    long long v20 = v28;
    long long v21 = v29;
    v17[0] = v24;
    v17[1] = v25;
    sub_1C0181C7C((uint64_t)v32, (uint64_t)&v8);
    sub_1C01B3B54((uint64_t)&v8);
    uint64_t result = sub_1C01880A4((uint64_t)v17);
    uint64_t v4 = v18;
    char v5 = BYTE8(v18);
LABEL_5:
    *(void *)a1 = v4;
    *(unsigned char *)(a1 + 8) = v5;
    return result;
  }
  long long v14 = v30;
  *(_OWORD *)long long v15 = *(_OWORD *)v31;
  *(_OWORD *)&v15[16] = *(_OWORD *)&v31[16];
  char v16 = v32[0];
  long long v10 = v26;
  long long v11 = v27;
  long long v12 = v28;
  long long v13 = v29;
  long long v8 = v24;
  long long v9 = v25;
  uint64_t v6 = v26;
  char v7 = BYTE8(v26);
  uint64_t result = sub_1BFEA4290((uint64_t)&v8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  return result;
}

uint64_t FeedCatalogItem.debugIdentifier.getter()
{
  sub_1C024A070(v0, (uint64_t)&v20);
  if (v29)
  {
    if (v29 != 1)
    {
      LOBYTE(v17) = v28[0];
      id v7 = objc_msgSend((id)v21, sel_identifier, v20, v21, v22, v23, v24, v25, v26, *(_OWORD *)v27, *(_OWORD *)&v27[16], v17);
      uint64_t v3 = sub_1C151E62C();

      sub_1BFEA4290((uint64_t)&v9);
      return v3;
    }
    v18[6] = v26;
    v19[0] = *(_OWORD *)v27;
    *(_OWORD *)((char *)v19 + 9) = *(_OWORD *)&v27[9];
    long long v18[2] = v22;
    v18[3] = v23;
    v18[4] = v24;
    v18[5] = v25;
    v18[0] = v20;
    v18[1] = v21;
    sub_1C0181C7C((uint64_t)v28, (uint64_t)&v9);
    sub_1C01B3B54((uint64_t)&v9);
    uint64_t v1 = *(void **)&v18[0];
    sub_1C0187FB0((uint64_t)v18);
    id v2 = objc_msgSend(v1, sel_identifier);
    uint64_t v3 = sub_1C151E62C();

    sub_1C01880A4((uint64_t)v18);
    uint64_t v4 = v18;
  }
  else
  {
    long long v15 = v26;
    *(_OWORD *)char v16 = *(_OWORD *)v27;
    *(_OWORD *)&v16[9] = *(_OWORD *)&v27[9];
    long long v9 = v20;
    long long v10 = v21;
    long long v11 = v22;
    long long v12 = v23;
    long long v13 = v24;
    long long v14 = v25;
    char v5 = (void *)v20;
    sub_1C0187FB0((uint64_t)&v9);
    id v6 = objc_msgSend(v5, sel_identifier);
    uint64_t v3 = sub_1C151E62C();

    sub_1C01880A4((uint64_t)&v9);
    uint64_t v4 = &v9;
  }
  sub_1C01880A4((uint64_t)v4);
  return v3;
}

uint64_t FeedCatalogItem.debugSourceName.getter()
{
  sub_1C024A070(v0, (uint64_t)&v12);
  if (v21)
  {
    if (v21 != 1)
    {
      sub_1C024A288((uint64_t)&v12);
      return 0;
    }
    v8[6] = v18;
    v9[0] = v19[0];
    *(_OWORD *)((char *)v9 + 9) = *(_OWORD *)((char *)v19 + 9);
    _OWORD v8[2] = v14;
    v8[3] = v15;
    void v8[4] = v16;
    v8[5] = v17;
    v8[0] = v12;
    v8[1] = v13;
    sub_1C0181C7C((uint64_t)&v20, (uint64_t)v10);
    sub_1C01B3B54((uint64_t)v10);
    uint64_t v1 = *(void **)&v8[0];
    sub_1C0187FB0((uint64_t)v8);
    id v2 = objc_msgSend(objc_msgSend(v1, sel_sourceChannel), sel_name);
    swift_unknownObjectRelease();
    uint64_t v3 = sub_1C151E62C();

    sub_1C01880A4((uint64_t)v8);
    uint64_t v4 = v8;
  }
  else
  {
    v10[6] = v18;
    v11[0] = v19[0];
    *(_OWORD *)((char *)v11 + 9) = *(_OWORD *)((char *)v19 + 9);
    v10[0] = v12;
    v10[1] = v13;
    v10[2] = v14;
    v10[3] = v15;
    v10[4] = v16;
    v10[5] = v17;
    char v5 = (void *)v12;
    sub_1C0187FB0((uint64_t)v10);
    id v6 = objc_msgSend(objc_msgSend(v5, sel_sourceChannel), sel_name);
    swift_unknownObjectRelease();
    uint64_t v3 = sub_1C151E62C();

    sub_1C01880A4((uint64_t)v10);
    uint64_t v4 = v10;
  }
  sub_1C01880A4((uint64_t)v4);
  return v3;
}

uint64_t FeedCatalogItem.debugTitle.getter()
{
  sub_1C024A070(v0, (uint64_t)&v20);
  if (v29)
  {
    if (v29 != 1)
    {
      LOBYTE(v17) = v28[0];
      id v7 = objc_msgSend((id)v21, sel_name, v20, v21, v22, v23, v24, v25, v26, *(_OWORD *)v27, *(_OWORD *)&v27[16], v17);
      uint64_t v3 = sub_1C151E62C();

      sub_1BFEA4290((uint64_t)&v9);
      return v3;
    }
    v18[6] = v26;
    v19[0] = *(_OWORD *)v27;
    *(_OWORD *)((char *)v19 + 9) = *(_OWORD *)&v27[9];
    long long v18[2] = v22;
    v18[3] = v23;
    v18[4] = v24;
    v18[5] = v25;
    v18[0] = v20;
    v18[1] = v21;
    sub_1C0181C7C((uint64_t)v28, (uint64_t)&v9);
    sub_1C01B3B54((uint64_t)&v9);
    uint64_t v1 = *(void **)&v18[0];
    sub_1C0187FB0((uint64_t)v18);
    id v2 = objc_msgSend(v1, sel_coverDate);
    uint64_t v3 = sub_1C151E62C();

    sub_1C01880A4((uint64_t)v18);
    uint64_t v4 = v18;
  }
  else
  {
    long long v15 = v26;
    *(_OWORD *)long long v16 = *(_OWORD *)v27;
    *(_OWORD *)&v16[9] = *(_OWORD *)&v27[9];
    long long v9 = v20;
    long long v10 = v21;
    long long v11 = v22;
    long long v12 = v23;
    long long v13 = v24;
    long long v14 = v25;
    char v5 = (void *)v20;
    sub_1C0187FB0((uint64_t)&v9);
    id v6 = objc_msgSend(v5, sel_coverDate);
    uint64_t v3 = sub_1C151E62C();

    sub_1C01880A4((uint64_t)&v9);
    uint64_t v4 = &v9;
  }
  sub_1C01880A4((uint64_t)v4);
  return v3;
}

id FeedCatalogItem.debugAssetHandle.getter()
{
  sub_1C024A070(v0, (uint64_t)&v21);
  if (v30)
  {
    if (v30 != 1)
    {
      long long v10 = v27;
      *(_OWORD *)long long v11 = *(_OWORD *)v28;
      *(_OWORD *)&unsigned char v11[16] = *(_OWORD *)&v28[16];
      char v12 = v29[0];
      long long v6 = v23;
      long long v7 = v24;
      long long v8 = v25;
      long long v9 = v26;
      *(_OWORD *)uint64_t v4 = v21;
      long long v5 = v22;
      id v1 = FeedTag.debugAssetHandle.getter();
      sub_1BFEA4290((uint64_t)v4);
      return v1;
    }
    long long v19 = v27;
    v20[0] = *(_OWORD *)v28;
    *(_OWORD *)((char *)v20 + 9) = *(_OWORD *)&v28[9];
    long long v15 = v23;
    long long v16 = v24;
    long long v17 = v25;
    long long v18 = v26;
    *(_OWORD *)long long v13 = v21;
    long long v14 = v22;
    sub_1C0181C7C((uint64_t)v29, (uint64_t)v4);
    sub_1C01B3B54((uint64_t)v4);
    id v1 = objc_msgSend(v13[0], sel_coverImageAssetHandle);
    id v2 = v13;
  }
  else
  {
    v11[8] = v28[8];
    *(_OWORD *)&v11[9] = *(_OWORD *)&v28[9];
    id v1 = objc_msgSend((id)v21, sel_coverImageAssetHandle, v21, v22, v23, v24, v25, v26, v27, *(void *)v28, *(void *)&v11[8], (unint64_t)(*(_OWORD *)&v28[9] >> 56), *(void *)&v11[24]);
    id v2 = v4;
  }
  sub_1C01880A4((uint64_t)v2);
  return v1;
}

uint64_t FeedCatalogItem.debugScoreProfile.getter()
{
  sub_1C024A070(v0, (uint64_t)&v14);
  if (v23)
  {
    if (v23 != 1)
    {
      sub_1C024A288((uint64_t)&v14);
      return 0;
    }
    long long v10 = v20;
    v11[0] = v21[0];
    *(_OWORD *)((char *)v11 + 9) = *(_OWORD *)((char *)v21 + 9);
    _OWORD v6[2] = v16;
    long long v7 = v17;
    long long v8 = v18;
    long long v9 = v19;
    v6[0] = v14;
    v6[1] = v15;
    sub_1C0181C7C((uint64_t)&v22, (uint64_t)v12);
    sub_1C01B3B54((uint64_t)v12);
    uint64_t v1 = *((void *)&v7 + 1);
    id v2 = *((id *)&v7 + 1);
    uint64_t v3 = v6;
  }
  else
  {
    v12[6] = v20;
    v13[0] = v21[0];
    *(_OWORD *)((char *)v13 + 9) = *(_OWORD *)((char *)v21 + 9);
    _OWORD v12[2] = v16;
    v12[3] = v17;
    v12[4] = v18;
    v12[5] = v19;
    v12[0] = v14;
    v12[1] = v15;
    uint64_t v1 = *((void *)&v17 + 1);
    id v4 = *((id *)&v17 + 1);
    uint64_t v3 = v12;
  }
  sub_1C01880A4((uint64_t)v3);
  return v1;
}

double FeedCatalogItem.kind.getter@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = xmmword_1C158A200;
  return result;
}

void sub_1C0E0C854(void *a1@<X8>)
{
  *a1 = qword_1F1B64918;
}

unint64_t sub_1C0E0C880(uint64_t a1)
{
  unint64_t result = sub_1C0E0C8A8();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0E0C8A8()
{
  unint64_t result = qword_1EA1A7AD8;
  if (!qword_1EA1A7AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7AD8);
  }
  return result;
}

unint64_t destroy for FeedCatalogItem(uint64_t a1)
{
  unsigned int v2 = *(unsigned __int8 *)(a1 + 281);
  if (v2 >= 3) {
    unsigned int v2 = *(_DWORD *)a1 + 3;
  }
  if (v2 == 2)
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t result = *(void *)(a1 + 88);
    if (result != 1)
    {
      unint64_t result = swift_bridgeObjectRelease();
      if (*(void *)(a1 + 120))
      {
        return __swift_destroy_boxed_opaque_existential_1(a1 + 96);
      }
    }
  }
  else if (v2 == 1)
  {

    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 80) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    unint64_t result = *(void *)(a1 + 128);
    if (result >= 0x11) {
      unint64_t result = swift_bridgeObjectRelease();
    }
    id v4 = *(void **)(a1 + 144);
    if (v4)
    {

      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 224) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      unint64_t result = *(void *)(a1 + 272);
      if (result >= 0x11)
      {
LABEL_23:
        return swift_bridgeObjectRelease();
      }
    }
  }
  else
  {

    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 80) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    unint64_t result = *(void *)(a1 + 128);
    if (result >= 0x11) {
      goto LABEL_23;
    }
  }
  return result;
}

uint64_t initializeWithCopy for FeedCatalogItem(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a2 + 281);
  if (v4 >= 3) {
    unsigned int v4 = *(_DWORD *)a2 + 3;
  }
  if (v4 == 2)
  {
    uint64_t v12 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v12;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
    uint64_t v13 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v13;
    uint64_t v14 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = v14;
    uint64_t v15 = *(void *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v15 == 1)
    {
      long long v16 = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 128) = v16;
      *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
      long long v17 = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v17;
    }
    else
    {
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v15;
      uint64_t v31 = *(void *)(a2 + 120);
      swift_bridgeObjectRetain();
      if (v31)
      {
        uint64_t v32 = *(void *)(a2 + 128);
        *(void *)(a1 + 120) = v31;
        *(void *)(a1 + 128) = v32;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v31 - 8))(a1 + 96, a2 + 96, v31);
        *(void *)(a1 + 136) = *(void *)(a2 + 136);
      }
      else
      {
        long long v58 = *(_OWORD *)(a2 + 112);
        *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
        *(_OWORD *)(a1 + 112) = v58;
        *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      }
      *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
    }
    char v47 = 2;
  }
  else if (v4 == 1)
  {
    long long v5 = *(void **)a2;
    uint64_t v6 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
    long long v7 = *(void **)(a2 + 56);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v7;
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    uint64_t v8 = *(void *)(a2 + 80);
    id v9 = v5;
    swift_bridgeObjectRetain();
    id v10 = v7;
    if (v8 == 1)
    {
      long long v11 = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = v11;
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    }
    else
    {
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = v8;
      uint64_t v25 = *(void *)(a2 + 96);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = v25;
      long long v27 = *(void **)(a2 + 104);
      uint64_t v26 = *(void *)(a2 + 112);
      *(void *)(a1 + 104) = v27;
      *(void *)(a1 + 112) = v26;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v28 = v27;
    }
    char v29 = (void *)(a2 + 120);
    unint64_t v30 = *(void *)(a2 + 128);
    if (v30 >= 0x11)
    {
      *(void *)(a1 + 120) = *v29;
      *(void *)(a1 + 128) = v30;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(a1 + 120) = *(_OWORD *)v29;
    }
    uint64_t v39 = *(void **)(a2 + 144);
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    if (v39)
    {
      uint64_t v40 = *(void *)(a2 + 152);
      uint64_t v41 = *(void *)(a2 + 160);
      *(void *)(a1 + 144) = v39;
      *(void *)(a1 + 152) = v40;
      *(void *)(a1 + 160) = v41;
      *(_WORD *)(a1 + 168) = *(_WORD *)(a2 + 168);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
      id v42 = *(void **)(a2 + 200);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(void *)(a1 + 200) = v42;
      *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
      uint64_t v43 = *(void *)(a2 + 224);
      id v44 = v39;
      swift_bridgeObjectRetain();
      id v45 = v42;
      if (v43 == 1)
      {
        long long v46 = *(_OWORD *)(a2 + 232);
        *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
        *(_OWORD *)(a1 + 232) = v46;
        *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
      }
      else
      {
        *(void *)(a1 + 216) = *(void *)(a2 + 216);
        *(void *)(a1 + 224) = v43;
        uint64_t v52 = *(void *)(a2 + 240);
        *(void *)(a1 + 232) = *(void *)(a2 + 232);
        *(void *)(a1 + 240) = v52;
        uint64_t v54 = *(void **)(a2 + 248);
        uint64_t v53 = *(void *)(a2 + 256);
        *(void *)(a1 + 248) = v54;
        *(void *)(a1 + 256) = v53;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v55 = v54;
      }
      char v56 = (void *)(a2 + 264);
      unint64_t v57 = *(void *)(a2 + 272);
      if (v57 >= 0x11)
      {
        *(void *)(a1 + 264) = *v56;
        *(void *)(a1 + 272) = v57;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 264) = *(_OWORD *)v56;
      }
      *(unsigned char *)(a1 + 280) = *(unsigned char *)(a2 + 280);
      char v47 = 1;
    }
    else
    {
      long long v48 = *(_OWORD *)(a2 + 256);
      *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
      *(_OWORD *)(a1 + 256) = v48;
      *(_OWORD *)(a1 + 265) = *(_OWORD *)(a2 + 265);
      long long v49 = *(_OWORD *)(a2 + 192);
      *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
      *(_OWORD *)(a1 + 192) = v49;
      long long v50 = *(_OWORD *)(a2 + 224);
      *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
      *(_OWORD *)(a1 + 224) = v50;
      long long v51 = *(_OWORD *)(a2 + 160);
      char v47 = 1;
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 160) = v51;
    }
  }
  else
  {
    long long v18 = *(void **)a2;
    uint64_t v19 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v19;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
    long long v20 = *(void **)(a2 + 56);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v20;
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    uint64_t v21 = *(void *)(a2 + 80);
    id v22 = v18;
    swift_bridgeObjectRetain();
    id v23 = v20;
    if (v21 == 1)
    {
      long long v24 = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = v24;
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    }
    else
    {
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = v21;
      uint64_t v33 = *(void *)(a2 + 96);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = v33;
      uint64_t v35 = *(void **)(a2 + 104);
      uint64_t v34 = *(void *)(a2 + 112);
      *(void *)(a1 + 104) = v35;
      *(void *)(a1 + 112) = v34;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v36 = v35;
    }
    uint64_t v37 = (void *)(a2 + 120);
    unint64_t v38 = *(void *)(a2 + 128);
    if (v38 >= 0x11)
    {
      *(void *)(a1 + 120) = *v37;
      *(void *)(a1 + 128) = v38;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(a1 + 120) = *(_OWORD *)v37;
    }
    char v47 = 0;
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  }
  *(unsigned char *)(a1 + 281) = v47;
  return a1;
}

uint64_t assignWithCopy for FeedCatalogItem(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return a1;
  }
  unsigned int v4 = *(unsigned __int8 *)(a1 + 281);
  if (v4 >= 3) {
    unsigned int v4 = *(_DWORD *)a1 + 3;
  }
  if (v4 == 2)
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 88) != 1)
    {
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 120)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 96);
      }
    }
    goto LABEL_22;
  }
  if (v4 == 1)
  {

    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 80) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (*(void *)(a1 + 128) >= 0x11uLL) {
      swift_bridgeObjectRelease();
    }
    long long v5 = *(void **)(a1 + 144);
    if (!v5) {
      goto LABEL_22;
    }

    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 224) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (*(void *)(a1 + 272) < 0x11uLL) {
      goto LABEL_22;
    }
  }
  else
  {

    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 80) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (*(void *)(a1 + 128) < 0x11uLL) {
      goto LABEL_22;
    }
  }
  swift_bridgeObjectRelease();
LABEL_22:
  unsigned int v6 = *(unsigned __int8 *)(a2 + 281);
  if (v6 >= 3) {
    unsigned int v6 = *(_DWORD *)a2 + 3;
  }
  if (v6 == 2)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
    uint64_t v15 = *(void *)(a2 + 32);
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
    *(void *)(a1 + 32) = v15;
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    uint64_t v16 = *(void *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v16 == 1)
    {
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      long long v17 = *(_OWORD *)(a2 + 96);
      long long v18 = *(_OWORD *)(a2 + 112);
      long long v19 = *(_OWORD *)(a2 + 128);
      *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
      *(_OWORD *)(a1 + 112) = v18;
      *(_OWORD *)(a1 + 128) = v19;
      *(_OWORD *)(a1 + 96) = v17;
    }
    else
    {
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      uint64_t v30 = *(void *)(a2 + 120);
      swift_bridgeObjectRetain();
      if (v30)
      {
        *(void *)(a1 + 120) = v30;
        *(void *)(a1 + 128) = *(void *)(a2 + 128);
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v30 - 8))(a1 + 96, a2 + 96, v30);
        char v31 = *(unsigned char *)(a2 + 144);
        *(void *)(a1 + 136) = *(void *)(a2 + 136);
        *(unsigned char *)(a1 + 144) = v31;
      }
      else
      {
        long long v51 = *(_OWORD *)(a2 + 96);
        long long v52 = *(_OWORD *)(a2 + 112);
        long long v53 = *(_OWORD *)(a2 + 128);
        *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
        *(_OWORD *)(a1 + 112) = v52;
        *(_OWORD *)(a1 + 128) = v53;
        *(_OWORD *)(a1 + 96) = v51;
      }
    }
    char v42 = 2;
  }
  else if (v6 == 1)
  {
    long long v7 = *(void **)a2;
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
    *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
    uint64_t v8 = *(void *)(a2 + 32);
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
    *(void *)(a1 + 32) = v8;
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    id v9 = *(void **)(a2 + 56);
    *(void *)(a1 + 56) = v9;
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    uint64_t v10 = *(void *)(a2 + 80);
    id v11 = v7;
    swift_bridgeObjectRetain();
    id v12 = v9;
    if (v10 == 1)
    {
      long long v13 = *(_OWORD *)(a2 + 72);
      long long v14 = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = v14;
      *(_OWORD *)(a1 + 72) = v13;
    }
    else
    {
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      id v28 = *(void **)(a2 + 104);
      *(void *)(a1 + 104) = v28;
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v29 = v28;
    }
    if (*(void *)(a2 + 128) >= 0x11uLL)
    {
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    }
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    uint64_t v34 = *(void **)(a2 + 144);
    if (v34)
    {
      *(void *)(a1 + 144) = v34;
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
      *(unsigned char *)(a1 + 169) = *(unsigned char *)(a2 + 169);
      uint64_t v35 = *(void *)(a2 + 176);
      *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
      *(void *)(a1 + 176) = v35;
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      id v36 = *(void **)(a2 + 200);
      *(void *)(a1 + 200) = v36;
      *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
      uint64_t v37 = *(void *)(a2 + 224);
      id v38 = v34;
      swift_bridgeObjectRetain();
      id v39 = v36;
      if (v37 == 1)
      {
        long long v40 = *(_OWORD *)(a2 + 216);
        long long v41 = *(_OWORD *)(a2 + 248);
        *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
        *(_OWORD *)(a1 + 248) = v41;
        *(_OWORD *)(a1 + 216) = v40;
      }
      else
      {
        *(void *)(a1 + 216) = *(void *)(a2 + 216);
        *(void *)(a1 + 224) = *(void *)(a2 + 224);
        *(void *)(a1 + 232) = *(void *)(a2 + 232);
        *(void *)(a1 + 240) = *(void *)(a2 + 240);
        long long v49 = *(void **)(a2 + 248);
        *(void *)(a1 + 248) = v49;
        *(void *)(a1 + 256) = *(void *)(a2 + 256);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v50 = v49;
      }
      if (*(void *)(a2 + 272) >= 0x11uLL)
      {
        *(void *)(a1 + 264) = *(void *)(a2 + 264);
        *(void *)(a1 + 272) = *(void *)(a2 + 272);
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
      }
      *(unsigned char *)(a1 + 280) = *(unsigned char *)(a2 + 280);
      char v42 = 1;
    }
    else
    {
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      long long v43 = *(_OWORD *)(a2 + 160);
      long long v44 = *(_OWORD *)(a2 + 176);
      long long v45 = *(_OWORD *)(a2 + 208);
      *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
      *(_OWORD *)(a1 + 208) = v45;
      *(_OWORD *)(a1 + 160) = v43;
      *(_OWORD *)(a1 + 176) = v44;
      long long v46 = *(_OWORD *)(a2 + 224);
      long long v47 = *(_OWORD *)(a2 + 240);
      long long v48 = *(_OWORD *)(a2 + 256);
      *(_OWORD *)(a1 + 265) = *(_OWORD *)(a2 + 265);
      *(_OWORD *)(a1 + 240) = v47;
      *(_OWORD *)(a1 + 256) = v48;
      *(_OWORD *)(a1 + 224) = v46;
      char v42 = 1;
    }
  }
  else
  {
    long long v20 = *(void **)a2;
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
    *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
    uint64_t v21 = *(void *)(a2 + 32);
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
    *(void *)(a1 + 32) = v21;
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    id v22 = *(void **)(a2 + 56);
    *(void *)(a1 + 56) = v22;
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    uint64_t v23 = *(void *)(a2 + 80);
    id v24 = v20;
    swift_bridgeObjectRetain();
    id v25 = v22;
    if (v23 == 1)
    {
      long long v26 = *(_OWORD *)(a2 + 72);
      long long v27 = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = v27;
      *(_OWORD *)(a1 + 72) = v26;
    }
    else
    {
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      uint64_t v32 = *(void **)(a2 + 104);
      *(void *)(a1 + 104) = v32;
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    if (*(void *)(a2 + 128) >= 0x11uLL)
    {
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    }
    char v42 = 0;
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  }
  *(unsigned char *)(a1 + 281) = v42;
  return a1;
}

void *__swift_memcpy282_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x11AuLL);
}

uint64_t assignWithTake for FeedCatalogItem(uint64_t a1, _OWORD *a2)
{
  if ((_OWORD *)a1 == a2) {
    return a1;
  }
  unsigned int v4 = *(unsigned __int8 *)(a1 + 281);
  if (v4 >= 3) {
    unsigned int v4 = *(_DWORD *)a1 + 3;
  }
  if (v4 == 2)
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 88) != 1)
    {
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 120)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 96);
      }
    }
    goto LABEL_22;
  }
  if (v4 == 1)
  {

    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 80) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (*(void *)(a1 + 128) >= 0x11uLL) {
      swift_bridgeObjectRelease();
    }
    long long v5 = *(void **)(a1 + 144);
    if (!v5) {
      goto LABEL_22;
    }

    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 224) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (*(void *)(a1 + 272) < 0x11uLL) {
      goto LABEL_22;
    }
  }
  else
  {

    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 80) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (*(void *)(a1 + 128) < 0x11uLL) {
      goto LABEL_22;
    }
  }
  swift_bridgeObjectRelease();
LABEL_22:
  unsigned int v6 = *((unsigned __int8 *)a2 + 281);
  if (v6 >= 3) {
    unsigned int v6 = *(_DWORD *)a2 + 3;
  }
  if (v6 == 2)
  {
    long long v8 = a2[7];
    *(_OWORD *)(a1 + 96) = a2[6];
    *(_OWORD *)(a1 + 112) = v8;
    *(_OWORD *)(a1 + 128) = a2[8];
    *(unsigned char *)(a1 + 144) = *((unsigned char *)a2 + 144);
    long long v9 = a2[3];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v9;
    long long v10 = a2[5];
    *(_OWORD *)(a1 + 64) = a2[4];
    *(_OWORD *)(a1 + 80) = v10;
    long long v11 = a2[1];
    char v7 = 2;
    *(_OWORD *)a1 = *a2;
    *(_OWORD *)(a1 + 16) = v11;
  }
  else if (v6 == 1)
  {
    memcpy((void *)a1, a2, 0x119uLL);
    char v7 = 1;
  }
  else
  {
    char v7 = 0;
    long long v12 = a2[7];
    *(_OWORD *)(a1 + 96) = a2[6];
    *(_OWORD *)(a1 + 112) = v12;
    *(_OWORD *)(a1 + 121) = *(_OWORD *)((char *)a2 + 121);
    long long v13 = a2[3];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v13;
    long long v14 = a2[5];
    *(_OWORD *)(a1 + 64) = a2[4];
    *(_OWORD *)(a1 + 80) = v14;
    long long v15 = a2[1];
    *(_OWORD *)a1 = *a2;
    *(_OWORD *)(a1 + 16) = v15;
  }
  *(unsigned char *)(a1 + 281) = v7;
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedCatalogItem(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 282)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 281);
  if (v3 >= 3) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FeedCatalogItem(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 240) = 0u;
    *(_OWORD *)(result + 256) = 0u;
    *(_OWORD *)(result + 208) = 0u;
    *(_OWORD *)(result + 224) = 0u;
    *(_OWORD *)(result + 176) = 0u;
    *(_OWORD *)(result + 192) = 0u;
    *(_OWORD *)(result + 144) = 0u;
    *(_OWORD *)(result + 160) = 0u;
    *(_OWORD *)(result + 112) = 0u;
    *(_OWORD *)(result + 128) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 266) = 0u;
    *(_DWORD *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 282) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 282) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 281) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C0E0D7C8(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 281);
  if (result >= 3) {
    return (*(_DWORD *)a1 + 3);
  }
  return result;
}

uint64_t sub_1C0E0D7E4(uint64_t result, unsigned int a2)
{
  if (a2 > 2)
  {
    *(_OWORD *)(result + 240) = 0u;
    *(_OWORD *)(result + 256) = 0u;
    unsigned int v2 = a2 - 3;
    *(_OWORD *)(result + 208) = 0u;
    *(_OWORD *)(result + 224) = 0u;
    *(_OWORD *)(result + 176) = 0u;
    *(_OWORD *)(result + 192) = 0u;
    *(_OWORD *)(result + 144) = 0u;
    *(_OWORD *)(result + 160) = 0u;
    *(_OWORD *)(result + 112) = 0u;
    *(_OWORD *)(result + 128) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 265) = 0u;
    LOBYTE(a2) = 3;
    *(_DWORD *)uint64_t result = v2;
  }
  *(unsigned char *)(result + 281) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FeedCatalogItem()
{
  return &type metadata for FeedCatalogItem;
}

uint64_t destroy for DebugInspection()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for DebugInspection(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DebugInspection(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DebugInspection(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugInspection(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugInspection(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugInspection()
{
  return &type metadata for DebugInspection;
}

unint64_t sub_1C0E0DBE4(char a1)
{
  unint64_t result = 0x70756F7267;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x736D657469;
      break;
    case 2:
    case 4:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
      unint64_t result = 0xD000000000000018;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 7:
      unint64_t result = 0x6F636E4572657375;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0E0DCE4(void *a1)
{
  sub_1C0E0EA64(0, &qword_1EA1A7B10, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v19 - v6;
  long long v26 = *v1;
  uint64_t v9 = *((void *)v1 + 2);
  uint64_t v8 = *((void *)v1 + 3);
  uint64_t v10 = *((void *)v1 + 4);
  uint64_t v24 = *((void *)v1 + 5);
  uint64_t v25 = v10;
  uint64_t v11 = *((void *)v1 + 6);
  uint64_t v22 = *((void *)v1 + 7);
  uint64_t v23 = v11;
  uint64_t v12 = *((void *)v1 + 8);
  uint64_t v20 = *((void *)v1 + 9);
  uint64_t v21 = v12;
  uint64_t v13 = *((void *)v1 + 11);
  v19[0] = *((void *)v1 + 10);
  v19[1] = v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0E0E964();
  sub_1C1520F0C();
  long long v28 = v26;
  uint64_t v29 = v9;
  uint64_t v30 = v8;
  char v31 = 0;
  sub_1C0E0EAC8();
  uint64_t v14 = v27;
  sub_1C152080C();
  if (!v14)
  {
    uint64_t v16 = v23;
    uint64_t v15 = v24;
    uint64_t v17 = v22;
    *(void *)&long long v28 = v25;
    char v31 = 1;
    sub_1C0E0EA0C();
    sub_1C0E0EB1C(&qword_1EA1A7B20, (unint64_t *)&qword_1EA1A8D00);
    sub_1C152080C();
    *(void *)&long long v28 = v15;
    char v31 = 2;
    sub_1BFEBC4B4();
    sub_1BFE38978((unint64_t *)&qword_1EB85C4F0);
    sub_1C152080C();
    *(void *)&long long v28 = v16;
    char v31 = 3;
    sub_1C152080C();
    *(void *)&long long v28 = v17;
    char v31 = 4;
    sub_1C152080C();
    *(void *)&long long v28 = v21;
    char v31 = 5;
    sub_1C03F901C();
    sub_1C03F92BC(&qword_1EA19B2B8);
    sub_1C152080C();
    *(void *)&long long v28 = v20;
    char v31 = 6;
    sub_1C152080C();
    LOBYTE(v28) = 7;
    sub_1C152074C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C0E0E0B8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1C0E0EA64(0, &qword_1EA1A7AE0, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v27 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0E0E964();
  sub_1C1520EBC();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    char v41 = 0;
    sub_1C0E0E9B8();
    sub_1C15206EC();
    uint64_t v11 = v38;
    uint64_t v12 = v40;
    uint64_t v31 = v39;
    uint64_t v32 = v37;
    sub_1C0E0EA0C();
    char v41 = 1;
    sub_1C0E0EB1C(&qword_1EA1A7B00, &qword_1EA1A7B08);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C15206EC();
    uint64_t v36 = v12;
    uint64_t v27 = a2;
    uint64_t v29 = v11;
    uint64_t v13 = v37;
    sub_1BFEBC4B4();
    char v41 = 2;
    uint64_t v14 = sub_1BFE38978((unint64_t *)&qword_1EB87A020);
    swift_bridgeObjectRetain();
    uint64_t v28 = 0;
    sub_1C15206EC();
    uint64_t v30 = v13;
    char v41 = 3;
    uint64_t v35 = v37;
    swift_bridgeObjectRetain();
    sub_1C15206EC();
    char v41 = 4;
    uint64_t v34 = v37;
    swift_bridgeObjectRetain();
    sub_1C15206EC();
    uint64_t v33 = v14;
    uint64_t v15 = v37;
    sub_1C03F901C();
    char v41 = 5;
    sub_1C03F92BC((unint64_t *)&qword_1EA19B298);
    swift_bridgeObjectRetain();
    sub_1C15206EC();
    uint64_t v16 = v37;
    char v41 = 6;
    swift_bridgeObjectRetain();
    sub_1C15206EC();
    uint64_t v17 = v37;
    LOBYTE(v37) = 7;
    uint64_t v33 = v17;
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1C152060C();
    uint64_t v20 = v19;
    uint64_t v21 = *(void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v28 = v18;
    v21(v9, v6);
    swift_bridgeObjectRetain();
    uint64_t v22 = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v23 = v27;
    uint64_t v24 = v33;
    *uint64_t v27 = v32;
    v23[1] = v22;
    uint64_t v26 = v35;
    uint64_t v25 = v36;
    _OWORD v23[2] = v31;
    uint64_t v23[3] = v25;
    v23[4] = v30;
    v23[5] = v26;
    v23[6] = v34;
    v23[7] = v15;
    v23[8] = v16;
    v23[9] = v24;
    v23[10] = v28;
    v23[11] = v20;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1C0E0E88C()
{
  return sub_1C0E0DBE4(*v0);
}

uint64_t sub_1C0E0E894@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0E0EDE8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0E0E8BC(uint64_t a1)
{
  unint64_t v2 = sub_1C0E0E964();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0E0E8F8(uint64_t a1)
{
  unint64_t v2 = sub_1C0E0E964();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0E0E934@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1C0E0E0B8(a1, a2);
}

uint64_t sub_1C0E0E94C(void *a1)
{
  return sub_1C0E0DCE4(a1);
}

unint64_t sub_1C0E0E964()
{
  unint64_t result = qword_1EA1A7AE8;
  if (!qword_1EA1A7AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7AE8);
  }
  return result;
}

unint64_t sub_1C0E0E9B8()
{
  unint64_t result = qword_1EA1A7AF0;
  if (!qword_1EA1A7AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7AF0);
  }
  return result;
}

void sub_1C0E0EA0C()
{
  if (!qword_1EA1A7AF8)
  {
    type metadata accessor for DebugInspectionItem();
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A7AF8);
    }
  }
}

void sub_1C0E0EA64(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0E0E964();
    unint64_t v7 = a3(a1, &type metadata for DebugInspection.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C0E0EAC8()
{
  unint64_t result = qword_1EA1A7B18;
  if (!qword_1EA1A7B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7B18);
  }
  return result;
}

uint64_t sub_1C0E0EB1C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0E0EA0C();
    sub_1C0E0EB98(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0E0EB98(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for DebugInspectionItem();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DebugInspection.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0E0ECA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugInspection.CodingKeys()
{
  return &type metadata for DebugInspection.CodingKeys;
}

unint64_t sub_1C0E0ECE4()
{
  unint64_t result = qword_1EA1A7B28;
  if (!qword_1EA1A7B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7B28);
  }
  return result;
}

unint64_t sub_1C0E0ED3C()
{
  unint64_t result = qword_1EA1A7B30;
  if (!qword_1EA1A7B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7B30);
  }
  return result;
}

unint64_t sub_1C0E0ED94()
{
  unint64_t result = qword_1EA1A7B38;
  if (!qword_1EA1A7B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7B38);
  }
  return result;
}

uint64_t sub_1C0E0EDE8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x70756F7267 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736D657469 && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001C1614E40 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001C1614E60 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001C1614EA0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001C1629220 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001C1629240 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6F636E4572657375 && a2 == 0xEC000000676E6964)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_1C0E0F108(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    sub_1BFF661B8(0, v1, 0);
    uint64_t v2 = v11;
    unsigned int v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v6 = *(v4 - 1);
      uint64_t v5 = *v4;
      unint64_t v8 = *(void *)(v11 + 16);
      unint64_t v7 = *(void *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v7 >> 1) {
        sub_1BFF661B8(v7 > 1, v8 + 1, 1);
      }
      v4 += 3;
      *(void *)(v11 + 16) = v8 + 1;
      uint64_t v9 = v11 + 16 * v8;
      *(void *)(v9 + 32) = v6;
      *(void *)(v9 + 40) = v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t FormatContentSubgroup.Resolved.init(identifier:pluginIdentifier:layout:options:selectors:contents:sections:filters:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  a9[8] = a10;
  a9[9] = a11;
  return result;
}

uint64_t FormatContentSubgroup.Resolved.feedItemIdentifiers.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C10468B0(v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BFEE0654(v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = MEMORY[0x1E4FBC860];
  uint64_t v4 = *(void *)(v1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = v1 + 56;
    do
    {
      v5 += 64;
      uint64_t v6 = FormatContentSlot.Resolved.feedItemIdentifiers.getter();
      sub_1BFE72794(v6);
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease_n();
    uint64_t v7 = v10;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = MEMORY[0x1E4FBC860];
  }
  uint64_t v8 = sub_1BFEF4060(v7);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t FormatContentSubgroup.Resolved.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatContentSubgroup.Resolved.pluginIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatContentSubgroup.Resolved.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentSubgroup.Resolved.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentSubgroup.Resolved.contents.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentSubgroup.Resolved.sections.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentSubgroup.Resolved.filters.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentSubgroup.Resolved.headlines.getter()
{
  sub_1BFEC8548(0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v49 = (uint64_t)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for FormatWebEmbed.Resolved();
  MEMORY[0x1F4188790](v50);
  long long v51 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  uint64_t v47 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (id *)((char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v48 = v0[1];
  uint64_t v46 = v0[4];
  uint64_t v7 = v0[7];
  uint64_t v8 = v0[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1C10468B0(v8);
  swift_bridgeObjectRelease();
  uint64_t v53 = v7;
  swift_bridgeObjectRetain();
  sub_1BFEE0654(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = v53;
  unint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v53 = MEMORY[0x1E4FBC860];
  uint64_t v39 = *(void *)(v10 + 16);
  if (v39)
  {
    uint64_t v37 = v10;
    uint64_t v38 = v10 + 32;
    swift_bridgeObjectRetain();
    uint64_t v12 = 0;
    do
    {
      uint64_t v14 = (void *)(v38 + (v12 << 6));
      uint64_t v16 = v14[1];
      uint64_t v15 = v14[2];
      uint64_t v17 = v14[3];
      uint64_t v18 = v14[4];
      uint64_t v20 = v14[5];
      uint64_t v19 = v14[6];
      uint64_t v21 = v14[7];
      unint64_t v52 = v11;
      uint64_t v22 = *(void *)(v18 + 16);
      if (v22)
      {
        uint64_t v45 = v16;
        uint64_t v46 = v12;
        uint64_t v23 = v17;
        uint64_t v24 = v18 + ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80));
        uint64_t v25 = v19;
        uint64_t v48 = v21;
        uint64_t v26 = v15;
        swift_bridgeObjectRetain_n();
        uint64_t v43 = v26;
        swift_bridgeObjectRetain_n();
        uint64_t v42 = v23;
        swift_bridgeObjectRetain_n();
        uint64_t v44 = v18;
        swift_bridgeObjectRetain_n();
        uint64_t v41 = v20;
        swift_bridgeObjectRetain_n();
        uint64_t v40 = v25;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        uint64_t v27 = *(void *)(v47 + 72);
        uint64_t v28 = (uint64_t)v51;
        do
        {
          sub_1BFECBB50(v24, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
          uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          switch((int)EnumCaseMultiPayload)
          {
            case 1:

              break;
            case 2:
            case 4:
            case 5:
              swift_unknownObjectRelease();
              break;
            case 3:
              sub_1BFEADFE8((uint64_t)v6, v28, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
              uint64_t v32 = v49;
              sub_1BFECBB50(v28 + *(int *)(v50 + 36), v49, (uint64_t (*)(void))sub_1BFEC8548);
              sub_1BFEC84E0();
              uint64_t v34 = v33;
              uint64_t v35 = *(void *)(v33 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v32, 1, v33) == 1)
              {
                sub_1BFECF124(v32, (uint64_t (*)(void))sub_1BFEC8548);
                uint64_t v30 = type metadata accessor for FormatWebEmbed.Resolved;
                uint64_t v31 = v28;
                goto LABEL_14;
              }
              sub_1C151948C();
              (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v32, v34);
              uint64_t EnumCaseMultiPayload = sub_1BFECF124(v28, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
              goto LABEL_17;
            case 6:
            case 7:
              uint64_t v30 = type metadata accessor for FormatContentSlotItemObject.Resolved;
              uint64_t v31 = (uint64_t)v6;
LABEL_14:
              sub_1BFECF124(v31, (uint64_t (*)(void))v30);
              break;
            case 8:
              swift_bridgeObjectRelease();
              break;
            default:
LABEL_17:
              MEMORY[0x1C18C66D0](EnumCaseMultiPayload);
              if (*(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                sub_1C151EC8C();
              }
              sub_1C151ECEC();
              sub_1C151EBEC();
              uint64_t v28 = (uint64_t)v51;
              break;
          }
          v24 += v27;
          --v22;
        }
        while (v22);
        unint64_t v13 = v52;
        uint64_t v12 = v46;
      }
      else
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        unint64_t v13 = MEMORY[0x1E4FBC860];
      }
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      ++v12;
      sub_1BFE52C14(v13);
      unint64_t v11 = MEMORY[0x1E4FBC860];
    }
    while (v12 != v39);
    swift_bridgeObjectRelease_n();
    return v53;
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
}

uint64_t FormatContentSubgroup.Resolved.issues.getter()
{
  uint64_t v1 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  uint64_t v32 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = v0[1];
  uint64_t v31 = v0[3];
  uint64_t v5 = v0[7];
  uint64_t v4 = v0[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1C10468B0(v4);
  swift_bridgeObjectRelease();
  uint64_t v35 = v5;
  swift_bridgeObjectRetain();
  sub_1BFEE0654(v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = v35;
  unint64_t v8 = MEMORY[0x1E4FBC860];
  uint64_t v35 = MEMORY[0x1E4FBC860];
  uint64_t v25 = *(void *)(v7 + 16);
  if (v25)
  {
    uint64_t v23 = v7;
    uint64_t v24 = v7 + 32;
    swift_bridgeObjectRetain();
    uint64_t v9 = 0;
    do
    {
      unint64_t v11 = (void *)(v24 + (v9 << 6));
      uint64_t v12 = v11[1];
      uint64_t v13 = v11[2];
      uint64_t v15 = v11[3];
      uint64_t v14 = v11[4];
      uint64_t v16 = v11[5];
      uint64_t v17 = v11[6];
      uint64_t v33 = v11[7];
      unint64_t v34 = v8;
      uint64_t v18 = *(void *)(v14 + 16);
      if (v18)
      {
        uint64_t v19 = v14;
        uint64_t v20 = v14 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80));
        uint64_t v31 = v12;
        swift_bridgeObjectRetain();
        uint64_t v30 = v13;
        swift_bridgeObjectRetain();
        uint64_t v29 = v15;
        swift_bridgeObjectRetain();
        uint64_t v26 = v19;
        swift_bridgeObjectRetain_n();
        uint64_t v28 = v16;
        swift_bridgeObjectRetain();
        uint64_t v27 = v17;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v21 = *(void *)(v32 + 72);
        do
        {
          sub_1BFECBB50(v20, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            MEMORY[0x1C18C66D0]();
            if (*(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1C151EC8C();
            }
            sub_1C151ECEC();
            sub_1C151EBEC();
          }
          else
          {
            sub_1BFECF124((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
          }
          v20 += v21;
          --v18;
        }
        while (v18);
        unint64_t v10 = v34;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v10 = MEMORY[0x1E4FBC860];
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      ++v9;
      sub_1C1047AD0(v10);
      unint64_t v8 = MEMORY[0x1E4FBC860];
    }
    while (v9 != v25);
    swift_bridgeObjectRelease_n();
    return v35;
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
}

uint64_t FormatContentSubgroup.Resolved.tags.getter()
{
  uint64_t v1 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  uint64_t v32 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = v0[1];
  uint64_t v31 = v0[3];
  uint64_t v5 = v0[7];
  uint64_t v4 = v0[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1C10468B0(v4);
  swift_bridgeObjectRelease();
  uint64_t v35 = v5;
  swift_bridgeObjectRetain();
  sub_1BFEE0654(v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = v35;
  unint64_t v8 = MEMORY[0x1E4FBC860];
  uint64_t v35 = MEMORY[0x1E4FBC860];
  uint64_t v25 = *(void *)(v7 + 16);
  if (v25)
  {
    uint64_t v23 = v7;
    uint64_t v24 = v7 + 32;
    swift_bridgeObjectRetain();
    uint64_t v9 = 0;
    do
    {
      unint64_t v11 = (void *)(v24 + (v9 << 6));
      uint64_t v12 = v11[1];
      uint64_t v13 = v11[2];
      uint64_t v15 = v11[3];
      uint64_t v14 = v11[4];
      uint64_t v16 = v11[5];
      uint64_t v17 = v11[6];
      uint64_t v33 = v11[7];
      unint64_t v34 = v8;
      uint64_t v18 = *(void *)(v14 + 16);
      if (v18)
      {
        uint64_t v19 = v14;
        uint64_t v20 = v14 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80));
        uint64_t v31 = v12;
        swift_bridgeObjectRetain();
        uint64_t v30 = v13;
        swift_bridgeObjectRetain();
        uint64_t v29 = v15;
        swift_bridgeObjectRetain();
        uint64_t v26 = v19;
        swift_bridgeObjectRetain_n();
        uint64_t v28 = v16;
        swift_bridgeObjectRetain();
        uint64_t v27 = v17;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v21 = *(void *)(v32 + 72);
        do
        {
          sub_1BFECBB50(v20, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
          if (swift_getEnumCaseMultiPayload() == 2)
          {
            MEMORY[0x1C18C66D0]();
            if (*(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1C151EC8C();
            }
            sub_1C151ECEC();
            sub_1C151EBEC();
          }
          else
          {
            sub_1BFECF124((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
          }
          v20 += v21;
          --v18;
        }
        while (v18);
        unint64_t v10 = v34;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v10 = MEMORY[0x1E4FBC860];
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      ++v9;
      sub_1C1047AE8(v10);
      unint64_t v8 = MEMORY[0x1E4FBC860];
    }
    while (v9 != v25);
    swift_bridgeObjectRelease_n();
    return v35;
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
}

uint64_t FormatContentSubgroup.Resolved.webEmbeds.getter()
{
  return sub_1C0E10FEC(sub_1C1046A68);
}

uint64_t FormatContentSubgroup.Resolved.puzzles.getter()
{
  uint64_t v1 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  uint64_t v32 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = v0[1];
  uint64_t v31 = v0[3];
  uint64_t v5 = v0[7];
  uint64_t v4 = v0[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1C10468B0(v4);
  swift_bridgeObjectRelease();
  uint64_t v35 = v5;
  swift_bridgeObjectRetain();
  sub_1BFEE0654(v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = v35;
  unint64_t v8 = MEMORY[0x1E4FBC860];
  uint64_t v35 = MEMORY[0x1E4FBC860];
  uint64_t v25 = *(void *)(v7 + 16);
  if (v25)
  {
    uint64_t v23 = v7;
    uint64_t v24 = v7 + 32;
    swift_bridgeObjectRetain();
    uint64_t v9 = 0;
    do
    {
      unint64_t v11 = (void *)(v24 + (v9 << 6));
      uint64_t v12 = v11[1];
      uint64_t v13 = v11[2];
      uint64_t v15 = v11[3];
      uint64_t v14 = v11[4];
      uint64_t v16 = v11[5];
      uint64_t v17 = v11[6];
      uint64_t v33 = v11[7];
      unint64_t v34 = v8;
      uint64_t v18 = *(void *)(v14 + 16);
      if (v18)
      {
        uint64_t v19 = v14;
        uint64_t v20 = v14 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80));
        uint64_t v31 = v12;
        swift_bridgeObjectRetain();
        uint64_t v30 = v13;
        swift_bridgeObjectRetain();
        uint64_t v29 = v15;
        swift_bridgeObjectRetain();
        uint64_t v26 = v19;
        swift_bridgeObjectRetain_n();
        uint64_t v28 = v16;
        swift_bridgeObjectRetain();
        uint64_t v27 = v17;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v21 = *(void *)(v32 + 72);
        do
        {
          sub_1BFECBB50(v20, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
          if (swift_getEnumCaseMultiPayload() == 4)
          {
            MEMORY[0x1C18C66D0]();
            if (*(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1C151EC8C();
            }
            sub_1C151ECEC();
            sub_1C151EBEC();
          }
          else
          {
            sub_1BFECF124((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
          }
          v20 += v21;
          --v18;
        }
        while (v18);
        unint64_t v10 = v34;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v10 = MEMORY[0x1E4FBC860];
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      ++v9;
      sub_1BFC528B0(v10);
      unint64_t v8 = MEMORY[0x1E4FBC860];
    }
    while (v9 != v25);
    swift_bridgeObjectRelease_n();
    return v35;
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
}

uint64_t FormatContentSubgroup.Resolved.puzzleTypes.getter()
{
  uint64_t v1 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  uint64_t v32 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = v0[1];
  uint64_t v31 = v0[3];
  uint64_t v5 = v0[7];
  uint64_t v4 = v0[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1C10468B0(v4);
  swift_bridgeObjectRelease();
  uint64_t v35 = v5;
  swift_bridgeObjectRetain();
  sub_1BFEE0654(v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = v35;
  unint64_t v8 = MEMORY[0x1E4FBC860];
  uint64_t v35 = MEMORY[0x1E4FBC860];
  uint64_t v25 = *(void *)(v7 + 16);
  if (v25)
  {
    uint64_t v23 = v7;
    uint64_t v24 = v7 + 32;
    swift_bridgeObjectRetain();
    uint64_t v9 = 0;
    do
    {
      unint64_t v11 = (void *)(v24 + (v9 << 6));
      uint64_t v12 = v11[1];
      uint64_t v13 = v11[2];
      uint64_t v15 = v11[3];
      uint64_t v14 = v11[4];
      uint64_t v16 = v11[5];
      uint64_t v17 = v11[6];
      uint64_t v33 = v11[7];
      unint64_t v34 = v8;
      uint64_t v18 = *(void *)(v14 + 16);
      if (v18)
      {
        uint64_t v19 = v14;
        uint64_t v20 = v14 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80));
        uint64_t v31 = v12;
        swift_bridgeObjectRetain();
        uint64_t v30 = v13;
        swift_bridgeObjectRetain();
        uint64_t v29 = v15;
        swift_bridgeObjectRetain();
        uint64_t v26 = v19;
        swift_bridgeObjectRetain_n();
        uint64_t v28 = v16;
        swift_bridgeObjectRetain();
        uint64_t v27 = v17;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v21 = *(void *)(v32 + 72);
        do
        {
          sub_1BFECBB50(v20, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
          if (swift_getEnumCaseMultiPayload() == 5)
          {
            MEMORY[0x1C18C66D0]();
            if (*(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1C151EC8C();
            }
            sub_1C151ECEC();
            sub_1C151EBEC();
          }
          else
          {
            sub_1BFECF124((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
          }
          v20 += v21;
          --v18;
        }
        while (v18);
        unint64_t v10 = v34;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v10 = MEMORY[0x1E4FBC860];
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      ++v9;
      sub_1C104AFE8(v10);
      unint64_t v8 = MEMORY[0x1E4FBC860];
    }
    while (v9 != v25);
    swift_bridgeObjectRelease_n();
    return v35;
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
}

uint64_t FormatContentSubgroup.Resolved.puzzleStatistics.getter()
{
  uint64_t v1 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  uint64_t v43 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0153798(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v36 - v8;
  uint64_t v52 = type metadata accessor for PuzzleStatistic();
  uint64_t v50 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  uint64_t v51 = (uint64_t)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v53 = v0[1];
  uint64_t v12 = v0[4];
  uint64_t v48 = v0[3];
  uint64_t v49 = (uint64_t)v36 - v13;
  uint64_t v46 = v0[5];
  uint64_t v47 = v12;
  uint64_t v14 = v0[8];
  uint64_t v45 = v0[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = v45;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1C10468B0(v14);
  swift_bridgeObjectRelease();
  uint64_t v54 = v15;
  swift_bridgeObjectRetain();
  sub_1BFEE0654(v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v17 = v54;
  uint64_t v54 = MEMORY[0x1E4FBC860];
  uint64_t v38 = *(void *)(v17 + 16);
  if (v38)
  {
    v36[1] = v17;
    uint64_t v37 = v17 + 32;
    uint64_t v18 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v50 + 56);
    uint64_t v19 = (unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48);
    swift_bridgeObjectRetain();
    uint64_t v20 = 0;
    uint64_t v48 = v1;
    do
    {
      uint64_t v21 = (void *)(v37 + (v20 << 6));
      uint64_t v22 = v21[4];
      uint64_t v23 = *(void *)(v22 + 16);
      if (v23)
      {
        uint64_t v42 = v20;
        uint64_t v24 = v21[1];
        uint64_t v25 = v21[2];
        uint64_t v26 = v21[3];
        uint64_t v46 = v21[5];
        uint64_t v47 = v26;
        uint64_t v27 = v21[6];
        uint64_t v44 = v21[7];
        uint64_t v45 = v27;
        uint64_t v28 = v22 + ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80));
        uint64_t v40 = v24;
        swift_bridgeObjectRetain();
        uint64_t v39 = v25;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v41 = v22;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v53 = *(void *)(v43 + 72);
        uint64_t v29 = MEMORY[0x1E4FBC860];
        do
        {
          sub_1BFECBB50(v28, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
          if (swift_getEnumCaseMultiPayload() == 6)
          {
            sub_1BFEADFE8((uint64_t)v3, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
            uint64_t v30 = 0;
          }
          else
          {
            sub_1BFECF124((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
            uint64_t v30 = 1;
          }
          uint64_t v31 = v52;
          (*v18)(v6, v30, 1, v52);
          sub_1BFEADFE8((uint64_t)v6, (uint64_t)v9, (uint64_t (*)(void))sub_1C0153798);
          if ((*v19)(v9, 1, v31) == 1)
          {
            sub_1BFECF124((uint64_t)v9, (uint64_t (*)(void))sub_1C0153798);
          }
          else
          {
            uint64_t v32 = v49;
            sub_1BFEADFE8((uint64_t)v9, v49, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
            sub_1BFEADFE8(v32, v51, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v29 = sub_1C0EE07BC(0, *(void *)(v29 + 16) + 1, 1, v29);
            }
            unint64_t v34 = *(void *)(v29 + 16);
            unint64_t v33 = *(void *)(v29 + 24);
            if (v34 >= v33 >> 1) {
              uint64_t v29 = sub_1C0EE07BC(v33 > 1, v34 + 1, 1, v29);
            }
            *(void *)(v29 + 16) = v34 + 1;
            sub_1BFEADFE8(v51, v29+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(void *)(v50 + 72) * v34, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
          }
          v28 += v53;
          --v23;
        }
        while (v23);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        uint64_t v20 = v42;
      }
      else
      {
        uint64_t v29 = MEMORY[0x1E4FBC860];
      }
      ++v20;
      sub_1C104B000(v29);
    }
    while (v20 != v38);
    swift_bridgeObjectRelease_n();
    return v54;
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
}

uint64_t FormatContentSubgroup.Resolved.customItems.getter()
{
  return sub_1C0E10FEC(sub_1C1046FB0);
}

uint64_t sub_1C0E10FEC(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1C10468B0(v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BFEE0654(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1(v2);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t FormatContentSubgroup.Resolved.placeholders.getter()
{
  uint64_t v1 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  uint64_t v38 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = v0[1];
  uint64_t v37 = v0[3];
  uint64_t v5 = v0[7];
  uint64_t v4 = v0[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1C10468B0(v4);
  swift_bridgeObjectRelease();
  uint64_t v40 = v5;
  swift_bridgeObjectRetain();
  sub_1BFEE0654(v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = v40;
  uint64_t v40 = MEMORY[0x1E4FBC860];
  uint64_t v29 = *(void *)(v7 + 16);
  if (v29)
  {
    v27[1] = v7;
    uint64_t v28 = v7 + 32;
    swift_bridgeObjectRetain();
    uint64_t v8 = 0;
    uint64_t v39 = v1;
    do
    {
      uint64_t v9 = (void *)(v28 + (v8 << 6));
      uint64_t v10 = v9[4];
      uint64_t v11 = *(void *)(v10 + 16);
      if (v11)
      {
        uint64_t v37 = v8;
        uint64_t v12 = v9[2];
        uint64_t v13 = v9[3];
        uint64_t v14 = v9[5];
        uint64_t v15 = v9[6];
        uint64_t v16 = v9[7];
        uint64_t v17 = v10 + ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80));
        uint64_t v35 = v9[1];
        swift_bridgeObjectRetain();
        uint64_t v34 = v12;
        swift_bridgeObjectRetain();
        uint64_t v33 = v13;
        swift_bridgeObjectRetain();
        uint64_t v36 = v10;
        swift_bridgeObjectRetain_n();
        uint64_t v32 = v14;
        swift_bridgeObjectRetain();
        uint64_t v31 = v15;
        swift_bridgeObjectRetain();
        uint64_t v30 = v16;
        swift_bridgeObjectRetain();
        uint64_t v18 = *(void *)(v38 + 72);
        uint64_t v19 = (void *)MEMORY[0x1E4FBC860];
        do
        {
          sub_1BFECBB50(v17, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
          if (swift_getEnumCaseMultiPayload() <= 7)
          {
            sub_1BFECF124((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
          }
          else
          {
            uint64_t v20 = *(void *)v3;
            uint64_t v21 = *((void *)v3 + 1);
            char v22 = v3[16];
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v19 = sub_1C0EE3114(0, v19[2] + 1, 1, v19);
            }
            unint64_t v24 = v19[2];
            unint64_t v23 = v19[3];
            if (v24 >= v23 >> 1) {
              uint64_t v19 = sub_1C0EE3114((void *)(v23 > 1), v24 + 1, 1, v19);
            }
            void v19[2] = v24 + 1;
            uint64_t v25 = &v19[3 * v24];
            v25[4] = v20;
            v25[5] = v21;
            *((unsigned char *)v25 + 48) = v22;
          }
          v17 += v18;
          --v11;
        }
        while (v11);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        uint64_t v8 = v37;
      }
      else
      {
        uint64_t v19 = (void *)MEMORY[0x1E4FBC860];
      }
      ++v8;
      sub_1BFEC8A4C((uint64_t)v19);
    }
    while (v8 != v29);
    swift_bridgeObjectRelease_n();
    return v40;
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
}

uint64_t FormatContentSubgroup.Resolved.itemAuxiliaries.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C10468B0(v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BFEE0654(v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  uint64_t v8 = MEMORY[0x1E4FBC860];
  uint64_t v4 = *(void *)(v1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = v1 + 48;
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_getAtKeyPath();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFDDF900(v7);
      v5 += 64;
      --v4;
    }
    while (v4);
    swift_release();
    swift_bridgeObjectRelease_n();
    return v8;
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
}

uint64_t FormatContentSubgroup.Resolved.compilerOptionIdentifiers.getter()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C049A1A0(v0);
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1BFEF4060(v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1C0E117A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0E11BF0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0E117D0(uint64_t a1)
{
  unint64_t v2 = sub_1C0022F70();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0E1180C(uint64_t a1)
{
  unint64_t v2 = sub_1C0022F70();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0E11848()
{
  return MEMORY[0x1E4FBB1B0];
}

void *_s8ResolvedVwcp_1(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s8ResolvedVwca_1(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s8ResolvedVwta_1(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

unsigned char *_s8ResolvedV10CodingKeysOwst_1(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0E11B60);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *_s8ResolvedV10CodingKeysOMa_1()
{
  return &_s8ResolvedV10CodingKeysON_1;
}

unint64_t sub_1C0E11B9C()
{
  unint64_t result = qword_1EA1A7B40;
  if (!qword_1EA1A7B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7B40);
  }
  return result;
}

uint64_t sub_1C0E11BF0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C1629260 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74756F79616CLL && a2 == 0xE600000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x73746E65746E6F63 && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x736E6F6974636573 && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x737265746C6966 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t FormatVideoData.Assets.videoURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C1515FDC();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t FormatVideoData.Assets.stillImageURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FormatVideoData.Assets(0);
  return sub_1BFE0BFA0(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(void))sub_1BFF00BEC);
}

id FormatVideoData.Properties.videoGravity.getter()
{
  return *v0;
}

uint64_t FormatVideoData.Properties.isLooping.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t FormatVideoData.Properties.playback.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t FormatVideoData.Properties.isPreventingDisplaySleep.getter()
{
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t FormatVideoData.Properties.isMuted.getter()
{
  return *(unsigned __int8 *)(v0 + 25);
}

id FormatVideoData.Properties.imageGravity.getter()
{
  return *(id *)(v0 + 32);
}

uint64_t FormatVideoData.Properties.endAction.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t FormatVideoData.assets.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BFE0BFA0(v1, a1, type metadata accessor for FormatVideoData.Assets);
}

id FormatVideoData.properties.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FormatVideoData(0) + 20);
  unsigned int v4 = *(void **)v3;
  char v5 = *(unsigned char *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  char v7 = *(unsigned char *)(v3 + 24);
  char v8 = *(unsigned char *)(v3 + 25);
  uint64_t v9 = *(void **)(v3 + 32);
  uint64_t v10 = *(void *)(v3 + 40);
  id v13 = v9;
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 25) = v8;
  *(void *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v10;
  id v11 = v4;
  return v13;
}

char *initializeBufferWithCopyOfBuffer for FormatVideoData(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C1515FDC();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    uint64_t v10 = *(int *)(type metadata accessor for FormatVideoData.Assets(0) + 20);
    id v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(&a2[v10], 1, v7))
    {
      sub_1BFF00BEC();
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      v9(v11, v12, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
    uint64_t v15 = *(int *)(a3 + 20);
    uint64_t v16 = &a1[v15];
    uint64_t v17 = &a2[v15];
    uint64_t v18 = *(void **)v17;
    *(void *)uint64_t v16 = *(void *)v17;
    v16[8] = v17[8];
    *((void *)v16 + 2) = *((void *)v17 + 2);
    *((_WORD *)v16 + 12) = *((_WORD *)v17 + 12);
    uint64_t v20 = (void *)*((void *)v17 + 4);
    uint64_t v19 = *((void *)v17 + 5);
    *((void *)v16 + 4) = v20;
    *((void *)v16 + 5) = v19;
    id v21 = v18;
    id v22 = v20;
  }
  return a1;
}

void destroy for FormatVideoData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1515FDC();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  uint64_t v7 = a1 + *(int *)(type metadata accessor for FormatVideoData.Assets(0) + 20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4)) {
    v6(v7, v4);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 20);

  uint64_t v9 = *(void **)(v8 + 32);
}

char *initializeWithCopy for FormatVideoData(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(type metadata accessor for FormatVideoData.Assets(0) + 20);
  uint64_t v10 = &a1[v9];
  id v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v9], 1, v6))
  {
    sub_1BFF00BEC();
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = *(void **)v15;
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  *((void *)v14 + 2) = *((void *)v15 + 2);
  *((_WORD *)v14 + 12) = *((_WORD *)v15 + 12);
  uint64_t v18 = (void *)*((void *)v15 + 4);
  uint64_t v17 = *((void *)v15 + 5);
  *((void *)v14 + 4) = v18;
  *((void *)v14 + 5) = v17;
  id v19 = v16;
  id v20 = v18;
  return a1;
}

char *assignWithCopy for FormatVideoData(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5 = sub_1C1515FDC();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  uint64_t v8 = *(int *)(type metadata accessor for FormatVideoData.Assets(0) + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v26 = a2;
  uint64_t v10 = &a2[v8];
  id v11 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v6 + 48);
  int v12 = v11(&a1[v8], 1, v5);
  int v13 = v11(v10, 1, v5);
  if (!v12)
  {
    if (!v13)
    {
      v7(v9, v10, v5);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1BFF00BEC();
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v10, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v9, 0, 1, v5);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &v26[v15];
  uint64_t v18 = *(void **)&v26[v15];
  id v19 = *(void **)v16;
  *(void *)uint64_t v16 = v18;
  id v20 = v18;

  v16[8] = v17[8];
  *((void *)v16 + 2) = *((void *)v17 + 2);
  v16[24] = v17[24];
  unsigned char v16[25] = v17[25];
  id v21 = (void *)*((void *)v17 + 4);
  id v22 = (void *)*((void *)v16 + 4);
  *((void *)v16 + 4) = v21;
  id v23 = v21;

  *((void *)v16 + 5) = *((void *)v17 + 5);
  return a1;
}

char *initializeWithTake for FormatVideoData(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(type metadata accessor for FormatVideoData.Assets(0) + 20);
  uint64_t v10 = &a1[v9];
  id v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v9], 1, v6))
  {
    sub_1BFF00BEC();
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  long long v16 = *((_OWORD *)v15 + 1);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *((_OWORD *)v14 + 1) = v16;
  *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
  return a1;
}

char *assignWithTake for FormatVideoData(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5 = sub_1C1515FDC();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  uint64_t v8 = *(int *)(type metadata accessor for FormatVideoData.Assets(0) + 20);
  uint64_t v9 = &a1[v8];
  id v22 = a2;
  uint64_t v10 = &a2[v8];
  id v11 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v6 + 48);
  int v12 = v11(&a1[v8], 1, v5);
  int v13 = v11(v10, 1, v5);
  if (!v12)
  {
    if (!v13)
    {
      v7(v9, v10, v5);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1BFF00BEC();
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v10, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v9, 0, 1, v5);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 20);
  long long v16 = &a1[v15];
  uint64_t v17 = &v22[v15];
  uint64_t v18 = *(void **)&a1[v15];
  *(void *)&a1[v15] = *(void *)&v22[v15];

  v16[8] = v17[8];
  *((void *)v16 + 2) = *((void *)v17 + 2);
  v16[24] = v17[24];
  unsigned char v16[25] = v17[25];
  id v19 = (void *)*((void *)v16 + 4);
  *((void *)v16 + 4) = *((void *)v17 + 4);

  *((void *)v16 + 5) = *((void *)v17 + 5);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatVideoData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0E12B20);
}

uint64_t sub_1C0E12B20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FormatVideoData.Assets(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for FormatVideoData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0E12BF4);
}

uint64_t sub_1C0E12BF4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for FormatVideoData.Assets(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatVideoData.Assets(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C1515FDC();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    uint64_t v10 = *(int *)(a3 + 20);
    id v11 = (char *)a1 + v10;
    int v12 = (char *)a2 + v10;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v12, 1, v7))
    {
      sub_1BFF00BEC();
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)v11, (uint64_t *)v12, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for FormatVideoData.Assets(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1515FDC();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v8(a1, v4);
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v4);
  }
  return result;
}

char *initializeWithCopy for FormatVideoData.Assets(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  id v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6))
  {
    sub_1BFF00BEC();
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  return a1;
}

char *assignWithCopy for FormatVideoData.Assets(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  id v11 = &a2[v9];
  uint64_t v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v13 = v12(&a1[v9], 1, v6);
  int v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1BFF00BEC();
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  return a1;
}

char *initializeWithTake for FormatVideoData.Assets(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  id v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6))
  {
    sub_1BFF00BEC();
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  return a1;
}

char *assignWithTake for FormatVideoData.Assets(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  id v11 = &a2[v9];
  uint64_t v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v13 = v12(&a1[v9], 1, v6);
  int v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1BFF00BEC();
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatVideoData.Assets(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0E13538);
}

uint64_t sub_1C0E13538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    sub_1BFF00BEC();
    id v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for FormatVideoData.Assets(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0E13644);
}

uint64_t sub_1C0E13644(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1C1515FDC();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    sub_1BFF00BEC();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void destroy for FormatVideoData.Properties(uint64_t a1)
{
  BOOL v2 = *(void **)(a1 + 32);
}

uint64_t initializeWithCopy for FormatVideoData.Properties(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  uint64_t v5 = *(void **)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v4;
  id v6 = v3;
  id v7 = v5;
  return a1;
}

uint64_t assignWithCopy for FormatVideoData.Properties(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  id v7 = *(void **)(a2 + 32);
  uint64_t v8 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v7;
  id v9 = v7;

  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for FormatVideoData.Properties(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  uint64_t v5 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for FormatVideoData.Properties()
{
  return &type metadata for FormatVideoData.Properties;
}

void *sub_1C0E138D8(uint64_t a1)
{
  uint64_t v82 = type metadata accessor for FormatVideoData.Assets(0);
  MEMORY[0x1F4188790](v82);
  uint64_t v3 = (char *)&v81 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0D50464(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v93 = (uint64_t)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v90 = (uint64_t)&v81 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v88 = (uint64_t)&v81 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v87 = (uint64_t)&v81 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v86 = (uint64_t)&v81 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v85 = (uint64_t)&v81 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v81 - v17;
  MEMORY[0x1F4188790](v19);
  id v21 = (char *)&v81 - v20;
  MEMORY[0x1F4188790](v22);
  unint64_t v24 = (char *)&v81 - v23;
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v84 = (uint64_t)&v81 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (char *)&v81 - v28;
  uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1BFF2E988(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  sub_1BFF2E988(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v30);
  sub_1C0181BEC(0);
  uint64_t v91 = v31;
  unint64_t v32 = (*(unsigned __int8 *)(*(void *)(v31 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v31 - 8) + 80);
  uint64_t v95 = *(void *)(*(void *)(v31 - 8) + 72);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1C15341B0;
  uint64_t v89 = v33;
  uint64_t v34 = (char *)(v33 + v32);
  uint64_t v94 = a1;
  sub_1BFE0BFA0(a1, (uint64_t)v24, (uint64_t (*)(void))sub_1C0D50464);
  uint64_t v35 = type metadata accessor for FormatVideoData(0);
  uint64_t v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48);
  int v37 = v36(v24, 1, v35);
  id v83 = v3;
  if (v37 == 1)
  {
    sub_1C0E146FC((uint64_t)v24, (uint64_t (*)(void))sub_1C0D50464);
    uint64_t v38 = sub_1C1515FDC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v29, 1, 1, v38);
  }
  else
  {
    sub_1BFE0BFA0((uint64_t)v24, (uint64_t)v3, type metadata accessor for FormatVideoData.Assets);
    sub_1C0E146FC((uint64_t)v24, type metadata accessor for FormatVideoData);
    uint64_t v39 = sub_1C1515FDC();
    uint64_t v40 = *(void *)(v39 - 8);
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v29, v3, v39);
    sub_1C0E146FC((uint64_t)v3, type metadata accessor for FormatVideoData.Assets);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v29, 0, 1, v39);
  }
  sub_1C04338EC(5001813, 0xE300000000000000, (uint64_t)v29, v34);
  uint64_t v41 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v42 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56);
  v42(v34, 0, 1, v41);
  sub_1BFE0BFA0(v94, (uint64_t)v21, (uint64_t (*)(void))sub_1C0D50464);
  if (v36(v21, 1, v35) == 1)
  {
    sub_1C0E146FC((uint64_t)v21, (uint64_t (*)(void))sub_1C0D50464);
    uint64_t v43 = sub_1C1515FDC();
    uint64_t v44 = v84;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v84, 1, 1, v43);
  }
  else
  {
    uint64_t v45 = (uint64_t)v83;
    sub_1BFE0BFA0((uint64_t)v21, (uint64_t)v83, type metadata accessor for FormatVideoData.Assets);
    sub_1C0E146FC((uint64_t)v21, type metadata accessor for FormatVideoData);
    uint64_t v44 = v84;
    sub_1BFE0BFA0(v45 + *(int *)(v82 + 20), v84, (uint64_t (*)(void))sub_1BFF00BEC);
    sub_1C0E146FC(v45, type metadata accessor for FormatVideoData.Assets);
  }
  uint64_t v46 = &v34[v95];
  sub_1C04338EC(0x6D492D6C6C697453, 0xEF4C525520656761, v44, &v34[v95]);
  v42(v46, 0, 1, v41);
  sub_1BFE0BFA0(v94, (uint64_t)v18, (uint64_t (*)(void))sub_1C0D50464);
  if (v36(v18, 1, v35) == 1)
  {
    sub_1C0E146FC((uint64_t)v18, (uint64_t (*)(void))sub_1C0D50464);
    id v47 = 0;
  }
  else
  {
    id v47 = *(id *)&v18[*(int *)(v35 + 20)];
    sub_1C0E146FC((uint64_t)v18, type metadata accessor for FormatVideoData);
  }
  uint64_t v48 = &v34[2 * v95];
  sub_1C043DAC0(0x79746976617247, 0xE700000000000000, v47, v48);
  v42(v48, 0, 1, v41);
  uint64_t v49 = v94;
  uint64_t v50 = v85;
  sub_1BFE0BFA0(v94, v85, (uint64_t (*)(void))sub_1C0D50464);
  if (v36((char *)v50, 1, v35) == 1)
  {
    sub_1C0E146FC(v50, (uint64_t (*)(void))sub_1C0D50464);
    char v51 = 2;
  }
  else
  {
    char v51 = *(unsigned char *)(v50 + *(int *)(v35 + 20) + 8);
    sub_1C0E146FC(v50, type metadata accessor for FormatVideoData);
  }
  uint64_t v52 = &v34[3 * v95];
  sub_1C0432B74(0x6E69706F6F4C7369, 0xE900000000000067, v51, v52);
  v42(v52, 0, 1, v41);
  uint64_t v53 = v49;
  uint64_t v54 = v86;
  sub_1BFE0BFA0(v53, v86, (uint64_t (*)(void))sub_1C0D50464);
  int v55 = v36((char *)v54, 1, v35);
  char v56 = (uint64_t (*)(void))sub_1C0D50464;
  if (v55 == 1)
  {
    uint64_t v57 = 0;
  }
  else
  {
    uint64_t v57 = *(void *)(v54 + *(int *)(v35 + 20) + 16);
    char v56 = type metadata accessor for FormatVideoData;
  }
  char v58 = v55 == 1;
  sub_1C0E146FC(v54, v56);
  uint64_t v59 = &v34[4 * v95];
  sub_1C043DAD8(0x6B63616279616C50, 0xE800000000000000, v57, v58, v59);
  v42(v59, 0, 1, v41);
  uint64_t v60 = v94;
  uint64_t v61 = v87;
  sub_1BFE0BFA0(v94, v87, (uint64_t (*)(void))sub_1C0D50464);
  if (v36((char *)v61, 1, v35) == 1)
  {
    sub_1C0E146FC(v61, (uint64_t (*)(void))sub_1C0D50464);
    char v62 = 2;
  }
  else
  {
    char v62 = *(unsigned char *)(v61 + *(int *)(v35 + 20) + 24);
    sub_1C0E146FC(v61, type metadata accessor for FormatVideoData);
  }
  uint64_t v63 = &v34[5 * v95];
  sub_1C0432B74(0xD000000000000018, 0x80000001C1629280, v62, v63);
  v42(v63, 0, 1, v41);
  uint64_t v64 = v88;
  sub_1BFE0BFA0(v60, v88, (uint64_t (*)(void))sub_1C0D50464);
  if (v36((char *)v64, 1, v35) == 1)
  {
    sub_1C0E146FC(v64, (uint64_t (*)(void))sub_1C0D50464);
    char v65 = 2;
  }
  else
  {
    char v65 = *(unsigned char *)(v64 + *(int *)(v35 + 20) + 25);
    sub_1C0E146FC(v64, type metadata accessor for FormatVideoData);
  }
  uint64_t v66 = &v34[6 * v95];
  sub_1C0432B74(0x646574754D7369, 0xE700000000000000, v65, v66);
  v42(v66, 0, 1, v41);
  uint64_t v67 = v90;
  sub_1BFE0BFA0(v60, v90, (uint64_t (*)(void))sub_1C0D50464);
  if (v36((char *)v67, 1, v35) == 1)
  {
    sub_1C0E146FC(v67, (uint64_t (*)(void))sub_1C0D50464);
    id v68 = 0;
  }
  else
  {
    id v68 = *(id *)(v67 + *(int *)(v35 + 20) + 32);
    sub_1C0E146FC(v67, type metadata accessor for FormatVideoData);
  }
  uint64_t v69 = &v34[8 * v95 - v95];
  sub_1C043DAF0(0xD000000000000013, 0x80000001C16292A0, v68, v69);
  v42(v69, 0, 1, v41);
  uint64_t v70 = v93;
  sub_1BFE0BFA0(v60, v93, (uint64_t (*)(void))sub_1C0D50464);
  int v71 = v36((char *)v70, 1, v35);
  uint64_t v72 = (uint64_t (*)(void))sub_1C0D50464;
  if (v71 == 1)
  {
    uint64_t v73 = 0;
  }
  else
  {
    uint64_t v73 = *(void *)(v70 + *(int *)(v35 + 20) + 40);
    uint64_t v72 = type metadata accessor for FormatVideoData;
  }
  char v74 = v71 == 1;
  sub_1C0E146FC(v70, v72);
  uint64_t v75 = &v34[8 * v95];
  sub_1C043DED0(0x6974634120646E45, 0xEA00000000006E6FLL, v73, v74, v75);
  v42(v75, 0, 1, v41);
  sub_1C09BCFA4(0x6F65646956, 0xE500000000000000, 0, 0, v89, v96);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v76 = inited;
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(v76 + 64) = &off_1F1BDEC90;
  uint64_t v77 = swift_allocObject();
  *(void *)(v76 + 32) = v77;
  *(void *)(v77 + 48) = v97;
  long long v78 = v96[1];
  *(_OWORD *)(v77 + 16) = v96[0];
  *(_OWORD *)(v77 + 32) = v78;
  id v79 = sub_1C131B79C(v76);
  swift_setDeallocating();
  sub_1C01004A4(0);
  swift_arrayDestroy();
  return v79;
}

uint64_t sub_1C0E146B4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0E146FC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t BaseFeedGroupEmitterType.name.getter()
{
  swift_getDynamicType();
  return sub_1C1520FAC();
}

void sub_1C0E14798(void *a1@<X8>)
{
}

void BaseFeedGroupEmitterType.groupKnobs.getter(void *a1@<X8>)
{
  uint64_t v1 = MEMORY[0x1E4FBB1D8];
  a1[3] = MEMORY[0x1E4FBB1A0];
  a1[4] = v1;
  a1[5] = MEMORY[0x1E4FBB1A8];
  *a1 = 0;
  a1[1] = 0xE000000000000000;
}

uint64_t BaseFeedGroupEmitterType.priority.getter(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  __n128 v6 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v8 = (char *)&v11 - v7;
  (*(void (**)(uint64_t, uint64_t, __n128))(a2 + 48))(a1, a2, v6);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 112))(AssociatedTypeWitness, AssociatedConformanceWitness);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, AssociatedTypeWitness);
}

void sub_1C0E14A00(unsigned char *a1@<X8>)
{
}

void BaseFeedGroupEmitterType.repooling.getter(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t BaseFeedGroupEmitterType.canExpand.getter()
{
  return 0;
}

void sub_1C0E14A2C(uint64_t a1@<X8>)
{
}

void BaseFeedGroupEmitterType.emitSettings(with:)(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  *(void *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 24) = 1;
  *(void *)(a1 + 32) = 0;
  *(_WORD *)(a1 + 40) = 1;
}

uint64_t sub_1C0E14A64(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  void *v10 = v5;
  v10[3] = a4;
  v10[4] = a5;
  v10[1] = sub_1BFC542F4;
  v10[2] = a1;
  v10[5] = *a2;
  return MEMORY[0x1F4188298](sub_1C0E14B98, 0, 0);
}

uint64_t ModernFeedGroupEmitterType.emitCachedGroup(with:cachedOutput:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  v5[2] = a1;
  v5[5] = *a2;
  return MEMORY[0x1F4188298](sub_1C0E14B98, 0, 0);
}

uint64_t sub_1C0E14B98()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for FeedGroupEmitterCachedOutput();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t FeedGroupEmitter.__allocating_init<A>(emitter:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  FeedGroupEmitter.init<A>(emitter:)(a1, a2, a3);
  return v6;
}

uint64_t *FeedGroupEmitter.init<A>(emitter:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v54 = a3;
  uint64_t v49 = a1;
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(a2 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __n128 v8 = MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void (**)(char *, __n128))(v6 + 16);
  uint64_t v55 = v6 + 16;
  v10(v9, v8);
  char v56 = (void (*)(char *, uint64_t, uint64_t))v10;
  uint64_t v11 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v12 = v6;
  uint64_t v13 = (v11 + 40) & ~v11;
  v48[1] = v13 + v7;
  uint64_t v51 = v11 | 7;
  uint64_t v14 = (char *)swift_allocObject();
  uint64_t v15 = *(void *)(v5 + 80);
  *((void *)v14 + 2) = v15;
  *((void *)v14 + 3) = a2;
  v48[0] = v15;
  uint64_t v16 = v54;
  *((void *)v14 + 4) = v54;
  uint64_t v50 = v13;
  uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v52(&v14[v13], v9, a2);
  v3[2] = (uint64_t)sub_1C0E15370;
  v3[3] = (uint64_t)v14;
  ((void (*)(char *, uint64_t, uint64_t))v10)(v9, v49, a2);
  uint64_t v17 = (char *)swift_allocObject();
  *((void *)v17 + 2) = v15;
  *((void *)v17 + 3) = a2;
  *((void *)v17 + 4) = v16;
  v52(&v17[v13], v9, a2);
  v3[4] = (uint64_t)sub_1C0E15378;
  v3[5] = (uint64_t)v17;
  uint64_t v18 = v9;
  uint64_t v19 = v49;
  v56(v9, v49, a2);
  uint64_t v20 = (char *)swift_allocObject();
  uint64_t v21 = v48[0];
  *((void *)v20 + 2) = v48[0];
  *((void *)v20 + 3) = a2;
  uint64_t v22 = v54;
  *((void *)v20 + 4) = v54;
  uint64_t v23 = v50;
  unint64_t v24 = v52;
  v52(&v20[v50], v18, a2);
  uint64_t v53 = v12 + 32;
  v3[6] = (uint64_t)sub_1C0E15380;
  v3[7] = (uint64_t)v20;
  v56(v18, v19, a2);
  uint64_t v25 = (char *)swift_allocObject();
  *((void *)v25 + 2) = v21;
  *((void *)v25 + 3) = a2;
  *((void *)v25 + 4) = v22;
  v24(&v25[v23], v18, a2);
  v3[8] = (uint64_t)sub_1C0E15388;
  v3[9] = (uint64_t)v25;
  uint64_t v26 = v49;
  v56(v18, v49, a2);
  uint64_t v27 = (char *)swift_allocObject();
  *((void *)v27 + 2) = v21;
  *((void *)v27 + 3) = a2;
  *((void *)v27 + 4) = v54;
  uint64_t v28 = v50;
  v24(&v27[v50], v18, a2);
  v3[10] = (uint64_t)sub_1C0E15390;
  v3[11] = (uint64_t)v27;
  uint64_t v29 = v56;
  v56(v18, v26, a2);
  uint64_t v30 = (char *)swift_allocObject();
  *((void *)v30 + 2) = v21;
  *((void *)v30 + 3) = a2;
  *((void *)v30 + 4) = v54;
  v52(&v30[v28], v18, a2);
  v3[12] = (uint64_t)sub_1C0E15398;
  v3[13] = (uint64_t)v30;
  uint64_t v31 = v18;
  uint64_t v32 = v26;
  v29(v31, v26, a2);
  uint64_t v33 = (char *)swift_allocObject();
  uint64_t v34 = v48[0];
  *((void *)v33 + 2) = v48[0];
  *((void *)v33 + 3) = a2;
  uint64_t v35 = v34;
  *((void *)v33 + 4) = v54;
  v52(&v33[v50], v31, a2);
  v3[14] = (uint64_t)sub_1C0E153A0;
  v3[15] = (uint64_t)v33;
  uint64_t v36 = v31;
  v56(v31, v32, a2);
  int v37 = (char *)swift_allocObject();
  uint64_t v38 = v35;
  *((void *)v37 + 2) = v35;
  *((void *)v37 + 3) = a2;
  uint64_t v39 = v54;
  *((void *)v37 + 4) = v54;
  uint64_t v40 = v52;
  v52(&v37[v50], v36, a2);
  v3[16] = (uint64_t)sub_1C0E153A8;
  v3[17] = (uint64_t)v37;
  v3[20] = (uint64_t)sub_1C0E153AC(v32, v38, a2, v39);
  v3[21] = v41;
  v3[22] = (uint64_t)sub_1C0E154D8(v32, v38, a2, v39);
  v3[23] = v42;
  v56(v36, v32, a2);
  uint64_t v43 = (char *)swift_allocObject();
  *((void *)v43 + 2) = v38;
  *((void *)v43 + 3) = a2;
  *((void *)v43 + 4) = v39;
  uint64_t v44 = v50;
  v40(&v43[v50], v36, a2);
  v3[18] = (uint64_t)sub_1C0E157FC;
  v3[19] = (uint64_t)v43;
  v40(v36, (char *)v49, a2);
  uint64_t v45 = (char *)swift_allocObject();
  *((void *)v45 + 2) = v48[0];
  *((void *)v45 + 3) = a2;
  *((void *)v45 + 4) = v39;
  v40(&v45[v44], v36, a2);
  v3[24] = (uint64_t)&unk_1EA1A7B58;
  v3[25] = (uint64_t)v45;
  uint64_t v46 = swift_allocObject();
  *(void *)(v46 + 16) = a2;
  *(void *)(v46 + 24) = v39;
  v3[26] = (uint64_t)&unk_1EA1A7B68;
  v3[27] = v46;
  return v3;
}

{
  uint64_t *v5;

  uint64_t v5 = sub_1C0E16DE0(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
  return v5;
}

uint64_t (*sub_1C0E153AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v7 = *(void *)(a3 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __n128 v9 = MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v7 + 16))(v10, v9);
  unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = (char *)swift_allocObject();
  *((void *)v12 + 2) = a2;
  *((void *)v12 + 3) = a3;
  *((void *)v12 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v12[v11], v10, a3);
  return sub_1C0E1808C;
}

uint64_t (*sub_1C0E154D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v7 = *(void *)(a3 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __n128 v9 = MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v7 + 16))(v10, v9);
  unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = (char *)swift_allocObject();
  *((void *)v12 + 2) = a2;
  *((void *)v12 + 3) = a3;
  *((void *)v12 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v12[v11], v10, a3);
  return sub_1C0E18084;
}

void sub_1C0E15604(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v23 = a2;
  unint64_t v24 = a6;
  swift_getAssociatedConformanceWitness();
  uint64_t v9 = type metadata accessor for ModernFeedGroupEmitterInitialCursorContext();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v21 - v11;
  uint64_t v13 = type metadata accessor for LegacyFeedGroupEmitterInitialCursorContext();
  uint64_t v14 = *(void *)(v13 - 8);
  __n128 v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (uint64_t *)((char *)&v21 - v16);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v12, v22, v9, v15);
  LegacyFeedGroupEmitterInitialCursorContext.init(context:)((uint64_t)v12, a3, v17);
  uint64_t v18 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(a5 + 16))(v17, a4, a5);
  (*(void (**)(uint64_t *, uint64_t))(v14 + 8))(v17, v13);
  sub_1BFE60B48();
  uint64_t v19 = v24;
  v24[3] = v20;
  *uint64_t v19 = v18;
}

void sub_1C0E157FC(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C0E15604(a1, (uint64_t)v2+ ((*(unsigned __int8 *)(*(void *)(v2[3] - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2[3] - 8) + 80)), v2[2], v2[3], v2[4], a2);
}

uint64_t sub_1C0E15840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return MEMORY[0x1F4188298](sub_1C0E15868, 0, 0);
}

uint64_t sub_1C0E15868()
{
  v0[7] = (*(uint64_t (**)(void, void))(v0[6] + 24))(v0[3], v0[5]);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  void *v1 = v0;
  v1[1] = sub_1C0B59D54;
  uint64_t v2 = v0[2];
  return MEMORY[0x1F415EBE0](v2);
}

uint64_t sub_1C0E15928(uint64_t a1, uint64_t a2)
{
  long long v9 = *(_OWORD *)(v2 + 24);
  uint64_t v6 = v2
     + ((*(unsigned __int8 *)(*(void *)(v9 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v9 - 8) + 80));
  uint64_t v7 = swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *(void *)uint64_t v7 = v3;
  *(_OWORD *)(v7 + 40) = v9;
  *(void *)(v7 + 24) = a2;
  *(void *)(v7 + 32) = v6;
  *(void *)(v7 + 8) = sub_1C005E7F4;
  *(void *)(v7 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1C0E15868, 0, 0);
}

uint64_t sub_1C0E15A28(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  v5[2] = a1;
  v5[5] = *a2;
  return MEMORY[0x1F4188298](sub_1C0E15A74, 0, 0);
}

uint64_t sub_1C0E15A74()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for FeedGroupEmitterCachedOutput();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1C0E15BE0()
{
  return swift_deallocObject();
}

uint64_t sub_1C0E15BF0(uint64_t a1, void *a2)
{
  uint64_t v6 = swift_task_alloc();
  long long v7 = *(_OWORD *)(v2 + 16);
  *(void *)(v3 + 16) = v6;
  *(void *)uint64_t v6 = v3;
  *(void *)(v6 + 8) = sub_1C005E7F4;
  *(_OWORD *)(v6 + 24) = v7;
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 40) = *a2;
  return MEMORY[0x1F4188298](sub_1C0E15A74, 0, 0);
}

uint64_t *FeedGroupEmitter.__allocating_init<A>(emitter:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_allocObject();
  uint64_t v6 = sub_1C0E16DE0(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
  return v6;
}

uint64_t (*sub_1C0E15DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v7 = *(void *)(a3 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __n128 v9 = MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v7 + 16))(v10, v9);
  unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = (char *)swift_allocObject();
  *((void *)v12 + 2) = a2;
  *((void *)v12 + 3) = a3;
  *((void *)v12 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v12[v11], v10, a3);
  return sub_1C0E18094;
}

uint64_t (*sub_1C0E15EF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v7 = *(void *)(a3 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __n128 v9 = MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v7 + 16))(v10, v9);
  unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = (char *)swift_allocObject();
  *((void *)v12 + 2) = a2;
  *((void *)v12 + 3) = a3;
  *((void *)v12 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v12[v11], v10, a3);
  return sub_1C0E1808C;
}

uint64_t (*sub_1C0E16024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v7 = *(void *)(a3 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __n128 v9 = MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v7 + 16))(v10, v9);
  unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = (char *)swift_allocObject();
  *((void *)v12 + 2) = a2;
  *((void *)v12 + 3) = a3;
  *((void *)v12 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v12[v11], v10, a3);
  return sub_1C0E18084;
}

void *sub_1C0E16150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a3 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __n128 v9 = MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v7 + 16))(v10, v9);
  unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = (char *)swift_allocObject();
  *((void *)v12 + 2) = a2;
  *((void *)v12 + 3) = a3;
  *((void *)v12 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v12[v11], v10, a3);
  return &unk_1EA1A7BD0;
}

uint64_t sub_1C0E1627C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 24) + **(int **)(a5 + 24));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  void *v10 = v5;
  v10[1] = sub_1C005E7F4;
  return v12(a1, a2, a4, a5);
}

void *sub_1C0E16390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a3 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __n128 v9 = MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v7 + 16))(v10, v9);
  unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = (char *)swift_allocObject();
  *((void *)v12 + 2) = a2;
  *((void *)v12 + 3) = a3;
  *((void *)v12 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v12[v11], v10, a3);
  return &unk_1EA1A7BC0;
}

uint64_t sub_1C0E164BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 32) + **(int **)(a6 + 32));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  *uint64_t v12 = v6;
  v12[1] = sub_1C005E7F4;
  return v14(a1, a2, a3, a5, a6);
}

uint64_t sub_1C0E165E0()
{
  return (*(uint64_t (**)(void))(v0 + 64))();
}

uint64_t sub_1C0E16608()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1C0E16630()
{
  return (*(uint64_t (**)(void))(v0 + 128))() & 1;
}

uint64_t sub_1C0E1665C()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t sub_1C0E16684(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_1C0E166A8, 0, 0);
}

uint64_t sub_1C0E166A8()
{
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v0[4] + 192) + **(int **)(v0[4] + 192));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  void *v1 = v0;
  v1[1] = sub_1C0E1677C;
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  return v5(v2, v3);
}

uint64_t sub_1C0E1677C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1C0E16870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  id v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x1F4188298](sub_1C0E16894, 0, 0);
}

uint64_t sub_1C0E16894()
{
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v0[5] + 208) + **(int **)(v0[5] + 208));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[6] = v1;
  void *v1 = v0;
  v1[1] = sub_1C0E1696C;
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[2];
  return v6(v4, v2, v3);
}

uint64_t sub_1C0E1696C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1C0E16A60()
{
  return sub_1C0E1665C();
}

uint64_t sub_1C0E16A84(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v2;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[3] = a2;
  _OWORD v7[4] = v6;
  v7[1] = sub_1C005E7F4;
  void v7[2] = a1;
  return MEMORY[0x1F4188298](sub_1C0E166A8, 0, 0);
}

uint64_t sub_1C0E16B40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *v3;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[4] = a3;
  v9[5] = v8;
  _OWORD v9[2] = a1;
  v9[3] = a2;
  v9[1] = sub_1C005E7F4;
  return MEMORY[0x1F4188298](sub_1C0E16894, 0, 0);
}

uint64_t sub_1C0E16C04()
{
  return sub_1BFCA4558();
}

uint64_t sub_1C0E16C28()
{
  return sub_1BFDCA2AC();
}

uint64_t sub_1C0E16C4C()
{
  return sub_1C0E165E0();
}

uint64_t sub_1C0E16C70()
{
  return sub_1BFDCBA40();
}

uint64_t sub_1C0E16C94()
{
  return sub_1C0E16608();
}

uint64_t sub_1C0E16CB8()
{
  return sub_1C0E16630() & 1;
}

uint64_t sub_1C0E16CE0()
{
  return sub_1BFDCBA74();
}

uint64_t sub_1C0E16D04()
{
  return sub_1BFDCBA18();
}

uint64_t static FeedGroupEmitter.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (*(uint64_t (**)(void))(a1 + 16))();
  uint64_t v5 = v4;
  if (v3 == (*(uint64_t (**)(void))(a2 + 16))() && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C0E16DBC(uint64_t *a1, uint64_t *a2)
{
  return static FeedGroupEmitter.== infix(_:_:)(*a1, *a2) & 1;
}

uint64_t *sub_1C0E16DE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v56 = a1;
  uint64_t v6 = *v3;
  uint64_t v7 = *(void *)(a2 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __n128 v9 = MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = *(void (**)(char *, __n128))(v7 + 16);
  uint64_t v53 = v7 + 16;
  v55(v10, v9);
  uint64_t v11 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = ((v11 + 40) & ~v11) + v8;
  uint64_t v13 = (v11 + 40) & ~v11;
  uint64_t v57 = v13;
  uint64_t v54 = v11 | 7;
  v51[0] = v12;
  uint64_t v14 = (char *)swift_allocObject();
  uint64_t v15 = *(void *)(v6 + 80);
  *((void *)v14 + 2) = v15;
  *((void *)v14 + 3) = a2;
  uint64_t v16 = v15;
  uint64_t v58 = a3;
  uint64_t v59 = v15;
  *((void *)v14 + 4) = a3;
  uint64_t v17 = a3;
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v51[1] = v7 + 32;
  uint64_t v52 = v18;
  v18(&v14[v13], v10, a2);
  v3[2] = (uint64_t)sub_1C0E15370;
  v3[3] = (uint64_t)v14;
  uint64_t v19 = (void (*)(char *, uint64_t, uint64_t))v55;
  uint64_t v20 = v56;
  ((void (*)(char *, uint64_t, uint64_t))v55)(v10, v56, a2);
  uint64_t v21 = (char *)swift_allocObject();
  *((void *)v21 + 2) = v16;
  *((void *)v21 + 3) = a2;
  *((void *)v21 + 4) = v17;
  uint64_t v22 = v57;
  uint64_t v23 = v52;
  v52(&v21[v57], v10, a2);
  v3[4] = (uint64_t)sub_1C0E15378;
  v3[5] = (uint64_t)v21;
  v19(v10, v20, a2);
  unint64_t v24 = (char *)swift_allocObject();
  uint64_t v25 = v58;
  *((void *)v24 + 2) = v59;
  *((void *)v24 + 3) = a2;
  *((void *)v24 + 4) = v25;
  v23(&v24[v22], v10, a2);
  uint64_t v26 = v23;
  v3[6] = (uint64_t)sub_1C0E15380;
  v3[7] = (uint64_t)v24;
  uint64_t v27 = (void (*)(char *, uint64_t, uint64_t))v55;
  uint64_t v28 = v56;
  ((void (*)(char *, uint64_t, uint64_t))v55)(v10, v56, a2);
  uint64_t v29 = (char *)swift_allocObject();
  *((void *)v29 + 2) = v59;
  *((void *)v29 + 3) = a2;
  *((void *)v29 + 4) = v25;
  v26(&v29[v57], v10, a2);
  v3[8] = (uint64_t)sub_1C0E15388;
  v3[9] = (uint64_t)v29;
  v27(v10, v28, a2);
  uint64_t v30 = (char *)swift_allocObject();
  uint64_t v31 = v58;
  *((void *)v30 + 2) = v59;
  *((void *)v30 + 3) = a2;
  *((void *)v30 + 4) = v31;
  uint64_t v32 = v57;
  v26(&v30[v57], v10, a2);
  v3[10] = (uint64_t)sub_1C0E15390;
  v3[11] = (uint64_t)v30;
  uint64_t v33 = (void (*)(char *, uint64_t, uint64_t))v55;
  ((void (*)(char *, uint64_t, uint64_t))v55)(v10, v56, a2);
  uint64_t v34 = (void *)swift_allocObject();
  v34[2] = v59;
  v34[3] = a2;
  v34[4] = v31;
  uint64_t v35 = (char *)v34 + v32;
  uint64_t v36 = v52;
  v52(v35, v10, a2);
  v3[12] = (uint64_t)sub_1C0E15398;
  v3[13] = (uint64_t)v34;
  uint64_t v37 = v56;
  v33(v10, v56, a2);
  uint64_t v38 = (char *)swift_allocObject();
  uint64_t v39 = v58;
  uint64_t v40 = v59;
  *((void *)v38 + 2) = v59;
  *((void *)v38 + 3) = a2;
  *((void *)v38 + 4) = v39;
  uint64_t v41 = v57;
  v36(&v38[v57], v10, a2);
  v3[14] = (uint64_t)sub_1C0E153A0;
  v3[15] = (uint64_t)v38;
  uint64_t v42 = v37;
  ((void (*)(char *, uint64_t, uint64_t))v55)(v10, v37, a2);
  uint64_t v43 = (char *)swift_allocObject();
  *((void *)v43 + 2) = v40;
  *((void *)v43 + 3) = a2;
  uint64_t v44 = v58;
  *((void *)v43 + 4) = v58;
  v52(&v43[v41], v10, a2);
  v3[16] = (uint64_t)sub_1C0E153A8;
  v3[17] = (uint64_t)v43;
  v3[18] = (uint64_t)sub_1C0E15DCC(v42, v40, a2, v44);
  v3[19] = v45;
  v3[20] = (uint64_t)sub_1C0E15EF8(v42, v40, a2, v44);
  v3[21] = v46;
  v3[22] = (uint64_t)sub_1C0E16024(v42, v40, a2, v44);
  v3[23] = v47;
  v3[24] = (uint64_t)sub_1C0E16150(v42, v40, a2, v44);
  v3[25] = v48;
  v3[26] = (uint64_t)sub_1C0E16390(v42, v40, a2, v44);
  v3[27] = v49;
  return v3;
}

uint64_t sub_1C0E17310(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0E1734C(uint64_t a1)
{
  *(void *)(a1 + 8) = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t dispatch thunk of BaseFeedGroupEmitterType.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of BaseFeedGroupEmitterType.groupConfig.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of BaseFeedGroupEmitterType.groupKnobs.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of BaseFeedGroupEmitterType.priority.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of BaseFeedGroupEmitterType.repooling.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of BaseFeedGroupEmitterType.canExpand.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of BaseFeedGroupEmitterType.emitSettings(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of BaseFeedGroupEmitterType.emitRules(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of LegacyFeedGroupEmitterType.initialCursor(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of LegacyFeedGroupEmitterType.emitNextGroup(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ModernFeedGroupEmitterType.initialCursor(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of ModernFeedGroupEmitterType.emitNextGroup(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 24) + **(int **)(a4 + 24));
  __n128 v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *__n128 v9 = v4;
  v9[1] = sub_1C005E7F4;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of ModernFeedGroupEmitterType.emitCachedGroup(with:cachedOutput:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 32) + **(int **)(a5 + 32));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  void *v11 = v5;
  v11[1] = sub_1BFC542F4;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t method lookup function for FeedGroupEmitter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedGroupEmitter);
}

uint64_t dispatch thunk of FeedGroupEmitter.__allocating_init<A>(emitter:)()
{
  return (*(uint64_t (**)(void))(v0 + 200))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of FeedGroupEmitter.identifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of FeedGroupEmitter.name.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of FeedGroupEmitter.shortDescription.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of FeedGroupEmitter.groupConfig.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of FeedGroupEmitter.groupKnobs.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of FeedGroupEmitter.priority.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of FeedGroupEmitter.repooling.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of FeedGroupEmitter.canExpand.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of FeedGroupEmitter.initialCursor(with:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of FeedGroupEmitter.emitSettings(with:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of FeedGroupEmitter.emitRules(with:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of FeedGroupEmitter.emitNextGroup(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 304) + **(int **)(*(void *)v2 + 304));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1C005E7F4;
  return v8(a1, a2);
}

uint64_t dispatch thunk of FeedGroupEmitter.emitCachedGroup(with:cachedOutput:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v3 + 312)
                                                          + **(int **)(*(void *)v3 + 312));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_1C005E7F4;
  return v10(a1, a2, a3);
}

uint64_t sub_1C0E17AF8()
{
  return sub_1C151811C();
}

uint64_t sub_1C0E17B60()
{
  return sub_1C15186DC();
}

uint64_t sub_1C0E17BC8()
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(v0 + 32) + 8) + 48))();
}

uint64_t sub_1C0E17C3C()
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(v0 + 32) + 8) + 56))();
}

uint64_t sub_1C0E17CB0()
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(v0 + 32) + 8) + 64))();
}

uint64_t sub_1C0E17D24()
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(v0 + 32) + 8) + 72))();
}

uint64_t sub_1C0E17D98()
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(v0 + 32) + 8) + 40))();
}

uint64_t sub_1C0E17E0C()
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(v0 + 32) + 8) + 80))() & 1;
}

uint64_t sub_1C0E17E84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(void *)(v3 + 24);
  uint64_t v9 = *(void *)(v3 + 32);
  uint64_t v10 = v3
      + ((*(unsigned __int8 *)(*(void *)(v8 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v8 - 8) + 80));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v11;
  void *v11 = v4;
  v11[1] = sub_1C005E7F4;
  return sub_1C0E164BC(a1, a2, a3, v10, v8, v9);
}

uint64_t sub_1C0E17F88(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(v2 + 32);
  uint64_t v8 = v2
     + ((*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_1C005E7F4;
  return sub_1C0E1627C(a1, a2, v8, v6, v7);
}

uint64_t sub_1C0E18094()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 32) + 16))();
}

uint64_t sub_1C0E18104()
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(v0 + 32) + 8) + 96))();
}

uint64_t sub_1C0E18178()
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(v0 + 32) + 8) + 88))();
}

uint64_t FormatFontWidth.rawValue.getter()
{
  uint64_t result = 0x6D6F436172746C75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6D6F436172747865;
      break;
    case 2:
      uint64_t result = 0x73736572706D6F63;
      break;
    case 3:
      uint64_t result = 0x6E6F436172747865;
      break;
    case 4:
      uint64_t result = 0x65736E65646E6F63;
      break;
    case 5:
      uint64_t result = 0x646E6F43696D6573;
      break;
    case 6:
      uint64_t result = 0x647261646E617473;
      break;
    case 7:
      uint64_t result = 0x61707845696D6573;
      break;
    case 8:
      uint64_t result = 0x6465646E61707865;
      break;
    case 9:
      uint64_t result = 0x7078456172747865;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0E18350(unsigned __int8 *a1, char *a2)
{
  return sub_1C1491ED0(*a1, *a2);
}

unint64_t sub_1C0E18360()
{
  unint64_t result = qword_1EA1A7BD8;
  if (!qword_1EA1A7BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7BD8);
  }
  return result;
}

uint64_t sub_1C0E183B4()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0E183FC()
{
  return sub_1C044B170();
}

uint64_t sub_1C0E18404()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0E18448@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = FormatFontWidth.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1C0E18470(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C0E184A0();
  unint64_t result = sub_1BFC403CC();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0E184A0()
{
  unint64_t result = qword_1EA1A7BE0;
  if (!qword_1EA1A7BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7BE0);
  }
  return result;
}

unint64_t sub_1C0E184F4(uint64_t a1)
{
  unint64_t result = sub_1C0E1851C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0E1851C()
{
  unint64_t result = qword_1EA1A7BE8;
  if (!qword_1EA1A7BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7BE8);
  }
  return result;
}

unint64_t sub_1C0E18570(void *a1)
{
  a1[1] = sub_1BFC92E60();
  a1[2] = sub_1C08FBAE4();
  unint64_t result = sub_1C0E18360();
  a1[3] = result;
  return result;
}

uint64_t sub_1C0E185A8(void *a1)
{
  return FormatFontWidth.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatFontWidth()
{
  return &type metadata for FormatFontWidth;
}

uint64_t FormatGroupNodeDataLayoutAttributes.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatGroupNodeDataLayoutAttributes.layoutIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatGroupNodeDataLayoutAttributes.nodeIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatGroupNodeDataLayoutAttributes.layoutAttributes.getter()
{
  return swift_retain();
}

double FormatGroupNodeDataLayoutAttributes.frame.getter()
{
  return *(double *)(v0 + 72);
}

uint64_t FormatGroupNodeDataLayoutAttributes.resizing.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 104);
  return swift_retain();
}

uint64_t FormatGroupNodeDataLayoutAttributes.zIndex.getter()
{
  return *(void *)(v0 + 112);
}

unint64_t FormatGroupNodeDataLayoutAttributes.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 120);
  *a1 = v2;
  return sub_1BFE6FA30(v2);
}

uint64_t FormatGroupNodeDataLayoutAttributes.isUserInteractionEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + 128);
}

uint64_t FormatGroupNodeDataLayoutAttributes.contextLayoutOptions.getter()
{
  return swift_retain();
}

void FormatGroupNodeDataLayoutAttributes.accessibilityRole.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 152);
  *(void *)a1 = *(void *)(v1 + 144);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t FormatGroupNodeDataLayoutAttributes.maskLayoutAttributes.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[20];
  uint64_t v3 = v1[21];
  uint64_t v4 = v1[22];
  uint64_t v5 = v1[23];
  uint64_t v6 = v1[24];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  return sub_1C0499BB4(v2, v3, v4, v5);
}

uint64_t FormatGroupNodeDataLayoutAttributes.style.getter()
{
  return swift_retain();
}

uint64_t FormatGroupNodeDataLayoutAttributes.auxViewRequirements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatGroupNodeDataLayoutAttributes.__allocating_init(layoutAttributes:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:maskLayoutAttributes:style:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4, char a5, uint64_t a6, uint64_t *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v17 = swift_allocObject();
  FormatGroupNodeDataLayoutAttributes.init(layoutAttributes:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:maskLayoutAttributes:style:)(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  return v17;
}

uint64_t FormatGroupNodeDataLayoutAttributes.init(layoutAttributes:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:maskLayoutAttributes:style:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4, char a5, uint64_t a6, uint64_t *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10 = *a2;
  uint64_t v11 = *a4;
  uint64_t v12 = *a7;
  char v13 = *((unsigned char *)a7 + 8);
  uint64_t v14 = *(void *)(a8 + 32);
  uint64_t v15 = *(void *)(a1 + 56);
  *(void *)(v9 + 16) = *(void *)(a1 + 48);
  *(void *)(v9 + 24) = v15;
  uint64_t v16 = *(void *)(a1 + 72);
  *(void *)(v9 + 32) = *(void *)(a1 + 64);
  *(void *)(v9 + 40) = v16;
  uint64_t v17 = *(void *)(a1 + 88);
  *(void *)(v9 + 48) = *(void *)(a1 + 80);
  *(void *)(v9 + 56) = v17;
  *(void *)(v9 + 64) = a1;
  long long v18 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v9 + 72) = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v9 + 88) = v18;
  *(void *)(v9 + 104) = v10;
  *(void *)(v9 + 112) = a3;
  *(void *)(v9 + 120) = v11;
  *(unsigned char *)(v9 + 128) = a5;
  *(void *)(v9 + 136) = a6;
  *(void *)(v9 + 144) = v12;
  *(unsigned char *)(v9 + 152) = v13;
  long long v19 = *(_OWORD *)(a8 + 16);
  *(_OWORD *)(v9 + 160) = *(_OWORD *)a8;
  *(_OWORD *)(v9 + 176) = v19;
  *(void *)(v9 + 192) = v14;
  *(void *)(v9 + 200) = a9;
  *(void *)(v9 + 208) = MEMORY[0x1E4FBC870];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v9;
}

uint64_t FormatGroupNodeDataLayoutAttributes.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_1BFF0056C(*(void *)(v0 + 120));
  swift_release();
  sub_1C0499C24(*(void *)(v0 + 160), *(void *)(v0 + 168), *(void *)(v0 + 176), *(void *)(v0 + 184));
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatGroupNodeDataLayoutAttributes.__deallocating_deinit()
{
  FormatGroupNodeDataLayoutAttributes.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0E18904()
{
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatGroupNodeDataLayoutAttributes(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatGroupNodeDataLayoutAttributes);
}

uint64_t dispatch thunk of FormatGroupNodeDataLayoutAttributes.__allocating_init(layoutAttributes:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:maskLayoutAttributes:style:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t sub_1C0E18944(char *a1, char *a2)
{
  return sub_1C1490914(*a1, *a2);
}

uint64_t sub_1C0E18950()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0E189C0()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0E18A14()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0E18A80@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1C0E18AE0(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6567616D69;
  if (*v1) {
    uint64_t v2 = 0x6F65646976;
  }
  *a1 = v2;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_1C0E18B10()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0E18B70()
{
  return sub_1C151EAEC();
}

uint64_t sub_1C0E18BC0()
{
  uint64_t v1 = 0x73746365666665;
  if (*v0 != 1) {
    uint64_t v1 = 0x6165724165666173;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6564496567616D69;
  }
}

uint64_t sub_1C0E18C28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0E1F2C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0E18C50(uint64_t a1)
{
  unint64_t v2 = sub_1C0E1D68C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0E18C8C(uint64_t a1)
{
  unint64_t v2 = sub_1C0E1D68C();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C0E18CC8@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1C0E1CAE4(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    a2[2] = v7[0];
    double result = *(double *)((char *)v7 + 9);
    *(_OWORD *)((char *)a2 + 41) = *(_OWORD *)((char *)v7 + 9);
  }
  return result;
}

unint64_t sub_1C0E18D14()
{
  unint64_t result = 0x6564496F65646976;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0x73746365666665;
      break;
    case 3:
      unint64_t result = 0x6165724165666173;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0E18DB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0E1F440(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0E18DDC(uint64_t a1)
{
  unint64_t v2 = sub_1C0E1D734();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0E18E18(uint64_t a1)
{
  unint64_t v2 = sub_1C0E1D734();
  return MEMORY[0x1F41862B0](a1, v2);
}

__n128 sub_1C0E18E54@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0E1CD98(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v7[0];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 57) = *(_OWORD *)((char *)v7 + 9);
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_1C0E18EA4(uint64_t a1)
{
  unint64_t v2 = sub_1C0E1D5E4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0E18EE0(uint64_t a1)
{
  unint64_t v2 = sub_1C0E1D5E4();
  return MEMORY[0x1F41862B0](a1, v2);
}

_OWORD *sub_1C0E18F1C@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  __n128 result = (_OWORD *)sub_1C0E1D0DC(a1, (uint64_t)v5);
  if (!v2) {
    return sub_1C0E1D5BC(v5, a2);
  }
  return result;
}

uint64_t sub_1C0E18F64()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0E18FB4()
{
  return sub_1C151E77C();
}

uint64_t sub_1C0E18FC8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0E19014@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1C0E19068(void *a1@<X8>)
{
  *a1 = 0x6567616D69;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_1C0E19080()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0E190E0()
{
  uint64_t result = 0x6564496567616D69;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x73746365666665;
      break;
    case 2:
      uint64_t result = 0x6F697469646E6F63;
      break;
    case 3:
      uint64_t result = 0x6165724165666173;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0E19180@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0E1F0D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0E191A8(uint64_t a1)
{
  unint64_t v2 = sub_1C0E1D860();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0E191E4(uint64_t a1)
{
  unint64_t v2 = sub_1C0E1D860();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C0E19220@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1C0E1C42C(a1, v8);
  if (!v2)
  {
    long long v5 = v12;
    a2[4] = v11;
    a2[5] = v5;
    a2[6] = v13[0];
    *(_OWORD *)((char *)a2 + 105) = *(_OWORD *)((char *)v13 + 9);
    long long v6 = v8[1];
    *a2 = v8[0];
    a2[1] = v6;
    double result = *(double *)&v9;
    long long v7 = v10;
    a2[2] = v9;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_1C0E1927C(uint64_t a1)
{
  unint64_t v2 = sub_1C0E1D7B8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0E192B8(uint64_t a1)
{
  unint64_t v2 = sub_1C0E1D7B8();
  return MEMORY[0x1F41862B0](a1, v2);
}

_OWORD *sub_1C0E192F4@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  double result = sub_1C0E1C8A4(a1, v5);
  if (!v2) {
    return sub_1C0E1D788(v5, a2);
  }
  return result;
}

uint64_t sub_1C0E1933C()
{
  if (*v0) {
    return 0x746867696568;
  }
  else {
    return 0x6874646977;
  }
}

uint64_t sub_1C0E19370@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0E1EFF4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0E19398(uint64_t a1)
{
  unint64_t v2 = sub_1C0E1F6CC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0E193D4(uint64_t a1)
{
  unint64_t v2 = sub_1C0E1F6CC();
  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1C0E19410(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v4 = sub_1C0E1C22C(a1);
  if (!v2)
  {
    *(double *)a2 = v4;
    *(void *)(a2 + 8) = v5;
  }
}

uint64_t sub_1C0E1943C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C1490BD4(*a1, *a2);
}

uint64_t sub_1C0E19448()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0E194E4()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0E1956C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0E19604@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDE4FB8();
  *a1 = result;
  return result;
}

void sub_1C0E1963C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE500000000000000;
  unint64_t v4 = 0xE400000000000000;
  uint64_t v5 = 1702521203;
  if (v2 != 1)
  {
    uint64_t v5 = 0x617053726F6C6F63;
    unint64_t v4 = 0xEA00000000006563;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x7465737361;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1C0E19694()
{
  uint64_t v1 = 1702521203;
  if (*v0 != 1) {
    uint64_t v1 = 0x617053726F6C6F63;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7465737361;
  }
}

uint64_t sub_1C0E196E8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDE4FB8();
  *a1 = result;
  return result;
}

uint64_t sub_1C0E19718(uint64_t a1)
{
  unint64_t v2 = sub_1C0E1DAFC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0E19754(uint64_t a1)
{
  unint64_t v2 = sub_1C0E1DAFC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0E19790@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  sub_1C0E1DA98(0, &qword_1EB85C8D8, MEMORY[0x1E4FABB30], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v35 = (char *)&v30 - v4;
  uint64_t v34 = sub_1C1519E9C();
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  BOOL v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0E1F66C(0, &qword_1EB85E088, (void (*)(void))sub_1C0E1DAFC);
  uint64_t v36 = v7;
  uint64_t v33 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  long long v9 = (char *)&v30 - v8;
  uint64_t v10 = type metadata accessor for LayeredMedia.ImageResource();
  MEMORY[0x1F4188790](v10);
  long long v12 = (uint64_t *)((char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0E1DAFC();
  char v13 = v37;
  sub_1C1520EBC();
  if (v13) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v30 = v10;
  uint64_t v37 = v12;
  uint64_t v14 = v35;
  uint64_t v15 = (uint64_t)a1;
  uint64_t v16 = v33;
  uint64_t v17 = v34;
  LOBYTE(v38) = 0;
  uint64_t v18 = sub_1C152069C();
  uint64_t v20 = v37;
  *uint64_t v37 = v18;
  v20[1] = v21;
  char v39 = 1;
  sub_1C0E1DB50();
  sub_1C15206EC();
  *((_OWORD *)v20 + 1) = v38;
  LOBYTE(v38) = 2;
  sub_1C0E1DBA4(&qword_1EB85C8D0, MEMORY[0x1E4FABB30]);
  uint64_t v22 = (uint64_t)v14;
  uint64_t v23 = v17;
  uint64_t v24 = v36;
  sub_1C15205FC();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v24);
  uint64_t v25 = v32;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v22, 1, v23) == 1)
  {
    uint64_t v26 = v6;
    (*(void (**)(char *, void, uint64_t))(v25 + 104))(v6, *MEMORY[0x1E4FABB28], v23);
    sub_1C0E1DBEC(v22);
    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 32);
  }
  else
  {
    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 32);
    uint64_t v26 = v6;
    v27(v6, v22, v23);
  }
  uint64_t v28 = v31;
  uint64_t v29 = (uint64_t)v37;
  v27((char *)v37 + *(int *)(v30 + 24), (uint64_t)v26, v23);
  sub_1C0E1DC78(v29, v28);
  __swift_destroy_boxed_opaque_existential_1(v15);
  return sub_1C0E1DCDC(v29);
}

uint64_t sub_1C0E19C18@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0E19790(a1, a2);
}

uint64_t sub_1C0E19C30(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C149098C(*a1, *a2);
}

uint64_t sub_1C0E19C3C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0E19CF8()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0E19DA0()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0E19E58@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDE4FB8();
  *a1 = result;
  return result;
}

void sub_1C0E19E90(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEB0000000076346DLL;
  unint64_t v4 = 0xE900000000000034;
  uint64_t v5 = 0x706D2F6F65646976;
  if (v2 != 1)
  {
    uint64_t v5 = 0x75712F6F65646976;
    unint64_t v4 = 0xEF656D69746B6369;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x2D782F6F65646976;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1C0E19F08()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0E19F68(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C1490AD0(*a1, *a2);
}

uint64_t sub_1C0E19F74()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0E1A00C()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0E1A090()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0E1A124@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDE4FB8();
  *a1 = result;
  return result;
}

void sub_1C0E1A15C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE500000000000000;
  unint64_t v4 = 0xE400000000000000;
  uint64_t v5 = 1702521203;
  if (v2 != 1)
  {
    uint64_t v5 = 0x65707954656D696DLL;
    unint64_t v4 = 0xE800000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x7465737361;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1C0E1A1B0()
{
  uint64_t v1 = 1702521203;
  if (*v0 != 1) {
    uint64_t v1 = 0x65707954656D696DLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7465737361;
  }
}

uint64_t sub_1C0E1A200@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFDE4FB8();
  *a1 = result;
  return result;
}

uint64_t sub_1C0E1A230(uint64_t a1)
{
  unint64_t v2 = sub_1C0E1DD38();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0E1A26C(uint64_t a1)
{
  unint64_t v2 = sub_1C0E1DD38();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C0E1A2A8@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0E1BFF4(a1, (uint64_t)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(unsigned char *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1C0E1A2F0()
{
  uint64_t result = 1702060386;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x73726579616CLL;
      break;
    case 2:
      uint64_t v2 = 0x526567616D69;
      goto LABEL_5;
    case 3:
      uint64_t v2 = 0x526F65646976;
LABEL_5:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x7365000000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0E1A378@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0E1D3D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0E1A3A0(uint64_t a1)
{
  unint64_t v2 = sub_1C0E1AAFC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0E1A3DC(uint64_t a1)
{
  unint64_t v2 = sub_1C0E1AAFC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t LayeredMedia.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v54 = a2;
  sub_1C0E1F66C(0, &qword_1EB85E080, (void (*)(void))sub_1C0E1AAFC);
  uint64_t v55 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)&v39 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0E1AAFC();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v52 = a1;
  uint64_t v53 = v5;
  char v67 = 0;
  sub_1C0E1AB50();
  sub_1C15206EC();
  uint64_t v8 = v57;
  uint64_t v10 = v58;
  uint64_t v9 = v59;
  uint64_t v45 = v7;
  uint64_t v12 = v60;
  uint64_t v11 = v61;
  uint64_t v50 = v56;
  uint64_t v51 = v62;
  uint64_t v13 = v64;
  uint64_t v47 = v63;
  int v14 = v65;
  sub_1BFC6CA08(0, &qword_1EB85DEC8);
  char v67 = 1;
  int v66 = v14;
  uint64_t v49 = v13;
  uint64_t v46 = v8;
  uint64_t v15 = v8;
  uint64_t v44 = v10;
  uint64_t v16 = v45;
  uint64_t v48 = v11;
  uint64_t v17 = v11;
  uint64_t v18 = v55;
  sub_1C0E1ABA4(v50, v15, v10, v9, v12, v17, v51, v47, v13, v14);
  sub_1C0E1AF78((unint64_t *)&unk_1EB85DED0, &qword_1EB85DEC8, (uint64_t)&type metadata for LayeredMedia.Layer, (void (*)(void))sub_1C0E1ABE8);
  sub_1C15206EC();
  uint64_t v40 = v12;
  uint64_t v41 = v9;
  uint64_t v19 = v50;
  uint64_t v20 = v56;
  sub_1C0E1AC3C();
  char v67 = 2;
  sub_1C0E1AD20();
  swift_bridgeObjectRetain();
  uint64_t v39 = 0;
  sub_1C152065C();
  uint64_t v42 = v20;
  uint64_t v21 = v56;
  sub_1C0E1AE5C();
  char v67 = 3;
  sub_1C0E1AED4();
  swift_bridgeObjectRetain();
  sub_1C152065C();
  uint64_t v43 = v21;
  (*(void (**)(char *, uint64_t))(v53 + 8))(v16, v18);
  uint64_t v55 = v56;
  LOBYTE(v14) = v66;
  uint64_t v23 = v19;
  uint64_t v25 = v46;
  uint64_t v24 = v47;
  uint64_t v26 = v44;
  uint64_t v27 = v41;
  uint64_t v28 = v40;
  uint64_t v29 = v48;
  sub_1C0E1ABA4(v23, v46, v44, v41, v40, v48, v51, v47, v49, v66);
  swift_bridgeObjectRetain();
  char v38 = v14;
  uint64_t v30 = v49;
  uint64_t v31 = v50;
  uint64_t v32 = v25;
  uint64_t v33 = v51;
  sub_1C09A1858(v50, v32, v26, v27, v28, v29, v51, v24, v49, v38);
  uint64_t v34 = v54;
  uint64_t v35 = v46;
  *uint64_t v54 = v31;
  v34[1] = v35;
  v34[2] = v26;
  v34[3] = v27;
  v34[4] = v28;
  v34[5] = v29;
  uint64_t v36 = v47;
  v34[6] = v33;
  v34[7] = v36;
  v34[8] = v30;
  LOBYTE(v33) = v66;
  *((unsigned char *)v34 + 72) = v66;
  uint64_t v37 = v43;
  v34[10] = v42;
  v34[11] = v37;
  v34[12] = v55;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
  sub_1C09A1858(v50, v46, v26, v27, v28, v29, v51, v36, v49, v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1C0E1AAFC()
{
  unint64_t result = qword_1EB85CF30;
  if (!qword_1EB85CF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85CF30);
  }
  return result;
}

unint64_t sub_1C0E1AB50()
{
  unint64_t result = qword_1EB85D0D8;
  if (!qword_1EB85D0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D0D8);
  }
  return result;
}

uint64_t sub_1C0E1ABA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  if (a10 < 0) {
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

unint64_t sub_1C0E1ABE8()
{
  unint64_t result = qword_1EB85D090;
  if (!qword_1EB85D090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D090);
  }
  return result;
}

void sub_1C0E1AC3C()
{
  if (!qword_1EB85DE68)
  {
    sub_1C0E1DA98(255, &qword_1EB85DEA8, (uint64_t (*)(uint64_t))type metadata accessor for LayeredMedia.ImageResource, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1C151E41C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85DE68);
    }
  }
}

uint64_t type metadata accessor for LayeredMedia.ImageResource()
{
  uint64_t result = qword_1EB85CF68;
  if (!qword_1EB85CF68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1C0E1AD20()
{
  unint64_t result = qword_1EB85DE70;
  if (!qword_1EB85DE70)
  {
    sub_1C0E1AC3C();
    sub_1C0E1AD98();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85DE70);
  }
  return result;
}

unint64_t sub_1C0E1AD98()
{
  unint64_t result = qword_1EB85DEB0;
  if (!qword_1EB85DEB0)
  {
    sub_1C0E1DA98(255, &qword_1EB85DEA8, (uint64_t (*)(uint64_t))type metadata accessor for LayeredMedia.ImageResource, MEMORY[0x1E4FBB320]);
    sub_1C0E1DBA4(&qword_1EB85CF60, (void (*)(uint64_t))type metadata accessor for LayeredMedia.ImageResource);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85DEB0);
  }
  return result;
}

void sub_1C0E1AE5C()
{
  if (!qword_1EB85DE80)
  {
    sub_1BFC6CA08(255, &qword_1EB85DEB8);
    unint64_t v0 = sub_1C151E41C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85DE80);
    }
  }
}

unint64_t sub_1C0E1AED4()
{
  unint64_t result = qword_1EB85DE88;
  if (!qword_1EB85DE88)
  {
    sub_1C0E1AE5C();
    sub_1C0E1AF78(&qword_1EB85DEC0, &qword_1EB85DEB8, (uint64_t)&type metadata for LayeredMedia.VideoResource, (void (*)(void))sub_1C0E1AFF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85DE88);
  }
  return result;
}

uint64_t sub_1C0E1AF78(unint64_t *a1, unint64_t *a2, uint64_t a3, void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFC6CA08(255, a2);
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0E1AFF0()
{
  unint64_t result = qword_1EB85D028;
  if (!qword_1EB85D028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D028);
  }
  return result;
}

uint64_t sub_1C0E1B044@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return LayeredMedia.init(from:)(a1, a2);
}

uint64_t destroy for LayeredMedia(uint64_t a1)
{
  sub_1C09A1858(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(unsigned char *)(a1 + 72));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LayeredMedia(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v14 = *(void *)(a2 + 64);
  char v15 = *(unsigned char *)(a2 + 72);
  sub_1C0E1ABA4(*(void *)a2, v5, v6, v7, v8, v9, v10, v11, v14, v15);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v14;
  *(unsigned char *)(a1 + 72) = v15;
  uint64_t v12 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v12;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LayeredMedia(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v23 = *(void *)(a2 + 64);
  char v24 = *(unsigned char *)(a2 + 72);
  sub_1C0E1ABA4(*(void *)a2, v5, v6, v7, v8, v9, v10, v11, v23, v24);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  uint64_t v20 = *(void *)(a1 + 64);
  char v21 = *(unsigned char *)(a1 + 72);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v23;
  *(unsigned char *)(a1 + 72) = v24;
  sub_1C09A1858(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for LayeredMedia(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 64);
  char v5 = *(unsigned char *)(a2 + 72);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t v12 = *(void *)(a1 + 48);
  uint64_t v13 = *(void *)(a1 + 56);
  uint64_t v14 = *(void *)(a1 + 64);
  char v15 = *(unsigned char *)(a1 + 72);
  long long v16 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v16;
  long long v17 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v17;
  *(void *)(a1 + 64) = v4;
  *(unsigned char *)(a1 + 72) = v5;
  sub_1C09A1858(v6, v7, v8, v9, v10, v11, v12, v13, v14, v15);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LayeredMedia(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unsigned int v2 = *(_DWORD *)(a1 + 57);
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

double storeEnumTagSinglePayload for LayeredMedia(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      double result = 0.0;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      *(void *)(a1 + 48) = 0;
      *(void *)(a1 + 56) = (unint64_t)-a2 << 8;
      *(void *)(a1 + 64) = 0;
      *(unsigned char *)(a1 + 72) = 0;
      return result;
    }
    *(unsigned char *)(a1 + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LayeredMedia()
{
  return &type metadata for LayeredMedia;
}

uint64_t initializeWithCopy for LayeredMedia.VideoResource(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LayeredMedia.VideoResource(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for LayeredMedia.VideoResource(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for LayeredMedia.VideoResource()
{
  return &type metadata for LayeredMedia.VideoResource;
}

void *sub_1C0E1B53C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = sub_1C1519E9C();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_1C0E1B62C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1C1519E9C();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t sub_1C0E1B6A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_1C1519E9C();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *sub_1C0E1B744(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C1519E9C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_1C0E1B7F0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1C1519E9C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_1C0E1B86C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C1519E9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1C0E1B900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0E1B914);
}

uint64_t sub_1C0E1B914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C1519E9C();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C0E1B9C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0E1B9D8);
}

uint64_t sub_1C0E1B9D8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C1519E9C();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C0E1BA80()
{
  uint64_t result = sub_1C1519E9C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C0E1BB2C(uint64_t a1)
{
  return a1;
}

ValueMetadata *type metadata accessor for LayeredMedia.Layer()
{
  return &type metadata for LayeredMedia.Layer;
}

uint64_t destroy for LayeredMedia.BaseLayer(uint64_t a1)
{
  return sub_1C09A1858(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(unsigned char *)(a1 + 72));
}

uint64_t initializeWithCopy for LayeredMedia.BaseLayer(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  sub_1C0E1ABA4(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, *(unsigned char *)(a2 + 72));
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(unsigned char *)(a1 + 72) = v13;
  return a1;
}

uint64_t assignWithCopy for LayeredMedia.BaseLayer(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  sub_1C0E1ABA4(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, *(unsigned char *)(a2 + 72));
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  uint64_t v20 = *(void *)(a1 + 64);
  char v21 = *(unsigned char *)(a1 + 72);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(unsigned char *)(a1 + 72) = v23;
  sub_1C09A1858(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  return a1;
}

uint64_t assignWithTake for LayeredMedia.BaseLayer(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 64);
  char v4 = *(unsigned char *)(a2 + 72);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v12 = *(void *)(a1 + 56);
  uint64_t v13 = *(void *)(a1 + 64);
  char v14 = *(unsigned char *)(a1 + 72);
  long long v15 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v15;
  long long v16 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v16;
  *(void *)(a1 + 64) = v3;
  *(unsigned char *)(a1 + 72) = v4;
  sub_1C09A1858(v5, v7, v6, v8, v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for LayeredMedia.BaseLayer(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 73)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unsigned int v2 = *(_DWORD *)(a1 + 57);
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

double storeEnumTagSinglePayload for LayeredMedia.BaseLayer(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(unsigned char *)(a1 + 72) = 0;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 73) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      double result = 0.0;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      *(void *)(a1 + 48) = 0;
      *(void *)(a1 + 56) = (unint64_t)-a2 << 8;
      *(void *)(a1 + 64) = 0;
      *(unsigned char *)(a1 + 72) = 0;
      return result;
    }
    *(unsigned char *)(a1 + 73) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1C0E1BE90(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 72) >> 7;
}

uint64_t sub_1C0E1BE9C(uint64_t result)
{
  *(unsigned char *)(result + 72) &= ~0x80u;
  return result;
}

uint64_t sub_1C0E1BEAC(uint64_t result, char a2)
{
  char v2 = *(unsigned char *)(result + 72) & 1 | (a2 << 7);
  *(void *)(result + 56) = *(unsigned __int8 *)(result + 56);
  *(unsigned char *)(result + 72) = v2;
  return result;
}

ValueMetadata *type metadata accessor for LayeredMedia.BaseLayer()
{
  return &type metadata for LayeredMedia.BaseLayer;
}

ValueMetadata *type metadata accessor for LayeredMedia.CodingKeys()
{
  return &type metadata for LayeredMedia.CodingKeys;
}

unint64_t sub_1C0E1BEF0()
{
  unint64_t result = qword_1EA1A7BF0;
  if (!qword_1EA1A7BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7BF0);
  }
  return result;
}

unint64_t sub_1C0E1BF48()
{
  unint64_t result = qword_1EB85CF40;
  if (!qword_1EB85CF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85CF40);
  }
  return result;
}

unint64_t sub_1C0E1BFA0()
{
  unint64_t result = qword_1EB85CF38;
  if (!qword_1EB85CF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85CF38);
  }
  return result;
}

uint64_t sub_1C0E1BFF4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  sub_1C0E1F66C(0, &qword_1EB85E090, (void (*)(void))sub_1C0E1DD38);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v18 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0E1DD38();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v18;
  LOBYTE(v19) = 0;
  uint64_t v12 = sub_1C152069C();
  uint64_t v14 = v13;
  char v22 = 1;
  sub_1C0E1DB50();
  sub_1C15205FC();
  if (v21) {
    double v15 = 1.79769313e308;
  }
  else {
    double v15 = v19;
  }
  if (v21) {
    double v16 = 1.79769313e308;
  }
  else {
    double v16 = v20;
  }
  char v22 = 2;
  sub_1C0E1DD8C();
  sub_1C15205FC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  char v17 = LOBYTE(v19);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *(void *)uint64_t v10 = v12;
  *(void *)(v10 + 8) = v14;
  *(double *)(v10 + 16) = v15;
  *(double *)(v10 + 24) = v16;
  *(unsigned char *)(v10 + 32) = v17;
  return result;
}

double sub_1C0E1C22C(void *a1)
{
  sub_1C0E1F66C(0, &qword_1EB85E098, (void (*)(void))sub_1C0E1F6CC);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v10 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0E1F6CC();
  sub_1C1520EBC();
  if (!v1)
  {
    char v11 = 0;
    sub_1BFE7E344();
    sub_1C15206EC();
    double v2 = v12;
    char v11 = 1;
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v2;
}

void *sub_1C0E1C42C@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v36 = a2;
  sub_1C0E1F66C(0, &qword_1EB85E0A0, (void (*)(void))sub_1C0E1D860);
  uint64_t v63 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v24 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0E1D860();
  sub_1C1520EBC();
  if (v2) {
    return (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v8 = v5;
  uint64_t v9 = v36;
  LOBYTE(v44) = 0;
  uint64_t v10 = sub_1C152069C();
  uint64_t v12 = v11;
  LOBYTE(v37) = 1;
  sub_1C0E1D6E0();
  swift_bridgeObjectRetain();
  sub_1C152065C();
  uint64_t v30 = v45;
  uint64_t v31 = v44;
  uint64_t v29 = v46;
  int v28 = BYTE8(v46);
  LOBYTE(v37) = 2;
  sub_1C0E1D8FC();
  sub_1C152065C();
  char v58 = 3;
  uint64_t v26 = v45;
  uint64_t v27 = v44;
  long long v25 = v46;
  uint64_t v34 = v48;
  uint64_t v35 = v47;
  uint64_t v32 = v50;
  uint64_t v33 = v49;
  sub_1C0E1D950(v44, v45, v46, *((uint64_t *)&v46 + 1), v47, v48);
  sub_1BFE7E344();
  sub_1C152065C();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v63);
  uint64_t v63 = v59;
  char v61 = v60;
  *(void *)&long long v37 = v10;
  *((void *)&v37 + 1) = v12;
  *(void *)&long long v38 = v31;
  *((void *)&v38 + 1) = v30;
  *(void *)&long long v39 = v29;
  BYTE8(v39) = v28;
  *(void *)&long long v40 = v27;
  *((void *)&v40 + 1) = v26;
  uint64_t v13 = v25;
  long long v41 = v25;
  uint64_t v14 = v34;
  *(void *)&long long v42 = v35;
  *((void *)&v42 + 1) = v34;
  uint64_t v15 = v32;
  *(void *)&v43[0] = v33;
  *((void *)&v43[0] + 1) = v32;
  *(void *)&v43[1] = v59;
  BYTE8(v43[1]) = v60;
  sub_1C0E1D998(&v37);
  uint64_t v16 = v13;
  uint64_t v17 = v35;
  uint64_t v18 = v14;
  uint64_t v19 = v33;
  sub_1C0E1D8B4(v27, v26, v16, *((uint64_t *)&v25 + 1), v35, v18);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  uint64_t v44 = v10;
  uint64_t v45 = v12;
  *(void *)&long long v46 = v31;
  *((void *)&v46 + 1) = v30;
  uint64_t v47 = v29;
  LOBYTE(v48) = v28;
  *(_DWORD *)((char *)&v48 + 1) = v62[0];
  HIDWORD(v48) = *(_DWORD *)((char *)v62 + 3);
  uint64_t v49 = v27;
  uint64_t v50 = v26;
  long long v51 = v25;
  uint64_t v52 = v17;
  uint64_t v53 = v34;
  uint64_t v54 = v19;
  uint64_t v55 = v15;
  uint64_t v56 = v63;
  char v57 = v61;
  uint64_t result = sub_1C0E1DA18(&v44);
  long long v21 = v42;
  v9[4] = v41;
  v9[5] = v21;
  v9[6] = v43[0];
  *(_OWORD *)((char *)v9 + 105) = *(_OWORD *)((char *)v43 + 9);
  long long v22 = v38;
  *uint64_t v9 = v37;
  v9[1] = v22;
  long long v23 = v40;
  _OWORD v9[2] = v39;
  v9[3] = v23;
  return result;
}

_OWORD *sub_1C0E1C8A4@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  long long v25 = a2;
  sub_1C0E1F66C(0, &qword_1EB85E0A8, (void (*)(void))sub_1C0E1D7B8);
  uint64_t v5 = v4;
  uint64_t v12 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v11 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0E1D7B8();
  sub_1C1520EBC();
  if (v2) {
    return (_OWORD *)__swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v8 = v12;
  uint64_t v9 = v25;
  sub_1C0E1D80C();
  sub_1C15206EC();
  sub_1BFC66384((uint64_t)a1, (uint64_t)v22);
  sub_1C0E1C42C(v22, v23);
  long long v17 = v23[4];
  long long v18 = v23[5];
  v19[0] = v24[0];
  *(_OWORD *)((char *)v19 + 9) = *(_OWORD *)((char *)v24 + 9);
  long long v13 = v23[0];
  long long v14 = v23[1];
  long long v15 = v23[2];
  long long v16 = v23[3];
  (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v5);
  v20[4] = v17;
  uint64_t v20[5] = v18;
  v21[0] = v19[0];
  *(_OWORD *)((char *)v21 + 9) = *(_OWORD *)((char *)v19 + 9);
  v20[0] = v13;
  v20[1] = v14;
  _OWORD v20[2] = v15;
  v20[3] = v16;
  nullsub_1();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1C0E1D788(v20, v9);
}

uint64_t sub_1C0E1CAE4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  sub_1C0E1F66C(0, &qword_1EB85F0D8, (void (*)(void))sub_1C0E1D68C);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v18 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0E1D68C();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v21;
  LOBYTE(v22) = 0;
  uint64_t v11 = sub_1C152069C();
  uint64_t v13 = v12;
  char v27 = 1;
  sub_1C0E1D6E0();
  swift_bridgeObjectRetain();
  sub_1C152065C();
  uint64_t v19 = v23;
  uint64_t v20 = v22;
  uint64_t v18 = v24;
  int v26 = v25;
  char v27 = 2;
  sub_1BFE7E344();
  sub_1C152065C();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v14 = v22;
  char v15 = v23;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)uint64_t v10 = v11;
  *(void *)(v10 + 8) = v13;
  uint64_t v17 = v19;
  *(void *)(v10 + 16) = v20;
  *(void *)(v10 + 24) = v17;
  *(void *)(v10 + 32) = v18;
  *(unsigned char *)(v10 + 40) = v26;
  *(void *)(v10 + 48) = v14;
  *(unsigned char *)(v10 + 56) = v15;
  return result;
}

uint64_t sub_1C0E1CD98@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  char v27 = a2;
  sub_1C0E1F66C(0, &qword_1EB85E0B0, (void (*)(void))sub_1C0E1D734);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v22 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0E1D734();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  LOBYTE(v28) = 0;
  uint64_t v10 = v5;
  uint64_t v11 = sub_1C152069C();
  uint64_t v13 = v12;
  LOBYTE(v28) = 1;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1C152069C();
  uint64_t v16 = v15;
  uint64_t v25 = v14;
  char v33 = 2;
  sub_1C0E1D6E0();
  swift_bridgeObjectRetain();
  uint64_t v26 = v16;
  sub_1C152065C();
  uint64_t v23 = v29;
  uint64_t v24 = v28;
  uint64_t v22 = v30;
  int v32 = v31;
  char v33 = 3;
  sub_1BFE7E344();
  sub_1C152065C();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v10);
  uint64_t v17 = v28;
  LOBYTE(v10) = v29;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  uint64_t v18 = v26;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v20 = v27;
  *char v27 = v11;
  v20[1] = v13;
  _OWORD v20[2] = v25;
  v20[3] = v18;
  uint64_t v21 = v23;
  v20[4] = v24;
  uint64_t v20[5] = v21;
  long long v20[6] = v22;
  *((unsigned char *)v20 + 56) = v32;
  v20[8] = v17;
  *((unsigned char *)v20 + 72) = v10;
  return result;
}

uint64_t sub_1C0E1D0DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a2;
  sub_1C0E1F66C(0, &qword_1EB85E0B8, (void (*)(void))sub_1C0E1D5E4);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v25 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0E1D5E4();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v40;
  sub_1C0E1D638();
  sub_1C15206EC();
  uint64_t v10 = v5;
  if (v31[0])
  {
    sub_1BFC66384((uint64_t)a1, (uint64_t)v31);
    sub_1C0E1CD98(v31, v36);
    uint64_t v26 = v36[1];
    uint64_t v30 = v36[2];
    uint64_t v29 = v36[3];
    uint64_t v28 = v36[4];
    uint64_t v12 = v36[6];
    uint64_t v27 = v36[5];
    uint64_t v13 = v37;
    uint64_t v14 = v38;
    uint64_t v15 = v10;
    char v16 = v39;
    uint64_t v17 = v8;
    uint64_t v18 = v36[0];
    (*(void (**)(char *, uint64_t))(v6 + 8))(v17, v15);
    char v19 = v16 | 0x80;
    uint64_t v20 = v26;
  }
  else
  {
    sub_1BFC66384((uint64_t)a1, (uint64_t)v31);
    sub_1C0E1CAE4(v31, (uint64_t)v32);
    uint64_t v30 = v32[2];
    uint64_t v29 = v32[3];
    uint64_t v28 = v32[4];
    uint64_t v27 = v33;
    uint64_t v12 = v34;
    uint64_t v13 = v35;
    uint64_t v21 = v8;
    uint64_t v18 = v32[0];
    uint64_t v22 = v10;
    uint64_t v20 = v32[1];
    (*(void (**)(char *, uint64_t))(v6 + 8))(v21, v22);
    uint64_t v14 = 0;
    char v19 = 0;
  }
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *(void *)uint64_t v9 = v18;
  *(void *)(v9 + 8) = v20;
  uint64_t v23 = v29;
  *(void *)(v9 + 16) = v30;
  *(void *)(v9 + 24) = v23;
  uint64_t v24 = v27;
  *(void *)(v9 + 32) = v28;
  *(void *)(v9 + 40) = v24;
  *(void *)(v9 + 48) = v12;
  *(void *)(v9 + 56) = v13;
  *(void *)(v9 + 64) = v14;
  *(unsigned char *)(v9 + 72) = v19;
  return result;
}

uint64_t sub_1C0E1D3D8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1702060386 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73726579616CLL && a2 == 0xE600000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7365526567616D69 && a2 == 0xEE0073656372756FLL || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7365526F65646976 && a2 == 0xEE0073656372756FLL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

_OWORD *sub_1C0E1D5BC(_OWORD *a1, _OWORD *a2)
{
  *a2 = *a1;
  long long v2 = a1[1];
  long long v3 = a1[2];
  long long v4 = a1[3];
  *(_OWORD *)((char *)a2 + 57) = *(_OWORD *)((char *)a1 + 57);
  a2[2] = v3;
  a2[3] = v4;
  a2[1] = v2;
  return a2;
}

unint64_t sub_1C0E1D5E4()
{
  unint64_t result = qword_1EB85D0C0;
  if (!qword_1EB85D0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D0C0);
  }
  return result;
}

unint64_t sub_1C0E1D638()
{
  unint64_t result = qword_1EB85D0B8;
  if (!qword_1EB85D0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D0B8);
  }
  return result;
}

unint64_t sub_1C0E1D68C()
{
  unint64_t result = qword_1EB85F030;
  if (!qword_1EB85F030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85F030);
  }
  return result;
}

unint64_t sub_1C0E1D6E0()
{
  unint64_t result = qword_1EB85D440;
  if (!qword_1EB85D440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D440);
  }
  return result;
}

unint64_t sub_1C0E1D734()
{
  unint64_t result = qword_1EB85D098;
  if (!qword_1EB85D098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D098);
  }
  return result;
}

_OWORD *sub_1C0E1D788(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  long long v4 = a1[3];
  a2[2] = a1[2];
  a2[3] = v4;
  *a2 = v2;
  a2[1] = v3;
  long long v5 = a1[4];
  long long v6 = a1[5];
  long long v7 = a1[6];
  *(_OWORD *)((char *)a2 + 105) = *(long long *)((char *)a1 + 105);
  a2[5] = v6;
  a2[6] = v7;
  a2[4] = v5;
  return a2;
}

unint64_t sub_1C0E1D7B8()
{
  unint64_t result = qword_1EB85D078;
  if (!qword_1EB85D078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D078);
  }
  return result;
}

unint64_t sub_1C0E1D80C()
{
  unint64_t result = qword_1EB85D070;
  if (!qword_1EB85D070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D070);
  }
  return result;
}

unint64_t sub_1C0E1D860()
{
  unint64_t result = qword_1EB85D050;
  if (!qword_1EB85D050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D050);
  }
  return result;
}

uint64_t sub_1C0E1D8B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a6 != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1C0E1D8FC()
{
  unint64_t result = qword_1EB85D738;
  if (!qword_1EB85D738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D738);
  }
  return result;
}

uint64_t sub_1C0E1D950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a6 != 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void *sub_1C0E1D998(void *a1)
{
  uint64_t v2 = a1[6];
  uint64_t v3 = a1[7];
  uint64_t v4 = a1[8];
  uint64_t v5 = a1[9];
  uint64_t v6 = a1[10];
  uint64_t v7 = a1[11];
  swift_bridgeObjectRetain();
  sub_1C0E1D950(v2, v3, v4, v5, v6, v7);
  return a1;
}

void *sub_1C0E1DA18(void *a1)
{
  uint64_t v2 = a1[6];
  uint64_t v3 = a1[7];
  uint64_t v4 = a1[8];
  uint64_t v5 = a1[9];
  uint64_t v6 = a1[10];
  uint64_t v7 = a1[11];
  swift_bridgeObjectRelease();
  sub_1C0E1D8B4(v2, v3, v4, v5, v6, v7);
  return a1;
}

void sub_1C0E1DA98(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1C0E1DAFC()
{
  unint64_t result = qword_1EB85CF48;
  if (!qword_1EB85CF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85CF48);
  }
  return result;
}

unint64_t sub_1C0E1DB50()
{
  unint64_t result = qword_1EB85D048;
  if (!qword_1EB85D048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D048);
  }
  return result;
}

uint64_t sub_1C0E1DBA4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0E1DBEC(uint64_t a1)
{
  sub_1C0E1DA98(0, &qword_1EB85C8D8, MEMORY[0x1E4FABB30], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0E1DC78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LayeredMedia.ImageResource();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0E1DCDC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LayeredMedia.ImageResource();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1C0E1DD38()
{
  unint64_t result = qword_1EB85D000;
  if (!qword_1EB85D000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D000);
  }
  return result;
}

unint64_t sub_1C0E1DD8C()
{
  unint64_t result = qword_1EB85D020;
  if (!qword_1EB85D020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D020);
  }
  return result;
}

ValueMetadata *type metadata accessor for LayeredMedia.VideoResource.CodingKeys()
{
  return &type metadata for LayeredMedia.VideoResource.CodingKeys;
}

ValueMetadata *type metadata accessor for LayeredMedia.ImageResource.CodingKeys()
{
  return &type metadata for LayeredMedia.ImageResource.CodingKeys;
}

ValueMetadata *type metadata accessor for LayeredMedia.Layer.ImageLayer.CodingKeys()
{
  return &type metadata for LayeredMedia.Layer.ImageLayer.CodingKeys;
}

ValueMetadata *type metadata accessor for LayeredMedia.Layer.LayerType()
{
  return &type metadata for LayeredMedia.Layer.LayerType;
}

ValueMetadata *type metadata accessor for LayeredMedia.Layer.CodingKeys()
{
  return &type metadata for LayeredMedia.Layer.CodingKeys;
}

unsigned char *_s8NewsFeed12LayeredMediaV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0E1DF04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LayeredMedia.BaseLayer.VideoLayer.CodingKeys()
{
  return &type metadata for LayeredMedia.BaseLayer.VideoLayer.CodingKeys;
}

ValueMetadata *type metadata accessor for LayeredMedia.BaseLayer.ImageLayer.CodingKeys()
{
  return &type metadata for LayeredMedia.BaseLayer.ImageLayer.CodingKeys;
}

ValueMetadata *type metadata accessor for LayeredMedia.BaseLayer.LayerType()
{
  return &type metadata for LayeredMedia.BaseLayer.LayerType;
}

unsigned char *_s8NewsFeed12LayeredMediaV5LayerO9LayerTypeOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C0E1DFFCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LayeredMedia.BaseLayer.CodingKeys()
{
  return &type metadata for LayeredMedia.BaseLayer.CodingKeys;
}

unsigned char *_s8NewsFeed12LayeredMediaV13VideoResourceV8MIMETypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0E1E100);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LayeredMedia.VideoResource.MIMEType()
{
  return &type metadata for LayeredMedia.VideoResource.MIMEType;
}

ValueMetadata *type metadata accessor for LayeredMedia.Size()
{
  return &type metadata for LayeredMedia.Size;
}

uint64_t _s8NewsFeed12LayeredMediaV5LayerO10ImageLayerVwxx_0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 88);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s8NewsFeed12LayeredMediaV5LayerO10ImageLayerVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  uint64_t v5 = (_OWORD *)(a1 + 48);
  uint64_t v6 = a2 + 48;
  uint64_t v7 = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  if (v7 == 1)
  {
    long long v8 = *(_OWORD *)(v6 + 16);
    _OWORD *v5 = *(_OWORD *)v6;
    *(_OWORD *)(a1 + 64) = v8;
    long long v9 = *(_OWORD *)(v6 + 48);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(v6 + 32);
    *(_OWORD *)(a1 + 96) = v9;
  }
  else
  {
    *(void *)uint64_t v5 = *(void *)v6;
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(v6 + 8);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = v7;
    uint64_t v10 = *(void *)(a2 + 104);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  return a1;
}

uint64_t _s8NewsFeed12LayeredMediaV5LayerO10ImageLayerVwca_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = (_OWORD *)(a1 + 48);
  uint64_t v6 = (long long *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 88);
  if (*(void *)(a1 + 88) == 1)
  {
    if (v7 == 1)
    {
      long long v8 = *v6;
      long long v9 = *(_OWORD *)(a2 + 64);
      long long v10 = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v10;
      _OWORD *v5 = v8;
      *(_OWORD *)(a1 + 64) = v9;
    }
    else
    {
      uint64_t v14 = *(void *)v6;
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      *(void *)uint64_t v5 = v14;
      uint64_t v15 = *(void *)(a2 + 64);
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      *(void *)(a1 + 64) = v15;
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v7 == 1)
  {
    sub_1C0E1BB2C(a1 + 48);
    long long v11 = *(_OWORD *)(a2 + 96);
    long long v13 = *v6;
    long long v12 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v11;
    _OWORD *v5 = v13;
    *(_OWORD *)(a1 + 64) = v12;
  }
  else
  {
    uint64_t v16 = *(void *)v6;
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    *(void *)uint64_t v5 = v16;
    uint64_t v17 = *(void *)(a2 + 64);
    *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
    *(void *)(a1 + 64) = v17;
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v18 = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 112) = v18;
  return a1;
}

uint64_t _s8NewsFeed12LayeredMediaV5LayerO10ImageLayerVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  uint64_t v5 = (void *)(a1 + 48);
  uint64_t v6 = (void *)(a2 + 48);
  if (*(void *)(a1 + 88) != 1)
  {
    uint64_t v7 = *(void *)(a2 + 88);
    if (v7 != 1)
    {
      void *v5 = *v6;
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v7;
      swift_bridgeObjectRelease();
      uint64_t v10 = *(void *)(a2 + 104);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = v10;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1C0E1BB2C(a1 + 48);
  }
  long long v8 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)v6;
  *(_OWORD *)(a1 + 64) = v8;
  long long v9 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v9;
LABEL_6:
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  return a1;
}

ValueMetadata *type metadata accessor for LayeredMedia.Layer.ImageLayer()
{
  return &type metadata for LayeredMedia.Layer.ImageLayer;
}

uint64_t initializeWithCopy for LayeredMedia.BaseLayer.VideoLayer(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LayeredMedia.BaseLayer.VideoLayer(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v5;
  return a1;
}

uint64_t assignWithTake for LayeredMedia.BaseLayer.VideoLayer(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

ValueMetadata *type metadata accessor for LayeredMedia.BaseLayer.VideoLayer()
{
  return &type metadata for LayeredMedia.BaseLayer.VideoLayer;
}

uint64_t initializeWithCopy for LayeredMedia.BaseLayer.ImageLayer(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LayeredMedia.BaseLayer.ImageLayer(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v5;
  return a1;
}

uint64_t assignWithTake for LayeredMedia.BaseLayer.ImageLayer(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

ValueMetadata *type metadata accessor for LayeredMedia.BaseLayer.ImageLayer()
{
  return &type metadata for LayeredMedia.BaseLayer.ImageLayer;
}

unint64_t sub_1C0E1E764()
{
  unint64_t result = qword_1EA1A7BF8;
  if (!qword_1EA1A7BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7BF8);
  }
  return result;
}

unint64_t sub_1C0E1E7BC()
{
  unint64_t result = qword_1EA1A7C00;
  if (!qword_1EA1A7C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7C00);
  }
  return result;
}

unint64_t sub_1C0E1E814()
{
  unint64_t result = qword_1EA1A7C08;
  if (!qword_1EA1A7C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7C08);
  }
  return result;
}

unint64_t sub_1C0E1E86C()
{
  unint64_t result = qword_1EA1A7C10;
  if (!qword_1EA1A7C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7C10);
  }
  return result;
}

unint64_t sub_1C0E1E8C4()
{
  unint64_t result = qword_1EA1A7C18;
  if (!qword_1EA1A7C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7C18);
  }
  return result;
}

unint64_t sub_1C0E1E91C()
{
  unint64_t result = qword_1EA1A7C20;
  if (!qword_1EA1A7C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7C20);
  }
  return result;
}

unint64_t sub_1C0E1E974()
{
  unint64_t result = qword_1EA1A7C28;
  if (!qword_1EA1A7C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7C28);
  }
  return result;
}

unint64_t sub_1C0E1E9CC()
{
  unint64_t result = qword_1EA1A7C30;
  if (!qword_1EA1A7C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7C30);
  }
  return result;
}

unint64_t sub_1C0E1EA24()
{
  unint64_t result = qword_1EA1A7C38;
  if (!qword_1EA1A7C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7C38);
  }
  return result;
}

unint64_t sub_1C0E1EA7C()
{
  unint64_t result = qword_1EA1A7C40;
  if (!qword_1EA1A7C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7C40);
  }
  return result;
}

unint64_t sub_1C0E1EAD4()
{
  unint64_t result = qword_1EB85D010;
  if (!qword_1EB85D010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D010);
  }
  return result;
}

unint64_t sub_1C0E1EB2C()
{
  unint64_t result = qword_1EB85D008;
  if (!qword_1EB85D008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D008);
  }
  return result;
}

unint64_t sub_1C0E1EB84()
{
  unint64_t result = qword_1EB85CF58;
  if (!qword_1EB85CF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85CF58);
  }
  return result;
}

unint64_t sub_1C0E1EBDC()
{
  unint64_t result = qword_1EB85CF50;
  if (!qword_1EB85CF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85CF50);
  }
  return result;
}

unint64_t sub_1C0E1EC34()
{
  unint64_t result = qword_1EB85D060;
  if (!qword_1EB85D060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D060);
  }
  return result;
}

unint64_t sub_1C0E1EC8C()
{
  unint64_t result = qword_1EB85D058;
  if (!qword_1EB85D058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D058);
  }
  return result;
}

unint64_t sub_1C0E1ECE4()
{
  unint64_t result = qword_1EB85D088;
  if (!qword_1EB85D088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D088);
  }
  return result;
}

unint64_t sub_1C0E1ED3C()
{
  unint64_t result = qword_1EB85D080;
  if (!qword_1EB85D080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D080);
  }
  return result;
}

unint64_t sub_1C0E1ED94()
{
  unint64_t result = qword_1EB85D0A8;
  if (!qword_1EB85D0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D0A8);
  }
  return result;
}

unint64_t sub_1C0E1EDEC()
{
  unint64_t result = qword_1EB85D0A0;
  if (!qword_1EB85D0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D0A0);
  }
  return result;
}

unint64_t sub_1C0E1EE44()
{
  unint64_t result = qword_1EB85F040;
  if (!qword_1EB85F040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85F040);
  }
  return result;
}

unint64_t sub_1C0E1EE9C()
{
  unint64_t result = qword_1EB85F038;
  if (!qword_1EB85F038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85F038);
  }
  return result;
}

unint64_t sub_1C0E1EEF4()
{
  unint64_t result = qword_1EB85D0D0;
  if (!qword_1EB85D0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D0D0);
  }
  return result;
}

unint64_t sub_1C0E1EF4C()
{
  unint64_t result = qword_1EB85D0C8;
  if (!qword_1EB85D0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D0C8);
  }
  return result;
}

unint64_t sub_1C0E1EFA0()
{
  unint64_t result = qword_1EB85D0B0;
  if (!qword_1EB85D0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D0B0);
  }
  return result;
}

uint64_t sub_1C0E1EFF4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6874646977 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746867696568 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C0E1F0D8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6564496567616D69 && a2 == 0xEF7265696669746ELL;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73746365666665 && a2 == 0xE700000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F697469646E6F63 && a2 == 0xEA0000000000736ELL || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6165724165666173 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1C0E1F2C4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6564496567616D69 && a2 == 0xEF7265696669746ELL;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73746365666665 && a2 == 0xE700000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6165724165666173 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1C0E1F440(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6564496F65646976 && a2 == 0xEF7265696669746ELL;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C1629450 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73746365666665 && a2 == 0xE700000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6165724165666173 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t sub_1C0E1F618()
{
  unint64_t result = qword_1EB85D068;
  if (!qword_1EB85D068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D068);
  }
  return result;
}

void sub_1C0E1F66C(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  if (!*a2)
  {
    a3();
    unint64_t v4 = sub_1C152072C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1C0E1F6CC()
{
  unint64_t result = qword_1EB85D030;
  if (!qword_1EB85D030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D030);
  }
  return result;
}

unint64_t sub_1C0E1F720()
{
  unint64_t result = qword_1EB85D018;
  if (!qword_1EB85D018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D018);
  }
  return result;
}

unsigned char *_s8NewsFeed12LayeredMediaV9BaseLayerO9LayerTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0E1F840);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LayeredMedia.Size.CodingKeys()
{
  return &type metadata for LayeredMedia.Size.CodingKeys;
}

unint64_t sub_1C0E1F87C()
{
  unint64_t result = qword_1EA1A7C48;
  if (!qword_1EA1A7C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7C48);
  }
  return result;
}

unint64_t sub_1C0E1F8D4()
{
  unint64_t result = qword_1EB85D040;
  if (!qword_1EB85D040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D040);
  }
  return result;
}

unint64_t sub_1C0E1F92C()
{
  unint64_t result = qword_1EB85D038;
  if (!qword_1EB85D038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D038);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for FormatLayoutViewRoute(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v7 = type metadata accessor for FeedItem(0);
    int v8 = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      switch(v8)
      {
        case 0:
          uint64_t v9 = a2[1];
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = v9;
          uint64_t v10 = a2[3];
          *(void *)(a1 + 16) = a2[2];
          *(void *)(a1 + 24) = v10;
          *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
          long long v11 = a2 + 5;
          unint64_t v12 = a2[6];
          swift_bridgeObjectRetain();
          if (v12 >= 0x11)
          {
            *(void *)(a1 + 40) = *v11;
            *(void *)(a1 + 48) = v12;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 40) = *(_OWORD *)v11;
          }
          goto LABEL_391;
        case 1:
          uint64_t v92 = a2[1];
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = v92;
          uint64_t v93 = a2[3];
          *(void *)(a1 + 16) = a2[2];
          *(void *)(a1 + 24) = v93;
          *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
          uint64_t v94 = a2[6];
          *(void *)(a1 + 40) = a2[5];
          *(void *)(a1 + 48) = v94;
          uint64_t v95 = a2[8];
          *(void *)(a1 + 56) = a2[7];
          *(void *)(a1 + 64) = v95;
          CGFloat v96 = a2 + 9;
          unint64_t v97 = a2[10];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v97 >= 0x11)
          {
            *(void *)(a1 + 72) = *v96;
            *(void *)(a1 + 80) = v97;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 72) = *(_OWORD *)v96;
          }
          goto LABEL_391;
        case 2:
          uint64_t v18 = a2[1];
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = v18;
          char v19 = (int *)type metadata accessor for FeedBannerAd();
          uint64_t v20 = v19[5];
          uint64_t v21 = a1 + v20;
          uint64_t v22 = (uint64_t)a2 + v20;
          uint64_t v23 = sub_1C151DBAC();
          uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16);
          swift_bridgeObjectRetain();
          v24(v21, v22, v23);
          *(void *)(a1 + v19[6]) = *(uint64_t *)((char *)a2 + v19[6]);
          uint64_t v25 = v19[7];
          uint64_t v26 = a1 + v25;
          uint64_t v27 = (uint64_t)a2 + v25;
          *(void *)uint64_t v26 = *(void *)v27;
          *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
          uint64_t v28 = v19[8];
          uint64_t v29 = a1 + v28;
          uint64_t v30 = (uint64_t)a2 + v28;
          unint64_t v31 = *(void *)(v30 + 8);
          if (v31 >= 0x11) {
            goto LABEL_76;
          }
          *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
          goto LABEL_391;
        case 3:
          uint64_t v1166 = v7;
          uint64_t v98 = a2[1];
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = v98;
          *(void *)(a1 + 16) = a2[2];
          *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
          uint64_t v99 = a2[5];
          *(void *)(a1 + 32) = a2[4];
          *(void *)(a1 + 40) = v99;
          *(void *)(a1 + 48) = a2[6];
          *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
          v1156 = (int *)type metadata accessor for FeedHeadline(0);
          uint64_t v100 = v1156[10];
          id v101 = (unsigned char *)(a1 + v100);
          uint64_t v102 = (uint64_t)a2 + v100;
          *id v101 = *((unsigned char *)a2 + v100);
          v101[1] = *((unsigned char *)a2 + v100 + 1);
          v1148 = (int *)type metadata accessor for FeedHeadline.State(0);
          uint64_t v103 = v1148[6];
          __dst = &v101[v103];
          id v104 = (char *)(v102 + v103);
          id v105 = (int *)type metadata accessor for SharedItem();
          v1122 = (void *)*((void *)v105 - 1);
          id v106 = (unsigned int (*)(char *, uint64_t, int *))v1122[6];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          if (v106(v104, 1, v105))
          {
            uint64_t v107 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(__dst, v104, *(void *)(*(void *)(v107 - 8) + 64));
          }
          else
          {
            uint64_t v358 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v358 - 8) + 16))(__dst, v104, v358);
            __dst[v105[5]] = v104[v105[5]];
            uint64_t v359 = v105[6];
            v360 = *(void **)&v104[v359];
            *(void *)&__dst[v359] = v360;
            uint64_t v361 = v105[7];
            v1139 = &__dst[v361];
            v1118 = &v104[v361];
            uint64_t v362 = sub_1C1515FDC();
            v363 = *(void (**)(char *, char *, uint64_t))(*(void *)(v362 - 8) + 16);
            id v364 = v360;
            v363(v1139, v1118, v362);
            ((void (*)(char *, void, uint64_t, int *))v1122[7])(__dst, 0, 1, v105);
          }
          v101[v1148[7]] = *(unsigned char *)(v102 + v1148[7]);
          v101[v1148[8]] = *(unsigned char *)(v102 + v1148[8]);
          v101[v1148[9]] = *(unsigned char *)(v102 + v1148[9]);
          v101[v1148[10]] = *(unsigned char *)(v102 + v1148[10]);
          uint64_t v365 = v1156[11];
          v366 = (void *)(a1 + v365);
          v367 = (char *)a2 + v365;
          uint64_t v368 = sub_1C151D2DC();
          uint64_t v369 = *(void *)(v368 - 8);
          uint64_t v7 = v1166;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v369 + 48))(v367, 1, v368))
          {
            sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
            memcpy(v366, v367, *(void *)(*(void *)(v370 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(v369 + 16))(v366, v367, v368);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v369 + 56))(v366, 0, 1, v368);
          }
          uint64_t v395 = v1156[12];
          v396 = (void *)(a1 + v395);
          v397 = (uint64_t *)((char *)a2 + v395);
          unint64_t v398 = v397[1];
          if (v398 >= 0x11)
          {
            void *v396 = *v397;
            v396[1] = v398;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)v396 = *(_OWORD *)v397;
          }
          uint64_t v399 = v1156[13];
          unint64_t v400 = *(uint64_t *)((char *)a2 + v399);
          if (v400 >= 2)
          {
            if (v400 == 2)
            {
              *(void *)(a1 + v399) = 2;
            }
            else
            {
              *(void *)(a1 + v399) = v400;
              swift_unknownObjectRetain();
            }
          }
          else
          {
            *(void *)(a1 + v399) = v400;
          }
          uint64_t v479 = v1156[14];
          v480 = *(void **)((char *)a2 + v479);
          *(void *)(a1 + v479) = v480;
          id v481 = v480;
          goto LABEL_391;
        case 4:
          uint64_t v32 = a2[1];
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = v32;
          *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
          unsigned __int8 v33 = a2 + 3;
          unint64_t v34 = a2[4];
          if (v34 >= 0x11)
          {
            *(void *)(a1 + 24) = *v33;
            *(void *)(a1 + 32) = v34;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 24) = *(_OWORD *)v33;
          }
          uint64_t v224 = a2[6];
          *(void *)(a1 + 40) = a2[5];
          *(void *)(a1 + 48) = v224;
          v225 = (int *)type metadata accessor for FeedWebEmbed();
          uint64_t v226 = v225[8];
          uint64_t v227 = a1 + v226;
          uint64_t v228 = (uint64_t)a2 + v226;
          uint64_t v229 = sub_1C1515FDC();
          uint64_t v230 = *(void *)(v229 - 8);
          v231 = *(void (**)(uint64_t, uint64_t, uint64_t))(v230 + 16);
          swift_bridgeObjectRetain();
          v231(v227, v228, v229);
          v1160 = v225;
          uint64_t v232 = v225[9];
          v233 = (void *)(a1 + v232);
          v234 = (char *)a2 + v232;
          __dstc = (void (*)(char *, char *, void *))v231;
          uint64_t v1168 = v7;
          v1150 = (void *)v229;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v230 + 48))((uint64_t)a2 + v232, 1, v229))
          {
            sub_1BFEEF2C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
            memcpy(v233, v234, *(void *)(*(void *)(v235 - 8) + 64));
          }
          else
          {
            v231((uint64_t)v233, (uint64_t)v234, v229);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v230 + 56))(v233, 0, 1, v229);
          }
          *(void *)(a1 + v225[10]) = *(uint64_t *)((char *)a2 + v225[10]);
          *(void *)(a1 + v225[11]) = *(uint64_t *)((char *)a2 + v225[11]);
          uint64_t v310 = v225[12];
          v311 = (void *)(a1 + v310);
          v312 = (uint64_t *)((char *)a2 + v310);
          v313 = (int *)type metadata accessor for FeedHeadline(0);
          uint64_t v314 = *((void *)v313 - 1);
          v315 = *(unsigned int (**)(void *, uint64_t, int *))(v314 + 48);
          swift_retain();
          swift_retain();
          if (v315(v312, 1, v313))
          {
            sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
            memcpy(v311, v312, *(void *)(*(void *)(v316 - 8) + 64));
          }
          else
          {
            uint64_t v1114 = v314;
            uint64_t v334 = v312[1];
            void *v311 = *v312;
            v311[1] = v334;
            v311[2] = v312[2];
            *((unsigned char *)v311 + 24) = *((unsigned char *)v312 + 24);
            uint64_t v335 = v312[5];
            v311[4] = v312[4];
            v311[5] = v335;
            v311[6] = v312[6];
            *((unsigned char *)v311 + 56) = *((unsigned char *)v312 + 56);
            uint64_t v336 = v313[10];
            v1124 = (char *)v311;
            v337 = (char *)v311 + v336;
            v338 = (char *)v312 + v336;
            unsigned char *v337 = *((unsigned char *)v312 + v336);
            v337[1] = *((unsigned char *)v312 + v336 + 1);
            uint64_t v339 = type metadata accessor for FeedHeadline.State(0);
            uint64_t v340 = *(int *)(v339 + 24);
            v1109 = &v337[v340];
            v1111 = (int *)v339;
            v341 = &v338[v340];
            v342 = (int *)type metadata accessor for SharedItem();
            uint64_t v1106 = *((void *)v342 - 1);
            v343 = *(unsigned int (**)(char *, uint64_t, int *))(v1106 + 48);
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_unknownObjectRetain();
            if (v343(v341, 1, v342))
            {
              uint64_t v344 = type metadata accessor for FeedItem.SharedState(0);
              memcpy(v1109, v341, *(void *)(*(void *)(v344 - 8) + 64));
            }
            else
            {
              uint64_t v531 = sub_1C151631C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v531 - 8) + 16))(v1109, v341, v531);
              v1109[v342[5]] = v341[v342[5]];
              uint64_t v532 = v342[6];
              v533 = *(void **)&v341[v532];
              *(void *)&v1109[v532] = v533;
              uint64_t v534 = v342[7];
              v535 = &v1109[v534];
              v536 = &v341[v534];
              id v537 = v533;
              __dstc(v535, v536, v1150);
              (*(void (**)(char *, void, uint64_t, int *))(v1106 + 56))(v1109, 0, 1, v342);
            }
            v337[v1111[7]] = v338[v1111[7]];
            v337[v1111[8]] = v338[v1111[8]];
            v337[v1111[9]] = v338[v1111[9]];
            v337[v1111[10]] = v338[v1111[10]];
            uint64_t v538 = v313[11];
            v539 = &v1124[v538];
            v540 = (char *)v312 + v538;
            uint64_t v541 = sub_1C151D2DC();
            uint64_t v542 = *(void *)(v541 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v542 + 48))(v540, 1, v541))
            {
              sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
              memcpy(v539, v540, *(void *)(*(void *)(v543 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v542 + 16))(v539, v540, v541);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v542 + 56))(v539, 0, 1, v541);
            }
            uint64_t v557 = v313[12];
            v558 = &v1124[v557];
            v559 = (void *)((char *)v312 + v557);
            unint64_t v560 = v559[1];
            if (v560 >= 0x11)
            {
              *(void *)v558 = *v559;
              *((void *)v558 + 1) = v560;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)v558 = *(_OWORD *)v559;
            }
            uint64_t v561 = v313[13];
            unint64_t v562 = *(void *)((char *)v312 + v561);
            if (v562 >= 2)
            {
              if (v562 == 2)
              {
                *(void *)&v1124[v561] = 2;
              }
              else
              {
                *(void *)&v1124[v561] = v562;
                swift_unknownObjectRetain();
              }
            }
            else
            {
              *(void *)&v1124[v561] = v562;
            }
            uint64_t v613 = v313[14];
            v614 = *(void **)((char *)v312 + v613);
            *(void *)&v1124[v613] = v614;
            v615 = *(void (**)(char *, void, uint64_t, int *))(v1114 + 56);
            id v616 = v614;
            v615(v1124, 0, 1, v313);
          }
          uint64_t v617 = v1160[13];
          v618 = (void *)(a1 + v617);
          v619 = (uint64_t *)((char *)a2 + v617);
          uint64_t v620 = type metadata accessor for WebEmbedDataVisualization();
          uint64_t v621 = *(void *)(v620 - 8);
          uint64_t v7 = v1168;
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v621 + 48))(v619, 1, v620))
          {
            sub_1BFEEF2C0(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
            memcpy(v618, v619, *(void *)(*(void *)(v622 - 8) + 64));
          }
          else
          {
            int v623 = swift_getEnumCaseMultiPayload();
            uint64_t v624 = *v619;
            if (v623 == 1)
            {
              uint64_t v625 = v619[1];
              void *v618 = v624;
              v618[1] = v625;
              uint64_t v626 = type metadata accessor for GenericDataVisualization();
              uint64_t v627 = *(int *)(v626 + 20);
              v628 = (char *)v618 + v627;
              v629 = (char *)v619 + v627;
              swift_bridgeObjectRetain();
              v630 = v629;
              uint64_t v7 = v1168;
              __dstc(v628, v630, v1150);
              *(void *)((char *)v618 + *(int *)(v626 + 24)) = *(uint64_t *)((char *)v619 + *(int *)(v626 + 24));
              swift_bridgeObjectRetain();
            }
            else
            {
              void *v618 = v624;
              swift_retain();
            }
            swift_storeEnumTagMultiPayload();
            (*(void (**)(void *, void, uint64_t, uint64_t))(v621 + 56))(v618, 0, 1, v620);
          }
          *(unsigned char *)(a1 + v1160[14]) = *((unsigned char *)a2 + v1160[14]);
          goto LABEL_391;
        case 5:
          unint64_t v108 = (void *)*a2;
          uint64_t v109 = a2[1];
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = v109;
          *(void *)(a1 + 16) = a2[2];
          *(_WORD *)(a1 + 24) = *((_WORD *)a2 + 12);
          *(void *)(a1 + 32) = a2[4];
          *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
          uint64_t v110 = (void *)a2[7];
          *(void *)(a1 + 48) = a2[6];
          *(void *)(a1 + 56) = v110;
          *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
          uint64_t v111 = a2[10];
          id v112 = v108;
          swift_bridgeObjectRetain();
          id v113 = v110;
          if (v111 == 1)
          {
            long long v114 = *(_OWORD *)(a2 + 11);
            *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
            *(_OWORD *)(a1 + 88) = v114;
            *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 13);
          }
          else
          {
            *(void *)(a1 + 72) = a2[9];
            *(void *)(a1 + 80) = v111;
            uint64_t v250 = a2[12];
            *(void *)(a1 + 88) = a2[11];
            *(void *)(a1 + 96) = v250;
            v252 = (void *)a2[13];
            uint64_t v251 = a2[14];
            *(void *)(a1 + 104) = v252;
            *(void *)(a1 + 112) = v251;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v253 = v252;
          }
          v254 = a2 + 15;
          unint64_t v255 = a2[16];
          if (v255 >= 0x11)
          {
            *(void *)(a1 + 120) = *v254;
            *(void *)(a1 + 128) = v255;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 120) = *(_OWORD *)v254;
          }
          *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
          goto LABEL_391;
        case 6:
          int v115 = *((unsigned __int8 *)a2 + 281);
          if (v115 == 2)
          {
            uint64_t v419 = a2[1];
            *(void *)a1 = *a2;
            *(void *)(a1 + 8) = v419;
            *(void *)(a1 + 16) = a2[2];
            *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
            *(void *)(a1 + 32) = a2[4];
            *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
            uint64_t v420 = a2[7];
            *(void *)(a1 + 48) = a2[6];
            *(void *)(a1 + 56) = v420;
            uint64_t v421 = a2[9];
            *(void *)(a1 + 64) = a2[8];
            *(void *)(a1 + 72) = v421;
            uint64_t v422 = a2[11];
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v422 != 1)
            {
              *(void *)(a1 + 80) = a2[10];
              *(void *)(a1 + 88) = v422;
              uint64_t v499 = a2[15];
              swift_bridgeObjectRetain();
              if (v499)
              {
                uint64_t v500 = a2[16];
                *(void *)(a1 + 120) = v499;
                *(void *)(a1 + 128) = v500;
                (**(void (***)(uint64_t, uint64_t, uint64_t))(v499 - 8))(a1 + 96, (uint64_t)(a2 + 12), v499);
                *(void *)(a1 + 136) = a2[17];
              }
              else
              {
                long long v686 = *((_OWORD *)a2 + 7);
                *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
                *(_OWORD *)(a1 + 112) = v686;
                *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
              }
              *(unsigned char *)(a1 + 144) = *((unsigned char *)a2 + 144);
              goto LABEL_337;
            }
            v423 = (_OWORD *)(a1 + 80);
            v424 = a2 + 10;
            long long v425 = *((_OWORD *)a2 + 8);
            *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
            *(_OWORD *)(a1 + 128) = v425;
            *(unsigned char *)(a1 + 144) = *((unsigned char *)a2 + 144);
          }
          else
          {
            if (v115 != 1)
            {
              v426 = (void *)*a2;
              uint64_t v427 = a2[1];
              *(void *)a1 = *a2;
              *(void *)(a1 + 8) = v427;
              *(void *)(a1 + 16) = a2[2];
              *(_WORD *)(a1 + 24) = *((_WORD *)a2 + 12);
              *(void *)(a1 + 32) = a2[4];
              *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
              v428 = (void *)a2[7];
              *(void *)(a1 + 48) = a2[6];
              *(void *)(a1 + 56) = v428;
              *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
              uint64_t v429 = a2[10];
              id v430 = v426;
              swift_bridgeObjectRetain();
              id v431 = v428;
              if (v429 == 1)
              {
                long long v432 = *(_OWORD *)(a2 + 11);
                *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
                *(_OWORD *)(a1 + 88) = v432;
                *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 13);
              }
              else
              {
                *(void *)(a1 + 72) = a2[9];
                *(void *)(a1 + 80) = v429;
                uint64_t v501 = a2[12];
                *(void *)(a1 + 88) = a2[11];
                *(void *)(a1 + 96) = v501;
                v503 = (void *)a2[13];
                uint64_t v502 = a2[14];
                *(void *)(a1 + 104) = v503;
                *(void *)(a1 + 112) = v502;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                id v504 = v503;
              }
              v505 = a2 + 15;
              unint64_t v506 = a2[16];
              if (v506 >= 0x11)
              {
                *(void *)(a1 + 120) = *v505;
                *(void *)(a1 + 128) = v506;
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(a1 + 120) = *(_OWORD *)v505;
              }
              *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
              goto LABEL_337;
            }
            id v116 = (void *)*a2;
            uint64_t v117 = a2[1];
            *(void *)a1 = *a2;
            *(void *)(a1 + 8) = v117;
            *(void *)(a1 + 16) = a2[2];
            *(_WORD *)(a1 + 24) = *((_WORD *)a2 + 12);
            *(void *)(a1 + 32) = a2[4];
            *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
            uint64_t v118 = (void *)a2[7];
            *(void *)(a1 + 48) = a2[6];
            *(void *)(a1 + 56) = v118;
            *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
            uint64_t v119 = a2[10];
            id v120 = v116;
            swift_bridgeObjectRetain();
            id v121 = v118;
            if (v119 == 1)
            {
              long long v122 = *(_OWORD *)(a2 + 11);
              *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
              *(_OWORD *)(a1 + 88) = v122;
              *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 13);
            }
            else
            {
              *(void *)(a1 + 72) = a2[9];
              *(void *)(a1 + 80) = v119;
              uint64_t v487 = a2[12];
              *(void *)(a1 + 88) = a2[11];
              *(void *)(a1 + 96) = v487;
              v489 = (void *)a2[13];
              uint64_t v488 = a2[14];
              *(void *)(a1 + 104) = v489;
              *(void *)(a1 + 112) = v488;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v490 = v489;
            }
            v491 = a2 + 15;
            unint64_t v492 = a2[16];
            if (v492 >= 0x11)
            {
              *(void *)(a1 + 120) = *v491;
              *(void *)(a1 + 128) = v492;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 120) = *(_OWORD *)v491;
            }
            v424 = a2 + 18;
            v515 = (void *)a2[18];
            *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
            if (v515)
            {
              uint64_t v516 = a2[19];
              uint64_t v517 = a2[20];
              *(void *)(a1 + 144) = v515;
              *(void *)(a1 + 152) = v516;
              *(void *)(a1 + 160) = v517;
              *(_WORD *)(a1 + 168) = *((_WORD *)a2 + 84);
              *(void *)(a1 + 176) = a2[22];
              *(unsigned char *)(a1 + 184) = *((unsigned char *)a2 + 184);
              v518 = (void *)a2[25];
              *(void *)(a1 + 192) = a2[24];
              *(void *)(a1 + 200) = v518;
              *(unsigned char *)(a1 + 208) = *((unsigned char *)a2 + 208);
              uint64_t v519 = a2[28];
              id v520 = v515;
              swift_bridgeObjectRetain();
              id v521 = v518;
              if (v519 == 1)
              {
                long long v522 = *(_OWORD *)(a2 + 29);
                *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 27);
                *(_OWORD *)(a1 + 232) = v522;
                *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 31);
              }
              else
              {
                *(void *)(a1 + 216) = a2[27];
                *(void *)(a1 + 224) = v519;
                uint64_t v577 = a2[30];
                *(void *)(a1 + 232) = a2[29];
                *(void *)(a1 + 240) = v577;
                v579 = (void *)a2[31];
                uint64_t v578 = a2[32];
                *(void *)(a1 + 248) = v579;
                *(void *)(a1 + 256) = v578;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                id v580 = v579;
              }
              v581 = a2 + 33;
              unint64_t v582 = a2[34];
              if (v582 >= 0x11)
              {
                *(void *)(a1 + 264) = *v581;
                *(void *)(a1 + 272) = v582;
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(a1 + 264) = *(_OWORD *)v581;
              }
              *(unsigned char *)(a1 + 280) = *((unsigned char *)a2 + 280);
LABEL_337:
              *(unsigned char *)(a1 + 281) = v115;
              goto LABEL_391;
            }
            v423 = (_OWORD *)(a1 + 144);
            long long v569 = *((_OWORD *)a2 + 16);
            *(_OWORD *)(a1 + 240) = *((_OWORD *)a2 + 15);
            *(_OWORD *)(a1 + 256) = v569;
            *(_OWORD *)(a1 + 265) = *(_OWORD *)((char *)a2 + 265);
            long long v570 = *((_OWORD *)a2 + 12);
            *(_OWORD *)(a1 + 176) = *((_OWORD *)a2 + 11);
            *(_OWORD *)(a1 + 192) = v570;
            long long v571 = *((_OWORD *)a2 + 14);
            *(_OWORD *)(a1 + 208) = *((_OWORD *)a2 + 13);
            *(_OWORD *)(a1 + 224) = v571;
          }
          long long v572 = v424[1];
          _OWORD *v423 = *v424;
          v423[1] = v572;
          goto LABEL_337;
        case 7:
          uint64_t v123 = a2[1];
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = v123;
          *(void *)(a1 + 16) = a2[2];
          *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
          *(void *)(a1 + 32) = a2[4];
          *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
          uint64_t v124 = a2[7];
          *(void *)(a1 + 48) = a2[6];
          *(void *)(a1 + 56) = v124;
          uint64_t v125 = a2[9];
          *(void *)(a1 + 64) = a2[8];
          *(void *)(a1 + 72) = v125;
          uint64_t v126 = a2[11];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v126 == 1)
          {
            long long v127 = *((_OWORD *)a2 + 8);
            *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
            *(_OWORD *)(a1 + 128) = v127;
            *(unsigned char *)(a1 + 144) = *((unsigned char *)a2 + 144);
            long long v128 = *((_OWORD *)a2 + 6);
            *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
            *(_OWORD *)(a1 + 96) = v128;
          }
          else
          {
            *(void *)(a1 + 80) = a2[10];
            *(void *)(a1 + 88) = v126;
            uint64_t v256 = a2[15];
            swift_bridgeObjectRetain();
            if (v256)
            {
              uint64_t v257 = a2[16];
              *(void *)(a1 + 120) = v256;
              *(void *)(a1 + 128) = v257;
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v256 - 8))(a1 + 96, (uint64_t)(a2 + 12), v256);
              *(void *)(a1 + 136) = a2[17];
            }
            else
            {
              long long v485 = *((_OWORD *)a2 + 7);
              *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
              *(_OWORD *)(a1 + 112) = v485;
              *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
            }
            *(unsigned char *)(a1 + 144) = *((unsigned char *)a2 + 144);
          }
          goto LABEL_391;
        case 8:
          uint64_t v1167 = v7;
          uint64_t v129 = a2[1];
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = v129;
          uint64_t v130 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
          uint64_t v131 = (void *)(a1 + v130);
          uint64_t v132 = (uint64_t)a2 + v130;
          uint64_t v133 = *(uint64_t *)((char *)a2 + v130 + 8);
          *uint64_t v131 = *(uint64_t *)((char *)a2 + v130);
          v131[1] = v133;
          uint64_t v134 = *(uint64_t *)((char *)a2 + v130 + 24);
          v131[2] = *(uint64_t *)((char *)a2 + v130 + 16);
          v131[3] = v134;
          uint64_t v1157 = type metadata accessor for FormatCustomItem.Resolved();
          uint64_t v135 = *(int *)(v1157 + 24);
          v1137 = (char *)v131 + v135;
          uint64_t v136 = (const void *)(v132 + v135);
          uint64_t v137 = type metadata accessor for FormatCustomItem.Action();
          __dsta = *(void **)(v137 - 8);
          uint64_t v138 = (unsigned int (*)(const void *, uint64_t, uint64_t))__dsta[6];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v138(v136, 1, v137))
          {
            sub_1BFEEF2C0(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
            memcpy(v1137, v136, *(void *)(*(void *)(v139 - 8) + 64));
          }
          else
          {
            uint64_t v371 = sub_1C1515FDC();
            (*(void (**)(char *, const void *, uint64_t))(*(void *)(v371 - 8) + 16))(v1137, v136, v371);
            ((void (*)(char *, void, uint64_t, uint64_t))__dsta[7])(v1137, 0, 1, v137);
          }
          uint64_t v7 = v1167;
          *(void *)((char *)v131 + *(int *)(v1157 + 28)) = *(void *)(v132 + *(int *)(v1157 + 28));
          swift_bridgeObjectRetain();
          goto LABEL_391;
        case 9:
          uint64_t v35 = a2[1];
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = v35;
          uint64_t v36 = a2[3];
          *(void *)(a1 + 16) = a2[2];
          *(void *)(a1 + 24) = v36;
          uint64_t v37 = a2[7];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v37)
          {
            uint64_t v38 = a2[8];
            *(void *)(a1 + 56) = v37;
            *(void *)(a1 + 64) = v38;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v37 - 8))(a1 + 32, (uint64_t)(a2 + 4), v37);
          }
          else
          {
            long long v300 = *((_OWORD *)a2 + 3);
            *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
            *(_OWORD *)(a1 + 48) = v300;
            *(void *)(a1 + 64) = a2[8];
          }
          v301 = (_OWORD *)(a1 + 72);
          v302 = a2 + 9;
          uint64_t v303 = a2[12];
          if (v303)
          {
            uint64_t v304 = a2[13];
            *(void *)(a1 + 96) = v303;
            *(void *)(a1 + 104) = v304;
            (**(void (***)(_OWORD *, _OWORD *))(v303 - 8))(v301, v302);
          }
          else
          {
            long long v324 = *(_OWORD *)(a2 + 11);
            _OWORD *v301 = *v302;
            *(_OWORD *)(a1 + 88) = v324;
            *(void *)(a1 + 104) = a2[13];
          }
          v325 = (_OWORD *)(a1 + 112);
          v326 = a2 + 14;
          uint64_t v327 = a2[17];
          if (v327)
          {
            uint64_t v328 = a2[18];
            *(void *)(a1 + 136) = v327;
            *(void *)(a1 + 144) = v328;
            (**(void (***)(_OWORD *, _OWORD *))(v327 - 8))(v325, v326);
          }
          else
          {
            long long v356 = *((_OWORD *)a2 + 8);
            _OWORD *v325 = *v326;
            *(_OWORD *)(a1 + 128) = v356;
            *(void *)(a1 + 144) = a2[18];
          }
          goto LABEL_391;
        case 10:
          uint64_t v140 = a2[1];
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = v140;
          uint64_t v141 = (int *)type metadata accessor for FeedEngagementBanner();
          uint64_t v142 = v141[5];
          uint64_t v143 = a1 + v142;
          uint64_t v144 = (uint64_t)a2 + v142;
          uint64_t v145 = sub_1C151959C();
          uint64_t v146 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v145 - 8) + 16);
          swift_bridgeObjectRetain();
          v146(v143, v144, v145);
          *(void *)(a1 + v141[6]) = *(uint64_t *)((char *)a2 + v141[6]);
          uint64_t v147 = v141[7];
          uint64_t v148 = a1 + v147;
          uint64_t v149 = (uint64_t)a2 + v147;
          *(void *)uint64_t v148 = *(void *)v149;
          *(unsigned char *)(v148 + 8) = *(unsigned char *)(v149 + 8);
          uint64_t v150 = v141[8];
          uint64_t v29 = a1 + v150;
          uint64_t v30 = (uint64_t)a2 + v150;
          unint64_t v31 = *(void *)(v30 + 8);
          if (v31 >= 0x11)
          {
LABEL_76:
            *(void *)uint64_t v29 = *(void *)v30;
            *(void *)(v29 + 8) = v31;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
          }
          goto LABEL_391;
        case 11:
          *(void *)a1 = *a2;
          swift_retain();
          goto LABEL_391;
        case 12:
          uint64_t v39 = a2[1];
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = v39;
          uint64_t v40 = a2[3];
          *(void *)(a1 + 16) = a2[2];
          *(void *)(a1 + 24) = v40;
          *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          goto LABEL_391;
        case 13:
          uint64_t v151 = a2[1];
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = v151;
          *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
          id v152 = a2 + 3;
          unint64_t v153 = a2[4];
          if (v153 >= 0x11)
          {
            *(void *)(a1 + 24) = *v152;
            *(void *)(a1 + 32) = v153;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 24) = *(_OWORD *)v152;
          }
          uint64_t v258 = a2[6];
          *(void *)(a1 + 40) = a2[5];
          *(void *)(a1 + 48) = v258;
          v259 = (void *)a2[8];
          *(void *)(a1 + 56) = a2[7];
          *(void *)(a1 + 64) = v259;
          *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
          *(void *)(a1 + 80) = a2[10];
          uint64_t v260 = a2[14];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          id v261 = v259;
          swift_bridgeObjectRetain();
          if (v260)
          {
            uint64_t v262 = a2[15];
            *(void *)(a1 + 112) = v260;
            *(void *)(a1 + 120) = v262;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v260 - 8))(a1 + 88, (uint64_t)(a2 + 11), v260);
          }
          else
          {
            long long v385 = *(_OWORD *)(a2 + 13);
            *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
            *(_OWORD *)(a1 + 104) = v385;
            *(void *)(a1 + 120) = a2[15];
          }
          v386 = (_OWORD *)(a1 + 128);
          v387 = a2 + 16;
          uint64_t v388 = a2[19];
          if (v388)
          {
            uint64_t v389 = a2[20];
            *(void *)(a1 + 152) = v388;
            *(void *)(a1 + 160) = v389;
            (**(void (***)(_OWORD *, _OWORD *))(v388 - 8))(v386, v387);
          }
          else
          {
            long long v407 = *((_OWORD *)a2 + 9);
            _OWORD *v386 = *v387;
            *(_OWORD *)(a1 + 144) = v407;
            *(void *)(a1 + 160) = a2[20];
          }
          v408 = (_OWORD *)(a1 + 168);
          v409 = a2 + 21;
          uint64_t v410 = a2[24];
          if (v410)
          {
            uint64_t v411 = a2[25];
            *(void *)(a1 + 192) = v410;
            *(void *)(a1 + 200) = v411;
            (**(void (***)(_OWORD *, _OWORD *))(v410 - 8))(v408, v409);
          }
          else
          {
            long long v417 = *(_OWORD *)(a2 + 23);
            _OWORD *v408 = *v409;
            *(_OWORD *)(a1 + 184) = v417;
            *(void *)(a1 + 200) = a2[25];
          }
          goto LABEL_391;
        case 14:
          uint64_t v41 = a2[1];
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = v41;
          *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
          long long v42 = a2 + 3;
          unint64_t v43 = a2[4];
          if (v43 >= 0x11)
          {
            *(void *)(a1 + 24) = *v42;
            *(void *)(a1 + 32) = v43;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 24) = *(_OWORD *)v42;
          }
          uint64_t v236 = a2[6];
          *(void *)(a1 + 40) = a2[5];
          *(void *)(a1 + 48) = v236;
          *(void *)(a1 + 56) = a2[7];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          goto LABEL_391;
        case 15:
          uint64_t v154 = a2[1];
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = v154;
          *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
          uint64_t v155 = a2 + 3;
          unint64_t v156 = a2[4];
          if (v156 >= 0x11)
          {
            *(void *)(a1 + 24) = *v155;
            *(void *)(a1 + 32) = v156;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 24) = *(_OWORD *)v155;
          }
          break;
        case 16:
          uint64_t v1165 = v7;
          uint64_t v44 = a2[1];
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = v44;
          uint64_t v45 = a2[3];
          *(void *)(a1 + 16) = a2[2];
          *(void *)(a1 + 24) = v45;
          uint64_t v46 = a2[5];
          *(void *)(a1 + 32) = a2[4];
          *(void *)(a1 + 40) = v46;
          *(_WORD *)(a1 + 48) = *((_WORD *)a2 + 24);
          *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
          uint64_t v47 = a2[10];
          *(void *)(a1 + 72) = a2[9];
          *(void *)(a1 + 80) = v47;
          uint64_t v48 = a2[12];
          *(void *)(a1 + 88) = a2[11];
          *(void *)(a1 + 96) = v48;
          *(void *)(a1 + 104) = a2[13];
          *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
          uint64_t v49 = a2[16];
          *(void *)(a1 + 120) = a2[15];
          *(void *)(a1 + 128) = v49;
          *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
          uint64_t v50 = a2[19];
          *(void *)(a1 + 144) = a2[18];
          *(void *)(a1 + 152) = v50;
          uint64_t v51 = a2[21];
          *(void *)(a1 + 160) = a2[20];
          *(void *)(a1 + 168) = v51;
          *(unsigned char *)(a1 + 184) = *((unsigned char *)a2 + 184);
          *(void *)(a1 + 176) = a2[22];
          uint64_t v52 = a2[25];
          *(void *)(a1 + 192) = a2[24];
          *(void *)(a1 + 200) = v52;
          *(unsigned char *)(a1 + 224) = *((unsigned char *)a2 + 224);
          uint64_t v53 = a2[27];
          *(void *)(a1 + 208) = a2[26];
          *(void *)(a1 + 216) = v53;
          v1135 = a2 + 29;
          unint64_t v54 = a2[30];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v54 >= 0x11)
          {
            *(void *)(a1 + 232) = *v1135;
            *(void *)(a1 + 240) = v54;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 232) = *(_OWORD *)v1135;
          }
          uint64_t v7 = v1165;
          goto LABEL_391;
        default:
          memcpy((void *)a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
          goto LABEL_392;
      }
      uint64_t v263 = a2[6];
      *(void *)(a1 + 40) = a2[5];
      *(void *)(a1 + 48) = v263;
      uint64_t v264 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      uint64_t v265 = a1 + v264;
      uint64_t v266 = (uint64_t)a2 + v264;
      *(void *)(a1 + v264) = *(uint64_t *)((char *)a2 + v264);
      uint64_t v267 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      v268 = (void *)(v265 + v267);
      v269 = (void *)(v266 + v267);
      type metadata accessor for PuzzleStatisticCategory(0);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v1170 = v7;
          uint64_t v453 = type metadata accessor for PuzzleStatisticValue(0);
          int v454 = swift_getEnumCaseMultiPayload();
          if (v454 == 5)
          {
            uint64_t v455 = type metadata accessor for PuzzleStreak();
            uint64_t v456 = *(void *)(v455 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v456 + 48))(v269, 1, v455))
            {
LABEL_331:
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v268, v269, *(void *)(*(void *)(v684 - 8) + 64));
LABEL_352:
              swift_storeEnumTagMultiPayload();
LABEL_353:
              uint64_t v703 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
              uint64_t v704 = *(int *)(v703 + 20);
              v705 = v268;
              v706 = (char *)v268 + v704;
              v707 = (char *)v269 + v704;
              int v708 = swift_getEnumCaseMultiPayload();
              if (v708 == 5)
              {
                uint64_t v709 = type metadata accessor for PuzzleStreak();
                uint64_t v710 = *(void *)(v709 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v710 + 48))(v707, 1, v709))
                {
LABEL_358:
                  sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                  memcpy(v706, v707, *(void *)(*(void *)(v711 - 8) + 64));
LABEL_370:
                  swift_storeEnumTagMultiPayload();
LABEL_371:
                  uint64_t v722 = *(int *)(v703 + 24);
                  v723 = (char *)v705 + v722;
                  v724 = (char *)v269 + v722;
                  int v725 = swift_getEnumCaseMultiPayload();
                  if (v725 == 5)
                  {
                    uint64_t v726 = type metadata accessor for PuzzleStreak();
                    uint64_t v727 = *(void *)(v726 - 8);
                    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v727 + 48))(v724, 1, v726))
                    {
LABEL_376:
                      sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                      memcpy(v723, v724, *(void *)(*(void *)(v728 - 8) + 64));
LABEL_388:
                      swift_storeEnumTagMultiPayload();
                      goto LABEL_389;
                    }
                  }
                  else
                  {
                    if (v725 != 4)
                    {
                      memcpy(v723, v724, *(void *)(*(void *)(v453 - 8) + 64));
LABEL_389:
                      uint64_t v7 = v1170;
                      goto LABEL_390;
                    }
                    uint64_t v726 = type metadata accessor for PuzzleStreak();
                    uint64_t v727 = *(void *)(v726 - 8);
                    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v727 + 48))(v724, 1, v726)) {
                      goto LABEL_376;
                    }
                  }
                  uint64_t v737 = sub_1C151555C();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v737 - 8) + 16))(v723, v724, v737);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v727 + 56))(v723, 0, 1, v726);
                  goto LABEL_388;
                }
              }
              else
              {
                if (v708 != 4)
                {
                  memcpy(v706, v707, *(void *)(*(void *)(v453 - 8) + 64));
                  goto LABEL_371;
                }
                uint64_t v709 = type metadata accessor for PuzzleStreak();
                uint64_t v710 = *(void *)(v709 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v710 + 48))(v707, 1, v709)) {
                  goto LABEL_358;
                }
              }
              uint64_t v721 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v721 - 8) + 16))(v706, v707, v721);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v710 + 56))(v706, 0, 1, v709);
              goto LABEL_370;
            }
          }
          else
          {
            if (v454 != 4)
            {
              memcpy(v268, v269, *(void *)(*(void *)(v453 - 8) + 64));
              goto LABEL_353;
            }
            uint64_t v455 = type metadata accessor for PuzzleStreak();
            uint64_t v456 = *(void *)(v455 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v456 + 48))(v269, 1, v455)) {
              goto LABEL_331;
            }
          }
          uint64_t v702 = sub_1C151555C();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v702 - 8) + 16))(v268, v269, v702);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v456 + 56))(v268, 0, 1, v455);
          goto LABEL_352;
        case 2u:
          uint64_t v1169 = v7;
          v447 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          uint64_t v448 = *((void *)v447 - 1);
          if ((*(unsigned int (**)(void *, uint64_t, int *))(v448 + 48))(v269, 1, v447))
          {
            sub_1BFEEF2C0(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
            memcpy(v268, v269, *(void *)(*(void *)(v449 - 8) + 64));
            goto LABEL_321;
          }
          uint64_t v589 = sub_1C151631C();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v589 - 8) + 16))(v268, v269, v589);
          v590 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
          uint64_t v591 = v590[5];
          v592 = (void *)((char *)v268 + v591);
          v593 = (void *)((char *)v269 + v591);
          uint64_t v594 = v593[1];
          void *v592 = *v593;
          v592[1] = v594;
          uint64_t v595 = v590[6];
          v1142 = (char *)v268;
          v596 = (char *)v268 + v595;
          v597 = (void *)((char *)v269 + v595);
          uint64_t v598 = v597[1];
          *(void *)v596 = *v597;
          *((void *)v596 + 1) = v598;
          v599 = v597 + 2;
          unint64_t v600 = v597[3];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v600 >> 60 == 15)
          {
            *((_OWORD *)v596 + 1) = *(_OWORD *)v599;
          }
          else
          {
            uint64_t v688 = *v599;
            sub_1BFE95820(*v599, v600);
            *((void *)v596 + 2) = v688;
            *((void *)v596 + 3) = v600;
          }
          *(void *)&v1142[v590[7]] = *(void *)((char *)v269 + v590[7]);
          *(void *)&v1142[v590[8]] = *(void *)((char *)v269 + v590[8]);
          *(void *)&v1142[v447[5]] = *(void *)((char *)v269 + v447[5]);
          *(void *)&v1142[v447[6]] = *(void *)((char *)v269 + v447[6]);
          uint64_t v689 = v447[7];
          v690 = &v1142[v689];
          v691 = (void *)((char *)v269 + v689);
          uint64_t v692 = v691[1];
          *(void *)v690 = *v691;
          *((void *)v690 + 1) = v692;
          v693 = *(void (**)(char *, void, uint64_t, int *))(v448 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v693(v1142, 0, 1, v447);
          uint64_t v7 = v1169;
          goto LABEL_390;
        case 3u:
          uint64_t v1169 = v7;
          uint64_t v457 = v269[1];
          void *v268 = *v269;
          v268[1] = v457;
          *((unsigned char *)v268 + 16) = *((unsigned char *)v269 + 16);
          v458 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
          uint64_t v459 = v458[6];
          v1141 = (char *)v268;
          v460 = (char *)v268 + v459;
          v461 = (char *)v269 + v459;
          uint64_t v462 = type metadata accessor for PuzzleStreak();
          uint64_t v463 = *(void *)(v462 - 8);
          v464 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v463 + 48);
          if (v464(v461, 1, v462))
          {
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v460, v461, *(void *)(*(void *)(v465 - 8) + 64));
          }
          else
          {
            uint64_t v648 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v648 - 8) + 16))(v460, v461, v648);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v463 + 56))(v460, 0, 1, v462);
          }
          uint64_t v649 = v458[7];
          v650 = &v1141[v649];
          v651 = (char *)v269 + v649;
          if (v464((char *)v269 + v649, 1, v462))
          {
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v650, v651, *(void *)(*(void *)(v652 - 8) + 64));
          }
          else
          {
            uint64_t v658 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v658 - 8) + 16))(v650, v651, v658);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v463 + 56))(v650, 0, 1, v462);
          }
          uint64_t v659 = v458[8];
          v660 = &v1141[v659];
          v661 = (_OWORD *)((char *)v269 + v659);
          long long v662 = v661[1];
          *(_OWORD *)v660 = *v661;
          *((_OWORD *)v660 + 1) = v662;
          *(_OWORD *)(v660 + 25) = *(_OWORD *)((char *)v661 + 25);
          uint64_t v663 = v458[9];
          v664 = &v1141[v663];
          v665 = (_OWORD *)((char *)v269 + v663);
          *(_OWORD *)(v664 + 25) = *(_OWORD *)((char *)v665 + 25);
          long long v666 = v665[1];
          *(_OWORD *)v664 = *v665;
          *((_OWORD *)v664 + 1) = v666;
          uint64_t v667 = v458[10];
          v668 = &v1141[v667];
          v669 = (_OWORD *)((char *)v269 + v667);
          long long v670 = v669[1];
          *(_OWORD *)v668 = *v669;
          *((_OWORD *)v668 + 1) = v670;
          *(_OWORD *)(v668 + 25) = *(_OWORD *)((char *)v669 + 25);
LABEL_321:
          uint64_t v7 = v1169;
          goto LABEL_390;
        default:
          uint64_t v270 = type metadata accessor for PuzzleStatisticValue(0);
          int v271 = swift_getEnumCaseMultiPayload();
          if (v271 == 5)
          {
            uint64_t v272 = type metadata accessor for PuzzleStreak();
            uint64_t v273 = *(void *)(v272 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v273 + 48))(v269, 1, v272))
            {
LABEL_108:
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v268, v269, *(void *)(*(void *)(v274 - 8) + 64));
LABEL_345:
              swift_storeEnumTagMultiPayload();
              goto LABEL_390;
            }
          }
          else
          {
            if (v271 != 4)
            {
              memcpy(v268, v269, *(void *)(*(void *)(v270 - 8) + 64));
LABEL_390:
              swift_storeEnumTagMultiPayload();
LABEL_391:
              swift_storeEnumTagMultiPayload();
LABEL_392:
              sub_1C049A100();
              uint64_t v739 = *(int *)(v738 + 48);
              v740 = (void *)(a1 + v739);
              v741 = (uint64_t *)((char *)a2 + v739);
              switch(swift_getEnumCaseMultiPayload())
              {
                case 0u:
                  uint64_t v742 = v741[1];
                  void *v740 = *v741;
                  v740[1] = v742;
                  uint64_t v743 = v741[3];
                  v740[2] = v741[2];
                  v740[3] = v743;
                  *((unsigned char *)v740 + 32) = *((unsigned char *)v741 + 32);
                  v744 = v741 + 5;
                  unint64_t v745 = v741[6];
                  swift_bridgeObjectRetain();
                  if (v745 >= 0x11)
                  {
                    v740[5] = *v744;
                    v740[6] = v745;
                    swift_bridgeObjectRetain();
                  }
                  else
                  {
                    *(_OWORD *)(v740 + 5) = *(_OWORD *)v744;
                  }
                  goto LABEL_590;
                case 1u:
                  uint64_t v783 = v741[1];
                  void *v740 = *v741;
                  v740[1] = v783;
                  uint64_t v784 = v741[3];
                  v740[2] = v741[2];
                  v740[3] = v784;
                  *((unsigned char *)v740 + 32) = *((unsigned char *)v741 + 32);
                  uint64_t v785 = v741[6];
                  v740[5] = v741[5];
                  v740[6] = v785;
                  uint64_t v786 = v741[8];
                  v740[7] = v741[7];
                  v740[8] = v786;
                  v787 = v741 + 9;
                  unint64_t v788 = v741[10];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  if (v788 >= 0x11)
                  {
                    v740[9] = *v787;
                    v740[10] = v788;
                    swift_bridgeObjectRetain();
                  }
                  else
                  {
                    *(_OWORD *)(v740 + 9) = *(_OWORD *)v787;
                  }
                  goto LABEL_590;
                case 2u:
                  uint64_t v746 = v741[1];
                  void *v740 = *v741;
                  v740[1] = v746;
                  v747 = (int *)type metadata accessor for FeedBannerAd();
                  uint64_t v748 = v747[5];
                  v749 = (char *)v740 + v748;
                  v750 = (char *)v741 + v748;
                  uint64_t v751 = sub_1C151DBAC();
                  v752 = *(void (**)(char *, char *, uint64_t))(*(void *)(v751 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v752(v749, v750, v751);
                  *(void *)((char *)v740 + v747[6]) = *(void *)((char *)v741 + v747[6]);
                  uint64_t v753 = v747[7];
                  v754 = (char *)v740 + v753;
                  v755 = (char *)v741 + v753;
                  *(void *)v754 = *(void *)v755;
                  v754[8] = v755[8];
                  uint64_t v756 = v747[8];
                  v757 = (char *)v740 + v756;
                  v758 = (char *)v741 + v756;
                  unint64_t v759 = *((void *)v758 + 1);
                  if (v759 >= 0x11) {
                    goto LABEL_428;
                  }
                  *(_OWORD *)v757 = *(_OWORD *)v758;
                  goto LABEL_590;
                case 3u:
                  uint64_t v789 = v741[1];
                  void *v740 = *v741;
                  v740[1] = v789;
                  v740[2] = v741[2];
                  *((unsigned char *)v740 + 24) = *((unsigned char *)v741 + 24);
                  uint64_t v790 = v741[5];
                  v740[4] = v741[4];
                  v740[5] = v790;
                  v740[6] = v741[6];
                  *((unsigned char *)v740 + 56) = *((unsigned char *)v741 + 56);
                  v1162 = (int *)type metadata accessor for FeedHeadline(0);
                  uint64_t v791 = v1162[10];
                  v792 = (char *)v740 + v791;
                  v793 = (char *)v741 + v791;
                  unsigned char *v792 = *((unsigned char *)v741 + v791);
                  v792[1] = *((unsigned char *)v741 + v791 + 1);
                  v1153 = (int *)type metadata accessor for FeedHeadline.State(0);
                  uint64_t v794 = v1153[6];
                  v1125 = &v792[v794];
                  v795 = &v793[v794];
                  v796 = (int *)type metadata accessor for SharedItem();
                  uint64_t v1120 = *((void *)v796 - 1);
                  v797 = *(unsigned int (**)(char *, uint64_t, int *))(v1120 + 48);
                  swift_bridgeObjectRetain();
                  swift_unknownObjectRetain();
                  swift_unknownObjectRetain();
                  if (v797(v795, 1, v796))
                  {
                    uint64_t v798 = type metadata accessor for FeedItem.SharedState(0);
                    memcpy(v1125, v795, *(void *)(*(void *)(v798 - 8) + 64));
                  }
                  else
                  {
                    uint64_t v914 = sub_1C151631C();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v914 - 8) + 16))(v1125, v795, v914);
                    v1125[v796[5]] = v795[v796[5]];
                    uint64_t v915 = v796[6];
                    v916 = *(void **)&v795[v915];
                    *(void *)&v1125[v915] = v916;
                    uint64_t v917 = v796[7];
                    __dstg = &v795[v917];
                    v1145 = &v1125[v917];
                    uint64_t v918 = sub_1C1515FDC();
                    v1116 = *(void (**)(char *, char *, uint64_t))(*(void *)(v918 - 8) + 16);
                    id v919 = v916;
                    v1116(v1145, __dstg, v918);
                    (*(void (**)(char *, void, uint64_t, int *))(v1120 + 56))(v1125, 0, 1, v796);
                  }
                  v792[v1153[7]] = v793[v1153[7]];
                  v792[v1153[8]] = v793[v1153[8]];
                  v792[v1153[9]] = v793[v1153[9]];
                  v792[v1153[10]] = v793[v1153[10]];
                  uint64_t v920 = v1162[11];
                  v921 = (char *)v740 + v920;
                  v922 = (char *)v741 + v920;
                  uint64_t v923 = sub_1C151D2DC();
                  uint64_t v924 = *(void *)(v923 - 8);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v924 + 48))(v922, 1, v923))
                  {
                    sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
                    memcpy(v921, v922, *(void *)(*(void *)(v925 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(v924 + 16))(v921, v922, v923);
                    (*(void (**)(char *, void, uint64_t, uint64_t))(v924 + 56))(v921, 0, 1, v923);
                  }
                  uint64_t v932 = v1162[12];
                  v933 = (void *)((char *)v740 + v932);
                  v934 = (void *)((char *)v741 + v932);
                  unint64_t v935 = v934[1];
                  if (v935 >= 0x11)
                  {
                    void *v933 = *v934;
                    v933[1] = v935;
                    swift_bridgeObjectRetain();
                  }
                  else
                  {
                    *(_OWORD *)v933 = *(_OWORD *)v934;
                  }
                  uint64_t v936 = v1162[13];
                  unint64_t v937 = *(void *)((char *)v741 + v936);
                  if (v937 >= 2)
                  {
                    if (v937 == 2)
                    {
                      *(void *)((char *)v740 + v936) = 2;
                    }
                    else
                    {
                      *(void *)((char *)v740 + v936) = v937;
                      swift_unknownObjectRetain();
                    }
                  }
                  else
                  {
                    *(void *)((char *)v740 + v936) = v937;
                  }
                  uint64_t v974 = v1162[14];
                  v975 = *(void **)((char *)v741 + v974);
                  *(void *)((char *)v740 + v974) = v975;
                  id v976 = v975;
                  goto LABEL_590;
                case 4u:
                  uint64_t v760 = v741[1];
                  void *v740 = *v741;
                  v740[1] = v760;
                  *((unsigned char *)v740 + 16) = *((unsigned char *)v741 + 16);
                  v761 = v741 + 3;
                  unint64_t v762 = v741[4];
                  if (v762 >= 0x11)
                  {
                    v740[3] = *v761;
                    v740[4] = v762;
                    swift_bridgeObjectRetain();
                  }
                  else
                  {
                    *(_OWORD *)(v740 + 3) = *(_OWORD *)v761;
                  }
                  uint64_t v848 = v741[6];
                  v740[5] = v741[5];
                  v740[6] = v848;
                  v849 = (int *)type metadata accessor for FeedWebEmbed();
                  uint64_t v850 = v849[8];
                  v851 = (char *)v740 + v850;
                  v852 = (char *)v741 + v850;
                  uint64_t v853 = sub_1C1515FDC();
                  uint64_t v854 = *(void *)(v853 - 8);
                  v855 = *(void (**)(char *, char *, void *))(v854 + 16);
                  v856 = (void *)v853;
                  swift_bridgeObjectRetain();
                  v855(v851, v852, v856);
                  v1164 = v849;
                  uint64_t v857 = v849[9];
                  v858 = (char *)v740 + v857;
                  v859 = (char *)v741 + v857;
                  v1144 = v856;
                  v1126 = v855;
                  if ((*(unsigned int (**)(char *, uint64_t, void *))(v854 + 48))((char *)v741 + v857, 1, v856))
                  {
                    sub_1BFEEF2C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
                    memcpy(v858, v859, *(void *)(*(void *)(v860 - 8) + 64));
                  }
                  else
                  {
                    v855(v858, v859, v856);
                    (*(void (**)(char *, void, uint64_t, void *))(v854 + 56))(v858, 0, 1, v856);
                  }
                  *(void *)((char *)v740 + v849[10]) = *(void *)((char *)v741 + v849[10]);
                  *(void *)((char *)v740 + v849[11]) = *(void *)((char *)v741 + v849[11]);
                  uint64_t v892 = v849[12];
                  v893 = (void *)((char *)v740 + v892);
                  v1154 = (void *)((char *)v741 + v892);
                  uint64_t v894 = type metadata accessor for FeedHeadline(0);
                  v895 = *(void **)(v894 - 8);
                  v896 = (unsigned int (*)(void *, uint64_t, uint64_t))v895[6];
                  swift_retain();
                  swift_retain();
                  if (v896(v1154, 1, v894))
                  {
                    sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
                    memcpy(v893, v1154, *(void *)(*(void *)(v897 - 8) + 64));
                  }
                  else
                  {
                    v1113 = v895;
                    uint64_t v903 = v1154[1];
                    void *v893 = *v1154;
                    v893[1] = v903;
                    v893[2] = v1154[2];
                    *((unsigned char *)v893 + 24) = *((unsigned char *)v1154 + 24);
                    uint64_t v904 = v1154[5];
                    v893[4] = v1154[4];
                    v893[5] = v904;
                    v893[6] = v1154[6];
                    *((unsigned char *)v893 + 56) = *((unsigned char *)v1154 + 56);
                    v1121 = (int *)v894;
                    uint64_t v905 = *(int *)(v894 + 40);
                    v906 = (char *)v893 + v905;
                    v907 = (char *)v1154 + v905;
                    unsigned char *v906 = *((unsigned char *)v1154 + v905);
                    v906[1] = *((unsigned char *)v1154 + v905 + 1);
                    v1110 = (int *)type metadata accessor for FeedHeadline.State(0);
                    uint64_t v908 = v1110[6];
                    v1108 = &v906[v908];
                    v909 = &v907[v908];
                    v910 = (int *)type metadata accessor for SharedItem();
                    uint64_t v1105 = *((void *)v910 - 1);
                    v911 = *(unsigned int (**)(char *, uint64_t, int *))(v1105 + 48);
                    swift_bridgeObjectRetain();
                    swift_unknownObjectRetain();
                    swift_unknownObjectRetain();
                    if (v911(v909, 1, v910))
                    {
                      uint64_t v912 = type metadata accessor for FeedItem.SharedState(0);
                      memcpy(v1108, v909, *(void *)(*(void *)(v912 - 8) + 64));
                    }
                    else
                    {
                      uint64_t v1000 = sub_1C151631C();
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v1000 - 8) + 16))(v1108, v909, v1000);
                      v1108[v910[5]] = v909[v910[5]];
                      uint64_t v1001 = v910[6];
                      v1002 = *(void **)&v909[v1001];
                      *(void *)&v1108[v1001] = v1002;
                      uint64_t v1003 = v910[7];
                      v1004 = &v1108[v1003];
                      v1005 = &v909[v1003];
                      id v1006 = v1002;
                      v1126(v1004, v1005, v1144);
                      (*(void (**)(char *, void, uint64_t, int *))(v1105 + 56))(v1108, 0, 1, v910);
                    }
                    v906[v1110[7]] = v907[v1110[7]];
                    v906[v1110[8]] = v907[v1110[8]];
                    v906[v1110[9]] = v907[v1110[9]];
                    v906[v1110[10]] = v907[v1110[10]];
                    uint64_t v1007 = v1121[11];
                    v1008 = (char *)v893 + v1007;
                    v1009 = (char *)v1154 + v1007;
                    uint64_t v1010 = sub_1C151D2DC();
                    uint64_t v1011 = *(void *)(v1010 - 8);
                    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1011 + 48))(v1009, 1, v1010))
                    {
                      sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
                      memcpy(v1008, v1009, *(void *)(*(void *)(v1012 - 8) + 64));
                    }
                    else
                    {
                      (*(void (**)(char *, char *, uint64_t))(v1011 + 16))(v1008, v1009, v1010);
                      (*(void (**)(char *, void, uint64_t, uint64_t))(v1011 + 56))(v1008, 0, 1, v1010);
                    }
                    uint64_t v1013 = v1121[12];
                    v1014 = (void *)((char *)v893 + v1013);
                    v1015 = (void *)((char *)v1154 + v1013);
                    unint64_t v1016 = v1015[1];
                    if (v1016 >= 0x11)
                    {
                      void *v1014 = *v1015;
                      v1014[1] = v1016;
                      swift_bridgeObjectRetain();
                    }
                    else
                    {
                      *(_OWORD *)v1014 = *(_OWORD *)v1015;
                    }
                    uint64_t v1017 = v1121[13];
                    unint64_t v1018 = *(void *)((char *)v1154 + v1017);
                    if (v1018 >= 2)
                    {
                      if (v1018 == 2)
                      {
                        *(void *)((char *)v893 + v1017) = 2;
                      }
                      else
                      {
                        *(void *)((char *)v893 + v1017) = v1018;
                        swift_unknownObjectRetain();
                      }
                    }
                    else
                    {
                      *(void *)((char *)v893 + v1017) = v1018;
                    }
                    uint64_t v1041 = v1121[14];
                    v1042 = *(void **)((char *)v1154 + v1041);
                    *(void *)((char *)v893 + v1041) = v1042;
                    v1043 = (void (*)(void *, void, uint64_t, int *))v1113[7];
                    id v1044 = v1042;
                    v1043(v893, 0, 1, v1121);
                  }
                  uint64_t v1045 = v1164[13];
                  v1046 = (void *)((char *)v740 + v1045);
                  v1047 = (void *)((char *)v741 + v1045);
                  uint64_t v1048 = type metadata accessor for WebEmbedDataVisualization();
                  uint64_t v1049 = *(void *)(v1048 - 8);
                  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v1049 + 48))(v1047, 1, v1048))
                  {
                    sub_1BFEEF2C0(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
                    memcpy(v1046, v1047, *(void *)(*(void *)(v1050 - 8) + 64));
                  }
                  else
                  {
                    int v1051 = swift_getEnumCaseMultiPayload();
                    uint64_t v1052 = *v1047;
                    if (v1051 == 1)
                    {
                      uint64_t v1053 = v1047[1];
                      void *v1046 = v1052;
                      v1046[1] = v1053;
                      uint64_t v1054 = type metadata accessor for GenericDataVisualization();
                      uint64_t v1055 = *(int *)(v1054 + 20);
                      v1155 = (char *)v1046 + v1055;
                      v1056 = (char *)v1047 + v1055;
                      swift_bridgeObjectRetain();
                      v1126(v1155, v1056, v1144);
                      *(void *)((char *)v1046 + *(int *)(v1054 + 24)) = *(uint64_t *)((char *)v1047
                                                                                     + *(int *)(v1054 + 24));
                      swift_bridgeObjectRetain();
                    }
                    else
                    {
                      void *v1046 = v1052;
                      swift_retain();
                    }
                    swift_storeEnumTagMultiPayload();
                    (*(void (**)(void *, void, uint64_t, uint64_t))(v1049 + 56))(v1046, 0, 1, v1048);
                  }
                  *((unsigned char *)v740 + v1164[14]) = *((unsigned char *)v741 + v1164[14]);
                  goto LABEL_590;
                case 5u:
                  v799 = (void *)*v741;
                  uint64_t v800 = v741[1];
                  void *v740 = *v741;
                  v740[1] = v800;
                  v740[2] = v741[2];
                  *((_WORD *)v740 + 12) = *((_WORD *)v741 + 12);
                  v740[4] = v741[4];
                  *((unsigned char *)v740 + 40) = *((unsigned char *)v741 + 40);
                  v801 = (void *)v741[7];
                  v740[6] = v741[6];
                  v740[7] = v801;
                  *((unsigned char *)v740 + 64) = *((unsigned char *)v741 + 64);
                  uint64_t v802 = v741[10];
                  id v803 = v799;
                  swift_bridgeObjectRetain();
                  id v804 = v801;
                  if (v802 == 1)
                  {
                    long long v805 = *(_OWORD *)(v741 + 11);
                    *(_OWORD *)(v740 + 9) = *(_OWORD *)(v741 + 9);
                    *(_OWORD *)(v740 + 11) = v805;
                    *(_OWORD *)(v740 + 13) = *(_OWORD *)(v741 + 13);
                  }
                  else
                  {
                    v740[9] = v741[9];
                    v740[10] = v802;
                    uint64_t v862 = v741[12];
                    v740[11] = v741[11];
                    v740[12] = v862;
                    v864 = (void *)v741[13];
                    uint64_t v863 = v741[14];
                    v740[13] = v864;
                    v740[14] = v863;
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    id v865 = v864;
                  }
                  v866 = v741 + 15;
                  unint64_t v867 = v741[16];
                  if (v867 >= 0x11)
                  {
                    v740[15] = *v866;
                    v740[16] = v867;
                    swift_bridgeObjectRetain();
                  }
                  else
                  {
                    *(_OWORD *)(v740 + 15) = *(_OWORD *)v866;
                  }
                  *((unsigned char *)v740 + 136) = *((unsigned char *)v741 + 136);
                  goto LABEL_590;
                case 6u:
                  int v806 = *((unsigned __int8 *)v741 + 281);
                  if (v806 == 2)
                  {
                    uint64_t v944 = v741[1];
                    void *v740 = *v741;
                    v740[1] = v944;
                    v740[2] = v741[2];
                    *((unsigned char *)v740 + 24) = *((unsigned char *)v741 + 24);
                    v740[4] = v741[4];
                    *((unsigned char *)v740 + 40) = *((unsigned char *)v741 + 40);
                    uint64_t v945 = v741[7];
                    v740[6] = v741[6];
                    v740[7] = v945;
                    uint64_t v946 = v741[9];
                    v740[8] = v741[8];
                    v740[9] = v946;
                    uint64_t v947 = v741[11];
                    swift_bridgeObjectRetain();
                    swift_unknownObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    if (v947 != 1)
                    {
                      v740[10] = v741[10];
                      v740[11] = v947;
                      uint64_t v984 = v741[15];
                      swift_bridgeObjectRetain();
                      if (v984)
                      {
                        uint64_t v985 = v741[16];
                        v740[15] = v984;
                        v740[16] = v985;
                        (**(void (***)(uint64_t, uint64_t, uint64_t))(v984 - 8))((uint64_t)(v740 + 12), (uint64_t)(v741 + 12), v984);
                        v740[17] = v741[17];
                      }
                      else
                      {
                        long long v1076 = *((_OWORD *)v741 + 7);
                        *((_OWORD *)v740 + 6) = *((_OWORD *)v741 + 6);
                        *((_OWORD *)v740 + 7) = v1076;
                        *((_OWORD *)v740 + 8) = *((_OWORD *)v741 + 8);
                      }
                      *((unsigned char *)v740 + 144) = *((unsigned char *)v741 + 144);
                      goto LABEL_558;
                    }
                    v948 = v740 + 10;
                    v949 = v741 + 10;
                    long long v950 = *((_OWORD *)v741 + 8);
                    *((_OWORD *)v740 + 7) = *((_OWORD *)v741 + 7);
                    *((_OWORD *)v740 + 8) = v950;
                    *((unsigned char *)v740 + 144) = *((unsigned char *)v741 + 144);
                  }
                  else
                  {
                    if (v806 != 1)
                    {
                      v951 = (void *)*v741;
                      uint64_t v952 = v741[1];
                      void *v740 = *v741;
                      v740[1] = v952;
                      v740[2] = v741[2];
                      *((_WORD *)v740 + 12) = *((_WORD *)v741 + 12);
                      v740[4] = v741[4];
                      *((unsigned char *)v740 + 40) = *((unsigned char *)v741 + 40);
                      v953 = (void *)v741[7];
                      v740[6] = v741[6];
                      v740[7] = v953;
                      *((unsigned char *)v740 + 64) = *((unsigned char *)v741 + 64);
                      uint64_t v954 = v741[10];
                      id v955 = v951;
                      swift_bridgeObjectRetain();
                      id v956 = v953;
                      if (v954 == 1)
                      {
                        long long v957 = *(_OWORD *)(v741 + 11);
                        *(_OWORD *)(v740 + 9) = *(_OWORD *)(v741 + 9);
                        *(_OWORD *)(v740 + 11) = v957;
                        *(_OWORD *)(v740 + 13) = *(_OWORD *)(v741 + 13);
                      }
                      else
                      {
                        v740[9] = v741[9];
                        v740[10] = v954;
                        uint64_t v986 = v741[12];
                        v740[11] = v741[11];
                        v740[12] = v986;
                        v988 = (void *)v741[13];
                        uint64_t v987 = v741[14];
                        v740[13] = v988;
                        v740[14] = v987;
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        id v989 = v988;
                      }
                      v990 = v741 + 15;
                      unint64_t v991 = v741[16];
                      if (v991 >= 0x11)
                      {
                        v740[15] = *v990;
                        v740[16] = v991;
                        swift_bridgeObjectRetain();
                      }
                      else
                      {
                        *(_OWORD *)(v740 + 15) = *(_OWORD *)v990;
                      }
                      *((unsigned char *)v740 + 136) = *((unsigned char *)v741 + 136);
                      goto LABEL_558;
                    }
                    v807 = (void *)*v741;
                    uint64_t v808 = v741[1];
                    void *v740 = *v741;
                    v740[1] = v808;
                    v740[2] = v741[2];
                    *((_WORD *)v740 + 12) = *((_WORD *)v741 + 12);
                    v740[4] = v741[4];
                    *((unsigned char *)v740 + 40) = *((unsigned char *)v741 + 40);
                    v809 = (void *)v741[7];
                    v740[6] = v741[6];
                    v740[7] = v809;
                    *((unsigned char *)v740 + 64) = *((unsigned char *)v741 + 64);
                    uint64_t v810 = v741[10];
                    id v811 = v807;
                    swift_bridgeObjectRetain();
                    id v812 = v809;
                    if (v810 == 1)
                    {
                      long long v813 = *(_OWORD *)(v741 + 11);
                      *(_OWORD *)(v740 + 9) = *(_OWORD *)(v741 + 9);
                      *(_OWORD *)(v740 + 11) = v813;
                      *(_OWORD *)(v740 + 13) = *(_OWORD *)(v741 + 13);
                    }
                    else
                    {
                      v740[9] = v741[9];
                      v740[10] = v810;
                      uint64_t v978 = v741[12];
                      v740[11] = v741[11];
                      v740[12] = v978;
                      v980 = (void *)v741[13];
                      uint64_t v979 = v741[14];
                      v740[13] = v980;
                      v740[14] = v979;
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      id v981 = v980;
                    }
                    v982 = v741 + 15;
                    unint64_t v983 = v741[16];
                    if (v983 >= 0x11)
                    {
                      v740[15] = *v982;
                      v740[16] = v983;
                      swift_bridgeObjectRetain();
                    }
                    else
                    {
                      *(_OWORD *)(v740 + 15) = *(_OWORD *)v982;
                    }
                    v949 = v741 + 18;
                    v992 = (void *)v741[18];
                    *((unsigned char *)v740 + 136) = *((unsigned char *)v741 + 136);
                    if (v992)
                    {
                      uint64_t v993 = v741[19];
                      uint64_t v994 = v741[20];
                      v740[18] = v992;
                      v740[19] = v993;
                      v740[20] = v994;
                      *((_WORD *)v740 + 84) = *((_WORD *)v741 + 84);
                      v740[22] = v741[22];
                      *((unsigned char *)v740 + 184) = *((unsigned char *)v741 + 184);
                      v995 = (void *)v741[25];
                      v740[24] = v741[24];
                      v740[25] = v995;
                      *((unsigned char *)v740 + 208) = *((unsigned char *)v741 + 208);
                      uint64_t v996 = v741[28];
                      id v997 = v992;
                      swift_bridgeObjectRetain();
                      id v998 = v995;
                      if (v996 == 1)
                      {
                        long long v999 = *(_OWORD *)(v741 + 29);
                        *(_OWORD *)(v740 + 27) = *(_OWORD *)(v741 + 27);
                        *(_OWORD *)(v740 + 29) = v999;
                        *(_OWORD *)(v740 + 31) = *(_OWORD *)(v741 + 31);
                      }
                      else
                      {
                        v740[27] = v741[27];
                        v740[28] = v996;
                        uint64_t v1023 = v741[30];
                        v740[29] = v741[29];
                        v740[30] = v1023;
                        v1025 = (void *)v741[31];
                        uint64_t v1024 = v741[32];
                        v740[31] = v1025;
                        v740[32] = v1024;
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        id v1026 = v1025;
                      }
                      v1027 = v741 + 33;
                      unint64_t v1028 = v741[34];
                      if (v1028 >= 0x11)
                      {
                        v740[33] = *v1027;
                        v740[34] = v1028;
                        swift_bridgeObjectRetain();
                      }
                      else
                      {
                        *(_OWORD *)(v740 + 33) = *(_OWORD *)v1027;
                      }
                      *((unsigned char *)v740 + 280) = *((unsigned char *)v741 + 280);
LABEL_558:
                      *((unsigned char *)v740 + 281) = v806;
LABEL_590:
                      swift_storeEnumTagMultiPayload();
LABEL_591:
                      swift_storeEnumTagMultiPayload();
                      return a1;
                    }
                    v948 = v740 + 18;
                    long long v1019 = *((_OWORD *)v741 + 16);
                    *((_OWORD *)v740 + 15) = *((_OWORD *)v741 + 15);
                    *((_OWORD *)v740 + 16) = v1019;
                    *(_OWORD *)((char *)v740 + 265) = *(_OWORD *)((char *)v741 + 265);
                    long long v1020 = *((_OWORD *)v741 + 12);
                    *((_OWORD *)v740 + 11) = *((_OWORD *)v741 + 11);
                    *((_OWORD *)v740 + 12) = v1020;
                    long long v1021 = *((_OWORD *)v741 + 14);
                    *((_OWORD *)v740 + 13) = *((_OWORD *)v741 + 13);
                    *((_OWORD *)v740 + 14) = v1021;
                  }
                  long long v1022 = v949[1];
                  _OWORD *v948 = *v949;
                  v948[1] = v1022;
                  goto LABEL_558;
                case 7u:
                  uint64_t v814 = v741[1];
                  void *v740 = *v741;
                  v740[1] = v814;
                  v740[2] = v741[2];
                  *((unsigned char *)v740 + 24) = *((unsigned char *)v741 + 24);
                  v740[4] = v741[4];
                  *((unsigned char *)v740 + 40) = *((unsigned char *)v741 + 40);
                  uint64_t v815 = v741[7];
                  v740[6] = v741[6];
                  v740[7] = v815;
                  uint64_t v816 = v741[9];
                  v740[8] = v741[8];
                  v740[9] = v816;
                  uint64_t v817 = v741[11];
                  swift_bridgeObjectRetain();
                  swift_unknownObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  if (v817 == 1)
                  {
                    long long v818 = *((_OWORD *)v741 + 8);
                    *((_OWORD *)v740 + 7) = *((_OWORD *)v741 + 7);
                    *((_OWORD *)v740 + 8) = v818;
                    *((unsigned char *)v740 + 144) = *((unsigned char *)v741 + 144);
                    long long v819 = *((_OWORD *)v741 + 6);
                    *((_OWORD *)v740 + 5) = *((_OWORD *)v741 + 5);
                    *((_OWORD *)v740 + 6) = v819;
                  }
                  else
                  {
                    v740[10] = v741[10];
                    v740[11] = v817;
                    uint64_t v868 = v741[15];
                    swift_bridgeObjectRetain();
                    if (v868)
                    {
                      uint64_t v869 = v741[16];
                      v740[15] = v868;
                      v740[16] = v869;
                      (**(void (***)(uint64_t, uint64_t, uint64_t))(v868 - 8))((uint64_t)(v740 + 12), (uint64_t)(v741 + 12), v868);
                      v740[17] = v741[17];
                    }
                    else
                    {
                      long long v977 = *((_OWORD *)v741 + 7);
                      *((_OWORD *)v740 + 6) = *((_OWORD *)v741 + 6);
                      *((_OWORD *)v740 + 7) = v977;
                      *((_OWORD *)v740 + 8) = *((_OWORD *)v741 + 8);
                    }
                    *((unsigned char *)v740 + 144) = *((unsigned char *)v741 + 144);
                  }
                  goto LABEL_590;
                case 8u:
                  uint64_t v820 = v741[1];
                  void *v740 = *v741;
                  v740[1] = v820;
                  uint64_t v821 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
                  v822 = (void *)((char *)v740 + v821);
                  v823 = (char *)v741 + v821;
                  uint64_t v824 = *(void *)((char *)v741 + v821 + 8);
                  void *v822 = *(void *)((char *)v741 + v821);
                  v822[1] = v824;
                  uint64_t v825 = *(void *)((char *)v741 + v821 + 24);
                  v822[2] = *(void *)((char *)v741 + v821 + 16);
                  v822[3] = v825;
                  uint64_t v1163 = type metadata accessor for FormatCustomItem.Resolved();
                  uint64_t v826 = *(int *)(v1163 + 24);
                  v1143 = (char *)v822 + v826;
                  v827 = &v823[v826];
                  uint64_t v828 = type metadata accessor for FormatCustomItem.Action();
                  __dstf = *(void **)(v828 - 8);
                  v829 = (unsigned int (*)(char *, uint64_t, uint64_t))__dstf[6];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  if (v829(v827, 1, v828))
                  {
                    sub_1BFEEF2C0(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
                    memcpy(v1143, v827, *(void *)(*(void *)(v830 - 8) + 64));
                  }
                  else
                  {
                    uint64_t v926 = sub_1C1515FDC();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v926 - 8) + 16))(v1143, v827, v926);
                    ((void (*)(char *, void, uint64_t, uint64_t))__dstf[7])(v1143, 0, 1, v828);
                  }
                  *(void *)((char *)v822 + *(int *)(v1163 + 28)) = *(void *)&v823[*(int *)(v1163 + 28)];
                  swift_bridgeObjectRetain();
                  swift_storeEnumTagMultiPayload();
                  goto LABEL_591;
                case 9u:
                  uint64_t v763 = v741[1];
                  void *v740 = *v741;
                  v740[1] = v763;
                  uint64_t v764 = v741[3];
                  v740[2] = v741[2];
                  v740[3] = v764;
                  uint64_t v765 = v741[7];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  if (v765)
                  {
                    uint64_t v766 = v741[8];
                    v740[7] = v765;
                    v740[8] = v766;
                    (**(void (***)(uint64_t, uint64_t, uint64_t))(v765 - 8))((uint64_t)(v740 + 4), (uint64_t)(v741 + 4), v765);
                  }
                  else
                  {
                    long long v887 = *((_OWORD *)v741 + 3);
                    *((_OWORD *)v740 + 2) = *((_OWORD *)v741 + 2);
                    *((_OWORD *)v740 + 3) = v887;
                    v740[8] = v741[8];
                  }
                  v888 = v740 + 9;
                  v889 = v741 + 9;
                  uint64_t v890 = v741[12];
                  if (v890)
                  {
                    uint64_t v891 = v741[13];
                    v740[12] = v890;
                    v740[13] = v891;
                    (**(void (***)(_OWORD *, _OWORD *))(v890 - 8))(v888, v889);
                  }
                  else
                  {
                    long long v898 = *(_OWORD *)(v741 + 11);
                    _OWORD *v888 = *v889;
                    *(_OWORD *)(v740 + 11) = v898;
                    v740[13] = v741[13];
                  }
                  v899 = v740 + 14;
                  v900 = v741 + 14;
                  uint64_t v901 = v741[17];
                  if (v901)
                  {
                    uint64_t v902 = v741[18];
                    v740[17] = v901;
                    v740[18] = v902;
                    (**(void (***)(_OWORD *, _OWORD *))(v901 - 8))(v899, v900);
                  }
                  else
                  {
                    long long v913 = *((_OWORD *)v741 + 8);
                    _OWORD *v899 = *v900;
                    *((_OWORD *)v740 + 8) = v913;
                    v740[18] = v741[18];
                  }
                  goto LABEL_590;
                case 0xAu:
                  uint64_t v831 = v741[1];
                  void *v740 = *v741;
                  v740[1] = v831;
                  v832 = (int *)type metadata accessor for FeedEngagementBanner();
                  uint64_t v833 = v832[5];
                  v834 = (char *)v740 + v833;
                  v835 = (char *)v741 + v833;
                  uint64_t v836 = sub_1C151959C();
                  v837 = *(void (**)(char *, char *, uint64_t))(*(void *)(v836 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v837(v834, v835, v836);
                  *(void *)((char *)v740 + v832[6]) = *(void *)((char *)v741 + v832[6]);
                  uint64_t v838 = v832[7];
                  v839 = (char *)v740 + v838;
                  v840 = (char *)v741 + v838;
                  *(void *)v839 = *(void *)v840;
                  v839[8] = v840[8];
                  uint64_t v841 = v832[8];
                  v757 = (char *)v740 + v841;
                  v758 = (char *)v741 + v841;
                  unint64_t v759 = *((void *)v758 + 1);
                  if (v759 >= 0x11)
                  {
LABEL_428:
                    *(void *)v757 = *(void *)v758;
                    *((void *)v757 + 1) = v759;
                    swift_bridgeObjectRetain();
                  }
                  else
                  {
                    *(_OWORD *)v757 = *(_OWORD *)v758;
                  }
                  goto LABEL_590;
                case 0xBu:
                  void *v740 = *v741;
                  swift_retain();
                  goto LABEL_590;
                case 0xCu:
                  uint64_t v767 = v741[1];
                  void *v740 = *v741;
                  v740[1] = v767;
                  uint64_t v768 = v741[3];
                  v740[2] = v741[2];
                  v740[3] = v768;
                  *((unsigned char *)v740 + 32) = *((unsigned char *)v741 + 32);
                  swift_bridgeObjectRetain();
                  swift_unknownObjectRetain();
                  goto LABEL_590;
                case 0xDu:
                  uint64_t v842 = v741[1];
                  void *v740 = *v741;
                  v740[1] = v842;
                  *((unsigned char *)v740 + 16) = *((unsigned char *)v741 + 16);
                  v843 = v741 + 3;
                  unint64_t v844 = v741[4];
                  if (v844 >= 0x11)
                  {
                    v740[3] = *v843;
                    v740[4] = v844;
                    swift_bridgeObjectRetain();
                  }
                  else
                  {
                    *(_OWORD *)(v740 + 3) = *(_OWORD *)v843;
                  }
                  uint64_t v870 = v741[6];
                  v740[5] = v741[5];
                  v740[6] = v870;
                  v871 = (void *)v741[8];
                  v740[7] = v741[7];
                  v740[8] = v871;
                  *((unsigned char *)v740 + 72) = *((unsigned char *)v741 + 72);
                  v740[10] = v741[10];
                  uint64_t v872 = v741[14];
                  swift_bridgeObjectRetain();
                  swift_unknownObjectRetain();
                  id v873 = v871;
                  swift_bridgeObjectRetain();
                  if (v872)
                  {
                    uint64_t v874 = v741[15];
                    v740[14] = v872;
                    v740[15] = v874;
                    (**(void (***)(uint64_t, uint64_t, uint64_t))(v872 - 8))((uint64_t)(v740 + 11), (uint64_t)(v741 + 11), v872);
                  }
                  else
                  {
                    long long v927 = *(_OWORD *)(v741 + 13);
                    *(_OWORD *)(v740 + 11) = *(_OWORD *)(v741 + 11);
                    *(_OWORD *)(v740 + 13) = v927;
                    v740[15] = v741[15];
                  }
                  v928 = v740 + 16;
                  v929 = v741 + 16;
                  uint64_t v930 = v741[19];
                  if (v930)
                  {
                    uint64_t v931 = v741[20];
                    v740[19] = v930;
                    v740[20] = v931;
                    (**(void (***)(_OWORD *, _OWORD *))(v930 - 8))(v928, v929);
                  }
                  else
                  {
                    long long v938 = *((_OWORD *)v741 + 9);
                    _OWORD *v928 = *v929;
                    *((_OWORD *)v740 + 9) = v938;
                    v740[20] = v741[20];
                  }
                  v939 = v740 + 21;
                  v940 = v741 + 21;
                  uint64_t v941 = v741[24];
                  if (v941)
                  {
                    uint64_t v942 = v741[25];
                    v740[24] = v941;
                    v740[25] = v942;
                    (**(void (***)(_OWORD *, _OWORD *))(v941 - 8))(v939, v940);
                  }
                  else
                  {
                    long long v943 = *(_OWORD *)(v741 + 23);
                    _OWORD *v939 = *v940;
                    *(_OWORD *)(v740 + 23) = v943;
                    v740[25] = v741[25];
                  }
                  goto LABEL_590;
                case 0xEu:
                  uint64_t v769 = v741[1];
                  void *v740 = *v741;
                  v740[1] = v769;
                  *((unsigned char *)v740 + 16) = *((unsigned char *)v741 + 16);
                  v770 = v741 + 3;
                  unint64_t v771 = v741[4];
                  if (v771 >= 0x11)
                  {
                    v740[3] = *v770;
                    v740[4] = v771;
                    swift_bridgeObjectRetain();
                  }
                  else
                  {
                    *(_OWORD *)(v740 + 3) = *(_OWORD *)v770;
                  }
                  uint64_t v861 = v741[6];
                  v740[5] = v741[5];
                  v740[6] = v861;
                  v740[7] = v741[7];
                  swift_bridgeObjectRetain();
                  swift_unknownObjectRetain();
                  goto LABEL_590;
                case 0xFu:
                  uint64_t v845 = v741[1];
                  void *v740 = *v741;
                  v740[1] = v845;
                  *((unsigned char *)v740 + 16) = *((unsigned char *)v741 + 16);
                  v846 = v741 + 3;
                  unint64_t v847 = v741[4];
                  if (v847 >= 0x11)
                  {
                    v740[3] = *v846;
                    v740[4] = v847;
                    swift_bridgeObjectRetain();
                  }
                  else
                  {
                    *(_OWORD *)(v740 + 3) = *(_OWORD *)v846;
                  }
                  break;
                case 0x10u:
                  uint64_t v772 = v741[1];
                  void *v740 = *v741;
                  v740[1] = v772;
                  uint64_t v773 = v741[3];
                  v740[2] = v741[2];
                  v740[3] = v773;
                  uint64_t v774 = v741[5];
                  v740[4] = v741[4];
                  v740[5] = v774;
                  *((_WORD *)v740 + 24) = *((_WORD *)v741 + 24);
                  *(_OWORD *)(v740 + 7) = *(_OWORD *)(v741 + 7);
                  uint64_t v775 = v741[10];
                  v740[9] = v741[9];
                  v740[10] = v775;
                  uint64_t v776 = v741[12];
                  v740[11] = v741[11];
                  v740[12] = v776;
                  v740[13] = v741[13];
                  *((unsigned char *)v740 + 112) = *((unsigned char *)v741 + 112);
                  uint64_t v777 = v741[16];
                  v740[15] = v741[15];
                  v740[16] = v777;
                  *((unsigned char *)v740 + 136) = *((unsigned char *)v741 + 136);
                  uint64_t v778 = v741[19];
                  v740[18] = v741[18];
                  v740[19] = v778;
                  uint64_t v779 = v741[21];
                  v740[20] = v741[20];
                  v740[21] = v779;
                  *((unsigned char *)v740 + 184) = *((unsigned char *)v741 + 184);
                  v740[22] = v741[22];
                  uint64_t v780 = v741[25];
                  v740[24] = v741[24];
                  v740[25] = v780;
                  *((unsigned char *)v740 + 224) = *((unsigned char *)v741 + 224);
                  uint64_t v781 = v741[27];
                  v740[26] = v741[26];
                  v740[27] = v781;
                  __dste = v741 + 29;
                  unint64_t v782 = v741[30];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  if (v782 >= 0x11)
                  {
                    v740[29] = *__dste;
                    v740[30] = v782;
                    swift_bridgeObjectRetain();
                  }
                  else
                  {
                    *(_OWORD *)(v740 + 29) = *(_OWORD *)__dste;
                  }
                  goto LABEL_590;
                default:
                  memcpy(v740, v741, *(void *)(*(void *)(v7 - 8) + 64));
                  goto LABEL_591;
              }
              uint64_t v875 = v741[6];
              v740[5] = v741[5];
              v740[6] = v875;
              uint64_t v876 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
              v877 = (char *)v740 + v876;
              v878 = (void *)((char *)v741 + v876);
              *(void *)((char *)v740 + v876) = *v878;
              uint64_t v879 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
              v880 = &v877[v879];
              v881 = (void *)((char *)v878 + v879);
              type metadata accessor for PuzzleStatisticCategory(0);
              swift_bridgeObjectRetain();
              swift_unknownObjectRetain();
              switch(swift_getEnumCaseMultiPayload())
              {
                case 1u:
                  uint64_t v961 = type metadata accessor for PuzzleStatisticValue(0);
                  int v962 = swift_getEnumCaseMultiPayload();
                  if (v962 == 5)
                  {
                    uint64_t v963 = type metadata accessor for PuzzleStreak();
                    uint64_t v964 = *(void *)(v963 - 8);
                    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v964 + 48))(v881, 1, v963))
                    {
LABEL_555:
                      sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                      memcpy(v880, v881, *(void *)(*(void *)(v1075 - 8) + 64));
                      goto LABEL_570;
                    }
                  }
                  else
                  {
                    if (v962 != 4)
                    {
                      memcpy(v880, v881, *(void *)(*(void *)(v961 - 8) + 64));
                      goto LABEL_571;
                    }
                    uint64_t v963 = type metadata accessor for PuzzleStreak();
                    uint64_t v964 = *(void *)(v963 - 8);
                    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v964 + 48))(v881, 1, v963)) {
                      goto LABEL_555;
                    }
                  }
                  uint64_t v1085 = sub_1C151555C();
                  (*(void (**)(char *, void *, uint64_t))(*(void *)(v1085 - 8) + 16))(v880, v881, v1085);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v964 + 56))(v880, 0, 1, v963);
LABEL_570:
                  swift_storeEnumTagMultiPayload();
LABEL_571:
                  uint64_t v1086 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
                  uint64_t v1087 = *(int *)(v1086 + 20);
                  v1088 = v880;
                  v1089 = &v880[v1087];
                  v1090 = (char *)v881 + v1087;
                  int v1091 = swift_getEnumCaseMultiPayload();
                  if (v1091 == 5)
                  {
                    uint64_t v1092 = type metadata accessor for PuzzleStreak();
                    uint64_t v1093 = *(void *)(v1092 - 8);
                    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1093 + 48))(v1090, 1, v1092))
                    {
LABEL_576:
                      sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                      memcpy(v1089, v1090, *(void *)(*(void *)(v1094 - 8) + 64));
LABEL_579:
                      swift_storeEnumTagMultiPayload();
                      goto LABEL_580;
                    }
                  }
                  else
                  {
                    if (v1091 != 4)
                    {
                      memcpy(v1089, v1090, *(void *)(*(void *)(v961 - 8) + 64));
LABEL_580:
                      uint64_t v1096 = *(int *)(v1086 + 24);
                      v1097 = (char *)v1088 + v1096;
                      v1098 = (char *)v881 + v1096;
                      int v1099 = swift_getEnumCaseMultiPayload();
                      if (v1099 == 5)
                      {
                        uint64_t v1100 = type metadata accessor for PuzzleStreak();
                        uint64_t v1101 = *(void *)(v1100 - 8);
                        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1101 + 48))(v1098, 1, v1100))
                        {
LABEL_585:
                          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                          memcpy(v1097, v1098, *(void *)(*(void *)(v1102 - 8) + 64));
                          goto LABEL_588;
                        }
                        goto LABEL_587;
                      }
                      if (v1099 == 4)
                      {
                        uint64_t v1100 = type metadata accessor for PuzzleStreak();
                        uint64_t v1101 = *(void *)(v1100 - 8);
                        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1101 + 48))(v1098, 1, v1100)) {
                          goto LABEL_585;
                        }
LABEL_587:
                        uint64_t v1103 = sub_1C151555C();
                        (*(void (**)(char *, char *, uint64_t))(*(void *)(v1103 - 8) + 16))(v1097, v1098, v1103);
                        (*(void (**)(char *, void, uint64_t, uint64_t))(v1101 + 56))(v1097, 0, 1, v1100);
                        goto LABEL_588;
                      }
                      memcpy(v1097, v1098, *(void *)(*(void *)(v961 - 8) + 64));
LABEL_589:
                      swift_storeEnumTagMultiPayload();
                      goto LABEL_590;
                    }
                    uint64_t v1092 = type metadata accessor for PuzzleStreak();
                    uint64_t v1093 = *(void *)(v1092 - 8);
                    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1093 + 48))(v1090, 1, v1092)) {
                      goto LABEL_576;
                    }
                  }
                  uint64_t v1095 = sub_1C151555C();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v1095 - 8) + 16))(v1089, v1090, v1095);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v1093 + 56))(v1089, 0, 1, v1092);
                  goto LABEL_579;
                case 2u:
                  v958 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
                  uint64_t v959 = *((void *)v958 - 1);
                  if ((*(unsigned int (**)(void *, uint64_t, int *))(v959 + 48))(v881, 1, v958))
                  {
                    sub_1BFEEF2C0(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
                    memcpy(v880, v881, *(void *)(*(void *)(v960 - 8) + 64));
                  }
                  else
                  {
                    uint64_t v1029 = sub_1C151631C();
                    (*(void (**)(char *, void *, uint64_t))(*(void *)(v1029 - 8) + 16))(v880, v881, v1029);
                    v1030 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
                    uint64_t v1031 = v1030[5];
                    v1032 = &v880[v1031];
                    v1033 = (void *)((char *)v881 + v1031);
                    uint64_t v1034 = v1033[1];
                    *(void *)v1032 = *v1033;
                    *((void *)v1032 + 1) = v1034;
                    uint64_t v1035 = v1030[6];
                    v1147 = v880;
                    v1036 = &v880[v1035];
                    v1037 = (void *)((char *)v881 + v1035);
                    uint64_t v1038 = v1037[1];
                    *(void *)v1036 = *v1037;
                    *((void *)v1036 + 1) = v1038;
                    v1039 = v1037 + 2;
                    unint64_t v1040 = v1037[3];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    if (v1040 >> 60 == 15)
                    {
                      *((_OWORD *)v1036 + 1) = *(_OWORD *)v1039;
                    }
                    else
                    {
                      uint64_t v1077 = *v1039;
                      sub_1BFE95820(*v1039, v1040);
                      *((void *)v1036 + 2) = v1077;
                      *((void *)v1036 + 3) = v1040;
                    }
                    *(void *)&v1147[v1030[7]] = *(void *)((char *)v881 + v1030[7]);
                    *(void *)&v1147[v1030[8]] = *(void *)((char *)v881 + v1030[8]);
                    *(void *)&v1147[v958[5]] = *(void *)((char *)v881 + v958[5]);
                    *(void *)&v1147[v958[6]] = *(void *)((char *)v881 + v958[6]);
                    uint64_t v1078 = v958[7];
                    v1079 = &v1147[v1078];
                    v1080 = (void *)((char *)v881 + v1078);
                    uint64_t v1081 = v1080[1];
                    *(void *)v1079 = *v1080;
                    *((void *)v1079 + 1) = v1081;
                    v1082 = *(void (**)(char *, void, uint64_t, int *))(v959 + 56);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    v1082(v1147, 0, 1, v958);
                  }
                  goto LABEL_589;
                case 3u:
                  uint64_t v965 = v881[1];
                  *(void *)v880 = *v881;
                  *((void *)v880 + 1) = v965;
                  v880[16] = *((unsigned char *)v881 + 16);
                  v966 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
                  uint64_t v967 = v966[6];
                  v1146 = v880;
                  v968 = &v880[v967];
                  v969 = (char *)v881 + v967;
                  uint64_t v970 = type metadata accessor for PuzzleStreak();
                  uint64_t v971 = *(void *)(v970 - 8);
                  v972 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v971 + 48);
                  if (v972(v969, 1, v970))
                  {
                    sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                    memcpy(v968, v969, *(void *)(*(void *)(v973 - 8) + 64));
                  }
                  else
                  {
                    uint64_t v1057 = sub_1C151555C();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v1057 - 8) + 16))(v968, v969, v1057);
                    (*(void (**)(char *, void, uint64_t, uint64_t))(v971 + 56))(v968, 0, 1, v970);
                  }
                  uint64_t v1058 = v966[7];
                  v1059 = &v1146[v1058];
                  v1060 = (char *)v881 + v1058;
                  if (v972((char *)v881 + v1058, 1, v970))
                  {
                    sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                    memcpy(v1059, v1060, *(void *)(*(void *)(v1061 - 8) + 64));
                  }
                  else
                  {
                    uint64_t v1062 = sub_1C151555C();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v1062 - 8) + 16))(v1059, v1060, v1062);
                    (*(void (**)(char *, void, uint64_t, uint64_t))(v971 + 56))(v1059, 0, 1, v970);
                  }
                  uint64_t v1063 = v966[8];
                  v1064 = &v1146[v1063];
                  v1065 = (_OWORD *)((char *)v881 + v1063);
                  long long v1066 = v1065[1];
                  *(_OWORD *)v1064 = *v1065;
                  *((_OWORD *)v1064 + 1) = v1066;
                  *(_OWORD *)(v1064 + 25) = *(_OWORD *)((char *)v1065 + 25);
                  uint64_t v1067 = v966[9];
                  v1068 = &v1146[v1067];
                  v1069 = (_OWORD *)((char *)v881 + v1067);
                  *(_OWORD *)(v1068 + 25) = *(_OWORD *)((char *)v1069 + 25);
                  long long v1070 = v1069[1];
                  *(_OWORD *)v1068 = *v1069;
                  *((_OWORD *)v1068 + 1) = v1070;
                  uint64_t v1071 = v966[10];
                  v1072 = &v1146[v1071];
                  v1073 = (_OWORD *)((char *)v881 + v1071);
                  long long v1074 = v1073[1];
                  *(_OWORD *)v1072 = *v1073;
                  *((_OWORD *)v1072 + 1) = v1074;
                  *(_OWORD *)(v1072 + 25) = *(_OWORD *)((char *)v1073 + 25);
                  goto LABEL_589;
                default:
                  uint64_t v882 = type metadata accessor for PuzzleStatisticValue(0);
                  int v883 = swift_getEnumCaseMultiPayload();
                  if (v883 == 5)
                  {
                    uint64_t v884 = type metadata accessor for PuzzleStreak();
                    uint64_t v885 = *(void *)(v884 - 8);
                    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v885 + 48))(v881, 1, v884)) {
                      goto LABEL_451;
                    }
                  }
                  else
                  {
                    if (v883 != 4)
                    {
                      memcpy(v880, v881, *(void *)(*(void *)(v882 - 8) + 64));
                      goto LABEL_589;
                    }
                    uint64_t v884 = type metadata accessor for PuzzleStreak();
                    uint64_t v885 = *(void *)(v884 - 8);
                    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v885 + 48))(v881, 1, v884))
                    {
LABEL_451:
                      sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                      memcpy(v880, v881, *(void *)(*(void *)(v886 - 8) + 64));
                      goto LABEL_588;
                    }
                  }
                  uint64_t v1084 = sub_1C151555C();
                  (*(void (**)(char *, void *, uint64_t))(*(void *)(v1084 - 8) + 16))(v880, v881, v1084);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v885 + 56))(v880, 0, 1, v884);
LABEL_588:
                  swift_storeEnumTagMultiPayload();
                  goto LABEL_589;
              }
            }
            uint64_t v272 = type metadata accessor for PuzzleStreak();
            uint64_t v273 = *(void *)(v272 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v273 + 48))(v269, 1, v272)) {
              goto LABEL_108;
            }
          }
          uint64_t v700 = sub_1C151555C();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v700 - 8) + 16))(v268, v269, v700);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v273 + 56))(v268, 0, 1, v272);
          goto LABEL_345;
      }
    }
    switch(v8)
    {
      case 0:
        uint64_t v14 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v14;
        uint64_t v15 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v15;
        *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
        uint64_t v16 = a2 + 5;
        unint64_t v17 = a2[6];
        swift_bridgeObjectRetain();
        if (v17 >= 0x11)
        {
          *(void *)(a1 + 40) = *v16;
          *(void *)(a1 + 48) = v17;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 40) = *(_OWORD *)v16;
        }
        goto LABEL_564;
      case 1:
        uint64_t v157 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v157;
        uint64_t v158 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v158;
        *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
        uint64_t v159 = a2[6];
        *(void *)(a1 + 40) = a2[5];
        *(void *)(a1 + 48) = v159;
        uint64_t v160 = a2[8];
        *(void *)(a1 + 56) = a2[7];
        *(void *)(a1 + 64) = v160;
        uint64_t v161 = a2 + 9;
        unint64_t v162 = a2[10];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v162 >= 0x11)
        {
          *(void *)(a1 + 72) = *v161;
          *(void *)(a1 + 80) = v162;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 72) = *(_OWORD *)v161;
        }
        goto LABEL_564;
      case 2:
        uint64_t v55 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v55;
        uint64_t v56 = (int *)type metadata accessor for FeedBannerAd();
        uint64_t v57 = v56[5];
        uint64_t v58 = a1 + v57;
        uint64_t v59 = (uint64_t)a2 + v57;
        uint64_t v60 = sub_1C151DBAC();
        char v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 16);
        swift_bridgeObjectRetain();
        v61(v58, v59, v60);
        *(void *)(a1 + v56[6]) = *(uint64_t *)((char *)a2 + v56[6]);
        uint64_t v62 = v56[7];
        uint64_t v63 = a1 + v62;
        uint64_t v64 = (uint64_t)a2 + v62;
        *(void *)uint64_t v63 = *(void *)v64;
        *(unsigned char *)(v63 + 8) = *(unsigned char *)(v64 + 8);
        uint64_t v65 = v56[8];
        uint64_t v66 = a1 + v65;
        uint64_t v67 = (uint64_t)a2 + v65;
        unint64_t v68 = *(void *)(v67 + 8);
        if (v68 >= 0x11) {
          goto LABEL_84;
        }
        *(_OWORD *)uint64_t v66 = *(_OWORD *)v67;
        goto LABEL_564;
      case 3:
        uint64_t v163 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v163;
        *(void *)(a1 + 16) = a2[2];
        *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
        uint64_t v164 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v164;
        *(void *)(a1 + 48) = a2[6];
        *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
        v1158 = (int *)type metadata accessor for FeedHeadline(0);
        uint64_t v165 = v1158[10];
        v166 = (unsigned char *)(a1 + v165);
        uint64_t v167 = (uint64_t)a2 + v165;
        unsigned char *v166 = *((unsigned char *)a2 + v165);
        v166[1] = *((unsigned char *)a2 + v165 + 1);
        v168 = (int *)type metadata accessor for FeedHeadline.State(0);
        uint64_t v169 = v168[6];
        __dstb = &v166[v169];
        uint64_t v170 = (char *)(v167 + v169);
        uint64_t v171 = (int *)type metadata accessor for SharedItem();
        v1123 = (void *)*((void *)v171 - 1);
        uint64_t v172 = (unsigned int (*)(char *, uint64_t, int *))v1123[6];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if (v172(v170, 1, v171))
        {
          uint64_t v173 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(__dstb, v170, *(void *)(*(void *)(v173 - 8) + 64));
        }
        else
        {
          uint64_t v372 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v372 - 8) + 16))(__dstb, v170, v372);
          __dstb[v171[5]] = v170[v171[5]];
          uint64_t v373 = v171[6];
          v374 = *(void **)&v170[v373];
          *(void *)&__dstb[v373] = v374;
          uint64_t v375 = v171[7];
          v1140 = &v170[v375];
          v1152 = &__dstb[v375];
          uint64_t v376 = sub_1C1515FDC();
          v1119 = *(void (**)(char *, char *, uint64_t))(*(void *)(v376 - 8) + 16);
          id v377 = v374;
          v1119(v1152, v1140, v376);
          ((void (*)(char *, void, uint64_t, int *))v1123[7])(__dstb, 0, 1, v171);
        }
        v166[v168[7]] = *(unsigned char *)(v167 + v168[7]);
        v166[v168[8]] = *(unsigned char *)(v167 + v168[8]);
        v166[v168[9]] = *(unsigned char *)(v167 + v168[9]);
        v166[v168[10]] = *(unsigned char *)(v167 + v168[10]);
        uint64_t v378 = v1158[11];
        v379 = (void *)(a1 + v378);
        v380 = (char *)a2 + v378;
        uint64_t v381 = sub_1C151D2DC();
        uint64_t v382 = *(void *)(v381 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v382 + 48))(v380, 1, v381))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
          memcpy(v379, v380, *(void *)(*(void *)(v383 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v382 + 16))(v379, v380, v381);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v382 + 56))(v379, 0, 1, v381);
        }
        uint64_t v401 = v1158[12];
        v402 = (void *)(a1 + v401);
        v403 = (uint64_t *)((char *)a2 + v401);
        unint64_t v404 = v403[1];
        if (v404 >= 0x11)
        {
          void *v402 = *v403;
          v402[1] = v404;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v402 = *(_OWORD *)v403;
        }
        uint64_t v405 = v1158[13];
        unint64_t v406 = *(uint64_t *)((char *)a2 + v405);
        if (v406 >= 2)
        {
          if (v406 == 2)
          {
            *(void *)(a1 + v405) = 2;
          }
          else
          {
            *(void *)(a1 + v405) = v406;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(void *)(a1 + v405) = v406;
        }
        uint64_t v482 = v1158[14];
        v483 = *(void **)((char *)a2 + v482);
        *(void *)(a1 + v482) = v483;
        id v484 = v483;
        goto LABEL_564;
      case 4:
        uint64_t v69 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v69;
        *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t v70 = a2 + 3;
        unint64_t v71 = a2[4];
        if (v71 >= 0x11)
        {
          *(void *)(a1 + 24) = *v70;
          *(void *)(a1 + 32) = v71;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)v70;
        }
        uint64_t v237 = a2[6];
        *(void *)(a1 + 40) = a2[5];
        *(void *)(a1 + 48) = v237;
        v238 = (int *)type metadata accessor for FeedWebEmbed();
        uint64_t v239 = v238[8];
        uint64_t v240 = a1 + v239;
        uint64_t v241 = (uint64_t)a2 + v239;
        uint64_t v242 = sub_1C1515FDC();
        uint64_t v243 = *(void *)(v242 - 8);
        v244 = *(void (**)(uint64_t, uint64_t, uint64_t))(v243 + 16);
        swift_bridgeObjectRetain();
        v244(v240, v241, v242);
        v1161 = v238;
        uint64_t v245 = v238[9];
        v246 = (void *)(a1 + v245);
        v247 = (char *)a2 + v245;
        __dstd = (void (*)(char *, char *, void *))v244;
        v1151 = (void *)v242;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v243 + 48))((uint64_t)a2 + v245, 1, v242))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
          memcpy(v246, v247, *(void *)(*(void *)(v248 - 8) + 64));
        }
        else
        {
          v244((uint64_t)v246, (uint64_t)v247, v242);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v243 + 56))(v246, 0, 1, v242);
        }
        *(void *)(a1 + v238[10]) = *(uint64_t *)((char *)a2 + v238[10]);
        *(void *)(a1 + v238[11]) = *(uint64_t *)((char *)a2 + v238[11]);
        uint64_t v317 = v238[12];
        v318 = (void *)(a1 + v317);
        v319 = (uint64_t *)((char *)a2 + v317);
        v320 = (int *)type metadata accessor for FeedHeadline(0);
        uint64_t v321 = *((void *)v320 - 1);
        v322 = *(unsigned int (**)(void *, uint64_t, int *))(v321 + 48);
        swift_retain();
        swift_retain();
        if (v322(v319, 1, v320))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
          memcpy(v318, v319, *(void *)(*(void *)(v323 - 8) + 64));
        }
        else
        {
          uint64_t v1117 = v321;
          uint64_t v345 = v319[1];
          void *v318 = *v319;
          v318[1] = v345;
          v318[2] = v319[2];
          *((unsigned char *)v318 + 24) = *((unsigned char *)v319 + 24);
          uint64_t v346 = v319[5];
          v318[4] = v319[4];
          v318[5] = v346;
          v318[6] = v319[6];
          *((unsigned char *)v318 + 56) = *((unsigned char *)v319 + 56);
          uint64_t v347 = v320[10];
          v348 = (char *)v318 + v347;
          v349 = (char *)v319 + v347;
          unsigned char *v348 = *((unsigned char *)v319 + v347);
          v348[1] = *((unsigned char *)v319 + v347 + 1);
          uint64_t v350 = type metadata accessor for FeedHeadline.State(0);
          uint64_t v351 = *(int *)(v350 + 24);
          v1112 = &v348[v351];
          v1115 = (int *)v350;
          v352 = &v349[v351];
          v353 = (int *)type metadata accessor for SharedItem();
          uint64_t v1107 = *((void *)v353 - 1);
          v354 = *(unsigned int (**)(char *, uint64_t, int *))(v1107 + 48);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          if (v354(v352, 1, v353))
          {
            uint64_t v355 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(v1112, v352, *(void *)(*(void *)(v355 - 8) + 64));
          }
          else
          {
            uint64_t v544 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v544 - 8) + 16))(v1112, v352, v544);
            v1112[v353[5]] = v352[v353[5]];
            uint64_t v545 = v353[6];
            v546 = *(void **)&v352[v545];
            *(void *)&v1112[v545] = v546;
            uint64_t v547 = v353[7];
            v548 = &v1112[v547];
            v549 = &v352[v547];
            id v550 = v546;
            __dstd(v548, v549, v1151);
            (*(void (**)(char *, void, uint64_t, int *))(v1107 + 56))(v1112, 0, 1, v353);
          }
          v348[v1115[7]] = v349[v1115[7]];
          v348[v1115[8]] = v349[v1115[8]];
          v348[v1115[9]] = v349[v1115[9]];
          v348[v1115[10]] = v349[v1115[10]];
          uint64_t v551 = v320[11];
          v552 = (char *)v318 + v551;
          v553 = (char *)v319 + v551;
          uint64_t v554 = sub_1C151D2DC();
          uint64_t v555 = *(void *)(v554 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v555 + 48))(v553, 1, v554))
          {
            sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
            memcpy(v552, v553, *(void *)(*(void *)(v556 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v555 + 16))(v552, v553, v554);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v555 + 56))(v552, 0, 1, v554);
          }
          uint64_t v563 = v320[12];
          v564 = (void *)((char *)v318 + v563);
          v565 = (void *)((char *)v319 + v563);
          unint64_t v566 = v565[1];
          if (v566 >= 0x11)
          {
            void *v564 = *v565;
            v564[1] = v566;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)v564 = *(_OWORD *)v565;
          }
          uint64_t v567 = v320[13];
          unint64_t v568 = *(void *)((char *)v319 + v567);
          if (v568 >= 2)
          {
            if (v568 == 2)
            {
              *(void *)((char *)v318 + v567) = 2;
            }
            else
            {
              *(void *)((char *)v318 + v567) = v568;
              swift_unknownObjectRetain();
            }
          }
          else
          {
            *(void *)((char *)v318 + v567) = v568;
          }
          uint64_t v631 = v320[14];
          v632 = *(void **)((char *)v319 + v631);
          *(void *)((char *)v318 + v631) = v632;
          v633 = *(void (**)(void *, void, uint64_t, int *))(v1117 + 56);
          id v634 = v632;
          v633(v318, 0, 1, v320);
        }
        uint64_t v635 = v1161[13];
        v636 = (void *)(a1 + v635);
        v637 = (uint64_t *)((char *)a2 + v635);
        uint64_t v638 = type metadata accessor for WebEmbedDataVisualization();
        uint64_t v639 = *(void *)(v638 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v639 + 48))(v637, 1, v638))
        {
          sub_1BFEEF2C0(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
          memcpy(v636, v637, *(void *)(*(void *)(v640 - 8) + 64));
        }
        else
        {
          int v641 = swift_getEnumCaseMultiPayload();
          uint64_t v642 = *v637;
          if (v641 == 1)
          {
            uint64_t v643 = v637[1];
            void *v636 = v642;
            v636[1] = v643;
            uint64_t v644 = type metadata accessor for GenericDataVisualization();
            uint64_t v645 = *(int *)(v644 + 20);
            v646 = (char *)v636 + v645;
            v647 = (char *)v637 + v645;
            swift_bridgeObjectRetain();
            __dstd(v646, v647, v1151);
            *(void *)((char *)v636 + *(int *)(v644 + 24)) = *(uint64_t *)((char *)v637 + *(int *)(v644 + 24));
            swift_bridgeObjectRetain();
          }
          else
          {
            void *v636 = v642;
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(v639 + 56))(v636, 0, 1, v638);
        }
        *(unsigned char *)(a1 + v1161[14]) = *((unsigned char *)a2 + v1161[14]);
        goto LABEL_590;
      case 5:
        uint64_t v174 = (void *)*a2;
        uint64_t v175 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v175;
        *(void *)(a1 + 16) = a2[2];
        *(_WORD *)(a1 + 24) = *((_WORD *)a2 + 12);
        *(void *)(a1 + 32) = a2[4];
        *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
        v176 = (void *)a2[7];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = v176;
        *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
        uint64_t v177 = a2[10];
        id v178 = v174;
        swift_bridgeObjectRetain();
        id v179 = v176;
        if (v177 == 1)
        {
          long long v180 = *(_OWORD *)(a2 + 11);
          *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
          *(_OWORD *)(a1 + 88) = v180;
          *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 13);
        }
        else
        {
          *(void *)(a1 + 72) = a2[9];
          *(void *)(a1 + 80) = v177;
          uint64_t v275 = a2[12];
          *(void *)(a1 + 88) = a2[11];
          *(void *)(a1 + 96) = v275;
          v277 = (void *)a2[13];
          uint64_t v276 = a2[14];
          *(void *)(a1 + 104) = v277;
          *(void *)(a1 + 112) = v276;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v278 = v277;
        }
        v279 = a2 + 15;
        unint64_t v280 = a2[16];
        if (v280 >= 0x11)
        {
          *(void *)(a1 + 120) = *v279;
          *(void *)(a1 + 128) = v280;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 120) = *(_OWORD *)v279;
        }
        *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
        goto LABEL_564;
      case 6:
        int v181 = *((unsigned __int8 *)a2 + 281);
        if (v181 == 2)
        {
          uint64_t v433 = a2[1];
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = v433;
          *(void *)(a1 + 16) = a2[2];
          *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
          *(void *)(a1 + 32) = a2[4];
          *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
          uint64_t v434 = a2[7];
          *(void *)(a1 + 48) = a2[6];
          *(void *)(a1 + 56) = v434;
          uint64_t v435 = a2[9];
          *(void *)(a1 + 64) = a2[8];
          *(void *)(a1 + 72) = v435;
          uint64_t v436 = a2[11];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v436 != 1)
          {
            *(void *)(a1 + 80) = a2[10];
            *(void *)(a1 + 88) = v436;
            uint64_t v507 = a2[15];
            swift_bridgeObjectRetain();
            if (v507)
            {
              uint64_t v508 = a2[16];
              *(void *)(a1 + 120) = v507;
              *(void *)(a1 + 128) = v508;
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v507 - 8))(a1 + 96, (uint64_t)(a2 + 12), v507);
              *(void *)(a1 + 136) = a2[17];
            }
            else
            {
              long long v687 = *((_OWORD *)a2 + 7);
              *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
              *(_OWORD *)(a1 + 112) = v687;
              *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
            }
            *(unsigned char *)(a1 + 144) = *((unsigned char *)a2 + 144);
            goto LABEL_339;
          }
          v437 = (_OWORD *)(a1 + 80);
          v438 = a2 + 10;
          long long v439 = *((_OWORD *)a2 + 8);
          *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
          *(_OWORD *)(a1 + 128) = v439;
          *(unsigned char *)(a1 + 144) = *((unsigned char *)a2 + 144);
        }
        else
        {
          if (v181 != 1)
          {
            v440 = (void *)*a2;
            uint64_t v441 = a2[1];
            *(void *)a1 = *a2;
            *(void *)(a1 + 8) = v441;
            *(void *)(a1 + 16) = a2[2];
            *(_WORD *)(a1 + 24) = *((_WORD *)a2 + 12);
            *(void *)(a1 + 32) = a2[4];
            *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
            v442 = (void *)a2[7];
            *(void *)(a1 + 48) = a2[6];
            *(void *)(a1 + 56) = v442;
            *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
            uint64_t v443 = a2[10];
            id v444 = v440;
            swift_bridgeObjectRetain();
            id v445 = v442;
            if (v443 == 1)
            {
              long long v446 = *(_OWORD *)(a2 + 11);
              *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
              *(_OWORD *)(a1 + 88) = v446;
              *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 13);
            }
            else
            {
              *(void *)(a1 + 72) = a2[9];
              *(void *)(a1 + 80) = v443;
              uint64_t v509 = a2[12];
              *(void *)(a1 + 88) = a2[11];
              *(void *)(a1 + 96) = v509;
              v511 = (void *)a2[13];
              uint64_t v510 = a2[14];
              *(void *)(a1 + 104) = v511;
              *(void *)(a1 + 112) = v510;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v512 = v511;
            }
            v513 = a2 + 15;
            unint64_t v514 = a2[16];
            if (v514 >= 0x11)
            {
              *(void *)(a1 + 120) = *v513;
              *(void *)(a1 + 128) = v514;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 120) = *(_OWORD *)v513;
            }
            *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
            goto LABEL_339;
          }
          id v182 = (void *)*a2;
          uint64_t v183 = a2[1];
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = v183;
          *(void *)(a1 + 16) = a2[2];
          *(_WORD *)(a1 + 24) = *((_WORD *)a2 + 12);
          *(void *)(a1 + 32) = a2[4];
          *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
          uint64_t v184 = (void *)a2[7];
          *(void *)(a1 + 48) = a2[6];
          *(void *)(a1 + 56) = v184;
          *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
          uint64_t v185 = a2[10];
          id v186 = v182;
          swift_bridgeObjectRetain();
          id v187 = v184;
          if (v185 == 1)
          {
            long long v188 = *(_OWORD *)(a2 + 11);
            *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
            *(_OWORD *)(a1 + 88) = v188;
            *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 13);
          }
          else
          {
            *(void *)(a1 + 72) = a2[9];
            *(void *)(a1 + 80) = v185;
            uint64_t v493 = a2[12];
            *(void *)(a1 + 88) = a2[11];
            *(void *)(a1 + 96) = v493;
            v495 = (void *)a2[13];
            uint64_t v494 = a2[14];
            *(void *)(a1 + 104) = v495;
            *(void *)(a1 + 112) = v494;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v496 = v495;
          }
          v497 = a2 + 15;
          unint64_t v498 = a2[16];
          if (v498 >= 0x11)
          {
            *(void *)(a1 + 120) = *v497;
            *(void *)(a1 + 128) = v498;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 120) = *(_OWORD *)v497;
          }
          v438 = a2 + 18;
          v523 = (void *)a2[18];
          *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
          if (v523)
          {
            uint64_t v524 = a2[19];
            uint64_t v525 = a2[20];
            *(void *)(a1 + 144) = v523;
            *(void *)(a1 + 152) = v524;
            *(void *)(a1 + 160) = v525;
            *(_WORD *)(a1 + 168) = *((_WORD *)a2 + 84);
            *(void *)(a1 + 176) = a2[22];
            *(unsigned char *)(a1 + 184) = *((unsigned char *)a2 + 184);
            v526 = (void *)a2[25];
            *(void *)(a1 + 192) = a2[24];
            *(void *)(a1 + 200) = v526;
            *(unsigned char *)(a1 + 208) = *((unsigned char *)a2 + 208);
            uint64_t v527 = a2[28];
            id v528 = v523;
            swift_bridgeObjectRetain();
            id v529 = v526;
            if (v527 == 1)
            {
              long long v530 = *(_OWORD *)(a2 + 29);
              *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 27);
              *(_OWORD *)(a1 + 232) = v530;
              *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 31);
            }
            else
            {
              *(void *)(a1 + 216) = a2[27];
              *(void *)(a1 + 224) = v527;
              uint64_t v583 = a2[30];
              *(void *)(a1 + 232) = a2[29];
              *(void *)(a1 + 240) = v583;
              v585 = (void *)a2[31];
              uint64_t v584 = a2[32];
              *(void *)(a1 + 248) = v585;
              *(void *)(a1 + 256) = v584;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v586 = v585;
            }
            v587 = a2 + 33;
            unint64_t v588 = a2[34];
            if (v588 >= 0x11)
            {
              *(void *)(a1 + 264) = *v587;
              *(void *)(a1 + 272) = v588;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 264) = *(_OWORD *)v587;
            }
            *(unsigned char *)(a1 + 280) = *((unsigned char *)a2 + 280);
LABEL_339:
            *(unsigned char *)(a1 + 281) = v181;
LABEL_564:
            swift_storeEnumTagMultiPayload();
            goto LABEL_591;
          }
          v437 = (_OWORD *)(a1 + 144);
          long long v573 = *((_OWORD *)a2 + 16);
          *(_OWORD *)(a1 + 240) = *((_OWORD *)a2 + 15);
          *(_OWORD *)(a1 + 256) = v573;
          *(_OWORD *)(a1 + 265) = *(_OWORD *)((char *)a2 + 265);
          long long v574 = *((_OWORD *)a2 + 12);
          *(_OWORD *)(a1 + 176) = *((_OWORD *)a2 + 11);
          *(_OWORD *)(a1 + 192) = v574;
          long long v575 = *((_OWORD *)a2 + 14);
          *(_OWORD *)(a1 + 208) = *((_OWORD *)a2 + 13);
          *(_OWORD *)(a1 + 224) = v575;
        }
        long long v576 = v438[1];
        _OWORD *v437 = *v438;
        v437[1] = v576;
        goto LABEL_339;
      case 7:
        uint64_t v189 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v189;
        *(void *)(a1 + 16) = a2[2];
        *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
        *(void *)(a1 + 32) = a2[4];
        *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
        uint64_t v190 = a2[7];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = v190;
        uint64_t v191 = a2[9];
        *(void *)(a1 + 64) = a2[8];
        *(void *)(a1 + 72) = v191;
        uint64_t v192 = a2[11];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v192 == 1)
        {
          long long v193 = *((_OWORD *)a2 + 8);
          *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
          *(_OWORD *)(a1 + 128) = v193;
          *(unsigned char *)(a1 + 144) = *((unsigned char *)a2 + 144);
          long long v194 = *((_OWORD *)a2 + 6);
          *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
          *(_OWORD *)(a1 + 96) = v194;
        }
        else
        {
          *(void *)(a1 + 80) = a2[10];
          *(void *)(a1 + 88) = v192;
          uint64_t v281 = a2[15];
          swift_bridgeObjectRetain();
          if (v281)
          {
            uint64_t v282 = a2[16];
            *(void *)(a1 + 120) = v281;
            *(void *)(a1 + 128) = v282;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v281 - 8))(a1 + 96, (uint64_t)(a2 + 12), v281);
            *(void *)(a1 + 136) = a2[17];
          }
          else
          {
            long long v486 = *((_OWORD *)a2 + 7);
            *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
            *(_OWORD *)(a1 + 112) = v486;
            *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
          }
          *(unsigned char *)(a1 + 144) = *((unsigned char *)a2 + 144);
        }
        goto LABEL_564;
      case 8:
        uint64_t v195 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v195;
        uint64_t v196 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
        unint64_t v197 = (void *)(a1 + v196);
        uint64_t v198 = (uint64_t)a2 + v196;
        uint64_t v199 = *(uint64_t *)((char *)a2 + v196 + 8);
        void *v197 = *(uint64_t *)((char *)a2 + v196);
        v197[1] = v199;
        uint64_t v200 = *(uint64_t *)((char *)a2 + v196 + 24);
        v197[2] = *(uint64_t *)((char *)a2 + v196 + 16);
        v197[3] = v200;
        uint64_t v201 = type metadata accessor for FormatCustomItem.Resolved();
        uint64_t v202 = *(int *)(v201 + 24);
        v1149 = (char *)v197 + v202;
        uint64_t v1159 = v201;
        unint64_t v203 = (const void *)(v198 + v202);
        uint64_t v204 = type metadata accessor for FormatCustomItem.Action();
        v1138 = *(void **)(v204 - 8);
        id v205 = (unsigned int (*)(const void *, uint64_t, uint64_t))v1138[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v205(v203, 1, v204))
        {
          sub_1BFEEF2C0(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
          memcpy(v1149, v203, *(void *)(*(void *)(v206 - 8) + 64));
        }
        else
        {
          uint64_t v384 = sub_1C1515FDC();
          (*(void (**)(char *, const void *, uint64_t))(*(void *)(v384 - 8) + 16))(v1149, v203, v384);
          ((void (*)(char *, void, uint64_t, uint64_t))v1138[7])(v1149, 0, 1, v204);
        }
        *(void *)((char *)v197 + *(int *)(v1159 + 28)) = *(void *)(v198 + *(int *)(v1159 + 28));
        swift_bridgeObjectRetain();
        goto LABEL_590;
      case 9:
        uint64_t v72 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v72;
        uint64_t v73 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v73;
        uint64_t v74 = a2[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v74)
        {
          uint64_t v75 = a2[8];
          *(void *)(a1 + 56) = v74;
          *(void *)(a1 + 64) = v75;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v74 - 8))(a1 + 32, (uint64_t)(a2 + 4), v74);
        }
        else
        {
          long long v305 = *((_OWORD *)a2 + 3);
          *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
          *(_OWORD *)(a1 + 48) = v305;
          *(void *)(a1 + 64) = a2[8];
        }
        v306 = (_OWORD *)(a1 + 72);
        v307 = a2 + 9;
        uint64_t v308 = a2[12];
        if (v308)
        {
          uint64_t v309 = a2[13];
          *(void *)(a1 + 96) = v308;
          *(void *)(a1 + 104) = v309;
          (**(void (***)(_OWORD *, _OWORD *))(v308 - 8))(v306, v307);
        }
        else
        {
          long long v329 = *(_OWORD *)(a2 + 11);
          _OWORD *v306 = *v307;
          *(_OWORD *)(a1 + 88) = v329;
          *(void *)(a1 + 104) = a2[13];
        }
        v330 = (_OWORD *)(a1 + 112);
        v331 = a2 + 14;
        uint64_t v332 = a2[17];
        if (v332)
        {
          uint64_t v333 = a2[18];
          *(void *)(a1 + 136) = v332;
          *(void *)(a1 + 144) = v333;
          (**(void (***)(_OWORD *, _OWORD *))(v332 - 8))(v330, v331);
        }
        else
        {
          long long v357 = *((_OWORD *)a2 + 8);
          _OWORD *v330 = *v331;
          *(_OWORD *)(a1 + 128) = v357;
          *(void *)(a1 + 144) = a2[18];
        }
        goto LABEL_564;
      case 10:
        uint64_t v207 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v207;
        CGRect v208 = (int *)type metadata accessor for FeedEngagementBanner();
        uint64_t v209 = v208[5];
        uint64_t v210 = a1 + v209;
        uint64_t v211 = (uint64_t)a2 + v209;
        uint64_t v212 = sub_1C151959C();
        unint64_t v213 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v212 - 8) + 16);
        swift_bridgeObjectRetain();
        v213(v210, v211, v212);
        *(void *)(a1 + v208[6]) = *(uint64_t *)((char *)a2 + v208[6]);
        uint64_t v214 = v208[7];
        uint64_t v215 = a1 + v214;
        uint64_t v216 = (uint64_t)a2 + v214;
        *(void *)uint64_t v215 = *(void *)v216;
        *(unsigned char *)(v215 + 8) = *(unsigned char *)(v216 + 8);
        uint64_t v217 = v208[8];
        uint64_t v66 = a1 + v217;
        uint64_t v67 = (uint64_t)a2 + v217;
        unint64_t v68 = *(void *)(v67 + 8);
        if (v68 >= 0x11)
        {
LABEL_84:
          *(void *)uint64_t v66 = *(void *)v67;
          *(void *)(v66 + 8) = v68;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)uint64_t v66 = *(_OWORD *)v67;
        }
        goto LABEL_564;
      case 11:
        *(void *)a1 = *a2;
        swift_retain();
        goto LABEL_564;
      case 12:
        uint64_t v76 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v76;
        uint64_t v77 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v77;
        *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_564;
      case 13:
        uint64_t v218 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v218;
        *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
        v219 = a2 + 3;
        unint64_t v220 = a2[4];
        if (v220 >= 0x11)
        {
          *(void *)(a1 + 24) = *v219;
          *(void *)(a1 + 32) = v220;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)v219;
        }
        uint64_t v283 = a2[6];
        *(void *)(a1 + 40) = a2[5];
        *(void *)(a1 + 48) = v283;
        v284 = (void *)a2[8];
        *(void *)(a1 + 56) = a2[7];
        *(void *)(a1 + 64) = v284;
        *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
        *(void *)(a1 + 80) = a2[10];
        uint64_t v285 = a2[14];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        id v286 = v284;
        swift_bridgeObjectRetain();
        if (v285)
        {
          uint64_t v287 = a2[15];
          *(void *)(a1 + 112) = v285;
          *(void *)(a1 + 120) = v287;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v285 - 8))(a1 + 88, (uint64_t)(a2 + 11), v285);
        }
        else
        {
          long long v390 = *(_OWORD *)(a2 + 13);
          *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
          *(_OWORD *)(a1 + 104) = v390;
          *(void *)(a1 + 120) = a2[15];
        }
        v391 = (_OWORD *)(a1 + 128);
        v392 = a2 + 16;
        uint64_t v393 = a2[19];
        if (v393)
        {
          uint64_t v394 = a2[20];
          *(void *)(a1 + 152) = v393;
          *(void *)(a1 + 160) = v394;
          (**(void (***)(_OWORD *, _OWORD *))(v393 - 8))(v391, v392);
        }
        else
        {
          long long v412 = *((_OWORD *)a2 + 9);
          _OWORD *v391 = *v392;
          *(_OWORD *)(a1 + 144) = v412;
          *(void *)(a1 + 160) = a2[20];
        }
        v413 = (_OWORD *)(a1 + 168);
        v414 = a2 + 21;
        uint64_t v415 = a2[24];
        if (v415)
        {
          uint64_t v416 = a2[25];
          *(void *)(a1 + 192) = v415;
          *(void *)(a1 + 200) = v416;
          (**(void (***)(_OWORD *, _OWORD *))(v415 - 8))(v413, v414);
        }
        else
        {
          long long v418 = *(_OWORD *)(a2 + 23);
          _OWORD *v413 = *v414;
          *(_OWORD *)(a1 + 184) = v418;
          *(void *)(a1 + 200) = a2[25];
        }
        goto LABEL_564;
      case 14:
        uint64_t v78 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v78;
        *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
        id v79 = a2 + 3;
        unint64_t v80 = a2[4];
        if (v80 >= 0x11)
        {
          *(void *)(a1 + 24) = *v79;
          *(void *)(a1 + 32) = v80;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)v79;
        }
        uint64_t v249 = a2[6];
        *(void *)(a1 + 40) = a2[5];
        *(void *)(a1 + 48) = v249;
        *(void *)(a1 + 56) = a2[7];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_564;
      case 15:
        uint64_t v221 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v221;
        *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
        v222 = a2 + 3;
        unint64_t v223 = a2[4];
        if (v223 >= 0x11)
        {
          *(void *)(a1 + 24) = *v222;
          *(void *)(a1 + 32) = v223;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)v222;
        }
        break;
      case 16:
        uint64_t v81 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v81;
        uint64_t v82 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v82;
        uint64_t v83 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v83;
        *(_WORD *)(a1 + 48) = *((_WORD *)a2 + 24);
        *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
        uint64_t v84 = a2[10];
        *(void *)(a1 + 72) = a2[9];
        *(void *)(a1 + 80) = v84;
        uint64_t v85 = a2[12];
        *(void *)(a1 + 88) = a2[11];
        *(void *)(a1 + 96) = v85;
        *(void *)(a1 + 104) = a2[13];
        *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
        uint64_t v86 = a2[16];
        *(void *)(a1 + 120) = a2[15];
        *(void *)(a1 + 128) = v86;
        *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
        uint64_t v87 = a2[19];
        *(void *)(a1 + 144) = a2[18];
        *(void *)(a1 + 152) = v87;
        uint64_t v88 = a2[21];
        *(void *)(a1 + 160) = a2[20];
        *(void *)(a1 + 168) = v88;
        *(unsigned char *)(a1 + 184) = *((unsigned char *)a2 + 184);
        *(void *)(a1 + 176) = a2[22];
        uint64_t v89 = a2[25];
        *(void *)(a1 + 192) = a2[24];
        *(void *)(a1 + 200) = v89;
        *(unsigned char *)(a1 + 224) = *((unsigned char *)a2 + 224);
        uint64_t v90 = a2[27];
        *(void *)(a1 + 208) = a2[26];
        *(void *)(a1 + 216) = v90;
        v1136 = a2 + 29;
        unint64_t v91 = a2[30];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v91 >= 0x11)
        {
          *(void *)(a1 + 232) = *v1136;
          *(void *)(a1 + 240) = v91;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 232) = *(_OWORD *)v1136;
        }
        goto LABEL_564;
      default:
        memcpy((void *)a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        goto LABEL_591;
    }
    uint64_t v288 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v288;
    uint64_t v289 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
    uint64_t v290 = a1 + v289;
    uint64_t v291 = (uint64_t)a2 + v289;
    *(void *)(a1 + v289) = *(uint64_t *)((char *)a2 + v289);
    uint64_t v292 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
    v293 = (void *)(v290 + v292);
    v294 = (void *)(v291 + v292);
    type metadata accessor for PuzzleStatisticCategory(0);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v466 = type metadata accessor for PuzzleStatisticValue(0);
        int v467 = swift_getEnumCaseMultiPayload();
        if (v467 == 5)
        {
          uint64_t v468 = type metadata accessor for PuzzleStreak();
          uint64_t v469 = *(void *)(v468 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v469 + 48))(v294, 1, v468))
          {
LABEL_334:
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v293, v294, *(void *)(*(void *)(v685 - 8) + 64));
            goto LABEL_361;
          }
        }
        else
        {
          if (v467 != 4)
          {
            memcpy(v293, v294, *(void *)(*(void *)(v466 - 8) + 64));
            goto LABEL_362;
          }
          uint64_t v468 = type metadata accessor for PuzzleStreak();
          uint64_t v469 = *(void *)(v468 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v469 + 48))(v294, 1, v468)) {
            goto LABEL_334;
          }
        }
        uint64_t v712 = sub_1C151555C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v712 - 8) + 16))(v293, v294, v712);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v469 + 56))(v293, 0, 1, v468);
LABEL_361:
        swift_storeEnumTagMultiPayload();
LABEL_362:
        uint64_t v713 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
        uint64_t v714 = *(int *)(v713 + 20);
        v715 = (char *)v293 + v714;
        v716 = (char *)v294 + v714;
        int v717 = swift_getEnumCaseMultiPayload();
        if (v717 == 5)
        {
          uint64_t v718 = type metadata accessor for PuzzleStreak();
          uint64_t v719 = *(void *)(v718 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v719 + 48))(v716, 1, v718))
          {
LABEL_367:
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v715, v716, *(void *)(*(void *)(v720 - 8) + 64));
LABEL_379:
            swift_storeEnumTagMultiPayload();
            goto LABEL_380;
          }
        }
        else
        {
          if (v717 != 4)
          {
            memcpy(v715, v716, *(void *)(*(void *)(v466 - 8) + 64));
LABEL_380:
            uint64_t v730 = *(int *)(v713 + 24);
            v731 = (char *)v293 + v730;
            v732 = (char *)v294 + v730;
            int v733 = swift_getEnumCaseMultiPayload();
            if (v733 == 5)
            {
              uint64_t v734 = type metadata accessor for PuzzleStreak();
              uint64_t v735 = *(void *)(v734 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v735 + 48))(v732, 1, v734))
              {
LABEL_385:
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v731, v732, *(void *)(*(void *)(v736 - 8) + 64));
                goto LABEL_562;
              }
              goto LABEL_561;
            }
            if (v733 == 4)
            {
              uint64_t v734 = type metadata accessor for PuzzleStreak();
              uint64_t v735 = *(void *)(v734 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v735 + 48))(v732, 1, v734)) {
                goto LABEL_385;
              }
LABEL_561:
              uint64_t v1083 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v1083 - 8) + 16))(v731, v732, v1083);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v735 + 56))(v731, 0, 1, v734);
              goto LABEL_562;
            }
            memcpy(v731, v732, *(void *)(*(void *)(v466 - 8) + 64));
LABEL_563:
            swift_storeEnumTagMultiPayload();
            goto LABEL_564;
          }
          uint64_t v718 = type metadata accessor for PuzzleStreak();
          uint64_t v719 = *(void *)(v718 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v719 + 48))(v716, 1, v718)) {
            goto LABEL_367;
          }
        }
        uint64_t v729 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v729 - 8) + 16))(v715, v716, v729);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v719 + 56))(v715, 0, 1, v718);
        goto LABEL_379;
      case 2u:
        v450 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
        uint64_t v451 = *((void *)v450 - 1);
        if ((*(unsigned int (**)(void *, uint64_t, int *))(v451 + 48))(v294, 1, v450))
        {
          sub_1BFEEF2C0(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
          memcpy(v293, v294, *(void *)(*(void *)(v452 - 8) + 64));
        }
        else
        {
          uint64_t v601 = sub_1C151631C();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v601 - 8) + 16))(v293, v294, v601);
          v602 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
          uint64_t v603 = v602[5];
          v604 = (void *)((char *)v293 + v603);
          v605 = (void *)((char *)v294 + v603);
          uint64_t v606 = v605[1];
          void *v604 = *v605;
          v604[1] = v606;
          uint64_t v607 = v602[6];
          v608 = (char *)v293 + v607;
          v609 = (void *)((char *)v294 + v607);
          uint64_t v610 = v609[1];
          *(void *)v608 = *v609;
          *((void *)v608 + 1) = v610;
          v611 = v609 + 2;
          unint64_t v612 = v609[3];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v612 >> 60 == 15)
          {
            *((_OWORD *)v608 + 1) = *(_OWORD *)v611;
          }
          else
          {
            uint64_t v694 = *v611;
            sub_1BFE95820(*v611, v612);
            *((void *)v608 + 2) = v694;
            *((void *)v608 + 3) = v612;
          }
          *(void *)((char *)v293 + v602[7]) = *(void *)((char *)v294 + v602[7]);
          *(void *)((char *)v293 + v602[8]) = *(void *)((char *)v294 + v602[8]);
          *(void *)((char *)v293 + v450[5]) = *(void *)((char *)v294 + v450[5]);
          *(void *)((char *)v293 + v450[6]) = *(void *)((char *)v294 + v450[6]);
          uint64_t v695 = v450[7];
          v696 = (void *)((char *)v293 + v695);
          v697 = (void *)((char *)v294 + v695);
          uint64_t v698 = v697[1];
          void *v696 = *v697;
          v696[1] = v698;
          v699 = *(void (**)(void *, void, uint64_t, int *))(v451 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v699(v293, 0, 1, v450);
        }
        goto LABEL_563;
      case 3u:
        uint64_t v470 = v294[1];
        void *v293 = *v294;
        v293[1] = v470;
        *((unsigned char *)v293 + 16) = *((unsigned char *)v294 + 16);
        v471 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
        uint64_t v472 = v471[6];
        v473 = (char *)v293 + v472;
        v474 = (char *)v294 + v472;
        uint64_t v475 = type metadata accessor for PuzzleStreak();
        uint64_t v476 = *(void *)(v475 - 8);
        v477 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v476 + 48);
        if (v477(v474, 1, v475))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v473, v474, *(void *)(*(void *)(v478 - 8) + 64));
        }
        else
        {
          uint64_t v653 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v653 - 8) + 16))(v473, v474, v653);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v476 + 56))(v473, 0, 1, v475);
        }
        uint64_t v654 = v471[7];
        v655 = (char *)v293 + v654;
        v656 = (char *)v294 + v654;
        if (v477((char *)v294 + v654, 1, v475))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v655, v656, *(void *)(*(void *)(v657 - 8) + 64));
        }
        else
        {
          uint64_t v671 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v671 - 8) + 16))(v655, v656, v671);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v476 + 56))(v655, 0, 1, v475);
        }
        uint64_t v672 = v471[8];
        v673 = (_OWORD *)((char *)v293 + v672);
        v674 = (_OWORD *)((char *)v294 + v672);
        long long v675 = v674[1];
        _OWORD *v673 = *v674;
        v673[1] = v675;
        *(_OWORD *)((char *)v673 + 25) = *(_OWORD *)((char *)v674 + 25);
        uint64_t v676 = v471[9];
        v677 = (_OWORD *)((char *)v293 + v676);
        v678 = (_OWORD *)((char *)v294 + v676);
        *(_OWORD *)((char *)v677 + 25) = *(_OWORD *)((char *)v678 + 25);
        long long v679 = v678[1];
        _OWORD *v677 = *v678;
        v677[1] = v679;
        uint64_t v680 = v471[10];
        v681 = (_OWORD *)((char *)v293 + v680);
        v682 = (_OWORD *)((char *)v294 + v680);
        long long v683 = v682[1];
        _OWORD *v681 = *v682;
        v681[1] = v683;
        *(_OWORD *)((char *)v681 + 25) = *(_OWORD *)((char *)v682 + 25);
        goto LABEL_563;
      default:
        uint64_t v295 = type metadata accessor for PuzzleStatisticValue(0);
        int v296 = swift_getEnumCaseMultiPayload();
        if (v296 == 5)
        {
          uint64_t v297 = type metadata accessor for PuzzleStreak();
          uint64_t v298 = *(void *)(v297 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v298 + 48))(v294, 1, v297)) {
            goto LABEL_124;
          }
        }
        else
        {
          if (v296 != 4)
          {
            memcpy(v293, v294, *(void *)(*(void *)(v295 - 8) + 64));
            goto LABEL_563;
          }
          uint64_t v297 = type metadata accessor for PuzzleStreak();
          uint64_t v298 = *(void *)(v297 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v298 + 48))(v294, 1, v297))
          {
LABEL_124:
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v293, v294, *(void *)(*(void *)(v299 - 8) + 64));
            goto LABEL_562;
          }
        }
        uint64_t v701 = sub_1C151555C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v701 - 8) + 16))(v293, v294, v701);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v298 + 56))(v293, 0, 1, v297);
LABEL_562:
        swift_storeEnumTagMultiPayload();
        goto LABEL_563;
    }
  }
  uint64_t v13 = *a2;
  *(void *)a1 = *a2;
  a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return a1;
}

void destroy for FormatLayoutViewRoute(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  type metadata accessor for FeedItem(0);
  int v3 = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    switch(v3)
    {
      case 0:
        swift_bridgeObjectRelease();
        if (*(void *)(a1 + 48) < 0x11uLL) {
          goto LABEL_76;
        }
        goto LABEL_75;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(a1 + 80) < 0x11uLL) {
          goto LABEL_76;
        }
        goto LABEL_75;
      case 2:
        swift_bridgeObjectRelease();
        uint64_t v7 = type metadata accessor for FeedBannerAd();
        uint64_t v8 = a1 + *(int *)(v7 + 20);
        uint64_t v9 = sub_1C151DBAC();
        goto LABEL_56;
      case 3:
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        uint64_t v10 = (int *)type metadata accessor for FeedHeadline(0);
        uint64_t v11 = a1 + v10[10];
        uint64_t v12 = v11 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
        uint64_t v13 = type metadata accessor for SharedItem();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13))
        {
          uint64_t v14 = sub_1C151631C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v12, v14);

          uint64_t v15 = v12 + *(int *)(v13 + 28);
          uint64_t v16 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
        }
        uint64_t v17 = a1 + v10[11];
        uint64_t v18 = sub_1C151D2DC();
        uint64_t v19 = *(void *)(v18 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18)) {
          (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
        }
        if (*(void *)(a1 + v10[12] + 8) >= 0x11uLL) {
          swift_bridgeObjectRelease();
        }
        if (*(void *)(a1 + v10[13]) >= 3uLL) {
          swift_unknownObjectRelease();
        }

        goto LABEL_76;
      case 4:
        if (*(void *)(a1 + 32) >= 0x11uLL) {
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        uint64_t v20 = (int *)type metadata accessor for FeedWebEmbed();
        uint64_t v21 = a1 + v20[8];
        uint64_t v22 = sub_1C1515FDC();
        uint64_t v23 = *(void *)(v22 - 8);
        uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
        v24(v21, v22);
        uint64_t v25 = a1 + v20[9];
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v25, 1, v22)) {
          v24(v25, v22);
        }
        swift_release();
        swift_release();
        uint64_t v26 = a1 + v20[12];
        uint64_t v27 = (int *)type metadata accessor for FeedHeadline(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v27 - 1) + 48))(v26, 1, v27))
        {
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          uint64_t v28 = v27[10];
          uint64_t v29 = v26 + v28 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
          uint64_t v30 = type metadata accessor for SharedItem();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v29, 1, v30))
          {
            uint64_t v31 = sub_1C151631C();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8))(v29, v31);

            v24(v29 + *(int *)(v30 + 28), v22);
          }
          uint64_t v130 = v24;
          uint64_t v32 = v26 + v27[11];
          uint64_t v33 = sub_1C151D2DC();
          uint64_t v34 = *(void *)(v33 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33)) {
            (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);
          }
          if (*(void *)(v26 + v27[12] + 8) >= 0x11uLL) {
            swift_bridgeObjectRelease();
          }
          uint64_t v24 = v130;
          if (*(void *)(v26 + v27[13]) >= 3uLL) {
            swift_unknownObjectRelease();
          }
        }
        uint64_t v35 = a1 + v20[13];
        uint64_t v36 = type metadata accessor for WebEmbedDataVisualization();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 48))(v35, 1, v36)) {
          goto LABEL_76;
        }
        if (swift_getEnumCaseMultiPayload() != 1) {
          goto LABEL_58;
        }
        swift_bridgeObjectRelease();
        uint64_t v37 = type metadata accessor for GenericDataVisualization();
        v24(v35 + *(int *)(v37 + 20), v22);
        goto LABEL_75;
      case 5:
        goto LABEL_39;
      case 6:
        int v38 = *(unsigned __int8 *)(a1 + 281);
        if (v38 == 2) {
          goto LABEL_43;
        }
        if (v38 == 1)
        {

          swift_bridgeObjectRelease();
          if (*(void *)(a1 + 80) != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          if (*(void *)(a1 + 128) >= 0x11uLL) {
            swift_bridgeObjectRelease();
          }
          unint64_t v108 = *(void **)(a1 + 144);
          if (!v108) {
            goto LABEL_76;
          }

          swift_bridgeObjectRelease();
          if (*(void *)(a1 + 224) != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          if (*(void *)(a1 + 272) < 0x11uLL) {
            goto LABEL_76;
          }
        }
        else
        {
          if (*(unsigned char *)(a1 + 281)) {
            goto LABEL_76;
          }
LABEL_39:

          swift_bridgeObjectRelease();
          if (*(void *)(a1 + 80) != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          if (*(void *)(a1 + 128) < 0x11uLL)
          {
LABEL_76:
            sub_1C049A100();
            a1 += *(int *)(v45 + 48);
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
                goto LABEL_77;
              case 1u:
                goto LABEL_79;
              case 2u:
                goto LABEL_81;
              case 3u:
                swift_bridgeObjectRelease();
                swift_unknownObjectRelease();
                swift_unknownObjectRelease();
                unsigned int v4 = (int *)type metadata accessor for FeedHeadline(0);
                uint64_t v76 = v4[10];
                uint64_t v6 = a1 + v76 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
                goto LABEL_144;
              case 4u:
                goto LABEL_82;
              case 5u:
                goto LABEL_158;
              case 6u:
                int v72 = *(unsigned __int8 *)(a1 + 281);
                if (v72 == 2) {
                  goto LABEL_164;
                }
                if (v72 != 1) {
                  goto LABEL_157;
                }
                goto LABEL_131;
              case 7u:
                goto LABEL_164;
              case 8u:
                goto LABEL_99;
              case 9u:
                goto LABEL_102;
              case 0xAu:
                goto LABEL_108;
              case 0xBu:
                goto LABEL_111;
              case 0xCu:
                goto LABEL_124;
              case 0xDu:
                goto LABEL_114;
              case 0xEu:
                goto LABEL_122;
              case 0xFu:
                if (*(void *)(a1 + 32) >= 0x11uLL) {
                  swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
                uint64_t v85 = a1 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
                swift_unknownObjectRelease();
                uint64_t v75 = v85 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
                type metadata accessor for PuzzleStatisticCategory(0);
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 0u:
                    goto LABEL_173;
                  case 1u:
                    goto LABEL_174;
                  case 2u:
                    goto LABEL_187;
                  case 3u:
                    goto LABEL_191;
                  default:
                    return;
                }
                return;
              case 0x10u:
                goto LABEL_127;
              default:
                return;
            }
          }
        }
LABEL_75:
        swift_bridgeObjectRelease();
        goto LABEL_76;
      case 7:
LABEL_43:
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(a1 + 88) != 1)
        {
          swift_bridgeObjectRelease();
          if (*(void *)(a1 + 120)) {
            __swift_destroy_boxed_opaque_existential_1(a1 + 96);
          }
        }
        goto LABEL_76;
      case 8:
        swift_bridgeObjectRelease();
        uint64_t v39 = a1 + *(int *)(type metadata accessor for FeedCustomItem() + 20);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v40 = v39 + *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 24);
        uint64_t v41 = type metadata accessor for FormatCustomItem.Action();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 48))(v40, 1, v41))
        {
          uint64_t v42 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v40, v42);
        }
        goto LABEL_75;
      case 9:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(a1 + 56)) {
          __swift_destroy_boxed_opaque_existential_1(a1 + 32);
        }
        if (*(void *)(a1 + 96)) {
          __swift_destroy_boxed_opaque_existential_1(a1 + 72);
        }
        if (*(void *)(a1 + 136)) {
          __swift_destroy_boxed_opaque_existential_1(a1 + 112);
        }
        goto LABEL_76;
      case 10:
        swift_bridgeObjectRelease();
        uint64_t v7 = type metadata accessor for FeedEngagementBanner();
        uint64_t v8 = a1 + *(int *)(v7 + 20);
        uint64_t v9 = sub_1C151959C();
LABEL_56:
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
        if (*(void *)(a1 + *(int *)(v7 + 32) + 8) < 0x11uLL) {
          goto LABEL_76;
        }
        goto LABEL_75;
      case 11:
LABEL_58:
        swift_release();
        goto LABEL_76;
      case 12:
        goto LABEL_69;
      case 13:
        if (*(void *)(a1 + 32) >= 0x11uLL) {
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();

        swift_bridgeObjectRelease();
        if (*(void *)(a1 + 112)) {
          __swift_destroy_boxed_opaque_existential_1(a1 + 88);
        }
        if (*(void *)(a1 + 152)) {
          __swift_destroy_boxed_opaque_existential_1(a1 + 128);
        }
        if (*(void *)(a1 + 192)) {
          __swift_destroy_boxed_opaque_existential_1(a1 + 168);
        }
        goto LABEL_76;
      case 14:
        if (*(void *)(a1 + 32) >= 0x11uLL) {
          swift_bridgeObjectRelease();
        }
LABEL_69:
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        goto LABEL_76;
      case 15:
        if (*(void *)(a1 + 32) >= 0x11uLL) {
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        uint64_t v43 = a1 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
        swift_unknownObjectRelease();
        uint64_t v44 = v43 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
        type metadata accessor for PuzzleStatisticCategory(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            type metadata accessor for PuzzleStatisticValue(0);
            goto LABEL_217;
          case 1u:
            type metadata accessor for PuzzleStatisticValue(0);
            int v109 = swift_getEnumCaseMultiPayload();
            if (v109 == 5 || v109 == 4)
            {
              uint64_t v110 = type metadata accessor for PuzzleStreak();
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v110 - 8) + 48))(v44, 1, v110))
              {
                uint64_t v111 = sub_1C151555C();
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v111 - 8) + 8))(v44, v111);
              }
            }
            uint64_t v112 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
            uint64_t v113 = v44 + *(int *)(v112 + 20);
            int v114 = swift_getEnumCaseMultiPayload();
            if (v114 == 5 || v114 == 4)
            {
              uint64_t v115 = type metadata accessor for PuzzleStreak();
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v115 - 8) + 48))(v113, 1, v115))
              {
                uint64_t v116 = sub_1C151555C();
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v116 - 8) + 8))(v113, v116);
              }
            }
            v44 += *(int *)(v112 + 24);
LABEL_217:
            int v117 = swift_getEnumCaseMultiPayload();
            if (v117 == 5 || v117 == 4)
            {
              uint64_t v118 = type metadata accessor for PuzzleStreak();
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v118 - 8) + 48))(v44, 1, v118))goto LABEL_228; {
            }
              }
            goto LABEL_76;
          case 2u:
            uint64_t v119 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v119 - 8) + 48))(v44, 1, v119))
            {
              goto LABEL_76;
            }
            uint64_t v120 = sub_1C151631C();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v120 - 8) + 8))(v44, v120);
            uint64_t v121 = type metadata accessor for PuzzleLeaderboardEntry();
            swift_bridgeObjectRelease();
            uint64_t v122 = v44 + *(int *)(v121 + 24);
            swift_bridgeObjectRelease();
            unint64_t v123 = *(void *)(v122 + 24);
            if (v123 >> 60 != 15) {
              sub_1BFE95664(*(void *)(v122 + 16), v123);
            }
            swift_bridgeObjectRelease();
            goto LABEL_75;
          case 3u:
            uint64_t v124 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
            uint64_t v125 = v44 + *(int *)(v124 + 24);
            uint64_t v126 = type metadata accessor for PuzzleStreak();
            long long v127 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v126 - 8) + 48);
            if (!v127(v125, 1, v126))
            {
              uint64_t v128 = sub_1C151555C();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v128 - 8) + 8))(v125, v128);
            }
            v44 += *(int *)(v124 + 28);
            if (!v127(v44, 1, v126))
            {
LABEL_228:
              uint64_t v129 = sub_1C151555C();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v129 - 8) + 8))(v44, v129);
            }
            goto LABEL_76;
          default:
            goto LABEL_76;
        }
      case 16:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(a1 + 240) >= 0x11uLL) {
          goto LABEL_75;
        }
        goto LABEL_76;
      default:
        goto LABEL_76;
    }
  }
  switch(v3)
  {
    case 0:
LABEL_77:
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 48) < 0x11uLL) {
        return;
      }
      goto LABEL_161;
    case 1:
LABEL_79:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 80) < 0x11uLL) {
        return;
      }
      goto LABEL_161;
    case 2:
LABEL_81:
      swift_bridgeObjectRelease();
      uint64_t v46 = type metadata accessor for FeedBannerAd();
      uint64_t v47 = a1 + *(int *)(v46 + 20);
      uint64_t v48 = sub_1C151DBAC();
      goto LABEL_109;
    case 3:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      unsigned int v4 = (int *)type metadata accessor for FeedHeadline(0);
      uint64_t v5 = a1 + v4[10];
      uint64_t v6 = v5 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
LABEL_144:
      uint64_t v77 = type metadata accessor for SharedItem();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 48))(v6, 1, v77))
      {
        uint64_t v78 = sub_1C151631C();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v78 - 8) + 8))(v6, v78);

        uint64_t v79 = v6 + *(int *)(v77 + 28);
        uint64_t v80 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v79, v80);
      }
      uint64_t v81 = a1 + v4[11];
      uint64_t v82 = sub_1C151D2DC();
      uint64_t v83 = *(void *)(v82 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v83 + 48))(v81, 1, v82)) {
        (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v81, v82);
      }
      if (*(void *)(a1 + v4[12] + 8) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      if (*(void *)(a1 + v4[13]) >= 3uLL) {
        swift_unknownObjectRelease();
      }
      uint64_t v84 = *(void **)(a1 + v4[14]);

      return;
    case 4:
LABEL_82:
      if (*(void *)(a1 + 32) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      uint64_t v49 = (int *)type metadata accessor for FeedWebEmbed();
      uint64_t v50 = a1 + v49[8];
      uint64_t v51 = sub_1C1515FDC();
      uint64_t v52 = *(void *)(v51 - 8);
      uint64_t v53 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
      v53(v50, v51);
      uint64_t v54 = a1 + v49[9];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v54, 1, v51)) {
        v53(v54, v51);
      }
      swift_release();
      swift_release();
      uint64_t v55 = a1 + v49[12];
      uint64_t v56 = (int *)type metadata accessor for FeedHeadline(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v56 - 1) + 48))(v55, 1, v56))
      {
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        uint64_t v57 = v56[10];
        uint64_t v58 = v55 + v57 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
        uint64_t v59 = type metadata accessor for SharedItem();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 48))(v58, 1, v59))
        {
          uint64_t v60 = sub_1C151631C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v60 - 8) + 8))(v58, v60);

          v53(v58 + *(int *)(v59 + 28), v51);
        }
        uint64_t v61 = v55 + v56[11];
        uint64_t v62 = sub_1C151D2DC();
        uint64_t v63 = *(void *)(v62 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62)) {
          (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v61, v62);
        }
        if (*(void *)(v55 + v56[12] + 8) >= 0x11uLL) {
          swift_bridgeObjectRelease();
        }
        if (*(void *)(v55 + v56[13]) >= 3uLL) {
          swift_unknownObjectRelease();
        }
      }
      uint64_t v64 = a1 + v49[13];
      uint64_t v65 = type metadata accessor for WebEmbedDataVisualization();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 48))(v64, 1, v65)) {
        return;
      }
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_111;
      }
      swift_bridgeObjectRelease();
      uint64_t v66 = type metadata accessor for GenericDataVisualization();
      v53(v64 + *(int *)(v66 + 20), v51);
      goto LABEL_161;
    case 5:
      goto LABEL_158;
    case 6:
      int v72 = *(unsigned __int8 *)(a1 + 281);
      if (v72 == 2) {
        goto LABEL_164;
      }
      if (v72 == 1)
      {
LABEL_131:

        swift_bridgeObjectRelease();
        if (*(void *)(a1 + 80) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (*(void *)(a1 + 128) >= 0x11uLL) {
          swift_bridgeObjectRelease();
        }
        uint64_t v73 = *(void **)(a1 + 144);
        if (!v73) {
          return;
        }

        swift_bridgeObjectRelease();
        if (*(void *)(a1 + 224) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (*(void *)(a1 + 272) < 0x11uLL) {
          return;
        }
LABEL_161:
        swift_bridgeObjectRelease();
        return;
      }
LABEL_157:
      if (v72) {
        return;
      }
LABEL_158:

      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 80) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(void *)(a1 + 128) >= 0x11uLL) {
        goto LABEL_161;
      }
      return;
    case 7:
LABEL_164:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 88) == 1) {
        return;
      }
      swift_bridgeObjectRelease();
      if (!*(void *)(a1 + 120)) {
        return;
      }
      uint64_t v71 = a1 + 96;
      goto LABEL_167;
    case 8:
LABEL_99:
      swift_bridgeObjectRelease();
      uint64_t v67 = a1 + *(int *)(type metadata accessor for FeedCustomItem() + 20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v68 = v67 + *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 24);
      uint64_t v69 = type metadata accessor for FormatCustomItem.Action();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 48))(v68, 1, v69))
      {
        uint64_t v70 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v70 - 8) + 8))(v68, v70);
      }
      goto LABEL_161;
    case 9:
LABEL_102:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 56)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 32);
      }
      if (*(void *)(a1 + 96)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 72);
      }
      if (!*(void *)(a1 + 136)) {
        return;
      }
      uint64_t v71 = a1 + 112;
      goto LABEL_167;
    case 10:
LABEL_108:
      swift_bridgeObjectRelease();
      uint64_t v46 = type metadata accessor for FeedEngagementBanner();
      uint64_t v47 = a1 + *(int *)(v46 + 20);
      uint64_t v48 = sub_1C151959C();
LABEL_109:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v48 - 8) + 8))(v47, v48);
      if (*(void *)(a1 + *(int *)(v46 + 32) + 8) < 0x11uLL) {
        return;
      }
      goto LABEL_161;
    case 11:
LABEL_111:
      swift_release();
      return;
    case 12:
      goto LABEL_124;
    case 13:
LABEL_114:
      if (*(void *)(a1 + 32) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 112)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 88);
      }
      if (*(void *)(a1 + 152)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 128);
      }
      if (!*(void *)(a1 + 192)) {
        return;
      }
      uint64_t v71 = a1 + 168;
LABEL_167:
      __swift_destroy_boxed_opaque_existential_1(v71);
      return;
    case 14:
LABEL_122:
      if (*(void *)(a1 + 32) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
LABEL_124:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      return;
    case 15:
      if (*(void *)(a1 + 32) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      uint64_t v74 = a1 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      swift_unknownObjectRelease();
      uint64_t v75 = v74 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      type metadata accessor for PuzzleStatisticCategory(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
LABEL_173:
          type metadata accessor for PuzzleStatisticValue(0);
          goto LABEL_183;
        case 1u:
LABEL_174:
          type metadata accessor for PuzzleStatisticValue(0);
          int v86 = swift_getEnumCaseMultiPayload();
          if (v86 == 5 || v86 == 4)
          {
            uint64_t v87 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 48))(v75, 1, v87))
            {
              uint64_t v88 = sub_1C151555C();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v88 - 8) + 8))(v75, v88);
            }
          }
          uint64_t v89 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          uint64_t v90 = v75 + *(int *)(v89 + 20);
          int v91 = swift_getEnumCaseMultiPayload();
          if (v91 == 5 || v91 == 4)
          {
            uint64_t v92 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 48))(v90, 1, v92))
            {
              uint64_t v93 = sub_1C151555C();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v93 - 8) + 8))(v90, v93);
            }
          }
          v75 += *(int *)(v89 + 24);
LABEL_183:
          int v94 = swift_getEnumCaseMultiPayload();
          if (v94 == 5 || v94 == 4)
          {
            uint64_t v95 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v95 - 8) + 48))(v75, 1, v95))goto LABEL_196; {
          }
            }
          return;
        case 2u:
LABEL_187:
          uint64_t v96 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 48))(v75, 1, v96)) {
            return;
          }
          uint64_t v97 = sub_1C151631C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v97 - 8) + 8))(v75, v97);
          uint64_t v98 = type metadata accessor for PuzzleLeaderboardEntry();
          swift_bridgeObjectRelease();
          uint64_t v99 = v75 + *(int *)(v98 + 24);
          swift_bridgeObjectRelease();
          unint64_t v100 = *(void *)(v99 + 24);
          if (v100 >> 60 != 15) {
            sub_1BFE95664(*(void *)(v99 + 16), v100);
          }
          swift_bridgeObjectRelease();
          goto LABEL_161;
        case 3u:
LABEL_191:
          uint64_t v101 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
          uint64_t v102 = v75 + *(int *)(v101 + 24);
          uint64_t v103 = type metadata accessor for PuzzleStreak();
          id v104 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v103 - 8) + 48);
          if (!v104(v102, 1, v103))
          {
            uint64_t v105 = sub_1C151555C();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v105 - 8) + 8))(v102, v105);
          }
          v75 += *(int *)(v101 + 28);
          if (v104(v75, 1, v103)) {
            return;
          }
LABEL_196:
          uint64_t v106 = sub_1C151555C();
          uint64_t v107 = *(void (**)(uint64_t, uint64_t))(*(void *)(v106 - 8) + 8);
          v107(v75, v106);
          return;
        default:
          return;
      }
    case 16:
LABEL_127:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 240) < 0x11uLL) {
        return;
      }
      goto LABEL_161;
    default:
      return;
  }
}

uint64_t initializeWithCopy for FormatLayoutViewRoute(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = type metadata accessor for FeedItem(0);
  int v6 = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    switch(v6)
    {
      case 0:
        uint64_t v7 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v7;
        uint64_t v8 = *(void *)(a2 + 24);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = v8;
        *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
        uint64_t v9 = (void *)(a2 + 40);
        unint64_t v10 = *(void *)(a2 + 48);
        swift_bridgeObjectRetain();
        if (v10 >= 0x11)
        {
          *(void *)(a1 + 40) = *v9;
          *(void *)(a1 + 48) = v10;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 40) = *(_OWORD *)v9;
        }
        goto LABEL_303;
      case 1:
        uint64_t v89 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v89;
        uint64_t v90 = *(void *)(a2 + 24);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = v90;
        *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
        uint64_t v91 = *(void *)(a2 + 48);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = v91;
        uint64_t v92 = *(void *)(a2 + 64);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(void *)(a1 + 64) = v92;
        uint64_t v93 = (void *)(a2 + 72);
        unint64_t v94 = *(void *)(a2 + 80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v94 >= 0x11)
        {
          *(void *)(a1 + 72) = *v93;
          *(void *)(a1 + 80) = v94;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 72) = *(_OWORD *)v93;
        }
        goto LABEL_303;
      case 2:
        uint64_t v15 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v15;
        uint64_t v16 = (int *)type metadata accessor for FeedBannerAd();
        uint64_t v17 = v16[5];
        uint64_t v18 = a1 + v17;
        uint64_t v19 = a2 + v17;
        uint64_t v20 = sub_1C151DBAC();
        uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16);
        swift_bridgeObjectRetain();
        v21(v18, v19, v20);
        *(void *)(a1 + v16[6]) = *(void *)(a2 + v16[6]);
        uint64_t v22 = v16[7];
        uint64_t v23 = a1 + v22;
        uint64_t v24 = a2 + v22;
        *(void *)uint64_t v23 = *(void *)v24;
        *(unsigned char *)(v23 + 8) = *(unsigned char *)(v24 + 8);
        uint64_t v25 = v16[8];
        uint64_t v26 = a1 + v25;
        uint64_t v27 = a2 + v25;
        unint64_t v28 = *(void *)(v27 + 8);
        if (v28 >= 0x11) {
          goto LABEL_74;
        }
        *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
        goto LABEL_303;
      case 3:
        uint64_t v1167 = v5;
        uint64_t v95 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v95;
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
        uint64_t v96 = *(void *)(a2 + 40);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = v96;
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
        v1134 = (int *)type metadata accessor for FeedHeadline(0);
        uint64_t v97 = v1134[10];
        uint64_t v98 = (unsigned char *)(a1 + v97);
        uint64_t v99 = a2 + v97;
        *uint64_t v98 = *(unsigned char *)(a2 + v97);
        v98[1] = *(unsigned char *)(a2 + v97 + 1);
        unint64_t v100 = (int *)type metadata accessor for FeedHeadline.State(0);
        uint64_t v101 = v100[6];
        __dst = &v98[v101];
        uint64_t v102 = (char *)(v99 + v101);
        uint64_t v103 = (int *)type metadata accessor for SharedItem();
        uint64_t v1120 = (void *)*((void *)v103 - 1);
        id v104 = (unsigned int (*)(char *, uint64_t, int *))v1120[6];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if (v104(v102, 1, v103))
        {
          uint64_t v105 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(__dst, v102, *(void *)(*(void *)(v105 - 8) + 64));
        }
        else
        {
          uint64_t v357 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v357 - 8) + 16))(__dst, v102, v357);
          __dst[v103[5]] = v102[v103[5]];
          uint64_t v358 = v103[6];
          uint64_t v359 = *(void **)&v102[v358];
          *(void *)&__dst[v358] = v359;
          uint64_t v360 = v103[7];
          v1149 = &v102[v360];
          uint64_t v1159 = &__dst[v360];
          uint64_t v361 = sub_1C1515FDC();
          uint64_t v1117 = *(void (**)(char *, char *, uint64_t))(*(void *)(v361 - 8) + 16);
          id v362 = v359;
          v1117(v1159, v1149, v361);
          ((void (*)(char *, void, uint64_t, int *))v1120[7])(__dst, 0, 1, v103);
        }
        uint64_t v5 = v1167;
        v98[v100[7]] = *(unsigned char *)(v99 + v100[7]);
        v98[v100[8]] = *(unsigned char *)(v99 + v100[8]);
        v98[v100[9]] = *(unsigned char *)(v99 + v100[9]);
        v98[v100[10]] = *(unsigned char *)(v99 + v100[10]);
        uint64_t v363 = v1134[11];
        id v364 = (void *)(a1 + v363);
        uint64_t v365 = (const void *)(a2 + v363);
        uint64_t v366 = sub_1C151D2DC();
        uint64_t v367 = *(void *)(v366 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v367 + 48))(v365, 1, v366))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
          memcpy(v364, v365, *(void *)(*(void *)(v368 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v367 + 16))(v364, v365, v366);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v367 + 56))(v364, 0, 1, v366);
        }
        uint64_t v393 = v1134[12];
        uint64_t v394 = (void *)(a1 + v393);
        uint64_t v395 = (void *)(a2 + v393);
        unint64_t v396 = v395[1];
        if (v396 >= 0x11)
        {
          *uint64_t v394 = *v395;
          v394[1] = v396;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)uint64_t v394 = *(_OWORD *)v395;
        }
        uint64_t v397 = v1134[13];
        unint64_t v398 = *(void *)(a2 + v397);
        if (v398 >= 2)
        {
          if (v398 == 2)
          {
            *(void *)(a1 + v397) = 2;
          }
          else
          {
            *(void *)(a1 + v397) = v398;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(void *)(a1 + v397) = v398;
        }
        uint64_t v477 = v1134[14];
        uint64_t v478 = *(void **)(a2 + v477);
        *(void *)(a1 + v477) = v478;
        id v479 = v478;
        swift_storeEnumTagMultiPayload();
        goto LABEL_304;
      case 4:
        uint64_t v29 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v29;
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        uint64_t v30 = (void *)(a2 + 24);
        unint64_t v31 = *(void *)(a2 + 32);
        uint64_t v1165 = v5;
        if (v31 >= 0x11)
        {
          *(void *)(a1 + 24) = *v30;
          *(void *)(a1 + 32) = v31;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)v30;
        }
        uint64_t v224 = *(void *)(a2 + 48);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = v224;
        v225 = (int *)type metadata accessor for FeedWebEmbed();
        uint64_t v226 = v225[8];
        uint64_t v227 = a1 + v226;
        uint64_t v228 = a2 + v226;
        uint64_t v229 = sub_1C1515FDC();
        uint64_t v230 = *(void *)(v229 - 8);
        v231 = *(void (**)(uint64_t, uint64_t, uint64_t))(v230 + 16);
        swift_bridgeObjectRetain();
        v231(v227, v228, v229);
        uint64_t v1157 = v225;
        uint64_t v232 = v225[9];
        v233 = (void *)(a1 + v232);
        v234 = (const void *)(a2 + v232);
        v1147 = (void *)v229;
        __dstb = (void (*)(char *, char *, void *))v231;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v230 + 48))(a2 + v232, 1, v229))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
          memcpy(v233, v234, *(void *)(*(void *)(v235 - 8) + 64));
        }
        else
        {
          v231((uint64_t)v233, (uint64_t)v234, v229);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v230 + 56))(v233, 0, 1, v229);
        }
        *(void *)(a1 + v225[10]) = *(void *)(a2 + v225[10]);
        *(void *)(a1 + v225[11]) = *(void *)(a2 + v225[11]);
        uint64_t v309 = v225[12];
        uint64_t v310 = (void *)(a1 + v309);
        v311 = (void *)(a2 + v309);
        uint64_t v312 = type metadata accessor for FeedHeadline(0);
        uint64_t v313 = *(void *)(v312 - 8);
        uint64_t v314 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v313 + 48);
        swift_retain();
        swift_retain();
        if (v314(v311, 1, v312))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
          memcpy(v310, v311, *(void *)(*(void *)(v315 - 8) + 64));
        }
        else
        {
          uint64_t v1115 = v313;
          v1122 = (int *)v312;
          uint64_t v333 = v311[1];
          *uint64_t v310 = *v311;
          v310[1] = v333;
          v310[2] = v311[2];
          *((unsigned char *)v310 + 24) = *((unsigned char *)v311 + 24);
          uint64_t v334 = v311[5];
          v310[4] = v311[4];
          v310[5] = v334;
          v310[6] = v311[6];
          *((unsigned char *)v310 + 56) = *((unsigned char *)v311 + 56);
          uint64_t v335 = *(int *)(v312 + 40);
          v1111 = v310;
          uint64_t v336 = (char *)v310 + v335;
          v337 = (char *)v311 + v335;
          *uint64_t v336 = *((unsigned char *)v311 + v335);
          v336[1] = *((unsigned char *)v311 + v335 + 1);
          uint64_t v338 = type metadata accessor for FeedHeadline.State(0);
          uint64_t v339 = *(int *)(v338 + 24);
          uint64_t v1106 = &v336[v339];
          v1108 = (int *)v338;
          uint64_t v340 = &v337[v339];
          v341 = (int *)type metadata accessor for SharedItem();
          uint64_t v1103 = *((void *)v341 - 1);
          v342 = *(unsigned int (**)(char *, uint64_t, int *))(v1103 + 48);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          if (v342(v340, 1, v341))
          {
            uint64_t v343 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(v1106, v340, *(void *)(*(void *)(v343 - 8) + 64));
          }
          else
          {
            uint64_t v529 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v529 - 8) + 16))(v1106, v340, v529);
            v1106[v341[5]] = v340[v341[5]];
            uint64_t v530 = v341[6];
            uint64_t v531 = *(void **)&v340[v530];
            *(void *)&v1106[v530] = v531;
            uint64_t v532 = v341[7];
            v533 = &v1106[v532];
            uint64_t v534 = &v340[v532];
            id v535 = v531;
            __dstb(v533, v534, v1147);
            (*(void (**)(char *, void, uint64_t, int *))(v1103 + 56))(v1106, 0, 1, v341);
          }
          v336[v1108[7]] = v337[v1108[7]];
          v336[v1108[8]] = v337[v1108[8]];
          v336[v1108[9]] = v337[v1108[9]];
          v336[v1108[10]] = v337[v1108[10]];
          uint64_t v536 = *(int *)(v312 + 44);
          id v537 = (char *)v1111 + v536;
          uint64_t v538 = (char *)v311 + v536;
          uint64_t v539 = sub_1C151D2DC();
          uint64_t v540 = *(void *)(v539 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v540 + 48))(v538, 1, v539))
          {
            sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
            memcpy(v537, v538, *(void *)(*(void *)(v541 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v540 + 16))(v537, v538, v539);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v540 + 56))(v537, 0, 1, v539);
          }
          uint64_t v555 = v1122[12];
          uint64_t v556 = (void *)((char *)v1111 + v555);
          uint64_t v557 = (void *)((char *)v311 + v555);
          unint64_t v558 = v557[1];
          if (v558 >= 0x11)
          {
            *uint64_t v556 = *v557;
            v556[1] = v558;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)uint64_t v556 = *(_OWORD *)v557;
          }
          uint64_t v559 = v1122[13];
          unint64_t v560 = *(void *)((char *)v311 + v559);
          if (v560 >= 2)
          {
            if (v560 == 2)
            {
              *(void *)((char *)v1111 + v559) = 2;
            }
            else
            {
              *(void *)((char *)v1111 + v559) = v560;
              swift_unknownObjectRetain();
            }
          }
          else
          {
            *(void *)((char *)v1111 + v559) = v560;
          }
          uint64_t v611 = v1122[14];
          unint64_t v612 = *(void **)((char *)v311 + v611);
          *(void *)((char *)v1111 + v611) = v612;
          uint64_t v613 = *(void (**)(void *, void, uint64_t, int *))(v1115 + 56);
          id v614 = v612;
          v613(v1111, 0, 1, v1122);
        }
        uint64_t v615 = v1157[13];
        id v616 = (void *)(a1 + v615);
        uint64_t v617 = (uint64_t *)(a2 + v615);
        uint64_t v618 = type metadata accessor for WebEmbedDataVisualization();
        uint64_t v619 = *(void *)(v618 - 8);
        uint64_t v5 = v1165;
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v619 + 48))(v617, 1, v618))
        {
          sub_1BFEEF2C0(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
          memcpy(v616, v617, *(void *)(*(void *)(v620 - 8) + 64));
        }
        else
        {
          int v621 = swift_getEnumCaseMultiPayload();
          uint64_t v622 = *v617;
          if (v621 == 1)
          {
            uint64_t v623 = v617[1];
            *id v616 = v622;
            v616[1] = v623;
            uint64_t v624 = type metadata accessor for GenericDataVisualization();
            uint64_t v625 = *(int *)(v624 + 20);
            uint64_t v626 = (char *)v616 + v625;
            uint64_t v627 = (char *)v617 + v625;
            swift_bridgeObjectRetain();
            v628 = v627;
            uint64_t v5 = v1165;
            __dstb(v626, v628, v1147);
            *(void *)((char *)v616 + *(int *)(v624 + 24)) = *(uint64_t *)((char *)v617 + *(int *)(v624 + 24));
            swift_bridgeObjectRetain();
          }
          else
          {
            *id v616 = v622;
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(v619 + 56))(v616, 0, 1, v618);
        }
        *(unsigned char *)(a1 + v1157[14]) = *(unsigned char *)(a2 + v1157[14]);
        goto LABEL_303;
      case 5:
        uint64_t v106 = *(void **)a2;
        uint64_t v107 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v107;
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
        unint64_t v108 = *(void **)(a2 + 56);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = v108;
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        uint64_t v109 = *(void *)(a2 + 80);
        id v110 = v106;
        swift_bridgeObjectRetain();
        id v111 = v108;
        if (v109 == 1)
        {
          long long v112 = *(_OWORD *)(a2 + 88);
          *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
          *(_OWORD *)(a1 + 88) = v112;
          *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
        }
        else
        {
          *(void *)(a1 + 72) = *(void *)(a2 + 72);
          *(void *)(a1 + 80) = v109;
          uint64_t v250 = *(void *)(a2 + 96);
          *(void *)(a1 + 88) = *(void *)(a2 + 88);
          *(void *)(a1 + 96) = v250;
          v252 = *(void **)(a2 + 104);
          uint64_t v251 = *(void *)(a2 + 112);
          *(void *)(a1 + 104) = v252;
          *(void *)(a1 + 112) = v251;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v253 = v252;
        }
        v254 = (void *)(a2 + 120);
        unint64_t v255 = *(void *)(a2 + 128);
        if (v255 >= 0x11)
        {
          *(void *)(a1 + 120) = *v254;
          *(void *)(a1 + 128) = v255;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 120) = *(_OWORD *)v254;
        }
        *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
        swift_storeEnumTagMultiPayload();
        goto LABEL_304;
      case 6:
        int v113 = *(unsigned __int8 *)(a2 + 281);
        if (v113 == 2)
        {
          uint64_t v417 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v417;
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
          uint64_t v418 = *(void *)(a2 + 56);
          *(void *)(a1 + 48) = *(void *)(a2 + 48);
          *(void *)(a1 + 56) = v418;
          uint64_t v419 = *(void *)(a2 + 72);
          *(void *)(a1 + 64) = *(void *)(a2 + 64);
          *(void *)(a1 + 72) = v419;
          uint64_t v420 = *(void *)(a2 + 88);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v420 != 1)
          {
            *(void *)(a1 + 80) = *(void *)(a2 + 80);
            *(void *)(a1 + 88) = v420;
            uint64_t v497 = *(void *)(a2 + 120);
            swift_bridgeObjectRetain();
            if (v497)
            {
              uint64_t v498 = *(void *)(a2 + 128);
              *(void *)(a1 + 120) = v497;
              *(void *)(a1 + 128) = v498;
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v497 - 8))(a1 + 96, a2 + 96, v497);
              *(void *)(a1 + 136) = *(void *)(a2 + 136);
            }
            else
            {
              long long v1021 = *(_OWORD *)(a2 + 112);
              *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
              *(_OWORD *)(a1 + 112) = v1021;
              *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
            }
            *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
            goto LABEL_500;
          }
          uint64_t v421 = (_OWORD *)(a1 + 80);
          uint64_t v422 = (_OWORD *)(a2 + 80);
          long long v423 = *(_OWORD *)(a2 + 128);
          *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
          *(_OWORD *)(a1 + 128) = v423;
          *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
        }
        else
        {
          if (v113 != 1)
          {
            v424 = *(void **)a2;
            uint64_t v425 = *(void *)(a2 + 8);
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = v425;
            *(void *)(a1 + 16) = *(void *)(a2 + 16);
            *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
            *(void *)(a1 + 32) = *(void *)(a2 + 32);
            *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
            v426 = *(void **)(a2 + 56);
            *(void *)(a1 + 48) = *(void *)(a2 + 48);
            *(void *)(a1 + 56) = v426;
            *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
            uint64_t v427 = *(void *)(a2 + 80);
            id v428 = v424;
            swift_bridgeObjectRetain();
            id v429 = v426;
            if (v427 == 1)
            {
              long long v430 = *(_OWORD *)(a2 + 88);
              *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
              *(_OWORD *)(a1 + 88) = v430;
              *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
            }
            else
            {
              *(void *)(a1 + 72) = *(void *)(a2 + 72);
              *(void *)(a1 + 80) = v427;
              uint64_t v499 = *(void *)(a2 + 96);
              *(void *)(a1 + 88) = *(void *)(a2 + 88);
              *(void *)(a1 + 96) = v499;
              uint64_t v501 = *(void **)(a2 + 104);
              uint64_t v500 = *(void *)(a2 + 112);
              *(void *)(a1 + 104) = v501;
              *(void *)(a1 + 112) = v500;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v502 = v501;
            }
            v503 = (void *)(a2 + 120);
            unint64_t v504 = *(void *)(a2 + 128);
            if (v504 >= 0x11)
            {
              *(void *)(a1 + 120) = *v503;
              *(void *)(a1 + 128) = v504;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 120) = *(_OWORD *)v503;
            }
            *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
            goto LABEL_500;
          }
          int v114 = *(void **)a2;
          uint64_t v115 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v115;
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
          uint64_t v116 = *(void **)(a2 + 56);
          *(void *)(a1 + 48) = *(void *)(a2 + 48);
          *(void *)(a1 + 56) = v116;
          *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
          uint64_t v117 = *(void *)(a2 + 80);
          id v118 = v114;
          swift_bridgeObjectRetain();
          id v119 = v116;
          if (v117 == 1)
          {
            long long v120 = *(_OWORD *)(a2 + 88);
            *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
            *(_OWORD *)(a1 + 88) = v120;
            *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
          }
          else
          {
            *(void *)(a1 + 72) = *(void *)(a2 + 72);
            *(void *)(a1 + 80) = v117;
            uint64_t v485 = *(void *)(a2 + 96);
            *(void *)(a1 + 88) = *(void *)(a2 + 88);
            *(void *)(a1 + 96) = v485;
            uint64_t v487 = *(void **)(a2 + 104);
            uint64_t v486 = *(void *)(a2 + 112);
            *(void *)(a1 + 104) = v487;
            *(void *)(a1 + 112) = v486;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v488 = v487;
          }
          v489 = (void *)(a2 + 120);
          unint64_t v490 = *(void *)(a2 + 128);
          if (v490 >= 0x11)
          {
            *(void *)(a1 + 120) = *v489;
            *(void *)(a1 + 128) = v490;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 120) = *(_OWORD *)v489;
          }
          uint64_t v422 = (_OWORD *)(a2 + 144);
          v513 = *(void **)(a2 + 144);
          *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
          if (v513)
          {
            uint64_t v514 = *(void *)(a2 + 152);
            uint64_t v515 = *(void *)(a2 + 160);
            *(void *)(a1 + 144) = v513;
            *(void *)(a1 + 152) = v514;
            *(void *)(a1 + 160) = v515;
            *(_WORD *)(a1 + 168) = *(_WORD *)(a2 + 168);
            *(void *)(a1 + 176) = *(void *)(a2 + 176);
            *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
            uint64_t v516 = *(void **)(a2 + 200);
            *(void *)(a1 + 192) = *(void *)(a2 + 192);
            *(void *)(a1 + 200) = v516;
            *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
            uint64_t v517 = *(void *)(a2 + 224);
            id v518 = v513;
            swift_bridgeObjectRetain();
            id v519 = v516;
            if (v517 == 1)
            {
              long long v520 = *(_OWORD *)(a2 + 232);
              *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
              *(_OWORD *)(a1 + 232) = v520;
              *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
            }
            else
            {
              *(void *)(a1 + 216) = *(void *)(a2 + 216);
              *(void *)(a1 + 224) = v517;
              uint64_t v575 = *(void *)(a2 + 240);
              *(void *)(a1 + 232) = *(void *)(a2 + 232);
              *(void *)(a1 + 240) = v575;
              uint64_t v577 = *(void **)(a2 + 248);
              uint64_t v576 = *(void *)(a2 + 256);
              *(void *)(a1 + 248) = v577;
              *(void *)(a1 + 256) = v576;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v578 = v577;
            }
            v579 = (void *)(a2 + 264);
            unint64_t v580 = *(void *)(a2 + 272);
            if (v580 >= 0x11)
            {
              *(void *)(a1 + 264) = *v579;
              *(void *)(a1 + 272) = v580;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 264) = *(_OWORD *)v579;
            }
            *(unsigned char *)(a1 + 280) = *(unsigned char *)(a2 + 280);
LABEL_500:
            *(unsigned char *)(a1 + 281) = v113;
            swift_storeEnumTagMultiPayload();
            goto LABEL_304;
          }
          uint64_t v421 = (_OWORD *)(a1 + 144);
          long long v567 = *(_OWORD *)(a2 + 256);
          *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
          *(_OWORD *)(a1 + 256) = v567;
          *(_OWORD *)(a1 + 265) = *(_OWORD *)(a2 + 265);
          long long v568 = *(_OWORD *)(a2 + 192);
          *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
          *(_OWORD *)(a1 + 192) = v568;
          long long v569 = *(_OWORD *)(a2 + 224);
          *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
          *(_OWORD *)(a1 + 224) = v569;
        }
        long long v570 = v422[1];
        *uint64_t v421 = *v422;
        v421[1] = v570;
        goto LABEL_500;
      case 7:
        uint64_t v121 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v121;
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
        uint64_t v122 = *(void *)(a2 + 56);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = v122;
        uint64_t v123 = *(void *)(a2 + 72);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = v123;
        uint64_t v124 = *(void *)(a2 + 88);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v124 == 1)
        {
          long long v125 = *(_OWORD *)(a2 + 128);
          *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
          *(_OWORD *)(a1 + 128) = v125;
          *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
          long long v126 = *(_OWORD *)(a2 + 96);
          *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
          *(_OWORD *)(a1 + 96) = v126;
        }
        else
        {
          *(void *)(a1 + 80) = *(void *)(a2 + 80);
          *(void *)(a1 + 88) = v124;
          uint64_t v256 = *(void *)(a2 + 120);
          swift_bridgeObjectRetain();
          if (v256)
          {
            uint64_t v257 = *(void *)(a2 + 128);
            *(void *)(a1 + 120) = v256;
            *(void *)(a1 + 128) = v257;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v256 - 8))(a1 + 96, a2 + 96, v256);
            *(void *)(a1 + 136) = *(void *)(a2 + 136);
          }
          else
          {
            long long v483 = *(_OWORD *)(a2 + 112);
            *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
            *(_OWORD *)(a1 + 112) = v483;
            *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
          }
          *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
        }
        goto LABEL_303;
      case 8:
        uint64_t v1168 = v5;
        uint64_t v127 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v127;
        uint64_t v128 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
        uint64_t v129 = (void *)(a1 + v128);
        uint64_t v130 = a2 + v128;
        uint64_t v131 = *(void *)(a2 + v128 + 8);
        void *v129 = *(void *)(a2 + v128);
        v129[1] = v131;
        uint64_t v132 = *(void *)(a2 + v128 + 24);
        v129[2] = *(void *)(a2 + v128 + 16);
        v129[3] = v132;
        uint64_t v133 = type metadata accessor for FormatCustomItem.Resolved();
        uint64_t v134 = *(int *)(v133 + 24);
        v1145 = (char *)v129 + v134;
        uint64_t v1155 = v133;
        uint64_t v135 = (const void *)(v130 + v134);
        uint64_t v136 = type metadata accessor for FormatCustomItem.Action();
        uint64_t v1135 = *(void *)(v136 - 8);
        uint64_t v137 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v1135 + 48);
        uint64_t v138 = v136;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v137(v135, 1, v138))
        {
          sub_1BFEEF2C0(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
          memcpy(v1145, v135, *(void *)(*(void *)(v139 - 8) + 64));
        }
        else
        {
          uint64_t v369 = sub_1C1515FDC();
          (*(void (**)(char *, const void *, uint64_t))(*(void *)(v369 - 8) + 16))(v1145, v135, v369);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v1135 + 56))(v1145, 0, 1, v138);
        }
        uint64_t v5 = v1168;
        *(void *)((char *)v129 + *(int *)(v1155 + 28)) = *(void *)(v130 + *(int *)(v1155 + 28));
        swift_bridgeObjectRetain();
        goto LABEL_303;
      case 9:
        uint64_t v32 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v32;
        uint64_t v33 = *(void *)(a2 + 24);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = v33;
        uint64_t v34 = *(void *)(a2 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v34)
        {
          uint64_t v35 = *(void *)(a2 + 64);
          *(void *)(a1 + 56) = v34;
          *(void *)(a1 + 64) = v35;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v34 - 8))(a1 + 32, a2 + 32, v34);
        }
        else
        {
          long long v299 = *(_OWORD *)(a2 + 48);
          *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 48) = v299;
          *(void *)(a1 + 64) = *(void *)(a2 + 64);
        }
        long long v300 = (_OWORD *)(a1 + 72);
        v301 = (_OWORD *)(a2 + 72);
        uint64_t v302 = *(void *)(a2 + 96);
        if (v302)
        {
          uint64_t v303 = *(void *)(a2 + 104);
          *(void *)(a1 + 96) = v302;
          *(void *)(a1 + 104) = v303;
          (**(void (***)(_OWORD *, _OWORD *))(v302 - 8))(v300, v301);
        }
        else
        {
          long long v323 = *(_OWORD *)(a2 + 88);
          *long long v300 = *v301;
          *(_OWORD *)(a1 + 88) = v323;
          *(void *)(a1 + 104) = *(void *)(a2 + 104);
        }
        long long v324 = (_OWORD *)(a1 + 112);
        v325 = (_OWORD *)(a2 + 112);
        uint64_t v326 = *(void *)(a2 + 136);
        if (v326)
        {
          uint64_t v327 = *(void *)(a2 + 144);
          *(void *)(a1 + 136) = v326;
          *(void *)(a1 + 144) = v327;
          (**(void (***)(_OWORD *, _OWORD *))(v326 - 8))(v324, v325);
        }
        else
        {
          long long v355 = *(_OWORD *)(a2 + 128);
          *long long v324 = *v325;
          *(_OWORD *)(a1 + 128) = v355;
          *(void *)(a1 + 144) = *(void *)(a2 + 144);
        }
        goto LABEL_303;
      case 10:
        uint64_t v140 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v140;
        uint64_t v141 = (int *)type metadata accessor for FeedEngagementBanner();
        uint64_t v142 = v141[5];
        uint64_t v143 = a1 + v142;
        uint64_t v144 = a2 + v142;
        uint64_t v145 = sub_1C151959C();
        uint64_t v146 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v145 - 8) + 16);
        swift_bridgeObjectRetain();
        v146(v143, v144, v145);
        *(void *)(a1 + v141[6]) = *(void *)(a2 + v141[6]);
        uint64_t v147 = v141[7];
        uint64_t v148 = a1 + v147;
        uint64_t v149 = a2 + v147;
        *(void *)uint64_t v148 = *(void *)v149;
        *(unsigned char *)(v148 + 8) = *(unsigned char *)(v149 + 8);
        uint64_t v150 = v141[8];
        uint64_t v26 = a1 + v150;
        uint64_t v27 = a2 + v150;
        unint64_t v28 = *(void *)(v27 + 8);
        if (v28 >= 0x11)
        {
LABEL_74:
          *(void *)uint64_t v26 = *(void *)v27;
          *(void *)(v26 + 8) = v28;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
        }
        goto LABEL_303;
      case 11:
        *(void *)a1 = *(void *)a2;
        swift_retain();
        swift_storeEnumTagMultiPayload();
        goto LABEL_304;
      case 12:
        uint64_t v36 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v36;
        uint64_t v37 = *(void *)(a2 + 24);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = v37;
        *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_storeEnumTagMultiPayload();
        goto LABEL_304;
      case 13:
        uint64_t v151 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v151;
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        id v152 = (void *)(a2 + 24);
        unint64_t v153 = *(void *)(a2 + 32);
        if (v153 >= 0x11)
        {
          *(void *)(a1 + 24) = *v152;
          *(void *)(a1 + 32) = v153;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)v152;
        }
        uint64_t v258 = *(void *)(a2 + 48);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = v258;
        v259 = *(void **)(a2 + 64);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(void *)(a1 + 64) = v259;
        *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        uint64_t v260 = *(void *)(a2 + 112);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        id v261 = v259;
        swift_bridgeObjectRetain();
        if (v260)
        {
          uint64_t v262 = *(void *)(a2 + 120);
          *(void *)(a1 + 112) = v260;
          *(void *)(a1 + 120) = v262;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v260 - 8))(a1 + 88, a2 + 88, v260);
        }
        else
        {
          long long v383 = *(_OWORD *)(a2 + 104);
          *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
          *(_OWORD *)(a1 + 104) = v383;
          *(void *)(a1 + 120) = *(void *)(a2 + 120);
        }
        uint64_t v384 = (_OWORD *)(a1 + 128);
        long long v385 = (_OWORD *)(a2 + 128);
        uint64_t v386 = *(void *)(a2 + 152);
        if (v386)
        {
          uint64_t v387 = *(void *)(a2 + 160);
          *(void *)(a1 + 152) = v386;
          *(void *)(a1 + 160) = v387;
          (**(void (***)(_OWORD *, _OWORD *))(v386 - 8))(v384, v385);
        }
        else
        {
          long long v405 = *(_OWORD *)(a2 + 144);
          *uint64_t v384 = *v385;
          *(_OWORD *)(a1 + 144) = v405;
          *(void *)(a1 + 160) = *(void *)(a2 + 160);
        }
        unint64_t v406 = (_OWORD *)(a1 + 168);
        long long v407 = (_OWORD *)(a2 + 168);
        uint64_t v408 = *(void *)(a2 + 192);
        if (v408)
        {
          uint64_t v409 = *(void *)(a2 + 200);
          *(void *)(a1 + 192) = v408;
          *(void *)(a1 + 200) = v409;
          (**(void (***)(_OWORD *, _OWORD *))(v408 - 8))(v406, v407);
        }
        else
        {
          long long v415 = *(_OWORD *)(a2 + 184);
          *unint64_t v406 = *v407;
          *(_OWORD *)(a1 + 184) = v415;
          *(void *)(a1 + 200) = *(void *)(a2 + 200);
        }
        goto LABEL_303;
      case 14:
        uint64_t v38 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v38;
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        uint64_t v39 = (void *)(a2 + 24);
        unint64_t v40 = *(void *)(a2 + 32);
        if (v40 >= 0x11)
        {
          *(void *)(a1 + 24) = *v39;
          *(void *)(a1 + 32) = v40;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)v39;
        }
        uint64_t v236 = *(void *)(a2 + 48);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = v236;
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_storeEnumTagMultiPayload();
        goto LABEL_304;
      case 15:
        uint64_t v154 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v154;
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        uint64_t v155 = (void *)(a2 + 24);
        unint64_t v156 = *(void *)(a2 + 32);
        if (v156 >= 0x11)
        {
          *(void *)(a1 + 24) = *v155;
          *(void *)(a1 + 32) = v156;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)v155;
        }
        break;
      case 16:
        uint64_t v1166 = v5;
        uint64_t v41 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v41;
        uint64_t v42 = *(void *)(a2 + 24);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = v42;
        uint64_t v43 = *(void *)(a2 + 40);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = v43;
        *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
        *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
        uint64_t v44 = *(void *)(a2 + 80);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(void *)(a1 + 80) = v44;
        uint64_t v45 = *(void *)(a2 + 96);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        *(void *)(a1 + 96) = v45;
        *(void *)(a1 + 104) = *(void *)(a2 + 104);
        *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
        uint64_t v46 = *(void *)(a2 + 128);
        *(void *)(a1 + 120) = *(void *)(a2 + 120);
        *(void *)(a1 + 128) = v46;
        *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
        uint64_t v47 = *(void *)(a2 + 152);
        *(void *)(a1 + 144) = *(void *)(a2 + 144);
        *(void *)(a1 + 152) = v47;
        uint64_t v48 = *(void *)(a2 + 168);
        *(void *)(a1 + 160) = *(void *)(a2 + 160);
        *(void *)(a1 + 168) = v48;
        *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
        *(void *)(a1 + 176) = *(void *)(a2 + 176);
        uint64_t v49 = *(void *)(a2 + 200);
        *(void *)(a1 + 192) = *(void *)(a2 + 192);
        *(void *)(a1 + 200) = v49;
        *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
        uint64_t v50 = *(void *)(a2 + 216);
        *(void *)(a1 + 208) = *(void *)(a2 + 208);
        *(void *)(a1 + 216) = v50;
        v1132 = (void *)(a2 + 232);
        unint64_t v51 = *(void *)(a2 + 240);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v51 >= 0x11)
        {
          *(void *)(a1 + 232) = *v1132;
          *(void *)(a1 + 240) = v51;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 232) = *(_OWORD *)v1132;
        }
        uint64_t v5 = v1166;
LABEL_303:
        swift_storeEnumTagMultiPayload();
        goto LABEL_304;
      default:
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v5 - 8) + 64));
        goto LABEL_304;
    }
    uint64_t v263 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v263;
    uint64_t v264 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
    uint64_t v265 = a1 + v264;
    uint64_t v266 = a2 + v264;
    *(void *)(a1 + v264) = *(void *)(a2 + v264);
    uint64_t v267 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
    v268 = (void *)(v265 + v267);
    v269 = (void *)(v266 + v267);
    type metadata accessor for PuzzleStatisticCategory(0);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v1170 = v5;
        uint64_t v451 = type metadata accessor for PuzzleStatisticValue(0);
        int v452 = swift_getEnumCaseMultiPayload();
        if (v452 == 5)
        {
          uint64_t v453 = type metadata accessor for PuzzleStreak();
          uint64_t v454 = *(void *)(v453 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v454 + 48))(v269, 1, v453))
          {
LABEL_488:
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v268, v269, *(void *)(*(void *)(v1017 - 8) + 64));
LABEL_521:
            swift_storeEnumTagMultiPayload();
LABEL_522:
            uint64_t v1045 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
            uint64_t v1046 = *(int *)(v1045 + 20);
            v1047 = v268;
            uint64_t v1048 = (char *)v268 + v1046;
            uint64_t v1049 = (char *)v269 + v1046;
            int v1050 = swift_getEnumCaseMultiPayload();
            if (v1050 == 5)
            {
              uint64_t v1051 = type metadata accessor for PuzzleStreak();
              uint64_t v1052 = *(void *)(v1051 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1052 + 48))(v1049, 1, v1051))
              {
LABEL_527:
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v1048, v1049, *(void *)(*(void *)(v1053 - 8) + 64));
LABEL_549:
                swift_storeEnumTagMultiPayload();
LABEL_550:
                uint64_t v1075 = *(int *)(v1045 + 24);
                long long v1076 = (char *)v1047 + v1075;
                uint64_t v1077 = (char *)v269 + v1075;
                int v1078 = swift_getEnumCaseMultiPayload();
                if (v1078 == 5)
                {
                  uint64_t v1079 = type metadata accessor for PuzzleStreak();
                  uint64_t v1080 = *(void *)(v1079 - 8);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1080 + 48))(v1077, 1, v1079))
                  {
LABEL_555:
                    sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                    memcpy(v1076, v1077, *(void *)(*(void *)(v1081 - 8) + 64));
LABEL_576:
                    swift_storeEnumTagMultiPayload();
                    goto LABEL_577;
                  }
                }
                else
                {
                  if (v1078 != 4)
                  {
                    memcpy(v1076, v1077, *(void *)(*(void *)(v451 - 8) + 64));
LABEL_577:
                    uint64_t v5 = v1170;
                    goto LABEL_578;
                  }
                  uint64_t v1079 = type metadata accessor for PuzzleStreak();
                  uint64_t v1080 = *(void *)(v1079 - 8);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1080 + 48))(v1077, 1, v1079)) {
                    goto LABEL_555;
                  }
                }
                uint64_t v1098 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1098 - 8) + 16))(v1076, v1077, v1098);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v1080 + 56))(v1076, 0, 1, v1079);
                goto LABEL_576;
              }
            }
            else
            {
              if (v1050 != 4)
              {
                memcpy(v1048, v1049, *(void *)(*(void *)(v451 - 8) + 64));
                goto LABEL_550;
              }
              uint64_t v1051 = type metadata accessor for PuzzleStreak();
              uint64_t v1052 = *(void *)(v1051 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1052 + 48))(v1049, 1, v1051)) {
                goto LABEL_527;
              }
            }
            uint64_t v1074 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1074 - 8) + 16))(v1048, v1049, v1074);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v1052 + 56))(v1048, 0, 1, v1051);
            goto LABEL_549;
          }
        }
        else
        {
          if (v452 != 4)
          {
            memcpy(v268, v269, *(void *)(*(void *)(v451 - 8) + 64));
            goto LABEL_522;
          }
          uint64_t v453 = type metadata accessor for PuzzleStreak();
          uint64_t v454 = *(void *)(v453 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v454 + 48))(v269, 1, v453)) {
            goto LABEL_488;
          }
        }
        uint64_t v1044 = sub_1C151555C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v1044 - 8) + 16))(v268, v269, v1044);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v454 + 56))(v268, 0, 1, v453);
        goto LABEL_521;
      case 2u:
        uint64_t v1169 = v5;
        id v445 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
        uint64_t v446 = *((void *)v445 - 1);
        if ((*(unsigned int (**)(void *, uint64_t, int *))(v446 + 48))(v269, 1, v445))
        {
          sub_1BFEEF2C0(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
          memcpy(v268, v269, *(void *)(*(void *)(v447 - 8) + 64));
          uint64_t v5 = v1169;
        }
        else
        {
          uint64_t v587 = sub_1C151631C();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v587 - 8) + 16))(v268, v269, v587);
          unint64_t v588 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
          uint64_t v589 = v588[5];
          v590 = (void *)((char *)v268 + v589);
          uint64_t v591 = (void *)((char *)v269 + v589);
          uint64_t v592 = v591[1];
          void *v590 = *v591;
          v590[1] = v592;
          uint64_t v593 = v588[6];
          v1139 = v268;
          uint64_t v594 = (char *)v268 + v593;
          uint64_t v595 = (void *)((char *)v269 + v593);
          uint64_t v596 = v595[1];
          *(void *)uint64_t v594 = *v595;
          *((void *)v594 + 1) = v596;
          v597 = v595 + 2;
          unint64_t v598 = v595[3];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v598 >> 60 == 15)
          {
            *((_OWORD *)v594 + 1) = *(_OWORD *)v597;
          }
          else
          {
            uint64_t v1024 = *v597;
            sub_1BFE95820(*v597, v598);
            *((void *)v594 + 2) = v1024;
            *((void *)v594 + 3) = v598;
          }
          *(void *)((char *)v1139 + v588[7]) = *(void *)((char *)v269 + v588[7]);
          *(void *)((char *)v1139 + v588[8]) = *(void *)((char *)v269 + v588[8]);
          *(void *)((char *)v1139 + v445[5]) = *(void *)((char *)v269 + v445[5]);
          *(void *)((char *)v1139 + v445[6]) = *(void *)((char *)v269 + v445[6]);
          uint64_t v1025 = v445[7];
          id v1026 = (void *)((char *)v1139 + v1025);
          v1027 = (void *)((char *)v269 + v1025);
          uint64_t v1028 = v1027[1];
          *id v1026 = *v1027;
          v1026[1] = v1028;
          uint64_t v1029 = *(void (**)(void *, void, uint64_t, int *))(v446 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v1029(v1139, 0, 1, v445);
          uint64_t v5 = v1169;
        }
        goto LABEL_578;
      case 3u:
        uint64_t v1171 = v5;
        uint64_t v455 = v269[1];
        void *v268 = *v269;
        v268[1] = v455;
        *((unsigned char *)v268 + 16) = *((unsigned char *)v269 + 16);
        uint64_t v456 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
        uint64_t v457 = v456[6];
        v1138 = v268;
        v458 = (char *)v268 + v457;
        uint64_t v459 = (char *)v269 + v457;
        uint64_t v460 = type metadata accessor for PuzzleStreak();
        uint64_t v461 = *(void *)(v460 - 8);
        uint64_t v462 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v461 + 48);
        if (v462(v459, 1, v460))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v458, v459, *(void *)(*(void *)(v463 - 8) + 64));
        }
        else
        {
          uint64_t v962 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v962 - 8) + 16))(v458, v459, v962);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v461 + 56))(v458, 0, 1, v460);
        }
        uint64_t v963 = v456[7];
        uint64_t v964 = (char *)v1138 + v963;
        uint64_t v965 = (char *)v269 + v963;
        if (v462((char *)v269 + v963, 1, v460))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v964, v965, *(void *)(*(void *)(v966 - 8) + 64));
        }
        else
        {
          uint64_t v977 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v977 - 8) + 16))(v964, v965, v977);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v461 + 56))(v964, 0, 1, v460);
        }
        uint64_t v5 = v1171;
        uint64_t v978 = v456[8];
        uint64_t v979 = (_OWORD *)((char *)v1138 + v978);
        v980 = (_OWORD *)((char *)v269 + v978);
        long long v981 = v980[1];
        *uint64_t v979 = *v980;
        v979[1] = v981;
        *(_OWORD *)((char *)v979 + 25) = *(_OWORD *)((char *)v980 + 25);
        uint64_t v982 = v456[9];
        unint64_t v983 = (_OWORD *)((char *)v1138 + v982);
        uint64_t v984 = (_OWORD *)((char *)v269 + v982);
        *(_OWORD *)((char *)v983 + 25) = *(_OWORD *)((char *)v984 + 25);
        long long v985 = v984[1];
        *unint64_t v983 = *v984;
        v983[1] = v985;
        uint64_t v986 = v456[10];
        uint64_t v987 = (_OWORD *)((char *)v1138 + v986);
        v988 = (_OWORD *)((char *)v269 + v986);
        long long v989 = v988[1];
        *uint64_t v987 = *v988;
        v987[1] = v989;
        *(_OWORD *)((char *)v987 + 25) = *(_OWORD *)((char *)v988 + 25);
        goto LABEL_578;
      default:
        uint64_t v270 = type metadata accessor for PuzzleStatisticValue(0);
        int v271 = swift_getEnumCaseMultiPayload();
        if (v271 == 5)
        {
          uint64_t v272 = type metadata accessor for PuzzleStreak();
          uint64_t v273 = *(void *)(v272 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v273 + 48))(v269, 1, v272))
          {
LABEL_482:
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v268, v269, *(void *)(*(void *)(v1016 - 8) + 64));
LABEL_518:
            swift_storeEnumTagMultiPayload();
            goto LABEL_578;
          }
        }
        else
        {
          if (v271 != 4)
          {
            memcpy(v268, v269, *(void *)(*(void *)(v270 - 8) + 64));
LABEL_578:
            swift_storeEnumTagMultiPayload();
            swift_storeEnumTagMultiPayload();
LABEL_304:
            sub_1C049A100();
            uint64_t v630 = *(int *)(v629 + 48);
            uint64_t v631 = (void *)(a1 + v630);
            v632 = (void *)(a2 + v630);
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
                uint64_t v633 = v632[1];
                *uint64_t v631 = *v632;
                v631[1] = v633;
                uint64_t v634 = v632[3];
                v631[2] = v632[2];
                v631[3] = v634;
                *((unsigned char *)v631 + 32) = *((unsigned char *)v632 + 32);
                uint64_t v635 = v632 + 5;
                unint64_t v636 = v632[6];
                swift_bridgeObjectRetain();
                if (v636 >= 0x11)
                {
                  v631[5] = *v635;
                  v631[6] = v636;
                  swift_bridgeObjectRetain();
                }
                else
                {
                  *(_OWORD *)(v631 + 5) = *(_OWORD *)v635;
                }
                goto LABEL_586;
              case 1u:
                uint64_t v671 = v632[1];
                *uint64_t v631 = *v632;
                v631[1] = v671;
                uint64_t v672 = v632[3];
                v631[2] = v632[2];
                v631[3] = v672;
                *((unsigned char *)v631 + 32) = *((unsigned char *)v632 + 32);
                uint64_t v673 = v632[6];
                v631[5] = v632[5];
                v631[6] = v673;
                uint64_t v674 = v632[8];
                v631[7] = v632[7];
                v631[8] = v674;
                long long v675 = v632 + 9;
                unint64_t v676 = v632[10];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (v676 >= 0x11)
                {
                  v631[9] = *v675;
                  v631[10] = v676;
                  swift_bridgeObjectRetain();
                }
                else
                {
                  *(_OWORD *)(v631 + 9) = *(_OWORD *)v675;
                }
                goto LABEL_586;
              case 2u:
                uint64_t v637 = v632[1];
                *uint64_t v631 = *v632;
                v631[1] = v637;
                uint64_t v638 = (int *)type metadata accessor for FeedBannerAd();
                uint64_t v639 = v638[5];
                uint64_t v640 = (char *)v631 + v639;
                int v641 = (char *)v632 + v639;
                uint64_t v642 = sub_1C151DBAC();
                uint64_t v643 = *(void (**)(char *, char *, uint64_t))(*(void *)(v642 - 8) + 16);
                swift_bridgeObjectRetain();
                v643(v640, v641, v642);
                *(void *)((char *)v631 + v638[6]) = *(void *)((char *)v632 + v638[6]);
                uint64_t v644 = v638[7];
                uint64_t v645 = (char *)v631 + v644;
                v646 = (char *)v632 + v644;
                *(void *)uint64_t v645 = *(void *)v646;
                v645[8] = v646[8];
                uint64_t v647 = v638[8];
                uint64_t v63 = (char *)v631 + v647;
                uint64_t v64 = (char *)v632 + v647;
                unint64_t v65 = *((void *)v64 + 1);
                if (v65 >= 0x11) {
                  goto LABEL_82;
                }
                *(_OWORD *)uint64_t v63 = *(_OWORD *)v64;
                goto LABEL_586;
              case 3u:
                uint64_t v677 = v632[1];
                *uint64_t v631 = *v632;
                v631[1] = v677;
                v631[2] = v632[2];
                *((unsigned char *)v631 + 24) = *((unsigned char *)v632 + 24);
                uint64_t v678 = v632[5];
                v631[4] = v632[4];
                v631[5] = v678;
                v631[6] = v632[6];
                *((unsigned char *)v631 + 56) = *((unsigned char *)v632 + 56);
                v1140 = (int *)type metadata accessor for FeedHeadline(0);
                uint64_t v679 = v1140[10];
                uint64_t v680 = (char *)v631 + v679;
                v681 = (char *)v632 + v679;
                *uint64_t v680 = *((unsigned char *)v632 + v679);
                v680[1] = *((unsigned char *)v632 + v679 + 1);
                uint64_t v682 = type metadata accessor for FeedHeadline.State(0);
                uint64_t v683 = *(int *)(v682 + 24);
                v1124 = &v680[v683];
                __dste = (int *)v682;
                uint64_t v684 = &v681[v683];
                uint64_t v685 = (int *)type metadata accessor for SharedItem();
                uint64_t v1119 = *((void *)v685 - 1);
                long long v686 = *(unsigned int (**)(char *, uint64_t, int *))(v1119 + 48);
                swift_bridgeObjectRetain();
                swift_unknownObjectRetain();
                swift_unknownObjectRetain();
                if (v686(v684, 1, v685))
                {
                  uint64_t v687 = type metadata accessor for FeedItem.SharedState(0);
                  memcpy(v1124, v684, *(void *)(*(void *)(v687 - 8) + 64));
                }
                else
                {
                  uint64_t v802 = sub_1C151631C();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v802 - 8) + 16))(v1124, v684, v802);
                  v1124[v685[5]] = v684[v685[5]];
                  uint64_t v803 = v685[6];
                  id v804 = *(void **)&v684[v803];
                  *(void *)&v1124[v803] = v804;
                  uint64_t v805 = v685[7];
                  v1153 = &v684[v805];
                  v1164 = &v1124[v805];
                  uint64_t v806 = sub_1C1515FDC();
                  uint64_t v1114 = *(void (**)(char *, char *, uint64_t))(*(void *)(v806 - 8) + 16);
                  id v807 = v804;
                  v1114(v1164, v1153, v806);
                  (*(void (**)(char *, void, uint64_t, int *))(v1119 + 56))(v1124, 0, 1, v685);
                }
                v680[__dste[7]] = v681[__dste[7]];
                v680[__dste[8]] = v681[__dste[8]];
                v680[__dste[9]] = v681[__dste[9]];
                v680[__dste[10]] = v681[__dste[10]];
                uint64_t v808 = v1140[11];
                v809 = (char *)v631 + v808;
                uint64_t v810 = (char *)v632 + v808;
                uint64_t v811 = sub_1C151D2DC();
                uint64_t v812 = *(void *)(v811 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v812 + 48))(v810, 1, v811))
                {
                  sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
                  memcpy(v809, v810, *(void *)(*(void *)(v813 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(v812 + 16))(v809, v810, v811);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v812 + 56))(v809, 0, 1, v811);
                }
                uint64_t v820 = v1140[12];
                uint64_t v821 = (void *)((char *)v631 + v820);
                v822 = (void *)((char *)v632 + v820);
                unint64_t v823 = v822[1];
                if (v823 >= 0x11)
                {
                  *uint64_t v821 = *v822;
                  v821[1] = v823;
                  swift_bridgeObjectRetain();
                }
                else
                {
                  *(_OWORD *)uint64_t v821 = *(_OWORD *)v822;
                }
                uint64_t v824 = v1140[13];
                unint64_t v825 = *(void *)((char *)v632 + v824);
                if (v825 >= 2)
                {
                  if (v825 == 2)
                  {
                    *(void *)((char *)v631 + v824) = 2;
                  }
                  else
                  {
                    *(void *)((char *)v631 + v824) = v825;
                    swift_unknownObjectRetain();
                  }
                }
                else
                {
                  *(void *)((char *)v631 + v824) = v825;
                }
                uint64_t v862 = v1140[14];
                uint64_t v863 = *(void **)((char *)v632 + v862);
                *(void *)((char *)v631 + v862) = v863;
                id v864 = v863;
                goto LABEL_586;
              case 4u:
                uint64_t v648 = v632[1];
                *uint64_t v631 = *v632;
                v631[1] = v648;
                *((unsigned char *)v631 + 16) = *((unsigned char *)v632 + 16);
                uint64_t v649 = v632 + 3;
                unint64_t v650 = v632[4];
                if (v650 >= 0x11)
                {
                  v631[3] = *v649;
                  v631[4] = v650;
                  swift_bridgeObjectRetain();
                }
                else
                {
                  *(_OWORD *)(v631 + 3) = *(_OWORD *)v649;
                }
                uint64_t v739 = v632[6];
                v631[5] = v632[5];
                v631[6] = v739;
                v740 = (int *)type metadata accessor for FeedWebEmbed();
                uint64_t v741 = v740[8];
                v1162 = (char *)v631 + v741;
                uint64_t v742 = (char *)v632 + v741;
                uint64_t v743 = sub_1C1515FDC();
                uint64_t v744 = *(void *)(v743 - 8);
                unint64_t v745 = *(void (**)(char *, char *, uint64_t))(v744 + 16);
                swift_bridgeObjectRetain();
                v745(v1162, v742, v743);
                uint64_t v1163 = v740;
                uint64_t v746 = v740[9];
                v747 = (char *)v631 + v746;
                uint64_t v748 = (char *)v632 + v746;
                uint64_t v1142 = v743;
                v1125 = v745;
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v744 + 48))((char *)v632 + v746, 1, v743))
                {
                  sub_1BFEEF2C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
                  memcpy(v747, v748, *(void *)(*(void *)(v749 - 8) + 64));
                }
                else
                {
                  v745(v747, v748, v743);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v744 + 56))(v747, 0, 1, v743);
                }
                *(void *)((char *)v631 + v740[10]) = *(void *)((char *)v632 + v740[10]);
                *(void *)((char *)v631 + v740[11]) = *(void *)((char *)v632 + v740[11]);
                uint64_t v780 = v740[12];
                uint64_t v781 = (void *)((char *)v631 + v780);
                v1152 = (void *)((char *)v632 + v780);
                uint64_t v782 = type metadata accessor for FeedHeadline(0);
                uint64_t v783 = *(void **)(v782 - 8);
                uint64_t v784 = (unsigned int (*)(void *, uint64_t, uint64_t))v783[6];
                swift_retain();
                swift_retain();
                if (v784(v1152, 1, v782))
                {
                  sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
                  memcpy(v781, v1152, *(void *)(*(void *)(v785 - 8) + 64));
                }
                else
                {
                  v1110 = v783;
                  v1113 = (int *)v782;
                  uint64_t v791 = v1152[1];
                  *uint64_t v781 = *v1152;
                  v781[1] = v791;
                  v781[2] = v1152[2];
                  *((unsigned char *)v781 + 24) = *((unsigned char *)v1152 + 24);
                  uint64_t v792 = v1152[5];
                  v781[4] = v1152[4];
                  v781[5] = v792;
                  v781[6] = v1152[6];
                  *((unsigned char *)v781 + 56) = *((unsigned char *)v1152 + 56);
                  uint64_t v793 = *(int *)(v782 + 40);
                  uint64_t v794 = (char *)v781 + v793;
                  v795 = (char *)v1152 + v793;
                  *uint64_t v794 = *((unsigned char *)v1152 + v793);
                  v794[1] = *((unsigned char *)v1152 + v793 + 1);
                  uint64_t v1107 = (int *)type metadata accessor for FeedHeadline.State(0);
                  uint64_t v796 = v1107[6];
                  uint64_t v1105 = &v794[v796];
                  v797 = &v795[v796];
                  uint64_t v798 = (int *)type metadata accessor for SharedItem();
                  uint64_t v1102 = *((void *)v798 - 1);
                  v799 = *(unsigned int (**)(char *, uint64_t, int *))(v1102 + 48);
                  swift_bridgeObjectRetain();
                  swift_unknownObjectRetain();
                  swift_unknownObjectRetain();
                  if (v799(v797, 1, v798))
                  {
                    uint64_t v800 = type metadata accessor for FeedItem.SharedState(0);
                    memcpy(v1105, v797, *(void *)(*(void *)(v800 - 8) + 64));
                  }
                  else
                  {
                    uint64_t v888 = sub_1C151631C();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v888 - 8) + 16))(v1105, v797, v888);
                    v1105[v798[5]] = v797[v798[5]];
                    uint64_t v889 = v798[6];
                    uint64_t v890 = *(void **)&v797[v889];
                    *(void *)&v1105[v889] = v890;
                    uint64_t v891 = v798[7];
                    uint64_t v892 = &v1105[v891];
                    v893 = &v797[v891];
                    id v894 = v890;
                    v1125(v892, v893, v1142);
                    (*(void (**)(char *, void, uint64_t, int *))(v1102 + 56))(v1105, 0, 1, v798);
                  }
                  v794[v1107[7]] = v795[v1107[7]];
                  v794[v1107[8]] = v795[v1107[8]];
                  v794[v1107[9]] = v795[v1107[9]];
                  v794[v1107[10]] = v795[v1107[10]];
                  uint64_t v895 = v1113[11];
                  v896 = (char *)v781 + v895;
                  uint64_t v897 = (char *)v1152 + v895;
                  uint64_t v898 = sub_1C151D2DC();
                  uint64_t v899 = *(void *)(v898 - 8);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v899 + 48))(v897, 1, v898))
                  {
                    sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
                    memcpy(v896, v897, *(void *)(*(void *)(v900 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(v899 + 16))(v896, v897, v898);
                    (*(void (**)(char *, void, uint64_t, uint64_t))(v899 + 56))(v896, 0, 1, v898);
                  }
                  uint64_t v901 = v1113[12];
                  uint64_t v902 = (void *)((char *)v781 + v901);
                  uint64_t v903 = (void *)((char *)v1152 + v901);
                  unint64_t v904 = v903[1];
                  if (v904 >= 0x11)
                  {
                    *uint64_t v902 = *v903;
                    v902[1] = v904;
                    swift_bridgeObjectRetain();
                  }
                  else
                  {
                    *(_OWORD *)uint64_t v902 = *(_OWORD *)v903;
                  }
                  uint64_t v905 = v1113[13];
                  unint64_t v906 = *(void *)((char *)v1152 + v905);
                  if (v906 >= 2)
                  {
                    if (v906 == 2)
                    {
                      *(void *)((char *)v781 + v905) = 2;
                    }
                    else
                    {
                      *(void *)((char *)v781 + v905) = v906;
                      swift_unknownObjectRetain();
                    }
                  }
                  else
                  {
                    *(void *)((char *)v781 + v905) = v906;
                  }
                  uint64_t v946 = v1113[14];
                  uint64_t v947 = *(void **)((char *)v1152 + v946);
                  *(void *)((char *)v781 + v946) = v947;
                  v948 = (void (*)(void *, void, uint64_t, int *))v1110[7];
                  id v949 = v947;
                  v948(v781, 0, 1, v1113);
                }
                uint64_t v950 = v1163[13];
                v951 = (void *)((char *)v631 + v950);
                uint64_t v952 = (void *)((char *)v632 + v950);
                uint64_t v953 = type metadata accessor for WebEmbedDataVisualization();
                uint64_t v954 = *(void *)(v953 - 8);
                if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v954 + 48))(v952, 1, v953))
                {
                  sub_1BFEEF2C0(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
                  memcpy(v951, v952, *(void *)(*(void *)(v955 - 8) + 64));
                }
                else
                {
                  int v956 = swift_getEnumCaseMultiPayload();
                  uint64_t v957 = *v952;
                  if (v956 == 1)
                  {
                    uint64_t v958 = v952[1];
                    void *v951 = v957;
                    v951[1] = v958;
                    uint64_t v959 = type metadata accessor for GenericDataVisualization();
                    uint64_t v960 = *(int *)(v959 + 20);
                    v1154 = (char *)v951 + v960;
                    uint64_t v961 = (char *)v952 + v960;
                    swift_bridgeObjectRetain();
                    v1125(v1154, v961, v1142);
                    *(void *)((char *)v951 + *(int *)(v959 + 24)) = *(uint64_t *)((char *)v952 + *(int *)(v959 + 24));
                    swift_bridgeObjectRetain();
                  }
                  else
                  {
                    void *v951 = v957;
                    swift_retain();
                  }
                  swift_storeEnumTagMultiPayload();
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v954 + 56))(v951, 0, 1, v953);
                }
                *((unsigned char *)v631 + v1163[14]) = *((unsigned char *)v632 + v1163[14]);
                goto LABEL_586;
              case 5u:
                uint64_t v688 = (void *)*v632;
                uint64_t v689 = v632[1];
                *uint64_t v631 = *v632;
                v631[1] = v689;
                v631[2] = v632[2];
                *((_WORD *)v631 + 12) = *((_WORD *)v632 + 12);
                v631[4] = v632[4];
                *((unsigned char *)v631 + 40) = *((unsigned char *)v632 + 40);
                v690 = (void *)v632[7];
                v631[6] = v632[6];
                v631[7] = v690;
                *((unsigned char *)v631 + 64) = *((unsigned char *)v632 + 64);
                uint64_t v691 = v632[10];
                id v692 = v688;
                swift_bridgeObjectRetain();
                id v693 = v690;
                if (v691 == 1)
                {
                  long long v694 = *(_OWORD *)(v632 + 11);
                  *(_OWORD *)(v631 + 9) = *(_OWORD *)(v632 + 9);
                  *(_OWORD *)(v631 + 11) = v694;
                  *(_OWORD *)(v631 + 13) = *(_OWORD *)(v632 + 13);
                }
                else
                {
                  v631[9] = v632[9];
                  v631[10] = v691;
                  uint64_t v751 = v632[12];
                  v631[11] = v632[11];
                  v631[12] = v751;
                  uint64_t v753 = (void *)v632[13];
                  uint64_t v752 = v632[14];
                  v631[13] = v753;
                  v631[14] = v752;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  id v754 = v753;
                }
                v755 = v632 + 15;
                unint64_t v756 = v632[16];
                if (v756 >= 0x11)
                {
                  v631[15] = *v755;
                  v631[16] = v756;
                  swift_bridgeObjectRetain();
                }
                else
                {
                  *(_OWORD *)(v631 + 15) = *(_OWORD *)v755;
                }
                *((unsigned char *)v631 + 136) = *((unsigned char *)v632 + 136);
                goto LABEL_586;
              case 6u:
                int v695 = *((unsigned __int8 *)v632 + 281);
                if (v695 == 2)
                {
                  uint64_t v832 = v632[1];
                  *uint64_t v631 = *v632;
                  v631[1] = v832;
                  v631[2] = v632[2];
                  *((unsigned char *)v631 + 24) = *((unsigned char *)v632 + 24);
                  v631[4] = v632[4];
                  *((unsigned char *)v631 + 40) = *((unsigned char *)v632 + 40);
                  uint64_t v833 = v632[7];
                  v631[6] = v632[6];
                  v631[7] = v833;
                  uint64_t v834 = v632[9];
                  v631[8] = v632[8];
                  v631[9] = v834;
                  uint64_t v835 = v632[11];
                  swift_bridgeObjectRetain();
                  swift_unknownObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  if (v835 != 1)
                  {
                    v631[10] = v632[10];
                    v631[11] = v835;
                    uint64_t v872 = v632[15];
                    swift_bridgeObjectRetain();
                    if (v872)
                    {
                      uint64_t v873 = v632[16];
                      v631[15] = v872;
                      v631[16] = v873;
                      (**(void (***)(uint64_t, uint64_t, uint64_t))(v872 - 8))((uint64_t)(v631 + 12), (uint64_t)(v632 + 12), v872);
                      v631[17] = v632[17];
                    }
                    else
                    {
                      long long v1023 = *((_OWORD *)v632 + 7);
                      *((_OWORD *)v631 + 6) = *((_OWORD *)v632 + 6);
                      *((_OWORD *)v631 + 7) = v1023;
                      *((_OWORD *)v631 + 8) = *((_OWORD *)v632 + 8);
                    }
                    *((unsigned char *)v631 + 144) = *((unsigned char *)v632 + 144);
                    goto LABEL_504;
                  }
                  uint64_t v836 = v631 + 10;
                  v837 = v632 + 10;
                  long long v838 = *((_OWORD *)v632 + 8);
                  *((_OWORD *)v631 + 7) = *((_OWORD *)v632 + 7);
                  *((_OWORD *)v631 + 8) = v838;
                  *((unsigned char *)v631 + 144) = *((unsigned char *)v632 + 144);
                }
                else
                {
                  if (v695 != 1)
                  {
                    v839 = (void *)*v632;
                    uint64_t v840 = v632[1];
                    *uint64_t v631 = *v632;
                    v631[1] = v840;
                    v631[2] = v632[2];
                    *((_WORD *)v631 + 12) = *((_WORD *)v632 + 12);
                    v631[4] = v632[4];
                    *((unsigned char *)v631 + 40) = *((unsigned char *)v632 + 40);
                    uint64_t v841 = (void *)v632[7];
                    v631[6] = v632[6];
                    v631[7] = v841;
                    *((unsigned char *)v631 + 64) = *((unsigned char *)v632 + 64);
                    uint64_t v842 = v632[10];
                    id v843 = v839;
                    swift_bridgeObjectRetain();
                    id v844 = v841;
                    if (v842 == 1)
                    {
                      long long v845 = *(_OWORD *)(v632 + 11);
                      *(_OWORD *)(v631 + 9) = *(_OWORD *)(v632 + 9);
                      *(_OWORD *)(v631 + 11) = v845;
                      *(_OWORD *)(v631 + 13) = *(_OWORD *)(v632 + 13);
                    }
                    else
                    {
                      v631[9] = v632[9];
                      v631[10] = v842;
                      uint64_t v874 = v632[12];
                      v631[11] = v632[11];
                      v631[12] = v874;
                      uint64_t v876 = (void *)v632[13];
                      uint64_t v875 = v632[14];
                      v631[13] = v876;
                      v631[14] = v875;
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      id v877 = v876;
                    }
                    v878 = v632 + 15;
                    unint64_t v879 = v632[16];
                    if (v879 >= 0x11)
                    {
                      v631[15] = *v878;
                      v631[16] = v879;
                      swift_bridgeObjectRetain();
                    }
                    else
                    {
                      *(_OWORD *)(v631 + 15) = *(_OWORD *)v878;
                    }
                    *((unsigned char *)v631 + 136) = *((unsigned char *)v632 + 136);
                    goto LABEL_504;
                  }
                  v696 = (void *)*v632;
                  uint64_t v697 = v632[1];
                  *uint64_t v631 = *v632;
                  v631[1] = v697;
                  v631[2] = v632[2];
                  *((_WORD *)v631 + 12) = *((_WORD *)v632 + 12);
                  v631[4] = v632[4];
                  *((unsigned char *)v631 + 40) = *((unsigned char *)v632 + 40);
                  uint64_t v698 = (void *)v632[7];
                  v631[6] = v632[6];
                  v631[7] = v698;
                  *((unsigned char *)v631 + 64) = *((unsigned char *)v632 + 64);
                  uint64_t v699 = v632[10];
                  id v700 = v696;
                  swift_bridgeObjectRetain();
                  id v701 = v698;
                  if (v699 == 1)
                  {
                    long long v702 = *(_OWORD *)(v632 + 11);
                    *(_OWORD *)(v631 + 9) = *(_OWORD *)(v632 + 9);
                    *(_OWORD *)(v631 + 11) = v702;
                    *(_OWORD *)(v631 + 13) = *(_OWORD *)(v632 + 13);
                  }
                  else
                  {
                    v631[9] = v632[9];
                    v631[10] = v699;
                    uint64_t v866 = v632[12];
                    v631[11] = v632[11];
                    v631[12] = v866;
                    uint64_t v868 = (void *)v632[13];
                    uint64_t v867 = v632[14];
                    v631[13] = v868;
                    v631[14] = v867;
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    id v869 = v868;
                  }
                  uint64_t v870 = v632 + 15;
                  unint64_t v871 = v632[16];
                  if (v871 >= 0x11)
                  {
                    v631[15] = *v870;
                    v631[16] = v871;
                    swift_bridgeObjectRetain();
                  }
                  else
                  {
                    *(_OWORD *)(v631 + 15) = *(_OWORD *)v870;
                  }
                  v837 = v632 + 18;
                  v880 = (void *)v632[18];
                  *((unsigned char *)v631 + 136) = *((unsigned char *)v632 + 136);
                  if (v880)
                  {
                    uint64_t v881 = v632[19];
                    uint64_t v882 = v632[20];
                    v631[18] = v880;
                    v631[19] = v881;
                    v631[20] = v882;
                    *((_WORD *)v631 + 84) = *((_WORD *)v632 + 84);
                    v631[22] = v632[22];
                    *((unsigned char *)v631 + 184) = *((unsigned char *)v632 + 184);
                    int v883 = (void *)v632[25];
                    v631[24] = v632[24];
                    v631[25] = v883;
                    *((unsigned char *)v631 + 208) = *((unsigned char *)v632 + 208);
                    uint64_t v884 = v632[28];
                    id v885 = v880;
                    swift_bridgeObjectRetain();
                    id v886 = v883;
                    if (v884 == 1)
                    {
                      long long v887 = *(_OWORD *)(v632 + 29);
                      *(_OWORD *)(v631 + 27) = *(_OWORD *)(v632 + 27);
                      *(_OWORD *)(v631 + 29) = v887;
                      *(_OWORD *)(v631 + 31) = *(_OWORD *)(v632 + 31);
                    }
                    else
                    {
                      v631[27] = v632[27];
                      v631[28] = v884;
                      uint64_t v911 = v632[30];
                      v631[29] = v632[29];
                      v631[30] = v911;
                      long long v913 = (void *)v632[31];
                      uint64_t v912 = v632[32];
                      v631[31] = v913;
                      v631[32] = v912;
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      id v914 = v913;
                    }
                    uint64_t v915 = v632 + 33;
                    unint64_t v916 = v632[34];
                    if (v916 >= 0x11)
                    {
                      v631[33] = *v915;
                      v631[34] = v916;
                      swift_bridgeObjectRetain();
                    }
                    else
                    {
                      *(_OWORD *)(v631 + 33) = *(_OWORD *)v915;
                    }
                    *((unsigned char *)v631 + 280) = *((unsigned char *)v632 + 280);
LABEL_504:
                    *((unsigned char *)v631 + 281) = v695;
                    goto LABEL_586;
                  }
                  uint64_t v836 = v631 + 18;
                  long long v907 = *((_OWORD *)v632 + 16);
                  *((_OWORD *)v631 + 15) = *((_OWORD *)v632 + 15);
                  *((_OWORD *)v631 + 16) = v907;
                  *(_OWORD *)((char *)v631 + 265) = *(_OWORD *)((char *)v632 + 265);
                  long long v908 = *((_OWORD *)v632 + 12);
                  *((_OWORD *)v631 + 11) = *((_OWORD *)v632 + 11);
                  *((_OWORD *)v631 + 12) = v908;
                  long long v909 = *((_OWORD *)v632 + 14);
                  *((_OWORD *)v631 + 13) = *((_OWORD *)v632 + 13);
                  *((_OWORD *)v631 + 14) = v909;
                }
                long long v910 = v837[1];
                *uint64_t v836 = *v837;
                v836[1] = v910;
                goto LABEL_504;
              case 7u:
                uint64_t v703 = v632[1];
                *uint64_t v631 = *v632;
                v631[1] = v703;
                v631[2] = v632[2];
                *((unsigned char *)v631 + 24) = *((unsigned char *)v632 + 24);
                v631[4] = v632[4];
                *((unsigned char *)v631 + 40) = *((unsigned char *)v632 + 40);
                uint64_t v704 = v632[7];
                v631[6] = v632[6];
                v631[7] = v704;
                uint64_t v705 = v632[9];
                v631[8] = v632[8];
                v631[9] = v705;
                uint64_t v706 = v632[11];
                swift_bridgeObjectRetain();
                swift_unknownObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (v706 == 1)
                {
                  long long v707 = *((_OWORD *)v632 + 8);
                  *((_OWORD *)v631 + 7) = *((_OWORD *)v632 + 7);
                  *((_OWORD *)v631 + 8) = v707;
                  *((unsigned char *)v631 + 144) = *((unsigned char *)v632 + 144);
                  long long v708 = *((_OWORD *)v632 + 6);
                  *((_OWORD *)v631 + 5) = *((_OWORD *)v632 + 5);
                  *((_OWORD *)v631 + 6) = v708;
                }
                else
                {
                  v631[10] = v632[10];
                  v631[11] = v706;
                  uint64_t v757 = v632[15];
                  swift_bridgeObjectRetain();
                  if (v757)
                  {
                    uint64_t v758 = v632[16];
                    v631[15] = v757;
                    v631[16] = v758;
                    (**(void (***)(uint64_t, uint64_t, uint64_t))(v757 - 8))((uint64_t)(v631 + 12), (uint64_t)(v632 + 12), v757);
                    v631[17] = v632[17];
                  }
                  else
                  {
                    long long v865 = *((_OWORD *)v632 + 7);
                    *((_OWORD *)v631 + 6) = *((_OWORD *)v632 + 6);
                    *((_OWORD *)v631 + 7) = v865;
                    *((_OWORD *)v631 + 8) = *((_OWORD *)v632 + 8);
                  }
                  *((unsigned char *)v631 + 144) = *((unsigned char *)v632 + 144);
                }
                goto LABEL_586;
              case 8u:
                uint64_t v709 = v632[1];
                *uint64_t v631 = *v632;
                v631[1] = v709;
                uint64_t v710 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
                uint64_t v711 = (void *)((char *)v631 + v710);
                uint64_t v712 = (void *)((char *)v632 + v710);
                uint64_t v713 = v712[1];
                *uint64_t v711 = *v712;
                v711[1] = v713;
                uint64_t v714 = v712[3];
                v711[2] = v712[2];
                v711[3] = v714;
                uint64_t v715 = type metadata accessor for FormatCustomItem.Resolved();
                uint64_t v716 = *(int *)(v715 + 24);
                v1151 = (char *)v711 + v716;
                uint64_t v1161 = v715;
                int v717 = (char *)v712 + v716;
                uint64_t v718 = type metadata accessor for FormatCustomItem.Action();
                uint64_t v1141 = *(void *)(v718 - 8);
                uint64_t v719 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v1141 + 48);
                uint64_t v720 = v718;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (v719(v717, 1, v720))
                {
                  sub_1BFEEF2C0(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
                  memcpy(v1151, v717, *(void *)(*(void *)(v721 - 8) + 64));
                }
                else
                {
                  uint64_t v814 = sub_1C1515FDC();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v814 - 8) + 16))(v1151, v717, v814);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v1141 + 56))(v1151, 0, 1, v720);
                }
                *(void *)((char *)v711 + *(int *)(v1161 + 28)) = *(void *)((char *)v712 + *(int *)(v1161 + 28));
                swift_bridgeObjectRetain();
                swift_storeEnumTagMultiPayload();
                goto LABEL_587;
              case 9u:
                uint64_t v651 = v632[1];
                *uint64_t v631 = *v632;
                v631[1] = v651;
                uint64_t v652 = v632[3];
                v631[2] = v632[2];
                v631[3] = v652;
                uint64_t v653 = v632[7];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (v653)
                {
                  uint64_t v654 = v632[8];
                  v631[7] = v653;
                  v631[8] = v654;
                  (**(void (***)(uint64_t, uint64_t, uint64_t))(v653 - 8))((uint64_t)(v631 + 4), (uint64_t)(v632 + 4), v653);
                }
                else
                {
                  long long v775 = *((_OWORD *)v632 + 3);
                  *((_OWORD *)v631 + 2) = *((_OWORD *)v632 + 2);
                  *((_OWORD *)v631 + 3) = v775;
                  v631[8] = v632[8];
                }
                uint64_t v776 = v631 + 9;
                uint64_t v777 = v632 + 9;
                uint64_t v778 = v632[12];
                if (v778)
                {
                  uint64_t v779 = v632[13];
                  v631[12] = v778;
                  v631[13] = v779;
                  (**(void (***)(_OWORD *, _OWORD *))(v778 - 8))(v776, v777);
                }
                else
                {
                  long long v786 = *(_OWORD *)(v632 + 11);
                  *uint64_t v776 = *v777;
                  *(_OWORD *)(v631 + 11) = v786;
                  v631[13] = v632[13];
                }
                v787 = v631 + 14;
                unint64_t v788 = v632 + 14;
                uint64_t v789 = v632[17];
                if (v789)
                {
                  uint64_t v790 = v632[18];
                  v631[17] = v789;
                  v631[18] = v790;
                  (**(void (***)(_OWORD *, _OWORD *))(v789 - 8))(v787, v788);
                }
                else
                {
                  long long v801 = *((_OWORD *)v632 + 8);
                  _OWORD *v787 = *v788;
                  *((_OWORD *)v631 + 8) = v801;
                  v631[18] = v632[18];
                }
                goto LABEL_586;
              case 0xAu:
                uint64_t v722 = v632[1];
                *uint64_t v631 = *v632;
                v631[1] = v722;
                v723 = (int *)type metadata accessor for FeedEngagementBanner();
                uint64_t v724 = v723[5];
                int v725 = (char *)v631 + v724;
                uint64_t v726 = (char *)v632 + v724;
                uint64_t v727 = sub_1C151959C();
                uint64_t v728 = *(void (**)(char *, char *, uint64_t))(*(void *)(v727 - 8) + 16);
                swift_bridgeObjectRetain();
                v728(v725, v726, v727);
                *(void *)((char *)v631 + v723[6]) = *(void *)((char *)v632 + v723[6]);
                uint64_t v729 = v723[7];
                uint64_t v730 = (char *)v631 + v729;
                v731 = (char *)v632 + v729;
                *(void *)uint64_t v730 = *(void *)v731;
                v730[8] = v731[8];
                uint64_t v732 = v723[8];
                uint64_t v63 = (char *)v631 + v732;
                uint64_t v64 = (char *)v632 + v732;
                unint64_t v65 = *((void *)v64 + 1);
                if (v65 >= 0x11) {
                  goto LABEL_82;
                }
                *(_OWORD *)uint64_t v63 = *(_OWORD *)v64;
                goto LABEL_586;
              case 0xBu:
                *uint64_t v631 = *v632;
                swift_retain();
                goto LABEL_586;
              case 0xCu:
                uint64_t v655 = v632[1];
                *uint64_t v631 = *v632;
                v631[1] = v655;
                uint64_t v656 = v632[3];
                v631[2] = v632[2];
                v631[3] = v656;
                *((unsigned char *)v631 + 32) = *((unsigned char *)v632 + 32);
                swift_bridgeObjectRetain();
                swift_unknownObjectRetain();
                goto LABEL_586;
              case 0xDu:
                uint64_t v733 = v632[1];
                *uint64_t v631 = *v632;
                v631[1] = v733;
                *((unsigned char *)v631 + 16) = *((unsigned char *)v632 + 16);
                uint64_t v734 = v632 + 3;
                unint64_t v735 = v632[4];
                if (v735 >= 0x11)
                {
                  v631[3] = *v734;
                  v631[4] = v735;
                  swift_bridgeObjectRetain();
                }
                else
                {
                  *(_OWORD *)(v631 + 3) = *(_OWORD *)v734;
                }
                uint64_t v759 = v632[6];
                v631[5] = v632[5];
                v631[6] = v759;
                uint64_t v760 = (void *)v632[8];
                v631[7] = v632[7];
                v631[8] = v760;
                *((unsigned char *)v631 + 72) = *((unsigned char *)v632 + 72);
                v631[10] = v632[10];
                uint64_t v761 = v632[14];
                swift_bridgeObjectRetain();
                swift_unknownObjectRetain();
                id v762 = v760;
                swift_bridgeObjectRetain();
                if (v761)
                {
                  uint64_t v763 = v632[15];
                  v631[14] = v761;
                  v631[15] = v763;
                  (**(void (***)(uint64_t, uint64_t, uint64_t))(v761 - 8))((uint64_t)(v631 + 11), (uint64_t)(v632 + 11), v761);
                }
                else
                {
                  long long v815 = *(_OWORD *)(v632 + 13);
                  *(_OWORD *)(v631 + 11) = *(_OWORD *)(v632 + 11);
                  *(_OWORD *)(v631 + 13) = v815;
                  v631[15] = v632[15];
                }
                uint64_t v816 = v631 + 16;
                uint64_t v817 = v632 + 16;
                uint64_t v818 = v632[19];
                if (v818)
                {
                  uint64_t v819 = v632[20];
                  v631[19] = v818;
                  v631[20] = v819;
                  (**(void (***)(_OWORD *, _OWORD *))(v818 - 8))(v816, v817);
                }
                else
                {
                  long long v826 = *((_OWORD *)v632 + 9);
                  *uint64_t v816 = *v817;
                  *((_OWORD *)v631 + 9) = v826;
                  v631[20] = v632[20];
                }
                v827 = v631 + 21;
                uint64_t v828 = v632 + 21;
                uint64_t v829 = v632[24];
                if (v829)
                {
                  uint64_t v830 = v632[25];
                  v631[24] = v829;
                  v631[25] = v830;
                  (**(void (***)(_OWORD *, _OWORD *))(v829 - 8))(v827, v828);
                }
                else
                {
                  long long v831 = *(_OWORD *)(v632 + 23);
                  _OWORD *v827 = *v828;
                  *(_OWORD *)(v631 + 23) = v831;
                  v631[25] = v632[25];
                }
                goto LABEL_586;
              case 0xEu:
                uint64_t v657 = v632[1];
                *uint64_t v631 = *v632;
                v631[1] = v657;
                *((unsigned char *)v631 + 16) = *((unsigned char *)v632 + 16);
                uint64_t v658 = v632 + 3;
                unint64_t v659 = v632[4];
                if (v659 >= 0x11)
                {
                  v631[3] = *v658;
                  v631[4] = v659;
                  swift_bridgeObjectRetain();
                }
                else
                {
                  *(_OWORD *)(v631 + 3) = *(_OWORD *)v658;
                }
                uint64_t v750 = v632[6];
                v631[5] = v632[5];
                v631[6] = v750;
                v631[7] = v632[7];
                swift_bridgeObjectRetain();
                swift_unknownObjectRetain();
                goto LABEL_586;
              case 0xFu:
                uint64_t v736 = v632[1];
                *uint64_t v631 = *v632;
                v631[1] = v736;
                *((unsigned char *)v631 + 16) = *((unsigned char *)v632 + 16);
                uint64_t v737 = v632 + 3;
                unint64_t v738 = v632[4];
                if (v738 >= 0x11)
                {
                  v631[3] = *v737;
                  v631[4] = v738;
                  swift_bridgeObjectRetain();
                }
                else
                {
                  *(_OWORD *)(v631 + 3) = *(_OWORD *)v737;
                }
                break;
              case 0x10u:
                uint64_t v660 = v632[1];
                *uint64_t v631 = *v632;
                v631[1] = v660;
                uint64_t v661 = v632[3];
                v631[2] = v632[2];
                v631[3] = v661;
                uint64_t v662 = v632[5];
                v631[4] = v632[4];
                v631[5] = v662;
                *((_WORD *)v631 + 24) = *((_WORD *)v632 + 24);
                *(_OWORD *)(v631 + 7) = *(_OWORD *)(v632 + 7);
                uint64_t v663 = v632[10];
                v631[9] = v632[9];
                v631[10] = v663;
                uint64_t v664 = v632[12];
                v631[11] = v632[11];
                v631[12] = v664;
                v631[13] = v632[13];
                *((unsigned char *)v631 + 112) = *((unsigned char *)v632 + 112);
                uint64_t v665 = v632[16];
                v631[15] = v632[15];
                v631[16] = v665;
                *((unsigned char *)v631 + 136) = *((unsigned char *)v632 + 136);
                uint64_t v666 = v632[19];
                v631[18] = v632[18];
                v631[19] = v666;
                uint64_t v667 = v632[21];
                v631[20] = v632[20];
                v631[21] = v667;
                *((unsigned char *)v631 + 184) = *((unsigned char *)v632 + 184);
                v631[22] = v632[22];
                uint64_t v668 = v632[25];
                v631[24] = v632[24];
                v631[25] = v668;
                *((unsigned char *)v631 + 224) = *((unsigned char *)v632 + 224);
                uint64_t v669 = v632[27];
                v631[26] = v632[26];
                v631[27] = v669;
                __dstd = v632 + 29;
                unint64_t v670 = v632[30];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (v670 >= 0x11)
                {
                  v631[29] = *__dstd;
                  v631[30] = v670;
                  swift_bridgeObjectRetain();
                }
                else
                {
                  *(_OWORD *)(v631 + 29) = *(_OWORD *)__dstd;
                }
                goto LABEL_586;
              default:
                memcpy(v631, v632, *(void *)(*(void *)(v5 - 8) + 64));
                goto LABEL_587;
            }
            uint64_t v764 = v632[6];
            v631[5] = v632[5];
            v631[6] = v764;
            uint64_t v765 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
            uint64_t v766 = (char *)v631 + v765;
            uint64_t v767 = (void *)((char *)v632 + v765);
            *(void *)((char *)v631 + v765) = *v767;
            uint64_t v768 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
            uint64_t v769 = &v766[v768];
            v770 = (void *)((char *)v767 + v768);
            type metadata accessor for PuzzleStatisticCategory(0);
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
                uint64_t v849 = type metadata accessor for PuzzleStatisticValue(0);
                int v850 = swift_getEnumCaseMultiPayload();
                if (v850 == 5)
                {
                  uint64_t v851 = type metadata accessor for PuzzleStreak();
                  uint64_t v852 = *(void *)(v851 - 8);
                  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v852 + 48))(v770, 1, v851))
                  {
LABEL_497:
                    sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                    memcpy(v769, v770, *(void *)(*(void *)(v1020 - 8) + 64));
                    goto LABEL_540;
                  }
                }
                else
                {
                  if (v850 != 4)
                  {
                    memcpy(v769, v770, *(void *)(*(void *)(v849 - 8) + 64));
                    goto LABEL_541;
                  }
                  uint64_t v851 = type metadata accessor for PuzzleStreak();
                  uint64_t v852 = *(void *)(v851 - 8);
                  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v852 + 48))(v770, 1, v851)) {
                    goto LABEL_497;
                  }
                }
                uint64_t v1064 = sub_1C151555C();
                (*(void (**)(char *, void *, uint64_t))(*(void *)(v1064 - 8) + 16))(v769, v770, v1064);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v852 + 56))(v769, 0, 1, v851);
LABEL_540:
                swift_storeEnumTagMultiPayload();
LABEL_541:
                uint64_t v1065 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
                uint64_t v1066 = *(int *)(v1065 + 20);
                uint64_t v1067 = v769;
                v1068 = &v769[v1066];
                v1069 = (char *)v770 + v1066;
                int v1070 = swift_getEnumCaseMultiPayload();
                if (v1070 == 5)
                {
                  uint64_t v1071 = type metadata accessor for PuzzleStreak();
                  uint64_t v1072 = *(void *)(v1071 - 8);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1072 + 48))(v1069, 1, v1071))
                  {
LABEL_546:
                    sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                    memcpy(v1068, v1069, *(void *)(*(void *)(v1073 - 8) + 64));
LABEL_567:
                    swift_storeEnumTagMultiPayload();
                    goto LABEL_568;
                  }
                }
                else
                {
                  if (v1070 != 4)
                  {
                    memcpy(v1068, v1069, *(void *)(*(void *)(v849 - 8) + 64));
LABEL_568:
                    uint64_t v1091 = *(int *)(v1065 + 24);
                    uint64_t v1092 = (char *)v1067 + v1091;
                    uint64_t v1093 = (char *)v770 + v1091;
                    int v1094 = swift_getEnumCaseMultiPayload();
                    if (v1094 == 5)
                    {
                      uint64_t v1095 = type metadata accessor for PuzzleStreak();
                      uint64_t v1096 = *(void *)(v1095 - 8);
                      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1096 + 48))(v1093, 1, v1095))
                      {
LABEL_573:
                        sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                        memcpy(v1092, v1093, *(void *)(*(void *)(v1097 - 8) + 64));
                        goto LABEL_584;
                      }
                      goto LABEL_583;
                    }
                    if (v1094 == 4)
                    {
                      uint64_t v1095 = type metadata accessor for PuzzleStreak();
                      uint64_t v1096 = *(void *)(v1095 - 8);
                      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1096 + 48))(v1093, 1, v1095)) {
                        goto LABEL_573;
                      }
LABEL_583:
                      uint64_t v1100 = sub_1C151555C();
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v1100 - 8) + 16))(v1092, v1093, v1100);
                      (*(void (**)(char *, void, uint64_t, uint64_t))(v1096 + 56))(v1092, 0, 1, v1095);
                      goto LABEL_584;
                    }
                    memcpy(v1092, v1093, *(void *)(*(void *)(v849 - 8) + 64));
LABEL_585:
                    swift_storeEnumTagMultiPayload();
                    goto LABEL_586;
                  }
                  uint64_t v1071 = type metadata accessor for PuzzleStreak();
                  uint64_t v1072 = *(void *)(v1071 - 8);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1072 + 48))(v1069, 1, v1071)) {
                    goto LABEL_546;
                  }
                }
                uint64_t v1090 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v1090 - 8) + 16))(v1068, v1069, v1090);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v1072 + 56))(v1068, 0, 1, v1071);
                goto LABEL_567;
              case 2u:
                v846 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
                uint64_t v847 = *((void *)v846 - 1);
                if ((*(unsigned int (**)(void *, uint64_t, int *))(v847 + 48))(v770, 1, v846))
                {
                  sub_1BFEEF2C0(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
                  memcpy(v769, v770, *(void *)(*(void *)(v848 - 8) + 64));
                }
                else
                {
                  uint64_t v934 = sub_1C151631C();
                  (*(void (**)(char *, void *, uint64_t))(*(void *)(v934 - 8) + 16))(v769, v770, v934);
                  unint64_t v935 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
                  uint64_t v936 = v935[5];
                  unint64_t v937 = &v769[v936];
                  long long v938 = (void *)((char *)v770 + v936);
                  uint64_t v939 = v938[1];
                  *(void *)unint64_t v937 = *v938;
                  *((void *)v937 + 1) = v939;
                  uint64_t v940 = v935[6];
                  v1144 = v769;
                  uint64_t v941 = &v769[v940];
                  uint64_t v942 = (void *)((char *)v770 + v940);
                  uint64_t v943 = v942[1];
                  *(void *)uint64_t v941 = *v942;
                  *((void *)v941 + 1) = v943;
                  uint64_t v944 = v942 + 2;
                  unint64_t v945 = v942[3];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  if (v945 >> 60 == 15)
                  {
                    *((_OWORD *)v941 + 1) = *(_OWORD *)v944;
                  }
                  else
                  {
                    uint64_t v1036 = *v944;
                    sub_1BFE95820(*v944, v945);
                    *((void *)v941 + 2) = v1036;
                    *((void *)v941 + 3) = v945;
                  }
                  *(void *)((char *)v1144 + v935[7]) = *(void *)((char *)v770 + v935[7]);
                  *(void *)((char *)v1144 + v935[8]) = *(void *)((char *)v770 + v935[8]);
                  *(void *)((char *)v1144 + v846[5]) = *(void *)((char *)v770 + v846[5]);
                  *(void *)((char *)v1144 + v846[6]) = *(void *)((char *)v770 + v846[6]);
                  uint64_t v1037 = v846[7];
                  uint64_t v1038 = (void *)((char *)v1144 + v1037);
                  v1039 = (void *)((char *)v770 + v1037);
                  uint64_t v1040 = v1039[1];
                  *uint64_t v1038 = *v1039;
                  v1038[1] = v1040;
                  uint64_t v1041 = *(void (**)(void *, void, uint64_t, int *))(v847 + 56);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  v1041(v1144, 0, 1, v846);
                }
                goto LABEL_585;
              case 3u:
                uint64_t v853 = v770[1];
                *(void *)uint64_t v769 = *v770;
                *((void *)v769 + 1) = v853;
                v769[16] = *((unsigned char *)v770 + 16);
                uint64_t v854 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
                uint64_t v855 = v854[6];
                v1143 = v769;
                v856 = &v769[v855];
                uint64_t v857 = (char *)v770 + v855;
                uint64_t v858 = type metadata accessor for PuzzleStreak();
                uint64_t v859 = *(void *)(v858 - 8);
                uint64_t v860 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v859 + 48);
                if (v860(v857, 1, v858))
                {
                  sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                  memcpy(v856, v857, *(void *)(*(void *)(v861 - 8) + 64));
                }
                else
                {
                  uint64_t v972 = sub_1C151555C();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v972 - 8) + 16))(v856, v857, v972);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v859 + 56))(v856, 0, 1, v858);
                }
                uint64_t v973 = v854[7];
                uint64_t v974 = (char *)v1143 + v973;
                v975 = (char *)v770 + v973;
                if (v860((char *)v770 + v973, 1, v858))
                {
                  sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                  memcpy(v974, v975, *(void *)(*(void *)(v976 - 8) + 64));
                }
                else
                {
                  uint64_t v1003 = sub_1C151555C();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v1003 - 8) + 16))(v974, v975, v1003);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v859 + 56))(v974, 0, 1, v858);
                }
                uint64_t v1004 = v854[8];
                v1005 = (_OWORD *)((char *)v1143 + v1004);
                id v1006 = (_OWORD *)((char *)v770 + v1004);
                long long v1007 = v1006[1];
                _OWORD *v1005 = *v1006;
                v1005[1] = v1007;
                *(_OWORD *)((char *)v1005 + 25) = *(_OWORD *)((char *)v1006 + 25);
                uint64_t v1008 = v854[9];
                v1009 = (_OWORD *)((char *)v1143 + v1008);
                uint64_t v1010 = (_OWORD *)((char *)v770 + v1008);
                *(_OWORD *)((char *)v1009 + 25) = *(_OWORD *)((char *)v1010 + 25);
                long long v1011 = v1010[1];
                _OWORD *v1009 = *v1010;
                v1009[1] = v1011;
                uint64_t v1012 = v854[10];
                uint64_t v1013 = (_OWORD *)((char *)v1143 + v1012);
                v1014 = (_OWORD *)((char *)v770 + v1012);
                long long v1015 = v1014[1];
                *uint64_t v1013 = *v1014;
                v1013[1] = v1015;
                *(_OWORD *)((char *)v1013 + 25) = *(_OWORD *)((char *)v1014 + 25);
                goto LABEL_585;
              default:
                uint64_t v771 = type metadata accessor for PuzzleStatisticValue(0);
                int v772 = swift_getEnumCaseMultiPayload();
                if (v772 == 5)
                {
                  uint64_t v773 = type metadata accessor for PuzzleStreak();
                  uint64_t v774 = *(void *)(v773 - 8);
                  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v774 + 48))(v770, 1, v773)) {
                    goto LABEL_494;
                  }
                }
                else
                {
                  if (v772 != 4)
                  {
                    memcpy(v769, v770, *(void *)(*(void *)(v771 - 8) + 64));
                    goto LABEL_585;
                  }
                  uint64_t v773 = type metadata accessor for PuzzleStreak();
                  uint64_t v774 = *(void *)(v773 - 8);
                  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v774 + 48))(v770, 1, v773))
                  {
LABEL_494:
                    sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                    memcpy(v769, v770, *(void *)(*(void *)(v1019 - 8) + 64));
                    goto LABEL_584;
                  }
                }
                uint64_t v1063 = sub_1C151555C();
                (*(void (**)(char *, void *, uint64_t))(*(void *)(v1063 - 8) + 16))(v769, v770, v1063);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v774 + 56))(v769, 0, 1, v773);
LABEL_584:
                swift_storeEnumTagMultiPayload();
                goto LABEL_585;
            }
          }
          uint64_t v272 = type metadata accessor for PuzzleStreak();
          uint64_t v273 = *(void *)(v272 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v273 + 48))(v269, 1, v272)) {
            goto LABEL_482;
          }
        }
        uint64_t v1043 = sub_1C151555C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v1043 - 8) + 16))(v268, v269, v1043);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v273 + 56))(v268, 0, 1, v272);
        goto LABEL_518;
    }
  }
  switch(v6)
  {
    case 0:
      uint64_t v11 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v11;
      uint64_t v12 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v12;
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      uint64_t v13 = (void *)(a2 + 40);
      unint64_t v14 = *(void *)(a2 + 48);
      swift_bridgeObjectRetain();
      if (v14 >= 0x11)
      {
        *(void *)(a1 + 40) = *v13;
        *(void *)(a1 + 48) = v14;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 40) = *(_OWORD *)v13;
      }
      goto LABEL_586;
    case 1:
      uint64_t v157 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v157;
      uint64_t v158 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v158;
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      uint64_t v159 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v159;
      uint64_t v160 = *(void *)(a2 + 64);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = v160;
      uint64_t v161 = (void *)(a2 + 72);
      unint64_t v162 = *(void *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v162 >= 0x11)
      {
        *(void *)(a1 + 72) = *v161;
        *(void *)(a1 + 80) = v162;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 72) = *(_OWORD *)v161;
      }
      goto LABEL_586;
    case 2:
      uint64_t v52 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v52;
      uint64_t v53 = (int *)type metadata accessor for FeedBannerAd();
      uint64_t v54 = v53[5];
      uint64_t v55 = a1 + v54;
      uint64_t v56 = a2 + v54;
      uint64_t v57 = sub_1C151DBAC();
      uint64_t v58 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 16);
      swift_bridgeObjectRetain();
      v58(v55, v56, v57);
      *(void *)(a1 + v53[6]) = *(void *)(a2 + v53[6]);
      uint64_t v59 = v53[7];
      uint64_t v60 = a1 + v59;
      uint64_t v61 = a2 + v59;
      *(void *)uint64_t v60 = *(void *)v61;
      *(unsigned char *)(v60 + 8) = *(unsigned char *)(v61 + 8);
      uint64_t v62 = v53[8];
      uint64_t v63 = (char *)(a1 + v62);
      uint64_t v64 = (char *)(a2 + v62);
      unint64_t v65 = *((void *)v64 + 1);
      if (v65 >= 0x11) {
        goto LABEL_82;
      }
      *(_OWORD *)uint64_t v63 = *(_OWORD *)v64;
      goto LABEL_586;
    case 3:
      uint64_t v163 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v163;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      uint64_t v164 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v164;
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      v1136 = (int *)type metadata accessor for FeedHeadline(0);
      uint64_t v165 = v1136[10];
      v166 = (unsigned char *)(a1 + v165);
      uint64_t v167 = a2 + v165;
      unsigned char *v166 = *(unsigned char *)(a2 + v165);
      v166[1] = *(unsigned char *)(a2 + v165 + 1);
      v168 = (int *)type metadata accessor for FeedHeadline.State(0);
      uint64_t v169 = v168[6];
      __dsta = &v166[v169];
      uint64_t v170 = (char *)(v167 + v169);
      uint64_t v171 = (int *)type metadata accessor for SharedItem();
      v1121 = (void *)*((void *)v171 - 1);
      uint64_t v172 = (unsigned int (*)(char *, uint64_t, int *))v1121[6];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      if (v172(v170, 1, v171))
      {
        uint64_t v173 = type metadata accessor for FeedItem.SharedState(0);
        memcpy(__dsta, v170, *(void *)(*(void *)(v173 - 8) + 64));
      }
      else
      {
        uint64_t v370 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v370 - 8) + 16))(__dsta, v170, v370);
        __dsta[v171[5]] = v170[v171[5]];
        uint64_t v371 = v171[6];
        uint64_t v372 = *(void **)&v170[v371];
        *(void *)&__dsta[v371] = v372;
        uint64_t v373 = v171[7];
        v1150 = &v170[v373];
        v1160 = &__dsta[v373];
        uint64_t v374 = sub_1C1515FDC();
        v1118 = *(void (**)(char *, char *, uint64_t))(*(void *)(v374 - 8) + 16);
        id v375 = v372;
        v1118(v1160, v1150, v374);
        ((void (*)(char *, void, uint64_t, int *))v1121[7])(__dsta, 0, 1, v171);
      }
      v166[v168[7]] = *(unsigned char *)(v167 + v168[7]);
      v166[v168[8]] = *(unsigned char *)(v167 + v168[8]);
      v166[v168[9]] = *(unsigned char *)(v167 + v168[9]);
      v166[v168[10]] = *(unsigned char *)(v167 + v168[10]);
      uint64_t v376 = v1136[11];
      id v377 = (void *)(a1 + v376);
      uint64_t v378 = (const void *)(a2 + v376);
      uint64_t v379 = sub_1C151D2DC();
      uint64_t v380 = *(void *)(v379 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v380 + 48))(v378, 1, v379))
      {
        sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
        memcpy(v377, v378, *(void *)(*(void *)(v381 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v380 + 16))(v377, v378, v379);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v380 + 56))(v377, 0, 1, v379);
      }
      uint64_t v399 = v1136[12];
      unint64_t v400 = (void *)(a1 + v399);
      uint64_t v401 = (void *)(a2 + v399);
      unint64_t v402 = v401[1];
      if (v402 >= 0x11)
      {
        *unint64_t v400 = *v401;
        v400[1] = v402;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)unint64_t v400 = *(_OWORD *)v401;
      }
      uint64_t v403 = v1136[13];
      unint64_t v404 = *(void *)(a2 + v403);
      if (v404 >= 2)
      {
        if (v404 == 2)
        {
          *(void *)(a1 + v403) = 2;
        }
        else
        {
          *(void *)(a1 + v403) = v404;
          swift_unknownObjectRetain();
        }
      }
      else
      {
        *(void *)(a1 + v403) = v404;
      }
      uint64_t v480 = v1136[14];
      id v481 = *(void **)(a2 + v480);
      *(void *)(a1 + v480) = v481;
      id v482 = v481;
      goto LABEL_586;
    case 4:
      uint64_t v66 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v66;
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      uint64_t v67 = (void *)(a2 + 24);
      unint64_t v68 = *(void *)(a2 + 32);
      if (v68 >= 0x11)
      {
        *(void *)(a1 + 24) = *v67;
        *(void *)(a1 + 32) = v68;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 24) = *(_OWORD *)v67;
      }
      uint64_t v237 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v237;
      v238 = (int *)type metadata accessor for FeedWebEmbed();
      uint64_t v239 = v238[8];
      uint64_t v240 = a1 + v239;
      uint64_t v241 = a2 + v239;
      uint64_t v242 = sub_1C1515FDC();
      uint64_t v243 = *(void *)(v242 - 8);
      v244 = *(void (**)(uint64_t, uint64_t, uint64_t))(v243 + 16);
      swift_bridgeObjectRetain();
      v244(v240, v241, v242);
      v1158 = v238;
      uint64_t v245 = v238[9];
      v246 = (void *)(a1 + v245);
      v247 = (const void *)(a2 + v245);
      v1148 = (void *)v242;
      __dstc = (void (*)(char *, char *, void *))v244;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v243 + 48))(a2 + v245, 1, v242))
      {
        sub_1BFEEF2C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        memcpy(v246, v247, *(void *)(*(void *)(v248 - 8) + 64));
      }
      else
      {
        v244((uint64_t)v246, (uint64_t)v247, v242);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v243 + 56))(v246, 0, 1, v242);
      }
      *(void *)(a1 + v238[10]) = *(void *)(a2 + v238[10]);
      *(void *)(a1 + v238[11]) = *(void *)(a2 + v238[11]);
      uint64_t v316 = v238[12];
      uint64_t v317 = (void *)(a1 + v316);
      v318 = (void *)(a2 + v316);
      uint64_t v319 = type metadata accessor for FeedHeadline(0);
      uint64_t v320 = *(void *)(v319 - 8);
      uint64_t v321 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v320 + 48);
      swift_retain();
      swift_retain();
      if (v321(v318, 1, v319))
      {
        sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
        memcpy(v317, v318, *(void *)(*(void *)(v322 - 8) + 64));
      }
      else
      {
        uint64_t v1116 = v320;
        v1123 = (int *)v319;
        uint64_t v344 = v318[1];
        *uint64_t v317 = *v318;
        v317[1] = v344;
        v317[2] = v318[2];
        *((unsigned char *)v317 + 24) = *((unsigned char *)v318 + 24);
        uint64_t v345 = v318[5];
        v317[4] = v318[4];
        v317[5] = v345;
        v317[6] = v318[6];
        *((unsigned char *)v317 + 56) = *((unsigned char *)v318 + 56);
        uint64_t v346 = *(int *)(v319 + 40);
        uint64_t v347 = (char *)v317 + v346;
        v348 = (char *)v318 + v346;
        *uint64_t v347 = *((unsigned char *)v318 + v346);
        v347[1] = *((unsigned char *)v318 + v346 + 1);
        uint64_t v349 = type metadata accessor for FeedHeadline.State(0);
        uint64_t v350 = *(int *)(v349 + 24);
        v1109 = &v347[v350];
        v1112 = (int *)v349;
        uint64_t v351 = &v348[v350];
        v352 = (int *)type metadata accessor for SharedItem();
        uint64_t v1104 = *((void *)v352 - 1);
        v353 = *(unsigned int (**)(char *, uint64_t, int *))(v1104 + 48);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if (v353(v351, 1, v352))
        {
          uint64_t v354 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(v1109, v351, *(void *)(*(void *)(v354 - 8) + 64));
        }
        else
        {
          uint64_t v542 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v542 - 8) + 16))(v1109, v351, v542);
          v1109[v352[5]] = v351[v352[5]];
          uint64_t v543 = v352[6];
          uint64_t v544 = *(void **)&v351[v543];
          *(void *)&v1109[v543] = v544;
          uint64_t v545 = v352[7];
          v546 = &v1109[v545];
          uint64_t v547 = &v351[v545];
          id v548 = v544;
          __dstc(v546, v547, v1148);
          (*(void (**)(char *, void, uint64_t, int *))(v1104 + 56))(v1109, 0, 1, v352);
        }
        v347[v1112[7]] = v348[v1112[7]];
        v347[v1112[8]] = v348[v1112[8]];
        v347[v1112[9]] = v348[v1112[9]];
        v347[v1112[10]] = v348[v1112[10]];
        uint64_t v549 = *(int *)(v319 + 44);
        id v550 = (char *)v317 + v549;
        uint64_t v551 = (char *)v318 + v549;
        uint64_t v552 = sub_1C151D2DC();
        uint64_t v553 = *(void *)(v552 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v553 + 48))(v551, 1, v552))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
          memcpy(v550, v551, *(void *)(*(void *)(v554 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v553 + 16))(v550, v551, v552);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v553 + 56))(v550, 0, 1, v552);
        }
        uint64_t v561 = v1123[12];
        unint64_t v562 = (void *)((char *)v317 + v561);
        uint64_t v563 = (void *)((char *)v318 + v561);
        unint64_t v564 = v563[1];
        if (v564 >= 0x11)
        {
          *unint64_t v562 = *v563;
          v562[1] = v564;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)unint64_t v562 = *(_OWORD *)v563;
        }
        uint64_t v565 = v1123[13];
        unint64_t v566 = *(void *)((char *)v318 + v565);
        if (v566 >= 2)
        {
          if (v566 == 2)
          {
            *(void *)((char *)v317 + v565) = 2;
          }
          else
          {
            *(void *)((char *)v317 + v565) = v566;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(void *)((char *)v317 + v565) = v566;
        }
        uint64_t v917 = v1123[14];
        uint64_t v918 = *(void **)((char *)v318 + v917);
        *(void *)((char *)v317 + v917) = v918;
        id v919 = *(void (**)(void *, void, uint64_t, int *))(v1116 + 56);
        id v920 = v918;
        v919(v317, 0, 1, v1123);
      }
      uint64_t v921 = v1158[13];
      v922 = (void *)(a1 + v921);
      uint64_t v923 = (uint64_t *)(a2 + v921);
      uint64_t v924 = type metadata accessor for WebEmbedDataVisualization();
      uint64_t v925 = *(void *)(v924 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v925 + 48))(v923, 1, v924))
      {
        sub_1BFEEF2C0(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
        memcpy(v922, v923, *(void *)(*(void *)(v926 - 8) + 64));
      }
      else
      {
        int v927 = swift_getEnumCaseMultiPayload();
        uint64_t v928 = *v923;
        if (v927 == 1)
        {
          uint64_t v929 = v923[1];
          void *v922 = v928;
          v922[1] = v929;
          uint64_t v930 = type metadata accessor for GenericDataVisualization();
          uint64_t v931 = *(int *)(v930 + 20);
          uint64_t v932 = (char *)v922 + v931;
          v933 = (char *)v923 + v931;
          swift_bridgeObjectRetain();
          __dstc(v932, v933, v1148);
          *(void *)((char *)v922 + *(int *)(v930 + 24)) = *(uint64_t *)((char *)v923 + *(int *)(v930 + 24));
          swift_bridgeObjectRetain();
        }
        else
        {
          void *v922 = v928;
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v925 + 56))(v922, 0, 1, v924);
      }
      *(unsigned char *)(a1 + v1158[14]) = *(unsigned char *)(a2 + v1158[14]);
      goto LABEL_586;
    case 5:
      uint64_t v174 = *(void **)a2;
      uint64_t v175 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v175;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      v176 = *(void **)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v176;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      uint64_t v177 = *(void *)(a2 + 80);
      id v178 = v174;
      swift_bridgeObjectRetain();
      id v179 = v176;
      if (v177 == 1)
      {
        long long v180 = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
        *(_OWORD *)(a1 + 88) = v180;
        *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      }
      else
      {
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(void *)(a1 + 80) = v177;
        uint64_t v274 = *(void *)(a2 + 96);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        *(void *)(a1 + 96) = v274;
        uint64_t v276 = *(void **)(a2 + 104);
        uint64_t v275 = *(void *)(a2 + 112);
        *(void *)(a1 + 104) = v276;
        *(void *)(a1 + 112) = v275;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v277 = v276;
      }
      id v278 = (void *)(a2 + 120);
      unint64_t v279 = *(void *)(a2 + 128);
      if (v279 >= 0x11)
      {
        *(void *)(a1 + 120) = *v278;
        *(void *)(a1 + 128) = v279;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 120) = *(_OWORD *)v278;
      }
      *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
      goto LABEL_586;
    case 6:
      int v181 = *(unsigned __int8 *)(a2 + 281);
      if (v181 == 2)
      {
        uint64_t v431 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v431;
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
        uint64_t v432 = *(void *)(a2 + 56);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = v432;
        uint64_t v433 = *(void *)(a2 + 72);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = v433;
        uint64_t v434 = *(void *)(a2 + 88);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v434 != 1)
        {
          *(void *)(a1 + 80) = *(void *)(a2 + 80);
          *(void *)(a1 + 88) = v434;
          uint64_t v505 = *(void *)(a2 + 120);
          swift_bridgeObjectRetain();
          if (v505)
          {
            uint64_t v506 = *(void *)(a2 + 128);
            *(void *)(a1 + 120) = v505;
            *(void *)(a1 + 128) = v506;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v505 - 8))(a1 + 96, a2 + 96, v505);
            *(void *)(a1 + 136) = *(void *)(a2 + 136);
          }
          else
          {
            long long v1022 = *(_OWORD *)(a2 + 112);
            *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
            *(_OWORD *)(a1 + 112) = v1022;
            *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
          }
          *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
          goto LABEL_502;
        }
        uint64_t v435 = (_OWORD *)(a1 + 80);
        uint64_t v436 = (_OWORD *)(a2 + 80);
        long long v437 = *(_OWORD *)(a2 + 128);
        *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
        *(_OWORD *)(a1 + 128) = v437;
        *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
LABEL_280:
        long long v574 = v436[1];
        *uint64_t v435 = *v436;
        v435[1] = v574;
        goto LABEL_502;
      }
      if (v181 != 1)
      {
        v438 = *(void **)a2;
        uint64_t v439 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v439;
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
        v440 = *(void **)(a2 + 56);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = v440;
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        uint64_t v441 = *(void *)(a2 + 80);
        id v442 = v438;
        swift_bridgeObjectRetain();
        id v443 = v440;
        if (v441 == 1)
        {
          long long v444 = *(_OWORD *)(a2 + 88);
          *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
          *(_OWORD *)(a1 + 88) = v444;
          *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
        }
        else
        {
          *(void *)(a1 + 72) = *(void *)(a2 + 72);
          *(void *)(a1 + 80) = v441;
          uint64_t v507 = *(void *)(a2 + 96);
          *(void *)(a1 + 88) = *(void *)(a2 + 88);
          *(void *)(a1 + 96) = v507;
          uint64_t v509 = *(void **)(a2 + 104);
          uint64_t v508 = *(void *)(a2 + 112);
          *(void *)(a1 + 104) = v509;
          *(void *)(a1 + 112) = v508;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v510 = v509;
        }
        v511 = (void *)(a2 + 120);
        unint64_t v512 = *(void *)(a2 + 128);
        if (v512 >= 0x11)
        {
          *(void *)(a1 + 120) = *v511;
          *(void *)(a1 + 128) = v512;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 120) = *(_OWORD *)v511;
        }
        *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
        goto LABEL_502;
      }
      id v182 = *(void **)a2;
      uint64_t v183 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v183;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      uint64_t v184 = *(void **)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v184;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      uint64_t v185 = *(void *)(a2 + 80);
      id v186 = v182;
      swift_bridgeObjectRetain();
      id v187 = v184;
      if (v185 == 1)
      {
        long long v188 = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
        *(_OWORD *)(a1 + 88) = v188;
        *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      }
      else
      {
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(void *)(a1 + 80) = v185;
        uint64_t v491 = *(void *)(a2 + 96);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        *(void *)(a1 + 96) = v491;
        uint64_t v493 = *(void **)(a2 + 104);
        uint64_t v492 = *(void *)(a2 + 112);
        *(void *)(a1 + 104) = v493;
        *(void *)(a1 + 112) = v492;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v494 = v493;
      }
      v495 = (void *)(a2 + 120);
      unint64_t v496 = *(void *)(a2 + 128);
      if (v496 >= 0x11)
      {
        *(void *)(a1 + 120) = *v495;
        *(void *)(a1 + 128) = v496;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 120) = *(_OWORD *)v495;
      }
      uint64_t v436 = (_OWORD *)(a2 + 144);
      id v521 = *(void **)(a2 + 144);
      *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
      if (!v521)
      {
        uint64_t v435 = (_OWORD *)(a1 + 144);
        long long v571 = *(_OWORD *)(a2 + 256);
        *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
        *(_OWORD *)(a1 + 256) = v571;
        *(_OWORD *)(a1 + 265) = *(_OWORD *)(a2 + 265);
        long long v572 = *(_OWORD *)(a2 + 192);
        *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
        *(_OWORD *)(a1 + 192) = v572;
        long long v573 = *(_OWORD *)(a2 + 224);
        *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
        *(_OWORD *)(a1 + 224) = v573;
        goto LABEL_280;
      }
      uint64_t v522 = *(void *)(a2 + 152);
      uint64_t v523 = *(void *)(a2 + 160);
      *(void *)(a1 + 144) = v521;
      *(void *)(a1 + 152) = v522;
      *(void *)(a1 + 160) = v523;
      *(_WORD *)(a1 + 168) = *(_WORD *)(a2 + 168);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
      uint64_t v524 = *(void **)(a2 + 200);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(void *)(a1 + 200) = v524;
      *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
      uint64_t v525 = *(void *)(a2 + 224);
      id v526 = v521;
      swift_bridgeObjectRetain();
      id v527 = v524;
      if (v525 == 1)
      {
        long long v528 = *(_OWORD *)(a2 + 232);
        *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
        *(_OWORD *)(a1 + 232) = v528;
        *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
      }
      else
      {
        *(void *)(a1 + 216) = *(void *)(a2 + 216);
        *(void *)(a1 + 224) = v525;
        uint64_t v581 = *(void *)(a2 + 240);
        *(void *)(a1 + 232) = *(void *)(a2 + 232);
        *(void *)(a1 + 240) = v581;
        uint64_t v583 = *(void **)(a2 + 248);
        uint64_t v582 = *(void *)(a2 + 256);
        *(void *)(a1 + 248) = v583;
        *(void *)(a1 + 256) = v582;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v584 = v583;
      }
      v585 = (void *)(a2 + 264);
      unint64_t v586 = *(void *)(a2 + 272);
      if (v586 >= 0x11)
      {
        *(void *)(a1 + 264) = *v585;
        *(void *)(a1 + 272) = v586;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 264) = *(_OWORD *)v585;
      }
      *(unsigned char *)(a1 + 280) = *(unsigned char *)(a2 + 280);
LABEL_502:
      *(unsigned char *)(a1 + 281) = v181;
LABEL_586:
      swift_storeEnumTagMultiPayload();
LABEL_587:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 7:
      uint64_t v189 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v189;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      uint64_t v190 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v190;
      uint64_t v191 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v191;
      uint64_t v192 = *(void *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v192 == 1)
      {
        long long v193 = *(_OWORD *)(a2 + 128);
        *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
        *(_OWORD *)(a1 + 128) = v193;
        *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
        long long v194 = *(_OWORD *)(a2 + 96);
        *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
        *(_OWORD *)(a1 + 96) = v194;
      }
      else
      {
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(void *)(a1 + 88) = v192;
        uint64_t v280 = *(void *)(a2 + 120);
        swift_bridgeObjectRetain();
        if (v280)
        {
          uint64_t v281 = *(void *)(a2 + 128);
          *(void *)(a1 + 120) = v280;
          *(void *)(a1 + 128) = v281;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v280 - 8))(a1 + 96, a2 + 96, v280);
          *(void *)(a1 + 136) = *(void *)(a2 + 136);
        }
        else
        {
          long long v484 = *(_OWORD *)(a2 + 112);
          *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
          *(_OWORD *)(a1 + 112) = v484;
          *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
        }
        *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
      }
      goto LABEL_586;
    case 8:
      uint64_t v195 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v195;
      uint64_t v196 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
      unint64_t v197 = (void *)(a1 + v196);
      uint64_t v198 = a2 + v196;
      uint64_t v199 = *(void *)(a2 + v196 + 8);
      void *v197 = *(void *)(a2 + v196);
      v197[1] = v199;
      uint64_t v200 = *(void *)(a2 + v196 + 24);
      v197[2] = *(void *)(a2 + v196 + 16);
      v197[3] = v200;
      uint64_t v201 = type metadata accessor for FormatCustomItem.Resolved();
      uint64_t v202 = *(int *)(v201 + 24);
      v1146 = (char *)v197 + v202;
      uint64_t v1156 = v201;
      unint64_t v203 = (const void *)(v198 + v202);
      uint64_t v204 = type metadata accessor for FormatCustomItem.Action();
      uint64_t v1137 = *(void *)(v204 - 8);
      id v205 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v1137 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v205(v203, 1, v204))
      {
        sub_1BFEEF2C0(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
        memcpy(v1146, v203, *(void *)(*(void *)(v206 - 8) + 64));
      }
      else
      {
        uint64_t v382 = sub_1C1515FDC();
        (*(void (**)(char *, const void *, uint64_t))(*(void *)(v382 - 8) + 16))(v1146, v203, v382);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v1137 + 56))(v1146, 0, 1, v204);
      }
      *(void *)((char *)v197 + *(int *)(v1156 + 28)) = *(void *)(v198 + *(int *)(v1156 + 28));
      swift_bridgeObjectRetain();
      goto LABEL_586;
    case 9:
      uint64_t v69 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v69;
      uint64_t v70 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v70;
      uint64_t v71 = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v71)
      {
        uint64_t v72 = *(void *)(a2 + 64);
        *(void *)(a1 + 56) = v71;
        *(void *)(a1 + 64) = v72;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v71 - 8))(a1 + 32, a2 + 32, v71);
      }
      else
      {
        long long v304 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 48) = v304;
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
      }
      long long v305 = (_OWORD *)(a1 + 72);
      v306 = (_OWORD *)(a2 + 72);
      uint64_t v307 = *(void *)(a2 + 96);
      if (v307)
      {
        uint64_t v308 = *(void *)(a2 + 104);
        *(void *)(a1 + 96) = v307;
        *(void *)(a1 + 104) = v308;
        (**(void (***)(_OWORD *, _OWORD *))(v307 - 8))(v305, v306);
      }
      else
      {
        long long v328 = *(_OWORD *)(a2 + 88);
        *long long v305 = *v306;
        *(_OWORD *)(a1 + 88) = v328;
        *(void *)(a1 + 104) = *(void *)(a2 + 104);
      }
      long long v329 = (_OWORD *)(a1 + 112);
      v330 = (_OWORD *)(a2 + 112);
      uint64_t v331 = *(void *)(a2 + 136);
      if (v331)
      {
        uint64_t v332 = *(void *)(a2 + 144);
        *(void *)(a1 + 136) = v331;
        *(void *)(a1 + 144) = v332;
        (**(void (***)(_OWORD *, _OWORD *))(v331 - 8))(v329, v330);
      }
      else
      {
        long long v356 = *(_OWORD *)(a2 + 128);
        *long long v329 = *v330;
        *(_OWORD *)(a1 + 128) = v356;
        *(void *)(a1 + 144) = *(void *)(a2 + 144);
      }
      goto LABEL_586;
    case 10:
      uint64_t v207 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v207;
      CGRect v208 = (int *)type metadata accessor for FeedEngagementBanner();
      uint64_t v209 = v208[5];
      uint64_t v210 = a1 + v209;
      uint64_t v211 = a2 + v209;
      uint64_t v212 = sub_1C151959C();
      unint64_t v213 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v212 - 8) + 16);
      swift_bridgeObjectRetain();
      v213(v210, v211, v212);
      *(void *)(a1 + v208[6]) = *(void *)(a2 + v208[6]);
      uint64_t v214 = v208[7];
      uint64_t v215 = a1 + v214;
      uint64_t v216 = a2 + v214;
      *(void *)uint64_t v215 = *(void *)v216;
      *(unsigned char *)(v215 + 8) = *(unsigned char *)(v216 + 8);
      uint64_t v217 = v208[8];
      uint64_t v63 = (char *)(a1 + v217);
      uint64_t v64 = (char *)(a2 + v217);
      unint64_t v65 = *((void *)v64 + 1);
      if (v65 >= 0x11)
      {
LABEL_82:
        *(void *)uint64_t v63 = *(void *)v64;
        *((void *)v63 + 1) = v65;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)uint64_t v63 = *(_OWORD *)v64;
      }
      goto LABEL_586;
    case 11:
      *(void *)a1 = *(void *)a2;
      swift_retain();
      goto LABEL_586;
    case 12:
      uint64_t v73 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v73;
      uint64_t v74 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v74;
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      goto LABEL_586;
    case 13:
      uint64_t v218 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v218;
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      v219 = (void *)(a2 + 24);
      unint64_t v220 = *(void *)(a2 + 32);
      if (v220 >= 0x11)
      {
        *(void *)(a1 + 24) = *v219;
        *(void *)(a1 + 32) = v220;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 24) = *(_OWORD *)v219;
      }
      uint64_t v282 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v282;
      uint64_t v283 = *(void **)(a2 + 64);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = v283;
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      uint64_t v284 = *(void *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      id v285 = v283;
      swift_bridgeObjectRetain();
      if (v284)
      {
        uint64_t v286 = *(void *)(a2 + 120);
        *(void *)(a1 + 112) = v284;
        *(void *)(a1 + 120) = v286;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v284 - 8))(a1 + 88, a2 + 88, v284);
      }
      else
      {
        long long v388 = *(_OWORD *)(a2 + 104);
        *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 104) = v388;
        *(void *)(a1 + 120) = *(void *)(a2 + 120);
      }
      uint64_t v389 = (_OWORD *)(a1 + 128);
      long long v390 = (_OWORD *)(a2 + 128);
      uint64_t v391 = *(void *)(a2 + 152);
      if (v391)
      {
        uint64_t v392 = *(void *)(a2 + 160);
        *(void *)(a1 + 152) = v391;
        *(void *)(a1 + 160) = v392;
        (**(void (***)(_OWORD *, _OWORD *))(v391 - 8))(v389, v390);
      }
      else
      {
        long long v410 = *(_OWORD *)(a2 + 144);
        *uint64_t v389 = *v390;
        *(_OWORD *)(a1 + 144) = v410;
        *(void *)(a1 + 160) = *(void *)(a2 + 160);
      }
      uint64_t v411 = (_OWORD *)(a1 + 168);
      long long v412 = (_OWORD *)(a2 + 168);
      uint64_t v413 = *(void *)(a2 + 192);
      if (v413)
      {
        uint64_t v414 = *(void *)(a2 + 200);
        *(void *)(a1 + 192) = v413;
        *(void *)(a1 + 200) = v414;
        (**(void (***)(_OWORD *, _OWORD *))(v413 - 8))(v411, v412);
      }
      else
      {
        long long v416 = *(_OWORD *)(a2 + 184);
        *uint64_t v411 = *v412;
        *(_OWORD *)(a1 + 184) = v416;
        *(void *)(a1 + 200) = *(void *)(a2 + 200);
      }
      goto LABEL_586;
    case 14:
      uint64_t v75 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v75;
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      uint64_t v76 = (void *)(a2 + 24);
      unint64_t v77 = *(void *)(a2 + 32);
      if (v77 >= 0x11)
      {
        *(void *)(a1 + 24) = *v76;
        *(void *)(a1 + 32) = v77;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 24) = *(_OWORD *)v76;
      }
      uint64_t v249 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v249;
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      goto LABEL_586;
    case 15:
      uint64_t v221 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v221;
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      v222 = (void *)(a2 + 24);
      unint64_t v223 = *(void *)(a2 + 32);
      if (v223 >= 0x11)
      {
        *(void *)(a1 + 24) = *v222;
        *(void *)(a1 + 32) = v223;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 24) = *(_OWORD *)v222;
      }
      break;
    case 16:
      uint64_t v78 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v78;
      uint64_t v79 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v79;
      uint64_t v80 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v80;
      *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      uint64_t v81 = *(void *)(a2 + 80);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = v81;
      uint64_t v82 = *(void *)(a2 + 96);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = v82;
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
      uint64_t v83 = *(void *)(a2 + 128);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = v83;
      *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
      uint64_t v84 = *(void *)(a2 + 152);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = v84;
      uint64_t v85 = *(void *)(a2 + 168);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = v85;
      *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      uint64_t v86 = *(void *)(a2 + 200);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(void *)(a1 + 200) = v86;
      *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
      uint64_t v87 = *(void *)(a2 + 216);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = v87;
      v1133 = (void *)(a2 + 232);
      unint64_t v88 = *(void *)(a2 + 240);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v88 >= 0x11)
      {
        *(void *)(a1 + 232) = *v1133;
        *(void *)(a1 + 240) = v88;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 232) = *(_OWORD *)v1133;
      }
      goto LABEL_586;
    default:
      memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v5 - 8) + 64));
      goto LABEL_587;
  }
  uint64_t v287 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v287;
  uint64_t v288 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
  uint64_t v289 = a1 + v288;
  uint64_t v290 = a2 + v288;
  *(void *)(a1 + v288) = *(void *)(a2 + v288);
  uint64_t v291 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
  uint64_t v292 = (void *)(v289 + v291);
  v293 = (void *)(v290 + v291);
  type metadata accessor for PuzzleStatisticCategory(0);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v464 = type metadata accessor for PuzzleStatisticValue(0);
      int v465 = swift_getEnumCaseMultiPayload();
      if (v465 == 5)
      {
        uint64_t v466 = type metadata accessor for PuzzleStreak();
        uint64_t v467 = *(void *)(v466 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v467 + 48))(v293, 1, v466))
        {
LABEL_491:
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v292, v293, *(void *)(*(void *)(v1018 - 8) + 64));
          goto LABEL_530;
        }
      }
      else
      {
        if (v465 != 4)
        {
          memcpy(v292, v293, *(void *)(*(void *)(v464 - 8) + 64));
          goto LABEL_531;
        }
        uint64_t v466 = type metadata accessor for PuzzleStreak();
        uint64_t v467 = *(void *)(v466 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v467 + 48))(v293, 1, v466)) {
          goto LABEL_491;
        }
      }
      uint64_t v1054 = sub_1C151555C();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v1054 - 8) + 16))(v292, v293, v1054);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v467 + 56))(v292, 0, 1, v466);
LABEL_530:
      swift_storeEnumTagMultiPayload();
LABEL_531:
      uint64_t v1055 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
      uint64_t v1056 = *(int *)(v1055 + 20);
      uint64_t v1057 = (char *)v292 + v1056;
      uint64_t v1058 = (char *)v293 + v1056;
      int v1059 = swift_getEnumCaseMultiPayload();
      if (v1059 == 5)
      {
        uint64_t v1060 = type metadata accessor for PuzzleStreak();
        uint64_t v1061 = *(void *)(v1060 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1061 + 48))(v1058, 1, v1060))
        {
LABEL_536:
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v1057, v1058, *(void *)(*(void *)(v1062 - 8) + 64));
LABEL_558:
          swift_storeEnumTagMultiPayload();
          goto LABEL_559;
        }
      }
      else
      {
        if (v1059 != 4)
        {
          memcpy(v1057, v1058, *(void *)(*(void *)(v464 - 8) + 64));
LABEL_559:
          uint64_t v1083 = *(int *)(v1055 + 24);
          uint64_t v1084 = (char *)v292 + v1083;
          uint64_t v1085 = (char *)v293 + v1083;
          int v1086 = swift_getEnumCaseMultiPayload();
          if (v1086 == 5)
          {
            uint64_t v1087 = type metadata accessor for PuzzleStreak();
            uint64_t v1088 = *(void *)(v1087 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1088 + 48))(v1085, 1, v1087))
            {
LABEL_564:
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v1084, v1085, *(void *)(*(void *)(v1089 - 8) + 64));
              goto LABEL_580;
            }
            goto LABEL_579;
          }
          if (v1086 == 4)
          {
            uint64_t v1087 = type metadata accessor for PuzzleStreak();
            uint64_t v1088 = *(void *)(v1087 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1088 + 48))(v1085, 1, v1087)) {
              goto LABEL_564;
            }
LABEL_579:
            uint64_t v1099 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v1099 - 8) + 16))(v1084, v1085, v1099);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v1088 + 56))(v1084, 0, 1, v1087);
            goto LABEL_580;
          }
          memcpy(v1084, v1085, *(void *)(*(void *)(v464 - 8) + 64));
LABEL_581:
          swift_storeEnumTagMultiPayload();
          goto LABEL_586;
        }
        uint64_t v1060 = type metadata accessor for PuzzleStreak();
        uint64_t v1061 = *(void *)(v1060 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1061 + 48))(v1058, 1, v1060)) {
          goto LABEL_536;
        }
      }
      uint64_t v1082 = sub_1C151555C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v1082 - 8) + 16))(v1057, v1058, v1082);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v1061 + 56))(v1057, 0, 1, v1060);
      goto LABEL_558;
    case 2u:
      uint64_t v448 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
      uint64_t v449 = *((void *)v448 - 1);
      if ((*(unsigned int (**)(void *, uint64_t, int *))(v449 + 48))(v293, 1, v448))
      {
        sub_1BFEEF2C0(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
        memcpy(v292, v293, *(void *)(*(void *)(v450 - 8) + 64));
      }
      else
      {
        uint64_t v599 = sub_1C151631C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v599 - 8) + 16))(v292, v293, v599);
        unint64_t v600 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
        uint64_t v601 = v600[5];
        v602 = (void *)((char *)v292 + v601);
        uint64_t v603 = (void *)((char *)v293 + v601);
        uint64_t v604 = v603[1];
        void *v602 = *v603;
        v602[1] = v604;
        uint64_t v605 = v600[6];
        uint64_t v606 = (char *)v292 + v605;
        uint64_t v607 = (void *)((char *)v293 + v605);
        uint64_t v608 = v607[1];
        *(void *)uint64_t v606 = *v607;
        *((void *)v606 + 1) = v608;
        v609 = v607 + 2;
        unint64_t v610 = v607[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v610 >> 60 == 15)
        {
          *((_OWORD *)v606 + 1) = *(_OWORD *)v609;
        }
        else
        {
          uint64_t v1030 = *v609;
          sub_1BFE95820(*v609, v610);
          *((void *)v606 + 2) = v1030;
          *((void *)v606 + 3) = v610;
        }
        *(void *)((char *)v292 + v600[7]) = *(void *)((char *)v293 + v600[7]);
        *(void *)((char *)v292 + v600[8]) = *(void *)((char *)v293 + v600[8]);
        *(void *)((char *)v292 + v448[5]) = *(void *)((char *)v293 + v448[5]);
        *(void *)((char *)v292 + v448[6]) = *(void *)((char *)v293 + v448[6]);
        uint64_t v1031 = v448[7];
        v1032 = (void *)((char *)v292 + v1031);
        v1033 = (void *)((char *)v293 + v1031);
        uint64_t v1034 = v1033[1];
        void *v1032 = *v1033;
        v1032[1] = v1034;
        uint64_t v1035 = *(void (**)(void *, void, uint64_t, int *))(v449 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v1035(v292, 0, 1, v448);
      }
      goto LABEL_581;
    case 3u:
      uint64_t v468 = v293[1];
      *uint64_t v292 = *v293;
      v292[1] = v468;
      *((unsigned char *)v292 + 16) = *((unsigned char *)v293 + 16);
      uint64_t v469 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
      uint64_t v470 = v469[6];
      v471 = (char *)v292 + v470;
      uint64_t v472 = (char *)v293 + v470;
      uint64_t v473 = type metadata accessor for PuzzleStreak();
      uint64_t v474 = *(void *)(v473 - 8);
      uint64_t v475 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v474 + 48);
      if (v475(v472, 1, v473))
      {
        sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
        memcpy(v471, v472, *(void *)(*(void *)(v476 - 8) + 64));
      }
      else
      {
        uint64_t v967 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v967 - 8) + 16))(v471, v472, v967);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v474 + 56))(v471, 0, 1, v473);
      }
      uint64_t v968 = v469[7];
      v969 = (char *)v292 + v968;
      uint64_t v970 = (char *)v293 + v968;
      if (v475((char *)v293 + v968, 1, v473))
      {
        sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
        memcpy(v969, v970, *(void *)(*(void *)(v971 - 8) + 64));
      }
      else
      {
        uint64_t v990 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v990 - 8) + 16))(v969, v970, v990);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v474 + 56))(v969, 0, 1, v473);
      }
      uint64_t v991 = v469[8];
      v992 = (_OWORD *)((char *)v292 + v991);
      uint64_t v993 = (_OWORD *)((char *)v293 + v991);
      long long v994 = v993[1];
      _OWORD *v992 = *v993;
      v992[1] = v994;
      *(_OWORD *)((char *)v992 + 25) = *(_OWORD *)((char *)v993 + 25);
      uint64_t v995 = v469[9];
      uint64_t v996 = (_OWORD *)((char *)v292 + v995);
      id v997 = (_OWORD *)((char *)v293 + v995);
      *(_OWORD *)((char *)v996 + 25) = *(_OWORD *)((char *)v997 + 25);
      long long v998 = v997[1];
      *uint64_t v996 = *v997;
      v996[1] = v998;
      uint64_t v999 = v469[10];
      uint64_t v1000 = (_OWORD *)((char *)v292 + v999);
      uint64_t v1001 = (_OWORD *)((char *)v293 + v999);
      long long v1002 = v1001[1];
      *uint64_t v1000 = *v1001;
      v1000[1] = v1002;
      *(_OWORD *)((char *)v1000 + 25) = *(_OWORD *)((char *)v1001 + 25);
      goto LABEL_581;
    default:
      uint64_t v294 = type metadata accessor for PuzzleStatisticValue(0);
      int v295 = swift_getEnumCaseMultiPayload();
      if (v295 == 5)
      {
        uint64_t v296 = type metadata accessor for PuzzleStreak();
        uint64_t v297 = *(void *)(v296 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v297 + 48))(v293, 1, v296)) {
          goto LABEL_123;
        }
      }
      else
      {
        if (v295 != 4)
        {
          memcpy(v292, v293, *(void *)(*(void *)(v294 - 8) + 64));
          goto LABEL_581;
        }
        uint64_t v296 = type metadata accessor for PuzzleStreak();
        uint64_t v297 = *(void *)(v296 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v297 + 48))(v293, 1, v296))
        {
LABEL_123:
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v292, v293, *(void *)(*(void *)(v298 - 8) + 64));
          goto LABEL_580;
        }
      }
      uint64_t v1042 = sub_1C151555C();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v1042 - 8) + 16))(v292, v293, v1042);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v297 + 56))(v292, 0, 1, v296);
LABEL_580:
      swift_storeEnumTagMultiPayload();
      goto LABEL_581;
  }
}

uint64_t assignWithCopy for FormatLayoutViewRoute(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return a1;
  }
  sub_1C0E3A030(a1);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = type metadata accessor for FeedItem(0);
  int v6 = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    switch(v6)
    {
      case 0:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        uint64_t v7 = *(void *)(a2 + 24);
        *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
        *(void *)(a1 + 24) = v7;
        unint64_t v8 = *(void *)(a2 + 48);
        swift_bridgeObjectRetain();
        if (v8 >= 0x11)
        {
          *(void *)(a1 + 40) = *(void *)(a2 + 40);
          *(void *)(a1 + 48) = *(void *)(a2 + 48);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        }
        goto LABEL_383;
      case 1:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        uint64_t v49 = *(void *)(a2 + 24);
        *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
        *(void *)(a1 + 24) = v49;
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        unint64_t v50 = *(void *)(a2 + 80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v50 >= 0x11)
        {
          *(void *)(a1 + 72) = *(void *)(a2 + 72);
          *(void *)(a1 + 80) = *(void *)(a2 + 80);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
        }
        goto LABEL_383;
      case 2:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v11 = (int *)type metadata accessor for FeedBannerAd();
        uint64_t v12 = v11[5];
        uint64_t v13 = a1 + v12;
        uint64_t v14 = a2 + v12;
        uint64_t v15 = sub_1C151DBAC();
        uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
        swift_bridgeObjectRetain();
        v16(v13, v14, v15);
        *(void *)(a1 + v11[6]) = *(void *)(a2 + v11[6]);
        uint64_t v17 = v11[7];
        uint64_t v18 = a1 + v17;
        uint64_t v19 = a2 + v17;
        char v20 = *(unsigned char *)(v19 + 8);
        *(void *)uint64_t v18 = *(void *)v19;
        *(unsigned char *)(v18 + 8) = v20;
        uint64_t v21 = v11[8];
        uint64_t v22 = a1 + v21;
        uint64_t v23 = a2 + v21;
        if (*(void *)(v23 + 8) >= 0x11uLL) {
          goto LABEL_75;
        }
        *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
        goto LABEL_383;
      case 3:
        uint64_t v1015 = v5;
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v51 = *(void *)(a2 + 16);
        *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
        *(void *)(a1 + 16) = v51;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
        uint64_t v1004 = (int *)type metadata accessor for FeedHeadline(0);
        uint64_t v52 = v1004[10];
        uint64_t v53 = (unsigned char *)(a1 + v52);
        uint64_t v54 = a2 + v52;
        *uint64_t v53 = *(unsigned char *)(a2 + v52);
        v53[1] = *(unsigned char *)(a2 + v52 + 1);
        long long v994 = (int *)type metadata accessor for FeedHeadline.State(0);
        uint64_t v55 = v994[6];
        __dst = &v53[v55];
        uint64_t v56 = (char *)(v54 + v55);
        uint64_t v57 = (int *)type metadata accessor for SharedItem();
        v969 = (void *)*((void *)v57 - 1);
        uint64_t v58 = (unsigned int (*)(char *, uint64_t, int *))v969[6];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if (v58(v56, 1, v57))
        {
          uint64_t v59 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(__dst, v56, *(void *)(*(void *)(v59 - 8) + 64));
        }
        else
        {
          uint64_t v276 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v276 - 8) + 16))(__dst, v56, v276);
          __dst[v57[5]] = v56[v57[5]];
          uint64_t v277 = v57[6];
          id v278 = *(void **)&v56[v277];
          *(void *)&__dst[v277] = v278;
          uint64_t v279 = v57[7];
          uint64_t v982 = &__dst[v279];
          uint64_t v966 = &v56[v279];
          uint64_t v280 = sub_1C1515FDC();
          uint64_t v281 = *(void (**)(char *, char *, uint64_t))(*(void *)(v280 - 8) + 16);
          id v282 = v278;
          v281(v982, v966, v280);
          ((void (*)(char *, void, uint64_t, int *))v969[7])(__dst, 0, 1, v57);
        }
        v53[v994[7]] = *(unsigned char *)(v54 + v994[7]);
        v53[v994[8]] = *(unsigned char *)(v54 + v994[8]);
        v53[v994[9]] = *(unsigned char *)(v54 + v994[9]);
        v53[v994[10]] = *(unsigned char *)(v54 + v994[10]);
        uint64_t v283 = v1004[11];
        uint64_t v284 = (void *)(a1 + v283);
        id v285 = (const void *)(a2 + v283);
        uint64_t v286 = sub_1C151D2DC();
        uint64_t v287 = *(void *)(v286 - 8);
        uint64_t v5 = v1015;
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v287 + 48))(v285, 1, v286))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
          memcpy(v284, v285, *(void *)(*(void *)(v288 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v287 + 16))(v284, v285, v286);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v287 + 56))(v284, 0, 1, v286);
        }
        uint64_t v314 = v1004[12];
        uint64_t v315 = (void *)(a1 + v314);
        uint64_t v316 = (void *)(a2 + v314);
        if (v316[1] >= 0x11uLL)
        {
          *uint64_t v315 = *v316;
          v315[1] = v316[1];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)uint64_t v315 = *(_OWORD *)v316;
        }
        uint64_t v317 = v1004[13];
        unint64_t v318 = *(void *)(a2 + v317);
        if (v318 >= 2)
        {
          if (v318 == 2)
          {
            *(void *)(a1 + v317) = 2;
          }
          else
          {
            *(void *)(a1 + v317) = v318;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(void *)(a1 + v317) = v318;
        }
        uint64_t v396 = v1004[14];
        uint64_t v397 = *(void **)(a2 + v396);
        *(void *)(a1 + v396) = v397;
        id v398 = v397;
        goto LABEL_383;
      case 4:
        *(void *)a1 = *(void *)a2;
        uint64_t v24 = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        *(void *)(a1 + 8) = v24;
        uint64_t v1014 = v5;
        if (*(void *)(a2 + 32) >= 0x11uLL)
        {
          *(void *)(a1 + 24) = *(void *)(a2 + 24);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        }
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        uint64_t v160 = (int *)type metadata accessor for FeedWebEmbed();
        uint64_t v161 = v160[8];
        uint64_t v162 = a1 + v161;
        uint64_t v163 = a2 + v161;
        uint64_t v164 = sub_1C1515FDC();
        uint64_t v165 = *(void *)(v164 - 8);
        v166 = *(void (**)(uint64_t, uint64_t, uint64_t))(v165 + 16);
        swift_bridgeObjectRetain();
        v166(v162, v163, v164);
        uint64_t v1008 = v160;
        uint64_t v167 = v160[9];
        v168 = (void *)(a1 + v167);
        uint64_t v169 = (const void *)(a2 + v167);
        long long v998 = (void *)v164;
        __dstb = (void (*)(char *, char *, void *))v166;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v165 + 48))(a2 + v167, 1, v164))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
          memcpy(v168, v169, *(void *)(*(void *)(v170 - 8) + 64));
        }
        else
        {
          v166((uint64_t)v168, (uint64_t)v169, v164);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v165 + 56))(v168, 0, 1, v164);
        }
        *(void *)(a1 + v160[10]) = *(void *)(a2 + v160[10]);
        *(void *)(a1 + v160[11]) = *(void *)(a2 + v160[11]);
        uint64_t v228 = v160[12];
        uint64_t v229 = (void *)(a1 + v228);
        uint64_t v230 = (void *)(a2 + v228);
        uint64_t v231 = type metadata accessor for FeedHeadline(0);
        uint64_t v232 = *(void *)(v231 - 8);
        v233 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v232 + 48);
        swift_retain();
        swift_retain();
        if (v233(v230, 1, v231))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
          memcpy(v229, v230, *(void *)(*(void *)(v234 - 8) + 64));
        }
        else
        {
          uint64_t v971 = (int *)v231;
          *uint64_t v229 = *v230;
          v229[1] = v230[1];
          uint64_t v252 = v230[2];
          *((unsigned char *)v229 + 24) = *((unsigned char *)v230 + 24);
          v229[2] = v252;
          v229[4] = v230[4];
          v229[5] = v230[5];
          v229[6] = v230[6];
          *((unsigned char *)v229 + 56) = *((unsigned char *)v230 + 56);
          uint64_t v253 = *(int *)(v231 + 40);
          uint64_t v961 = v229;
          v254 = (char *)v229 + v253;
          unint64_t v255 = (char *)v230 + v253;
          unsigned char *v254 = *((unsigned char *)v230 + v253);
          v254[1] = *((unsigned char *)v230 + v253 + 1);
          uint64_t v256 = type metadata accessor for FeedHeadline.State(0);
          uint64_t v257 = *(int *)(v256 + 24);
          int v956 = &v254[v257];
          uint64_t v958 = (int *)v256;
          uint64_t v258 = &v255[v257];
          v259 = (int *)type metadata accessor for SharedItem();
          uint64_t v953 = *((void *)v259 - 1);
          uint64_t v260 = *(unsigned int (**)(char *, uint64_t, int *))(v953 + 48);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          if (v260(v258, 1, v259))
          {
            uint64_t v261 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(v956, v258, *(void *)(*(void *)(v261 - 8) + 64));
          }
          else
          {
            uint64_t v436 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v436 - 8) + 16))(v956, v258, v436);
            v956[v259[5]] = v258[v259[5]];
            uint64_t v437 = v259[6];
            v438 = *(void **)&v258[v437];
            *(void *)&v956[v437] = v438;
            uint64_t v439 = v259[7];
            v440 = &v956[v439];
            uint64_t v441 = &v258[v439];
            id v442 = v438;
            __dstb(v440, v441, v998);
            (*(void (**)(char *, void, uint64_t, int *))(v953 + 56))(v956, 0, 1, v259);
          }
          v254[v958[7]] = v255[v958[7]];
          v254[v958[8]] = v255[v958[8]];
          v254[v958[9]] = v255[v958[9]];
          v254[v958[10]] = v255[v958[10]];
          uint64_t v443 = *(int *)(v231 + 44);
          long long v444 = (char *)v961 + v443;
          id v445 = (char *)v230 + v443;
          uint64_t v446 = sub_1C151D2DC();
          uint64_t v447 = *(void *)(v446 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v447 + 48))(v445, 1, v446))
          {
            sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
            memcpy(v444, v445, *(void *)(*(void *)(v448 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v447 + 16))(v444, v445, v446);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v447 + 56))(v444, 0, 1, v446);
          }
          uint64_t v462 = v971[12];
          uint64_t v463 = (void *)((char *)v961 + v462);
          uint64_t v464 = (void *)((char *)v230 + v462);
          if (v464[1] >= 0x11uLL)
          {
            *uint64_t v463 = *v464;
            v463[1] = v464[1];
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)uint64_t v463 = *(_OWORD *)v464;
          }
          uint64_t v465 = v971[13];
          unint64_t v466 = *(void *)((char *)v230 + v465);
          if (v466 >= 2)
          {
            if (v466 == 2)
            {
              *(void *)((char *)v961 + v465) = 2;
            }
            else
            {
              *(void *)((char *)v961 + v465) = v466;
              swift_unknownObjectRetain();
            }
          }
          else
          {
            *(void *)((char *)v961 + v465) = v466;
          }
          uint64_t v508 = v971[14];
          uint64_t v509 = *(void **)((char *)v230 + v508);
          *(void *)((char *)v961 + v508) = v509;
          id v510 = *(void (**)(void *, void, uint64_t, int *))(v232 + 56);
          id v511 = v509;
          v510(v961, 0, 1, v971);
        }
        uint64_t v512 = v1008[13];
        v513 = (void *)(a1 + v512);
        uint64_t v514 = (void *)(a2 + v512);
        uint64_t v515 = type metadata accessor for WebEmbedDataVisualization();
        uint64_t v516 = *(void *)(v515 - 8);
        uint64_t v5 = v1014;
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v516 + 48))(v514, 1, v515))
        {
          sub_1BFEEF2C0(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
          memcpy(v513, v514, *(void *)(*(void *)(v517 - 8) + 64));
        }
        else
        {
          int v518 = swift_getEnumCaseMultiPayload();
          void *v513 = *v514;
          if (v518 == 1)
          {
            v513[1] = v514[1];
            uint64_t v519 = type metadata accessor for GenericDataVisualization();
            uint64_t v520 = *(int *)(v519 + 20);
            id v521 = (char *)v513 + v520;
            uint64_t v522 = (char *)v514 + v520;
            swift_bridgeObjectRetain();
            uint64_t v523 = v522;
            uint64_t v5 = v1014;
            __dstb(v521, v523, v998);
            *(void *)((char *)v513 + *(int *)(v519 + 24)) = *(void *)((char *)v514 + *(int *)(v519 + 24));
            swift_bridgeObjectRetain();
          }
          else
          {
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(v516 + 56))(v513, 0, 1, v515);
        }
        *(unsigned char *)(a1 + v1008[14]) = *(unsigned char *)(a2 + v1008[14]);
        goto LABEL_383;
      case 5:
        uint64_t v60 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
        *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
        uint64_t v61 = *(void *)(a2 + 32);
        *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
        *(void *)(a1 + 32) = v61;
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        uint64_t v62 = *(void **)(a2 + 56);
        *(void *)(a1 + 56) = v62;
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        uint64_t v63 = *(void *)(a2 + 80);
        id v64 = v60;
        swift_bridgeObjectRetain();
        id v65 = v62;
        if (v63 == 1)
        {
          long long v66 = *(_OWORD *)(a2 + 72);
          long long v67 = *(_OWORD *)(a2 + 104);
          *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
          *(_OWORD *)(a1 + 104) = v67;
          *(_OWORD *)(a1 + 72) = v66;
        }
        else
        {
          *(void *)(a1 + 72) = *(void *)(a2 + 72);
          *(void *)(a1 + 80) = *(void *)(a2 + 80);
          *(void *)(a1 + 88) = *(void *)(a2 + 88);
          *(void *)(a1 + 96) = *(void *)(a2 + 96);
          id v182 = *(void **)(a2 + 104);
          *(void *)(a1 + 104) = v182;
          *(void *)(a1 + 112) = *(void *)(a2 + 112);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v183 = v182;
        }
        if (*(void *)(a2 + 128) >= 0x11uLL)
        {
          *(void *)(a1 + 120) = *(void *)(a2 + 120);
          *(void *)(a1 + 128) = *(void *)(a2 + 128);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
        }
        *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
        goto LABEL_383;
      case 6:
        int v68 = *(unsigned __int8 *)(a2 + 281);
        if (v68 == 2)
        {
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
          uint64_t v338 = *(void *)(a2 + 32);
          *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
          *(void *)(a1 + 32) = v338;
          *(void *)(a1 + 48) = *(void *)(a2 + 48);
          *(void *)(a1 + 56) = *(void *)(a2 + 56);
          *(void *)(a1 + 64) = *(void *)(a2 + 64);
          *(void *)(a1 + 72) = *(void *)(a2 + 72);
          uint64_t v339 = *(void *)(a2 + 88);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v339 == 1)
          {
            *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
            long long v340 = *(_OWORD *)(a2 + 96);
            long long v341 = *(_OWORD *)(a2 + 112);
            long long v342 = *(_OWORD *)(a2 + 128);
            *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
            *(_OWORD *)(a1 + 112) = v341;
            *(_OWORD *)(a1 + 128) = v342;
            *(_OWORD *)(a1 + 96) = v340;
          }
          else
          {
            *(void *)(a1 + 80) = *(void *)(a2 + 80);
            *(void *)(a1 + 88) = *(void *)(a2 + 88);
            uint64_t v412 = *(void *)(a2 + 120);
            swift_bridgeObjectRetain();
            if (v412)
            {
              *(void *)(a1 + 120) = v412;
              *(void *)(a1 + 128) = *(void *)(a2 + 128);
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v412 - 8))(a1 + 96, a2 + 96, v412);
              char v413 = *(unsigned char *)(a2 + 144);
              *(void *)(a1 + 136) = *(void *)(a2 + 136);
              *(unsigned char *)(a1 + 144) = v413;
            }
            else
            {
              long long v583 = *(_OWORD *)(a2 + 96);
              long long v584 = *(_OWORD *)(a2 + 112);
              long long v585 = *(_OWORD *)(a2 + 128);
              *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
              *(_OWORD *)(a1 + 112) = v584;
              *(_OWORD *)(a1 + 128) = v585;
              *(_OWORD *)(a1 + 96) = v583;
            }
          }
        }
        else if (v68 == 1)
        {
          uint64_t v69 = *(void **)a2;
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
          *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
          uint64_t v70 = *(void *)(a2 + 32);
          *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
          *(void *)(a1 + 32) = v70;
          *(void *)(a1 + 48) = *(void *)(a2 + 48);
          uint64_t v71 = *(void **)(a2 + 56);
          *(void *)(a1 + 56) = v71;
          *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
          uint64_t v72 = *(void *)(a2 + 80);
          id v73 = v69;
          swift_bridgeObjectRetain();
          id v74 = v71;
          if (v72 == 1)
          {
            long long v75 = *(_OWORD *)(a2 + 72);
            long long v76 = *(_OWORD *)(a2 + 104);
            *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
            *(_OWORD *)(a1 + 104) = v76;
            *(_OWORD *)(a1 + 72) = v75;
          }
          else
          {
            *(void *)(a1 + 72) = *(void *)(a2 + 72);
            *(void *)(a1 + 80) = *(void *)(a2 + 80);
            *(void *)(a1 + 88) = *(void *)(a2 + 88);
            *(void *)(a1 + 96) = *(void *)(a2 + 96);
            uint64_t v408 = *(void **)(a2 + 104);
            *(void *)(a1 + 104) = v408;
            *(void *)(a1 + 112) = *(void *)(a2 + 112);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v409 = v408;
          }
          if (*(void *)(a2 + 128) >= 0x11uLL)
          {
            *(void *)(a1 + 120) = *(void *)(a2 + 120);
            *(void *)(a1 + 128) = *(void *)(a2 + 128);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
          }
          *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
          uint64_t v420 = *(void **)(a2 + 144);
          if (v420)
          {
            *(void *)(a1 + 144) = v420;
            *(void *)(a1 + 152) = *(void *)(a2 + 152);
            *(void *)(a1 + 160) = *(void *)(a2 + 160);
            *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
            *(unsigned char *)(a1 + 169) = *(unsigned char *)(a2 + 169);
            uint64_t v421 = *(void *)(a2 + 176);
            *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
            *(void *)(a1 + 176) = v421;
            *(void *)(a1 + 192) = *(void *)(a2 + 192);
            uint64_t v422 = *(void **)(a2 + 200);
            *(void *)(a1 + 200) = v422;
            *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
            uint64_t v423 = *(void *)(a2 + 224);
            id v424 = v420;
            swift_bridgeObjectRetain();
            id v425 = v422;
            if (v423 == 1)
            {
              long long v426 = *(_OWORD *)(a2 + 216);
              long long v427 = *(_OWORD *)(a2 + 248);
              *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
              *(_OWORD *)(a1 + 248) = v427;
              *(_OWORD *)(a1 + 216) = v426;
            }
            else
            {
              *(void *)(a1 + 216) = *(void *)(a2 + 216);
              *(void *)(a1 + 224) = *(void *)(a2 + 224);
              *(void *)(a1 + 232) = *(void *)(a2 + 232);
              *(void *)(a1 + 240) = *(void *)(a2 + 240);
              long long v484 = *(void **)(a2 + 248);
              *(void *)(a1 + 248) = v484;
              *(void *)(a1 + 256) = *(void *)(a2 + 256);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v485 = v484;
            }
            if (*(void *)(a2 + 272) >= 0x11uLL)
            {
              *(void *)(a1 + 264) = *(void *)(a2 + 264);
              *(void *)(a1 + 272) = *(void *)(a2 + 272);
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
            }
            *(unsigned char *)(a1 + 280) = *(unsigned char *)(a2 + 280);
          }
          else
          {
            *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
            long long v472 = *(_OWORD *)(a2 + 160);
            long long v473 = *(_OWORD *)(a2 + 176);
            long long v474 = *(_OWORD *)(a2 + 208);
            *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
            *(_OWORD *)(a1 + 208) = v474;
            *(_OWORD *)(a1 + 160) = v472;
            *(_OWORD *)(a1 + 176) = v473;
            long long v475 = *(_OWORD *)(a2 + 224);
            long long v476 = *(_OWORD *)(a2 + 240);
            long long v477 = *(_OWORD *)(a2 + 256);
            *(_OWORD *)(a1 + 265) = *(_OWORD *)(a2 + 265);
            *(_OWORD *)(a1 + 240) = v476;
            *(_OWORD *)(a1 + 256) = v477;
            *(_OWORD *)(a1 + 224) = v475;
          }
        }
        else
        {
          uint64_t v343 = *(void **)a2;
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
          *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
          uint64_t v344 = *(void *)(a2 + 32);
          *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
          *(void *)(a1 + 32) = v344;
          *(void *)(a1 + 48) = *(void *)(a2 + 48);
          uint64_t v345 = *(void **)(a2 + 56);
          *(void *)(a1 + 56) = v345;
          *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
          uint64_t v346 = *(void *)(a2 + 80);
          id v347 = v343;
          swift_bridgeObjectRetain();
          id v348 = v345;
          if (v346 == 1)
          {
            long long v349 = *(_OWORD *)(a2 + 72);
            long long v350 = *(_OWORD *)(a2 + 104);
            *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
            *(_OWORD *)(a1 + 104) = v350;
            *(_OWORD *)(a1 + 72) = v349;
          }
          else
          {
            *(void *)(a1 + 72) = *(void *)(a2 + 72);
            *(void *)(a1 + 80) = *(void *)(a2 + 80);
            *(void *)(a1 + 88) = *(void *)(a2 + 88);
            *(void *)(a1 + 96) = *(void *)(a2 + 96);
            uint64_t v414 = *(void **)(a2 + 104);
            *(void *)(a1 + 104) = v414;
            *(void *)(a1 + 112) = *(void *)(a2 + 112);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v415 = v414;
          }
          if (*(void *)(a2 + 128) >= 0x11uLL)
          {
            *(void *)(a1 + 120) = *(void *)(a2 + 120);
            *(void *)(a1 + 128) = *(void *)(a2 + 128);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
          }
          *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
        }
        *(unsigned char *)(a1 + 281) = v68;
        goto LABEL_383;
      case 7:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
        uint64_t v77 = *(void *)(a2 + 32);
        *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
        *(void *)(a1 + 32) = v77;
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        uint64_t v78 = *(void *)(a2 + 88);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v78 == 1)
        {
          *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
          long long v79 = *(_OWORD *)(a2 + 96);
          long long v80 = *(_OWORD *)(a2 + 112);
          long long v81 = *(_OWORD *)(a2 + 128);
          *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
          *(_OWORD *)(a1 + 112) = v80;
          *(_OWORD *)(a1 + 128) = v81;
          *(_OWORD *)(a1 + 96) = v79;
        }
        else
        {
          *(void *)(a1 + 80) = *(void *)(a2 + 80);
          *(void *)(a1 + 88) = *(void *)(a2 + 88);
          uint64_t v184 = *(void *)(a2 + 120);
          swift_bridgeObjectRetain();
          if (v184)
          {
            *(void *)(a1 + 120) = v184;
            *(void *)(a1 + 128) = *(void *)(a2 + 128);
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v184 - 8))(a1 + 96, a2 + 96, v184);
            char v185 = *(unsigned char *)(a2 + 144);
            *(void *)(a1 + 136) = *(void *)(a2 + 136);
            *(unsigned char *)(a1 + 144) = v185;
          }
          else
          {
            long long v402 = *(_OWORD *)(a2 + 96);
            long long v403 = *(_OWORD *)(a2 + 112);
            long long v404 = *(_OWORD *)(a2 + 128);
            *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
            *(_OWORD *)(a1 + 112) = v403;
            *(_OWORD *)(a1 + 128) = v404;
            *(_OWORD *)(a1 + 96) = v402;
          }
        }
        goto LABEL_383;
      case 8:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v82 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
        uint64_t v83 = (void *)(a1 + v82);
        uint64_t v84 = a2 + v82;
        *uint64_t v83 = *(void *)(a2 + v82);
        v83[1] = *(void *)(a2 + v82 + 8);
        v83[2] = *(void *)(a2 + v82 + 16);
        v83[3] = *(void *)(a2 + v82 + 24);
        uint64_t v85 = type metadata accessor for FormatCustomItem.Resolved();
        uint64_t v86 = *(int *)(v85 + 24);
        uint64_t v995 = (char *)v83 + v86;
        uint64_t v1005 = v85;
        uint64_t v87 = (const void *)(v84 + v86);
        uint64_t v88 = type metadata accessor for FormatCustomItem.Action();
        uint64_t v980 = *(void *)(v88 - 8);
        uint64_t v89 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v980 + 48);
        uint64_t v90 = v88;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v89(v87, 1, v90))
        {
          sub_1BFEEF2C0(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
          memcpy(v995, v87, *(void *)(*(void *)(v91 - 8) + 64));
        }
        else
        {
          uint64_t v289 = sub_1C1515FDC();
          (*(void (**)(char *, const void *, uint64_t))(*(void *)(v289 - 8) + 16))(v995, v87, v289);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v980 + 56))(v995, 0, 1, v90);
        }
        *(void *)((char *)v83 + *(int *)(v1005 + 28)) = *(void *)(v84 + *(int *)(v1005 + 28));
        swift_bridgeObjectRetain();
        goto LABEL_383;
      case 9:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        uint64_t v25 = *(void *)(a2 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v25)
        {
          *(void *)(a1 + 56) = v25;
          *(void *)(a1 + 64) = *(void *)(a2 + 64);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v25 - 8))(a1 + 32, a2 + 32, v25);
        }
        else
        {
          long long v218 = *(_OWORD *)(a2 + 32);
          long long v219 = *(_OWORD *)(a2 + 48);
          *(void *)(a1 + 64) = *(void *)(a2 + 64);
          *(_OWORD *)(a1 + 32) = v218;
          *(_OWORD *)(a1 + 48) = v219;
        }
        unint64_t v220 = (_OWORD *)(a1 + 72);
        uint64_t v221 = (long long *)(a2 + 72);
        uint64_t v222 = *(void *)(a2 + 96);
        if (v222)
        {
          *(void *)(a1 + 96) = v222;
          *(void *)(a1 + 104) = *(void *)(a2 + 104);
          (**(void (***)(_OWORD *, long long *))(v222 - 8))(v220, v221);
        }
        else
        {
          long long v242 = *v221;
          long long v243 = *(_OWORD *)(a2 + 88);
          *(void *)(a1 + 104) = *(void *)(a2 + 104);
          *unint64_t v220 = v242;
          *(_OWORD *)(a1 + 88) = v243;
        }
        v244 = (_OWORD *)(a1 + 112);
        uint64_t v245 = (long long *)(a2 + 112);
        uint64_t v246 = *(void *)(a2 + 136);
        if (v246)
        {
          *(void *)(a1 + 136) = v246;
          *(void *)(a1 + 144) = *(void *)(a2 + 144);
          (**(void (***)(_OWORD *, long long *))(v246 - 8))(v244, v245);
        }
        else
        {
          long long v272 = *v245;
          long long v273 = *(_OWORD *)(a2 + 128);
          *(void *)(a1 + 144) = *(void *)(a2 + 144);
          _OWORD *v244 = v272;
          *(_OWORD *)(a1 + 128) = v273;
        }
        goto LABEL_383;
      case 10:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v92 = (int *)type metadata accessor for FeedEngagementBanner();
        uint64_t v93 = v92[5];
        uint64_t v94 = a1 + v93;
        uint64_t v95 = a2 + v93;
        uint64_t v96 = sub_1C151959C();
        uint64_t v97 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 16);
        swift_bridgeObjectRetain();
        v97(v94, v95, v96);
        *(void *)(a1 + v92[6]) = *(void *)(a2 + v92[6]);
        uint64_t v98 = v92[7];
        uint64_t v99 = a1 + v98;
        uint64_t v100 = a2 + v98;
        char v101 = *(unsigned char *)(v100 + 8);
        *(void *)uint64_t v99 = *(void *)v100;
        *(unsigned char *)(v99 + 8) = v101;
        uint64_t v102 = v92[8];
        uint64_t v22 = a1 + v102;
        uint64_t v23 = a2 + v102;
        if (*(void *)(v23 + 8) >= 0x11uLL)
        {
LABEL_75:
          *(void *)uint64_t v22 = *(void *)v23;
          *(void *)(v22 + 8) = *(void *)(v23 + 8);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
        }
        goto LABEL_383;
      case 11:
        *(void *)a1 = *(void *)a2;
        swift_retain();
        goto LABEL_383;
      case 12:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        uint64_t v26 = *(void *)(a2 + 24);
        *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
        *(void *)(a1 + 24) = v26;
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_383;
      case 13:
        *(void *)a1 = *(void *)a2;
        uint64_t v103 = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        *(void *)(a1 + 8) = v103;
        if (*(void *)(a2 + 32) >= 0x11uLL)
        {
          *(void *)(a1 + 24) = *(void *)(a2 + 24);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        }
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        id v186 = *(void **)(a2 + 64);
        *(void *)(a1 + 64) = v186;
        *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        uint64_t v187 = *(void *)(a2 + 112);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        id v188 = v186;
        swift_bridgeObjectRetain();
        if (v187)
        {
          *(void *)(a1 + 112) = v187;
          *(void *)(a1 + 120) = *(void *)(a2 + 120);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v187 - 8))(a1 + 88, a2 + 88, v187);
        }
        else
        {
          long long v304 = *(_OWORD *)(a2 + 88);
          long long v305 = *(_OWORD *)(a2 + 104);
          *(void *)(a1 + 120) = *(void *)(a2 + 120);
          *(_OWORD *)(a1 + 88) = v304;
          *(_OWORD *)(a1 + 104) = v305;
        }
        v306 = (_OWORD *)(a1 + 128);
        uint64_t v307 = (long long *)(a2 + 128);
        uint64_t v308 = *(void *)(a2 + 152);
        if (v308)
        {
          *(void *)(a1 + 152) = v308;
          *(void *)(a1 + 160) = *(void *)(a2 + 160);
          (**(void (***)(_OWORD *, long long *))(v308 - 8))(v306, v307);
        }
        else
        {
          long long v324 = *v307;
          long long v325 = *(_OWORD *)(a2 + 144);
          *(void *)(a1 + 160) = *(void *)(a2 + 160);
          _OWORD *v306 = v324;
          *(_OWORD *)(a1 + 144) = v325;
        }
        uint64_t v326 = (_OWORD *)(a1 + 168);
        uint64_t v327 = (long long *)(a2 + 168);
        uint64_t v328 = *(void *)(a2 + 192);
        if (v328)
        {
          *(void *)(a1 + 192) = v328;
          *(void *)(a1 + 200) = *(void *)(a2 + 200);
          (**(void (***)(_OWORD *, long long *))(v328 - 8))(v326, v327);
        }
        else
        {
          long long v334 = *v327;
          long long v335 = *(_OWORD *)(a2 + 184);
          *(void *)(a1 + 200) = *(void *)(a2 + 200);
          _OWORD *v326 = v334;
          *(_OWORD *)(a1 + 184) = v335;
        }
        goto LABEL_383;
      case 14:
        *(void *)a1 = *(void *)a2;
        uint64_t v27 = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        *(void *)(a1 + 8) = v27;
        if (*(void *)(a2 + 32) >= 0x11uLL)
        {
          *(void *)(a1 + 24) = *(void *)(a2 + 24);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        }
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_383;
      case 15:
        *(void *)a1 = *(void *)a2;
        uint64_t v104 = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        *(void *)(a1 + 8) = v104;
        if (*(void *)(a2 + 32) >= 0x11uLL)
        {
          *(void *)(a1 + 24) = *(void *)(a2 + 24);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        }
        break;
      case 16:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
        *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        *(void *)(a1 + 104) = *(void *)(a2 + 104);
        *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
        *(void *)(a1 + 120) = *(void *)(a2 + 120);
        *(void *)(a1 + 128) = *(void *)(a2 + 128);
        *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
        *(void *)(a1 + 144) = *(void *)(a2 + 144);
        *(void *)(a1 + 152) = *(void *)(a2 + 152);
        *(void *)(a1 + 160) = *(void *)(a2 + 160);
        *(void *)(a1 + 168) = *(void *)(a2 + 168);
        uint64_t v28 = *(void *)(a2 + 176);
        *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
        *(void *)(a1 + 176) = v28;
        *(void *)(a1 + 192) = *(void *)(a2 + 192);
        *(void *)(a1 + 200) = *(void *)(a2 + 200);
        *(void *)(a1 + 208) = *(void *)(a2 + 208);
        uint64_t v29 = *(void *)(a2 + 216);
        *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
        *(void *)(a1 + 216) = v29;
        v992 = *(void **)(a2 + 240);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((unint64_t)v992 >= 0x11)
        {
          *(void *)(a1 + 232) = *(void *)(a2 + 232);
          *(void *)(a1 + 240) = *(void *)(a2 + 240);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
        }
        goto LABEL_383;
      default:
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v5 - 8) + 64));
        goto LABEL_384;
    }
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    uint64_t v189 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
    uint64_t v190 = a1 + v189;
    uint64_t v191 = a2 + v189;
    *(void *)(a1 + v189) = *(void *)(a2 + v189);
    uint64_t v192 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
    long long v193 = (void *)(v190 + v192);
    long long v194 = (void *)(v191 + v192);
    type metadata accessor for PuzzleStatisticCategory(0);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v1017 = v5;
        uint64_t v370 = type metadata accessor for PuzzleStatisticValue(0);
        int v371 = swift_getEnumCaseMultiPayload();
        if (v371 == 5)
        {
          uint64_t v372 = type metadata accessor for PuzzleStreak();
          uint64_t v373 = *(void *)(v372 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v373 + 48))(v194, 1, v372))
          {
LABEL_323:
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v193, v194, *(void *)(*(void *)(v581 - 8) + 64));
LABEL_344:
            swift_storeEnumTagMultiPayload();
LABEL_345:
            uint64_t v602 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
            uint64_t v603 = *(int *)(v602 + 20);
            uint64_t v604 = v193;
            uint64_t v605 = (char *)v193 + v603;
            uint64_t v606 = (char *)v194 + v603;
            int v607 = swift_getEnumCaseMultiPayload();
            if (v607 == 5)
            {
              uint64_t v608 = type metadata accessor for PuzzleStreak();
              uint64_t v609 = *(void *)(v608 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v609 + 48))(v606, 1, v608))
              {
LABEL_350:
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v605, v606, *(void *)(*(void *)(v610 - 8) + 64));
LABEL_362:
                swift_storeEnumTagMultiPayload();
LABEL_363:
                uint64_t v621 = *(int *)(v602 + 24);
                uint64_t v622 = (char *)v604 + v621;
                uint64_t v623 = (char *)v194 + v621;
                int v624 = swift_getEnumCaseMultiPayload();
                if (v624 == 5)
                {
                  uint64_t v625 = type metadata accessor for PuzzleStreak();
                  uint64_t v626 = *(void *)(v625 - 8);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v626 + 48))(v623, 1, v625))
                  {
LABEL_368:
                    sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                    memcpy(v622, v623, *(void *)(*(void *)(v627 - 8) + 64));
LABEL_380:
                    swift_storeEnumTagMultiPayload();
                    goto LABEL_381;
                  }
                }
                else
                {
                  if (v624 != 4)
                  {
                    memcpy(v622, v623, *(void *)(*(void *)(v370 - 8) + 64));
LABEL_381:
                    uint64_t v5 = v1017;
                    goto LABEL_382;
                  }
                  uint64_t v625 = type metadata accessor for PuzzleStreak();
                  uint64_t v626 = *(void *)(v625 - 8);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v626 + 48))(v623, 1, v625)) {
                    goto LABEL_368;
                  }
                }
                uint64_t v636 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v636 - 8) + 16))(v622, v623, v636);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v626 + 56))(v622, 0, 1, v625);
                goto LABEL_380;
              }
            }
            else
            {
              if (v607 != 4)
              {
                memcpy(v605, v606, *(void *)(*(void *)(v370 - 8) + 64));
                goto LABEL_363;
              }
              uint64_t v608 = type metadata accessor for PuzzleStreak();
              uint64_t v609 = *(void *)(v608 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v609 + 48))(v606, 1, v608)) {
                goto LABEL_350;
              }
            }
            uint64_t v620 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v620 - 8) + 16))(v605, v606, v620);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v609 + 56))(v605, 0, 1, v608);
            goto LABEL_362;
          }
        }
        else
        {
          if (v371 != 4)
          {
            memcpy(v193, v194, *(void *)(*(void *)(v370 - 8) + 64));
            goto LABEL_345;
          }
          uint64_t v372 = type metadata accessor for PuzzleStreak();
          uint64_t v373 = *(void *)(v372 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v373 + 48))(v194, 1, v372)) {
            goto LABEL_323;
          }
        }
        uint64_t v601 = sub_1C151555C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v601 - 8) + 16))(v193, v194, v601);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v373 + 56))(v193, 0, 1, v372);
        goto LABEL_344;
      case 2u:
        uint64_t v1016 = v5;
        id v364 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
        uint64_t v365 = *((void *)v364 - 1);
        if ((*(unsigned int (**)(void *, uint64_t, int *))(v365 + 48))(v194, 1, v364))
        {
          sub_1BFEEF2C0(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
          memcpy(v193, v194, *(void *)(*(void *)(v366 - 8) + 64));
          goto LABEL_313;
        }
        uint64_t v488 = sub_1C151631C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v488 - 8) + 16))(v193, v194, v488);
        v489 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
        uint64_t v490 = v489[5];
        uint64_t v491 = (void *)((char *)v193 + v490);
        uint64_t v492 = (void *)((char *)v194 + v490);
        void *v491 = *v492;
        v491[1] = v492[1];
        uint64_t v493 = v489[6];
        long long v985 = v193;
        id v494 = (char *)v193 + v493;
        v495 = (void *)((char *)v194 + v493);
        *(void *)id v494 = *v495;
        *((void *)v494 + 1) = v495[1];
        unint64_t v496 = v495 + 2;
        unint64_t v497 = v495[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v497 >> 60 == 15)
        {
          *((_OWORD *)v494 + 1) = *(_OWORD *)v496;
        }
        else
        {
          uint64_t v589 = *v496;
          sub_1BFE95820(*v496, v497);
          *((void *)v494 + 2) = v589;
          *((void *)v494 + 3) = v497;
        }
        *(void *)((char *)v985 + v489[7]) = *(void *)((char *)v194 + v489[7]);
        *(void *)((char *)v985 + v489[8]) = *(void *)((char *)v194 + v489[8]);
        *(void *)((char *)v985 + v364[5]) = *(void *)((char *)v194 + v364[5]);
        *(void *)((char *)v985 + v364[6]) = *(void *)((char *)v194 + v364[6]);
        uint64_t v590 = v364[7];
        uint64_t v591 = (void *)((char *)v985 + v590);
        uint64_t v592 = (void *)((char *)v194 + v590);
        *uint64_t v591 = *v592;
        v591[1] = v592[1];
        uint64_t v593 = *(void (**)(void *, void, uint64_t, int *))(v365 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v593(v985, 0, 1, v364);
        uint64_t v5 = v1016;
        goto LABEL_382;
      case 3u:
        uint64_t v1016 = v5;
        *long long v193 = *v194;
        uint64_t v374 = v194[1];
        *((unsigned char *)v193 + 16) = *((unsigned char *)v194 + 16);
        v193[1] = v374;
        id v375 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
        uint64_t v376 = v375[6];
        uint64_t v984 = v193;
        id v377 = (char *)v193 + v376;
        uint64_t v378 = (char *)v194 + v376;
        uint64_t v379 = type metadata accessor for PuzzleStreak();
        uint64_t v380 = *(void *)(v379 - 8);
        uint64_t v381 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v380 + 48);
        if (v381(v378, 1, v379))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v377, v378, *(void *)(*(void *)(v382 - 8) + 64));
        }
        else
        {
          uint64_t v539 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v539 - 8) + 16))(v377, v378, v539);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v380 + 56))(v377, 0, 1, v379);
        }
        uint64_t v540 = v375[7];
        uint64_t v541 = (char *)v984 + v540;
        uint64_t v542 = (char *)v194 + v540;
        if (v381((char *)v194 + v540, 1, v379))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v541, v542, *(void *)(*(void *)(v543 - 8) + 64));
        }
        else
        {
          uint64_t v549 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v549 - 8) + 16))(v541, v542, v549);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v380 + 56))(v541, 0, 1, v379);
        }
        uint64_t v550 = v375[8];
        uint64_t v551 = (_OWORD *)((char *)v984 + v550);
        uint64_t v552 = (long long *)((char *)v194 + v550);
        long long v553 = *v552;
        long long v554 = v552[1];
        *(_OWORD *)((char *)v551 + 25) = *(long long *)((char *)v552 + 25);
        *uint64_t v551 = v553;
        v551[1] = v554;
        uint64_t v555 = v375[9];
        uint64_t v556 = (_OWORD *)((char *)v984 + v555);
        uint64_t v557 = (long long *)((char *)v194 + v555);
        long long v558 = *v557;
        long long v559 = v557[1];
        *(_OWORD *)((char *)v556 + 25) = *(long long *)((char *)v557 + 25);
        *uint64_t v556 = v558;
        v556[1] = v559;
        uint64_t v560 = v375[10];
        uint64_t v561 = (_OWORD *)((char *)v984 + v560);
        unint64_t v562 = (long long *)((char *)v194 + v560);
        long long v563 = *v562;
        long long v564 = v562[1];
        *(_OWORD *)((char *)v561 + 25) = *(long long *)((char *)v562 + 25);
        *uint64_t v561 = v563;
        v561[1] = v564;
LABEL_313:
        uint64_t v5 = v1016;
        goto LABEL_382;
      default:
        uint64_t v195 = type metadata accessor for PuzzleStatisticValue(0);
        int v196 = swift_getEnumCaseMultiPayload();
        if (v196 == 5)
        {
          uint64_t v197 = type metadata accessor for PuzzleStreak();
          uint64_t v198 = *(void *)(v197 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v198 + 48))(v194, 1, v197))
          {
LABEL_106:
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v193, v194, *(void *)(*(void *)(v199 - 8) + 64));
LABEL_337:
            swift_storeEnumTagMultiPayload();
            goto LABEL_382;
          }
        }
        else
        {
          if (v196 != 4)
          {
            memcpy(v193, v194, *(void *)(*(void *)(v195 - 8) + 64));
LABEL_382:
            swift_storeEnumTagMultiPayload();
LABEL_383:
            swift_storeEnumTagMultiPayload();
LABEL_384:
            sub_1C049A100();
            uint64_t v638 = *(int *)(v637 + 48);
            uint64_t v639 = (void *)(a1 + v638);
            uint64_t v640 = (void *)(a2 + v638);
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
                *uint64_t v639 = *v640;
                v639[1] = v640[1];
                v639[2] = v640[2];
                uint64_t v641 = v640[3];
                *((unsigned char *)v639 + 32) = *((unsigned char *)v640 + 32);
                v639[3] = v641;
                unint64_t v642 = v640[6];
                swift_bridgeObjectRetain();
                if (v642 >= 0x11)
                {
                  v639[5] = v640[5];
                  v639[6] = v640[6];
                  swift_bridgeObjectRetain();
                }
                else
                {
                  *(_OWORD *)(v639 + 5) = *(_OWORD *)(v640 + 5);
                }
                goto LABEL_578;
              case 1u:
                *uint64_t v639 = *v640;
                v639[1] = v640[1];
                v639[2] = v640[2];
                uint64_t v660 = v640[3];
                *((unsigned char *)v639 + 32) = *((unsigned char *)v640 + 32);
                v639[3] = v660;
                v639[5] = v640[5];
                v639[6] = v640[6];
                v639[7] = v640[7];
                v639[8] = v640[8];
                unint64_t v661 = v640[10];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (v661 >= 0x11)
                {
                  v639[9] = v640[9];
                  v639[10] = v640[10];
                  swift_bridgeObjectRetain();
                }
                else
                {
                  *(_OWORD *)(v639 + 9) = *(_OWORD *)(v640 + 9);
                }
                goto LABEL_578;
              case 2u:
                *uint64_t v639 = *v640;
                v639[1] = v640[1];
                uint64_t v643 = (int *)type metadata accessor for FeedBannerAd();
                uint64_t v644 = v643[5];
                uint64_t v645 = (char *)v639 + v644;
                v646 = (char *)v640 + v644;
                uint64_t v647 = sub_1C151DBAC();
                uint64_t v648 = *(void (**)(char *, char *, uint64_t))(*(void *)(v647 - 8) + 16);
                swift_bridgeObjectRetain();
                v648(v645, v646, v647);
                *(void *)((char *)v639 + v643[6]) = *(void *)((char *)v640 + v643[6]);
                uint64_t v649 = v643[7];
                unint64_t v650 = (char *)v639 + v649;
                uint64_t v651 = (char *)v640 + v649;
                char v652 = v651[8];
                *(void *)unint64_t v650 = *(void *)v651;
                v650[8] = v652;
                uint64_t v653 = v643[8];
                uint64_t v41 = (char *)v639 + v653;
                uint64_t v42 = (char *)v640 + v653;
                if (*((void *)v42 + 1) >= 0x11uLL) {
                  goto LABEL_113;
                }
                *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
                goto LABEL_578;
              case 3u:
                *uint64_t v639 = *v640;
                v639[1] = v640[1];
                uint64_t v662 = v640[2];
                *((unsigned char *)v639 + 24) = *((unsigned char *)v640 + 24);
                v639[2] = v662;
                v639[4] = v640[4];
                v639[5] = v640[5];
                v639[6] = v640[6];
                *((unsigned char *)v639 + 56) = *((unsigned char *)v640 + 56);
                uint64_t v1010 = (int *)type metadata accessor for FeedHeadline(0);
                uint64_t v663 = v1010[10];
                uint64_t v664 = (char *)v639 + v663;
                uint64_t v665 = (char *)v640 + v663;
                unsigned char *v664 = *((unsigned char *)v640 + v663);
                v664[1] = *((unsigned char *)v640 + v663 + 1);
                uint64_t v1000 = (int *)type metadata accessor for FeedHeadline.State(0);
                uint64_t v666 = v1000[6];
                uint64_t v973 = &v664[v666];
                uint64_t v667 = &v665[v666];
                uint64_t v668 = (int *)type metadata accessor for SharedItem();
                uint64_t v968 = *((void *)v668 - 1);
                uint64_t v669 = *(unsigned int (**)(char *, uint64_t, int *))(v968 + 48);
                swift_bridgeObjectRetain();
                swift_unknownObjectRetain();
                swift_unknownObjectRetain();
                if (v669(v667, 1, v668))
                {
                  uint64_t v670 = type metadata accessor for FeedItem.SharedState(0);
                  memcpy(v973, v667, *(void *)(*(void *)(v670 - 8) + 64));
                }
                else
                {
                  uint64_t v771 = sub_1C151631C();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v771 - 8) + 16))(v973, v667, v771);
                  v973[v668[5]] = v667[v668[5]];
                  uint64_t v772 = v668[6];
                  uint64_t v773 = *(void **)&v667[v772];
                  *(void *)&v973[v772] = v773;
                  uint64_t v774 = v668[7];
                  __dstd = &v667[v774];
                  long long v989 = &v973[v774];
                  uint64_t v775 = sub_1C1515FDC();
                  uint64_t v964 = *(void (**)(char *, char *, uint64_t))(*(void *)(v775 - 8) + 16);
                  id v776 = v773;
                  v964(v989, __dstd, v775);
                  (*(void (**)(char *, void, uint64_t, int *))(v968 + 56))(v973, 0, 1, v668);
                }
                v664[v1000[7]] = v665[v1000[7]];
                v664[v1000[8]] = v665[v1000[8]];
                v664[v1000[9]] = v665[v1000[9]];
                v664[v1000[10]] = v665[v1000[10]];
                uint64_t v777 = v1010[11];
                uint64_t v778 = (char *)v639 + v777;
                uint64_t v779 = (char *)v640 + v777;
                uint64_t v780 = sub_1C151D2DC();
                uint64_t v781 = *(void *)(v780 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v781 + 48))(v779, 1, v780))
                {
                  sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
                  memcpy(v778, v779, *(void *)(*(void *)(v782 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(v781 + 16))(v778, v779, v780);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v781 + 56))(v778, 0, 1, v780);
                }
                uint64_t v789 = v1010[12];
                uint64_t v790 = (void *)((char *)v639 + v789);
                uint64_t v791 = (void *)((char *)v640 + v789);
                if (v791[1] >= 0x11uLL)
                {
                  *uint64_t v790 = *v791;
                  v790[1] = v791[1];
                  swift_bridgeObjectRetain();
                }
                else
                {
                  *(_OWORD *)uint64_t v790 = *(_OWORD *)v791;
                }
                uint64_t v792 = v1010[13];
                unint64_t v793 = *(void *)((char *)v640 + v792);
                if (v793 >= 2)
                {
                  if (v793 == 2)
                  {
                    *(void *)((char *)v639 + v792) = 2;
                  }
                  else
                  {
                    *(void *)((char *)v639 + v792) = v793;
                    swift_unknownObjectRetain();
                  }
                }
                else
                {
                  *(void *)((char *)v639 + v792) = v793;
                }
                uint64_t v830 = v1010[14];
                long long v831 = *(void **)((char *)v640 + v830);
                *(void *)((char *)v639 + v830) = v831;
                id v832 = v831;
                goto LABEL_578;
              case 4u:
                *uint64_t v639 = *v640;
                uint64_t v654 = v640[1];
                *((unsigned char *)v639 + 16) = *((unsigned char *)v640 + 16);
                v639[1] = v654;
                if (v640[4] >= 0x11uLL)
                {
                  v639[3] = v640[3];
                  v639[4] = v640[4];
                  swift_bridgeObjectRetain();
                }
                else
                {
                  *(_OWORD *)(v639 + 3) = *(_OWORD *)(v640 + 3);
                }
                v639[5] = v640[5];
                v639[6] = v640[6];
                uint64_t v716 = (int *)type metadata accessor for FeedWebEmbed();
                uint64_t v717 = v716[8];
                uint64_t v1012 = (char *)v639 + v717;
                uint64_t v718 = (char *)v640 + v717;
                uint64_t v719 = sub_1C1515FDC();
                uint64_t v720 = *(void *)(v719 - 8);
                uint64_t v721 = *(void (**)(char *, char *, uint64_t))(v720 + 16);
                swift_bridgeObjectRetain();
                v721(v1012, v718, v719);
                uint64_t v1013 = v716;
                uint64_t v722 = v716[9];
                v723 = (char *)v639 + v722;
                uint64_t v724 = (char *)v640 + v722;
                uint64_t v988 = v719;
                uint64_t v974 = v721;
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v720 + 48))((char *)v640 + v722, 1, v719))
                {
                  sub_1BFEEF2C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
                  memcpy(v723, v724, *(void *)(*(void *)(v725 - 8) + 64));
                }
                else
                {
                  v721(v723, v724, v719);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v720 + 56))(v723, 0, 1, v719);
                }
                *(void *)((char *)v639 + v716[10]) = *(void *)((char *)v640 + v716[10]);
                *(void *)((char *)v639 + v716[11]) = *(void *)((char *)v640 + v716[11]);
                uint64_t v749 = v716[12];
                uint64_t v750 = (void *)((char *)v639 + v749);
                long long v1002 = (void *)((char *)v640 + v749);
                uint64_t v751 = type metadata accessor for FeedHeadline(0);
                uint64_t v752 = *(void **)(v751 - 8);
                uint64_t v753 = (unsigned int (*)(void *, uint64_t, uint64_t))v752[6];
                swift_retain();
                swift_retain();
                if (v753(v1002, 1, v751))
                {
                  sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
                  memcpy(v750, v1002, *(void *)(*(void *)(v754 - 8) + 64));
                }
                else
                {
                  uint64_t v960 = v752;
                  uint64_t v963 = (int *)v751;
                  void *v750 = *v1002;
                  v750[1] = v1002[1];
                  uint64_t v760 = v1002[2];
                  *((unsigned char *)v750 + 24) = *((unsigned char *)v1002 + 24);
                  v750[2] = v760;
                  v750[4] = v1002[4];
                  v750[5] = v1002[5];
                  v750[6] = v1002[6];
                  *((unsigned char *)v750 + 56) = *((unsigned char *)v1002 + 56);
                  uint64_t v761 = *(int *)(v751 + 40);
                  id v762 = (char *)v750 + v761;
                  uint64_t v763 = (char *)v1002 + v761;
                  *id v762 = *((unsigned char *)v1002 + v761);
                  v762[1] = *((unsigned char *)v1002 + v761 + 1);
                  uint64_t v957 = (int *)type metadata accessor for FeedHeadline.State(0);
                  uint64_t v764 = v957[6];
                  uint64_t v955 = &v762[v764];
                  uint64_t v765 = &v763[v764];
                  uint64_t v766 = (int *)type metadata accessor for SharedItem();
                  uint64_t v952 = *((void *)v766 - 1);
                  uint64_t v767 = *(unsigned int (**)(char *, uint64_t, int *))(v952 + 48);
                  swift_bridgeObjectRetain();
                  swift_unknownObjectRetain();
                  swift_unknownObjectRetain();
                  if (v767(v765, 1, v766))
                  {
                    uint64_t v768 = type metadata accessor for FeedItem.SharedState(0);
                    memcpy(v955, v765, *(void *)(*(void *)(v768 - 8) + 64));
                  }
                  else
                  {
                    uint64_t v850 = sub_1C151631C();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v850 - 8) + 16))(v955, v765, v850);
                    v955[v766[5]] = v765[v766[5]];
                    uint64_t v851 = v766[6];
                    uint64_t v852 = *(void **)&v765[v851];
                    *(void *)&v955[v851] = v852;
                    uint64_t v853 = v766[7];
                    uint64_t v854 = &v955[v853];
                    uint64_t v855 = &v765[v853];
                    id v856 = v852;
                    v974(v854, v855, v988);
                    (*(void (**)(char *, void, uint64_t, int *))(v952 + 56))(v955, 0, 1, v766);
                  }
                  v762[v957[7]] = v763[v957[7]];
                  v762[v957[8]] = v763[v957[8]];
                  v762[v957[9]] = v763[v957[9]];
                  v762[v957[10]] = v763[v957[10]];
                  uint64_t v857 = v963[11];
                  uint64_t v858 = (char *)v750 + v857;
                  uint64_t v859 = (char *)v1002 + v857;
                  uint64_t v860 = sub_1C151D2DC();
                  uint64_t v861 = *(void *)(v860 - 8);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v861 + 48))(v859, 1, v860))
                  {
                    sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
                    memcpy(v858, v859, *(void *)(*(void *)(v862 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(v861 + 16))(v858, v859, v860);
                    (*(void (**)(char *, void, uint64_t, uint64_t))(v861 + 56))(v858, 0, 1, v860);
                  }
                  uint64_t v863 = v963[12];
                  id v864 = (void *)((char *)v750 + v863);
                  long long v865 = (void *)((char *)v1002 + v863);
                  if (v865[1] >= 0x11uLL)
                  {
                    void *v864 = *v865;
                    v864[1] = v865[1];
                    swift_bridgeObjectRetain();
                  }
                  else
                  {
                    *(_OWORD *)id v864 = *(_OWORD *)v865;
                  }
                  uint64_t v866 = v963[13];
                  unint64_t v867 = *(void *)((char *)v1002 + v866);
                  if (v867 >= 2)
                  {
                    if (v867 == 2)
                    {
                      *(void *)((char *)v750 + v866) = 2;
                    }
                    else
                    {
                      *(void *)((char *)v750 + v866) = v867;
                      swift_unknownObjectRetain();
                    }
                  }
                  else
                  {
                    *(void *)((char *)v750 + v866) = v867;
                  }
                  uint64_t v886 = v963[14];
                  long long v887 = *(void **)((char *)v1002 + v886);
                  *(void *)((char *)v750 + v886) = v887;
                  uint64_t v888 = (void (*)(void *, void, uint64_t, int *))v960[7];
                  id v889 = v887;
                  v888(v750, 0, 1, v963);
                }
                uint64_t v890 = v1013[13];
                uint64_t v891 = (void *)((char *)v639 + v890);
                uint64_t v892 = (void *)((char *)v640 + v890);
                uint64_t v893 = type metadata accessor for WebEmbedDataVisualization();
                uint64_t v894 = *(void *)(v893 - 8);
                if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v894 + 48))(v892, 1, v893))
                {
                  sub_1BFEEF2C0(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
                  memcpy(v891, v892, *(void *)(*(void *)(v895 - 8) + 64));
                }
                else
                {
                  int v896 = swift_getEnumCaseMultiPayload();
                  *uint64_t v891 = *v892;
                  if (v896 == 1)
                  {
                    v891[1] = v892[1];
                    uint64_t v897 = type metadata accessor for GenericDataVisualization();
                    uint64_t v898 = *(int *)(v897 + 20);
                    uint64_t v1003 = (char *)v891 + v898;
                    uint64_t v899 = (char *)v892 + v898;
                    swift_bridgeObjectRetain();
                    v974(v1003, v899, v988);
                    *(void *)((char *)v891 + *(int *)(v897 + 24)) = *(void *)((char *)v892 + *(int *)(v897 + 24));
                    swift_bridgeObjectRetain();
                  }
                  else
                  {
                    swift_retain();
                  }
                  swift_storeEnumTagMultiPayload();
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v894 + 56))(v891, 0, 1, v893);
                }
                *((unsigned char *)v639 + v1013[14]) = *((unsigned char *)v640 + v1013[14]);
                goto LABEL_578;
              case 5u:
                uint64_t v671 = (void *)*v640;
                *uint64_t v639 = *v640;
                v639[1] = v640[1];
                v639[2] = v640[2];
                *((unsigned char *)v639 + 24) = *((unsigned char *)v640 + 24);
                *((unsigned char *)v639 + 25) = *((unsigned char *)v640 + 25);
                uint64_t v672 = v640[4];
                *((unsigned char *)v639 + 40) = *((unsigned char *)v640 + 40);
                v639[4] = v672;
                v639[6] = v640[6];
                uint64_t v673 = (void *)v640[7];
                v639[7] = v673;
                *((unsigned char *)v639 + 64) = *((unsigned char *)v640 + 64);
                uint64_t v674 = v640[10];
                id v675 = v671;
                swift_bridgeObjectRetain();
                id v676 = v673;
                if (v674 == 1)
                {
                  long long v677 = *(_OWORD *)(v640 + 9);
                  long long v678 = *(_OWORD *)(v640 + 13);
                  *(_OWORD *)(v639 + 11) = *(_OWORD *)(v640 + 11);
                  *(_OWORD *)(v639 + 13) = v678;
                  *(_OWORD *)(v639 + 9) = v677;
                }
                else
                {
                  v639[9] = v640[9];
                  v639[10] = v640[10];
                  v639[11] = v640[11];
                  v639[12] = v640[12];
                  uint64_t v726 = (void *)v640[13];
                  v639[13] = v726;
                  v639[14] = v640[14];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  id v727 = v726;
                }
                if (v640[16] >= 0x11uLL)
                {
                  v639[15] = v640[15];
                  v639[16] = v640[16];
                  swift_bridgeObjectRetain();
                }
                else
                {
                  *(_OWORD *)(v639 + 15) = *(_OWORD *)(v640 + 15);
                }
                *((unsigned char *)v639 + 136) = *((unsigned char *)v640 + 136);
                goto LABEL_578;
              case 6u:
                int v679 = *((unsigned __int8 *)v640 + 281);
                if (v679 == 2)
                {
                  *uint64_t v639 = *v640;
                  v639[1] = v640[1];
                  v639[2] = v640[2];
                  *((unsigned char *)v639 + 24) = *((unsigned char *)v640 + 24);
                  uint64_t v801 = v640[4];
                  *((unsigned char *)v639 + 40) = *((unsigned char *)v640 + 40);
                  v639[4] = v801;
                  v639[6] = v640[6];
                  v639[7] = v640[7];
                  v639[8] = v640[8];
                  v639[9] = v640[9];
                  uint64_t v802 = v640[11];
                  swift_bridgeObjectRetain();
                  swift_unknownObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  if (v802 == 1)
                  {
                    *((_OWORD *)v639 + 5) = *((_OWORD *)v640 + 5);
                    long long v803 = *((_OWORD *)v640 + 6);
                    long long v804 = *((_OWORD *)v640 + 7);
                    long long v805 = *((_OWORD *)v640 + 8);
                    *((unsigned char *)v639 + 144) = *((unsigned char *)v640 + 144);
                    *((_OWORD *)v639 + 7) = v804;
                    *((_OWORD *)v639 + 8) = v805;
                    *((_OWORD *)v639 + 6) = v803;
                  }
                  else
                  {
                    v639[10] = v640[10];
                    v639[11] = v640[11];
                    uint64_t v838 = v640[15];
                    swift_bridgeObjectRetain();
                    if (v838)
                    {
                      v639[15] = v838;
                      v639[16] = v640[16];
                      (**(void (***)(uint64_t, uint64_t, uint64_t))(v838 - 8))((uint64_t)(v639 + 12), (uint64_t)(v640 + 12), v838);
                      char v839 = *((unsigned char *)v640 + 144);
                      v639[17] = v640[17];
                      *((unsigned char *)v639 + 144) = v839;
                    }
                    else
                    {
                      long long v922 = *((_OWORD *)v640 + 6);
                      long long v923 = *((_OWORD *)v640 + 7);
                      long long v924 = *((_OWORD *)v640 + 8);
                      *((unsigned char *)v639 + 144) = *((unsigned char *)v640 + 144);
                      *((_OWORD *)v639 + 7) = v923;
                      *((_OWORD *)v639 + 8) = v924;
                      *((_OWORD *)v639 + 6) = v922;
                    }
                  }
                }
                else if (v679 == 1)
                {
                  uint64_t v680 = (void *)*v640;
                  *uint64_t v639 = *v640;
                  v639[1] = v640[1];
                  v639[2] = v640[2];
                  *((unsigned char *)v639 + 24) = *((unsigned char *)v640 + 24);
                  *((unsigned char *)v639 + 25) = *((unsigned char *)v640 + 25);
                  uint64_t v681 = v640[4];
                  *((unsigned char *)v639 + 40) = *((unsigned char *)v640 + 40);
                  v639[4] = v681;
                  v639[6] = v640[6];
                  uint64_t v682 = (void *)v640[7];
                  v639[7] = v682;
                  *((unsigned char *)v639 + 64) = *((unsigned char *)v640 + 64);
                  uint64_t v683 = v640[10];
                  id v684 = v680;
                  swift_bridgeObjectRetain();
                  id v685 = v682;
                  if (v683 == 1)
                  {
                    long long v686 = *(_OWORD *)(v640 + 9);
                    long long v687 = *(_OWORD *)(v640 + 13);
                    *(_OWORD *)(v639 + 11) = *(_OWORD *)(v640 + 11);
                    *(_OWORD *)(v639 + 13) = v687;
                    *(_OWORD *)(v639 + 9) = v686;
                  }
                  else
                  {
                    v639[9] = v640[9];
                    v639[10] = v640[10];
                    v639[11] = v640[11];
                    v639[12] = v640[12];
                    uint64_t v836 = (void *)v640[13];
                    v639[13] = v836;
                    v639[14] = v640[14];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    id v837 = v836;
                  }
                  if (v640[16] >= 0x11uLL)
                  {
                    v639[15] = v640[15];
                    v639[16] = v640[16];
                    swift_bridgeObjectRetain();
                  }
                  else
                  {
                    *(_OWORD *)(v639 + 15) = *(_OWORD *)(v640 + 15);
                  }
                  *((unsigned char *)v639 + 136) = *((unsigned char *)v640 + 136);
                  uint64_t v842 = (void *)v640[18];
                  if (v842)
                  {
                    v639[18] = v842;
                    v639[19] = v640[19];
                    v639[20] = v640[20];
                    *((unsigned char *)v639 + 168) = *((unsigned char *)v640 + 168);
                    *((unsigned char *)v639 + 169) = *((unsigned char *)v640 + 169);
                    uint64_t v843 = v640[22];
                    *((unsigned char *)v639 + 184) = *((unsigned char *)v640 + 184);
                    v639[22] = v843;
                    v639[24] = v640[24];
                    id v844 = (void *)v640[25];
                    v639[25] = v844;
                    *((unsigned char *)v639 + 208) = *((unsigned char *)v640 + 208);
                    uint64_t v845 = v640[28];
                    id v846 = v842;
                    swift_bridgeObjectRetain();
                    id v847 = v844;
                    if (v845 == 1)
                    {
                      long long v848 = *(_OWORD *)(v640 + 27);
                      long long v849 = *(_OWORD *)(v640 + 31);
                      *(_OWORD *)(v639 + 29) = *(_OWORD *)(v640 + 29);
                      *(_OWORD *)(v639 + 31) = v849;
                      *(_OWORD *)(v639 + 27) = v848;
                    }
                    else
                    {
                      v639[27] = v640[27];
                      v639[28] = v640[28];
                      v639[29] = v640[29];
                      v639[30] = v640[30];
                      uint64_t v874 = (void *)v640[31];
                      v639[31] = v874;
                      v639[32] = v640[32];
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      id v875 = v874;
                    }
                    if (v640[34] >= 0x11uLL)
                    {
                      v639[33] = v640[33];
                      v639[34] = v640[34];
                      swift_bridgeObjectRetain();
                    }
                    else
                    {
                      *(_OWORD *)(v639 + 33) = *(_OWORD *)(v640 + 33);
                    }
                    *((unsigned char *)v639 + 280) = *((unsigned char *)v640 + 280);
                  }
                  else
                  {
                    *((_OWORD *)v639 + 9) = *((_OWORD *)v640 + 9);
                    long long v868 = *((_OWORD *)v640 + 10);
                    long long v869 = *((_OWORD *)v640 + 11);
                    long long v870 = *((_OWORD *)v640 + 13);
                    *((_OWORD *)v639 + 12) = *((_OWORD *)v640 + 12);
                    *((_OWORD *)v639 + 13) = v870;
                    *((_OWORD *)v639 + 10) = v868;
                    *((_OWORD *)v639 + 11) = v869;
                    long long v871 = *((_OWORD *)v640 + 14);
                    long long v872 = *((_OWORD *)v640 + 15);
                    long long v873 = *((_OWORD *)v640 + 16);
                    *(_OWORD *)((char *)v639 + 265) = *(_OWORD *)((char *)v640 + 265);
                    *((_OWORD *)v639 + 15) = v872;
                    *((_OWORD *)v639 + 16) = v873;
                    *((_OWORD *)v639 + 14) = v871;
                  }
                }
                else
                {
                  uint64_t v806 = (void *)*v640;
                  *uint64_t v639 = *v640;
                  v639[1] = v640[1];
                  v639[2] = v640[2];
                  *((unsigned char *)v639 + 24) = *((unsigned char *)v640 + 24);
                  *((unsigned char *)v639 + 25) = *((unsigned char *)v640 + 25);
                  uint64_t v807 = v640[4];
                  *((unsigned char *)v639 + 40) = *((unsigned char *)v640 + 40);
                  v639[4] = v807;
                  v639[6] = v640[6];
                  uint64_t v808 = (void *)v640[7];
                  v639[7] = v808;
                  *((unsigned char *)v639 + 64) = *((unsigned char *)v640 + 64);
                  uint64_t v809 = v640[10];
                  id v810 = v806;
                  swift_bridgeObjectRetain();
                  id v811 = v808;
                  if (v809 == 1)
                  {
                    long long v812 = *(_OWORD *)(v640 + 9);
                    long long v813 = *(_OWORD *)(v640 + 13);
                    *(_OWORD *)(v639 + 11) = *(_OWORD *)(v640 + 11);
                    *(_OWORD *)(v639 + 13) = v813;
                    *(_OWORD *)(v639 + 9) = v812;
                  }
                  else
                  {
                    v639[9] = v640[9];
                    v639[10] = v640[10];
                    v639[11] = v640[11];
                    v639[12] = v640[12];
                    uint64_t v840 = (void *)v640[13];
                    v639[13] = v840;
                    v639[14] = v640[14];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    id v841 = v840;
                  }
                  if (v640[16] >= 0x11uLL)
                  {
                    v639[15] = v640[15];
                    v639[16] = v640[16];
                    swift_bridgeObjectRetain();
                  }
                  else
                  {
                    *(_OWORD *)(v639 + 15) = *(_OWORD *)(v640 + 15);
                  }
                  *((unsigned char *)v639 + 136) = *((unsigned char *)v640 + 136);
                }
                *((unsigned char *)v639 + 281) = v679;
                goto LABEL_578;
              case 7u:
                *uint64_t v639 = *v640;
                v639[1] = v640[1];
                v639[2] = v640[2];
                *((unsigned char *)v639 + 24) = *((unsigned char *)v640 + 24);
                uint64_t v688 = v640[4];
                *((unsigned char *)v639 + 40) = *((unsigned char *)v640 + 40);
                v639[4] = v688;
                v639[6] = v640[6];
                v639[7] = v640[7];
                v639[8] = v640[8];
                v639[9] = v640[9];
                uint64_t v689 = v640[11];
                swift_bridgeObjectRetain();
                swift_unknownObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (v689 == 1)
                {
                  *((_OWORD *)v639 + 5) = *((_OWORD *)v640 + 5);
                  long long v690 = *((_OWORD *)v640 + 6);
                  long long v691 = *((_OWORD *)v640 + 7);
                  long long v692 = *((_OWORD *)v640 + 8);
                  *((unsigned char *)v639 + 144) = *((unsigned char *)v640 + 144);
                  *((_OWORD *)v639 + 7) = v691;
                  *((_OWORD *)v639 + 8) = v692;
                  *((_OWORD *)v639 + 6) = v690;
                }
                else
                {
                  v639[10] = v640[10];
                  v639[11] = v640[11];
                  uint64_t v728 = v640[15];
                  swift_bridgeObjectRetain();
                  if (v728)
                  {
                    v639[15] = v728;
                    v639[16] = v640[16];
                    (**(void (***)(uint64_t, uint64_t, uint64_t))(v728 - 8))((uint64_t)(v639 + 12), (uint64_t)(v640 + 12), v728);
                    char v729 = *((unsigned char *)v640 + 144);
                    v639[17] = v640[17];
                    *((unsigned char *)v639 + 144) = v729;
                  }
                  else
                  {
                    long long v833 = *((_OWORD *)v640 + 6);
                    long long v834 = *((_OWORD *)v640 + 7);
                    long long v835 = *((_OWORD *)v640 + 8);
                    *((unsigned char *)v639 + 144) = *((unsigned char *)v640 + 144);
                    *((_OWORD *)v639 + 7) = v834;
                    *((_OWORD *)v639 + 8) = v835;
                    *((_OWORD *)v639 + 6) = v833;
                  }
                }
                goto LABEL_578;
              case 8u:
                *uint64_t v639 = *v640;
                v639[1] = v640[1];
                uint64_t v693 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
                long long v694 = (void *)((char *)v639 + v693);
                int v695 = (char *)v640 + v693;
                *long long v694 = *(void *)((char *)v640 + v693);
                v694[1] = *(void *)((char *)v640 + v693 + 8);
                v694[2] = *(void *)((char *)v640 + v693 + 16);
                v694[3] = *(void *)((char *)v640 + v693 + 24);
                uint64_t v696 = type metadata accessor for FormatCustomItem.Resolved();
                uint64_t v697 = *(int *)(v696 + 24);
                uint64_t v1001 = (char *)v694 + v697;
                uint64_t v1011 = v696;
                uint64_t v698 = &v695[v697];
                uint64_t v699 = type metadata accessor for FormatCustomItem.Action();
                uint64_t v987 = *(void *)(v699 - 8);
                id v700 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v987 + 48);
                uint64_t v701 = v699;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (v700(v698, 1, v701))
                {
                  sub_1BFEEF2C0(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
                  memcpy(v1001, v698, *(void *)(*(void *)(v702 - 8) + 64));
                }
                else
                {
                  uint64_t v783 = sub_1C1515FDC();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v783 - 8) + 16))(v1001, v698, v783);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v987 + 56))(v1001, 0, 1, v701);
                }
                *(void *)((char *)v694 + *(int *)(v1011 + 28)) = *(void *)&v695[*(int *)(v1011 + 28)];
                swift_bridgeObjectRetain();
                swift_storeEnumTagMultiPayload();
                goto LABEL_579;
              case 9u:
                *uint64_t v639 = *v640;
                v639[1] = v640[1];
                v639[2] = v640[2];
                v639[3] = v640[3];
                uint64_t v655 = v640[7];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (v655)
                {
                  v639[7] = v655;
                  v639[8] = v640[8];
                  (**(void (***)(uint64_t, uint64_t, uint64_t))(v655 - 8))((uint64_t)(v639 + 4), (uint64_t)(v640 + 4), v655);
                }
                else
                {
                  long long v744 = *((_OWORD *)v640 + 2);
                  long long v745 = *((_OWORD *)v640 + 3);
                  v639[8] = v640[8];
                  *((_OWORD *)v639 + 2) = v744;
                  *((_OWORD *)v639 + 3) = v745;
                }
                uint64_t v746 = v639 + 9;
                v747 = (long long *)(v640 + 9);
                uint64_t v748 = v640[12];
                if (v748)
                {
                  v639[12] = v748;
                  v639[13] = v640[13];
                  (**(void (***)(_OWORD *, long long *))(v748 - 8))(v746, v747);
                }
                else
                {
                  long long v755 = *v747;
                  long long v756 = *(_OWORD *)(v640 + 11);
                  v639[13] = v640[13];
                  *uint64_t v746 = v755;
                  *(_OWORD *)(v639 + 11) = v756;
                }
                uint64_t v757 = v639 + 14;
                uint64_t v758 = (long long *)(v640 + 14);
                uint64_t v759 = v640[17];
                if (v759)
                {
                  v639[17] = v759;
                  v639[18] = v640[18];
                  (**(void (***)(_OWORD *, long long *))(v759 - 8))(v757, v758);
                }
                else
                {
                  long long v769 = *v758;
                  long long v770 = *((_OWORD *)v640 + 8);
                  v639[18] = v640[18];
                  _OWORD *v757 = v769;
                  *((_OWORD *)v639 + 8) = v770;
                }
                goto LABEL_578;
              case 0xAu:
                *uint64_t v639 = *v640;
                v639[1] = v640[1];
                uint64_t v703 = (int *)type metadata accessor for FeedEngagementBanner();
                uint64_t v704 = v703[5];
                uint64_t v705 = (char *)v639 + v704;
                uint64_t v706 = (char *)v640 + v704;
                uint64_t v707 = sub_1C151959C();
                long long v708 = *(void (**)(char *, char *, uint64_t))(*(void *)(v707 - 8) + 16);
                swift_bridgeObjectRetain();
                v708(v705, v706, v707);
                *(void *)((char *)v639 + v703[6]) = *(void *)((char *)v640 + v703[6]);
                uint64_t v709 = v703[7];
                uint64_t v710 = (char *)v639 + v709;
                uint64_t v711 = (char *)v640 + v709;
                char v712 = v711[8];
                *(void *)uint64_t v710 = *(void *)v711;
                v710[8] = v712;
                uint64_t v713 = v703[8];
                uint64_t v41 = (char *)v639 + v713;
                uint64_t v42 = (char *)v640 + v713;
                if (*((void *)v42 + 1) >= 0x11uLL) {
                  goto LABEL_113;
                }
                *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
                goto LABEL_578;
              case 0xBu:
                *uint64_t v639 = *v640;
                swift_retain();
                goto LABEL_578;
              case 0xCu:
                *uint64_t v639 = *v640;
                v639[1] = v640[1];
                v639[2] = v640[2];
                uint64_t v656 = v640[3];
                *((unsigned char *)v639 + 32) = *((unsigned char *)v640 + 32);
                v639[3] = v656;
                swift_bridgeObjectRetain();
                swift_unknownObjectRetain();
                goto LABEL_578;
              case 0xDu:
                *uint64_t v639 = *v640;
                uint64_t v714 = v640[1];
                *((unsigned char *)v639 + 16) = *((unsigned char *)v640 + 16);
                v639[1] = v714;
                if (v640[4] >= 0x11uLL)
                {
                  v639[3] = v640[3];
                  v639[4] = v640[4];
                  swift_bridgeObjectRetain();
                }
                else
                {
                  *(_OWORD *)(v639 + 3) = *(_OWORD *)(v640 + 3);
                }
                v639[5] = v640[5];
                v639[6] = v640[6];
                v639[7] = v640[7];
                uint64_t v730 = (void *)v640[8];
                v639[8] = v730;
                *((unsigned char *)v639 + 72) = *((unsigned char *)v640 + 72);
                v639[10] = v640[10];
                uint64_t v731 = v640[14];
                swift_bridgeObjectRetain();
                swift_unknownObjectRetain();
                id v732 = v730;
                swift_bridgeObjectRetain();
                if (v731)
                {
                  v639[14] = v731;
                  v639[15] = v640[15];
                  (**(void (***)(uint64_t, uint64_t, uint64_t))(v731 - 8))((uint64_t)(v639 + 11), (uint64_t)(v640 + 11), v731);
                }
                else
                {
                  long long v784 = *(_OWORD *)(v640 + 11);
                  long long v785 = *(_OWORD *)(v640 + 13);
                  v639[15] = v640[15];
                  *(_OWORD *)(v639 + 11) = v784;
                  *(_OWORD *)(v639 + 13) = v785;
                }
                long long v786 = v639 + 16;
                v787 = (long long *)(v640 + 16);
                uint64_t v788 = v640[19];
                if (v788)
                {
                  v639[19] = v788;
                  v639[20] = v640[20];
                  (**(void (***)(_OWORD *, long long *))(v788 - 8))(v786, v787);
                }
                else
                {
                  long long v794 = *v787;
                  long long v795 = *((_OWORD *)v640 + 9);
                  v639[20] = v640[20];
                  *long long v786 = v794;
                  *((_OWORD *)v639 + 9) = v795;
                }
                uint64_t v796 = v639 + 21;
                v797 = (long long *)(v640 + 21);
                uint64_t v798 = v640[24];
                if (v798)
                {
                  v639[24] = v798;
                  v639[25] = v640[25];
                  (**(void (***)(_OWORD *, long long *))(v798 - 8))(v796, v797);
                }
                else
                {
                  long long v799 = *v797;
                  long long v800 = *(_OWORD *)(v640 + 23);
                  v639[25] = v640[25];
                  _OWORD *v796 = v799;
                  *(_OWORD *)(v639 + 23) = v800;
                }
                goto LABEL_578;
              case 0xEu:
                *uint64_t v639 = *v640;
                uint64_t v657 = v640[1];
                *((unsigned char *)v639 + 16) = *((unsigned char *)v640 + 16);
                v639[1] = v657;
                if (v640[4] >= 0x11uLL)
                {
                  v639[3] = v640[3];
                  v639[4] = v640[4];
                  swift_bridgeObjectRetain();
                }
                else
                {
                  *(_OWORD *)(v639 + 3) = *(_OWORD *)(v640 + 3);
                }
                v639[5] = v640[5];
                v639[6] = v640[6];
                v639[7] = v640[7];
                swift_bridgeObjectRetain();
                swift_unknownObjectRetain();
                goto LABEL_578;
              case 0xFu:
                *uint64_t v639 = *v640;
                uint64_t v715 = v640[1];
                *((unsigned char *)v639 + 16) = *((unsigned char *)v640 + 16);
                v639[1] = v715;
                if (v640[4] >= 0x11uLL)
                {
                  v639[3] = v640[3];
                  v639[4] = v640[4];
                  swift_bridgeObjectRetain();
                }
                else
                {
                  *(_OWORD *)(v639 + 3) = *(_OWORD *)(v640 + 3);
                }
                break;
              case 0x10u:
                *uint64_t v639 = *v640;
                v639[1] = v640[1];
                v639[2] = v640[2];
                v639[3] = v640[3];
                v639[4] = v640[4];
                v639[5] = v640[5];
                *((unsigned char *)v639 + 48) = *((unsigned char *)v640 + 48);
                *((unsigned char *)v639 + 49) = *((unsigned char *)v640 + 49);
                v639[7] = v640[7];
                v639[8] = v640[8];
                v639[9] = v640[9];
                v639[10] = v640[10];
                v639[11] = v640[11];
                v639[12] = v640[12];
                v639[13] = v640[13];
                *((unsigned char *)v639 + 112) = *((unsigned char *)v640 + 112);
                v639[15] = v640[15];
                v639[16] = v640[16];
                *((unsigned char *)v639 + 136) = *((unsigned char *)v640 + 136);
                v639[18] = v640[18];
                v639[19] = v640[19];
                v639[20] = v640[20];
                v639[21] = v640[21];
                uint64_t v658 = v640[22];
                *((unsigned char *)v639 + 184) = *((unsigned char *)v640 + 184);
                v639[22] = v658;
                v639[24] = v640[24];
                v639[25] = v640[25];
                v639[26] = v640[26];
                uint64_t v659 = v640[27];
                *((unsigned char *)v639 + 224) = *((unsigned char *)v640 + 224);
                v639[27] = v659;
                unint64_t v986 = v640[30];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (v986 >= 0x11)
                {
                  v639[29] = v640[29];
                  v639[30] = v640[30];
                  swift_bridgeObjectRetain();
                }
                else
                {
                  *(_OWORD *)(v639 + 29) = *(_OWORD *)(v640 + 29);
                }
                goto LABEL_578;
              default:
                memcpy(v639, v640, *(void *)(*(void *)(v5 - 8) + 64));
                goto LABEL_579;
            }
            v639[5] = v640[5];
            v639[6] = v640[6];
            uint64_t v733 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
            uint64_t v734 = (char *)v639 + v733;
            unint64_t v735 = (void *)((char *)v640 + v733);
            *(void *)((char *)v639 + v733) = *v735;
            uint64_t v736 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
            uint64_t v737 = &v734[v736];
            unint64_t v738 = (void *)((char *)v735 + v736);
            type metadata accessor for PuzzleStatisticCategory(0);
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
                uint64_t v817 = type metadata accessor for PuzzleStatisticValue(0);
                int v818 = swift_getEnumCaseMultiPayload();
                if (v818 == 5)
                {
                  uint64_t v819 = type metadata accessor for PuzzleStreak();
                  uint64_t v820 = *(void *)(v819 - 8);
                  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v820 + 48))(v738, 1, v819))
                  {
LABEL_544:
                    sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                    memcpy(v737, v738, *(void *)(*(void *)(v921 - 8) + 64));
                    goto LABEL_558;
                  }
                }
                else
                {
                  if (v818 != 4)
                  {
                    memcpy(v737, v738, *(void *)(*(void *)(v817 - 8) + 64));
                    goto LABEL_559;
                  }
                  uint64_t v819 = type metadata accessor for PuzzleStreak();
                  uint64_t v820 = *(void *)(v819 - 8);
                  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v820 + 48))(v738, 1, v819)) {
                    goto LABEL_544;
                  }
                }
                uint64_t v932 = sub_1C151555C();
                (*(void (**)(char *, void *, uint64_t))(*(void *)(v932 - 8) + 16))(v737, v738, v932);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v820 + 56))(v737, 0, 1, v819);
LABEL_558:
                swift_storeEnumTagMultiPayload();
LABEL_559:
                uint64_t v933 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
                uint64_t v934 = *(int *)(v933 + 20);
                unint64_t v935 = v737;
                uint64_t v936 = &v737[v934];
                unint64_t v937 = (char *)v738 + v934;
                int v938 = swift_getEnumCaseMultiPayload();
                if (v938 == 5)
                {
                  uint64_t v939 = type metadata accessor for PuzzleStreak();
                  uint64_t v940 = *(void *)(v939 - 8);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v940 + 48))(v937, 1, v939))
                  {
LABEL_564:
                    sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                    memcpy(v936, v937, *(void *)(*(void *)(v941 - 8) + 64));
                    goto LABEL_567;
                  }
                }
                else
                {
                  if (v938 != 4)
                  {
                    memcpy(v936, v937, *(void *)(*(void *)(v817 - 8) + 64));
                    goto LABEL_568;
                  }
                  uint64_t v939 = type metadata accessor for PuzzleStreak();
                  uint64_t v940 = *(void *)(v939 - 8);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v940 + 48))(v937, 1, v939)) {
                    goto LABEL_564;
                  }
                }
                uint64_t v942 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v942 - 8) + 16))(v936, v937, v942);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v940 + 56))(v936, 0, 1, v939);
LABEL_567:
                swift_storeEnumTagMultiPayload();
LABEL_568:
                uint64_t v943 = *(int *)(v933 + 24);
                uint64_t v944 = (char *)v935 + v943;
                unint64_t v945 = (char *)v738 + v943;
                int v946 = swift_getEnumCaseMultiPayload();
                if (v946 == 5)
                {
                  uint64_t v947 = type metadata accessor for PuzzleStreak();
                  uint64_t v948 = *(void *)(v947 - 8);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v948 + 48))(v945, 1, v947))
                  {
LABEL_573:
                    sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                    memcpy(v944, v945, *(void *)(*(void *)(v949 - 8) + 64));
                    goto LABEL_576;
                  }
                }
                else
                {
                  if (v946 != 4)
                  {
                    memcpy(v944, v945, *(void *)(*(void *)(v817 - 8) + 64));
                    goto LABEL_577;
                  }
                  uint64_t v947 = type metadata accessor for PuzzleStreak();
                  uint64_t v948 = *(void *)(v947 - 8);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v948 + 48))(v945, 1, v947)) {
                    goto LABEL_573;
                  }
                }
                uint64_t v950 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v950 - 8) + 16))(v944, v945, v950);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v948 + 56))(v944, 0, 1, v947);
                goto LABEL_576;
              case 2u:
                uint64_t v814 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
                uint64_t v815 = *((void *)v814 - 1);
                if ((*(unsigned int (**)(void *, uint64_t, int *))(v815 + 48))(v738, 1, v814))
                {
                  sub_1BFEEF2C0(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
                  memcpy(v737, v738, *(void *)(*(void *)(v816 - 8) + 64));
                }
                else
                {
                  uint64_t v876 = sub_1C151631C();
                  (*(void (**)(char *, void *, uint64_t))(*(void *)(v876 - 8) + 16))(v737, v738, v876);
                  id v877 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
                  uint64_t v878 = v877[5];
                  unint64_t v879 = &v737[v878];
                  v880 = (void *)((char *)v738 + v878);
                  *(void *)unint64_t v879 = *v880;
                  *((void *)v879 + 1) = v880[1];
                  uint64_t v881 = v877[6];
                  uint64_t v991 = v737;
                  uint64_t v882 = &v737[v881];
                  int v883 = (void *)((char *)v738 + v881);
                  *(void *)uint64_t v882 = *v883;
                  *((void *)v882 + 1) = v883[1];
                  uint64_t v884 = v883 + 2;
                  unint64_t v885 = v883[3];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  if (v885 >> 60 == 15)
                  {
                    *((_OWORD *)v882 + 1) = *(_OWORD *)v884;
                  }
                  else
                  {
                    uint64_t v925 = *v884;
                    sub_1BFE95820(*v884, v885);
                    *((void *)v882 + 2) = v925;
                    *((void *)v882 + 3) = v885;
                  }
                  *(void *)((char *)v991 + v877[7]) = *(void *)((char *)v738 + v877[7]);
                  *(void *)((char *)v991 + v877[8]) = *(void *)((char *)v738 + v877[8]);
                  *(void *)((char *)v991 + v814[5]) = *(void *)((char *)v738 + v814[5]);
                  *(void *)((char *)v991 + v814[6]) = *(void *)((char *)v738 + v814[6]);
                  uint64_t v926 = v814[7];
                  int v927 = (void *)((char *)v991 + v926);
                  uint64_t v928 = (void *)((char *)v738 + v926);
                  *int v927 = *v928;
                  v927[1] = v928[1];
                  uint64_t v929 = *(void (**)(void *, void, uint64_t, int *))(v815 + 56);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  v929(v991, 0, 1, v814);
                }
                goto LABEL_577;
              case 3u:
                *(void *)uint64_t v737 = *v738;
                uint64_t v821 = v738[1];
                v737[16] = *((unsigned char *)v738 + 16);
                *((void *)v737 + 1) = v821;
                v822 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
                uint64_t v823 = v822[6];
                uint64_t v990 = v737;
                uint64_t v824 = &v737[v823];
                unint64_t v825 = (char *)v738 + v823;
                uint64_t v826 = type metadata accessor for PuzzleStreak();
                uint64_t v827 = *(void *)(v826 - 8);
                uint64_t v828 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v827 + 48);
                if (v828(v825, 1, v826))
                {
                  sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                  memcpy(v824, v825, *(void *)(*(void *)(v829 - 8) + 64));
                }
                else
                {
                  uint64_t v900 = sub_1C151555C();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v900 - 8) + 16))(v824, v825, v900);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v827 + 56))(v824, 0, 1, v826);
                }
                uint64_t v901 = v822[7];
                uint64_t v902 = (char *)v990 + v901;
                uint64_t v903 = (char *)v738 + v901;
                if (v828((char *)v738 + v901, 1, v826))
                {
                  sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                  memcpy(v902, v903, *(void *)(*(void *)(v904 - 8) + 64));
                }
                else
                {
                  uint64_t v905 = sub_1C151555C();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v905 - 8) + 16))(v902, v903, v905);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v827 + 56))(v902, 0, 1, v826);
                }
                uint64_t v906 = v822[8];
                long long v907 = (_OWORD *)((char *)v990 + v906);
                long long v908 = (long long *)((char *)v738 + v906);
                long long v909 = *v908;
                long long v910 = v908[1];
                *(_OWORD *)((char *)v907 + 25) = *(long long *)((char *)v908 + 25);
                _OWORD *v907 = v909;
                v907[1] = v910;
                uint64_t v911 = v822[9];
                uint64_t v912 = (_OWORD *)((char *)v990 + v911);
                long long v913 = (long long *)((char *)v738 + v911);
                long long v914 = *v913;
                long long v915 = v913[1];
                *(_OWORD *)((char *)v912 + 25) = *(long long *)((char *)v913 + 25);
                *uint64_t v912 = v914;
                v912[1] = v915;
                uint64_t v916 = v822[10];
                uint64_t v917 = (_OWORD *)((char *)v990 + v916);
                uint64_t v918 = (long long *)((char *)v738 + v916);
                long long v919 = *v918;
                long long v920 = v918[1];
                *(_OWORD *)((char *)v917 + 25) = *(long long *)((char *)v918 + 25);
                *uint64_t v917 = v919;
                v917[1] = v920;
                goto LABEL_577;
              default:
                uint64_t v739 = type metadata accessor for PuzzleStatisticValue(0);
                int v740 = swift_getEnumCaseMultiPayload();
                if (v740 == 5)
                {
                  uint64_t v741 = type metadata accessor for PuzzleStreak();
                  uint64_t v742 = *(void *)(v741 - 8);
                  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v742 + 48))(v738, 1, v741)) {
                    goto LABEL_443;
                  }
                }
                else
                {
                  if (v740 != 4)
                  {
                    memcpy(v737, v738, *(void *)(*(void *)(v739 - 8) + 64));
                    goto LABEL_577;
                  }
                  uint64_t v741 = type metadata accessor for PuzzleStreak();
                  uint64_t v742 = *(void *)(v741 - 8);
                  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v742 + 48))(v738, 1, v741))
                  {
LABEL_443:
                    sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                    memcpy(v737, v738, *(void *)(*(void *)(v743 - 8) + 64));
                    goto LABEL_576;
                  }
                }
                uint64_t v931 = sub_1C151555C();
                (*(void (**)(char *, void *, uint64_t))(*(void *)(v931 - 8) + 16))(v737, v738, v931);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v742 + 56))(v737, 0, 1, v741);
LABEL_576:
                swift_storeEnumTagMultiPayload();
LABEL_577:
                swift_storeEnumTagMultiPayload();
                break;
            }
            goto LABEL_578;
          }
          uint64_t v197 = type metadata accessor for PuzzleStreak();
          uint64_t v198 = *(void *)(v197 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v198 + 48))(v194, 1, v197)) {
            goto LABEL_106;
          }
        }
        uint64_t v599 = sub_1C151555C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v599 - 8) + 16))(v193, v194, v599);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v198 + 56))(v193, 0, 1, v197);
        goto LABEL_337;
    }
  }
  switch(v6)
  {
    case 0:
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      uint64_t v9 = *(void *)(a2 + 24);
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      *(void *)(a1 + 24) = v9;
      unint64_t v10 = *(void *)(a2 + 48);
      swift_bridgeObjectRetain();
      if (v10 >= 0x11)
      {
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      }
      goto LABEL_578;
    case 1:
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      uint64_t v105 = *(void *)(a2 + 24);
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      *(void *)(a1 + 24) = v105;
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      unint64_t v106 = *(void *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v106 >= 0x11)
      {
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      }
      goto LABEL_578;
    case 2:
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      uint64_t v30 = (int *)type metadata accessor for FeedBannerAd();
      uint64_t v31 = v30[5];
      uint64_t v32 = a1 + v31;
      uint64_t v33 = a2 + v31;
      uint64_t v34 = sub_1C151DBAC();
      uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16);
      swift_bridgeObjectRetain();
      v35(v32, v33, v34);
      *(void *)(a1 + v30[6]) = *(void *)(a2 + v30[6]);
      uint64_t v36 = v30[7];
      uint64_t v37 = a1 + v36;
      uint64_t v38 = a2 + v36;
      char v39 = *(unsigned char *)(v38 + 8);
      *(void *)uint64_t v37 = *(void *)v38;
      *(unsigned char *)(v37 + 8) = v39;
      uint64_t v40 = v30[8];
      uint64_t v41 = (char *)(a1 + v40);
      uint64_t v42 = (char *)(a2 + v40);
      if (*((void *)v42 + 1) >= 0x11uLL) {
        goto LABEL_113;
      }
      *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
      goto LABEL_578;
    case 3:
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      uint64_t v107 = *(void *)(a2 + 16);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      *(void *)(a1 + 16) = v107;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      id v1006 = (int *)type metadata accessor for FeedHeadline(0);
      uint64_t v108 = v1006[10];
      uint64_t v109 = (unsigned char *)(a1 + v108);
      uint64_t v110 = a2 + v108;
      *uint64_t v109 = *(unsigned char *)(a2 + v108);
      v109[1] = *(unsigned char *)(a2 + v108 + 1);
      uint64_t v996 = (int *)type metadata accessor for FeedHeadline.State(0);
      uint64_t v111 = v996[6];
      __dsta = &v109[v111];
      long long v112 = (char *)(v110 + v111);
      int v113 = (int *)type metadata accessor for SharedItem();
      uint64_t v970 = (void *)*((void *)v113 - 1);
      int v114 = (unsigned int (*)(char *, uint64_t, int *))v970[6];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      if (v114(v112, 1, v113))
      {
        uint64_t v115 = type metadata accessor for FeedItem.SharedState(0);
        memcpy(__dsta, v112, *(void *)(*(void *)(v115 - 8) + 64));
      }
      else
      {
        uint64_t v290 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v290 - 8) + 16))(__dsta, v112, v290);
        __dsta[v113[5]] = v112[v113[5]];
        uint64_t v291 = v113[6];
        uint64_t v292 = *(void **)&v112[v291];
        *(void *)&__dsta[v291] = v292;
        uint64_t v293 = v113[7];
        unint64_t v983 = &__dsta[v293];
        uint64_t v967 = &v112[v293];
        uint64_t v294 = sub_1C1515FDC();
        int v295 = *(void (**)(char *, char *, uint64_t))(*(void *)(v294 - 8) + 16);
        id v296 = v292;
        v295(v983, v967, v294);
        ((void (*)(char *, void, uint64_t, int *))v970[7])(__dsta, 0, 1, v113);
      }
      v109[v996[7]] = *(unsigned char *)(v110 + v996[7]);
      v109[v996[8]] = *(unsigned char *)(v110 + v996[8]);
      v109[v996[9]] = *(unsigned char *)(v110 + v996[9]);
      v109[v996[10]] = *(unsigned char *)(v110 + v996[10]);
      uint64_t v297 = v1006[11];
      uint64_t v298 = (void *)(a1 + v297);
      long long v299 = (const void *)(a2 + v297);
      uint64_t v300 = sub_1C151D2DC();
      uint64_t v301 = *(void *)(v300 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v301 + 48))(v299, 1, v300))
      {
        sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
        memcpy(v298, v299, *(void *)(*(void *)(v302 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v301 + 16))(v298, v299, v300);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v301 + 56))(v298, 0, 1, v300);
      }
      uint64_t v319 = v1006[12];
      uint64_t v320 = (void *)(a1 + v319);
      uint64_t v321 = (void *)(a2 + v319);
      if (v321[1] >= 0x11uLL)
      {
        void *v320 = *v321;
        v320[1] = v321[1];
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)uint64_t v320 = *(_OWORD *)v321;
      }
      uint64_t v322 = v1006[13];
      unint64_t v323 = *(void *)(a2 + v322);
      if (v323 >= 2)
      {
        if (v323 == 2)
        {
          *(void *)(a1 + v322) = 2;
        }
        else
        {
          *(void *)(a1 + v322) = v323;
          swift_unknownObjectRetain();
        }
      }
      else
      {
        *(void *)(a1 + v322) = v323;
      }
      uint64_t v399 = v1006[14];
      unint64_t v400 = *(void **)(a2 + v399);
      *(void *)(a1 + v399) = v400;
      id v401 = v400;
      goto LABEL_578;
    case 4:
      *(void *)a1 = *(void *)a2;
      uint64_t v43 = *(void *)(a2 + 8);
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      *(void *)(a1 + 8) = v43;
      if (*(void *)(a2 + 32) >= 0x11uLL)
      {
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      }
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      uint64_t v171 = (int *)type metadata accessor for FeedWebEmbed();
      uint64_t v172 = v171[8];
      uint64_t v173 = a1 + v172;
      uint64_t v174 = a2 + v172;
      uint64_t v175 = sub_1C1515FDC();
      uint64_t v176 = *(void *)(v175 - 8);
      uint64_t v177 = *(void (**)(uint64_t, uint64_t, uint64_t))(v176 + 16);
      swift_bridgeObjectRetain();
      v177(v173, v174, v175);
      v1009 = v171;
      uint64_t v178 = v171[9];
      id v179 = (void *)(a1 + v178);
      long long v180 = (const void *)(a2 + v178);
      uint64_t v999 = (void *)v175;
      __dstc = (void (*)(char *, char *, void *))v177;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v176 + 48))(a2 + v178, 1, v175))
      {
        sub_1BFEEF2C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        memcpy(v179, v180, *(void *)(*(void *)(v181 - 8) + 64));
      }
      else
      {
        v177((uint64_t)v179, (uint64_t)v180, v175);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v176 + 56))(v179, 0, 1, v175);
      }
      *(void *)(a1 + v171[10]) = *(void *)(a2 + v171[10]);
      *(void *)(a1 + v171[11]) = *(void *)(a2 + v171[11]);
      uint64_t v235 = v171[12];
      uint64_t v236 = (void *)(a1 + v235);
      uint64_t v237 = (void *)(a2 + v235);
      uint64_t v238 = type metadata accessor for FeedHeadline(0);
      uint64_t v239 = *(void *)(v238 - 8);
      uint64_t v240 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v239 + 48);
      swift_retain();
      swift_retain();
      if (v240(v237, 1, v238))
      {
        sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
        memcpy(v236, v237, *(void *)(*(void *)(v241 - 8) + 64));
      }
      else
      {
        uint64_t v965 = v239;
        uint64_t v972 = (int *)v238;
        *uint64_t v236 = *v237;
        v236[1] = v237[1];
        uint64_t v262 = v237[2];
        *((unsigned char *)v236 + 24) = *((unsigned char *)v237 + 24);
        v236[2] = v262;
        v236[4] = v237[4];
        v236[5] = v237[5];
        v236[6] = v237[6];
        *((unsigned char *)v236 + 56) = *((unsigned char *)v237 + 56);
        uint64_t v263 = *(int *)(v238 + 40);
        uint64_t v264 = (char *)v236 + v263;
        uint64_t v265 = (char *)v237 + v263;
        *uint64_t v264 = *((unsigned char *)v237 + v263);
        v264[1] = *((unsigned char *)v237 + v263 + 1);
        uint64_t v266 = type metadata accessor for FeedHeadline.State(0);
        uint64_t v267 = *(int *)(v266 + 24);
        uint64_t v959 = &v264[v267];
        uint64_t v962 = (int *)v266;
        v268 = &v265[v267];
        v269 = (int *)type metadata accessor for SharedItem();
        uint64_t v954 = *((void *)v269 - 1);
        uint64_t v270 = *(unsigned int (**)(char *, uint64_t, int *))(v954 + 48);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if (v270(v268, 1, v269))
        {
          uint64_t v271 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(v959, v268, *(void *)(*(void *)(v271 - 8) + 64));
        }
        else
        {
          uint64_t v449 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v449 - 8) + 16))(v959, v268, v449);
          v959[v269[5]] = v268[v269[5]];
          uint64_t v450 = v269[6];
          uint64_t v451 = *(void **)&v268[v450];
          *(void *)&v959[v450] = v451;
          uint64_t v452 = v269[7];
          uint64_t v453 = &v959[v452];
          uint64_t v454 = &v268[v452];
          id v455 = v451;
          __dstc(v453, v454, v999);
          (*(void (**)(char *, void, uint64_t, int *))(v954 + 56))(v959, 0, 1, v269);
        }
        v264[v962[7]] = v265[v962[7]];
        v264[v962[8]] = v265[v962[8]];
        v264[v962[9]] = v265[v962[9]];
        v264[v962[10]] = v265[v962[10]];
        uint64_t v456 = *(int *)(v238 + 44);
        uint64_t v457 = (char *)v236 + v456;
        v458 = (char *)v237 + v456;
        uint64_t v459 = sub_1C151D2DC();
        uint64_t v460 = *(void *)(v459 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v460 + 48))(v458, 1, v459))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
          memcpy(v457, v458, *(void *)(*(void *)(v461 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v460 + 16))(v457, v458, v459);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v460 + 56))(v457, 0, 1, v459);
        }
        uint64_t v467 = v972[12];
        uint64_t v468 = (void *)((char *)v236 + v467);
        uint64_t v469 = (void *)((char *)v237 + v467);
        if (v469[1] >= 0x11uLL)
        {
          *uint64_t v468 = *v469;
          v468[1] = v469[1];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)uint64_t v468 = *(_OWORD *)v469;
        }
        uint64_t v470 = v972[13];
        unint64_t v471 = *(void *)((char *)v237 + v470);
        if (v471 >= 2)
        {
          if (v471 == 2)
          {
            *(void *)((char *)v236 + v470) = 2;
          }
          else
          {
            *(void *)((char *)v236 + v470) = v471;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(void *)((char *)v236 + v470) = v471;
        }
        uint64_t v524 = v972[14];
        uint64_t v525 = *(void **)((char *)v237 + v524);
        *(void *)((char *)v236 + v524) = v525;
        id v526 = *(void (**)(void *, void, uint64_t, int *))(v965 + 56);
        id v527 = v525;
        v526(v236, 0, 1, v972);
      }
      uint64_t v528 = v1009[13];
      uint64_t v529 = (void *)(a1 + v528);
      uint64_t v530 = (void *)(a2 + v528);
      uint64_t v531 = type metadata accessor for WebEmbedDataVisualization();
      uint64_t v532 = *(void *)(v531 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v532 + 48))(v530, 1, v531))
      {
        sub_1BFEEF2C0(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
        memcpy(v529, v530, *(void *)(*(void *)(v533 - 8) + 64));
      }
      else
      {
        int v534 = swift_getEnumCaseMultiPayload();
        *uint64_t v529 = *v530;
        if (v534 == 1)
        {
          v529[1] = v530[1];
          uint64_t v535 = type metadata accessor for GenericDataVisualization();
          uint64_t v536 = *(int *)(v535 + 20);
          id v537 = (char *)v529 + v536;
          uint64_t v538 = (char *)v530 + v536;
          swift_bridgeObjectRetain();
          __dstc(v537, v538, v999);
          *(void *)((char *)v529 + *(int *)(v535 + 24)) = *(void *)((char *)v530 + *(int *)(v535 + 24));
          swift_bridgeObjectRetain();
        }
        else
        {
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v532 + 56))(v529, 0, 1, v531);
      }
      *(unsigned char *)(a1 + v1009[14]) = *(unsigned char *)(a2 + v1009[14]);
      goto LABEL_578;
    case 5:
      uint64_t v116 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
      uint64_t v117 = *(void *)(a2 + 32);
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      *(void *)(a1 + 32) = v117;
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      id v118 = *(void **)(a2 + 56);
      *(void *)(a1 + 56) = v118;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      uint64_t v119 = *(void *)(a2 + 80);
      id v120 = v116;
      swift_bridgeObjectRetain();
      id v121 = v118;
      if (v119 == 1)
      {
        long long v122 = *(_OWORD *)(a2 + 72);
        long long v123 = *(_OWORD *)(a2 + 104);
        *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 104) = v123;
        *(_OWORD *)(a1 + 72) = v122;
      }
      else
      {
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        uint64_t v200 = *(void **)(a2 + 104);
        *(void *)(a1 + 104) = v200;
        *(void *)(a1 + 112) = *(void *)(a2 + 112);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v201 = v200;
      }
      if (*(void *)(a2 + 128) >= 0x11uLL)
      {
        *(void *)(a1 + 120) = *(void *)(a2 + 120);
        *(void *)(a1 + 128) = *(void *)(a2 + 128);
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
      }
      *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
      goto LABEL_578;
    case 6:
      int v124 = *(unsigned __int8 *)(a2 + 281);
      if (v124 == 2)
      {
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
        uint64_t v351 = *(void *)(a2 + 32);
        *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
        *(void *)(a1 + 32) = v351;
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        uint64_t v352 = *(void *)(a2 + 88);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v352 == 1)
        {
          *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
          long long v353 = *(_OWORD *)(a2 + 96);
          long long v354 = *(_OWORD *)(a2 + 112);
          long long v355 = *(_OWORD *)(a2 + 128);
          *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
          *(_OWORD *)(a1 + 112) = v354;
          *(_OWORD *)(a1 + 128) = v355;
          *(_OWORD *)(a1 + 96) = v353;
        }
        else
        {
          *(void *)(a1 + 80) = *(void *)(a2 + 80);
          *(void *)(a1 + 88) = *(void *)(a2 + 88);
          uint64_t v416 = *(void *)(a2 + 120);
          swift_bridgeObjectRetain();
          if (v416)
          {
            *(void *)(a1 + 120) = v416;
            *(void *)(a1 + 128) = *(void *)(a2 + 128);
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v416 - 8))(a1 + 96, a2 + 96, v416);
            char v417 = *(unsigned char *)(a2 + 144);
            *(void *)(a1 + 136) = *(void *)(a2 + 136);
            *(unsigned char *)(a1 + 144) = v417;
          }
          else
          {
            long long v586 = *(_OWORD *)(a2 + 96);
            long long v587 = *(_OWORD *)(a2 + 112);
            long long v588 = *(_OWORD *)(a2 + 128);
            *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
            *(_OWORD *)(a1 + 112) = v587;
            *(_OWORD *)(a1 + 128) = v588;
            *(_OWORD *)(a1 + 96) = v586;
          }
        }
      }
      else if (v124 == 1)
      {
        long long v125 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
        *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
        uint64_t v126 = *(void *)(a2 + 32);
        *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
        *(void *)(a1 + 32) = v126;
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        uint64_t v127 = *(void **)(a2 + 56);
        *(void *)(a1 + 56) = v127;
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        uint64_t v128 = *(void *)(a2 + 80);
        id v129 = v125;
        swift_bridgeObjectRetain();
        id v130 = v127;
        if (v128 == 1)
        {
          long long v131 = *(_OWORD *)(a2 + 72);
          long long v132 = *(_OWORD *)(a2 + 104);
          *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
          *(_OWORD *)(a1 + 104) = v132;
          *(_OWORD *)(a1 + 72) = v131;
        }
        else
        {
          *(void *)(a1 + 72) = *(void *)(a2 + 72);
          *(void *)(a1 + 80) = *(void *)(a2 + 80);
          *(void *)(a1 + 88) = *(void *)(a2 + 88);
          *(void *)(a1 + 96) = *(void *)(a2 + 96);
          long long v410 = *(void **)(a2 + 104);
          *(void *)(a1 + 104) = v410;
          *(void *)(a1 + 112) = *(void *)(a2 + 112);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v411 = v410;
        }
        if (*(void *)(a2 + 128) >= 0x11uLL)
        {
          *(void *)(a1 + 120) = *(void *)(a2 + 120);
          *(void *)(a1 + 128) = *(void *)(a2 + 128);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
        }
        *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
        id v428 = *(void **)(a2 + 144);
        if (v428)
        {
          *(void *)(a1 + 144) = v428;
          *(void *)(a1 + 152) = *(void *)(a2 + 152);
          *(void *)(a1 + 160) = *(void *)(a2 + 160);
          *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
          *(unsigned char *)(a1 + 169) = *(unsigned char *)(a2 + 169);
          uint64_t v429 = *(void *)(a2 + 176);
          *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
          *(void *)(a1 + 176) = v429;
          *(void *)(a1 + 192) = *(void *)(a2 + 192);
          long long v430 = *(void **)(a2 + 200);
          *(void *)(a1 + 200) = v430;
          *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
          uint64_t v431 = *(void *)(a2 + 224);
          id v432 = v428;
          swift_bridgeObjectRetain();
          id v433 = v430;
          if (v431 == 1)
          {
            long long v434 = *(_OWORD *)(a2 + 216);
            long long v435 = *(_OWORD *)(a2 + 248);
            *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
            *(_OWORD *)(a1 + 248) = v435;
            *(_OWORD *)(a1 + 216) = v434;
          }
          else
          {
            *(void *)(a1 + 216) = *(void *)(a2 + 216);
            *(void *)(a1 + 224) = *(void *)(a2 + 224);
            *(void *)(a1 + 232) = *(void *)(a2 + 232);
            *(void *)(a1 + 240) = *(void *)(a2 + 240);
            uint64_t v486 = *(void **)(a2 + 248);
            *(void *)(a1 + 248) = v486;
            *(void *)(a1 + 256) = *(void *)(a2 + 256);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v487 = v486;
          }
          if (*(void *)(a2 + 272) >= 0x11uLL)
          {
            *(void *)(a1 + 264) = *(void *)(a2 + 264);
            *(void *)(a1 + 272) = *(void *)(a2 + 272);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
          }
          *(unsigned char *)(a1 + 280) = *(unsigned char *)(a2 + 280);
        }
        else
        {
          *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
          long long v478 = *(_OWORD *)(a2 + 160);
          long long v479 = *(_OWORD *)(a2 + 176);
          long long v480 = *(_OWORD *)(a2 + 208);
          *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
          *(_OWORD *)(a1 + 208) = v480;
          *(_OWORD *)(a1 + 160) = v478;
          *(_OWORD *)(a1 + 176) = v479;
          long long v481 = *(_OWORD *)(a2 + 224);
          long long v482 = *(_OWORD *)(a2 + 240);
          long long v483 = *(_OWORD *)(a2 + 256);
          *(_OWORD *)(a1 + 265) = *(_OWORD *)(a2 + 265);
          *(_OWORD *)(a1 + 240) = v482;
          *(_OWORD *)(a1 + 256) = v483;
          *(_OWORD *)(a1 + 224) = v481;
        }
      }
      else
      {
        long long v356 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
        *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
        uint64_t v357 = *(void *)(a2 + 32);
        *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
        *(void *)(a1 + 32) = v357;
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        uint64_t v358 = *(void **)(a2 + 56);
        *(void *)(a1 + 56) = v358;
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        uint64_t v359 = *(void *)(a2 + 80);
        id v360 = v356;
        swift_bridgeObjectRetain();
        id v361 = v358;
        if (v359 == 1)
        {
          long long v362 = *(_OWORD *)(a2 + 72);
          long long v363 = *(_OWORD *)(a2 + 104);
          *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
          *(_OWORD *)(a1 + 104) = v363;
          *(_OWORD *)(a1 + 72) = v362;
        }
        else
        {
          *(void *)(a1 + 72) = *(void *)(a2 + 72);
          *(void *)(a1 + 80) = *(void *)(a2 + 80);
          *(void *)(a1 + 88) = *(void *)(a2 + 88);
          *(void *)(a1 + 96) = *(void *)(a2 + 96);
          uint64_t v418 = *(void **)(a2 + 104);
          *(void *)(a1 + 104) = v418;
          *(void *)(a1 + 112) = *(void *)(a2 + 112);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v419 = v418;
        }
        if (*(void *)(a2 + 128) >= 0x11uLL)
        {
          *(void *)(a1 + 120) = *(void *)(a2 + 120);
          *(void *)(a1 + 128) = *(void *)(a2 + 128);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
        }
        *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
      }
      *(unsigned char *)(a1 + 281) = v124;
      goto LABEL_578;
    case 7:
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      uint64_t v133 = *(void *)(a2 + 32);
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      *(void *)(a1 + 32) = v133;
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      uint64_t v134 = *(void *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v134 == 1)
      {
        *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
        long long v135 = *(_OWORD *)(a2 + 96);
        long long v136 = *(_OWORD *)(a2 + 112);
        long long v137 = *(_OWORD *)(a2 + 128);
        *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
        *(_OWORD *)(a1 + 112) = v136;
        *(_OWORD *)(a1 + 128) = v137;
        *(_OWORD *)(a1 + 96) = v135;
      }
      else
      {
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        uint64_t v202 = *(void *)(a2 + 120);
        swift_bridgeObjectRetain();
        if (v202)
        {
          *(void *)(a1 + 120) = v202;
          *(void *)(a1 + 128) = *(void *)(a2 + 128);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v202 - 8))(a1 + 96, a2 + 96, v202);
          char v203 = *(unsigned char *)(a2 + 144);
          *(void *)(a1 + 136) = *(void *)(a2 + 136);
          *(unsigned char *)(a1 + 144) = v203;
        }
        else
        {
          long long v405 = *(_OWORD *)(a2 + 96);
          long long v406 = *(_OWORD *)(a2 + 112);
          long long v407 = *(_OWORD *)(a2 + 128);
          *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
          *(_OWORD *)(a1 + 112) = v406;
          *(_OWORD *)(a1 + 128) = v407;
          *(_OWORD *)(a1 + 96) = v405;
        }
      }
      goto LABEL_578;
    case 8:
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      uint64_t v138 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
      uint64_t v139 = (void *)(a1 + v138);
      uint64_t v140 = a2 + v138;
      *uint64_t v139 = *(void *)(a2 + v138);
      v139[1] = *(void *)(a2 + v138 + 8);
      v139[2] = *(void *)(a2 + v138 + 16);
      v139[3] = *(void *)(a2 + v138 + 24);
      uint64_t v141 = type metadata accessor for FormatCustomItem.Resolved();
      uint64_t v142 = *(int *)(v141 + 24);
      id v997 = (char *)v139 + v142;
      uint64_t v1007 = v141;
      uint64_t v143 = (const void *)(v140 + v142);
      uint64_t v144 = type metadata accessor for FormatCustomItem.Action();
      uint64_t v981 = *(void *)(v144 - 8);
      uint64_t v145 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v981 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v145(v143, 1, v144))
      {
        sub_1BFEEF2C0(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
        memcpy(v997, v143, *(void *)(*(void *)(v146 - 8) + 64));
      }
      else
      {
        uint64_t v303 = sub_1C1515FDC();
        (*(void (**)(char *, const void *, uint64_t))(*(void *)(v303 - 8) + 16))(v997, v143, v303);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v981 + 56))(v997, 0, 1, v144);
      }
      *(void *)((char *)v139 + *(int *)(v1007 + 28)) = *(void *)(v140 + *(int *)(v1007 + 28));
      swift_bridgeObjectRetain();
      goto LABEL_578;
    case 9:
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      uint64_t v44 = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v44)
      {
        *(void *)(a1 + 56) = v44;
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v44 - 8))(a1 + 32, a2 + 32, v44);
      }
      else
      {
        long long v223 = *(_OWORD *)(a2 + 32);
        long long v224 = *(_OWORD *)(a2 + 48);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(_OWORD *)(a1 + 32) = v223;
        *(_OWORD *)(a1 + 48) = v224;
      }
      v225 = (_OWORD *)(a1 + 72);
      uint64_t v226 = (long long *)(a2 + 72);
      uint64_t v227 = *(void *)(a2 + 96);
      if (v227)
      {
        *(void *)(a1 + 96) = v227;
        *(void *)(a1 + 104) = *(void *)(a2 + 104);
        (**(void (***)(_OWORD *, long long *))(v227 - 8))(v225, v226);
      }
      else
      {
        long long v247 = *v226;
        long long v248 = *(_OWORD *)(a2 + 88);
        *(void *)(a1 + 104) = *(void *)(a2 + 104);
        _OWORD *v225 = v247;
        *(_OWORD *)(a1 + 88) = v248;
      }
      uint64_t v249 = (_OWORD *)(a1 + 112);
      uint64_t v250 = (long long *)(a2 + 112);
      uint64_t v251 = *(void *)(a2 + 136);
      if (v251)
      {
        *(void *)(a1 + 136) = v251;
        *(void *)(a1 + 144) = *(void *)(a2 + 144);
        (**(void (***)(_OWORD *, long long *))(v251 - 8))(v249, v250);
      }
      else
      {
        long long v274 = *v250;
        long long v275 = *(_OWORD *)(a2 + 128);
        *(void *)(a1 + 144) = *(void *)(a2 + 144);
        *uint64_t v249 = v274;
        *(_OWORD *)(a1 + 128) = v275;
      }
      goto LABEL_578;
    case 10:
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      uint64_t v147 = (int *)type metadata accessor for FeedEngagementBanner();
      uint64_t v148 = v147[5];
      uint64_t v149 = a1 + v148;
      uint64_t v150 = a2 + v148;
      uint64_t v151 = sub_1C151959C();
      id v152 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v151 - 8) + 16);
      swift_bridgeObjectRetain();
      v152(v149, v150, v151);
      *(void *)(a1 + v147[6]) = *(void *)(a2 + v147[6]);
      uint64_t v153 = v147[7];
      uint64_t v154 = a1 + v153;
      uint64_t v155 = a2 + v153;
      char v156 = *(unsigned char *)(v155 + 8);
      *(void *)uint64_t v154 = *(void *)v155;
      *(unsigned char *)(v154 + 8) = v156;
      uint64_t v157 = v147[8];
      uint64_t v41 = (char *)(a1 + v157);
      uint64_t v42 = (char *)(a2 + v157);
      if (*((void *)v42 + 1) >= 0x11uLL)
      {
LABEL_113:
        *(void *)uint64_t v41 = *(void *)v42;
        *((void *)v41 + 1) = *((void *)v42 + 1);
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
      }
      goto LABEL_578;
    case 11:
      *(void *)a1 = *(void *)a2;
      swift_retain();
      goto LABEL_578;
    case 12:
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      uint64_t v45 = *(void *)(a2 + 24);
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      *(void *)(a1 + 24) = v45;
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      goto LABEL_578;
    case 13:
      *(void *)a1 = *(void *)a2;
      uint64_t v158 = *(void *)(a2 + 8);
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      *(void *)(a1 + 8) = v158;
      if (*(void *)(a2 + 32) >= 0x11uLL)
      {
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      }
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      uint64_t v204 = *(void **)(a2 + 64);
      *(void *)(a1 + 64) = v204;
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      uint64_t v205 = *(void *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      id v206 = v204;
      swift_bridgeObjectRetain();
      if (v205)
      {
        *(void *)(a1 + 112) = v205;
        *(void *)(a1 + 120) = *(void *)(a2 + 120);
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v205 - 8))(a1 + 88, a2 + 88, v205);
      }
      else
      {
        long long v309 = *(_OWORD *)(a2 + 88);
        long long v310 = *(_OWORD *)(a2 + 104);
        *(void *)(a1 + 120) = *(void *)(a2 + 120);
        *(_OWORD *)(a1 + 88) = v309;
        *(_OWORD *)(a1 + 104) = v310;
      }
      v311 = (_OWORD *)(a1 + 128);
      uint64_t v312 = (long long *)(a2 + 128);
      uint64_t v313 = *(void *)(a2 + 152);
      if (v313)
      {
        *(void *)(a1 + 152) = v313;
        *(void *)(a1 + 160) = *(void *)(a2 + 160);
        (**(void (***)(_OWORD *, long long *))(v313 - 8))(v311, v312);
      }
      else
      {
        long long v329 = *v312;
        long long v330 = *(_OWORD *)(a2 + 144);
        *(void *)(a1 + 160) = *(void *)(a2 + 160);
        _OWORD *v311 = v329;
        *(_OWORD *)(a1 + 144) = v330;
      }
      uint64_t v331 = (_OWORD *)(a1 + 168);
      uint64_t v332 = (long long *)(a2 + 168);
      uint64_t v333 = *(void *)(a2 + 192);
      if (v333)
      {
        *(void *)(a1 + 192) = v333;
        *(void *)(a1 + 200) = *(void *)(a2 + 200);
        (**(void (***)(_OWORD *, long long *))(v333 - 8))(v331, v332);
      }
      else
      {
        long long v336 = *v332;
        long long v337 = *(_OWORD *)(a2 + 184);
        *(void *)(a1 + 200) = *(void *)(a2 + 200);
        _OWORD *v331 = v336;
        *(_OWORD *)(a1 + 184) = v337;
      }
      goto LABEL_578;
    case 14:
      *(void *)a1 = *(void *)a2;
      uint64_t v46 = *(void *)(a2 + 8);
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      *(void *)(a1 + 8) = v46;
      if (*(void *)(a2 + 32) >= 0x11uLL)
      {
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      }
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      goto LABEL_578;
    case 15:
      *(void *)a1 = *(void *)a2;
      uint64_t v159 = *(void *)(a2 + 8);
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      *(void *)(a1 + 8) = v159;
      if (*(void *)(a2 + 32) >= 0x11uLL)
      {
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      }
      break;
    case 16:
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      uint64_t v47 = *(void *)(a2 + 176);
      *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
      *(void *)(a1 + 176) = v47;
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      uint64_t v48 = *(void *)(a2 + 216);
      *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
      *(void *)(a1 + 216) = v48;
      uint64_t v993 = *(void **)(a2 + 240);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((unint64_t)v993 >= 0x11)
      {
        *(void *)(a1 + 232) = *(void *)(a2 + 232);
        *(void *)(a1 + 240) = *(void *)(a2 + 240);
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
      }
      goto LABEL_578;
    default:
      memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v5 - 8) + 64));
      goto LABEL_579;
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v207 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
  uint64_t v208 = a1 + v207;
  uint64_t v209 = a2 + v207;
  *(void *)(a1 + v207) = *(void *)(a2 + v207);
  uint64_t v210 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
  uint64_t v211 = (void *)(v208 + v210);
  uint64_t v212 = (void *)(v209 + v210);
  type metadata accessor for PuzzleStatisticCategory(0);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v383 = type metadata accessor for PuzzleStatisticValue(0);
      int v384 = swift_getEnumCaseMultiPayload();
      if (v384 == 5)
      {
        uint64_t v385 = type metadata accessor for PuzzleStreak();
        uint64_t v386 = *(void *)(v385 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v386 + 48))(v212, 1, v385))
        {
LABEL_326:
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v211, v212, *(void *)(*(void *)(v582 - 8) + 64));
          goto LABEL_353;
        }
      }
      else
      {
        if (v384 != 4)
        {
          memcpy(v211, v212, *(void *)(*(void *)(v383 - 8) + 64));
          goto LABEL_354;
        }
        uint64_t v385 = type metadata accessor for PuzzleStreak();
        uint64_t v386 = *(void *)(v385 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v386 + 48))(v212, 1, v385)) {
          goto LABEL_326;
        }
      }
      uint64_t v611 = sub_1C151555C();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v611 - 8) + 16))(v211, v212, v611);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v386 + 56))(v211, 0, 1, v385);
LABEL_353:
      swift_storeEnumTagMultiPayload();
LABEL_354:
      uint64_t v612 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
      uint64_t v613 = *(int *)(v612 + 20);
      id v614 = (char *)v211 + v613;
      uint64_t v615 = (char *)v212 + v613;
      int v616 = swift_getEnumCaseMultiPayload();
      if (v616 == 5)
      {
        uint64_t v617 = type metadata accessor for PuzzleStreak();
        uint64_t v618 = *(void *)(v617 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v618 + 48))(v615, 1, v617))
        {
LABEL_359:
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v614, v615, *(void *)(*(void *)(v619 - 8) + 64));
          goto LABEL_371;
        }
      }
      else
      {
        if (v616 != 4)
        {
          memcpy(v614, v615, *(void *)(*(void *)(v383 - 8) + 64));
          goto LABEL_372;
        }
        uint64_t v617 = type metadata accessor for PuzzleStreak();
        uint64_t v618 = *(void *)(v617 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v618 + 48))(v615, 1, v617)) {
          goto LABEL_359;
        }
      }
      uint64_t v628 = sub_1C151555C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v628 - 8) + 16))(v614, v615, v628);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v618 + 56))(v614, 0, 1, v617);
LABEL_371:
      swift_storeEnumTagMultiPayload();
LABEL_372:
      uint64_t v629 = *(int *)(v612 + 24);
      uint64_t v630 = (char *)v211 + v629;
      uint64_t v631 = (char *)v212 + v629;
      int v632 = swift_getEnumCaseMultiPayload();
      if (v632 == 5)
      {
        uint64_t v633 = type metadata accessor for PuzzleStreak();
        uint64_t v634 = *(void *)(v633 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v634 + 48))(v631, 1, v633))
        {
LABEL_377:
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v630, v631, *(void *)(*(void *)(v635 - 8) + 64));
          goto LABEL_551;
        }
      }
      else
      {
        if (v632 != 4)
        {
          memcpy(v630, v631, *(void *)(*(void *)(v383 - 8) + 64));
          goto LABEL_552;
        }
        uint64_t v633 = type metadata accessor for PuzzleStreak();
        uint64_t v634 = *(void *)(v633 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v634 + 48))(v631, 1, v633)) {
          goto LABEL_377;
        }
      }
      uint64_t v930 = sub_1C151555C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v930 - 8) + 16))(v630, v631, v930);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v634 + 56))(v630, 0, 1, v633);
      goto LABEL_551;
    case 2u:
      uint64_t v367 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
      uint64_t v368 = *((void *)v367 - 1);
      if ((*(unsigned int (**)(void *, uint64_t, int *))(v368 + 48))(v212, 1, v367))
      {
        sub_1BFEEF2C0(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
        memcpy(v211, v212, *(void *)(*(void *)(v369 - 8) + 64));
      }
      else
      {
        uint64_t v498 = sub_1C151631C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v498 - 8) + 16))(v211, v212, v498);
        uint64_t v499 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
        uint64_t v500 = v499[5];
        uint64_t v501 = (void *)((char *)v211 + v500);
        id v502 = (void *)((char *)v212 + v500);
        *uint64_t v501 = *v502;
        v501[1] = v502[1];
        uint64_t v503 = v499[6];
        unint64_t v504 = (char *)v211 + v503;
        uint64_t v505 = (void *)((char *)v212 + v503);
        *(void *)unint64_t v504 = *v505;
        *((void *)v504 + 1) = v505[1];
        uint64_t v506 = v505 + 2;
        unint64_t v507 = v505[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v507 >> 60 == 15)
        {
          *((_OWORD *)v504 + 1) = *(_OWORD *)v506;
        }
        else
        {
          uint64_t v594 = *v506;
          sub_1BFE95820(*v506, v507);
          *((void *)v504 + 2) = v594;
          *((void *)v504 + 3) = v507;
        }
        *(void *)((char *)v211 + v499[7]) = *(void *)((char *)v212 + v499[7]);
        *(void *)((char *)v211 + v499[8]) = *(void *)((char *)v212 + v499[8]);
        *(void *)((char *)v211 + v367[5]) = *(void *)((char *)v212 + v367[5]);
        *(void *)((char *)v211 + v367[6]) = *(void *)((char *)v212 + v367[6]);
        uint64_t v595 = v367[7];
        uint64_t v596 = (void *)((char *)v211 + v595);
        v597 = (void *)((char *)v212 + v595);
        void *v596 = *v597;
        v596[1] = v597[1];
        unint64_t v598 = *(void (**)(void *, void, uint64_t, int *))(v368 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v598(v211, 0, 1, v367);
      }
      goto LABEL_552;
    case 3u:
      *uint64_t v211 = *v212;
      uint64_t v387 = v212[1];
      *((unsigned char *)v211 + 16) = *((unsigned char *)v212 + 16);
      v211[1] = v387;
      long long v388 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
      uint64_t v389 = v388[6];
      long long v390 = (char *)v211 + v389;
      uint64_t v391 = (char *)v212 + v389;
      uint64_t v392 = type metadata accessor for PuzzleStreak();
      uint64_t v393 = *(void *)(v392 - 8);
      uint64_t v394 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v393 + 48);
      if (v394(v391, 1, v392))
      {
        sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
        memcpy(v390, v391, *(void *)(*(void *)(v395 - 8) + 64));
      }
      else
      {
        uint64_t v544 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v544 - 8) + 16))(v390, v391, v544);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v393 + 56))(v390, 0, 1, v392);
      }
      uint64_t v545 = v388[7];
      v546 = (char *)v211 + v545;
      uint64_t v547 = (char *)v212 + v545;
      if (v394((char *)v212 + v545, 1, v392))
      {
        sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
        memcpy(v546, v547, *(void *)(*(void *)(v548 - 8) + 64));
      }
      else
      {
        uint64_t v565 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v565 - 8) + 16))(v546, v547, v565);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v393 + 56))(v546, 0, 1, v392);
      }
      uint64_t v566 = v388[8];
      long long v567 = (_OWORD *)((char *)v211 + v566);
      long long v568 = (long long *)((char *)v212 + v566);
      long long v569 = *v568;
      long long v570 = v568[1];
      *(_OWORD *)((char *)v567 + 25) = *(long long *)((char *)v568 + 25);
      *long long v567 = v569;
      v567[1] = v570;
      uint64_t v571 = v388[9];
      long long v572 = (_OWORD *)((char *)v211 + v571);
      long long v573 = (long long *)((char *)v212 + v571);
      long long v574 = *v573;
      long long v575 = v573[1];
      *(_OWORD *)((char *)v572 + 25) = *(long long *)((char *)v573 + 25);
      *long long v572 = v574;
      v572[1] = v575;
      uint64_t v576 = v388[10];
      uint64_t v577 = (_OWORD *)((char *)v211 + v576);
      id v578 = (long long *)((char *)v212 + v576);
      long long v579 = *v578;
      long long v580 = v578[1];
      *(_OWORD *)((char *)v577 + 25) = *(long long *)((char *)v578 + 25);
      *uint64_t v577 = v579;
      v577[1] = v580;
      goto LABEL_552;
    default:
      uint64_t v213 = type metadata accessor for PuzzleStatisticValue(0);
      int v214 = swift_getEnumCaseMultiPayload();
      if (v214 == 5)
      {
        uint64_t v215 = type metadata accessor for PuzzleStreak();
        uint64_t v216 = *(void *)(v215 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v216 + 48))(v212, 1, v215)) {
          goto LABEL_122;
        }
      }
      else
      {
        if (v214 != 4)
        {
          memcpy(v211, v212, *(void *)(*(void *)(v213 - 8) + 64));
          goto LABEL_552;
        }
        uint64_t v215 = type metadata accessor for PuzzleStreak();
        uint64_t v216 = *(void *)(v215 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v216 + 48))(v212, 1, v215))
        {
LABEL_122:
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v211, v212, *(void *)(*(void *)(v217 - 8) + 64));
          goto LABEL_551;
        }
      }
      uint64_t v600 = sub_1C151555C();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v600 - 8) + 16))(v211, v212, v600);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v216 + 56))(v211, 0, 1, v215);
LABEL_551:
      swift_storeEnumTagMultiPayload();
LABEL_552:
      swift_storeEnumTagMultiPayload();
LABEL_578:
      swift_storeEnumTagMultiPayload();
LABEL_579:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
}

uint64_t sub_1C0E3A030(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatLayoutViewRoute();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for FormatLayoutViewRoute()
{
  uint64_t result = qword_1EA1A7C50;
  if (!qword_1EA1A7C50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t initializeWithTake for FormatLayoutViewRoute(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = type metadata accessor for FeedItem(0);
  int v6 = swift_getEnumCaseMultiPayload() - 2;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v571 = v5;
    switch(v6)
    {
      case 0:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v7 = (int *)type metadata accessor for FeedBannerAd();
        uint64_t v8 = v7[5];
        uint64_t v9 = a1 + v8;
        uint64_t v10 = a2 + v8;
        uint64_t v11 = sub_1C151DBAC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
        *(void *)(a1 + v7[6]) = *(void *)(a2 + v7[6]);
        uint64_t v12 = v7[7];
        uint64_t v13 = a1 + v12;
        uint64_t v14 = a2 + v12;
        *(unsigned char *)(v13 + 8) = *(unsigned char *)(v14 + 8);
        *(void *)uint64_t v13 = *(void *)v14;
        *(_OWORD *)(a1 + v7[8]) = *(_OWORD *)(a2 + v7[8]);
        goto LABEL_180;
      case 1:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
        uint64_t v23 = (int *)type metadata accessor for FeedHeadline(0);
        uint64_t v24 = v23[10];
        uint64_t v25 = a1;
        uint64_t v26 = (unsigned char *)(a1 + v24);
        uint64_t v27 = a2 + v24;
        unsigned char *v26 = *(unsigned char *)(a2 + v24);
        v26[1] = *(unsigned char *)(a2 + v24 + 1);
        uint64_t v28 = (int *)type metadata accessor for FeedHeadline.State(0);
        uint64_t v29 = v28[6];
        uint64_t v30 = &v26[v29];
        uint64_t v31 = (char *)(v27 + v29);
        uint64_t v32 = (int *)type metadata accessor for SharedItem();
        uint64_t v33 = *((void *)v32 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v33 + 48))(v31, 1, v32))
        {
          uint64_t v34 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
        }
        else
        {
          uint64_t v133 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 32))(v30, v31, v133);
          v30[v32[5]] = v31[v32[5]];
          *(void *)&v30[v32[6]] = *(void *)&v31[v32[6]];
          uint64_t v134 = v32[7];
          unint64_t v562 = &v30[v134];
          long long v135 = &v31[v134];
          uint64_t v136 = sub_1C1515FDC();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v136 - 8) + 32))(v562, v135, v136);
          (*(void (**)(char *, void, uint64_t, int *))(v33 + 56))(v30, 0, 1, v32);
        }
        uint64_t v5 = v571;
        v26[v28[7]] = *(unsigned char *)(v27 + v28[7]);
        v26[v28[8]] = *(unsigned char *)(v27 + v28[8]);
        v26[v28[9]] = *(unsigned char *)(v27 + v28[9]);
        v26[v28[10]] = *(unsigned char *)(v27 + v28[10]);
        uint64_t v137 = v23[11];
        a1 = v25;
        uint64_t v138 = (void *)(v25 + v137);
        uint64_t v139 = (const void *)(a2 + v137);
        uint64_t v140 = sub_1C151D2DC();
        uint64_t v141 = *(void *)(v140 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v141 + 48))(v139, 1, v140))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
          memcpy(v138, v139, *(void *)(*(void *)(v142 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v141 + 32))(v138, v139, v140);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v141 + 56))(v138, 0, 1, v140);
        }
        *(_OWORD *)(a1 + v23[12]) = *(_OWORD *)(a2 + v23[12]);
        uint64_t v169 = v23[13];
        uint64_t v170 = *(void *)(a2 + v169);
        if (v170 == 2) {
          uint64_t v170 = 2;
        }
        *(void *)(a1 + v169) = v170;
        *(void *)(a1 + v23[14]) = *(void *)(a2 + v23[14]);
        goto LABEL_180;
      case 2:
        uint64_t v35 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v35;
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        uint64_t v36 = (int *)type metadata accessor for FeedWebEmbed();
        uint64_t v37 = v36[8];
        uint64_t v38 = a1 + v37;
        uint64_t v39 = a2 + v37;
        uint64_t v40 = sub_1C1515FDC();
        uint64_t v41 = *(void *)(v40 - 8);
        uint64_t v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 32);
        v42(v38, v39, v40);
        uint64_t v43 = v36[9];
        uint64_t v44 = (void *)(a1 + v43);
        uint64_t v45 = (const void *)(a2 + v43);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(a2 + v43, 1, v40))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
          memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
        }
        else
        {
          v42((uint64_t)v44, (uint64_t)v45, v40);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(v44, 0, 1, v40);
        }
        uint64_t v143 = v42;
        *(void *)(a1 + v36[10]) = *(void *)(a2 + v36[10]);
        *(void *)(a1 + v36[11]) = *(void *)(a2 + v36[11]);
        uint64_t v144 = v36[12];
        uint64_t v145 = (_OWORD *)(a1 + v144);
        uint64_t v146 = (_OWORD *)(a2 + v144);
        uint64_t v147 = (int *)type metadata accessor for FeedHeadline(0);
        uint64_t v148 = *((void *)v147 - 1);
        uint64_t v557 = (void (*)(char *, char *, uint64_t))v143;
        uint64_t v559 = v40;
        if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v148 + 48))(v146, 1, v147))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
          memcpy(v145, v146, *(void *)(*(void *)(v149 - 8) + 64));
        }
        else
        {
          uint64_t v551 = v148;
          long long v554 = v36;
          uint64_t v566 = a1;
          *uint64_t v145 = *v146;
          *((void *)v145 + 2) = *((void *)v146 + 2);
          *((unsigned char *)v145 + 24) = *((unsigned char *)v146 + 24);
          *((void *)v145 + 4) = *((void *)v146 + 4);
          *(_OWORD *)((char *)v145 + 40) = *(_OWORD *)((char *)v146 + 40);
          *((unsigned char *)v145 + 56) = *((unsigned char *)v146 + 56);
          uint64_t v171 = v147[10];
          uint64_t v172 = (char *)v145 + v171;
          uint64_t v173 = (char *)v146 + v171;
          *uint64_t v172 = *((unsigned char *)v146 + v171);
          v172[1] = *((unsigned char *)v146 + v171 + 1);
          uint64_t v174 = (int *)type metadata accessor for FeedHeadline.State(0);
          uint64_t v175 = v174[6];
          __dst = &v172[v175];
          uint64_t v176 = &v173[v175];
          uint64_t v177 = (int *)type metadata accessor for SharedItem();
          uint64_t v178 = *((void *)v177 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v178 + 48))(v176, 1, v177))
          {
            uint64_t v179 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(__dst, v176, *(void *)(*(void *)(v179 - 8) + 64));
          }
          else
          {
            uint64_t v227 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v227 - 8) + 32))(__dst, v176, v227);
            __dst[v177[5]] = v176[v177[5]];
            *(void *)&__dst[v177[6]] = *(void *)&v176[v177[6]];
            v557(&__dst[v177[7]], &v176[v177[7]], v559);
            (*(void (**)(char *, void, uint64_t, int *))(v178 + 56))(__dst, 0, 1, v177);
          }
          v172[v174[7]] = v173[v174[7]];
          v172[v174[8]] = v173[v174[8]];
          v172[v174[9]] = v173[v174[9]];
          v172[v174[10]] = v173[v174[10]];
          uint64_t v228 = v147[11];
          uint64_t v229 = (char *)v145 + v228;
          uint64_t v230 = (char *)v146 + v228;
          uint64_t v231 = sub_1C151D2DC();
          uint64_t v232 = *(void *)(v231 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v232 + 48))(v230, 1, v231))
          {
            sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
            memcpy(v229, v230, *(void *)(*(void *)(v233 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v232 + 32))(v229, v230, v231);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v232 + 56))(v229, 0, 1, v231);
          }
          a1 = v566;
          uint64_t v36 = v554;
          *(_OWORD *)((char *)v145 + v147[12]) = *(_OWORD *)((char *)v146 + v147[12]);
          uint64_t v241 = v147[13];
          uint64_t v242 = *(void *)((char *)v146 + v241);
          if (v242 == 2) {
            uint64_t v242 = 2;
          }
          *(void *)((char *)v145 + v241) = v242;
          *(void *)((char *)v145 + v147[14]) = *(void *)((char *)v146 + v147[14]);
          (*(void (**)(_OWORD *, void, uint64_t, int *))(v551 + 56))(v145, 0, 1, v147);
        }
        uint64_t v243 = v36[13];
        v244 = (_OWORD *)(a1 + v243);
        uint64_t v245 = (_OWORD *)(a2 + v243);
        uint64_t v246 = type metadata accessor for WebEmbedDataVisualization();
        uint64_t v247 = *(void *)(v246 - 8);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v247 + 48))(v245, 1, v246))
        {
          sub_1BFEEF2C0(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
          memcpy(v244, v245, *(void *)(*(void *)(v248 - 8) + 64));
          uint64_t v5 = v571;
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            _OWORD *v244 = *v245;
            uint64_t v249 = v36;
            uint64_t v250 = type metadata accessor for GenericDataVisualization();
            v557((char *)v244 + *(int *)(v250 + 20), (char *)v245 + *(int *)(v250 + 20), v559);
            uint64_t v251 = *(int *)(v250 + 24);
            uint64_t v36 = v249;
            *(void *)((char *)v244 + v251) = *(void *)((char *)v245 + v251);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v244, v245, *(void *)(v247 + 64));
          }
          uint64_t v5 = v571;
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v247 + 56))(v244, 0, 1, v246);
        }
        *(unsigned char *)(a1 + v36[14]) = *(unsigned char *)(a2 + v36[14]);
        goto LABEL_180;
      case 6:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v47 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
        uint64_t v48 = (_OWORD *)(a1 + v47);
        uint64_t v49 = a2 + v47;
        long long v50 = *(_OWORD *)(a2 + v47 + 16);
        _OWORD *v48 = *(_OWORD *)(a2 + v47);
        v48[1] = v50;
        uint64_t v51 = type metadata accessor for FormatCustomItem.Resolved();
        uint64_t v52 = *(int *)(v51 + 24);
        uint64_t v53 = (char *)v48 + v52;
        uint64_t v54 = (const void *)(v49 + v52);
        uint64_t v55 = type metadata accessor for FormatCustomItem.Action();
        uint64_t v56 = *(void *)(v55 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
        {
          sub_1BFEEF2C0(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
          memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
        }
        else
        {
          uint64_t v150 = sub_1C1515FDC();
          (*(void (**)(char *, const void *, uint64_t))(*(void *)(v150 - 8) + 32))(v53, v54, v150);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
        }
        *(void *)((char *)v48 + *(int *)(v51 + 28)) = *(void *)(v49 + *(int *)(v51 + 28));
        uint64_t v5 = v571;
        goto LABEL_180;
      case 8:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v58 = (int *)type metadata accessor for FeedEngagementBanner();
        uint64_t v59 = v58[5];
        uint64_t v60 = a1 + v59;
        uint64_t v61 = a2 + v59;
        uint64_t v62 = sub_1C151959C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 32))(v60, v61, v62);
        *(void *)(a1 + v58[6]) = *(void *)(a2 + v58[6]);
        uint64_t v63 = v58[7];
        uint64_t v64 = a1 + v63;
        uint64_t v65 = a2 + v63;
        *(unsigned char *)(v64 + 8) = *(unsigned char *)(v65 + 8);
        *(void *)uint64_t v64 = *(void *)v65;
        *(_OWORD *)(a1 + v58[8]) = *(_OWORD *)(a2 + v58[8]);
        goto LABEL_180;
      case 13:
        uint64_t v66 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v66;
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        uint64_t v67 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
        uint64_t v68 = a1 + v67;
        uint64_t v69 = a2 + v67;
        *(void *)(a1 + v67) = *(void *)(a2 + v67);
        uint64_t v70 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
        uint64_t v71 = (void *)(v68 + v70);
        uint64_t v72 = (void *)(v69 + v70);
        type metadata accessor for PuzzleStatisticCategory(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v198 = type metadata accessor for PuzzleStatisticValue(0);
            int v199 = swift_getEnumCaseMultiPayload();
            uint64_t v568 = a1;
            if (v199 == 5)
            {
              uint64_t v200 = v71;
              uint64_t v201 = type metadata accessor for PuzzleStreak();
              uint64_t v202 = *(void *)(v201 - 8);
              if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v202 + 48))(v72, 1, v201))
              {
LABEL_124:
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                uint64_t v71 = v200;
                memcpy(v200, v72, *(void *)(*(void *)(v312 - 8) + 64));
                goto LABEL_137;
              }
            }
            else
            {
              if (v199 != 4)
              {
                memcpy(v71, v72, *(void *)(*(void *)(v198 - 8) + 64));
                goto LABEL_138;
              }
              uint64_t v200 = v71;
              uint64_t v201 = type metadata accessor for PuzzleStreak();
              uint64_t v202 = *(void *)(v201 - 8);
              if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v202 + 48))(v72, 1, v201)) {
                goto LABEL_124;
              }
            }
            uint64_t v315 = sub_1C151555C();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v315 - 8) + 32))(v200, v72, v315);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v202 + 56))(v200, 0, 1, v201);
            uint64_t v71 = v200;
LABEL_137:
            swift_storeEnumTagMultiPayload();
LABEL_138:
            uint64_t v316 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
            uint64_t v317 = *(int *)(v316 + 20);
            unint64_t v318 = (char *)v71 + v317;
            uint64_t v319 = (char *)v72 + v317;
            int v320 = swift_getEnumCaseMultiPayload();
            if (v320 == 5)
            {
              long long v325 = v71;
              uint64_t v326 = type metadata accessor for PuzzleStreak();
              uint64_t v327 = *(void *)(v326 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v327 + 48))(v319, 1, v326))
              {
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v318, v319, *(void *)(*(void *)(v328 - 8) + 64));
              }
              else
              {
                uint64_t v339 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v339 - 8) + 32))(v318, v319, v339);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v327 + 56))(v318, 0, 1, v326);
              }
              swift_storeEnumTagMultiPayload();
              uint64_t v71 = v325;
            }
            else if (v320 == 4)
            {
              uint64_t v321 = v71;
              uint64_t v322 = type metadata accessor for PuzzleStreak();
              uint64_t v323 = *(void *)(v322 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v323 + 48))(v319, 1, v322))
              {
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v318, v319, *(void *)(*(void *)(v324 - 8) + 64));
              }
              else
              {
                uint64_t v338 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v338 - 8) + 32))(v318, v319, v338);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v323 + 56))(v318, 0, 1, v322);
              }
              uint64_t v71 = v321;
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v318, v319, *(void *)(*(void *)(v198 - 8) + 64));
            }
            uint64_t v340 = *(int *)(v316 + 24);
            long long v341 = (char *)v71 + v340;
            long long v342 = (char *)v72 + v340;
            int v343 = swift_getEnumCaseMultiPayload();
            if (v343 == 5)
            {
              uint64_t v347 = type metadata accessor for PuzzleStreak();
              uint64_t v348 = *(void *)(v347 - 8);
              a1 = v568;
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v348 + 48))(v342, 1, v347))
              {
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v341, v342, *(void *)(*(void *)(v349 - 8) + 64));
              }
              else
              {
                uint64_t v359 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v359 - 8) + 32))(v341, v342, v359);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v348 + 56))(v341, 0, 1, v347);
              }
              swift_storeEnumTagMultiPayload();
              uint64_t v5 = v571;
            }
            else
            {
              a1 = v568;
              if (v343 == 4)
              {
                uint64_t v344 = type metadata accessor for PuzzleStreak();
                uint64_t v345 = *(void *)(v344 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v345 + 48))(v342, 1, v344))
                {
                  sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                  memcpy(v341, v342, *(void *)(*(void *)(v346 - 8) + 64));
                }
                else
                {
                  uint64_t v358 = sub_1C151555C();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v358 - 8) + 32))(v341, v342, v358);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v345 + 56))(v341, 0, 1, v344);
                }
                swift_storeEnumTagMultiPayload();
              }
              else
              {
                memcpy(v341, v342, *(void *)(*(void *)(v198 - 8) + 64));
              }
              uint64_t v5 = v571;
            }
LABEL_179:
            swift_storeEnumTagMultiPayload();
LABEL_180:
            swift_storeEnumTagMultiPayload();
LABEL_181:
            sub_1C049A100();
            uint64_t v361 = *(int *)(v360 + 48);
            long long v362 = (char *)(a1 + v361);
            long long v363 = (char *)(a2 + v361);
            switch(swift_getEnumCaseMultiPayload())
            {
              case 2u:
                *(_OWORD *)long long v362 = *(_OWORD *)v363;
                id v364 = (int *)type metadata accessor for FeedBannerAd();
                uint64_t v365 = v364[5];
                uint64_t v366 = &v362[v365];
                uint64_t v367 = &v363[v365];
                uint64_t v368 = sub_1C151DBAC();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v368 - 8) + 32))(v366, v367, v368);
                *(void *)&v362[v364[6]] = *(void *)&v363[v364[6]];
                uint64_t v369 = v364[7];
                uint64_t v370 = &v362[v369];
                int v371 = &v363[v369];
                v370[8] = v371[8];
                *(void *)uint64_t v370 = *(void *)v371;
                *(_OWORD *)&v362[v364[8]] = *(_OWORD *)&v363[v364[8]];
                goto LABEL_276;
              case 3u:
                uint64_t v569 = a1;
                *(_OWORD *)long long v362 = *(_OWORD *)v363;
                *((void *)v362 + 2) = *((void *)v363 + 2);
                v362[24] = v363[24];
                *((void *)v362 + 4) = *((void *)v363 + 4);
                *(_OWORD *)(v362 + 40) = *(_OWORD *)(v363 + 40);
                v362[56] = v363[56];
                uint64_t v372 = (int *)type metadata accessor for FeedHeadline(0);
                uint64_t v373 = v372[10];
                uint64_t v374 = &v362[v373];
                id v375 = &v363[v373];
                char *v374 = v363[v373];
                v374[1] = v363[v373 + 1];
                uint64_t v376 = (int *)type metadata accessor for FeedHeadline.State(0);
                uint64_t v377 = v376[6];
                uint64_t v378 = &v374[v377];
                uint64_t v379 = &v375[v377];
                uint64_t v380 = (int *)type metadata accessor for SharedItem();
                uint64_t v381 = *((void *)v380 - 1);
                if ((*(unsigned int (**)(char *, uint64_t, int *))(v381 + 48))(v379, 1, v380))
                {
                  uint64_t v382 = type metadata accessor for FeedItem.SharedState(0);
                  memcpy(v378, v379, *(void *)(*(void *)(v382 - 8) + 64));
                }
                else
                {
                  uint64_t v427 = sub_1C151631C();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v427 - 8) + 32))(v378, v379, v427);
                  v378[v380[5]] = v379[v380[5]];
                  *(void *)&v378[v380[6]] = *(void *)&v379[v380[6]];
                  uint64_t v428 = v380[7];
                  uint64_t v565 = &v378[v428];
                  uint64_t v429 = &v379[v428];
                  uint64_t v430 = sub_1C1515FDC();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v430 - 8) + 32))(v565, v429, v430);
                  (*(void (**)(char *, void, uint64_t, int *))(v381 + 56))(v378, 0, 1, v380);
                }
                v374[v376[7]] = v375[v376[7]];
                v374[v376[8]] = v375[v376[8]];
                v374[v376[9]] = v375[v376[9]];
                v374[v376[10]] = v375[v376[10]];
                uint64_t v431 = v372[11];
                id v432 = &v362[v431];
                id v433 = &v363[v431];
                uint64_t v434 = sub_1C151D2DC();
                uint64_t v435 = *(void *)(v434 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v435 + 48))(v433, 1, v434))
                {
                  sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
                  memcpy(v432, v433, *(void *)(*(void *)(v436 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(v435 + 32))(v432, v433, v434);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v435 + 56))(v432, 0, 1, v434);
                }
                a1 = v569;
                *(_OWORD *)&v362[v372[12]] = *(_OWORD *)&v363[v372[12]];
                uint64_t v444 = v372[13];
                uint64_t v445 = *(void *)&v363[v444];
                if (v445 == 2) {
                  uint64_t v445 = 2;
                }
                *(void *)&v362[v444] = v445;
                *(void *)&v362[v372[14]] = *(void *)&v363[v372[14]];
                goto LABEL_276;
              case 4u:
                uint64_t v383 = *((void *)v363 + 1);
                *(void *)long long v362 = *(void *)v363;
                *((void *)v362 + 1) = v383;
                v362[16] = v363[16];
                *(_OWORD *)(v362 + 24) = *(_OWORD *)(v363 + 24);
                *(_OWORD *)(v362 + 40) = *(_OWORD *)(v363 + 40);
                int v384 = (int *)type metadata accessor for FeedWebEmbed();
                uint64_t v385 = v384[8];
                uint64_t v386 = &v362[v385];
                uint64_t v387 = &v363[v385];
                uint64_t v388 = sub_1C1515FDC();
                uint64_t v389 = *(void *)(v388 - 8);
                long long v390 = *(void (**)(char *, char *, uint64_t))(v389 + 32);
                v390(v386, v387, v388);
                uint64_t v391 = v384[9];
                long long v564 = v362;
                uint64_t v392 = &v362[v391];
                uint64_t v393 = &v363[v391];
                uint64_t v570 = a1;
                uint64_t v561 = v388;
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v389 + 48))(&v363[v391], 1, v388))
                {
                  sub_1BFEEF2C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
                  memcpy(v392, v393, *(void *)(*(void *)(v394 - 8) + 64));
                }
                else
                {
                  v390(v392, v393, v388);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v389 + 56))(v392, 0, 1, v388);
                }
                *(void *)&v362[v384[10]] = *(void *)&v363[v384[10]];
                *(void *)&v362[v384[11]] = *(void *)&v363[v384[11]];
                uint64_t v437 = v384[12];
                v438 = &v362[v437];
                uint64_t v439 = &v363[v437];
                v440 = (int *)type metadata accessor for FeedHeadline(0);
                uint64_t v441 = (unsigned int (**)(_OWORD *, uint64_t, int *))*((void *)v440 - 1);
                uint64_t v556 = v390;
                if (((unsigned int (**)(char *, uint64_t, int *))v441)[6](v439, 1, v440))
                {
                  sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
                  memcpy(v438, v439, *(void *)(*(void *)(v442 - 8) + 64));
                  a1 = v570;
                }
                else
                {
                  __dstb = (void (**)(char *, void, uint64_t, int *))v441;
                  long long v553 = v384;
                  *(_OWORD *)v438 = *(_OWORD *)v439;
                  *((void *)v438 + 2) = *((void *)v439 + 2);
                  v438[24] = v439[24];
                  *((void *)v438 + 4) = *((void *)v439 + 4);
                  *(_OWORD *)(v438 + 40) = *(_OWORD *)(v439 + 40);
                  v438[56] = v439[56];
                  uint64_t v446 = v440[10];
                  uint64_t v447 = &v438[v446];
                  uint64_t v448 = &v439[v446];
                  char *v447 = v439[v446];
                  v447[1] = v439[v446 + 1];
                  uint64_t v449 = (int *)type metadata accessor for FeedHeadline.State(0);
                  uint64_t v450 = v449[6];
                  uint64_t v547 = &v447[v450];
                  uint64_t v451 = &v448[v450];
                  uint64_t v452 = (int *)type metadata accessor for SharedItem();
                  uint64_t v453 = *((void *)v452 - 1);
                  if ((*(unsigned int (**)(char *, uint64_t, int *))(v453 + 48))(v451, 1, v452))
                  {
                    uint64_t v454 = type metadata accessor for FeedItem.SharedState(0);
                    memcpy(v547, v451, *(void *)(*(void *)(v454 - 8) + 64));
                  }
                  else
                  {
                    uint64_t v473 = sub_1C151631C();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v473 - 8) + 32))(v547, v451, v473);
                    v547[v452[5]] = v451[v452[5]];
                    *(void *)&v547[v452[6]] = *(void *)&v451[v452[6]];
                    v556(&v547[v452[7]], &v451[v452[7]], v561);
                    (*(void (**)(char *, void, uint64_t, int *))(v453 + 56))(v547, 0, 1, v452);
                  }
                  long long v362 = v564;
                  v447[v449[7]] = v448[v449[7]];
                  v447[v449[8]] = v448[v449[8]];
                  v447[v449[9]] = v448[v449[9]];
                  v447[v449[10]] = v448[v449[10]];
                  uint64_t v474 = v440[11];
                  long long v475 = &v438[v474];
                  long long v476 = &v439[v474];
                  uint64_t v477 = sub_1C151D2DC();
                  uint64_t v478 = *(void *)(v477 - 8);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v478 + 48))(v476, 1, v477))
                  {
                    sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
                    memcpy(v475, v476, *(void *)(*(void *)(v479 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(v478 + 32))(v475, v476, v477);
                    (*(void (**)(char *, void, uint64_t, uint64_t))(v478 + 56))(v475, 0, 1, v477);
                  }
                  int v384 = v553;
                  *(_OWORD *)&v438[v440[12]] = *(_OWORD *)&v439[v440[12]];
                  uint64_t v480 = v440[13];
                  uint64_t v481 = *(void *)&v439[v480];
                  if (v481 == 2) {
                    uint64_t v481 = 2;
                  }
                  *(void *)&v438[v480] = v481;
                  *(void *)&v438[v440[14]] = *(void *)&v439[v440[14]];
                  __dstb[7](v438, 0, 1, v440);
                  a1 = v570;
                }
                long long v482 = v384;
                uint64_t v483 = v384[13];
                long long v484 = &v362[v483];
                id v485 = &v363[v483];
                uint64_t v486 = type metadata accessor for WebEmbedDataVisualization();
                uint64_t v487 = *(void *)(v486 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v487 + 48))(v485, 1, v486))
                {
                  sub_1BFEEF2C0(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
                  memcpy(v484, v485, *(void *)(*(void *)(v488 - 8) + 64));
                }
                else
                {
                  if (swift_getEnumCaseMultiPayload() == 1)
                  {
                    *(_OWORD *)long long v484 = *(_OWORD *)v485;
                    uint64_t v489 = type metadata accessor for GenericDataVisualization();
                    v556(&v484[*(int *)(v489 + 20)], &v485[*(int *)(v489 + 20)], v561);
                    *(void *)&v484[*(int *)(v489 + 24)] = *(void *)&v485[*(int *)(v489 + 24)];
                    swift_storeEnumTagMultiPayload();
                  }
                  else
                  {
                    memcpy(v484, v485, *(void *)(v487 + 64));
                  }
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v487 + 56))(v484, 0, 1, v486);
                }
                v362[v482[14]] = v363[v482[14]];
                goto LABEL_276;
              case 8u:
                *(_OWORD *)long long v362 = *(_OWORD *)v363;
                uint64_t v395 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
                uint64_t v396 = &v362[v395];
                uint64_t v397 = &v363[v395];
                long long v398 = *(_OWORD *)&v363[v395 + 16];
                *(_OWORD *)uint64_t v396 = *(_OWORD *)&v363[v395];
                *((_OWORD *)v396 + 1) = v398;
                uint64_t v399 = type metadata accessor for FormatCustomItem.Resolved();
                uint64_t v400 = *(int *)(v399 + 24);
                id v401 = &v396[v400];
                long long v402 = &v397[v400];
                uint64_t v403 = type metadata accessor for FormatCustomItem.Action();
                uint64_t v404 = *(void *)(v403 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v404 + 48))(v402, 1, v403))
                {
                  sub_1BFEEF2C0(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
                  memcpy(v401, v402, *(void *)(*(void *)(v405 - 8) + 64));
                }
                else
                {
                  uint64_t v443 = sub_1C1515FDC();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v443 - 8) + 32))(v401, v402, v443);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v404 + 56))(v401, 0, 1, v403);
                }
                *(void *)&v396[*(int *)(v399 + 28)] = *(void *)&v397[*(int *)(v399 + 28)];
                goto LABEL_276;
              case 0xAu:
                *(_OWORD *)long long v362 = *(_OWORD *)v363;
                long long v406 = (int *)type metadata accessor for FeedEngagementBanner();
                uint64_t v407 = v406[5];
                uint64_t v408 = &v362[v407];
                id v409 = &v363[v407];
                uint64_t v410 = sub_1C151959C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v410 - 8) + 32))(v408, v409, v410);
                *(void *)&v362[v406[6]] = *(void *)&v363[v406[6]];
                uint64_t v411 = v406[7];
                uint64_t v412 = &v362[v411];
                char v413 = &v363[v411];
                v412[8] = v413[8];
                *(void *)uint64_t v412 = *(void *)v413;
                *(_OWORD *)&v362[v406[8]] = *(_OWORD *)&v363[v406[8]];
                goto LABEL_276;
              case 0xFu:
                uint64_t v414 = *((void *)v363 + 1);
                *(void *)long long v362 = *(void *)v363;
                *((void *)v362 + 1) = v414;
                v362[16] = v363[16];
                *(_OWORD *)(v362 + 24) = *(_OWORD *)(v363 + 24);
                *(_OWORD *)(v362 + 40) = *(_OWORD *)(v363 + 40);
                uint64_t v415 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
                uint64_t v416 = &v362[v415];
                char v417 = &v363[v415];
                *(void *)&v362[v415] = *(void *)&v363[v415];
                uint64_t v418 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
                id v419 = &v416[v418];
                uint64_t v420 = &v417[v418];
                type metadata accessor for PuzzleStatisticCategory(0);
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 1u:
                    uint64_t v458 = type metadata accessor for PuzzleStatisticValue(0);
                    int v459 = swift_getEnumCaseMultiPayload();
                    if (v459 == 5)
                    {
                      uint64_t v514 = v419;
                      uint64_t v515 = type metadata accessor for PuzzleStreak();
                      uint64_t v516 = *(void *)(v515 - 8);
                      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v516 + 48))(v420, 1, v515))
                      {
                        sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                        id v419 = v514;
                        memcpy(v514, v420, *(void *)(*(void *)(v517 - 8) + 64));
                      }
                      else
                      {
                        uint64_t v522 = sub_1C151555C();
                        (*(void (**)(char *, char *, uint64_t))(*(void *)(v522 - 8) + 32))(v514, v420, v522);
                        (*(void (**)(char *, void, uint64_t, uint64_t))(v516 + 56))(v514, 0, 1, v515);
                        id v419 = v514;
                      }
                      uint64_t v518 = a1;
                    }
                    else
                    {
                      if (v459 != 4)
                      {
                        uint64_t v518 = a1;
                        memcpy(v419, v420, *(void *)(*(void *)(v458 - 8) + 64));
                        goto LABEL_255;
                      }
                      uint64_t v460 = v419;
                      uint64_t v461 = type metadata accessor for PuzzleStreak();
                      uint64_t v462 = *(void *)(v461 - 8);
                      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v462 + 48))(v420, 1, v461))
                      {
                        sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                        id v419 = v460;
                        memcpy(v460, v420, *(void *)(*(void *)(v463 - 8) + 64));
                      }
                      else
                      {
                        uint64_t v521 = sub_1C151555C();
                        (*(void (**)(char *, char *, uint64_t))(*(void *)(v521 - 8) + 32))(v460, v420, v521);
                        (*(void (**)(char *, void, uint64_t, uint64_t))(v462 + 56))(v460, 0, 1, v461);
                        id v419 = v460;
                      }
                      uint64_t v518 = a1;
                    }
                    swift_storeEnumTagMultiPayload();
LABEL_255:
                    uint64_t v523 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
                    uint64_t v524 = *(int *)(v523 + 20);
                    uint64_t v525 = &v419[v524];
                    id v526 = &v420[v524];
                    int v527 = swift_getEnumCaseMultiPayload();
                    if (v527 == 5)
                    {
                      uint64_t v532 = v419;
                      uint64_t v533 = type metadata accessor for PuzzleStreak();
                      uint64_t v534 = *(void *)(v533 - 8);
                      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v534 + 48))(v526, 1, v533))
                      {
                        sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                        memcpy(v525, v526, *(void *)(*(void *)(v535 - 8) + 64));
                      }
                      else
                      {
                        uint64_t v537 = sub_1C151555C();
                        (*(void (**)(char *, char *, uint64_t))(*(void *)(v537 - 8) + 32))(v525, v526, v537);
                        (*(void (**)(char *, void, uint64_t, uint64_t))(v534 + 56))(v525, 0, 1, v533);
                      }
                      swift_storeEnumTagMultiPayload();
                      id v419 = v532;
                    }
                    else if (v527 == 4)
                    {
                      uint64_t v528 = v419;
                      uint64_t v529 = type metadata accessor for PuzzleStreak();
                      uint64_t v530 = *(void *)(v529 - 8);
                      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v530 + 48))(v526, 1, v529))
                      {
                        sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                        memcpy(v525, v526, *(void *)(*(void *)(v531 - 8) + 64));
                      }
                      else
                      {
                        uint64_t v536 = sub_1C151555C();
                        (*(void (**)(char *, char *, uint64_t))(*(void *)(v536 - 8) + 32))(v525, v526, v536);
                        (*(void (**)(char *, void, uint64_t, uint64_t))(v530 + 56))(v525, 0, 1, v529);
                      }
                      id v419 = v528;
                      swift_storeEnumTagMultiPayload();
                    }
                    else
                    {
                      memcpy(v525, v526, *(void *)(*(void *)(v458 - 8) + 64));
                    }
                    uint64_t v538 = *(int *)(v523 + 24);
                    uint64_t v539 = &v419[v538];
                    uint64_t v540 = &v420[v538];
                    int v541 = swift_getEnumCaseMultiPayload();
                    if (v541 == 5)
                    {
                      uint64_t v542 = type metadata accessor for PuzzleStreak();
                      uint64_t v543 = *(void *)(v542 - 8);
                      a1 = v518;
                      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v543 + 48))(v540, 1, v542))
                      {
LABEL_271:
                        sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                        memcpy(v539, v540, *(void *)(*(void *)(v544 - 8) + 64));
                        goto LABEL_274;
                      }
                    }
                    else
                    {
                      a1 = v518;
                      if (v541 != 4)
                      {
                        memcpy(v539, v540, *(void *)(*(void *)(v458 - 8) + 64));
                        goto LABEL_275;
                      }
                      uint64_t v542 = type metadata accessor for PuzzleStreak();
                      uint64_t v543 = *(void *)(v542 - 8);
                      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v543 + 48))(v540, 1, v542)) {
                        goto LABEL_271;
                      }
                    }
                    uint64_t v545 = sub_1C151555C();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v545 - 8) + 32))(v539, v540, v545);
                    (*(void (**)(char *, void, uint64_t, uint64_t))(v543 + 56))(v539, 0, 1, v542);
                    goto LABEL_274;
                  case 2u:
                    id v455 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
                    uint64_t v456 = *((void *)v455 - 1);
                    if ((*(unsigned int (**)(char *, uint64_t, int *))(v456 + 48))(v420, 1, v455))
                    {
                      sub_1BFEEF2C0(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
                      memcpy(v419, v420, *(void *)(*(void *)(v457 - 8) + 64));
                    }
                    else
                    {
                      uint64_t v490 = sub_1C151631C();
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v490 - 8) + 32))(v419, v420, v490);
                      uint64_t v491 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
                      *(_OWORD *)&v419[v491[5]] = *(_OWORD *)&v420[v491[5]];
                      uint64_t v492 = v491[6];
                      uint64_t v493 = &v419[v492];
                      id v494 = &v420[v492];
                      long long v495 = *((_OWORD *)v494 + 1);
                      *(_OWORD *)uint64_t v493 = *(_OWORD *)v494;
                      *((_OWORD *)v493 + 1) = v495;
                      *(void *)&v419[v491[7]] = *(void *)&v420[v491[7]];
                      *(void *)&v419[v491[8]] = *(void *)&v420[v491[8]];
                      *(void *)&v419[v455[5]] = *(void *)&v420[v455[5]];
                      *(void *)&v419[v455[6]] = *(void *)&v420[v455[6]];
                      *(_OWORD *)&v419[v455[7]] = *(_OWORD *)&v420[v455[7]];
                      (*(void (**)(char *, void, uint64_t, int *))(v456 + 56))(v419, 0, 1, v455);
                    }
                    goto LABEL_275;
                  case 3u:
                    uint64_t v464 = *((void *)v420 + 1);
                    *(void *)id v419 = *(void *)v420;
                    *((void *)v419 + 1) = v464;
                    v419[16] = v420[16];
                    uint64_t v465 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
                    uint64_t v466 = v465[6];
                    uint64_t v467 = &v419[v466];
                    uint64_t v468 = &v420[v466];
                    uint64_t v469 = type metadata accessor for PuzzleStreak();
                    uint64_t v470 = *(void *)(v469 - 8);
                    unint64_t v471 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v470 + 48);
                    if (v471(v468, 1, v469))
                    {
                      sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                      memcpy(v467, v468, *(void *)(*(void *)(v472 - 8) + 64));
                    }
                    else
                    {
                      uint64_t v496 = sub_1C151555C();
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v496 - 8) + 32))(v467, v468, v496);
                      (*(void (**)(char *, void, uint64_t, uint64_t))(v470 + 56))(v467, 0, 1, v469);
                    }
                    uint64_t v497 = v465[7];
                    uint64_t v498 = &v419[v497];
                    uint64_t v499 = &v420[v497];
                    if (v471(&v420[v497], 1, v469))
                    {
                      sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                      memcpy(v498, v499, *(void *)(*(void *)(v500 - 8) + 64));
                    }
                    else
                    {
                      uint64_t v501 = sub_1C151555C();
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v501 - 8) + 32))(v498, v499, v501);
                      (*(void (**)(char *, void, uint64_t, uint64_t))(v470 + 56))(v498, 0, 1, v469);
                    }
                    uint64_t v502 = v465[8];
                    uint64_t v503 = &v419[v502];
                    unint64_t v504 = &v420[v502];
                    long long v505 = *((_OWORD *)v504 + 1);
                    *(_OWORD *)uint64_t v503 = *(_OWORD *)v504;
                    *((_OWORD *)v503 + 1) = v505;
                    *(_OWORD *)(v503 + 25) = *(_OWORD *)(v504 + 25);
                    uint64_t v506 = v465[9];
                    unint64_t v507 = &v419[v506];
                    uint64_t v508 = &v420[v506];
                    *(_OWORD *)(v507 + 25) = *(_OWORD *)(v508 + 25);
                    long long v509 = *((_OWORD *)v508 + 1);
                    *(_OWORD *)unint64_t v507 = *(_OWORD *)v508;
                    *((_OWORD *)v507 + 1) = v509;
                    uint64_t v510 = v465[10];
                    id v511 = &v419[v510];
                    uint64_t v512 = &v420[v510];
                    long long v513 = *((_OWORD *)v512 + 1);
                    *(_OWORD *)id v511 = *(_OWORD *)v512;
                    *((_OWORD *)v511 + 1) = v513;
                    *(_OWORD *)(v511 + 25) = *(_OWORD *)(v512 + 25);
                    goto LABEL_275;
                  default:
                    uint64_t v421 = type metadata accessor for PuzzleStatisticValue(0);
                    int v422 = swift_getEnumCaseMultiPayload();
                    if (v422 == 5)
                    {
                      uint64_t v423 = v419;
                      uint64_t v424 = type metadata accessor for PuzzleStreak();
                      uint64_t v425 = *(void *)(v424 - 8);
                      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v425 + 48))(v420, 1, v424)) {
                        goto LABEL_195;
                      }
                    }
                    else
                    {
                      if (v422 != 4)
                      {
                        memcpy(v419, v420, *(void *)(*(void *)(v421 - 8) + 64));
                        goto LABEL_275;
                      }
                      uint64_t v423 = v419;
                      uint64_t v424 = type metadata accessor for PuzzleStreak();
                      uint64_t v425 = *(void *)(v424 - 8);
                      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v425 + 48))(v420, 1, v424))
                      {
LABEL_195:
                        sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                        memcpy(v423, v420, *(void *)(*(void *)(v426 - 8) + 64));
                        goto LABEL_274;
                      }
                    }
                    uint64_t v520 = sub_1C151555C();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v520 - 8) + 32))(v423, v420, v520);
                    (*(void (**)(char *, void, uint64_t, uint64_t))(v425 + 56))(v423, 0, 1, v424);
LABEL_274:
                    swift_storeEnumTagMultiPayload();
LABEL_275:
                    swift_storeEnumTagMultiPayload();
                    break;
                }
                break;
              default:
                memcpy(v362, v363, *(void *)(*(void *)(v5 - 8) + 64));
                goto LABEL_277;
            }
            goto LABEL_276;
          case 2u:
            uint64_t v191 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
            uint64_t v192 = *((void *)v191 - 1);
            if ((*(unsigned int (**)(void *, uint64_t, int *))(v192 + 48))(v72, 1, v191))
            {
              sub_1BFEEF2C0(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
              memcpy(v71, v72, *(void *)(*(void *)(v193 - 8) + 64));
            }
            else
            {
              uint64_t v263 = sub_1C151631C();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v263 - 8) + 32))(v71, v72, v263);
              uint64_t v264 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
              *(_OWORD *)((char *)v71 + v264[5]) = *(_OWORD *)((char *)v72 + v264[5]);
              uint64_t v265 = v264[6];
              uint64_t v266 = (_OWORD *)((char *)v71 + v265);
              uint64_t v267 = (_OWORD *)((char *)v72 + v265);
              long long v268 = v267[1];
              *uint64_t v266 = *v267;
              v266[1] = v268;
              *(void *)((char *)v71 + v264[7]) = *(void *)((char *)v72 + v264[7]);
              *(void *)((char *)v71 + v264[8]) = *(void *)((char *)v72 + v264[8]);
              *(void *)((char *)v71 + v191[5]) = *(void *)((char *)v72 + v191[5]);
              *(void *)((char *)v71 + v191[6]) = *(void *)((char *)v72 + v191[6]);
              *(_OWORD *)((char *)v71 + v191[7]) = *(_OWORD *)((char *)v72 + v191[7]);
              (*(void (**)(void *, void, uint64_t, int *))(v192 + 56))(v71, 0, 1, v191);
            }
            goto LABEL_179;
          case 3u:
            uint64_t v203 = v72[1];
            *uint64_t v71 = *v72;
            v71[1] = v203;
            *((unsigned char *)v71 + 16) = *((unsigned char *)v72 + 16);
            uint64_t v204 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
            uint64_t v205 = v204[6];
            id v206 = (char *)v71 + v205;
            uint64_t v207 = (char *)v72 + v205;
            uint64_t v208 = type metadata accessor for PuzzleStreak();
            uint64_t v209 = *(void *)(v208 - 8);
            uint64_t v210 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v209 + 48);
            if (v210(v207, 1, v208))
            {
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v206, v207, *(void *)(*(void *)(v211 - 8) + 64));
            }
            else
            {
              uint64_t v275 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v275 - 8) + 32))(v206, v207, v275);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v209 + 56))(v206, 0, 1, v208);
            }
            uint64_t v276 = v204[7];
            uint64_t v277 = (char *)v71 + v276;
            id v278 = (char *)v72 + v276;
            if (v210((char *)v72 + v276, 1, v208))
            {
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v277, v278, *(void *)(*(void *)(v279 - 8) + 64));
            }
            else
            {
              uint64_t v285 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v285 - 8) + 32))(v277, v278, v285);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v209 + 56))(v277, 0, 1, v208);
            }
            uint64_t v5 = v571;
            uint64_t v286 = v204[8];
            uint64_t v287 = (_OWORD *)((char *)v71 + v286);
            uint64_t v288 = (_OWORD *)((char *)v72 + v286);
            long long v289 = v288[1];
            *uint64_t v287 = *v288;
            v287[1] = v289;
            *(_OWORD *)((char *)v287 + 25) = *(_OWORD *)((char *)v288 + 25);
            uint64_t v290 = v204[9];
            uint64_t v291 = (_OWORD *)((char *)v71 + v290);
            uint64_t v292 = (_OWORD *)((char *)v72 + v290);
            *(_OWORD *)((char *)v291 + 25) = *(_OWORD *)((char *)v292 + 25);
            long long v293 = v292[1];
            *uint64_t v291 = *v292;
            v291[1] = v293;
            uint64_t v294 = v204[10];
            int v295 = (_OWORD *)((char *)v71 + v294);
            id v296 = (_OWORD *)((char *)v72 + v294);
            long long v297 = v296[1];
            *int v295 = *v296;
            v295[1] = v297;
            *(_OWORD *)((char *)v295 + 25) = *(_OWORD *)((char *)v296 + 25);
            goto LABEL_179;
          default:
            uint64_t v73 = type metadata accessor for PuzzleStatisticValue(0);
            int v74 = swift_getEnumCaseMultiPayload();
            if (v74 == 5)
            {
              long long v75 = v71;
              uint64_t v76 = type metadata accessor for PuzzleStreak();
              uint64_t v77 = *(void *)(v76 - 8);
              if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v77 + 48))(v72, 1, v76))
              {
LABEL_18:
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v75, v72, *(void *)(*(void *)(v78 - 8) + 64));
LABEL_130:
                swift_storeEnumTagMultiPayload();
                goto LABEL_179;
              }
            }
            else
            {
              if (v74 != 4)
              {
                memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
                goto LABEL_179;
              }
              long long v75 = v71;
              uint64_t v76 = type metadata accessor for PuzzleStreak();
              uint64_t v77 = *(void *)(v76 - 8);
              if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v77 + 48))(v72, 1, v76)) {
                goto LABEL_18;
              }
            }
            uint64_t v313 = sub_1C151555C();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v313 - 8) + 32))(v75, v72, v313);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v77 + 56))(v75, 0, 1, v76);
            goto LABEL_130;
        }
      default:
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v5 - 8) + 64));
        goto LABEL_181;
    }
  }
  switch(v6)
  {
    case 0:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v15 = (int *)type metadata accessor for FeedBannerAd();
      uint64_t v16 = v15[5];
      uint64_t v17 = a1 + v16;
      uint64_t v18 = a2 + v16;
      uint64_t v19 = sub_1C151DBAC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
      *(void *)(a1 + v15[6]) = *(void *)(a2 + v15[6]);
      uint64_t v20 = v15[7];
      uint64_t v21 = a1 + v20;
      uint64_t v22 = a2 + v20;
      *(unsigned char *)(v21 + 8) = *(unsigned char *)(v22 + 8);
      *(void *)uint64_t v21 = *(void *)v22;
      *(_OWORD *)(a1 + v15[8]) = *(_OWORD *)(a2 + v15[8]);
      goto LABEL_276;
    case 1:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      long long v79 = (int *)type metadata accessor for FeedHeadline(0);
      uint64_t v80 = v79[10];
      uint64_t v81 = a1;
      uint64_t v82 = (unsigned char *)(a1 + v80);
      uint64_t v83 = a2 + v80;
      *uint64_t v82 = *(unsigned char *)(a2 + v80);
      v82[1] = *(unsigned char *)(a2 + v80 + 1);
      uint64_t v84 = (int *)type metadata accessor for FeedHeadline.State(0);
      uint64_t v85 = v84[6];
      uint64_t v86 = &v82[v85];
      uint64_t v87 = (char *)(v83 + v85);
      uint64_t v88 = (int *)type metadata accessor for SharedItem();
      uint64_t v89 = *((void *)v88 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v89 + 48))(v87, 1, v88))
      {
        uint64_t v90 = type metadata accessor for FeedItem.SharedState(0);
        memcpy(v86, v87, *(void *)(*(void *)(v90 - 8) + 64));
      }
      else
      {
        uint64_t v151 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v151 - 8) + 32))(v86, v87, v151);
        v86[v88[5]] = v87[v88[5]];
        *(void *)&v86[v88[6]] = *(void *)&v87[v88[6]];
        uint64_t v152 = v88[7];
        long long v563 = &v86[v152];
        uint64_t v153 = &v87[v152];
        uint64_t v154 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v154 - 8) + 32))(v563, v153, v154);
        (*(void (**)(char *, void, uint64_t, int *))(v89 + 56))(v86, 0, 1, v88);
      }
      v82[v84[7]] = *(unsigned char *)(v83 + v84[7]);
      v82[v84[8]] = *(unsigned char *)(v83 + v84[8]);
      v82[v84[9]] = *(unsigned char *)(v83 + v84[9]);
      v82[v84[10]] = *(unsigned char *)(v83 + v84[10]);
      uint64_t v155 = v79[11];
      a1 = v81;
      char v156 = (void *)(v81 + v155);
      uint64_t v157 = (const void *)(a2 + v155);
      uint64_t v158 = sub_1C151D2DC();
      uint64_t v159 = *(void *)(v158 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v159 + 48))(v157, 1, v158))
      {
        sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
        memcpy(v156, v157, *(void *)(*(void *)(v160 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v159 + 32))(v156, v157, v158);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v159 + 56))(v156, 0, 1, v158);
      }
      *(_OWORD *)(a1 + v79[12]) = *(_OWORD *)(a2 + v79[12]);
      uint64_t v180 = v79[13];
      uint64_t v181 = *(void *)(a2 + v180);
      if (v181 == 2) {
        uint64_t v181 = 2;
      }
      *(void *)(a1 + v180) = v181;
      *(void *)(a1 + v79[14]) = *(void *)(a2 + v79[14]);
      goto LABEL_276;
    case 2:
      uint64_t v91 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v91;
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      uint64_t v92 = (int *)type metadata accessor for FeedWebEmbed();
      uint64_t v93 = v92[8];
      uint64_t v94 = a1 + v93;
      uint64_t v95 = a2 + v93;
      uint64_t v96 = sub_1C1515FDC();
      uint64_t v97 = *(void *)(v96 - 8);
      uint64_t v98 = *(void (**)(uint64_t, uint64_t, uint64_t))(v97 + 32);
      v98(v94, v95, v96);
      uint64_t v99 = v92[9];
      uint64_t v100 = (void *)(a1 + v99);
      char v101 = (const void *)(a2 + v99);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v97 + 48))(a2 + v99, 1, v96))
      {
        sub_1BFEEF2C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        memcpy(v100, v101, *(void *)(*(void *)(v102 - 8) + 64));
      }
      else
      {
        v98((uint64_t)v100, (uint64_t)v101, v96);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v97 + 56))(v100, 0, 1, v96);
      }
      uint64_t v161 = v98;
      *(void *)(a1 + v92[10]) = *(void *)(a2 + v92[10]);
      *(void *)(a1 + v92[11]) = *(void *)(a2 + v92[11]);
      uint64_t v162 = v92[12];
      uint64_t v163 = (_OWORD *)(a1 + v162);
      uint64_t v164 = (_OWORD *)(a2 + v162);
      uint64_t v165 = (int *)type metadata accessor for FeedHeadline(0);
      uint64_t v166 = *((void *)v165 - 1);
      long long v558 = (void (*)(char *, char *, uint64_t))v161;
      uint64_t v560 = v96;
      if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v166 + 48))(v164, 1, v165))
      {
        sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
        memcpy(v163, v164, *(void *)(*(void *)(v167 - 8) + 64));
      }
      else
      {
        uint64_t v552 = v166;
        uint64_t v555 = v92;
        uint64_t v567 = a1;
        *uint64_t v163 = *v164;
        *((void *)v163 + 2) = *((void *)v164 + 2);
        *((unsigned char *)v163 + 24) = *((unsigned char *)v164 + 24);
        *((void *)v163 + 4) = *((void *)v164 + 4);
        *(_OWORD *)((char *)v163 + 40) = *(_OWORD *)((char *)v164 + 40);
        *((unsigned char *)v163 + 56) = *((unsigned char *)v164 + 56);
        uint64_t v182 = v165[10];
        id v183 = (char *)v163 + v182;
        uint64_t v184 = (char *)v164 + v182;
        *id v183 = *((unsigned char *)v164 + v182);
        v183[1] = *((unsigned char *)v164 + v182 + 1);
        char v185 = (int *)type metadata accessor for FeedHeadline.State(0);
        uint64_t v186 = v185[6];
        __dsta = &v183[v186];
        uint64_t v187 = &v184[v186];
        id v188 = (int *)type metadata accessor for SharedItem();
        uint64_t v189 = *((void *)v188 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v189 + 48))(v187, 1, v188))
        {
          uint64_t v190 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(__dsta, v187, *(void *)(*(void *)(v190 - 8) + 64));
        }
        else
        {
          uint64_t v234 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v234 - 8) + 32))(__dsta, v187, v234);
          __dsta[v188[5]] = v187[v188[5]];
          *(void *)&__dsta[v188[6]] = *(void *)&v187[v188[6]];
          v558(&__dsta[v188[7]], &v187[v188[7]], v560);
          (*(void (**)(char *, void, uint64_t, int *))(v189 + 56))(__dsta, 0, 1, v188);
        }
        v183[v185[7]] = v184[v185[7]];
        v183[v185[8]] = v184[v185[8]];
        v183[v185[9]] = v184[v185[9]];
        v183[v185[10]] = v184[v185[10]];
        uint64_t v235 = v165[11];
        uint64_t v236 = (char *)v163 + v235;
        uint64_t v237 = (char *)v164 + v235;
        uint64_t v238 = sub_1C151D2DC();
        uint64_t v239 = *(void *)(v238 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v239 + 48))(v237, 1, v238))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
          memcpy(v236, v237, *(void *)(*(void *)(v240 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v239 + 32))(v236, v237, v238);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v239 + 56))(v236, 0, 1, v238);
        }
        a1 = v567;
        uint64_t v92 = v555;
        *(_OWORD *)((char *)v163 + v165[12]) = *(_OWORD *)((char *)v164 + v165[12]);
        uint64_t v252 = v165[13];
        uint64_t v253 = *(void *)((char *)v164 + v252);
        if (v253 == 2) {
          uint64_t v253 = 2;
        }
        *(void *)((char *)v163 + v252) = v253;
        *(void *)((char *)v163 + v165[14]) = *(void *)((char *)v164 + v165[14]);
        (*(void (**)(_OWORD *, void, uint64_t, int *))(v552 + 56))(v163, 0, 1, v165);
      }
      uint64_t v254 = v92[13];
      unint64_t v255 = (_OWORD *)(a1 + v254);
      uint64_t v256 = (_OWORD *)(a2 + v254);
      uint64_t v257 = type metadata accessor for WebEmbedDataVisualization();
      uint64_t v258 = *(void *)(v257 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v258 + 48))(v256, 1, v257))
      {
        sub_1BFEEF2C0(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
        memcpy(v255, v256, *(void *)(*(void *)(v259 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *unint64_t v255 = *v256;
          uint64_t v260 = v92;
          uint64_t v261 = type metadata accessor for GenericDataVisualization();
          v558((char *)v255 + *(int *)(v261 + 20), (char *)v256 + *(int *)(v261 + 20), v560);
          uint64_t v262 = *(int *)(v261 + 24);
          uint64_t v92 = v260;
          *(void *)((char *)v255 + v262) = *(void *)((char *)v256 + v262);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v255, v256, *(void *)(v258 + 64));
        }
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v258 + 56))(v255, 0, 1, v257);
      }
      *(unsigned char *)(a1 + v92[14]) = *(unsigned char *)(a2 + v92[14]);
      goto LABEL_276;
    case 6:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v103 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
      uint64_t v104 = (_OWORD *)(a1 + v103);
      uint64_t v105 = a2 + v103;
      long long v106 = *(_OWORD *)(a2 + v103 + 16);
      *uint64_t v104 = *(_OWORD *)(a2 + v103);
      v104[1] = v106;
      uint64_t v107 = type metadata accessor for FormatCustomItem.Resolved();
      uint64_t v108 = *(int *)(v107 + 24);
      uint64_t v109 = (char *)v104 + v108;
      uint64_t v110 = (const void *)(v105 + v108);
      uint64_t v111 = type metadata accessor for FormatCustomItem.Action();
      uint64_t v112 = *(void *)(v111 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v112 + 48))(v110, 1, v111))
      {
        sub_1BFEEF2C0(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
        memcpy(v109, v110, *(void *)(*(void *)(v113 - 8) + 64));
      }
      else
      {
        uint64_t v168 = sub_1C1515FDC();
        (*(void (**)(char *, const void *, uint64_t))(*(void *)(v168 - 8) + 32))(v109, v110, v168);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v112 + 56))(v109, 0, 1, v111);
      }
      *(void *)((char *)v104 + *(int *)(v107 + 28)) = *(void *)(v105 + *(int *)(v107 + 28));
      goto LABEL_276;
    case 8:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      int v114 = (int *)type metadata accessor for FeedEngagementBanner();
      uint64_t v115 = v114[5];
      uint64_t v116 = a1 + v115;
      uint64_t v117 = a2 + v115;
      uint64_t v118 = sub_1C151959C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v118 - 8) + 32))(v116, v117, v118);
      *(void *)(a1 + v114[6]) = *(void *)(a2 + v114[6]);
      uint64_t v119 = v114[7];
      uint64_t v120 = a1 + v119;
      uint64_t v121 = a2 + v119;
      *(unsigned char *)(v120 + 8) = *(unsigned char *)(v121 + 8);
      *(void *)uint64_t v120 = *(void *)v121;
      *(_OWORD *)(a1 + v114[8]) = *(_OWORD *)(a2 + v114[8]);
      goto LABEL_276;
    case 13:
      uint64_t v122 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v122;
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      uint64_t v123 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      uint64_t v124 = a1 + v123;
      uint64_t v125 = a2 + v123;
      *(void *)(a1 + v123) = *(void *)(a2 + v123);
      uint64_t v126 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      uint64_t v127 = (void *)(v124 + v126);
      uint64_t v128 = (void *)(v125 + v126);
      type metadata accessor for PuzzleStatisticCategory(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v212 = type metadata accessor for PuzzleStatisticValue(0);
          int v213 = swift_getEnumCaseMultiPayload();
          if (v213 == 5)
          {
            uint64_t v214 = type metadata accessor for PuzzleStreak();
            uint64_t v215 = *(void *)(v214 - 8);
            uint64_t v216 = a1;
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v215 + 48))(v128, 1, v214))
            {
LABEL_73:
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v127, v128, *(void *)(*(void *)(v217 - 8) + 64));
              goto LABEL_146;
            }
          }
          else
          {
            if (v213 != 4)
            {
              uint64_t v216 = a1;
              memcpy(v127, v128, *(void *)(*(void *)(v212 - 8) + 64));
              goto LABEL_147;
            }
            uint64_t v214 = type metadata accessor for PuzzleStreak();
            uint64_t v215 = *(void *)(v214 - 8);
            uint64_t v216 = a1;
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v215 + 48))(v128, 1, v214)) {
              goto LABEL_73;
            }
          }
          uint64_t v329 = sub_1C151555C();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v329 - 8) + 32))(v127, v128, v329);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v215 + 56))(v127, 0, 1, v214);
LABEL_146:
          swift_storeEnumTagMultiPayload();
LABEL_147:
          uint64_t v330 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          uint64_t v331 = *(int *)(v330 + 20);
          uint64_t v332 = (char *)v127 + v331;
          uint64_t v333 = (char *)v128 + v331;
          int v334 = swift_getEnumCaseMultiPayload();
          if (v334 == 5)
          {
            uint64_t v335 = type metadata accessor for PuzzleStreak();
            uint64_t v336 = *(void *)(v335 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v336 + 48))(v333, 1, v335))
            {
LABEL_152:
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v332, v333, *(void *)(*(void *)(v337 - 8) + 64));
              goto LABEL_166;
            }
          }
          else
          {
            if (v334 != 4)
            {
              memcpy(v332, v333, *(void *)(*(void *)(v212 - 8) + 64));
              goto LABEL_167;
            }
            uint64_t v335 = type metadata accessor for PuzzleStreak();
            uint64_t v336 = *(void *)(v335 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v336 + 48))(v333, 1, v335)) {
              goto LABEL_152;
            }
          }
          uint64_t v350 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v350 - 8) + 32))(v332, v333, v350);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v336 + 56))(v332, 0, 1, v335);
LABEL_166:
          swift_storeEnumTagMultiPayload();
LABEL_167:
          uint64_t v351 = *(int *)(v330 + 24);
          uint64_t v352 = (char *)v127 + v351;
          long long v353 = (char *)v128 + v351;
          int v354 = swift_getEnumCaseMultiPayload();
          a1 = v216;
          if (v354 == 5)
          {
            uint64_t v355 = type metadata accessor for PuzzleStreak();
            uint64_t v356 = *(void *)(v355 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v356 + 48))(v353, 1, v355))
            {
LABEL_172:
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v352, v353, *(void *)(*(void *)(v357 - 8) + 64));
              goto LABEL_245;
            }
          }
          else
          {
            if (v354 != 4)
            {
              memcpy(v352, v353, *(void *)(*(void *)(v212 - 8) + 64));
              goto LABEL_246;
            }
            uint64_t v355 = type metadata accessor for PuzzleStreak();
            uint64_t v356 = *(void *)(v355 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v356 + 48))(v353, 1, v355)) {
              goto LABEL_172;
            }
          }
          uint64_t v519 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v519 - 8) + 32))(v352, v353, v519);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v356 + 56))(v352, 0, 1, v355);
          goto LABEL_245;
        case 2u:
          long long v194 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          uint64_t v195 = *((void *)v194 - 1);
          if ((*(unsigned int (**)(void *, uint64_t, int *))(v195 + 48))(v128, 1, v194))
          {
            sub_1BFEEF2C0(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
            size_t v197 = *(void *)(*(void *)(v196 - 8) + 64);
            goto LABEL_122;
          }
          uint64_t v269 = sub_1C151631C();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v269 - 8) + 32))(v127, v128, v269);
          uint64_t v270 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
          *(_OWORD *)((char *)v127 + v270[5]) = *(_OWORD *)((char *)v128 + v270[5]);
          uint64_t v271 = v270[6];
          long long v272 = (_OWORD *)((char *)v127 + v271);
          long long v273 = (_OWORD *)((char *)v128 + v271);
          long long v274 = v273[1];
          *long long v272 = *v273;
          v272[1] = v274;
          *(void *)((char *)v127 + v270[7]) = *(void *)((char *)v128 + v270[7]);
          *(void *)((char *)v127 + v270[8]) = *(void *)((char *)v128 + v270[8]);
          *(void *)((char *)v127 + v194[5]) = *(void *)((char *)v128 + v194[5]);
          *(void *)((char *)v127 + v194[6]) = *(void *)((char *)v128 + v194[6]);
          *(_OWORD *)((char *)v127 + v194[7]) = *(_OWORD *)((char *)v128 + v194[7]);
          (*(void (**)(void *, void, uint64_t, int *))(v195 + 56))(v127, 0, 1, v194);
          goto LABEL_246;
        case 3u:
          uint64_t v218 = v128[1];
          void *v127 = *v128;
          v127[1] = v218;
          *((unsigned char *)v127 + 16) = *((unsigned char *)v128 + 16);
          long long v219 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
          uint64_t v220 = v219[6];
          uint64_t v221 = (char *)v127 + v220;
          uint64_t v222 = (char *)v128 + v220;
          uint64_t v223 = type metadata accessor for PuzzleStreak();
          uint64_t v224 = *(void *)(v223 - 8);
          v225 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v224 + 48);
          if (v225(v222, 1, v223))
          {
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v221, v222, *(void *)(*(void *)(v226 - 8) + 64));
          }
          else
          {
            uint64_t v280 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v280 - 8) + 32))(v221, v222, v280);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v224 + 56))(v221, 0, 1, v223);
          }
          uint64_t v281 = v219[7];
          id v282 = (char *)v127 + v281;
          uint64_t v283 = (char *)v128 + v281;
          if (v225((char *)v128 + v281, 1, v223))
          {
            sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v282, v283, *(void *)(*(void *)(v284 - 8) + 64));
          }
          else
          {
            uint64_t v298 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v298 - 8) + 32))(v282, v283, v298);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v224 + 56))(v282, 0, 1, v223);
          }
          uint64_t v299 = v219[8];
          uint64_t v300 = (_OWORD *)((char *)v127 + v299);
          uint64_t v301 = (_OWORD *)((char *)v128 + v299);
          long long v302 = v301[1];
          *uint64_t v300 = *v301;
          v300[1] = v302;
          *(_OWORD *)((char *)v300 + 25) = *(_OWORD *)((char *)v301 + 25);
          uint64_t v303 = v219[9];
          long long v304 = (_OWORD *)((char *)v127 + v303);
          long long v305 = (_OWORD *)((char *)v128 + v303);
          *(_OWORD *)((char *)v304 + 25) = *(_OWORD *)((char *)v305 + 25);
          long long v306 = v305[1];
          *long long v304 = *v305;
          v304[1] = v306;
          uint64_t v307 = v219[10];
          uint64_t v308 = (_OWORD *)((char *)v127 + v307);
          long long v309 = (_OWORD *)((char *)v128 + v307);
          long long v310 = v309[1];
          *uint64_t v308 = *v309;
          v308[1] = v310;
          *(_OWORD *)((char *)v308 + 25) = *(_OWORD *)((char *)v309 + 25);
          goto LABEL_246;
        default:
          uint64_t v129 = type metadata accessor for PuzzleStatisticValue(0);
          int v130 = swift_getEnumCaseMultiPayload();
          if (v130 == 5)
          {
            uint64_t v131 = type metadata accessor for PuzzleStreak();
            uint64_t v132 = *(void *)(v131 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v132 + 48))(v128, 1, v131))
            {
LABEL_120:
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v127, v128, *(void *)(*(void *)(v311 - 8) + 64));
              goto LABEL_245;
            }
          }
          else
          {
            if (v130 != 4)
            {
              size_t v197 = *(void *)(*(void *)(v129 - 8) + 64);
LABEL_122:
              memcpy(v127, v128, v197);
              goto LABEL_246;
            }
            uint64_t v131 = type metadata accessor for PuzzleStreak();
            uint64_t v132 = *(void *)(v131 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v132 + 48))(v128, 1, v131)) {
              goto LABEL_120;
            }
          }
          uint64_t v314 = sub_1C151555C();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v314 - 8) + 32))(v127, v128, v314);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v132 + 56))(v127, 0, 1, v131);
LABEL_245:
          swift_storeEnumTagMultiPayload();
LABEL_246:
          swift_storeEnumTagMultiPayload();
LABEL_276:
          swift_storeEnumTagMultiPayload();
LABEL_277:
          swift_storeEnumTagMultiPayload();
          return a1;
      }
    default:
      memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v5 - 8) + 64));
      goto LABEL_277;
  }
}

uint64_t assignWithTake for FormatLayoutViewRoute(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1;
  if (a1 != a2)
  {
    sub_1C0E3A030(a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = type metadata accessor for FeedItem(0);
    int v6 = swift_getEnumCaseMultiPayload() - 2;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v539 = v5;
      switch(v6)
      {
        case 0:
          *(_OWORD *)uint64_t v2 = *(_OWORD *)a2;
          uint64_t v7 = (int *)type metadata accessor for FeedBannerAd();
          uint64_t v8 = v7[5];
          uint64_t v9 = v2 + v8;
          uint64_t v10 = a2 + v8;
          uint64_t v11 = sub_1C151DBAC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
          *(void *)(v2 + v7[6]) = *(void *)(a2 + v7[6]);
          uint64_t v12 = v7[7];
          uint64_t v13 = v2 + v12;
          uint64_t v14 = a2 + v12;
          *(unsigned char *)(v13 + 8) = *(unsigned char *)(v14 + 8);
          *(void *)uint64_t v13 = *(void *)v14;
          *(_OWORD *)(v2 + v7[8]) = *(_OWORD *)(a2 + v7[8]);
          goto LABEL_177;
        case 1:
          *(_OWORD *)uint64_t v2 = *(_OWORD *)a2;
          *(void *)(v2 + 16) = *(void *)(a2 + 16);
          *(unsigned char *)(v2 + 24) = *(unsigned char *)(a2 + 24);
          *(void *)(v2 + 32) = *(void *)(a2 + 32);
          *(_OWORD *)(v2 + 40) = *(_OWORD *)(a2 + 40);
          *(unsigned char *)(v2 + 56) = *(unsigned char *)(a2 + 56);
          uint64_t v23 = (int *)type metadata accessor for FeedHeadline(0);
          uint64_t v24 = v23[10];
          uint64_t v25 = (unsigned char *)(v2 + v24);
          uint64_t v26 = a2 + v24;
          *uint64_t v25 = *(unsigned char *)(a2 + v24);
          v25[1] = *(unsigned char *)(a2 + v24 + 1);
          uint64_t v27 = (int *)type metadata accessor for FeedHeadline.State(0);
          uint64_t v28 = v27[6];
          uint64_t v29 = &v25[v28];
          uint64_t v30 = (char *)(v26 + v28);
          uint64_t v31 = (int *)type metadata accessor for SharedItem();
          uint64_t v32 = *((void *)v31 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v32 + 48))(v30, 1, v31))
          {
            uint64_t v33 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
          }
          else
          {
            uint64_t v131 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 32))(v29, v30, v131);
            v29[v31[5]] = v30[v31[5]];
            *(void *)&v29[v31[6]] = *(void *)&v30[v31[6]];
            uint64_t v132 = v31[7];
            uint64_t v535 = &v29[v132];
            uint64_t v133 = &v30[v132];
            uint64_t v134 = sub_1C1515FDC();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v134 - 8) + 32))(v535, v133, v134);
            (*(void (**)(char *, void, uint64_t, int *))(v32 + 56))(v29, 0, 1, v31);
          }
          v25[v27[7]] = *(unsigned char *)(v26 + v27[7]);
          v25[v27[8]] = *(unsigned char *)(v26 + v27[8]);
          v25[v27[9]] = *(unsigned char *)(v26 + v27[9]);
          v25[v27[10]] = *(unsigned char *)(v26 + v27[10]);
          uint64_t v135 = v23[11];
          uint64_t v136 = (void *)(v2 + v135);
          uint64_t v137 = (const void *)(a2 + v135);
          uint64_t v138 = sub_1C151D2DC();
          uint64_t v139 = *(void *)(v138 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v139 + 48))(v137, 1, v138))
          {
            sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
            memcpy(v136, v137, *(void *)(*(void *)(v140 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v139 + 32))(v136, v137, v138);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v139 + 56))(v136, 0, 1, v138);
          }
          uint64_t v5 = v539;
          *(_OWORD *)(v2 + v23[12]) = *(_OWORD *)(a2 + v23[12]);
          uint64_t v165 = v23[13];
          uint64_t v166 = *(void *)(a2 + v165);
          if (v166 == 2) {
            uint64_t v166 = 2;
          }
          *(void *)(v2 + v165) = v166;
          *(void *)(v2 + v23[14]) = *(void *)(a2 + v23[14]);
          goto LABEL_177;
        case 2:
          uint64_t v34 = *(void *)(a2 + 8);
          *(void *)uint64_t v2 = *(void *)a2;
          *(void *)(v2 + 8) = v34;
          *(unsigned char *)(v2 + 16) = *(unsigned char *)(a2 + 16);
          *(_OWORD *)(v2 + 24) = *(_OWORD *)(a2 + 24);
          *(_OWORD *)(v2 + 40) = *(_OWORD *)(a2 + 40);
          uint64_t v35 = (int *)type metadata accessor for FeedWebEmbed();
          uint64_t v36 = v35[8];
          uint64_t v37 = v2 + v36;
          uint64_t v38 = a2 + v36;
          uint64_t v39 = sub_1C1515FDC();
          uint64_t v40 = *(void *)(v39 - 8);
          uint64_t v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32);
          v41(v37, v38, v39);
          uint64_t v42 = v35[9];
          uint64_t v43 = (void *)(v2 + v42);
          uint64_t v44 = (const void *)(a2 + v42);
          uint64_t v533 = v39;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(a2 + v42, 1, v39))
          {
            sub_1BFEEF2C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
            memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
          }
          else
          {
            v41((uint64_t)v43, (uint64_t)v44, v39);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(v43, 0, 1, v39);
          }
          *(void *)(v2 + v35[10]) = *(void *)(a2 + v35[10]);
          *(void *)(v2 + v35[11]) = *(void *)(a2 + v35[11]);
          uint64_t v141 = v35[12];
          uint64_t v142 = (_OWORD *)(v2 + v141);
          uint64_t v143 = (_OWORD *)(a2 + v141);
          uint64_t v144 = (int *)type metadata accessor for FeedHeadline(0);
          uint64_t v145 = *((void *)v144 - 1);
          id v526 = (void (*)(char *, char *, uint64_t))v41;
          if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v145 + 48))(v143, 1, v144))
          {
            sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
            memcpy(v142, v143, *(void *)(*(void *)(v146 - 8) + 64));
            uint64_t v5 = v539;
          }
          else
          {
            uint64_t v518 = v145;
            uint64_t v521 = v35;
            *uint64_t v142 = *v143;
            *((void *)v142 + 2) = *((void *)v143 + 2);
            *((unsigned char *)v142 + 24) = *((unsigned char *)v143 + 24);
            *((void *)v142 + 4) = *((void *)v143 + 4);
            *(_OWORD *)((char *)v142 + 40) = *(_OWORD *)((char *)v143 + 40);
            *((unsigned char *)v142 + 56) = *((unsigned char *)v143 + 56);
            uint64_t v167 = v144[10];
            uint64_t v168 = (char *)v142 + v167;
            uint64_t v169 = (char *)v143 + v167;
            unsigned char *v168 = *((unsigned char *)v143 + v167);
            v168[1] = *((unsigned char *)v143 + v167 + 1);
            uint64_t v170 = (int *)type metadata accessor for FeedHeadline.State(0);
            uint64_t v171 = v170[6];
            __dst = &v168[v171];
            uint64_t v172 = &v169[v171];
            uint64_t v173 = (int *)type metadata accessor for SharedItem();
            uint64_t v515 = *((void *)v173 - 1);
            if ((*(unsigned int (**)(char *, uint64_t, int *))(v515 + 48))(v172, 1, v173))
            {
              uint64_t v174 = type metadata accessor for FeedItem.SharedState(0);
              memcpy(__dst, v172, *(void *)(*(void *)(v174 - 8) + 64));
            }
            else
            {
              uint64_t v218 = sub_1C151631C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v218 - 8) + 32))(__dst, v172, v218);
              __dst[v173[5]] = v172[v173[5]];
              *(void *)&__dst[v173[6]] = *(void *)&v172[v173[6]];
              v526(&__dst[v173[7]], &v172[v173[7]], v533);
              (*(void (**)(char *, void, uint64_t, int *))(v515 + 56))(__dst, 0, 1, v173);
            }
            v168[v170[7]] = v169[v170[7]];
            v168[v170[8]] = v169[v170[8]];
            v168[v170[9]] = v169[v170[9]];
            v168[v170[10]] = v169[v170[10]];
            uint64_t v219 = v144[11];
            uint64_t v220 = (char *)v142 + v219;
            uint64_t v221 = (char *)v143 + v219;
            uint64_t v222 = sub_1C151D2DC();
            uint64_t v223 = *(void *)(v222 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v223 + 48))(v221, 1, v222))
            {
              sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
              memcpy(v220, v221, *(void *)(*(void *)(v224 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v223 + 32))(v220, v221, v222);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v223 + 56))(v220, 0, 1, v222);
            }
            uint64_t v35 = v521;
            *(_OWORD *)((char *)v142 + v144[12]) = *(_OWORD *)((char *)v143 + v144[12]);
            uint64_t v232 = v144[13];
            uint64_t v233 = *(void *)((char *)v143 + v232);
            if (v233 == 2) {
              uint64_t v233 = 2;
            }
            *(void *)((char *)v142 + v232) = v233;
            *(void *)((char *)v142 + v144[14]) = *(void *)((char *)v143 + v144[14]);
            (*(void (**)(_OWORD *, void, uint64_t, int *))(v518 + 56))(v142, 0, 1, v144);
            uint64_t v5 = v539;
          }
          uint64_t v234 = v35[13];
          uint64_t v235 = (_OWORD *)(v2 + v234);
          uint64_t v236 = (_OWORD *)(a2 + v234);
          uint64_t v237 = type metadata accessor for WebEmbedDataVisualization();
          uint64_t v238 = *(void *)(v237 - 8);
          if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v238 + 48))(v236, 1, v237))
          {
            sub_1BFEEF2C0(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
            memcpy(v235, v236, *(void *)(*(void *)(v239 - 8) + 64));
          }
          else
          {
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              *uint64_t v235 = *v236;
              uint64_t v240 = v35;
              uint64_t v241 = type metadata accessor for GenericDataVisualization();
              v526((char *)v235 + *(int *)(v241 + 20), (char *)v236 + *(int *)(v241 + 20), v533);
              uint64_t v242 = *(int *)(v241 + 24);
              uint64_t v35 = v240;
              *(void *)((char *)v235 + v242) = *(void *)((char *)v236 + v242);
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v235, v236, *(void *)(v238 + 64));
            }
            (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v238 + 56))(v235, 0, 1, v237);
          }
          *(unsigned char *)(v2 + v35[14]) = *(unsigned char *)(a2 + v35[14]);
          goto LABEL_177;
        case 6:
          *(_OWORD *)uint64_t v2 = *(_OWORD *)a2;
          uint64_t v46 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
          uint64_t v47 = (_OWORD *)(v2 + v46);
          uint64_t v48 = a2 + v46;
          long long v49 = *(_OWORD *)(a2 + v46 + 16);
          *uint64_t v47 = *(_OWORD *)(a2 + v46);
          v47[1] = v49;
          uint64_t v50 = type metadata accessor for FormatCustomItem.Resolved();
          uint64_t v51 = *(int *)(v50 + 24);
          uint64_t v52 = (char *)v47 + v51;
          uint64_t v53 = (const void *)(v48 + v51);
          uint64_t v54 = type metadata accessor for FormatCustomItem.Action();
          uint64_t v55 = *(void *)(v54 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
          {
            sub_1BFEEF2C0(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
            memcpy(v52, v53, *(void *)(*(void *)(v56 - 8) + 64));
          }
          else
          {
            uint64_t v147 = sub_1C1515FDC();
            (*(void (**)(char *, const void *, uint64_t))(*(void *)(v147 - 8) + 32))(v52, v53, v147);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
          }
          uint64_t v5 = v539;
          *(void *)((char *)v47 + *(int *)(v50 + 28)) = *(void *)(v48 + *(int *)(v50 + 28));
          goto LABEL_177;
        case 8:
          *(_OWORD *)uint64_t v2 = *(_OWORD *)a2;
          uint64_t v57 = (int *)type metadata accessor for FeedEngagementBanner();
          uint64_t v58 = v57[5];
          uint64_t v59 = v2 + v58;
          uint64_t v60 = a2 + v58;
          uint64_t v61 = sub_1C151959C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 32))(v59, v60, v61);
          *(void *)(v2 + v57[6]) = *(void *)(a2 + v57[6]);
          uint64_t v62 = v57[7];
          uint64_t v63 = v2 + v62;
          uint64_t v64 = a2 + v62;
          *(unsigned char *)(v63 + 8) = *(unsigned char *)(v64 + 8);
          *(void *)uint64_t v63 = *(void *)v64;
          *(_OWORD *)(v2 + v57[8]) = *(_OWORD *)(a2 + v57[8]);
          goto LABEL_177;
        case 13:
          uint64_t v65 = *(void *)(a2 + 8);
          *(void *)uint64_t v2 = *(void *)a2;
          *(void *)(v2 + 8) = v65;
          *(unsigned char *)(v2 + 16) = *(unsigned char *)(a2 + 16);
          *(_OWORD *)(v2 + 24) = *(_OWORD *)(a2 + 24);
          *(_OWORD *)(v2 + 40) = *(_OWORD *)(a2 + 40);
          uint64_t v66 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
          uint64_t v67 = v2 + v66;
          uint64_t v68 = a2 + v66;
          *(void *)(v2 + v66) = *(void *)(a2 + v66);
          uint64_t v69 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
          uint64_t v70 = (void *)(v67 + v69);
          uint64_t v71 = (void *)(v68 + v69);
          type metadata accessor for PuzzleStatisticCategory(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v192 = type metadata accessor for PuzzleStatisticValue(0);
              int v193 = swift_getEnumCaseMultiPayload();
              if (v193 == 5)
              {
                uint64_t v194 = type metadata accessor for PuzzleStreak();
                uint64_t v195 = *(void *)(v194 - 8);
                if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v195 + 48))(v71, 1, v194))
                {
LABEL_125:
                  sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                  memcpy(v70, v71, *(void *)(*(void *)(v302 - 8) + 64));
                  goto LABEL_138;
                }
              }
              else
              {
                if (v193 != 4)
                {
                  memcpy(v70, v71, *(void *)(*(void *)(v192 - 8) + 64));
                  goto LABEL_139;
                }
                uint64_t v194 = type metadata accessor for PuzzleStreak();
                uint64_t v195 = *(void *)(v194 - 8);
                if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v195 + 48))(v71, 1, v194)) {
                  goto LABEL_125;
                }
              }
              uint64_t v306 = sub_1C151555C();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v306 - 8) + 32))(v70, v71, v306);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v195 + 56))(v70, 0, 1, v194);
LABEL_138:
              swift_storeEnumTagMultiPayload();
LABEL_139:
              uint64_t v307 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
              uint64_t v308 = *(int *)(v307 + 20);
              long long v309 = v70;
              long long v310 = (char *)v70 + v308;
              uint64_t v311 = (char *)v71 + v308;
              int v312 = swift_getEnumCaseMultiPayload();
              if (v312 == 5)
              {
                uint64_t v313 = type metadata accessor for PuzzleStreak();
                uint64_t v314 = *(void *)(v313 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v314 + 48))(v311, 1, v313))
                {
LABEL_144:
                  sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                  memcpy(v310, v311, *(void *)(*(void *)(v315 - 8) + 64));
                  goto LABEL_156;
                }
              }
              else
              {
                if (v312 != 4)
                {
                  memcpy(v310, v311, *(void *)(*(void *)(v192 - 8) + 64));
                  goto LABEL_157;
                }
                uint64_t v313 = type metadata accessor for PuzzleStreak();
                uint64_t v314 = *(void *)(v313 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v314 + 48))(v311, 1, v313)) {
                  goto LABEL_144;
                }
              }
              uint64_t v325 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v325 - 8) + 32))(v310, v311, v325);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v314 + 56))(v310, 0, 1, v313);
LABEL_156:
              swift_storeEnumTagMultiPayload();
LABEL_157:
              uint64_t v326 = *(int *)(v307 + 24);
              uint64_t v327 = (char *)v309 + v326;
              uint64_t v328 = (char *)v71 + v326;
              int v329 = swift_getEnumCaseMultiPayload();
              if (v329 == 5)
              {
                uint64_t v330 = type metadata accessor for PuzzleStreak();
                uint64_t v331 = *(void *)(v330 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v331 + 48))(v328, 1, v330))
                {
LABEL_162:
                  sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                  memcpy(v327, v328, *(void *)(*(void *)(v332 - 8) + 64));
                  goto LABEL_174;
                }
              }
              else
              {
                if (v329 != 4)
                {
                  memcpy(v327, v328, *(void *)(*(void *)(v192 - 8) + 64));
                  goto LABEL_175;
                }
                uint64_t v330 = type metadata accessor for PuzzleStreak();
                uint64_t v331 = *(void *)(v330 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v331 + 48))(v328, 1, v330)) {
                  goto LABEL_162;
                }
              }
              uint64_t v341 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v341 - 8) + 32))(v327, v328, v341);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v331 + 56))(v327, 0, 1, v330);
LABEL_174:
              swift_storeEnumTagMultiPayload();
LABEL_175:
              uint64_t v5 = v539;
LABEL_176:
              swift_storeEnumTagMultiPayload();
LABEL_177:
              swift_storeEnumTagMultiPayload();
LABEL_178:
              sub_1C049A100();
              uint64_t v343 = *(int *)(v342 + 48);
              uint64_t v344 = (char *)(v2 + v343);
              uint64_t v345 = (char *)(a2 + v343);
              switch(swift_getEnumCaseMultiPayload())
              {
                case 2u:
                  *(_OWORD *)uint64_t v344 = *(_OWORD *)v345;
                  uint64_t v346 = (int *)type metadata accessor for FeedBannerAd();
                  uint64_t v347 = v346[5];
                  uint64_t v348 = &v344[v347];
                  uint64_t v349 = &v345[v347];
                  uint64_t v350 = sub_1C151DBAC();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v350 - 8) + 32))(v348, v349, v350);
                  *(void *)&v344[v346[6]] = *(void *)&v345[v346[6]];
                  uint64_t v351 = v346[7];
                  uint64_t v352 = &v344[v351];
                  long long v353 = &v345[v351];
                  v352[8] = v353[8];
                  *(void *)uint64_t v352 = *(void *)v353;
                  *(_OWORD *)&v344[v346[8]] = *(_OWORD *)&v345[v346[8]];
                  goto LABEL_269;
                case 3u:
                  *(_OWORD *)uint64_t v344 = *(_OWORD *)v345;
                  *((void *)v344 + 2) = *((void *)v345 + 2);
                  v344[24] = v345[24];
                  *((void *)v344 + 4) = *((void *)v345 + 4);
                  *(_OWORD *)(v344 + 40) = *(_OWORD *)(v345 + 40);
                  v344[56] = v345[56];
                  uint64_t v537 = (int *)type metadata accessor for FeedHeadline(0);
                  uint64_t v354 = v537[10];
                  uint64_t v355 = &v344[v354];
                  uint64_t v356 = &v345[v354];
                  *uint64_t v355 = v345[v354];
                  v355[1] = v345[v354 + 1];
                  uint64_t v357 = (int *)type metadata accessor for FeedHeadline.State(0);
                  uint64_t v358 = v357[6];
                  uint64_t v359 = &v355[v358];
                  uint64_t v360 = &v356[v358];
                  uint64_t v361 = (int *)type metadata accessor for SharedItem();
                  uint64_t v362 = *((void *)v361 - 1);
                  if ((*(unsigned int (**)(char *, uint64_t, int *))(v362 + 48))(v360, 1, v361))
                  {
                    uint64_t v363 = type metadata accessor for FeedItem.SharedState(0);
                    memcpy(v359, v360, *(void *)(*(void *)(v363 - 8) + 64));
                  }
                  else
                  {
                    uint64_t v407 = sub_1C151631C();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v407 - 8) + 32))(v359, v360, v407);
                    v359[v361[5]] = v360[v361[5]];
                    *(void *)&v359[v361[6]] = *(void *)&v360[v361[6]];
                    uint64_t v408 = v361[7];
                    uint64_t v532 = &v359[v408];
                    id v409 = &v360[v408];
                    uint64_t v410 = sub_1C1515FDC();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v410 - 8) + 32))(v532, v409, v410);
                    (*(void (**)(char *, void, uint64_t, int *))(v362 + 56))(v359, 0, 1, v361);
                  }
                  v355[v357[7]] = v356[v357[7]];
                  v355[v357[8]] = v356[v357[8]];
                  v355[v357[9]] = v356[v357[9]];
                  v355[v357[10]] = v356[v357[10]];
                  uint64_t v411 = v537[11];
                  uint64_t v412 = &v344[v411];
                  char v413 = &v345[v411];
                  uint64_t v414 = sub_1C151D2DC();
                  uint64_t v415 = *(void *)(v414 - 8);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v415 + 48))(v413, 1, v414))
                  {
                    sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
                    memcpy(v412, v413, *(void *)(*(void *)(v416 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(v415 + 32))(v412, v413, v414);
                    (*(void (**)(char *, void, uint64_t, uint64_t))(v415 + 56))(v412, 0, 1, v414);
                  }
                  *(_OWORD *)&v344[v537[12]] = *(_OWORD *)&v345[v537[12]];
                  uint64_t v424 = v537[13];
                  uint64_t v425 = *(void *)&v345[v424];
                  if (v425 == 2) {
                    uint64_t v425 = 2;
                  }
                  *(void *)&v344[v424] = v425;
                  *(void *)&v344[v537[14]] = *(void *)&v345[v537[14]];
                  goto LABEL_269;
                case 4u:
                  uint64_t v529 = v2;
                  uint64_t v364 = *((void *)v345 + 1);
                  *(void *)uint64_t v344 = *(void *)v345;
                  *((void *)v344 + 1) = v364;
                  v344[16] = v345[16];
                  *(_OWORD *)(v344 + 24) = *(_OWORD *)(v345 + 24);
                  *(_OWORD *)(v344 + 40) = *(_OWORD *)(v345 + 40);
                  uint64_t v365 = (int *)type metadata accessor for FeedWebEmbed();
                  uint64_t v366 = v365[8];
                  uint64_t v367 = &v344[v366];
                  uint64_t v368 = &v345[v366];
                  uint64_t v369 = sub_1C1515FDC();
                  uint64_t v370 = *(void *)(v369 - 8);
                  int v371 = *(void (**)(char *, char *, uint64_t))(v370 + 32);
                  v371(v367, v368, v369);
                  uint64_t v531 = v365;
                  uint64_t v538 = v344;
                  uint64_t v372 = v365[9];
                  uint64_t v373 = &v344[v372];
                  uint64_t v374 = &v345[v372];
                  __dstb = (void *)v369;
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v370 + 48))(&v345[v372], 1, v369))
                  {
                    sub_1BFEEF2C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
                    memcpy(v373, v374, *(void *)(*(void *)(v375 - 8) + 64));
                  }
                  else
                  {
                    v371(v373, v374, v369);
                    (*(void (**)(char *, void, uint64_t, uint64_t))(v370 + 56))(v373, 0, 1, v369);
                  }
                  *(void *)&v344[v365[10]] = *(void *)&v345[v365[10]];
                  *(void *)&v344[v365[11]] = *(void *)&v345[v365[11]];
                  uint64_t v417 = v365[12];
                  uint64_t v418 = &v344[v417];
                  id v419 = &v345[v417];
                  uint64_t v420 = (int *)type metadata accessor for FeedHeadline(0);
                  uint64_t v421 = *((void *)v420 - 1);
                  uint64_t v520 = (void (*)(char *, char *, void *))v371;
                  if ((*(unsigned int (**)(char *, uint64_t, int *))(v421 + 48))(v419, 1, v420))
                  {
                    sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
                    memcpy(v418, v419, *(void *)(*(void *)(v422 - 8) + 64));
                  }
                  else
                  {
                    uint64_t v517 = v421;
                    *(_OWORD *)uint64_t v418 = *(_OWORD *)v419;
                    *((void *)v418 + 2) = *((void *)v419 + 2);
                    v418[24] = v419[24];
                    *((void *)v418 + 4) = *((void *)v419 + 4);
                    *(_OWORD *)(v418 + 40) = *(_OWORD *)(v419 + 40);
                    v418[56] = v419[56];
                    uint64_t v426 = v420[10];
                    uint64_t v427 = &v418[v426];
                    uint64_t v428 = &v419[v426];
                    *uint64_t v427 = v419[v426];
                    v427[1] = v419[v426 + 1];
                    uint64_t v429 = (int *)type metadata accessor for FeedHeadline.State(0);
                    uint64_t v430 = v429[6];
                    uint64_t v431 = &v427[v430];
                    id v432 = &v428[v430];
                    id v433 = (int *)type metadata accessor for SharedItem();
                    uint64_t v514 = *((void *)v433 - 1);
                    if ((*(unsigned int (**)(char *, uint64_t, int *))(v514 + 48))(v432, 1, v433))
                    {
                      uint64_t v434 = type metadata accessor for FeedItem.SharedState(0);
                      memcpy(v431, v432, *(void *)(*(void *)(v434 - 8) + 64));
                    }
                    else
                    {
                      uint64_t v451 = sub_1C151631C();
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v451 - 8) + 32))(v431, v432, v451);
                      v431[v433[5]] = v432[v433[5]];
                      *(void *)&v431[v433[6]] = *(void *)&v432[v433[6]];
                      v520(&v431[v433[7]], &v432[v433[7]], __dstb);
                      (*(void (**)(char *, void, uint64_t, int *))(v514 + 56))(v431, 0, 1, v433);
                    }
                    uint64_t v344 = v538;
                    v427[v429[7]] = v428[v429[7]];
                    v427[v429[8]] = v428[v429[8]];
                    v427[v429[9]] = v428[v429[9]];
                    v427[v429[10]] = v428[v429[10]];
                    uint64_t v452 = v420[11];
                    uint64_t v453 = &v418[v452];
                    uint64_t v454 = &v419[v452];
                    uint64_t v455 = sub_1C151D2DC();
                    uint64_t v456 = *(void *)(v455 - 8);
                    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v456 + 48))(v454, 1, v455))
                    {
                      sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
                      memcpy(v453, v454, *(void *)(*(void *)(v457 - 8) + 64));
                    }
                    else
                    {
                      (*(void (**)(char *, char *, uint64_t))(v456 + 32))(v453, v454, v455);
                      (*(void (**)(char *, void, uint64_t, uint64_t))(v456 + 56))(v453, 0, 1, v455);
                    }
                    uint64_t v365 = v531;
                    *(_OWORD *)&v418[v420[12]] = *(_OWORD *)&v419[v420[12]];
                    uint64_t v458 = v420[13];
                    uint64_t v459 = *(void *)&v419[v458];
                    if (v459 == 2) {
                      uint64_t v459 = 2;
                    }
                    *(void *)&v418[v458] = v459;
                    *(void *)&v418[v420[14]] = *(void *)&v419[v420[14]];
                    (*(void (**)(char *, void, uint64_t, int *))(v517 + 56))(v418, 0, 1, v420);
                  }
                  uint64_t v460 = v365[13];
                  uint64_t v461 = &v344[v460];
                  uint64_t v462 = &v345[v460];
                  uint64_t v463 = type metadata accessor for WebEmbedDataVisualization();
                  uint64_t v464 = *(void *)(v463 - 8);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v464 + 48))(v462, 1, v463))
                  {
                    sub_1BFEEF2C0(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
                    memcpy(v461, v462, *(void *)(*(void *)(v465 - 8) + 64));
                  }
                  else
                  {
                    if (swift_getEnumCaseMultiPayload() == 1)
                    {
                      *(_OWORD *)uint64_t v461 = *(_OWORD *)v462;
                      uint64_t v466 = type metadata accessor for GenericDataVisualization();
                      v520(&v461[*(int *)(v466 + 20)], &v462[*(int *)(v466 + 20)], __dstb);
                      uint64_t v365 = v531;
                      *(void *)&v461[*(int *)(v466 + 24)] = *(void *)&v462[*(int *)(v466 + 24)];
                      swift_storeEnumTagMultiPayload();
                    }
                    else
                    {
                      memcpy(v461, v462, *(void *)(v464 + 64));
                    }
                    (*(void (**)(char *, void, uint64_t, uint64_t))(v464 + 56))(v461, 0, 1, v463);
                  }
                  v344[v365[14]] = v345[v365[14]];
                  swift_storeEnumTagMultiPayload();
                  uint64_t v2 = v529;
                  goto LABEL_270;
                case 8u:
                  *(_OWORD *)uint64_t v344 = *(_OWORD *)v345;
                  uint64_t v376 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
                  uint64_t v377 = &v344[v376];
                  uint64_t v378 = &v345[v376];
                  long long v379 = *(_OWORD *)&v345[v376 + 16];
                  *(_OWORD *)uint64_t v377 = *(_OWORD *)&v345[v376];
                  *((_OWORD *)v377 + 1) = v379;
                  uint64_t v380 = type metadata accessor for FormatCustomItem.Resolved();
                  uint64_t v381 = *(int *)(v380 + 24);
                  uint64_t v382 = &v377[v381];
                  uint64_t v383 = &v378[v381];
                  uint64_t v384 = type metadata accessor for FormatCustomItem.Action();
                  uint64_t v385 = *(void *)(v384 - 8);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v385 + 48))(v383, 1, v384))
                  {
                    sub_1BFEEF2C0(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
                    memcpy(v382, v383, *(void *)(*(void *)(v386 - 8) + 64));
                  }
                  else
                  {
                    uint64_t v423 = sub_1C1515FDC();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v423 - 8) + 32))(v382, v383, v423);
                    (*(void (**)(char *, void, uint64_t, uint64_t))(v385 + 56))(v382, 0, 1, v384);
                  }
                  *(void *)&v377[*(int *)(v380 + 28)] = *(void *)&v378[*(int *)(v380 + 28)];
                  goto LABEL_269;
                case 0xAu:
                  *(_OWORD *)uint64_t v344 = *(_OWORD *)v345;
                  uint64_t v387 = (int *)type metadata accessor for FeedEngagementBanner();
                  uint64_t v388 = v387[5];
                  uint64_t v389 = &v344[v388];
                  long long v390 = &v345[v388];
                  uint64_t v391 = sub_1C151959C();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v391 - 8) + 32))(v389, v390, v391);
                  *(void *)&v344[v387[6]] = *(void *)&v345[v387[6]];
                  uint64_t v392 = v387[7];
                  uint64_t v393 = &v344[v392];
                  uint64_t v394 = &v345[v392];
                  v393[8] = v394[8];
                  *(void *)uint64_t v393 = *(void *)v394;
                  *(_OWORD *)&v344[v387[8]] = *(_OWORD *)&v345[v387[8]];
                  goto LABEL_269;
                case 0xFu:
                  uint64_t v395 = *((void *)v345 + 1);
                  *(void *)uint64_t v344 = *(void *)v345;
                  *((void *)v344 + 1) = v395;
                  v344[16] = v345[16];
                  *(_OWORD *)(v344 + 24) = *(_OWORD *)(v345 + 24);
                  *(_OWORD *)(v344 + 40) = *(_OWORD *)(v345 + 40);
                  uint64_t v396 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
                  uint64_t v397 = &v344[v396];
                  long long v398 = &v345[v396];
                  *(void *)&v344[v396] = *(void *)&v345[v396];
                  uint64_t v399 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
                  uint64_t v400 = &v397[v399];
                  id v401 = &v398[v399];
                  type metadata accessor for PuzzleStatisticCategory(0);
                  switch(swift_getEnumCaseMultiPayload())
                  {
                    case 1u:
                      uint64_t v438 = type metadata accessor for PuzzleStatisticValue(0);
                      int v439 = swift_getEnumCaseMultiPayload();
                      if (v439 == 5)
                      {
                        uint64_t v440 = type metadata accessor for PuzzleStreak();
                        uint64_t v441 = *(void *)(v440 - 8);
                        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v441 + 48))(v401, 1, v440))
                        {
LABEL_239:
                          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                          memcpy(v400, v401, *(void *)(*(void *)(v491 - 8) + 64));
                          goto LABEL_249;
                        }
                      }
                      else
                      {
                        if (v439 != 4)
                        {
                          memcpy(v400, v401, *(void *)(*(void *)(v438 - 8) + 64));
                          goto LABEL_250;
                        }
                        uint64_t v440 = type metadata accessor for PuzzleStreak();
                        uint64_t v441 = *(void *)(v440 - 8);
                        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v441 + 48))(v401, 1, v440)) {
                          goto LABEL_239;
                        }
                      }
                      uint64_t v494 = sub_1C151555C();
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v494 - 8) + 32))(v400, v401, v494);
                      (*(void (**)(char *, void, uint64_t, uint64_t))(v441 + 56))(v400, 0, 1, v440);
LABEL_249:
                      swift_storeEnumTagMultiPayload();
LABEL_250:
                      uint64_t v495 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
                      uint64_t v496 = *(int *)(v495 + 20);
                      uint64_t v497 = v400;
                      uint64_t v498 = &v400[v496];
                      uint64_t v499 = &v401[v496];
                      int v500 = swift_getEnumCaseMultiPayload();
                      if (v500 == 5)
                      {
                        uint64_t v501 = type metadata accessor for PuzzleStreak();
                        uint64_t v502 = *(void *)(v501 - 8);
                        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v502 + 48))(v499, 1, v501))
                        {
LABEL_255:
                          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                          memcpy(v498, v499, *(void *)(*(void *)(v503 - 8) + 64));
                          goto LABEL_258;
                        }
                      }
                      else
                      {
                        if (v500 != 4)
                        {
                          memcpy(v498, v499, *(void *)(*(void *)(v438 - 8) + 64));
                          goto LABEL_259;
                        }
                        uint64_t v501 = type metadata accessor for PuzzleStreak();
                        uint64_t v502 = *(void *)(v501 - 8);
                        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v502 + 48))(v499, 1, v501)) {
                          goto LABEL_255;
                        }
                      }
                      uint64_t v504 = sub_1C151555C();
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v504 - 8) + 32))(v498, v499, v504);
                      (*(void (**)(char *, void, uint64_t, uint64_t))(v502 + 56))(v498, 0, 1, v501);
LABEL_258:
                      swift_storeEnumTagMultiPayload();
LABEL_259:
                      uint64_t v505 = *(int *)(v495 + 24);
                      uint64_t v506 = (char *)v497 + v505;
                      unint64_t v507 = &v401[v505];
                      int v508 = swift_getEnumCaseMultiPayload();
                      if (v508 == 5)
                      {
                        uint64_t v509 = type metadata accessor for PuzzleStreak();
                        uint64_t v510 = *(void *)(v509 - 8);
                        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v510 + 48))(v507, 1, v509))
                        {
LABEL_264:
                          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                          memcpy(v506, v507, *(void *)(*(void *)(v511 - 8) + 64));
                          goto LABEL_267;
                        }
                      }
                      else
                      {
                        if (v508 != 4)
                        {
                          memcpy(v506, v507, *(void *)(*(void *)(v438 - 8) + 64));
                          goto LABEL_268;
                        }
                        uint64_t v509 = type metadata accessor for PuzzleStreak();
                        uint64_t v510 = *(void *)(v509 - 8);
                        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v510 + 48))(v507, 1, v509)) {
                          goto LABEL_264;
                        }
                      }
                      uint64_t v512 = sub_1C151555C();
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v512 - 8) + 32))(v506, v507, v512);
                      (*(void (**)(char *, void, uint64_t, uint64_t))(v510 + 56))(v506, 0, 1, v509);
                      goto LABEL_267;
                    case 2u:
                      uint64_t v435 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
                      uint64_t v436 = *((void *)v435 - 1);
                      if ((*(unsigned int (**)(char *, uint64_t, int *))(v436 + 48))(v401, 1, v435))
                      {
                        sub_1BFEEF2C0(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
                        memcpy(v400, v401, *(void *)(*(void *)(v437 - 8) + 64));
                      }
                      else
                      {
                        uint64_t v467 = sub_1C151631C();
                        (*(void (**)(char *, char *, uint64_t))(*(void *)(v467 - 8) + 32))(v400, v401, v467);
                        uint64_t v468 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
                        *(_OWORD *)&v400[v468[5]] = *(_OWORD *)&v401[v468[5]];
                        uint64_t v469 = v468[6];
                        uint64_t v470 = &v400[v469];
                        unint64_t v471 = &v401[v469];
                        long long v472 = *((_OWORD *)v471 + 1);
                        *(_OWORD *)uint64_t v470 = *(_OWORD *)v471;
                        *((_OWORD *)v470 + 1) = v472;
                        *(void *)&v400[v468[7]] = *(void *)&v401[v468[7]];
                        *(void *)&v400[v468[8]] = *(void *)&v401[v468[8]];
                        *(void *)&v400[v435[5]] = *(void *)&v401[v435[5]];
                        *(void *)&v400[v435[6]] = *(void *)&v401[v435[6]];
                        *(_OWORD *)&v400[v435[7]] = *(_OWORD *)&v401[v435[7]];
                        (*(void (**)(char *, void, uint64_t, int *))(v436 + 56))(v400, 0, 1, v435);
                      }
                      goto LABEL_268;
                    case 3u:
                      uint64_t v442 = *((void *)v401 + 1);
                      *(void *)uint64_t v400 = *(void *)v401;
                      *((void *)v400 + 1) = v442;
                      v400[16] = v401[16];
                      uint64_t v443 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
                      uint64_t v444 = v443[6];
                      uint64_t v530 = v400;
                      uint64_t v445 = &v400[v444];
                      uint64_t v446 = &v401[v444];
                      uint64_t v447 = type metadata accessor for PuzzleStreak();
                      uint64_t v448 = *(void *)(v447 - 8);
                      uint64_t v449 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v448 + 48);
                      if (v449(v446, 1, v447))
                      {
                        sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                        memcpy(v445, v446, *(void *)(*(void *)(v450 - 8) + 64));
                      }
                      else
                      {
                        uint64_t v473 = sub_1C151555C();
                        (*(void (**)(char *, char *, uint64_t))(*(void *)(v473 - 8) + 32))(v445, v446, v473);
                        (*(void (**)(char *, void, uint64_t, uint64_t))(v448 + 56))(v445, 0, 1, v447);
                      }
                      uint64_t v474 = v443[7];
                      long long v475 = (char *)v530 + v474;
                      long long v476 = &v401[v474];
                      if (v449(&v401[v474], 1, v447))
                      {
                        sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                        memcpy(v475, v476, *(void *)(*(void *)(v477 - 8) + 64));
                      }
                      else
                      {
                        uint64_t v478 = sub_1C151555C();
                        (*(void (**)(char *, char *, uint64_t))(*(void *)(v478 - 8) + 32))(v475, v476, v478);
                        (*(void (**)(char *, void, uint64_t, uint64_t))(v448 + 56))(v475, 0, 1, v447);
                      }
                      uint64_t v479 = v443[8];
                      uint64_t v480 = (_OWORD *)((char *)v530 + v479);
                      uint64_t v481 = &v401[v479];
                      long long v482 = *((_OWORD *)v481 + 1);
                      _OWORD *v480 = *(_OWORD *)v481;
                      v480[1] = v482;
                      *(_OWORD *)((char *)v480 + 25) = *(_OWORD *)(v481 + 25);
                      uint64_t v483 = v443[9];
                      long long v484 = (_OWORD *)((char *)v530 + v483);
                      id v485 = &v401[v483];
                      *(_OWORD *)((char *)v484 + 25) = *(_OWORD *)(v485 + 25);
                      long long v486 = *((_OWORD *)v485 + 1);
                      *long long v484 = *(_OWORD *)v485;
                      v484[1] = v486;
                      uint64_t v487 = v443[10];
                      uint64_t v488 = (_OWORD *)((char *)v530 + v487);
                      uint64_t v489 = &v401[v487];
                      long long v490 = *((_OWORD *)v489 + 1);
                      *uint64_t v488 = *(_OWORD *)v489;
                      v488[1] = v490;
                      *(_OWORD *)((char *)v488 + 25) = *(_OWORD *)(v489 + 25);
                      goto LABEL_268;
                    default:
                      uint64_t v402 = type metadata accessor for PuzzleStatisticValue(0);
                      int v403 = swift_getEnumCaseMultiPayload();
                      if (v403 == 5)
                      {
                        uint64_t v404 = type metadata accessor for PuzzleStreak();
                        uint64_t v405 = *(void *)(v404 - 8);
                        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v405 + 48))(v401, 1, v404)) {
                          goto LABEL_192;
                        }
                      }
                      else
                      {
                        if (v403 != 4)
                        {
                          memcpy(v400, v401, *(void *)(*(void *)(v402 - 8) + 64));
                          goto LABEL_268;
                        }
                        uint64_t v404 = type metadata accessor for PuzzleStreak();
                        uint64_t v405 = *(void *)(v404 - 8);
                        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v405 + 48))(v401, 1, v404))
                        {
LABEL_192:
                          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                          memcpy(v400, v401, *(void *)(*(void *)(v406 - 8) + 64));
                          goto LABEL_267;
                        }
                      }
                      uint64_t v493 = sub_1C151555C();
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v493 - 8) + 32))(v400, v401, v493);
                      (*(void (**)(char *, void, uint64_t, uint64_t))(v405 + 56))(v400, 0, 1, v404);
LABEL_267:
                      swift_storeEnumTagMultiPayload();
LABEL_268:
                      swift_storeEnumTagMultiPayload();
                      break;
                  }
                  break;
                default:
                  memcpy(v344, v345, *(void *)(*(void *)(v5 - 8) + 64));
                  goto LABEL_270;
              }
              goto LABEL_269;
            case 2u:
              char v185 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
              uint64_t v186 = *((void *)v185 - 1);
              if ((*(unsigned int (**)(void *, uint64_t, int *))(v186 + 48))(v71, 1, v185))
              {
                sub_1BFEEF2C0(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
                memcpy(v70, v71, *(void *)(*(void *)(v187 - 8) + 64));
              }
              else
              {
                uint64_t v254 = sub_1C151631C();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v254 - 8) + 32))(v70, v71, v254);
                unint64_t v255 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
                *(_OWORD *)((char *)v70 + v255[5]) = *(_OWORD *)((char *)v71 + v255[5]);
                uint64_t v256 = v255[6];
                uint64_t v257 = (_OWORD *)((char *)v70 + v256);
                uint64_t v258 = (_OWORD *)((char *)v71 + v256);
                long long v259 = v258[1];
                *uint64_t v257 = *v258;
                v257[1] = v259;
                *(void *)((char *)v70 + v255[7]) = *(void *)((char *)v71 + v255[7]);
                *(void *)((char *)v70 + v255[8]) = *(void *)((char *)v71 + v255[8]);
                *(void *)((char *)v70 + v185[5]) = *(void *)((char *)v71 + v185[5]);
                *(void *)((char *)v70 + v185[6]) = *(void *)((char *)v71 + v185[6]);
                *(_OWORD *)((char *)v70 + v185[7]) = *(_OWORD *)((char *)v71 + v185[7]);
                (*(void (**)(void *, void, uint64_t, int *))(v186 + 56))(v70, 0, 1, v185);
              }
              goto LABEL_176;
            case 3u:
              uint64_t v196 = v71[1];
              *uint64_t v70 = *v71;
              v70[1] = v196;
              *((unsigned char *)v70 + 16) = *((unsigned char *)v71 + 16);
              size_t v197 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
              uint64_t v198 = v197[6];
              uint64_t v528 = v70;
              int v199 = (char *)v70 + v198;
              uint64_t v200 = (char *)v71 + v198;
              uint64_t v201 = type metadata accessor for PuzzleStreak();
              uint64_t v202 = *(void *)(v201 - 8);
              uint64_t v203 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v202 + 48);
              if (v203(v200, 1, v201))
              {
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v199, v200, *(void *)(*(void *)(v204 - 8) + 64));
              }
              else
              {
                uint64_t v266 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v266 - 8) + 32))(v199, v200, v266);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v202 + 56))(v199, 0, 1, v201);
              }
              uint64_t v267 = v197[7];
              long long v268 = (char *)v528 + v267;
              uint64_t v269 = (char *)v71 + v267;
              if (v203((char *)v71 + v267, 1, v201))
              {
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v268, v269, *(void *)(*(void *)(v270 - 8) + 64));
              }
              else
              {
                uint64_t v276 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v276 - 8) + 32))(v268, v269, v276);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v202 + 56))(v268, 0, 1, v201);
              }
              uint64_t v5 = v539;
              uint64_t v277 = v197[8];
              id v278 = (_OWORD *)((char *)v528 + v277);
              uint64_t v279 = (_OWORD *)((char *)v71 + v277);
              long long v280 = v279[1];
              *id v278 = *v279;
              v278[1] = v280;
              *(_OWORD *)((char *)v278 + 25) = *(_OWORD *)((char *)v279 + 25);
              uint64_t v281 = v197[9];
              id v282 = (_OWORD *)((char *)v528 + v281);
              uint64_t v283 = (_OWORD *)((char *)v71 + v281);
              *(_OWORD *)((char *)v282 + 25) = *(_OWORD *)((char *)v283 + 25);
              long long v284 = v283[1];
              *id v282 = *v283;
              v282[1] = v284;
              uint64_t v285 = v197[10];
              uint64_t v286 = (_OWORD *)((char *)v528 + v285);
              uint64_t v287 = (_OWORD *)((char *)v71 + v285);
              long long v288 = v287[1];
              *uint64_t v286 = *v287;
              v286[1] = v288;
              *(_OWORD *)((char *)v286 + 25) = *(_OWORD *)((char *)v287 + 25);
              goto LABEL_176;
            default:
              uint64_t v72 = type metadata accessor for PuzzleStatisticValue(0);
              int v73 = swift_getEnumCaseMultiPayload();
              if (v73 == 5)
              {
                uint64_t v74 = type metadata accessor for PuzzleStreak();
                uint64_t v75 = *(void *)(v74 - 8);
                if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v75 + 48))(v71, 1, v74))
                {
LABEL_19:
                  sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                  memcpy(v70, v71, *(void *)(*(void *)(v76 - 8) + 64));
LABEL_131:
                  swift_storeEnumTagMultiPayload();
                  goto LABEL_176;
                }
              }
              else
              {
                if (v73 != 4)
                {
                  memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64));
                  goto LABEL_176;
                }
                uint64_t v74 = type metadata accessor for PuzzleStreak();
                uint64_t v75 = *(void *)(v74 - 8);
                if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v75 + 48))(v71, 1, v74)) {
                  goto LABEL_19;
                }
              }
              uint64_t v304 = sub_1C151555C();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v304 - 8) + 32))(v70, v71, v304);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v75 + 56))(v70, 0, 1, v74);
              goto LABEL_131;
          }
        default:
          memcpy((void *)v2, (const void *)a2, *(void *)(*(void *)(v5 - 8) + 64));
          goto LABEL_178;
      }
    }
    switch(v6)
    {
      case 0:
        *(_OWORD *)uint64_t v2 = *(_OWORD *)a2;
        uint64_t v15 = (int *)type metadata accessor for FeedBannerAd();
        uint64_t v16 = v15[5];
        uint64_t v17 = v2 + v16;
        uint64_t v18 = a2 + v16;
        uint64_t v19 = sub_1C151DBAC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
        *(void *)(v2 + v15[6]) = *(void *)(a2 + v15[6]);
        uint64_t v20 = v15[7];
        uint64_t v21 = v2 + v20;
        uint64_t v22 = a2 + v20;
        *(unsigned char *)(v21 + 8) = *(unsigned char *)(v22 + 8);
        *(void *)uint64_t v21 = *(void *)v22;
        *(_OWORD *)(v2 + v15[8]) = *(_OWORD *)(a2 + v15[8]);
        goto LABEL_269;
      case 1:
        *(_OWORD *)uint64_t v2 = *(_OWORD *)a2;
        *(void *)(v2 + 16) = *(void *)(a2 + 16);
        *(unsigned char *)(v2 + 24) = *(unsigned char *)(a2 + 24);
        *(void *)(v2 + 32) = *(void *)(a2 + 32);
        *(_OWORD *)(v2 + 40) = *(_OWORD *)(a2 + 40);
        *(unsigned char *)(v2 + 56) = *(unsigned char *)(a2 + 56);
        uint64_t v77 = (int *)type metadata accessor for FeedHeadline(0);
        uint64_t v78 = v77[10];
        long long v79 = (unsigned char *)(v2 + v78);
        uint64_t v80 = a2 + v78;
        *long long v79 = *(unsigned char *)(a2 + v78);
        v79[1] = *(unsigned char *)(a2 + v78 + 1);
        uint64_t v81 = (int *)type metadata accessor for FeedHeadline.State(0);
        uint64_t v82 = v81[6];
        uint64_t v83 = &v79[v82];
        uint64_t v84 = (char *)(v80 + v82);
        uint64_t v85 = (int *)type metadata accessor for SharedItem();
        uint64_t v86 = *((void *)v85 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v86 + 48))(v84, 1, v85))
        {
          uint64_t v87 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(v83, v84, *(void *)(*(void *)(v87 - 8) + 64));
        }
        else
        {
          uint64_t v148 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v148 - 8) + 32))(v83, v84, v148);
          v83[v85[5]] = v84[v85[5]];
          *(void *)&v83[v85[6]] = *(void *)&v84[v85[6]];
          uint64_t v149 = v85[7];
          uint64_t v536 = &v83[v149];
          uint64_t v150 = &v84[v149];
          uint64_t v151 = sub_1C1515FDC();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v151 - 8) + 32))(v536, v150, v151);
          (*(void (**)(char *, void, uint64_t, int *))(v86 + 56))(v83, 0, 1, v85);
        }
        v79[v81[7]] = *(unsigned char *)(v80 + v81[7]);
        v79[v81[8]] = *(unsigned char *)(v80 + v81[8]);
        v79[v81[9]] = *(unsigned char *)(v80 + v81[9]);
        v79[v81[10]] = *(unsigned char *)(v80 + v81[10]);
        uint64_t v152 = v77[11];
        uint64_t v153 = (void *)(v2 + v152);
        uint64_t v154 = (const void *)(a2 + v152);
        uint64_t v155 = sub_1C151D2DC();
        uint64_t v156 = *(void *)(v155 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v156 + 48))(v154, 1, v155))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
          memcpy(v153, v154, *(void *)(*(void *)(v157 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v156 + 32))(v153, v154, v155);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v156 + 56))(v153, 0, 1, v155);
        }
        *(_OWORD *)(v2 + v77[12]) = *(_OWORD *)(a2 + v77[12]);
        uint64_t v175 = v77[13];
        uint64_t v176 = *(void *)(a2 + v175);
        if (v176 == 2) {
          uint64_t v176 = 2;
        }
        *(void *)(v2 + v175) = v176;
        *(void *)(v2 + v77[14]) = *(void *)(a2 + v77[14]);
        goto LABEL_269;
      case 2:
        uint64_t v88 = *(void *)(a2 + 8);
        *(void *)uint64_t v2 = *(void *)a2;
        *(void *)(v2 + 8) = v88;
        *(unsigned char *)(v2 + 16) = *(unsigned char *)(a2 + 16);
        *(_OWORD *)(v2 + 24) = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(v2 + 40) = *(_OWORD *)(a2 + 40);
        uint64_t v89 = (int *)type metadata accessor for FeedWebEmbed();
        uint64_t v90 = v89[8];
        uint64_t v91 = v2 + v90;
        uint64_t v92 = a2 + v90;
        uint64_t v93 = sub_1C1515FDC();
        uint64_t v94 = *(void *)(v93 - 8);
        uint64_t v95 = *(void (**)(uint64_t, uint64_t, uint64_t))(v94 + 32);
        v95(v91, v92, v93);
        uint64_t v96 = v89[9];
        uint64_t v97 = (void *)(v2 + v96);
        uint64_t v98 = (const void *)(a2 + v96);
        uint64_t v534 = v93;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v94 + 48))(a2 + v96, 1, v93))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
          memcpy(v97, v98, *(void *)(*(void *)(v99 - 8) + 64));
        }
        else
        {
          v95((uint64_t)v97, (uint64_t)v98, v93);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v94 + 56))(v97, 0, 1, v93);
        }
        *(void *)(v2 + v89[10]) = *(void *)(a2 + v89[10]);
        *(void *)(v2 + v89[11]) = *(void *)(a2 + v89[11]);
        uint64_t v158 = v89[12];
        uint64_t v159 = (_OWORD *)(v2 + v158);
        uint64_t v160 = (_OWORD *)(a2 + v158);
        uint64_t v161 = (int *)type metadata accessor for FeedHeadline(0);
        uint64_t v162 = *((void *)v161 - 1);
        int v527 = (void (*)(char *, char *, uint64_t))v95;
        if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v162 + 48))(v160, 1, v161))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
          memcpy(v159, v160, *(void *)(*(void *)(v163 - 8) + 64));
        }
        else
        {
          uint64_t v519 = v162;
          uint64_t v522 = v89;
          _OWORD *v159 = *v160;
          *((void *)v159 + 2) = *((void *)v160 + 2);
          *((unsigned char *)v159 + 24) = *((unsigned char *)v160 + 24);
          *((void *)v159 + 4) = *((void *)v160 + 4);
          *(_OWORD *)((char *)v159 + 40) = *(_OWORD *)((char *)v160 + 40);
          *((unsigned char *)v159 + 56) = *((unsigned char *)v160 + 56);
          uint64_t v177 = v161[10];
          uint64_t v178 = (char *)v159 + v177;
          uint64_t v179 = (char *)v160 + v177;
          *uint64_t v178 = *((unsigned char *)v160 + v177);
          v178[1] = *((unsigned char *)v160 + v177 + 1);
          uint64_t v180 = (int *)type metadata accessor for FeedHeadline.State(0);
          uint64_t v181 = v180[6];
          __dsta = &v178[v181];
          uint64_t v182 = &v179[v181];
          id v183 = (int *)type metadata accessor for SharedItem();
          uint64_t v516 = *((void *)v183 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v516 + 48))(v182, 1, v183))
          {
            uint64_t v184 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(__dsta, v182, *(void *)(*(void *)(v184 - 8) + 64));
          }
          else
          {
            uint64_t v225 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v225 - 8) + 32))(__dsta, v182, v225);
            __dsta[v183[5]] = v182[v183[5]];
            *(void *)&__dsta[v183[6]] = *(void *)&v182[v183[6]];
            v527(&__dsta[v183[7]], &v182[v183[7]], v534);
            (*(void (**)(char *, void, uint64_t, int *))(v516 + 56))(__dsta, 0, 1, v183);
          }
          v178[v180[7]] = v179[v180[7]];
          v178[v180[8]] = v179[v180[8]];
          v178[v180[9]] = v179[v180[9]];
          v178[v180[10]] = v179[v180[10]];
          uint64_t v226 = v161[11];
          uint64_t v227 = (char *)v159 + v226;
          uint64_t v228 = (char *)v160 + v226;
          uint64_t v229 = sub_1C151D2DC();
          uint64_t v230 = *(void *)(v229 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v230 + 48))(v228, 1, v229))
          {
            sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
            memcpy(v227, v228, *(void *)(*(void *)(v231 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v230 + 32))(v227, v228, v229);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v230 + 56))(v227, 0, 1, v229);
          }
          uint64_t v89 = v522;
          *(_OWORD *)((char *)v159 + v161[12]) = *(_OWORD *)((char *)v160 + v161[12]);
          uint64_t v243 = v161[13];
          uint64_t v244 = *(void *)((char *)v160 + v243);
          if (v244 == 2) {
            uint64_t v244 = 2;
          }
          *(void *)((char *)v159 + v243) = v244;
          *(void *)((char *)v159 + v161[14]) = *(void *)((char *)v160 + v161[14]);
          (*(void (**)(_OWORD *, void, uint64_t, int *))(v519 + 56))(v159, 0, 1, v161);
        }
        uint64_t v245 = v89[13];
        uint64_t v246 = (_OWORD *)(v2 + v245);
        uint64_t v247 = (_OWORD *)(a2 + v245);
        uint64_t v248 = type metadata accessor for WebEmbedDataVisualization();
        uint64_t v249 = *(void *)(v248 - 8);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v249 + 48))(v247, 1, v248))
        {
          sub_1BFEEF2C0(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
          memcpy(v246, v247, *(void *)(*(void *)(v250 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            _OWORD *v246 = *v247;
            uint64_t v251 = v89;
            uint64_t v252 = type metadata accessor for GenericDataVisualization();
            v527((char *)v246 + *(int *)(v252 + 20), (char *)v247 + *(int *)(v252 + 20), v534);
            uint64_t v253 = *(int *)(v252 + 24);
            uint64_t v89 = v251;
            *(void *)((char *)v246 + v253) = *(void *)((char *)v247 + v253);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v246, v247, *(void *)(v249 + 64));
          }
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v249 + 56))(v246, 0, 1, v248);
        }
        *(unsigned char *)(v2 + v89[14]) = *(unsigned char *)(a2 + v89[14]);
        goto LABEL_269;
      case 6:
        *(_OWORD *)uint64_t v2 = *(_OWORD *)a2;
        uint64_t v100 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
        char v101 = (_OWORD *)(v2 + v100);
        uint64_t v102 = a2 + v100;
        long long v103 = *(_OWORD *)(a2 + v100 + 16);
        *char v101 = *(_OWORD *)(a2 + v100);
        v101[1] = v103;
        uint64_t v104 = type metadata accessor for FormatCustomItem.Resolved();
        uint64_t v105 = *(int *)(v104 + 24);
        long long v106 = (char *)v101 + v105;
        uint64_t v107 = (const void *)(v102 + v105);
        uint64_t v108 = type metadata accessor for FormatCustomItem.Action();
        uint64_t v109 = *(void *)(v108 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v109 + 48))(v107, 1, v108))
        {
          sub_1BFEEF2C0(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
          memcpy(v106, v107, *(void *)(*(void *)(v110 - 8) + 64));
        }
        else
        {
          uint64_t v164 = sub_1C1515FDC();
          (*(void (**)(char *, const void *, uint64_t))(*(void *)(v164 - 8) + 32))(v106, v107, v164);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v109 + 56))(v106, 0, 1, v108);
        }
        *(void *)((char *)v101 + *(int *)(v104 + 28)) = *(void *)(v102 + *(int *)(v104 + 28));
        goto LABEL_269;
      case 8:
        *(_OWORD *)uint64_t v2 = *(_OWORD *)a2;
        uint64_t v111 = (int *)type metadata accessor for FeedEngagementBanner();
        uint64_t v112 = v111[5];
        uint64_t v113 = v2 + v112;
        uint64_t v114 = a2 + v112;
        uint64_t v115 = sub_1C151959C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v115 - 8) + 32))(v113, v114, v115);
        *(void *)(v2 + v111[6]) = *(void *)(a2 + v111[6]);
        uint64_t v116 = v111[7];
        uint64_t v117 = v2 + v116;
        uint64_t v118 = a2 + v116;
        *(unsigned char *)(v117 + 8) = *(unsigned char *)(v118 + 8);
        *(void *)uint64_t v117 = *(void *)v118;
        *(_OWORD *)(v2 + v111[8]) = *(_OWORD *)(a2 + v111[8]);
        goto LABEL_269;
      case 13:
        uint64_t v119 = *(void *)(a2 + 8);
        *(void *)uint64_t v2 = *(void *)a2;
        *(void *)(v2 + 8) = v119;
        *(unsigned char *)(v2 + 16) = *(unsigned char *)(a2 + 16);
        *(_OWORD *)(v2 + 24) = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(v2 + 40) = *(_OWORD *)(a2 + 40);
        uint64_t v120 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
        uint64_t v121 = v2 + v120;
        uint64_t v122 = a2 + v120;
        *(void *)(v2 + v120) = *(void *)(a2 + v120);
        uint64_t v123 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
        uint64_t v124 = (void *)(v121 + v123);
        uint64_t v125 = (void *)(v122 + v123);
        type metadata accessor for PuzzleStatisticCategory(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v205 = type metadata accessor for PuzzleStatisticValue(0);
            int v206 = swift_getEnumCaseMultiPayload();
            if (v206 == 5)
            {
              uint64_t v207 = type metadata accessor for PuzzleStreak();
              uint64_t v208 = *(void *)(v207 - 8);
              if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v208 + 48))(v125, 1, v207))
              {
LABEL_128:
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v124, v125, *(void *)(*(void *)(v303 - 8) + 64));
                goto LABEL_147;
              }
            }
            else
            {
              if (v206 != 4)
              {
                memcpy(v124, v125, *(void *)(*(void *)(v205 - 8) + 64));
                goto LABEL_148;
              }
              uint64_t v207 = type metadata accessor for PuzzleStreak();
              uint64_t v208 = *(void *)(v207 - 8);
              if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v208 + 48))(v125, 1, v207)) {
                goto LABEL_128;
              }
            }
            uint64_t v316 = sub_1C151555C();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v316 - 8) + 32))(v124, v125, v316);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v208 + 56))(v124, 0, 1, v207);
LABEL_147:
            swift_storeEnumTagMultiPayload();
LABEL_148:
            uint64_t v317 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
            uint64_t v318 = *(int *)(v317 + 20);
            uint64_t v319 = (char *)v124 + v318;
            int v320 = (char *)v125 + v318;
            int v321 = swift_getEnumCaseMultiPayload();
            if (v321 == 5)
            {
              uint64_t v322 = type metadata accessor for PuzzleStreak();
              uint64_t v323 = *(void *)(v322 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v323 + 48))(v320, 1, v322))
              {
LABEL_153:
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v319, v320, *(void *)(*(void *)(v324 - 8) + 64));
                goto LABEL_165;
              }
            }
            else
            {
              if (v321 != 4)
              {
                memcpy(v319, v320, *(void *)(*(void *)(v205 - 8) + 64));
                goto LABEL_166;
              }
              uint64_t v322 = type metadata accessor for PuzzleStreak();
              uint64_t v323 = *(void *)(v322 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v323 + 48))(v320, 1, v322)) {
                goto LABEL_153;
              }
            }
            uint64_t v333 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v333 - 8) + 32))(v319, v320, v333);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v323 + 56))(v319, 0, 1, v322);
LABEL_165:
            swift_storeEnumTagMultiPayload();
LABEL_166:
            uint64_t v334 = *(int *)(v317 + 24);
            uint64_t v335 = (char *)v124 + v334;
            uint64_t v336 = (char *)v125 + v334;
            int v337 = swift_getEnumCaseMultiPayload();
            if (v337 == 5)
            {
              uint64_t v338 = type metadata accessor for PuzzleStreak();
              uint64_t v339 = *(void *)(v338 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v339 + 48))(v336, 1, v338))
              {
LABEL_171:
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v335, v336, *(void *)(*(void *)(v340 - 8) + 64));
                goto LABEL_242;
              }
            }
            else
            {
              if (v337 != 4)
              {
                memcpy(v335, v336, *(void *)(*(void *)(v205 - 8) + 64));
                goto LABEL_243;
              }
              uint64_t v338 = type metadata accessor for PuzzleStreak();
              uint64_t v339 = *(void *)(v338 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v339 + 48))(v336, 1, v338)) {
                goto LABEL_171;
              }
            }
            uint64_t v492 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v492 - 8) + 32))(v335, v336, v492);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v339 + 56))(v335, 0, 1, v338);
            goto LABEL_242;
          case 2u:
            id v188 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
            uint64_t v189 = *((void *)v188 - 1);
            if ((*(unsigned int (**)(void *, uint64_t, int *))(v189 + 48))(v125, 1, v188))
            {
              sub_1BFEEF2C0(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
              size_t v191 = *(void *)(*(void *)(v190 - 8) + 64);
              goto LABEL_123;
            }
            uint64_t v260 = sub_1C151631C();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v260 - 8) + 32))(v124, v125, v260);
            uint64_t v261 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
            *(_OWORD *)((char *)v124 + v261[5]) = *(_OWORD *)((char *)v125 + v261[5]);
            uint64_t v262 = v261[6];
            uint64_t v263 = (_OWORD *)((char *)v124 + v262);
            uint64_t v264 = (_OWORD *)((char *)v125 + v262);
            long long v265 = v264[1];
            *uint64_t v263 = *v264;
            v263[1] = v265;
            *(void *)((char *)v124 + v261[7]) = *(void *)((char *)v125 + v261[7]);
            *(void *)((char *)v124 + v261[8]) = *(void *)((char *)v125 + v261[8]);
            *(void *)((char *)v124 + v188[5]) = *(void *)((char *)v125 + v188[5]);
            *(void *)((char *)v124 + v188[6]) = *(void *)((char *)v125 + v188[6]);
            *(_OWORD *)((char *)v124 + v188[7]) = *(_OWORD *)((char *)v125 + v188[7]);
            (*(void (**)(void *, void, uint64_t, int *))(v189 + 56))(v124, 0, 1, v188);
            goto LABEL_243;
          case 3u:
            uint64_t v209 = v125[1];
            *uint64_t v124 = *v125;
            v124[1] = v209;
            *((unsigned char *)v124 + 16) = *((unsigned char *)v125 + 16);
            uint64_t v210 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
            uint64_t v211 = v210[6];
            uint64_t v212 = (char *)v124 + v211;
            int v213 = (char *)v125 + v211;
            uint64_t v214 = type metadata accessor for PuzzleStreak();
            uint64_t v215 = *(void *)(v214 - 8);
            uint64_t v216 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v215 + 48);
            if (v216(v213, 1, v214))
            {
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v212, v213, *(void *)(*(void *)(v217 - 8) + 64));
            }
            else
            {
              uint64_t v271 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v271 - 8) + 32))(v212, v213, v271);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v215 + 56))(v212, 0, 1, v214);
            }
            uint64_t v272 = v210[7];
            long long v273 = (char *)v124 + v272;
            long long v274 = (char *)v125 + v272;
            if (v216((char *)v125 + v272, 1, v214))
            {
              sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v273, v274, *(void *)(*(void *)(v275 - 8) + 64));
            }
            else
            {
              uint64_t v289 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v289 - 8) + 32))(v273, v274, v289);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v215 + 56))(v273, 0, 1, v214);
            }
            uint64_t v290 = v210[8];
            uint64_t v291 = (_OWORD *)((char *)v124 + v290);
            uint64_t v292 = (_OWORD *)((char *)v125 + v290);
            long long v293 = v292[1];
            *uint64_t v291 = *v292;
            v291[1] = v293;
            *(_OWORD *)((char *)v291 + 25) = *(_OWORD *)((char *)v292 + 25);
            uint64_t v294 = v210[9];
            int v295 = (_OWORD *)((char *)v124 + v294);
            id v296 = (_OWORD *)((char *)v125 + v294);
            *(_OWORD *)((char *)v295 + 25) = *(_OWORD *)((char *)v296 + 25);
            long long v297 = v296[1];
            *int v295 = *v296;
            v295[1] = v297;
            uint64_t v298 = v210[10];
            uint64_t v299 = (_OWORD *)((char *)v124 + v298);
            uint64_t v300 = (_OWORD *)((char *)v125 + v298);
            long long v301 = v300[1];
            *uint64_t v299 = *v300;
            v299[1] = v301;
            *(_OWORD *)((char *)v299 + 25) = *(_OWORD *)((char *)v300 + 25);
            goto LABEL_243;
          default:
            uint64_t v126 = type metadata accessor for PuzzleStatisticValue(0);
            int v127 = swift_getEnumCaseMultiPayload();
            if (v127 == 5)
            {
              uint64_t v128 = type metadata accessor for PuzzleStreak();
              uint64_t v129 = *(void *)(v128 - 8);
              if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v129 + 48))(v125, 1, v128)) {
                goto LABEL_32;
              }
            }
            else
            {
              if (v127 != 4)
              {
                size_t v191 = *(void *)(*(void *)(v126 - 8) + 64);
LABEL_123:
                memcpy(v124, v125, v191);
                goto LABEL_243;
              }
              uint64_t v128 = type metadata accessor for PuzzleStreak();
              uint64_t v129 = *(void *)(v128 - 8);
              if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v129 + 48))(v125, 1, v128))
              {
LABEL_32:
                sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                memcpy(v124, v125, *(void *)(*(void *)(v130 - 8) + 64));
                goto LABEL_242;
              }
            }
            uint64_t v305 = sub_1C151555C();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v305 - 8) + 32))(v124, v125, v305);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v129 + 56))(v124, 0, 1, v128);
LABEL_242:
            swift_storeEnumTagMultiPayload();
LABEL_243:
            swift_storeEnumTagMultiPayload();
LABEL_269:
            swift_storeEnumTagMultiPayload();
LABEL_270:
            swift_storeEnumTagMultiPayload();
            break;
        }
        break;
      default:
        memcpy((void *)v2, (const void *)a2, *(void *)(*(void *)(v5 - 8) + 64));
        goto LABEL_270;
    }
  }
  return v2;
}

uint64_t sub_1C0E44CB4()
{
  uint64_t result = type metadata accessor for FeedItem(319);
  if (v1 <= 0x3F)
  {
    v2[4] = *(void *)(result - 8) + 64;
    swift_getTupleTypeLayout2();
    v2[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1C0E44D88@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  long long v79 = a2;
  *(void *)&long long v78 = a1;
  uint64_t v2 = sub_1C1515FDC();
  *(void *)&long long v77 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unsigned int v4 = (char *)&v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF2918C();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C151631C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF29220();
  uint64_t v14 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(v15 >> 60)
  {
    case 1uLL:
      long long v23 = *(_OWORD *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      long long v84 = *(_OWORD *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      long long v85 = v23;
      uint64_t v86 = *(void *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      unint64_t v24 = v15;
      sub_1C0E47E14((uint64_t)&v81);
      uint64_t v25 = v82;
      long long v77 = v83;
      long long v78 = v81;
      uint64_t v26 = swift_allocObject();
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = v78;
      *(void *)(v27 + 32) = v25;
      *(_OWORD *)(v27 + 40) = v77;
      uint64_t v28 = v27 | 0x1000000000000000;
      *(void *)(v26 + 16) = v24;
      goto LABEL_7;
    case 2uLL:
      unint64_t v76 = v15;
      uint64_t v29 = swift_projectBox();
      sub_1C0E5720C(v29, (uint64_t)v17, (uint64_t (*)(void))sub_1BFF29220);
      sub_1C026E664(v12);
      uint64_t v30 = swift_allocObject();
      uint64_t v31 = swift_allocBox();
      uint64_t v33 = v32;
      (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(v32, v12, v9);
      *(void *)(v33 + *(int *)(v14 + 36)) = MEMORY[0x1E4FBC860];
      uint64_t v34 = *(void (**)(char *, uint64_t))(v10 + 8);
      swift_retain();
      v34(v12, v9);
      uint64_t result = sub_1C0E570EC((uint64_t)v17, (uint64_t (*)(void))sub_1BFF29220);
      *(void *)(v30 + 16) = v76;
      *(void *)(v30 + 24) = v31 | 0x2000000000000000;
      unint64_t v36 = v30 | 0x8000000000000000;
      goto LABEL_13;
    case 3uLL:
      unint64_t v37 = v15;
      sub_1C026EED8(v78, *(void *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 0x18));
      uint64_t v39 = v38;
      uint64_t v26 = swift_allocObject();
      uint64_t v40 = swift_allocObject();
      *(void *)(v40 + 16) = v39;
      *(void *)(v40 + 24) = MEMORY[0x1E4FBC860];
      uint64_t v28 = v40 | 0x3000000000000000;
      *(void *)(v26 + 16) = v37;
LABEL_7:
      *(void *)(v26 + 24) = v28;
      unint64_t v41 = v26 | 0x8000000000000000;
      goto LABEL_10;
    case 4uLL:
      unint64_t v42 = v15;
      uint64_t v43 = sub_1C026F504(v78, *(void *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 0x10), *(void *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 0x18));
      uint64_t v44 = swift_allocObject();
      uint64_t v45 = swift_allocObject();
      uint64_t v46 = MEMORY[0x1E4FBC860];
      *(void *)(v45 + 16) = v43;
      *(void *)(v45 + 24) = v46;
      *(void *)(v44 + 16) = v42;
      *(void *)(v44 + 24) = v45 | 0x4000000000000000;
      unint64_t v41 = v44 | 0x8000000000000000;
      goto LABEL_10;
    case 5uLL:
      unint64_t v47 = v15;
      uint64_t v48 = sub_1C026FB3C(v78, *(void *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 0x10), *(void *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 0x18), *(void *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 0x20));
      uint64_t v50 = v49;
      uint64_t v51 = swift_allocObject();
      uint64_t v52 = swift_allocObject();
      *(void *)(v52 + 16) = v48;
      *(void *)(v52 + 24) = v50;
      *(void *)(v52 + 32) = MEMORY[0x1E4FBC860];
      *(void *)(v51 + 16) = v47;
      *(void *)(v51 + 24) = v52 | 0x5000000000000000;
      unint64_t v41 = v51 | 0x8000000000000000;
LABEL_10:
      *long long v79 = v41;
      return swift_retain();
    case 6uLL:
      uint64_t v75 = v15 & 0xFFFFFFFFFFFFFFFLL;
      unint64_t v76 = v15;
      uint64_t v53 = swift_projectBox();
      sub_1C0E5720C(v53, (uint64_t)v8, (uint64_t (*)(void))sub_1BFF2918C);
      sub_1C02701D0(v4);
      uint64_t v54 = swift_allocObject();
      uint64_t v55 = swift_allocBox();
      uint64_t v57 = v56;
      uint64_t v58 = v77;
      (*(void (**)(uint64_t, char *, uint64_t))(v77 + 16))(v56, v4, v2);
      *(void *)(v57 + *(int *)(v6 + 36)) = MEMORY[0x1E4FBC860];
      uint64_t v59 = *(void (**)(char *, uint64_t))(v58 + 8);
      swift_retain();
      v59(v4, v2);
      uint64_t result = sub_1C0E570EC((uint64_t)v8, (uint64_t (*)(void))sub_1BFF2918C);
      *(void *)(v54 + 16) = v76;
      *(void *)(v54 + 24) = v55 | 0x6000000000000000;
      unint64_t v36 = v54 | 0x8000000000000000;
LABEL_13:
      *long long v79 = v36;
      return result;
    case 7uLL:
      unint64_t v60 = *(void *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v61 = swift_allocObject();
      uint64_t v62 = v80;
      uint64_t result = sub_1C0279B34(v78, v60, (void *)(v61 + 16));
      if (v62) {
        return swift_deallocUninitializedObject();
      }
      unint64_t v63 = v61 | 0x7000000000000000;
      uint64_t v64 = v79;
      goto LABEL_23;
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xDuLL:
      *long long v79 = v15;
      return swift_retain();
    case 0xCuLL:
      unint64_t v65 = *(void *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v66 = swift_allocObject();
      uint64_t v67 = v66;
      if (v65 >> 61 == 3)
      {
        uint64_t v68 = v65 & 0x1FFFFFFFFFFFFFFFLL;
        uint64_t v69 = *(void *)((v65 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v70 = *(void *)(v68 + 24);
        uint64_t v71 = *(void *)(v68 + 32);
        char v72 = *(unsigned char *)(v68 + 40);
        sub_1BFF67F78(v69, v70, v71, v72);
        uint64_t v73 = v80;
        sub_1C021D2D8((long long *)v78, v69, v70, v71, v72, &v81);
        if (v73)
        {
          sub_1BFF05CCC(v69, v70, v71, v72);
          return swift_deallocUninitializedObject();
        }
        uint64_t v74 = v81;
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = v69;
        *(void *)(result + 24) = v70;
        *(void *)(result + 32) = v71;
        *(unsigned char *)(result + 40) = v72;
        *(void *)(result + 48) = v74;
        *(void *)(v67 + 16) = result | 0x8000000000000000;
      }
      else
      {
        *(void *)(v66 + 16) = v65;
        uint64_t result = swift_retain();
      }
      uint64_t v64 = v79;
      unint64_t v63 = v67 | 0xC000000000000000;
LABEL_23:
      *uint64_t v64 = v63;
      return result;
    default:
      unint64_t v18 = v15;
      char v19 = sub_1C026E02C(v78, *(unsigned __int8 *)(v15 + 16), *(void *)(v15 + 24));
      uint64_t v20 = swift_allocObject();
      uint64_t v21 = swift_allocObject();
      uint64_t v22 = MEMORY[0x1E4FBC860];
      *(unsigned char *)(v21 + 16) = v19 & 1;
      *(void *)(v21 + 24) = v22;
      *(void *)(v20 + 16) = v18;
      *(void *)(v20 + 24) = v21;
      *long long v79 = v20 | 0x8000000000000000;
      return swift_retain();
  }
}

uint64_t sub_1C0E455CC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  *(void *)&long long v245 = a1;
  uint64_t v243 = a3;
  uint64_t v258 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1C1515FDC();
  *(void *)&long long v244 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v232 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF2918C();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v232 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C151631C();
  uint64_t v242 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v232 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF29220();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v232 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a2 >> 60)
  {
    case 1uLL:
      long long v43 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      long long v249 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      long long v250 = v43;
      uint64_t v251 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      sub_1C0E49368(v245, (uint64_t)&v255);
      long long v245 = v255;
      uint64_t v44 = v256;
      long long v244 = v257;
      uint64_t v45 = swift_allocObject();
      uint64_t v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = v245;
      *(void *)(v46 + 32) = v44;
      *(_OWORD *)(v46 + 40) = v244;
      *(void *)(v45 + 16) = a2;
      *(void *)(v45 + 24) = v46 | 0x1000000000000000;
      *uint64_t v243 = v45 | 0x8000000000000000;
      return swift_retain();
    case 2uLL:
      *(void *)&long long v244 = a2 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v23 = swift_projectBox();
      sub_1C0E5720C(v23, (uint64_t)v17, (uint64_t (*)(void))sub_1BFF29220);
      sub_1C02764A8(v245, v13);
      uint64_t v24 = swift_allocObject();
      uint64_t v25 = swift_allocBox();
      uint64_t v27 = v26;
      uint64_t v28 = v242;
      (*(void (**)(uint64_t, char *, uint64_t))(v242 + 16))(v26, v13, v11);
      *(void *)(v27 + *(int *)(v15 + 36)) = MEMORY[0x1E4FBC860];
      uint64_t v29 = *(void (**)(char *, uint64_t))(v28 + 8);
      swift_retain();
      v29(v13, v11);
      uint64_t result = sub_1C0E570EC((uint64_t)v17, (uint64_t (*)(void))sub_1BFF29220);
      *(void *)(v24 + 16) = a2;
      *(void *)(v24 + 24) = v25 | 0x2000000000000000;
      unint64_t v30 = v24 | 0x8000000000000000;
      goto LABEL_146;
    case 3uLL:
      unint64_t v236 = a2;
      uint64_t v31 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v237 = a2 & 0xFFFFFFFFFFFFFFFLL;
      if (!*(void *)(*(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18) + 16)) {
        goto LABEL_141;
      }
      uint64_t v235 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v32 = *(void *)(v245 + 80);
      uint64_t v33 = *(void *)(*(void *)(v32 + 40) + 16);
      swift_beginAccess();
      if (*(void *)(*(void *)(v33 + 16) + 16))
      {
        uint64_t v252 = *(void *)(v32 + 56);
        swift_retain();
        uint64_t v34 = swift_bridgeObjectRetain();
        uint64_t v35 = sub_1BFEF3B08(v34);
        sub_1BFEF3808(v35);
        swift_release();
        *(void *)&long long v245 = v252;
      }
      else
      {
        swift_retain();
        *(void *)&long long v245 = sub_1BFEF3784();
        swift_release();
      }
      uint64_t v239 = *(void *)(v235 + 16);
      if (!v239) {
        goto LABEL_140;
      }
      uint64_t v238 = v235 + 32;
      swift_bridgeObjectRetain();
      uint64_t v120 = 0;
      do
      {
        uint64_t v121 = (uint64_t *)(v238 + 24 * v120);
        uint64_t v123 = *v121;
        uint64_t v122 = v121[1];
        uint64_t v124 = v121[2];
        uint64_t v125 = qword_1EB87F148;
        swift_bridgeObjectRetain();
        if (v125 != -1) {
          swift_once();
        }
        uint64_t v126 = qword_1EB93C770;
        uint64_t v127 = *(void *)(qword_1EB93C770 + 24);
        swift_bridgeObjectRetain();
        sub_1C1517E7C();
        uint64_t v128 = (uint64_t *)(v126 + 16);
        swift_beginAccess();
        uint64_t v129 = *(void *)(v126 + 16);
        uint64_t v130 = *(void *)(v129 + 16);
        uint64_t v242 = v120;
        if (!v130) {
          goto LABEL_73;
        }
        swift_bridgeObjectRetain();
        unint64_t v131 = sub_1BFEF2D8C(v123, v122);
        if ((v132 & 1) == 0)
        {
          swift_bridgeObjectRelease();
LABEL_73:
          uint64_t v240 = v127;
          swift_endAccess();
          uint64_t v247 = (void *)v123;
          uint64_t v248 = v122;
          swift_bridgeObjectRetain();
          sub_1BFF04A00((uint64_t *)&v247, &v252);
          uint64_t v134 = v253;
          uint64_t v241 = v252;
          uint64_t v135 = v254;
          swift_beginAccess();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          *(void *)&long long v244 = v135;
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v247 = (void *)*v128;
          uint64_t v137 = (uint64_t)v247;
          uint64_t *v128 = 0x8000000000000000;
          uint64_t v138 = v123;
          uint64_t v139 = v123;
          uint64_t v140 = v122;
          unint64_t v142 = sub_1BFEF2D8C(v139, v122);
          uint64_t v143 = *(void *)(v137 + 16);
          BOOL v144 = (v141 & 1) == 0;
          uint64_t v145 = v143 + v144;
          if (__OFADD__(v143, v144)) {
            goto LABEL_148;
          }
          char v146 = v141;
          if (*(void *)(v137 + 24) < v145)
          {
            sub_1BFFDF158(v145, isUniquelyReferenced_nonNull_native);
            unint64_t v147 = sub_1BFEF2D8C(v138, v140);
            if ((v146 & 1) != (v148 & 1)) {
              goto LABEL_157;
            }
            unint64_t v142 = v147;
            uint64_t v149 = v247;
            if ((v146 & 1) == 0) {
              goto LABEL_77;
            }
LABEL_81:
            uint64_t v154 = (uint64_t *)(v149[7] + 24 * v142);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            *uint64_t v154 = v241;
            v154[1] = v134;
            uint64_t v155 = v244;
            v154[2] = v244;
            uint64_t v122 = v140;
            uint64_t v133 = v155;
LABEL_82:
            uint64_t *v128 = (uint64_t)v149;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_endAccess();
            goto LABEL_83;
          }
          if (isUniquelyReferenced_nonNull_native)
          {
            uint64_t v149 = v247;
            if (v141) {
              goto LABEL_81;
            }
          }
          else
          {
            sub_1C106B39C();
            uint64_t v149 = v247;
            if (v146) {
              goto LABEL_81;
            }
          }
LABEL_77:
          v149[(v142 >> 6) + 8] |= 1 << v142;
          uint64_t v150 = (uint64_t *)(v149[6] + 16 * v142);
          *uint64_t v150 = v138;
          v150[1] = v140;
          uint64_t v151 = (uint64_t *)(v149[7] + 24 * v142);
          *uint64_t v151 = v241;
          v151[1] = v134;
          uint64_t v133 = v244;
          v151[2] = v244;
          uint64_t v152 = v149[2];
          BOOL v100 = __OFADD__(v152, 1);
          uint64_t v153 = v152 + 1;
          if (v100) {
            goto LABEL_151;
          }
          v149[2] = v153;
          swift_bridgeObjectRetain();
          uint64_t v122 = v140;
          goto LABEL_82;
        }
        uint64_t v133 = *(void *)(*(void *)(v129 + 56) + 24 * v131 + 16);
        swift_endAccess();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_83:
        swift_bridgeObjectRelease();
        sub_1C1517E8C();
        swift_bridgeObjectRelease();
        uint64_t v156 = *(void *)(v133 + 16);
        if (!v156)
        {
LABEL_65:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_66;
        }
        uint64_t v241 = v122;
        *(void *)&long long v244 = v133;
        uint64_t v157 = (uint64_t *)(v133 + 64);
        while (1)
        {
          uint64_t v158 = *(v157 - 1);
          uint64_t v159 = *v157;
          char v160 = *(unsigned char *)(v158 + 32);
          unsigned int v161 = v160 & 0x3F;
          unint64_t v162 = (unint64_t)((1 << v160) + 63) >> 6;
          size_t v163 = 8 * v162;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
          if (v161 <= 0xD
            || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
          {
            MEMORY[0x1F4188790](isStackAllocationSafe);
            uint64_t v113 = (char *)&v232 - ((v163 + 15) & 0x3FFFFFFFFFFFFFF0);
            bzero(v113, v163);
            id v165 = v246;
            uint64_t v166 = sub_1BFEFB09C((uint64_t)v113, v162, v158, v245);
            swift_bridgeObjectRelease();
            id v246 = v165;
            if (v165) {
              goto LABEL_153;
            }
          }
          else
          {
            uint64_t v113 = (char *)swift_slowAlloc();
            bzero(v113, v163);
            id v167 = v246;
            uint64_t v168 = sub_1BFEFB09C((uint64_t)v113, v162, v158, v245);
            id v246 = v167;
            if (v167) {
              goto LABEL_154;
            }
            uint64_t v166 = v168;
            swift_bridgeObjectRelease();
            MEMORY[0x1C18C9B00](v113, -1, -1);
          }
          char v169 = sub_1BFEFAE14(v166, v158);
          swift_release();
          if (v169) {
            break;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_86:
          v157 += 5;
          if (!--v156) {
            goto LABEL_65;
          }
        }
        char v170 = sub_1BFEFB810(v245, v159);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v170 & 1) == 0) {
          goto LABEL_86;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v31 = v124;
LABEL_66:
        uint64_t v120 = v242 + 1;
      }
      while (v242 + 1 != v239);
      swift_bridgeObjectRelease();
LABEL_140:
      swift_bridgeObjectRelease();
LABEL_141:
      uint64_t v225 = swift_allocObject();
      uint64_t v226 = swift_allocObject();
      *(void *)(v226 + 16) = v31;
      *(void *)(v226 + 24) = MEMORY[0x1E4FBC860];
      *(void *)(v225 + 16) = v236;
      *(void *)(v225 + 24) = v226 | 0x3000000000000000;
      *uint64_t v243 = v225 | 0x8000000000000000;
      return swift_retain();
    case 4uLL:
      unint64_t v236 = a2;
      uint64_t v235 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v234 = a2 & 0xFFFFFFFFFFFFFFFLL;
      if (!*(void *)(*(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18) + 16)) {
        goto LABEL_139;
      }
      uint64_t v233 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v19 = *(void *)(v245 + 80);
      uint64_t v20 = *(void *)(*(void *)(v19 + 40) + 16);
      swift_beginAccess();
      if (*(void *)(*(void *)(v20 + 16) + 16))
      {
        uint64_t v252 = *(void *)(v19 + 56);
        swift_retain();
        uint64_t v21 = swift_bridgeObjectRetain();
        uint64_t v22 = sub_1BFEF3B08(v21);
        sub_1BFEF3808(v22);
        swift_release();
        *(void *)&long long v245 = v252;
      }
      else
      {
        swift_retain();
        *(void *)&long long v245 = sub_1BFEF3784();
        swift_release();
      }
      uint64_t v238 = *(void *)(v233 + 16);
      if (!v238) {
        goto LABEL_138;
      }
      uint64_t v237 = v233 + 32;
      swift_bridgeObjectRetain();
      uint64_t v68 = 0;
      while (1)
      {
        uint64_t v69 = (uint64_t *)(v237 + 24 * v68);
        uint64_t v71 = *v69;
        uint64_t v70 = v69[1];
        uint64_t v72 = v69[2];
        uint64_t v73 = qword_1EB87F148;
        swift_bridgeObjectRetain();
        if (v73 != -1) {
          swift_once();
        }
        uint64_t v74 = qword_1EB93C770;
        uint64_t v75 = *(void *)(qword_1EB93C770 + 24);
        swift_bridgeObjectRetain();
        sub_1C1517E7C();
        unint64_t v76 = (uint64_t *)(v74 + 16);
        swift_beginAccess();
        uint64_t v77 = *(void *)(v74 + 16);
        uint64_t v78 = *(void *)(v77 + 16);
        uint64_t v242 = v68;
        uint64_t v239 = v72;
        if (v78)
        {
          swift_bridgeObjectRetain();
          unint64_t v79 = sub_1BFEF2D8C(v71, v70);
          if (v80)
          {
            uint64_t v81 = *(void *)(*(void *)(v77 + 56) + 24 * v79 + 16);
            swift_endAccess();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            goto LABEL_45;
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v240 = v75;
        swift_endAccess();
        uint64_t v247 = (void *)v71;
        uint64_t v248 = v70;
        swift_bridgeObjectRetain();
        sub_1BFF04A00((uint64_t *)&v247, &v252);
        uint64_t v82 = v253;
        uint64_t v241 = v252;
        uint64_t v83 = v254;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        *(void *)&long long v244 = v83;
        swift_bridgeObjectRetain();
        char v84 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v247 = (void *)*v76;
        uint64_t v85 = (uint64_t)v247;
        *unint64_t v76 = 0x8000000000000000;
        uint64_t v86 = v71;
        uint64_t v87 = v70;
        unint64_t v89 = sub_1BFEF2D8C(v71, v70);
        uint64_t v90 = *(void *)(v85 + 16);
        BOOL v91 = (v88 & 1) == 0;
        uint64_t v92 = v90 + v91;
        if (__OFADD__(v90, v91))
        {
          __break(1u);
LABEL_148:
          __break(1u);
          goto LABEL_149;
        }
        char v93 = v88;
        if (*(void *)(v85 + 24) >= v92)
        {
          if (v84)
          {
            uint64_t v96 = v247;
            if ((v88 & 1) == 0) {
              goto LABEL_39;
            }
          }
          else
          {
            sub_1C106B39C();
            uint64_t v96 = v247;
            if ((v93 & 1) == 0) {
              goto LABEL_39;
            }
          }
        }
        else
        {
          sub_1BFFDF158(v92, v84);
          unint64_t v94 = sub_1BFEF2D8C(v86, v87);
          if ((v93 & 1) != (v95 & 1)) {
            goto LABEL_157;
          }
          unint64_t v89 = v94;
          uint64_t v96 = v247;
          if ((v93 & 1) == 0)
          {
LABEL_39:
            v96[(v89 >> 6) + 8] |= 1 << v89;
            uint64_t v97 = (uint64_t *)(v96[6] + 16 * v89);
            *uint64_t v97 = v86;
            v97[1] = v87;
            uint64_t v98 = (uint64_t *)(v96[7] + 24 * v89);
            *uint64_t v98 = v241;
            v98[1] = v82;
            uint64_t v81 = v244;
            v98[2] = v244;
            uint64_t v99 = v96[2];
            BOOL v100 = __OFADD__(v99, 1);
            uint64_t v101 = v99 + 1;
            if (v100) {
              goto LABEL_150;
            }
            _OWORD v96[2] = v101;
            swift_bridgeObjectRetain();
            uint64_t v70 = v87;
            goto LABEL_44;
          }
        }
        uint64_t v102 = (uint64_t *)(v96[7] + 24 * v89);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *uint64_t v102 = v241;
        v102[1] = v82;
        uint64_t v103 = v244;
        v102[2] = v244;
        uint64_t v70 = v87;
        uint64_t v81 = v103;
LABEL_44:
        *unint64_t v76 = (uint64_t)v96;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
LABEL_45:
        swift_bridgeObjectRelease();
        sub_1C1517E8C();
        swift_bridgeObjectRelease();
        uint64_t v104 = *(void *)(v81 + 16);
        if (v104)
        {
          uint64_t v241 = v70;
          *(void *)&long long v244 = v81;
          uint64_t v105 = (uint64_t *)(v81 + 64);
          do
          {
            uint64_t v106 = *(v105 - 1);
            uint64_t v107 = *v105;
            char v108 = *(unsigned char *)(v106 + 32);
            unsigned int v109 = v108 & 0x3F;
            unint64_t v110 = (unint64_t)((1 << v108) + 63) >> 6;
            size_t v111 = 8 * v110;
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            uint64_t v112 = swift_bridgeObjectRetain();
            if (v109 <= 0xD || (uint64_t v112 = swift_stdlib_isStackAllocationSafe(), (v112 & 1) != 0))
            {
              MEMORY[0x1F4188790](v112);
              uint64_t v113 = (char *)&v232 - ((v111 + 15) & 0x3FFFFFFFFFFFFFF0);
              bzero(v113, v111);
              id v114 = v246;
              uint64_t v115 = sub_1BFEFB09C((uint64_t)v113, v110, v106, v245);
              swift_bridgeObjectRelease();
              id v246 = v114;
              if (v114) {
                goto LABEL_153;
              }
            }
            else
            {
              uint64_t v113 = (char *)swift_slowAlloc();
              bzero(v113, v111);
              id v116 = v246;
              uint64_t v117 = sub_1BFEFB09C((uint64_t)v113, v110, v106, v245);
              id v246 = v116;
              if (v116) {
                goto LABEL_154;
              }
              uint64_t v115 = v117;
              swift_bridgeObjectRelease();
              MEMORY[0x1C18C9B00](v113, -1, -1);
            }
            char v118 = sub_1BFEFAE14(v115, v106);
            swift_release();
            if (v118)
            {
              char v119 = sub_1BFEFB810(v245, v107);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v119)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v235 = v239;
                goto LABEL_28;
              }
            }
            else
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v105 += 5;
            --v104;
          }
          while (v104);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_28:
        uint64_t v68 = v242 + 1;
        if (v242 + 1 == v238)
        {
          swift_bridgeObjectRelease();
LABEL_138:
          swift_bridgeObjectRelease();
LABEL_139:
          uint64_t v222 = swift_allocObject();
          uint64_t v223 = swift_allocObject();
          uint64_t v224 = MEMORY[0x1E4FBC860];
          *(void *)(v223 + 16) = v235;
          *(void *)(v223 + 24) = v224;
          *(void *)(v222 + 16) = v236;
          *(void *)(v222 + 24) = v223 | 0x4000000000000000;
          *uint64_t v243 = v222 | 0x8000000000000000;
          return swift_retain();
        }
      }
    case 5uLL:
      uint64_t v56 = sub_1C0276D24(v245, *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10), *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18), *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20));
      uint64_t v58 = v57;
      uint64_t v59 = swift_allocObject();
      uint64_t v60 = swift_allocObject();
      *(void *)(v60 + 16) = v56;
      *(void *)(v60 + 24) = v58;
      *(void *)(v60 + 32) = MEMORY[0x1E4FBC860];
      *(void *)(v59 + 16) = a2;
      *(void *)(v59 + 24) = v60 | 0x5000000000000000;
      *uint64_t v243 = v59 | 0x8000000000000000;
      return swift_retain();
    case 6uLL:
      uint64_t v242 = a2 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v61 = swift_projectBox();
      sub_1C0E5720C(v61, (uint64_t)v10, (uint64_t (*)(void))sub_1BFF2918C);
      sub_1C02773C0(v245, v6);
      uint64_t v62 = swift_allocObject();
      uint64_t v63 = swift_allocBox();
      uint64_t v65 = v64;
      uint64_t v66 = v244;
      (*(void (**)(uint64_t, char *, uint64_t))(v244 + 16))(v64, v6, v4);
      *(void *)(v65 + *(int *)(v8 + 36)) = MEMORY[0x1E4FBC860];
      uint64_t v67 = *(void (**)(char *, uint64_t))(v66 + 8);
      swift_retain();
      v67(v6, v4);
      uint64_t result = sub_1C0E570EC((uint64_t)v10, (uint64_t (*)(void))sub_1BFF2918C);
      *(void *)(v62 + 16) = a2;
      *(void *)(v62 + 24) = v63 | 0x6000000000000000;
      unint64_t v30 = v62 | 0x8000000000000000;
      goto LABEL_146;
    case 7uLL:
      unint64_t v36 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v37 = swift_allocObject();
      id v38 = v246;
      uint64_t result = sub_1C027ACBC(v245, v36, (void *)(v37 + 16));
      id v246 = v38;
      if (v38) {
        return swift_deallocUninitializedObject();
      }
      unint64_t v30 = v37 | 0x7000000000000000;
      goto LABEL_146;
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xDuLL:
      *uint64_t v243 = a2;
      return swift_retain();
    case 0xCuLL:
      unint64_t v47 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v48 = swift_allocObject();
      uint64_t v49 = v48;
      if (v47 >> 61 == 3)
      {
        uint64_t v50 = v47 & 0x1FFFFFFFFFFFFFFFLL;
        uint64_t v51 = *(void *)((v47 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v52 = *(void *)(v50 + 24);
        uint64_t v53 = *(void *)(v50 + 32);
        char v54 = *(unsigned char *)(v50 + 40);
        sub_1BFF67F78(v51, v52, v53, v54);
        id v55 = v246;
        sub_1C021E284((long long *)v245, v51, v52, v53, v54, &v255);
        id v246 = v55;
        if (v55)
        {
          sub_1BFF05CCC(v51, v52, v53, v54);
          return swift_deallocUninitializedObject();
        }
        uint64_t v229 = v255;
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = v51;
        *(void *)(result + 24) = v52;
        *(void *)(result + 32) = v53;
        *(unsigned char *)(result + 40) = v54;
        *(void *)(result + 48) = v229;
        *(void *)(v49 + 16) = result | 0x8000000000000000;
      }
      else
      {
        *(void *)(v48 + 16) = v47;
        uint64_t result = swift_retain();
      }
      unint64_t v30 = v49 | 0xC000000000000000;
LABEL_146:
      *uint64_t v243 = v30;
      return result;
    default:
      LODWORD(v235) = *(unsigned __int8 *)(a2 + 16);
      unint64_t v236 = a2;
      if (!*(void *)(*(void *)(a2 + 24) + 16)) {
        goto LABEL_143;
      }
      uint64_t v234 = *(void *)(a2 + 24);
      uint64_t v39 = *(void *)(v245 + 80);
      uint64_t v40 = *(void *)(*(void *)(v39 + 40) + 16);
      swift_beginAccess();
      if (*(void *)(*(void *)(v40 + 16) + 16))
      {
        uint64_t v252 = *(void *)(v39 + 56);
        swift_retain();
        uint64_t v41 = swift_bridgeObjectRetain();
        uint64_t v42 = sub_1BFEF3B08(v41);
        sub_1BFEF3808(v42);
        swift_release();
        *(void *)&long long v245 = v252;
      }
      else
      {
        swift_retain();
        *(void *)&long long v245 = sub_1BFEF3784();
        swift_release();
      }
      uint64_t v238 = *(void *)(v234 + 16);
      if (!v238) {
        goto LABEL_142;
      }
      uint64_t v237 = v234 + 32;
      swift_bridgeObjectRetain();
      uint64_t v171 = 0;
      break;
  }
  while (1)
  {
    uint64_t v172 = v237 + 24 * v171;
    uint64_t v174 = *(void *)v172;
    uint64_t v173 = *(void *)(v172 + 8);
    LODWORD(v239) = *(unsigned __int8 *)(v172 + 16);
    uint64_t v175 = qword_1EB87F148;
    swift_bridgeObjectRetain();
    if (v175 != -1) {
      swift_once();
    }
    uint64_t v176 = qword_1EB93C770;
    uint64_t v177 = *(void *)(qword_1EB93C770 + 24);
    swift_bridgeObjectRetain();
    sub_1C1517E7C();
    uint64_t v178 = (uint64_t *)(v176 + 16);
    swift_beginAccess();
    uint64_t v179 = *(void *)(v176 + 16);
    uint64_t v180 = *(void *)(v179 + 16);
    *(void *)&long long v244 = v171;
    if (v180)
    {
      swift_bridgeObjectRetain();
      unint64_t v181 = sub_1BFEF2D8C(v174, v173);
      if (v182)
      {
        uint64_t v183 = *(void *)(*(void *)(v179 + 56) + 24 * v181 + 16);
        swift_endAccess();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_121;
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v240 = v177;
    swift_endAccess();
    uint64_t v247 = (void *)v174;
    uint64_t v248 = v173;
    swift_bridgeObjectRetain();
    sub_1BFF04A00((uint64_t *)&v247, &v252);
    uint64_t v184 = v253;
    uint64_t v241 = v252;
    uint64_t v185 = v254;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v242 = v184;
    swift_bridgeObjectRetain();
    uint64_t v186 = v185;
    swift_bridgeObjectRetain();
    char v187 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v247 = (void *)*v178;
    uint64_t v188 = (uint64_t)v247;
    *uint64_t v178 = 0x8000000000000000;
    uint64_t v189 = v174;
    uint64_t v190 = v173;
    unint64_t v192 = sub_1BFEF2D8C(v174, v173);
    uint64_t v193 = *(void *)(v188 + 16);
    BOOL v194 = (v191 & 1) == 0;
    uint64_t v195 = v193 + v194;
    if (__OFADD__(v193, v194))
    {
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
    }
    char v196 = v191;
    if (*(void *)(v188 + 24) >= v195)
    {
      if (v187)
      {
        int v199 = v247;
        if ((v191 & 1) == 0) {
          goto LABEL_115;
        }
      }
      else
      {
        sub_1C106B39C();
        int v199 = v247;
        if ((v196 & 1) == 0) {
          goto LABEL_115;
        }
      }
    }
    else
    {
      sub_1BFFDF158(v195, v187);
      unint64_t v197 = sub_1BFEF2D8C(v189, v190);
      if ((v196 & 1) != (v198 & 1)) {
        goto LABEL_157;
      }
      unint64_t v192 = v197;
      int v199 = v247;
      if ((v196 & 1) == 0)
      {
LABEL_115:
        v199[(v192 >> 6) + 8] |= 1 << v192;
        uint64_t v200 = (uint64_t *)(v199[6] + 16 * v192);
        *uint64_t v200 = v189;
        v200[1] = v190;
        uint64_t v201 = (uint64_t *)(v199[7] + 24 * v192);
        uint64_t v202 = v242;
        *uint64_t v201 = v241;
        v201[1] = v202;
        v201[2] = v186;
        uint64_t v203 = v199[2];
        BOOL v100 = __OFADD__(v203, 1);
        uint64_t v204 = v203 + 1;
        if (v100) {
          goto LABEL_152;
        }
        uint64_t v183 = v186;
        v199[2] = v204;
        swift_bridgeObjectRetain();
        uint64_t v173 = v190;
        goto LABEL_120;
      }
    }
    uint64_t v205 = (uint64_t *)(v199[7] + 24 * v192);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v206 = v242;
    *uint64_t v205 = v241;
    v205[1] = v206;
    v205[2] = v186;
    uint64_t v173 = v190;
    uint64_t v183 = v186;
LABEL_120:
    *uint64_t v178 = (uint64_t)v199;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
LABEL_121:
    swift_bridgeObjectRelease();
    sub_1C1517E8C();
    swift_bridgeObjectRelease();
    uint64_t v113 = *(char **)(v183 + 16);
    if (v113)
    {
      uint64_t v242 = v173;
      uint64_t v241 = v183;
      uint64_t v207 = (uint64_t *)(v183 + 64);
      do
      {
        uint64_t v208 = *(v207 - 1);
        uint64_t v209 = *v207;
        char v210 = *(unsigned char *)(v208 + 32);
        unsigned int v211 = v210 & 0x3F;
        unint64_t v212 = (unint64_t)((1 << v210) + 63) >> 6;
        size_t v213 = 8 * v212;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t v214 = swift_bridgeObjectRetain();
        if (v211 <= 0xD || (uint64_t v214 = swift_stdlib_isStackAllocationSafe(), (v214 & 1) != 0))
        {
          MEMORY[0x1F4188790](v214);
          bzero((char *)&v232 - ((v213 + 15) & 0x3FFFFFFFFFFFFFF0), v213);
          id v215 = v246;
          uint64_t v216 = sub_1BFEFB09C((uint64_t)&v232 - ((v213 + 15) & 0x3FFFFFFFFFFFFFF0), v212, v208, v245);
          swift_bridgeObjectRelease();
          id v246 = v215;
          if (v215)
          {
LABEL_153:
            id v230 = v246;
            swift_willThrow();

            __break(1u);
LABEL_154:
            swift_bridgeObjectRelease();

            uint64_t v231 = v113;
LABEL_156:
            MEMORY[0x1C18C9B00](v231, -1, -1);
            __break(1u);
LABEL_157:
            sub_1C1520CFC();
            __break(1u);
            JUMPOUT(0x1C0E4709CLL);
          }
        }
        else
        {
          uint64_t v217 = (char *)swift_slowAlloc();
          bzero(v217, v213);
          id v218 = v246;
          uint64_t v219 = sub_1BFEFB09C((uint64_t)v217, v212, v208, v245);
          id v246 = v218;
          if (v218)
          {
            swift_bridgeObjectRelease();

            uint64_t v231 = v217;
            goto LABEL_156;
          }
          uint64_t v216 = v219;
          swift_bridgeObjectRelease();
          MEMORY[0x1C18C9B00](v217, -1, -1);
        }
        char v220 = sub_1BFEFAE14(v216, v208);
        swift_release();
        if (v220)
        {
          char v221 = sub_1BFEFB810(v245, v209);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v221)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            LODWORD(v235) = v239;
            goto LABEL_104;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v207 += 5;
        --v113;
      }
      while (v113);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_104:
    uint64_t v171 = v244 + 1;
    if ((void)v244 + 1 == v238)
    {
      swift_bridgeObjectRelease();
LABEL_142:
      swift_bridgeObjectRelease();
LABEL_143:
      uint64_t v227 = swift_allocObject();
      uint64_t v228 = swift_allocObject();
      *(unsigned char *)(v228 + 16) = v235 & 1;
      *(void *)(v228 + 24) = MEMORY[0x1E4FBC860];
      *(void *)(v227 + 16) = v236;
      *(void *)(v227 + 24) = v228;
      *uint64_t v243 = v227 | 0x8000000000000000;
      return swift_retain();
    }
  }
}

void sub_1C0E470D4(uint64_t a1)
{
  uint64_t v4 = *(void *)v1;
  unint64_t v3 = *(void *)(v1 + 8);
  unint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = *(void *)(v1 + 32);
  unsigned int v8 = *(unsigned __int8 *)(v1 + 40);
  switch((v8 >> 1) & 0xF)
  {
    case 2u:
      uint64_t v12 = *(void *)v1;
      unint64_t v13 = v3;
      unint64_t v14 = v5;
      uint64_t v15 = v6;
      uint64_t v16 = v7;
      char v17 = v8 & 0xE1;
      sub_1C05AC630(a1);
      break;
    case 3u:
      switch((v3 >> 59) & 2 | (v3 >> 2) & 1)
      {
        case 1uLL:
        case 2uLL:
          LOBYTE(v12) = v4 & 1;
          unint64_t v13 = v3 & 0xEFFFFFFFFFFFFFFBLL;
          goto LABEL_9;
        case 3uLL:
          return;
        default:
          LOBYTE(v12) = v4 & 1;
          unint64_t v13 = v3;
LABEL_9:
          sub_1C05C3130(a1);
          break;
      }
      break;
    case 7u:
      uint64_t v12 = *(void *)v1;
      unint64_t v13 = v3;
      unint64_t v14 = v5;
      char v11 = 8;
      sub_1BFF2B584(v4, v3, v5, v6, v7, v8);
      uint64_t v9 = sub_1C12ECBDC(&v12, &v11);
      if (!v2)
      {
        uint64_t v10 = v9;
        swift_bridgeObjectRetain();
        sub_1C0F49260(v4, v3, v10, 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    case 8u:
      uint64_t v12 = *(void *)v1;
      unint64_t v13 = v3;
      unint64_t v14 = v5;
      uint64_t v15 = v6;
      uint64_t v16 = v7;
      char v17 = v8 & 1;
      sub_1C05AC81C(a1);
      break;
    default:
      return;
  }
}

uint64_t sub_1C0E472AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v4 = swift_bridgeObjectRetain() + 40 * v2 - 8;
    while (1)
    {
      sub_1BFC66384(v4, (uint64_t)v12);
      sub_1BFFFCF34();
      if (swift_dynamicCast()) {
        break;
      }
      v4 -= 40;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    uint64_t result = swift_bridgeObjectRelease();
    *(_OWORD *)a2 = v7;
    *(unsigned char *)(a2 + 16) = v8 & 1;
    *(_OWORD *)(a2 + 24) = v9;
    *(void *)(a2 + 40) = v10;
    *(_OWORD *)(a2 + 48) = v11;
  }
  else
  {
LABEL_6:
    sub_1BFF7DFA8();
    swift_allocError();
    strcpy(v5, "FeedPuzzleType");
    v5[15] = -18;
    v5[56] = 6;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1C0E473E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v4 = swift_bridgeObjectRetain() + 40 * v2 - 8;
    while (1)
    {
      sub_1BFC66384(v4, (uint64_t)v21);
      sub_1BFFFCF34();
      if (swift_dynamicCast()) {
        break;
      }
      --v2;
      char v20 = 0;
      long long v18 = 0u;
      long long v19 = 0u;
      long long v16 = 0u;
      long long v17 = 0u;
      long long v14 = 0u;
      long long v15 = 0u;
      long long v12 = 0u;
      long long v13 = 0u;
      long long v11 = 0u;
      sub_1C0E56F54((uint64_t)&v11, (uint64_t)&unk_1EB8819D8, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(void))sub_1BFC77FBC);
      v4 -= 40;
      if (!v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    uint64_t result = swift_bridgeObjectRelease();
    long long v7 = v18;
    *(_OWORD *)(a2 + 96) = v17;
    *(_OWORD *)(a2 + 112) = v7;
    *(_OWORD *)(a2 + 128) = v19;
    *(unsigned char *)(a2 + 144) = v20;
    long long v8 = v14;
    *(_OWORD *)(a2 + 32) = v13;
    *(_OWORD *)(a2 + 48) = v8;
    long long v9 = v16;
    *(_OWORD *)(a2 + 64) = v15;
    *(_OWORD *)(a2 + 80) = v9;
    long long v10 = v12;
    *(_OWORD *)a2 = v11;
    *(_OWORD *)(a2 + 16) = v10;
  }
  else
  {
LABEL_6:
    sub_1BFF7DFA8();
    swift_allocError();
    *(void *)uint64_t v5 = 0x67615464656546;
    *(void *)(v5 + 8) = 0xE700000000000000;
    *(unsigned char *)(v5 + 56) = 6;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1C0E4755C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v4 = swift_bridgeObjectRetain() + 40 * v2 - 8;
    while (1)
    {
      sub_1BFC66384(v4, (uint64_t)v11);
      sub_1BFFFCF34();
      if (swift_dynamicCast()) {
        break;
      }
      v4 -= 40;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a2 = v7;
    *(_OWORD *)(a2 + 8) = v8;
    *(void *)(a2 + 24) = v9;
    *(unsigned char *)(a2 + 32) = v10 & 1;
  }
  else
  {
LABEL_6:
    sub_1BFF7DFA8();
    swift_allocError();
    *(void *)uint64_t v5 = 0x726F705364656546;
    *(void *)(v5 + 8) = 0xEF746E6576457374;
    *(unsigned char *)(v5 + 56) = 6;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1C0E47688@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v4 = swift_bridgeObjectRetain() + 40 * v2 - 8;
    while (1)
    {
      sub_1BFC66384(v4, (uint64_t)v26);
      sub_1BFFFCF34();
      if (swift_dynamicCast()) {
        break;
      }
      --v2;
      long long v24 = 0u;
      long long v25 = 0u;
      long long v22 = 0u;
      long long v23 = 0u;
      long long v20 = 0u;
      long long v21 = 0u;
      long long v18 = 0u;
      long long v19 = 0u;
      long long v16 = 0u;
      long long v17 = 0u;
      long long v14 = 0u;
      long long v15 = 0u;
      long long v13 = 0u;
      sub_1C0E56F54((uint64_t)&v13, (uint64_t)&qword_1EB861728, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(void))sub_1BFC77FBC);
      v4 -= 40;
      if (!v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    uint64_t result = swift_bridgeObjectRelease();
    long long v7 = v24;
    a2[10] = v23;
    a2[11] = v7;
    a2[12] = v25;
    long long v8 = v20;
    a2[6] = v19;
    a2[7] = v8;
    long long v9 = v22;
    a2[8] = v21;
    a2[9] = v9;
    long long v10 = v16;
    a2[2] = v15;
    a2[3] = v10;
    long long v11 = v18;
    a2[4] = v17;
    a2[5] = v11;
    long long v12 = v14;
    *a2 = v13;
    a2[1] = v12;
  }
  else
  {
LABEL_6:
    sub_1BFF7DFA8();
    swift_allocError();
    *(void *)uint64_t v5 = 0x7A7A755064656546;
    *(void *)(v5 + 8) = 0xEA0000000000656CLL;
    *(unsigned char *)(v5 + 56) = 6;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1C0E47814@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v4 = swift_bridgeObjectRetain() + 40 * v2 - 8;
    while (1)
    {
      sub_1BFC66384(v4, (uint64_t)v9);
      sub_1BFFFCF34();
      if (swift_dynamicCast()) {
        break;
      }
      v4 -= 40;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    nullsub_1(v8);
    swift_bridgeObjectRelease();
    sub_1BFF66964((uint64_t)v8, (uint64_t)v7, &qword_1EB8849B0);
    return sub_1BFF66964((uint64_t)v7, a2, &qword_1EB8849B0);
  }
  else
  {
LABEL_6:
    sub_1BFF7DFA8();
    swift_allocError();
    *(void *)uint64_t v5 = 0x7779615064656546;
    *(void *)(v5 + 8) = 0xEB000000006C6C61;
    *(unsigned char *)(v5 + 56) = 6;
    return swift_willThrow();
  }
}

uint64_t sub_1C0E47960@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0E572B0(0, qword_1EB882BA8, (void (*)(uint64_t))type metadata accessor for FeedCustomItem);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v15[-v5 - 8];
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = a1 + 40 * v7 - 8;
    while (1)
    {
      sub_1BFC66384(v8, (uint64_t)v15);
      sub_1BFFFCF34();
      uint64_t v9 = type metadata accessor for FeedCustomItem();
      int v10 = swift_dynamicCast();
      long long v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
      if (v10) {
        break;
      }
      --v7;
      v11(v6, 1, 1, v9);
      sub_1C0E56F54((uint64_t)v6, (uint64_t)qword_1EB882BA8, (uint64_t)type metadata accessor for FeedCustomItem, (uint64_t (*)(void))sub_1C0E572B0);
      v8 -= 40;
      if (!v7)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    v11(v6, 0, 1, v9);
    swift_bridgeObjectRelease();
    return sub_1C0E56FB4((uint64_t)v6, a2, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
  }
  else
  {
LABEL_6:
    sub_1BFF7DFA8();
    swift_allocError();
    strcpy(v12, "FeedCustomItem");
    v12[15] = -18;
    v12[56] = 6;
    return swift_willThrow();
  }
}

uint64_t sub_1C0E47B90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0E572B0(0, &qword_1EB890D98, (void (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v15[-v5 - 8];
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = a1 + 40 * v7 - 8;
    while (1)
    {
      sub_1BFC66384(v8, (uint64_t)v15);
      sub_1BFFFCF34();
      uint64_t v9 = type metadata accessor for FeedPuzzleStatistic();
      int v10 = swift_dynamicCast();
      long long v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
      if (v10) {
        break;
      }
      --v7;
      v11(v6, 1, 1, v9);
      sub_1C0E56F54((uint64_t)v6, (uint64_t)&qword_1EB890D98, (uint64_t)type metadata accessor for FeedPuzzleStatistic, (uint64_t (*)(void))sub_1C0E572B0);
      v8 -= 40;
      if (!v7)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    v11(v6, 0, 1, v9);
    swift_bridgeObjectRelease();
    return sub_1C0E56FB4((uint64_t)v6, a2, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
  }
  else
  {
LABEL_6:
    sub_1BFF7DFA8();
    swift_allocError();
    *(void *)uint64_t v12 = 0xD000000000000013;
    *(void *)(v12 + 8) = 0x80000001C1614AB0;
    *(unsigned char *)(v12 + 56) = 6;
    return swift_willThrow();
  }
}

void sub_1C0E47DE4(uint64_t a1)
{
}

uint64_t sub_1C0E47DFC(uint64_t a1, uint64_t a2)
{
  return FormatImageNodeBinding.bind(binder:context:)(a1, a2);
}

uint64_t sub_1C0E47E14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v80 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v77 = v3;
  uint64_t v69 = *(void *)(v3 + 16);
  if (v69)
  {
    sub_1C1517EFC();
    uint64_t v4 = *(void *)(*(void *)(v79 + 40) + 16);
    swift_beginAccess();
    uint64_t v5 = *(void *)(*(void *)(v4 + 16) + 16);
    uint64_t v65 = (void *)a1;
    if (v5)
    {
      v78[0] = *(void *)(v79 + 56);
      uint64_t v6 = swift_bridgeObjectRetain();
      uint64_t v7 = sub_1BFEF3B08(v6);
      sub_1BFEF3808(v7);
      swift_release();
      uint64_t v75 = v78[0];
    }
    else
    {
      uint64_t v75 = sub_1BFEF3784();
      swift_release();
    }
    uint64_t v68 = v3 + 32;
    uint64_t v64 = (uint64_t *)v1;
    uint64_t v10 = *(void *)(v1 + 24);
    uint64_t v66 = *(void *)(v1 + 16);
    sub_1BFFAF7A4((uint64_t)&v77);
    swift_bridgeObjectRetain_n();
    sub_1BFFAF7A4((uint64_t)&v77);
    uint64_t v11 = 0;
    v63[1] = v10;
    uint64_t v67 = v10;
    while (1)
    {
      uint64_t v74 = v11;
      long long v13 = (uint64_t *)(v68 + 32 * v11);
      uint64_t v15 = *v13;
      uint64_t v14 = v13[1];
      uint64_t v16 = v13[3];
      uint64_t v70 = v13[2];
      uint64_t v17 = qword_1EB87F148;
      swift_bridgeObjectRetain();
      uint64_t v73 = v16;
      swift_bridgeObjectRetain();
      if (v17 != -1) {
        swift_once();
      }
      uint64_t v18 = qword_1EB93C770;
      uint64_t v19 = *(void *)(qword_1EB93C770 + 24);
      swift_bridgeObjectRetain();
      sub_1C1517E7C();
      long long v20 = (uint64_t *)(v18 + 16);
      swift_beginAccess();
      uint64_t v21 = *(void *)(v18 + 16);
      if (!*(void *)(v21 + 16)) {
        goto LABEL_17;
      }
      swift_bridgeObjectRetain();
      unint64_t v22 = sub_1BFEF2D8C(v15, v14);
      if ((v23 & 1) == 0) {
        break;
      }
      uint64_t v24 = *(void *)(*(void *)(v21 + 56) + 24 * v22 + 16);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_29:
      swift_bridgeObjectRelease();
      sub_1C1517E8C();
      swift_bridgeObjectRelease();
      uint64_t v46 = *(void *)(v24 + 16);
      if (!v46)
      {
LABEL_9:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v12 = v74;
        goto LABEL_10;
      }
      uint64_t v71 = v24;
      uint64_t v72 = v14;
      unint64_t v47 = (uint64_t *)(v24 + 64);
      while (1)
      {
        uint64_t v48 = *(v47 - 1);
        uint64_t v49 = *v47;
        char v50 = *(unsigned char *)(v48 + 32);
        unsigned int v51 = v50 & 0x3F;
        unint64_t v52 = (unint64_t)((1 << v50) + 63) >> 6;
        size_t v53 = 8 * v52;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
        if (v51 <= 0xD
          || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
        {
          MEMORY[0x1F4188790](isStackAllocationSafe);
          bzero((char *)v63 - ((v53 + 15) & 0x3FFFFFFFFFFFFFF0), v53);
          uint64_t v55 = sub_1BFEFB09C((uint64_t)v63 - ((v53 + 15) & 0x3FFFFFFFFFFFFFF0), v52, v48, v75);
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v56 = (void *)swift_slowAlloc();
          bzero(v56, v53);
          uint64_t v55 = sub_1BFEFB09C((uint64_t)v56, v52, v48, v75);
          swift_bridgeObjectRelease();
          MEMORY[0x1C18C9B00](v56, -1, -1);
        }
        char v57 = sub_1BFEFAE14(v55, v48);
        swift_release();
        if (v57) {
          break;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_32:
        v47 += 5;
        if (!--v46) {
          goto LABEL_9;
        }
      }
      char v58 = sub_1BFEFB810(v75, v49);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v58 & 1) == 0) {
        goto LABEL_32;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = v74;
      uint64_t v66 = v70;
      uint64_t v67 = v73;
LABEL_10:
      swift_bridgeObjectRelease();
      uint64_t v11 = v12 + 1;
      if (v11 == v69)
      {
        sub_1BFCA59C8((uint64_t)&v77);
        swift_bridgeObjectRelease();
        sub_1BFCA59C8((uint64_t)&v77);
        uint64_t v60 = *v64;
        uint64_t v59 = v64[1];
        swift_bridgeObjectRetain();
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v61 = v65;
        *uint64_t v65 = v60;
        v61[1] = v59;
        uint64_t v62 = v67;
        v61[2] = v66;
        v61[3] = v62;
        v61[4] = MEMORY[0x1E4FBC860];
        return result;
      }
    }
    swift_bridgeObjectRelease();
LABEL_17:
    uint64_t v71 = v19;
    swift_endAccess();
    v76[0] = v15;
    v76[1] = v14;
    swift_bridgeObjectRetain();
    sub_1BFF04A00(v76, v78);
    uint64_t v25 = v78[1];
    uint64_t v72 = v78[0];
    uint64_t v26 = v78[2];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v27 = v26;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v76[0] = *v20;
    uint64_t v29 = v76[0];
    *long long v20 = 0x8000000000000000;
    uint64_t v30 = v15;
    unint64_t v32 = sub_1BFEF2D8C(v15, v14);
    uint64_t v33 = *(void *)(v29 + 16);
    BOOL v34 = (v31 & 1) == 0;
    uint64_t v35 = v33 + v34;
    if (__OFADD__(v33, v34))
    {
      __break(1u);
LABEL_43:
      __break(1u);
    }
    char v36 = v31;
    if (*(void *)(v29 + 24) < v35)
    {
      sub_1BFFDF158(v35, isUniquelyReferenced_nonNull_native);
      unint64_t v37 = sub_1BFEF2D8C(v30, v14);
      if ((v36 & 1) != (v38 & 1))
      {
        uint64_t result = sub_1C1520CFC();
        __break(1u);
        return result;
      }
      unint64_t v32 = v37;
      uint64_t v39 = (void *)v76[0];
      if ((v36 & 1) == 0) {
        goto LABEL_26;
      }
LABEL_24:
      uint64_t v40 = (uint64_t *)(v39[7] + 24 * v32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *uint64_t v40 = v72;
      v40[1] = v25;
      v40[2] = v27;
      uint64_t v24 = v27;
LABEL_28:
      *long long v20 = (uint64_t)v39;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      goto LABEL_29;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v39 = (void *)v76[0];
      if (v31) {
        goto LABEL_24;
      }
    }
    else
    {
      sub_1C106B39C();
      uint64_t v39 = (void *)v76[0];
      if (v36) {
        goto LABEL_24;
      }
    }
LABEL_26:
    v39[(v32 >> 6) + 8] |= 1 << v32;
    uint64_t v41 = (uint64_t *)(v39[6] + 16 * v32);
    *uint64_t v41 = v30;
    v41[1] = v14;
    uint64_t v42 = (uint64_t *)(v39[7] + 24 * v32);
    *uint64_t v42 = v72;
    v42[1] = v25;
    v42[2] = v27;
    uint64_t v43 = v39[2];
    BOOL v44 = __OFADD__(v43, 1);
    uint64_t v45 = v43 + 1;
    if (v44) {
      goto LABEL_43;
    }
    uint64_t v24 = v27;
    v39[2] = v45;
    swift_bridgeObjectRetain();
    goto LABEL_28;
  }
  long long v8 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v8;
  *(void *)(a1 + 32) = *(void *)(v1 + 32);
  return sub_1BFF2A03C(v1);
}

uint64_t sub_1C0E4852C@<X0>(uint64_t a1@<X8>)
{
  v79[6] = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v78 = v3;
  uint64_t v70 = *(void *)(v3 + 16);
  if (v70)
  {
    uint64_t v4 = sub_1BFFC514C();
    uint64_t v5 = *(void *)(*(void *)(v4 + 40) + 16);
    swift_beginAccess();
    uint64_t v6 = *(void *)(*(void *)(v5 + 16) + 16);
    uint64_t v66 = (void *)a1;
    if (v6)
    {
      v79[0] = *(void *)(v4 + 56);
      uint64_t v7 = swift_bridgeObjectRetain();
      uint64_t v8 = sub_1BFEF3B08(v7);
      sub_1BFEF3808(v8);
      swift_release();
      uint64_t v76 = v79[0];
    }
    else
    {
      uint64_t v76 = sub_1BFEF3784();
      swift_release();
    }
    uint64_t v69 = v3 + 32;
    uint64_t v65 = (uint64_t *)v1;
    uint64_t v11 = *(void *)(v1 + 24);
    uint64_t v67 = *(void *)(v1 + 16);
    sub_1BFFAF7A4((uint64_t)&v78);
    swift_bridgeObjectRetain_n();
    sub_1BFFAF7A4((uint64_t)&v78);
    uint64_t v12 = 0;
    v64[1] = v11;
    uint64_t v68 = v11;
    while (1)
    {
      uint64_t v75 = v12;
      uint64_t v14 = (uint64_t *)(v69 + 32 * v12);
      uint64_t v16 = *v14;
      uint64_t v15 = v14[1];
      uint64_t v17 = v14[3];
      uint64_t v71 = v14[2];
      uint64_t v18 = qword_1EB87F148;
      swift_bridgeObjectRetain();
      uint64_t v74 = v17;
      swift_bridgeObjectRetain();
      if (v18 != -1) {
        swift_once();
      }
      uint64_t v19 = qword_1EB93C770;
      uint64_t v20 = *(void *)(qword_1EB93C770 + 24);
      swift_bridgeObjectRetain();
      sub_1C1517E7C();
      uint64_t v21 = (uint64_t *)(v19 + 16);
      swift_beginAccess();
      uint64_t v22 = *(void *)(v19 + 16);
      if (!*(void *)(v22 + 16)) {
        goto LABEL_17;
      }
      swift_bridgeObjectRetain();
      unint64_t v23 = sub_1BFEF2D8C(v16, v15);
      if ((v24 & 1) == 0) {
        break;
      }
      uint64_t v25 = *(void *)(*(void *)(v22 + 56) + 24 * v23 + 16);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_29:
      swift_bridgeObjectRelease();
      sub_1C1517E8C();
      swift_bridgeObjectRelease();
      uint64_t v47 = *(void *)(v25 + 16);
      if (!v47)
      {
LABEL_9:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v13 = v75;
        goto LABEL_10;
      }
      uint64_t v72 = v25;
      uint64_t v73 = v15;
      uint64_t v48 = (uint64_t *)(v25 + 64);
      while (1)
      {
        uint64_t v49 = *(v48 - 1);
        uint64_t v50 = *v48;
        char v51 = *(unsigned char *)(v49 + 32);
        unsigned int v52 = v51 & 0x3F;
        unint64_t v53 = (unint64_t)((1 << v51) + 63) >> 6;
        size_t v54 = 8 * v53;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
        if (v52 <= 0xD
          || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
        {
          MEMORY[0x1F4188790](isStackAllocationSafe);
          bzero((char *)v64 - ((v54 + 15) & 0x3FFFFFFFFFFFFFF0), v54);
          uint64_t v56 = sub_1BFEFB09C((uint64_t)v64 - ((v54 + 15) & 0x3FFFFFFFFFFFFFF0), v53, v49, v76);
          swift_bridgeObjectRelease();
        }
        else
        {
          char v57 = (void *)swift_slowAlloc();
          bzero(v57, v54);
          uint64_t v56 = sub_1BFEFB09C((uint64_t)v57, v53, v49, v76);
          swift_bridgeObjectRelease();
          MEMORY[0x1C18C9B00](v57, -1, -1);
        }
        char v58 = sub_1BFEFAE14(v56, v49);
        swift_release();
        if (v58) {
          break;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_32:
        v48 += 5;
        if (!--v47) {
          goto LABEL_9;
        }
      }
      char v59 = sub_1BFEFB810(v76, v50);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v59 & 1) == 0) {
        goto LABEL_32;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v13 = v75;
      uint64_t v67 = v71;
      uint64_t v68 = v74;
LABEL_10:
      swift_bridgeObjectRelease();
      uint64_t v12 = v13 + 1;
      if (v12 == v70)
      {
        sub_1BFCA59C8((uint64_t)&v78);
        swift_bridgeObjectRelease();
        sub_1BFCA59C8((uint64_t)&v78);
        uint64_t v61 = *v65;
        uint64_t v60 = v65[1];
        swift_bridgeObjectRetain();
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v62 = v66;
        *uint64_t v66 = v61;
        v62[1] = v60;
        uint64_t v63 = v68;
        v62[2] = v67;
        _DWORD v62[3] = v63;
        v62[4] = MEMORY[0x1E4FBC860];
        return result;
      }
    }
    swift_bridgeObjectRelease();
LABEL_17:
    uint64_t v72 = v20;
    swift_endAccess();
    v77[0] = v16;
    v77[1] = v15;
    swift_bridgeObjectRetain();
    sub_1BFF04A00(v77, v79);
    uint64_t v26 = v79[1];
    uint64_t v73 = v79[0];
    uint64_t v27 = v79[2];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v28 = v27;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v77[0] = *v21;
    uint64_t v30 = v77[0];
    *uint64_t v21 = 0x8000000000000000;
    uint64_t v31 = v16;
    unint64_t v33 = sub_1BFEF2D8C(v16, v15);
    uint64_t v34 = *(void *)(v30 + 16);
    BOOL v35 = (v32 & 1) == 0;
    uint64_t v36 = v34 + v35;
    if (__OFADD__(v34, v35))
    {
      __break(1u);
LABEL_43:
      __break(1u);
    }
    char v37 = v32;
    if (*(void *)(v30 + 24) < v36)
    {
      sub_1BFFDF158(v36, isUniquelyReferenced_nonNull_native);
      unint64_t v38 = sub_1BFEF2D8C(v31, v15);
      if ((v37 & 1) != (v39 & 1))
      {
        uint64_t result = sub_1C1520CFC();
        __break(1u);
        return result;
      }
      unint64_t v33 = v38;
      uint64_t v40 = (void *)v77[0];
      if ((v37 & 1) == 0) {
        goto LABEL_26;
      }
LABEL_24:
      uint64_t v41 = (uint64_t *)(v40[7] + 24 * v33);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *uint64_t v41 = v73;
      v41[1] = v26;
      v41[2] = v28;
      uint64_t v25 = v28;
LABEL_28:
      *uint64_t v21 = (uint64_t)v40;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      goto LABEL_29;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v40 = (void *)v77[0];
      if (v32) {
        goto LABEL_24;
      }
    }
    else
    {
      sub_1C106B39C();
      uint64_t v40 = (void *)v77[0];
      if (v37) {
        goto LABEL_24;
      }
    }
LABEL_26:
    v40[(v33 >> 6) + 8] |= 1 << v33;
    uint64_t v42 = (uint64_t *)(v40[6] + 16 * v33);
    *uint64_t v42 = v31;
    v42[1] = v15;
    uint64_t v43 = (uint64_t *)(v40[7] + 24 * v33);
    *uint64_t v43 = v73;
    v43[1] = v26;
    _OWORD v43[2] = v28;
    uint64_t v44 = v40[2];
    BOOL v45 = __OFADD__(v44, 1);
    uint64_t v46 = v44 + 1;
    if (v45) {
      goto LABEL_43;
    }
    uint64_t v25 = v28;
    v40[2] = v46;
    swift_bridgeObjectRetain();
    goto LABEL_28;
  }
  long long v9 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v9;
  *(void *)(a1 + 32) = *(void *)(v1 + 32);
  return sub_1BFF2A03C(v1);
}

uint64_t sub_1C0E48C40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v80 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v77 = v3;
  uint64_t v69 = *(void *)(v3 + 16);
  if (v69)
  {
    type metadata accessor for FormatDecorationContext();
    sub_1C1517EFC();
    uint64_t v4 = *(void *)(*(void *)(v79 + 40) + 16);
    swift_beginAccess();
    uint64_t v5 = *(void *)(*(void *)(v4 + 16) + 16);
    uint64_t v65 = (void *)a1;
    if (v5)
    {
      v78[0] = *(void *)(v79 + 56);
      uint64_t v6 = swift_bridgeObjectRetain();
      uint64_t v7 = sub_1BFEF3B08(v6);
      sub_1BFEF3808(v7);
      swift_release();
      uint64_t v75 = v78[0];
    }
    else
    {
      uint64_t v75 = sub_1BFEF3784();
      swift_release();
    }
    uint64_t v68 = v3 + 32;
    uint64_t v64 = (uint64_t *)v1;
    uint64_t v10 = *(void *)(v1 + 24);
    uint64_t v66 = *(void *)(v1 + 16);
    sub_1BFFAF7A4((uint64_t)&v77);
    swift_bridgeObjectRetain_n();
    sub_1BFFAF7A4((uint64_t)&v77);
    uint64_t v11 = 0;
    v63[1] = v10;
    uint64_t v67 = v10;
    while (1)
    {
      uint64_t v74 = v11;
      uint64_t v13 = (uint64_t *)(v68 + 32 * v11);
      uint64_t v15 = *v13;
      uint64_t v14 = v13[1];
      uint64_t v16 = v13[3];
      uint64_t v70 = v13[2];
      uint64_t v17 = qword_1EB87F148;
      swift_bridgeObjectRetain();
      uint64_t v73 = v16;
      swift_bridgeObjectRetain();
      if (v17 != -1) {
        swift_once();
      }
      uint64_t v18 = qword_1EB93C770;
      uint64_t v19 = *(void *)(qword_1EB93C770 + 24);
      swift_bridgeObjectRetain();
      sub_1C1517E7C();
      uint64_t v20 = (uint64_t *)(v18 + 16);
      swift_beginAccess();
      uint64_t v21 = *(void *)(v18 + 16);
      if (!*(void *)(v21 + 16)) {
        goto LABEL_17;
      }
      swift_bridgeObjectRetain();
      unint64_t v22 = sub_1BFEF2D8C(v15, v14);
      if ((v23 & 1) == 0) {
        break;
      }
      uint64_t v24 = *(void *)(*(void *)(v21 + 56) + 24 * v22 + 16);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_29:
      swift_bridgeObjectRelease();
      sub_1C1517E8C();
      swift_bridgeObjectRelease();
      uint64_t v46 = *(void *)(v24 + 16);
      if (!v46)
      {
LABEL_9:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v12 = v74;
        goto LABEL_10;
      }
      uint64_t v71 = v24;
      uint64_t v72 = v14;
      uint64_t v47 = (uint64_t *)(v24 + 64);
      while (1)
      {
        uint64_t v48 = *(v47 - 1);
        uint64_t v49 = *v47;
        char v50 = *(unsigned char *)(v48 + 32);
        unsigned int v51 = v50 & 0x3F;
        unint64_t v52 = (unint64_t)((1 << v50) + 63) >> 6;
        size_t v53 = 8 * v52;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
        if (v51 <= 0xD
          || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
        {
          MEMORY[0x1F4188790](isStackAllocationSafe);
          bzero((char *)v63 - ((v53 + 15) & 0x3FFFFFFFFFFFFFF0), v53);
          uint64_t v55 = sub_1BFEFB09C((uint64_t)v63 - ((v53 + 15) & 0x3FFFFFFFFFFFFFF0), v52, v48, v75);
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v56 = (void *)swift_slowAlloc();
          bzero(v56, v53);
          uint64_t v55 = sub_1BFEFB09C((uint64_t)v56, v52, v48, v75);
          swift_bridgeObjectRelease();
          MEMORY[0x1C18C9B00](v56, -1, -1);
        }
        char v57 = sub_1BFEFAE14(v55, v48);
        swift_release();
        if (v57) {
          break;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_32:
        v47 += 5;
        if (!--v46) {
          goto LABEL_9;
        }
      }
      char v58 = sub_1BFEFB810(v75, v49);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v58 & 1) == 0) {
        goto LABEL_32;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = v74;
      uint64_t v66 = v70;
      uint64_t v67 = v73;
LABEL_10:
      swift_bridgeObjectRelease();
      uint64_t v11 = v12 + 1;
      if (v11 == v69)
      {
        sub_1BFCA59C8((uint64_t)&v77);
        swift_bridgeObjectRelease();
        sub_1BFCA59C8((uint64_t)&v77);
        uint64_t v60 = *v64;
        uint64_t v59 = v64[1];
        swift_bridgeObjectRetain();
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v61 = v65;
        *uint64_t v65 = v60;
        v61[1] = v59;
        uint64_t v62 = v67;
        v61[2] = v66;
        v61[3] = v62;
        v61[4] = MEMORY[0x1E4FBC860];
        return result;
      }
    }
    swift_bridgeObjectRelease();
LABEL_17:
    uint64_t v71 = v19;
    swift_endAccess();
    v76[0] = v15;
    v76[1] = v14;
    swift_bridgeObjectRetain();
    sub_1BFF04A00(v76, v78);
    uint64_t v25 = v78[1];
    uint64_t v72 = v78[0];
    uint64_t v26 = v78[2];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v27 = v26;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v76[0] = *v20;
    uint64_t v29 = v76[0];
    *uint64_t v20 = 0x8000000000000000;
    uint64_t v30 = v15;
    unint64_t v32 = sub_1BFEF2D8C(v15, v14);
    uint64_t v33 = *(void *)(v29 + 16);
    BOOL v34 = (v31 & 1) == 0;
    uint64_t v35 = v33 + v34;
    if (__OFADD__(v33, v34))
    {
      __break(1u);
LABEL_43:
      __break(1u);
    }
    char v36 = v31;
    if (*(void *)(v29 + 24) < v35)
    {
      sub_1BFFDF158(v35, isUniquelyReferenced_nonNull_native);
      unint64_t v37 = sub_1BFEF2D8C(v30, v14);
      if ((v36 & 1) != (v38 & 1))
      {
        uint64_t result = sub_1C1520CFC();
        __break(1u);
        return result;
      }
      unint64_t v32 = v37;
      char v39 = (void *)v76[0];
      if ((v36 & 1) == 0) {
        goto LABEL_26;
      }
LABEL_24:
      uint64_t v40 = (uint64_t *)(v39[7] + 24 * v32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *uint64_t v40 = v72;
      v40[1] = v25;
      v40[2] = v27;
      uint64_t v24 = v27;
LABEL_28:
      *uint64_t v20 = (uint64_t)v39;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      goto LABEL_29;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      char v39 = (void *)v76[0];
      if (v31) {
        goto LABEL_24;
      }
    }
    else
    {
      sub_1C106B39C();
      char v39 = (void *)v76[0];
      if (v36) {
        goto LABEL_24;
      }
    }
LABEL_26:
    v39[(v32 >> 6) + 8] |= 1 << v32;
    uint64_t v41 = (uint64_t *)(v39[6] + 16 * v32);
    *uint64_t v41 = v30;
    v41[1] = v14;
    uint64_t v42 = (uint64_t *)(v39[7] + 24 * v32);
    *uint64_t v42 = v72;
    v42[1] = v25;
    v42[2] = v27;
    uint64_t v43 = v39[2];
    BOOL v44 = __OFADD__(v43, 1);
    uint64_t v45 = v43 + 1;
    if (v44) {
      goto LABEL_43;
    }
    uint64_t v24 = v27;
    v39[2] = v45;
    swift_bridgeObjectRetain();
    goto LABEL_28;
  }
  long long v8 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v8;
  *(void *)(a1 + 32) = *(void *)(v1 + 32);
  return sub_1BFF2A03C(v1);
}

uint64_t sub_1C0E49368@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v80[6] = *MEMORY[0x1E4F143B8];
  uint64_t v4 = *(void *)(v2 + 32);
  uint64_t v79 = v4;
  uint64_t v71 = *(void *)(v4 + 16);
  if (v71)
  {
    uint64_t v5 = *(void *)(a1 + 80);
    uint64_t v6 = *(void *)(*(void *)(v5 + 40) + 16);
    swift_beginAccess();
    uint64_t v7 = *(void *)(*(void *)(v6 + 16) + 16);
    uint64_t v67 = (void *)a2;
    if (v7)
    {
      v80[0] = *(void *)(v5 + 56);
      swift_retain();
      uint64_t v8 = swift_bridgeObjectRetain();
      uint64_t v9 = sub_1BFEF3B08(v8);
      sub_1BFEF3808(v9);
      swift_release();
      uint64_t v77 = v80[0];
    }
    else
    {
      swift_retain();
      uint64_t v77 = sub_1BFEF3784();
      swift_release();
    }
    uint64_t v70 = v4 + 32;
    uint64_t v66 = (uint64_t *)v2;
    uint64_t v12 = *(void *)(v2 + 24);
    uint64_t v68 = *(void *)(v2 + 16);
    sub_1BFFAF7A4((uint64_t)&v79);
    swift_bridgeObjectRetain_n();
    sub_1BFFAF7A4((uint64_t)&v79);
    uint64_t v13 = 0;
    v65[1] = v12;
    uint64_t v69 = v12;
    while (1)
    {
      uint64_t v76 = v13;
      uint64_t v15 = (uint64_t *)(v70 + 32 * v13);
      uint64_t v17 = *v15;
      uint64_t v16 = v15[1];
      uint64_t v18 = v15[3];
      uint64_t v72 = v15[2];
      uint64_t v19 = qword_1EB87F148;
      swift_bridgeObjectRetain();
      uint64_t v75 = v18;
      swift_bridgeObjectRetain();
      if (v19 != -1) {
        swift_once();
      }
      uint64_t v20 = qword_1EB93C770;
      uint64_t v21 = *(void *)(qword_1EB93C770 + 24);
      swift_bridgeObjectRetain();
      sub_1C1517E7C();
      unint64_t v22 = (uint64_t *)(v20 + 16);
      swift_beginAccess();
      uint64_t v23 = *(void *)(v20 + 16);
      if (!*(void *)(v23 + 16)) {
        goto LABEL_17;
      }
      swift_bridgeObjectRetain();
      unint64_t v24 = sub_1BFEF2D8C(v17, v16);
      if ((v25 & 1) == 0) {
        break;
      }
      uint64_t v26 = *(void *)(*(void *)(v23 + 56) + 24 * v24 + 16);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_29:
      swift_bridgeObjectRelease();
      sub_1C1517E8C();
      swift_bridgeObjectRelease();
      uint64_t v48 = *(void *)(v26 + 16);
      if (!v48)
      {
LABEL_9:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v14 = v76;
        goto LABEL_10;
      }
      uint64_t v73 = v26;
      uint64_t v74 = v16;
      uint64_t v49 = (uint64_t *)(v26 + 64);
      while (1)
      {
        uint64_t v50 = *(v49 - 1);
        uint64_t v51 = *v49;
        char v52 = *(unsigned char *)(v50 + 32);
        unsigned int v53 = v52 & 0x3F;
        unint64_t v54 = (unint64_t)((1 << v52) + 63) >> 6;
        size_t v55 = 8 * v54;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
        if (v53 <= 0xD
          || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
        {
          MEMORY[0x1F4188790](isStackAllocationSafe);
          bzero((char *)v65 - ((v55 + 15) & 0x3FFFFFFFFFFFFFF0), v55);
          uint64_t v57 = sub_1BFEFB09C((uint64_t)v65 - ((v55 + 15) & 0x3FFFFFFFFFFFFFF0), v54, v50, v77);
          swift_bridgeObjectRelease();
        }
        else
        {
          char v58 = (void *)swift_slowAlloc();
          bzero(v58, v55);
          uint64_t v57 = sub_1BFEFB09C((uint64_t)v58, v54, v50, v77);
          swift_bridgeObjectRelease();
          MEMORY[0x1C18C9B00](v58, -1, -1);
        }
        char v59 = sub_1BFEFAE14(v57, v50);
        swift_release();
        if (v59) {
          break;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_32:
        v49 += 5;
        if (!--v48) {
          goto LABEL_9;
        }
      }
      char v60 = sub_1BFEFB810(v77, v51);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v60 & 1) == 0) {
        goto LABEL_32;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = v76;
      uint64_t v68 = v72;
      uint64_t v69 = v75;
LABEL_10:
      swift_bridgeObjectRelease();
      uint64_t v13 = v14 + 1;
      if (v13 == v71)
      {
        sub_1BFCA59C8((uint64_t)&v79);
        swift_bridgeObjectRelease();
        sub_1BFCA59C8((uint64_t)&v79);
        uint64_t v62 = *v66;
        uint64_t v61 = v66[1];
        swift_bridgeObjectRetain();
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v63 = v67;
        *uint64_t v67 = v62;
        v63[1] = v61;
        uint64_t v64 = v69;
        void v63[2] = v68;
        v63[3] = v64;
        v63[4] = MEMORY[0x1E4FBC860];
        return result;
      }
    }
    swift_bridgeObjectRelease();
LABEL_17:
    uint64_t v73 = v21;
    swift_endAccess();
    v78[0] = v17;
    v78[1] = v16;
    swift_bridgeObjectRetain();
    sub_1BFF04A00(v78, v80);
    uint64_t v27 = v80[1];
    uint64_t v74 = v80[0];
    uint64_t v28 = v80[2];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v29 = v28;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v78[0] = *v22;
    uint64_t v31 = v78[0];
    *unint64_t v22 = 0x8000000000000000;
    uint64_t v32 = v17;
    unint64_t v34 = sub_1BFEF2D8C(v17, v16);
    uint64_t v35 = *(void *)(v31 + 16);
    BOOL v36 = (v33 & 1) == 0;
    uint64_t v37 = v35 + v36;
    if (__OFADD__(v35, v36))
    {
      __break(1u);
LABEL_43:
      __break(1u);
    }
    char v38 = v33;
    if (*(void *)(v31 + 24) < v37)
    {
      sub_1BFFDF158(v37, isUniquelyReferenced_nonNull_native);
      unint64_t v39 = sub_1BFEF2D8C(v32, v16);
      if ((v38 & 1) != (v40 & 1))
      {
        uint64_t result = sub_1C1520CFC();
        __break(1u);
        return result;
      }
      unint64_t v34 = v39;
      uint64_t v41 = (void *)v78[0];
      if ((v38 & 1) == 0) {
        goto LABEL_26;
      }
LABEL_24:
      uint64_t v42 = (uint64_t *)(v41[7] + 24 * v34);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *uint64_t v42 = v74;
      v42[1] = v27;
      v42[2] = v29;
      uint64_t v26 = v29;
LABEL_28:
      *unint64_t v22 = (uint64_t)v41;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      goto LABEL_29;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v41 = (void *)v78[0];
      if (v33) {
        goto LABEL_24;
      }
    }
    else
    {
      sub_1C106B39C();
      uint64_t v41 = (void *)v78[0];
      if (v38) {
        goto LABEL_24;
      }
    }
LABEL_26:
    v41[(v34 >> 6) + 8] |= 1 << v34;
    uint64_t v43 = (uint64_t *)(v41[6] + 16 * v34);
    *uint64_t v43 = v32;
    v43[1] = v16;
    BOOL v44 = (uint64_t *)(v41[7] + 24 * v34);
    *BOOL v44 = v74;
    v44[1] = v27;
    v44[2] = v29;
    uint64_t v45 = v41[2];
    BOOL v46 = __OFADD__(v45, 1);
    uint64_t v47 = v45 + 1;
    if (v46) {
      goto LABEL_43;
    }
    uint64_t v26 = v29;
    v41[2] = v47;
    swift_bridgeObjectRetain();
    goto LABEL_28;
  }
  long long v10 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)a2 = *(_OWORD *)v2;
  *(_OWORD *)(a2 + 16) = v10;
  *(void *)(a2 + 32) = *(void *)(v2 + 32);
  return sub_1BFF2A03C(v2);
}

uint64_t sub_1C0E49A88@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  return sub_1C0E50E00(a1, a2, a3, a4, a5, (void (**)(char *, uint64_t))sub_1C0E49A88, 0x6F4674616D726F46, 0xEA0000000000746ELL, a6, (uint64_t)&type metadata for FormatFont, (void (*)(void))sub_1C002FECC, (void (*)(void))sub_1C002FECC);
}

uint64_t sub_1C0E49B04@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, long long *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v134 = a5;
  uint64_t v124 = a3;
  uint64_t v123 = a2;
  uint64_t v122 = a6;
  sub_1C0E572B0(0, (unint64_t *)&unk_1EB8710E0, MEMORY[0x1E4F26ED8]);
  MEMORY[0x1F4188790](v8 - 8);
  long long v10 = (char *)&v118 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v147 = (uint64_t)&v118 - v12;
  uint64_t v138 = sub_1C15156FC();
  uint64_t v13 = *(void *)(v138 - 8);
  MEMORY[0x1F4188790](v138);
  unint64_t v131 = (char *)&v118 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v118 - v16;
  sub_1C0E572B0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v130 = (char *)&v118 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  BOOL v144 = (char *)&v118 - v21;
  MEMORY[0x1F4188790](v22);
  uint64_t v125 = (void (**)(char *, uint64_t))((char *)&v118 - v23);
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v118 - v25;
  MEMORY[0x1F4188790](v27);
  char v146 = (char *)&v118 - v28;
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (char *)&v118 - v30;
  uint64_t v32 = sub_1C1515FDC();
  uint64_t v33 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  uint64_t v129 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((char *)&v118 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v35);
  uint64_t v133 = (char *)&v118 - v36;
  MEMORY[0x1F4188790](v37);
  MEMORY[0x1F4188790](v38);
  MEMORY[0x1F4188790](v39);
  MEMORY[0x1F4188790](v40);
  uint64_t v132 = a4;
  switch(a1 >> 60)
  {
    case 1uLL:
      uint64_t v143 = v44;
      uint64_t v127 = v43;
      char v119 = (char *)&v118 - v41;
      uint64_t v120 = v31;
      uint64_t v82 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v83 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
      v158[3] = MEMORY[0x1E4FBB1A0];
      v158[0] = v82;
      v158[1] = v83;
      sub_1BFF6A008((uint64_t)v158, (uint64_t)&v157);
      uint64_t v84 = MEMORY[0x1E4FBC840];
      BOOL v144 = *(char **)(a4 + 16);
      if (!v144)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v110 = (uint64_t)v120;
        goto LABEL_56;
      }
      uint64_t v133 = (char *)(v33 + 56);
      unint64_t v142 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48);
      char v141 = (void (**)(unsigned int (**)(uint64_t, uint64_t, uint64_t), char *, uint64_t))(v33 + 32);
      uint64_t v129 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
      uint64_t v126 = (char *)(v13 + 32);
      uint64_t v125 = (void (**)(char *, uint64_t))(v13 + 8);
      unint64_t v131 = (char *)(v33 + 16);
      uint64_t v137 = (void (**)(void, uint64_t))(v33 + 8);
      uint64_t v85 = a4;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v86 = 0;
      uint64_t v130 = (char *)(v84 + 8);
      uint64_t v87 = v134;
      uint64_t v88 = (uint64_t)v146;
      uint64_t v121 = v33;
      while (1)
      {
        unint64_t v89 = *(void **)(v85 + 8 * (void)v86 + 32);
        if (v89) {
          break;
        }
        *(void *)&long long v148 = 0;
        *((void *)&v148 + 1) = 0xE000000000000000;
        sub_1C152036C();
        uint64_t v156 = MEMORY[0x1E4FBB1A0];
        long long v155 = v148;
LABEL_34:
        ++v86;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v157);
        sub_1BFF993A8(&v155, &v157);
        if (v144 == v86)
        {
          swift_bridgeObjectRelease();
          uint64_t v110 = (uint64_t)v120;
LABEL_56:
          sub_1BFF993A8(&v157, &v159);
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v158);
          sub_1BFF6A008((uint64_t)&v159, (uint64_t)&v148);
          char v111 = swift_dynamicCast();
          uint64_t v112 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56);
          if (v111)
          {
            v112(v110, 0, 1, v32);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v159);
            uint64_t v113 = v110;
            uint64_t v70 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 32);
            id v114 = v119;
            v70(v119, v113, v32);
            uint64_t v72 = v122;
            uint64_t v73 = v114;
            return ((uint64_t (*)(uint64_t, char *, uint64_t))v70)(v72, v73, v32);
          }
          v112(v110, 1, 1, v32);
          sub_1C0E56F54(v110, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1C0E572B0);
          type metadata accessor for FormatLayoutError();
          sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
          swift_allocError();
          uint64_t v115 = v124;
          *id v116 = v123;
          v116[1] = v115;
          v116[2] = 5001813;
          v116[3] = 0xE300000000000000;
          v116[4] = 0x676E69727453;
          v116[5] = 0xE600000000000000;
          swift_storeEnumTagMultiPayload();
          swift_bridgeObjectRetain();
LABEL_27:
          swift_willThrow();
          uint64_t v80 = (uint64_t *)&v159;
          return __swift_destroy_boxed_opaque_existential_1((uint64_t)v80);
        }
      }
      sub_1BFF6A008((uint64_t)&v157, (uint64_t)&v148);
      swift_bridgeObjectRetain();
      int v90 = swift_dynamicCast();
      BOOL v91 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v133;
      if (!v90)
      {
        v91(v88, 1, 1, v32);
LABEL_60:
        sub_1C0E56F54(v88, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1C0E572B0);
        type metadata accessor for FormatLayoutError();
        sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
        swift_allocError();
        *uint64_t v117 = 5001813;
        v117[1] = 0xE300000000000000;
        v117[2] = 7958081;
        v117[3] = 0xE300000000000000;
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v157);
        swift_bridgeObjectRelease();
        uint64_t v80 = v158;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v80);
      }
      v91(v88, 0, 1, v32);
      uint64_t v92 = *v142;
      if ((*v142)(v88, 1, v32) == 1) {
        goto LABEL_60;
      }
      char v93 = v89;
      unint64_t v94 = v143;
      uint64_t v140 = *v141;
      v140((unsigned int (**)(uint64_t, uint64_t, uint64_t))v143, (char *)v88, v32);
      uint64_t v156 = v32;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v155);
      uint64_t v154 = *((void *)v87 + 12);
      long long v96 = v87[5];
      long long v152 = v87[4];
      long long v153 = v96;
      long long v97 = v87[3];
      long long v150 = v87[2];
      long long v151 = v97;
      long long v98 = *v87;
      long long v149 = v87[1];
      long long v148 = v98;
      uint64_t v145 = v93;
      if (v93[2])
      {
        uint64_t v136 = boxed_opaque_existential_0;
        uint64_t v99 = v147;
        sub_1C151564C();
        uint64_t v100 = v138;
        if ((*v129)(v99, 1, v138) != 1)
        {
          (*(void (**)(char *, uint64_t, uint64_t))v126)(v17, v147, v100);
          uint64_t v102 = sub_1C15155FC();
          uint64_t v128 = &v118;
          if (v102) {
            uint64_t v103 = v102;
          }
          else {
            uint64_t v103 = MEMORY[0x1E4FBC860];
          }
          MEMORY[0x1F4188790](v102);
          *(&v118 - 2) = (uint64_t)&v148;
          uint64_t v104 = v139;
          unint64_t v105 = sub_1C002FB68((void (*)(void))sub_1C0A3F4B8, (uint64_t)(&v118 - 4), (uint64_t)v145);
          uint64_t v139 = v104;
          uint64_t v161 = v103;
          sub_1C002FB3C(v105);
          sub_1C151560C();
          sub_1C151565C();
          (*v125)(v17, v100);
          uint64_t v106 = v127;
          (*(void (**)(void (**)(char *, uint64_t), void, uint64_t))v131)(v127, v94, v32);
          if (v92((uint64_t)v26, 1, v32) == 1)
          {
            v140((unsigned int (**)(uint64_t, uint64_t, uint64_t))v136, (char *)v106, v32);
            sub_1C0E56F54((uint64_t)v26, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1C0E572B0);
          }
          else
          {
            (*v137)(v106, v32);
            v140((unsigned int (**)(uint64_t, uint64_t, uint64_t))v136, v26, v32);
          }
          uint64_t v85 = v132;
          uint64_t v87 = v134;
          uint64_t v33 = v121;
          uint64_t v88 = (uint64_t)v146;
          uint64_t v101 = v143;
          goto LABEL_50;
        }
        sub_1C0E56F54(v147, (uint64_t)&unk_1EB8710E0, MEMORY[0x1E4F26ED8], (uint64_t (*)(void))sub_1C0E572B0);
        (*(void (**)(uint64_t *, void, uint64_t))v131)(v136, v94, v32);
        uint64_t v85 = v132;
        uint64_t v33 = v121;
        uint64_t v88 = (uint64_t)v146;
      }
      else
      {
        (*(void (**)(uint64_t *, void, uint64_t))v131)(boxed_opaque_existential_0, v94, v32);
        uint64_t v85 = v132;
        uint64_t v33 = v121;
      }
      uint64_t v101 = v94;
LABEL_50:
      (*v137)(v101, v32);
      swift_bridgeObjectRelease();
      goto LABEL_34;
    case 8uLL:
      uint64_t v107 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain_n();
      swift_retain();
      sub_1C0E49B04(v107, v123, v124, a4, v134);
      swift_release_n();
      return swift_release();
    case 0xBuLL:
      type metadata accessor for FormatLayoutError();
      sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
      swift_allocError();
      uint64_t v108 = v124;
      *unsigned int v109 = v123;
      v109[1] = v108;
      v109[2] = 5001813;
      v109[3] = 0xE300000000000000;
      v109[4] = 0x7463617274736261;
      v109[5] = 0xE800000000000000;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      return swift_willThrow();
    default:
      uint64_t v120 = v42;
      *(void *)&long long v148 = a1;
      swift_bridgeObjectRetain();
      sub_1BFF6A064(v158);
      sub_1BFF6A008((uint64_t)v158, (uint64_t)&v157);
      uint64_t v147 = *(void *)(a4 + 16);
      if (!v147) {
        goto LABEL_23;
      }
      uint64_t v45 = (void (*)(unsigned int (**)(uint64_t, uint64_t, uint64_t), char *, uint64_t))(v33 + 56);
      char v146 = (char *)(v33 + 48);
      uint64_t v145 = (void *)(v33 + 32);
      uint64_t v136 = (uint64_t *)(v13 + 48);
      uint64_t v128 = (uint64_t *)(v13 + 32);
      uint64_t v127 = (void (**)(char *, uint64_t))(v13 + 8);
      char v141 = (void (**)(unsigned int (**)(uint64_t, uint64_t, uint64_t), char *, uint64_t))(v33 + 16);
      uint64_t v121 = v33;
      unint64_t v142 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 8);
      swift_bridgeObjectRetain();
      uint64_t v46 = 0;
      uint64_t v137 = (void (**)(void, uint64_t))(MEMORY[0x1E4FBC840] + 8);
      uint64_t v47 = v134;
      uint64_t v48 = (uint64_t)v144;
      uint64_t v49 = v133;
      uint64_t v126 = v10;
      uint64_t v135 = v32;
      uint64_t v140 = v45;
      break;
  }
  do
  {
    uint64_t v50 = *(void *)(a4 + 8 * v46 + 32);
    if (!v50)
    {
      *(void *)&long long v148 = 0;
      *((void *)&v148 + 1) = 0xE000000000000000;
      sub_1C152036C();
      uint64_t v156 = MEMORY[0x1E4FBB1A0];
      long long v155 = v148;
      goto LABEL_5;
    }
    sub_1BFF6A008((uint64_t)&v157, (uint64_t)&v148);
    swift_bridgeObjectRetain();
    int v51 = swift_dynamicCast();
    char v52 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v45;
    if (!v51)
    {
      v52(v48, 1, 1, v32);
LABEL_30:
      sub_1C0E56F54(v48, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1C0E572B0);
      type metadata accessor for FormatLayoutError();
      sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
      swift_allocError();
      *uint64_t v81 = 5001813;
      v81[1] = 0xE300000000000000;
      v81[2] = 7958081;
      v81[3] = 0xE300000000000000;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v157);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v158);
      return swift_bridgeObjectRelease();
    }
    v52(v48, 0, 1, v32);
    unsigned int v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))v146;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v146)(v48, 1, v32) == 1) {
      goto LABEL_30;
    }
    uint64_t v143 = (void (*)(void, void, void))*v145;
    v143(v49, v48, v32);
    uint64_t v156 = v32;
    unint64_t v54 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v155);
    size_t v55 = v54;
    uint64_t v154 = *((void *)v47 + 12);
    long long v56 = v47[5];
    long long v152 = v47[4];
    long long v153 = v56;
    long long v57 = v47[3];
    long long v150 = v47[2];
    long long v151 = v57;
    long long v58 = *v47;
    long long v149 = v47[1];
    long long v148 = v58;
    if (*(void *)(v50 + 16))
    {
      sub_1C151564C();
      uint64_t v59 = v138;
      if (((unsigned int (*)(char *, uint64_t, uint64_t))*v136)(v10, 1, v138) != 1)
      {
        char v60 = v131;
        ((void (*)(char *, char *, uint64_t))*v128)(v131, v10, v59);
        uint64_t v61 = sub_1C15155FC();
        if (v61) {
          uint64_t v62 = v61;
        }
        else {
          uint64_t v62 = MEMORY[0x1E4FBC860];
        }
        MEMORY[0x1F4188790](v61);
        *(&v118 - 2) = (uint64_t)&v148;
        uint64_t v63 = v139;
        unint64_t v64 = sub_1C002FB68((void (*)(void))sub_1C002FECC, (uint64_t)(&v118 - 4), v50);
        uint64_t v139 = v63;
        uint64_t v161 = v62;
        sub_1C002FB3C(v64);
        sub_1C151560C();
        uint64_t v65 = (uint64_t)v130;
        sub_1C151565C();
        (*v127)(v60, v59);
        uint64_t v66 = v129;
        uint64_t v32 = v135;
        (*v141)(v129, v49, v135);
        if (v53(v65, 1, v32) == 1)
        {
          v143(v55, v66, v32);
          sub_1C0E56F54(v65, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1C0E572B0);
        }
        else
        {
          ((void (*)(unsigned int (**)(uint64_t, uint64_t, uint64_t), uint64_t))*v142)(v66, v32);
          v143(v55, v65, v32);
        }
        a4 = v132;
        uint64_t v47 = v134;
        long long v10 = v126;
        uint64_t v48 = (uint64_t)v144;
        uint64_t v49 = v133;
        goto LABEL_21;
      }
      sub_1C0E56F54((uint64_t)v10, (uint64_t)&unk_1EB8710E0, MEMORY[0x1E4F26ED8], (uint64_t (*)(void))sub_1C0E572B0);
      uint64_t v32 = v135;
      (*v141)((unsigned int (**)(uint64_t, uint64_t, uint64_t))v55, v49, v135);
    }
    else
    {
      (*v141)((unsigned int (**)(uint64_t, uint64_t, uint64_t))v54, v49, v32);
    }
    uint64_t v48 = (uint64_t)v144;
LABEL_21:
    uint64_t v45 = v140;
    ((void (*)(char *, uint64_t))*v142)(v49, v32);
    swift_bridgeObjectRelease();
LABEL_5:
    ++v46;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v157);
    sub_1BFF993A8(&v155, &v157);
  }
  while (v147 != v46);
  swift_bridgeObjectRelease();
  uint64_t v33 = v121;
LABEL_23:
  sub_1BFF993A8(&v157, &v159);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v158);
  swift_bridgeObjectRelease();
  sub_1BFF6A008((uint64_t)&v159, (uint64_t)&v148);
  uint64_t v67 = (uint64_t)v125;
  char v68 = swift_dynamicCast();
  uint64_t v69 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56);
  if ((v68 & 1) == 0)
  {
    v69(v67, 1, 1, v32);
    sub_1C0E56F54(v67, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1C0E572B0);
    type metadata accessor for FormatLayoutError();
    sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
    swift_allocError();
    uint64_t v76 = v75;
    __swift_project_boxed_opaque_existential_1(&v159, v160);
    swift_getDynamicType();
    uint64_t v77 = v124;
    swift_bridgeObjectRetain();
    uint64_t v78 = sub_1C1520FAC();
    *uint64_t v76 = v123;
    v76[1] = v77;
    uint64_t v76[2] = 5001813;
    v76[3] = 0xE300000000000000;
    v76[4] = v78;
    v76[5] = v79;
    swift_storeEnumTagMultiPayload();
    goto LABEL_27;
  }
  v69(v67, 0, 1, v32);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v159);
  uint64_t v70 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 32);
  uint64_t v71 = v120;
  v70(v120, v67, v32);
  uint64_t v72 = v122;
  uint64_t v73 = v71;
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v70)(v72, v73, v32);
}

uint64_t sub_1C0E4B218@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, long long *a5@<X4>, void *a6@<X8>)
{
  return sub_1C0E4B314(a1, a2, a3, a4, a5, (uint64_t)sub_1C0E4B218, 0x6F4674616D726F46, 0xEA0000000000746ELL, a6, (uint64_t)&type metadata for FormatFont, (void (**)(char *, uint64_t, uint64_t))sub_1C002FECC, (void (*)(char *, uint64_t, uint64_t))sub_1C002FECC);
}

uint64_t sub_1C0E4B294@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, long long *a5@<X4>, void *a6@<X8>)
{
  return sub_1C0E4B314(a1, a2, a3, a4, a5, (uint64_t)sub_1C0E4B294, 0x6F4374616D726F46, 0xEB00000000726F6CLL, a6, (uint64_t)&type metadata for FormatColor, (void (**)(char *, uint64_t, uint64_t))sub_1C002FECC, (void (*)(char *, uint64_t, uint64_t))sub_1C002FECC);
}

uint64_t sub_1C0E4B314@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, long long *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, void (**a11)(char *, uint64_t, uint64_t), void (*a12)(char *, uint64_t, uint64_t))
{
  uint64_t v120 = a8;
  uint64_t v119 = a7;
  uint64_t v144 = a6;
  unint64_t v131 = a5;
  uint64_t v122 = a3;
  uint64_t v121 = a2;
  uint64_t v118 = a9;
  uint64_t v128 = a12;
  uint64_t v15 = a10;
  sub_1C0E572B0(0, (unint64_t *)&unk_1EB8710E0, MEMORY[0x1E4F26ED8]);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((char *)&v116 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v19);
  char v141 = (void (**)(char *, uint64_t))((char *)&v116 - v20);
  uint64_t v137 = sub_1C15156FC();
  uint64_t v21 = *(void *)(v137 - 8);
  MEMORY[0x1F4188790](v137);
  uint64_t v127 = (char *)&v116 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v140 = (uint64_t *)((char *)&v116 - v24);
  sub_1C0E572B0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v126 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((char *)&v116 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v27);
  uint64_t v130 = (void (**)(uint64_t *, char *, uint64_t))((char *)&v116 - v28);
  MEMORY[0x1F4188790](v29);
  uint64_t v139 = (void (**)(char *, char *, uint64_t))((char *)&v116 - v30);
  MEMORY[0x1F4188790](v31);
  uint64_t v143 = (char **)((char *)&v116 - v32);
  uint64_t v33 = sub_1C1515FDC();
  uint64_t v34 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  uint64_t v125 = (char *)&v116 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v36);
  uint64_t v129 = (char *)&v116 - v37;
  MEMORY[0x1F4188790](v38);
  MEMORY[0x1F4188790](v39);
  uint64_t v145 = (char *)&v116 - v41;
  uint64_t v142 = a4;
  switch(a1 >> 60)
  {
    case 1uLL:
      uint64_t v125 = v40;
      uint64_t v136 = v12;
      uint64_t v76 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v77 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
      v156[3] = MEMORY[0x1E4FBB1A0];
      v156[0] = v76;
      v156[1] = v77;
      sub_1BFF6A008((uint64_t)v156, (uint64_t)&v155);
      uint64_t v78 = MEMORY[0x1E4FBC840];
      uint64_t v138 = *(char **)(a4 + 16);
      if (v138)
      {
        uint64_t v124 = a11;
        uint64_t v79 = (char *)(v34 + 56);
        uint64_t v135 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
        uint64_t v134 = (void (**)(char *, uint64_t, uint64_t))(v34 + 32);
        uint64_t v126 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
        uint64_t v123 = (void (**)(uint64_t *, uint64_t, uint64_t))(v21 + 32);
        id v116 = (void (**)(char *, uint64_t))(v21 + 8);
        uint64_t v130 = (void (**)(uint64_t *, char *, uint64_t))(v34 + 16);
        uint64_t v133 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 8);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t v80 = 0;
        uint64_t v127 = (char *)(v78 + 8);
        uint64_t v81 = v131;
        uint64_t v82 = v137;
        uint64_t v83 = (uint64_t)v143;
        uint64_t v117 = a10;
        uint64_t v129 = v79;
        do
        {
          uint64_t v84 = v15;
          uint64_t v85 = *(void *)(a4 + 8 * (void)v80 + 32);
          if (v85)
          {
            sub_1BFF6A008((uint64_t)&v155, (uint64_t)&v146);
            uint64_t v144 = v85;
            swift_bridgeObjectRetain();
            int v86 = swift_dynamicCast();
            uint64_t v87 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v79;
            if (!v86)
            {
              v87(v83, 1, 1, v33);
LABEL_59:
              sub_1C0E56F54(v83, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1C0E572B0);
              type metadata accessor for FormatLayoutError();
              sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
              swift_allocError();
              *uint64_t v115 = 5001813;
              v115[1] = 0xE300000000000000;
              v115[2] = 7958081;
              v115[3] = 0xE300000000000000;
              swift_storeEnumTagMultiPayload();
              swift_willThrow();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v155);
              swift_bridgeObjectRelease();
              uint64_t v74 = v156;
              return __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
            }
            v87(v83, 0, 1, v33);
            uint64_t v88 = *v135;
            if ((*v135)(v83, 1, v33) == 1) {
              goto LABEL_59;
            }
            unint64_t v89 = *v134;
            int v90 = v145;
            (*v134)(v145, v83, v33);
            uint64_t v154 = v33;
            boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v153);
            uint64_t v152 = *((void *)v81 + 12);
            long long v92 = v81[5];
            long long v150 = v81[4];
            long long v151 = v92;
            long long v93 = v81[3];
            long long v148 = v81[2];
            long long v149 = v93;
            long long v94 = *v81;
            long long v147 = v81[1];
            long long v146 = v94;
            if (*(void *)(v144 + 16))
            {
              uint64_t v128 = v89;
              char v95 = boxed_opaque_existential_0;
              uint64_t v96 = (uint64_t)v141;
              sub_1C151564C();
              if ((*v126)(v96, 1, v82) == 1)
              {
                sub_1C0E56F54(v96, (uint64_t)&unk_1EB8710E0, MEMORY[0x1E4F26ED8], (uint64_t (*)(void))sub_1C0E572B0);
                (*v130)(v95, v90, v33);
                a4 = v142;
                long long v97 = v90;
                uint64_t v15 = v117;
              }
              else
              {
                long long v98 = v140;
                (*v123)(v140, v96, v82);
                uint64_t v99 = sub_1C15155FC();
                if (v99) {
                  uint64_t v100 = v99;
                }
                else {
                  uint64_t v100 = MEMORY[0x1E4FBC860];
                }
                MEMORY[0x1F4188790](v99);
                *(&v116 - 2) = (void (**)(char *, uint64_t))&v146;
                uint64_t v101 = v136;
                unint64_t v102 = sub_1C002FB68((void (*)(void))v124, (uint64_t)(&v116 - 4), v144);
                uint64_t v136 = v101;
                uint64_t v159 = v100;
                uint64_t v103 = v137;
                sub_1C002FB3C(v102);
                sub_1C151560C();
                uint64_t v104 = (uint64_t)v139;
                sub_1C151565C();
                unint64_t v105 = v98;
                uint64_t v106 = v145;
                uint64_t v82 = v103;
                (*v116)((char *)v105, v103);
                uint64_t v107 = v125;
                (*v130)((uint64_t *)v125, v106, v33);
                if (v88(v104, 1, v33) == 1)
                {
                  v128((char *)v95, (uint64_t)v107, v33);
                  sub_1C0E56F54(v104, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1C0E572B0);
                }
                else
                {
                  ((void (*)(char *, uint64_t))*v133)(v107, v33);
                  v128((char *)v95, v104, v33);
                }
                a4 = v142;
                long long v97 = v106;
                uint64_t v15 = v117;
                uint64_t v81 = v131;
              }
              uint64_t v83 = (uint64_t)v143;
            }
            else
            {
              (*v130)(boxed_opaque_existential_0, v90, v33);
              a4 = v142;
              long long v97 = v90;
              uint64_t v15 = v117;
            }
            uint64_t v79 = v129;
            ((void (*)(char *, uint64_t))*v133)(v97, v33);
            swift_bridgeObjectRelease();
          }
          else
          {
            *(void *)&long long v146 = 0;
            *((void *)&v146 + 1) = 0xE000000000000000;
            sub_1C152036C();
            uint64_t v154 = MEMORY[0x1E4FBB1A0];
            long long v153 = v146;
            uint64_t v15 = v84;
          }
          ++v80;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v155);
          sub_1BFF993A8(&v153, &v155);
        }
        while (v138 != v80);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1BFF993A8(&v155, &v157);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v156);
      sub_1BFF6A008((uint64_t)&v157, (uint64_t)&v146);
      if ((swift_dynamicCast() & 1) == 0)
      {
        type metadata accessor for FormatLayoutError();
        sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
        swift_allocError();
        uint64_t v112 = v122;
        *uint64_t v113 = v121;
        v113[1] = v112;
        uint64_t v114 = v120;
        v113[2] = v119;
        v113[3] = v114;
        v113[4] = 0x676E69727453;
        v113[5] = 0xE600000000000000;
        swift_storeEnumTagMultiPayload();
        swift_bridgeObjectRetain();
        goto LABEL_26;
      }
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v157);
      *uint64_t v118 = v155;
      return result;
    case 8uLL:
      uint64_t v108 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain_n();
      swift_retain();
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, long long *))v144)(v108, v121, v122, a4, v131);
      swift_release_n();
      return swift_release();
    case 0xBuLL:
      type metadata accessor for FormatLayoutError();
      sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
      swift_allocError();
      uint64_t v109 = v122;
      *uint64_t v110 = v121;
      v110[1] = v109;
      uint64_t v111 = v120;
      v110[2] = v119;
      v110[3] = v111;
      v110[4] = 0x7463617274736261;
      v110[5] = 0xE800000000000000;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      return swift_willThrow();
    default:
      uint64_t v135 = v18;
      *(void *)&long long v146 = a1;
      swift_bridgeObjectRetain();
      sub_1BFF6A064(v156);
      sub_1BFF6A008((uint64_t)v156, (uint64_t)&v155);
      uint64_t v42 = a4;
      uint64_t v145 = *(char **)(a4 + 16);
      if (!v145) {
        goto LABEL_23;
      }
      uint64_t v117 = a10;
      uint64_t v136 = v12;
      uint64_t v43 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56);
      uint64_t v144 = v34 + 48;
      uint64_t v143 = (char **)(v34 + 32);
      uint64_t v133 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
      uint64_t v124 = (void (**)(char *, uint64_t, uint64_t))(v21 + 32);
      uint64_t v123 = (void (**)(uint64_t *, uint64_t, uint64_t))(v21 + 8);
      uint64_t v139 = (void (**)(char *, char *, uint64_t))(v34 + 16);
      char v141 = (void (**)(char *, uint64_t))(v34 + 8);
      swift_bridgeObjectRetain();
      BOOL v44 = 0;
      uint64_t v134 = (void (**)(char *, uint64_t, uint64_t))(MEMORY[0x1E4FBC840] + 8);
      uint64_t v45 = v131;
      uint64_t v46 = (uint64_t)v130;
      uint64_t v47 = v129;
      uint64_t v132 = v33;
      break;
  }
  do
  {
    uint64_t v48 = *(void *)(v42 + 8 * (void)v44 + 32);
    if (!v48)
    {
      *(void *)&long long v146 = 0;
      *((void *)&v146 + 1) = 0xE000000000000000;
      sub_1C152036C();
      uint64_t v154 = MEMORY[0x1E4FBB1A0];
      long long v153 = v146;
      goto LABEL_5;
    }
    sub_1BFF6A008((uint64_t)&v155, (uint64_t)&v146);
    swift_bridgeObjectRetain();
    int v49 = swift_dynamicCast();
    uint64_t v50 = *v43;
    if (!v49)
    {
      v50(v46, 1, 1, v33);
LABEL_29:
      sub_1C0E56F54(v46, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1C0E572B0);
      type metadata accessor for FormatLayoutError();
      sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
      swift_allocError();
      *uint64_t v75 = 5001813;
      v75[1] = 0xE300000000000000;
      v75[2] = 7958081;
      v75[3] = 0xE300000000000000;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v155);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v156);
      return swift_bridgeObjectRelease();
    }
    int v51 = v43;
    v50(v46, 0, 1, v33);
    char v52 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))v144;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v144)(v46, 1, v33) == 1) {
      goto LABEL_29;
    }
    unsigned int v53 = *v143;
    ((void (*)(char *, uint64_t, uint64_t))*v143)(v47, v46, v33);
    uint64_t v154 = v33;
    unint64_t v54 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v153);
    uint64_t v152 = *((void *)v45 + 12);
    long long v55 = v45[5];
    long long v150 = v45[4];
    long long v151 = v55;
    long long v56 = v45[3];
    long long v148 = v45[2];
    long long v149 = v56;
    long long v57 = *v45;
    long long v147 = v45[1];
    long long v146 = v57;
    if (*(void *)(v48 + 16))
    {
      uint64_t v138 = v53;
      uint64_t v140 = v54;
      uint64_t v58 = (uint64_t)v135;
      sub_1C151564C();
      uint64_t v59 = v137;
      if ((*v133)(v58, 1, v137) != 1)
      {
        char v60 = v127;
        (*v124)(v127, v58, v59);
        uint64_t v61 = sub_1C15155FC();
        if (v61) {
          uint64_t v62 = v61;
        }
        else {
          uint64_t v62 = MEMORY[0x1E4FBC860];
        }
        MEMORY[0x1F4188790](v61);
        *(&v116 - 2) = (void (**)(char *, uint64_t))&v146;
        uint64_t v63 = v136;
        unint64_t v64 = sub_1C002FB68((void (*)(void))v128, (uint64_t)(&v116 - 4), v48);
        uint64_t v136 = v63;
        uint64_t v159 = v62;
        sub_1C002FB3C(v64);
        sub_1C151560C();
        uint64_t v65 = (uint64_t)v126;
        sub_1C151565C();
        ((void (*)(char *, uint64_t))*v123)(v60, v59);
        uint64_t v66 = v125;
        uint64_t v33 = v132;
        (*v139)(v125, v47, v132);
        if (v52(v65, 1, v33) == 1)
        {
          ((void (*)(uint64_t *, char *, uint64_t))v138)(v140, v66, v33);
          sub_1C0E56F54(v65, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1C0E572B0);
        }
        else
        {
          (*v141)(v66, v33);
          ((void (*)(uint64_t *, uint64_t, uint64_t))v138)(v140, v65, v33);
        }
        uint64_t v42 = v142;
        uint64_t v45 = v131;
        uint64_t v46 = (uint64_t)v130;
        uint64_t v47 = v129;
        goto LABEL_21;
      }
      sub_1C0E56F54(v58, (uint64_t)&unk_1EB8710E0, MEMORY[0x1E4F26ED8], (uint64_t (*)(void))sub_1C0E572B0);
      uint64_t v33 = v132;
      (*v139)((char *)v140, v47, v132);
    }
    else
    {
      (*v139)((char *)v54, v47, v33);
    }
    uint64_t v42 = v142;
LABEL_21:
    uint64_t v43 = v51;
    (*v141)(v47, v33);
    swift_bridgeObjectRelease();
LABEL_5:
    ++v44;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v155);
    sub_1BFF993A8(&v153, &v155);
  }
  while (v145 != v44);
  swift_bridgeObjectRelease();
LABEL_23:
  sub_1BFF993A8(&v155, &v157);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v156);
  swift_bridgeObjectRelease();
  sub_1BFF6A008((uint64_t)&v157, (uint64_t)&v146);
  if (swift_dynamicCast())
  {
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v157);
    *uint64_t v118 = v155;
  }
  else
  {
    type metadata accessor for FormatLayoutError();
    sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
    swift_allocError();
    uint64_t v69 = v68;
    __swift_project_boxed_opaque_existential_1(&v157, v158);
    swift_getDynamicType();
    uint64_t v70 = v122;
    swift_bridgeObjectRetain();
    uint64_t v71 = sub_1C1520FAC();
    *uint64_t v69 = v121;
    v69[1] = v70;
    uint64_t v72 = v120;
    v69[2] = v119;
    v69[3] = v72;
    v69[4] = v71;
    v69[5] = v73;
    swift_storeEnumTagMultiPayload();
LABEL_26:
    swift_willThrow();
    uint64_t v74 = (uint64_t *)&v157;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
  }
  return result;
}

uint64_t sub_1C0E4C880@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  return sub_1C0E50E00(a1, a2, a3, a4, a5, (void (**)(char *, uint64_t))sub_1C0E4C880, 0x6F4374616D726F46, 0xEB00000000726F6CLL, a6, (uint64_t)&type metadata for FormatColor, (void (*)(void))sub_1C0A3F4B8, (void (*)(void))sub_1C002FECC);
}

uint64_t sub_1C0E4C938@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return sub_1C0E4C9C4(a1, a2, a3, a4, a5, (char *)sub_1C0E4C938, (void (*)(char *, uint64_t, uint64_t))sub_1C002FECC, (uint64_t *)sub_1C002FECC, a6);
}

uint64_t sub_1C0E4C9C4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, void (*a7)(char *, uint64_t, uint64_t)@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v127 = a8;
  char v141 = a7;
  uint64_t v137 = a6;
  uint64_t v134 = a5;
  uint64_t v117 = a9;
  sub_1C0E572B0(0, (unint64_t *)&unk_1EB8710E0, MEMORY[0x1E4F26ED8]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (void (**)(char *, uint64_t))((char *)&v114 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v17);
  uint64_t v144 = (char *)&v114 - v18;
  uint64_t v136 = sub_1C15156FC();
  uint64_t v19 = *(void *)(v136 - 8);
  MEMORY[0x1F4188790](v136);
  uint64_t v126 = (char *)&v114 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v140 = (char *)&v114 - v22;
  sub_1C0E572B0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v125 = (void (*)(uint64_t *, char *, uint64_t))((char *)&v114 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v25);
  uint64_t v130 = (char **)((char *)&v114 - v26);
  MEMORY[0x1F4188790](v27);
  uint64_t v139 = (uint64_t *)((char *)&v114 - v28);
  MEMORY[0x1F4188790](v29);
  uint64_t v143 = (char *)&v114 - v30;
  uint64_t v31 = sub_1C1515FDC();
  uint64_t v32 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v124 = (char *)&v114 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v34);
  uint64_t v129 = (void (**)(char *, uint64_t))((char *)&v114 - v35);
  MEMORY[0x1F4188790](v36);
  uint64_t v138 = (char *)&v114 - v37;
  MEMORY[0x1F4188790](v38);
  uint64_t v142 = (void (**)(void))((char *)&v114 - v39);
  sub_1C0E572B0(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v40 - 8);
  uint64_t v118 = (char *)&v114 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v42);
  uint64_t v133 = (char *)&v114 - v43;
  uint64_t v120 = sub_1C151631C();
  uint64_t v119 = *(void *)(v120 - 8);
  MEMORY[0x1F4188790](v120);
  MEMORY[0x1F4188790](v44);
  uint64_t v128 = a4;
  switch(a1 >> 60)
  {
    case 1uLL:
      uint64_t v118 = (char *)&v114 - v45;
      uint64_t v80 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v81 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
      v150[3] = MEMORY[0x1E4FBB1A0];
      v150[0] = v80;
      v150[1] = v81;
      sub_1BFF6A008((uint64_t)v150, (uint64_t)&v149);
      uint64_t v137 = *(char **)(a4 + 16);
      if (v137)
      {
        uint64_t v114 = a2;
        uint64_t v115 = a3;
        uint64_t v135 = v9;
        uint64_t v82 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56);
        uint64_t v132 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
        uint64_t v130 = (char **)(v32 + 32);
        uint64_t v123 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
        uint64_t v122 = (void (**)(char *, uint64_t, uint64_t))(v19 + 32);
        uint64_t v121 = (void (**)(char *, uint64_t))(v19 + 8);
        uint64_t v126 = (char *)(v32 + 16);
        uint64_t v129 = (void (**)(char *, uint64_t))(v32 + 8);
        uint64_t v83 = MEMORY[0x1E4FBC840];
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t v84 = 0;
        uint64_t v124 = (char *)(v83 + 8);
        uint64_t v85 = (uint64_t)v143;
        uint64_t v86 = a4;
        uint64_t v87 = v142;
        do
        {
          uint64_t v88 = *(void *)(v86 + 8 * (void)v84 + 32);
          if (v88)
          {
            sub_1BFF6A008((uint64_t)&v149, (uint64_t)&v145);
            swift_bridgeObjectRetain();
            int v89 = swift_dynamicCast();
            int v90 = *v82;
            if (!v89)
            {
              v90(v85, 1, 1, v31);
LABEL_58:
              sub_1C0E56F54(v85, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1C0E572B0);
              type metadata accessor for FormatLayoutError();
              sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
              swift_allocError();
              *uint64_t v113 = 5001813;
              v113[1] = 0xE300000000000000;
              v113[2] = 7958081;
              v113[3] = 0xE300000000000000;
              swift_storeEnumTagMultiPayload();
              swift_willThrow();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v149);
              swift_bridgeObjectRelease();
              uint64_t v78 = v150;
              return __swift_destroy_boxed_opaque_existential_1((uint64_t)v78);
            }
            BOOL v91 = v82;
            v90(v85, 0, 1, v31);
            long long v92 = *v132;
            if ((*v132)(v85, 1, v31) == 1) {
              goto LABEL_58;
            }
            long long v93 = *v130;
            ((void (*)(void (**)(void), uint64_t, uint64_t))*v130)(v87, v85, v31);
            uint64_t v148 = v31;
            boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v147);
            *(void *)&long long v145 = v134;
            if (*(void *)(v88 + 16))
            {
              uint64_t v125 = (void (*)(uint64_t *, char *, uint64_t))v93;
              uint64_t v127 = boxed_opaque_existential_0;
              char v95 = v87;
              uint64_t v96 = (uint64_t)v144;
              long long v97 = v95;
              sub_1C151564C();
              uint64_t v98 = v136;
              if ((*v123)(v96, 1, v136) == 1)
              {
                sub_1C0E56F54(v96, (uint64_t)&unk_1EB8710E0, MEMORY[0x1E4F26ED8], (uint64_t (*)(void))sub_1C0E572B0);
                (*(void (**)(uint64_t *, void (**)(void), uint64_t))v126)(v127, v97, v31);
                uint64_t v86 = v128;
                uint64_t v87 = v97;
              }
              else
              {
                uint64_t v99 = v140;
                (*v122)(v140, v96, v98);
                uint64_t v100 = sub_1C15155FC();
                if (v100) {
                  uint64_t v101 = v100;
                }
                else {
                  uint64_t v101 = MEMORY[0x1E4FBC860];
                }
                MEMORY[0x1F4188790](v100);
                *(&v114 - 2) = (uint64_t)&v145;
                uint64_t v102 = v135;
                unint64_t v103 = sub_1C002FB68((void (*)(void))v141, (uint64_t)(&v114 - 4), v88);
                uint64_t v135 = v102;
                uint64_t v153 = v101;
                sub_1C002FB3C(v103);
                sub_1C151560C();
                uint64_t v104 = v139;
                sub_1C151565C();
                uint64_t v105 = (uint64_t)v104;
                (*v121)(v99, v136);
                uint64_t v106 = v138;
                (*(void (**)(char *, void (**)(void), uint64_t))v126)(v138, v97, v31);
                if (v92(v105, 1, v31) == 1)
                {
                  v125(v127, v106, v31);
                  sub_1C0E56F54(v105, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1C0E572B0);
                }
                else
                {
                  (*v129)(v106, v31);
                  v125(v127, (char *)v105, v31);
                }
                uint64_t v86 = v128;
                uint64_t v85 = (uint64_t)v143;
                uint64_t v87 = v142;
              }
            }
            else
            {
              (*(void (**)(uint64_t *, void (**)(void), uint64_t))v126)(boxed_opaque_existential_0, v87, v31);
              uint64_t v86 = v128;
            }
            uint64_t v82 = v91;
            (*v129)((char *)v87, v31);
            swift_bridgeObjectRelease();
          }
          else
          {
            *(void *)&long long v145 = 0;
            *((void *)&v145 + 1) = 0xE000000000000000;
            sub_1C152036C();
            uint64_t v148 = MEMORY[0x1E4FBB1A0];
            long long v147 = v145;
          }
          ++v84;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v149);
          sub_1BFF993A8(&v147, &v149);
        }
        while (v137 != v84);
        swift_bridgeObjectRelease();
        a3 = v115;
        a2 = v114;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      uint64_t v66 = v120;
      uint64_t v109 = v119;
      uint64_t v65 = (uint64_t)v133;
      sub_1BFF993A8(&v149, &v151);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v150);
      sub_1BFF6A008((uint64_t)&v151, (uint64_t)&v149);
      char v110 = swift_dynamicCast();
      uint64_t v111 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v109 + 56);
      if (v110)
      {
        v111(v65, 0, 1, v66);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v151);
        uint64_t v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(v109 + 32);
        uint64_t v71 = (char *)&v147 + 8;
        goto LABEL_24;
      }
      v111(v65, 1, 1, v66);
      sub_1C0E56F54(v65, (uint64_t)&qword_1EB871180, MEMORY[0x1E4F27928], (uint64_t (*)(void))sub_1C0E572B0);
      type metadata accessor for FormatLayoutError();
      sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
      swift_allocError();
      *uint64_t v112 = a2;
      v112[1] = a3;
      v112[2] = 1702125892;
      v112[3] = 0xE400000000000000;
      v112[4] = 0x676E69727453;
      v112[5] = 0xE600000000000000;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      goto LABEL_26;
    case 8uLL:
      uint64_t v107 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain_n();
      swift_retain();
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v137)(v107, a2, a3, a4, v134);
      swift_release_n();
      return swift_release();
    case 0xBuLL:
      type metadata accessor for FormatLayoutError();
      sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
      swift_allocError();
      *uint64_t v108 = a2;
      v108[1] = a3;
      v108[2] = 1702125892;
      v108[3] = 0xE400000000000000;
      v108[4] = 0x7463617274736261;
      v108[5] = 0xE800000000000000;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      return swift_willThrow();
    default:
      uint64_t v116 = v46;
      *(void *)&long long v149 = a1;
      swift_bridgeObjectRetain();
      sub_1BFF6A064(v150);
      sub_1BFF6A008((uint64_t)v150, (uint64_t)&v149);
      uint64_t v144 = *(char **)(a4 + 16);
      if (!v144) {
        goto LABEL_22;
      }
      uint64_t v114 = a2;
      uint64_t v115 = a3;
      uint64_t v135 = v9;
      uint64_t v138 = (char *)(v32 + 56);
      uint64_t v143 = (char *)(v32 + 48);
      uint64_t v142 = (void (**)(void))(v32 + 32);
      uint64_t v132 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
      uint64_t v123 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 32);
      uint64_t v122 = (void (**)(char *, uint64_t, uint64_t))(v19 + 8);
      uint64_t v137 = (char *)(v32 + 16);
      uint64_t v140 = (char *)(v32 + 8);
      swift_bridgeObjectRetain();
      uint64_t v47 = 0;
      uint64_t v133 = (char *)(MEMORY[0x1E4FBC840] + 8);
      uint64_t v48 = v134;
      uint64_t v49 = (uint64_t)v130;
      uint64_t v50 = (char *)v129;
      uint64_t v51 = a4;
      uint64_t v121 = v16;
      uint64_t v131 = v31;
      break;
  }
  do
  {
    uint64_t v52 = *(void *)(v51 + 8 * (void)v47 + 32);
    if (v52)
    {
      sub_1BFF6A008((uint64_t)&v149, (uint64_t)&v145);
      swift_bridgeObjectRetain();
      int v53 = swift_dynamicCast();
      unint64_t v54 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v138;
      if (!v53)
      {
        v54(v49, 1, 1, v31);
LABEL_29:
        sub_1C0E56F54(v49, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1C0E572B0);
        type metadata accessor for FormatLayoutError();
        sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
        swift_allocError();
        *uint64_t v79 = 5001813;
        v79[1] = 0xE300000000000000;
        v79[2] = 7958081;
        v79[3] = 0xE300000000000000;
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v149);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v150);
        return swift_bridgeObjectRelease();
      }
      v54(v49, 0, 1, v31);
      long long v55 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))v143;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v143)(v49, 1, v31) == 1) {
        goto LABEL_29;
      }
      char v141 = (void (*)(char *, uint64_t, uint64_t))*v142;
      v141(v50, v49, v31);
      uint64_t v148 = v31;
      long long v56 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v147);
      *(void *)&long long v145 = v48;
      if (*(void *)(v52 + 16))
      {
        uint64_t v139 = v56;
        sub_1C151564C();
        uint64_t v57 = v136;
        if ((*v132)((uint64_t)v16, 1, v136) == 1)
        {
          sub_1C0E56F54((uint64_t)v16, (uint64_t)&unk_1EB8710E0, MEMORY[0x1E4F26ED8], (uint64_t (*)(void))sub_1C0E572B0);
          uint64_t v31 = v131;
          (*(void (**)(uint64_t *, char *, uint64_t))v137)(v139, v50, v131);
        }
        else
        {
          uint64_t v58 = v126;
          (*v123)((uint64_t)v126, (uint64_t)v16, v57);
          uint64_t v59 = sub_1C15155FC();
          if (v59) {
            uint64_t v60 = v59;
          }
          else {
            uint64_t v60 = MEMORY[0x1E4FBC860];
          }
          MEMORY[0x1F4188790](v59);
          *(&v114 - 2) = (uint64_t)&v145;
          uint64_t v61 = v135;
          unint64_t v62 = sub_1C002FB68((void (*)(void))v127, (uint64_t)(&v114 - 4), v52);
          uint64_t v135 = v61;
          uint64_t v153 = v60;
          sub_1C002FB3C(v62);
          sub_1C151560C();
          uint64_t v63 = (uint64_t)v125;
          sub_1C151565C();
          ((void (*)(char *, uint64_t))*v122)(v58, v57);
          unint64_t v64 = v124;
          uint64_t v31 = v131;
          (*(void (**)(char *, char *, uint64_t))v137)(v124, v50, v131);
          if (v55(v63, 1, v31) == 1)
          {
            v141((char *)v139, (uint64_t)v64, v31);
            sub_1C0E56F54(v63, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1C0E572B0);
          }
          else
          {
            (*(void (**)(char *, uint64_t))v140)(v64, v31);
            v141((char *)v139, v63, v31);
          }
          uint64_t v51 = v128;
          uint64_t v48 = v134;
          uint64_t v16 = v121;
          uint64_t v49 = (uint64_t)v130;
          uint64_t v50 = (char *)v129;
        }
      }
      else
      {
        (*(void (**)(uint64_t *, char *, uint64_t))v137)(v56, v50, v31);
      }
      (*(void (**)(char *, uint64_t))v140)(v50, v31);
      swift_bridgeObjectRelease();
    }
    else
    {
      *(void *)&long long v145 = 0;
      *((void *)&v145 + 1) = 0xE000000000000000;
      sub_1C152036C();
      uint64_t v148 = MEMORY[0x1E4FBB1A0];
      long long v147 = v145;
    }
    ++v47;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v149);
    sub_1BFF993A8(&v147, &v149);
  }
  while (v144 != v47);
  swift_bridgeObjectRelease();
  a3 = v115;
  a2 = v114;
LABEL_22:
  sub_1BFF993A8(&v149, &v151);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v150);
  swift_bridgeObjectRelease();
  sub_1BFF6A008((uint64_t)&v151, (uint64_t)&v149);
  uint64_t v65 = (uint64_t)v118;
  uint64_t v66 = v120;
  char v67 = swift_dynamicCast();
  uint64_t v68 = v119;
  uint64_t v69 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v119 + 56);
  if (v67)
  {
    v69(v65, 0, 1, v66);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v151);
    uint64_t v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 32);
    uint64_t v71 = &v146;
LABEL_24:
    uint64_t v72 = *((void *)v71 - 32);
    v70(v72, v65, v66);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v70)(v117, v72, v66);
  }
  else
  {
    v69(v65, 1, 1, v66);
    sub_1C0E56F54(v65, (uint64_t)&qword_1EB871180, MEMORY[0x1E4F27928], (uint64_t (*)(void))sub_1C0E572B0);
    type metadata accessor for FormatLayoutError();
    sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
    swift_allocError();
    uint64_t v75 = v74;
    __swift_project_boxed_opaque_existential_1(&v151, v152);
    swift_getDynamicType();
    swift_bridgeObjectRetain();
    uint64_t v76 = sub_1C1520FAC();
    *uint64_t v75 = a2;
    v75[1] = a3;
    v75[2] = 1702125892;
    v75[3] = 0xE400000000000000;
    v75[4] = v76;
    v75[5] = v77;
    swift_storeEnumTagMultiPayload();
LABEL_26:
    swift_willThrow();
    uint64_t v78 = (uint64_t *)&v151;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v78);
  }
}

uint64_t sub_1C0E4E0D0@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, void *a6@<X8>)
{
  return sub_1C0E5384C(a1, a2, a3, a4, a5, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_1C0E4E0D0, 0x6F4674616D726F46, 0xEA0000000000746ELL, a6, (uint64_t)&type metadata for FormatFont, (void (**)(char *, uint64_t, uint64_t))sub_1C002FECC, (void (*)(char *, uint64_t, uint64_t))sub_1C002FECC);
}

uint64_t sub_1C0E4E14C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, void *a6@<X8>)
{
  return sub_1C0E5384C(a1, a2, a3, a4, a5, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, void *))sub_1C0E4E14C, 0x6F4374616D726F46, 0xEB00000000726F6CLL, a6, (uint64_t)&type metadata for FormatColor, (void (**)(char *, uint64_t, uint64_t))sub_1C002FECC, (void (*)(char *, uint64_t, uint64_t))sub_1C002FECC);
}

uint64_t sub_1C0E4E1CC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7 = v6;
  uint64_t v128 = a5;
  uint64_t v120 = a3;
  uint64_t v119 = a2;
  uint64_t v118 = a6;
  sub_1C0E572B0(0, (unint64_t *)&unk_1EB8710E0, MEMORY[0x1E4F26ED8]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v115 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v115 - v14;
  uint64_t v133 = sub_1C15156FC();
  uint64_t v140 = *(char **)(v133 - 8);
  MEMORY[0x1F4188790](v133);
  uint64_t v127 = (unsigned int (**)(char *, uint64_t, uint64_t))((char *)&v115 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v115 - v18;
  sub_1C0E572B0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v126 = (uint64_t *)((char *)&v115 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v22);
  char v141 = (char *)&v115 - v23;
  MEMORY[0x1F4188790](v24);
  uint64_t v143 = (char *)&v115 - v25;
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v115 - v27;
  uint64_t v138 = sub_1C1515FDC();
  uint64_t v29 = *(void *)(v138 - 8);
  MEMORY[0x1F4188790](v138);
  uint64_t v125 = (char *)&v115 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v31);
  uint64_t v130 = (char *)&v115 - v32;
  MEMORY[0x1F4188790](v33);
  uint64_t v142 = (uint64_t *)((char *)&v115 - v34);
  MEMORY[0x1F4188790](v35);
  long long v151 = (char *)&v115 - v36;
  sub_1C0E572B0(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v37 - 8);
  uint64_t v121 = (char *)&v115 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v39);
  uint64_t v139 = (char *)&v115 - v40;
  uint64_t v41 = sub_1C151631C();
  uint64_t v122 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  MEMORY[0x1F4188790](v42);
  uint64_t v129 = a4;
  switch(a1 >> 60)
  {
    case 1uLL:
      uint64_t v121 = (char *)&v115 - v43;
      uint64_t v134 = (uint64_t)v28;
      uint64_t v81 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v82 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
      v148[3] = MEMORY[0x1E4FBB1A0];
      v148[0] = v81;
      v148[1] = v82;
      sub_1BFF6A008((uint64_t)v148, (uint64_t)&v147);
      uint64_t v83 = MEMORY[0x1E4FBC840];
      char v141 = *(char **)(a4 + 16);
      if (!v141)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_54;
      }
      uint64_t v125 = v19;
      uint64_t v132 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56);
      uint64_t v137 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
      uint64_t v136 = (char **)(v29 + 32);
      uint64_t v127 = (unsigned int (**)(char *, uint64_t, uint64_t))(v140 + 48);
      uint64_t v124 = (void (**)(char *, char *, uint64_t))(v140 + 32);
      uint64_t v123 = (void (**)(char *, uint64_t))(v140 + 8);
      uint64_t v131 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 16);
      uint64_t v135 = (void (**)(char *, uint64_t))(v29 + 8);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v84 = 0;
      uint64_t v130 = (char *)(v83 + 8);
      uint64_t v117 = v41;
      do
      {
        uint64_t v85 = *(void *)(a4 + 8 * (void)v84 + 32);
        if (!v85)
        {
          *(void *)&v144[0] = 0;
          *((void *)&v144[0] + 1) = 0xE000000000000000;
          sub_1C152036C();
          uint64_t v146 = MEMORY[0x1E4FBB1A0];
          long long v145 = v144[0];
          goto LABEL_33;
        }
        sub_1BFF6A008((uint64_t)&v147, (uint64_t)v144);
        swift_bridgeObjectRetain();
        uint64_t v86 = v134;
        uint64_t v87 = v138;
        int v88 = swift_dynamicCast();
        int v89 = *v132;
        if (!v88)
        {
          v89(v86, 1, 1, v87);
LABEL_59:
          sub_1C0E56F54(v86, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1C0E572B0);
          type metadata accessor for FormatLayoutError();
          sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
          swift_allocError();
          *uint64_t v114 = 5001813;
          v114[1] = 0xE300000000000000;
          v114[2] = 7958081;
          v114[3] = 0xE300000000000000;
          swift_storeEnumTagMultiPayload();
          swift_willThrow();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v147);
          swift_bridgeObjectRelease();
          uint64_t v79 = v148;
          return __swift_destroy_boxed_opaque_existential_1((uint64_t)v79);
        }
        v89(v86, 0, 1, v87);
        int v90 = *v137;
        if ((*v137)(v86, 1, v87) == 1) {
          goto LABEL_59;
        }
        BOOL v91 = v7;
        long long v92 = v151;
        uint64_t v140 = *v136;
        ((void (*)(char *, uint64_t, uint64_t))v140)(v151, v86, v87);
        uint64_t v146 = v87;
        boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v145);
        long long v94 = boxed_opaque_existential_0;
        if (*(void *)(v85 + 16))
        {
          sub_1C151564C();
          uint64_t v95 = v133;
          if ((*v127)(v15, 1, v133) != 1)
          {
            uint64_t v126 = v94;
            uint64_t v96 = v125;
            (*v124)(v125, v15, v95);
            uint64_t v97 = sub_1C15155FC();
            if (v97) {
              uint64_t v98 = v97;
            }
            else {
              uint64_t v98 = MEMORY[0x1E4FBC860];
            }
            MEMORY[0x1F4188790](v97);
            *(&v115 - 2) = v128;
            unint64_t v99 = sub_1C002FB68((void (*)(void))sub_1C002FECC, (uint64_t)(&v115 - 4), v85);
            *(void *)&v144[0] = v98;
            sub_1C002FB3C(v99);
            sub_1C151560C();
            uint64_t v100 = v143;
            sub_1C151565C();
            uint64_t v101 = (uint64_t)v100;
            (*v123)(v96, v133);
            uint64_t v102 = v142;
            uint64_t v87 = v138;
            (*v131)((uint64_t)v142, (uint64_t)v151, v138);
            if (v90(v101, 1, v87) == 1)
            {
              ((void (*)(uint64_t *, char *, uint64_t))v140)(v126, (char *)v102, v87);
              sub_1C0E56F54(v101, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1C0E572B0);
            }
            else
            {
              (*v135)((char *)v102, v87);
              ((void (*)(uint64_t *, uint64_t, uint64_t))v140)(v126, v101, v87);
            }
            uint64_t v7 = v91;
            a4 = v129;
            uint64_t v41 = v117;
            long long v92 = v151;
            goto LABEL_49;
          }
          sub_1C0E56F54((uint64_t)v15, (uint64_t)&unk_1EB8710E0, MEMORY[0x1E4F26ED8], (uint64_t (*)(void))sub_1C0E572B0);
          uint64_t v87 = v138;
          (*v131)((uint64_t)v94, (uint64_t)v92, v138);
        }
        else
        {
          (*v131)((uint64_t)boxed_opaque_existential_0, (uint64_t)v92, v87);
        }
        uint64_t v7 = v91;
        a4 = v129;
        uint64_t v41 = v117;
LABEL_49:
        (*v135)(v92, v87);
        swift_bridgeObjectRelease();
LABEL_33:
        ++v84;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v147);
        sub_1BFF993A8(&v145, &v147);
      }
      while (v141 != v84);
      swift_bridgeObjectRelease();
LABEL_54:
      uint64_t v106 = v122;
      uint64_t v107 = (uint64_t)v139;
      sub_1BFF993A8(&v147, &v149);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v148);
      sub_1BFF6A008((uint64_t)&v149, (uint64_t)&v147);
      char v108 = swift_dynamicCast();
      uint64_t v109 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v106 + 56);
      if ((v108 & 1) == 0)
      {
        v109(v107, 1, 1, v41);
        sub_1C0E56F54(v107, (uint64_t)&qword_1EB871180, MEMORY[0x1E4F27928], (uint64_t (*)(void))sub_1C0E572B0);
        type metadata accessor for FormatLayoutError();
        sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
        swift_allocError();
        uint64_t v112 = v120;
        *uint64_t v113 = v119;
        v113[1] = v112;
        v113[2] = 1702125892;
        v113[3] = 0xE400000000000000;
        v113[4] = 0x676E69727453;
        v113[5] = 0xE600000000000000;
        swift_storeEnumTagMultiPayload();
        swift_bridgeObjectRetain();
        goto LABEL_26;
      }
      v109(v107, 0, 1, v41);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v149);
      char v110 = *(void (**)(char *, uint64_t, uint64_t))(v106 + 32);
      uint64_t v111 = v121;
      v110(v121, v107, v41);
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v110)(v118, v111, v41);
    case 8uLL:
      uint64_t v103 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain_n();
      swift_retain();
      sub_1C0E4E1CC(v103, v119, v120, a4, v128);
      swift_release_n();
      return swift_release();
    case 0xBuLL:
      type metadata accessor for FormatLayoutError();
      sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
      swift_allocError();
      uint64_t v104 = v120;
      *uint64_t v105 = v119;
      v105[1] = v104;
      v105[2] = 1702125892;
      v105[3] = 0xE400000000000000;
      v105[4] = 0x7463617274736261;
      v105[5] = 0xE800000000000000;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      return swift_willThrow();
    default:
      uint64_t v116 = v44;
      *(void *)&long long v147 = a1;
      swift_bridgeObjectRetain();
      sub_1BFF6A064(v148);
      sub_1BFF6A008((uint64_t)v148, (uint64_t)&v147);
      long long v151 = *(char **)(a4 + 16);
      if (!v151) {
        goto LABEL_23;
      }
      uint64_t v117 = v41;
      uint64_t v135 = (void (**)(char *, uint64_t))v6;
      uint64_t v139 = (char *)(v29 + 56);
      uint64_t v143 = (char *)(v29 + 48);
      uint64_t v142 = (void *)(v29 + 32);
      uint64_t v131 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v140 + 48);
      uint64_t v124 = (void (**)(char *, char *, uint64_t))(v140 + 32);
      uint64_t v123 = (void (**)(char *, uint64_t))(v140 + 8);
      uint64_t v137 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 16);
      uint64_t v140 = (char *)(v29 + 8);
      swift_bridgeObjectRetain();
      uint64_t v45 = 0;
      uint64_t v134 = MEMORY[0x1E4FBC840] + 8;
      uint64_t v46 = v133;
      uint64_t v47 = v138;
      uint64_t v48 = (uint64_t)v141;
      uint64_t v49 = v130;
      uint64_t v132 = v12;
      break;
  }
  while (1)
  {
    uint64_t v50 = *(void *)(a4 + 8 * (void)v45 + 32);
    if (v50) {
      break;
    }
    *(void *)&v144[0] = 0;
    *((void *)&v144[0] + 1) = 0xE000000000000000;
    sub_1C152036C();
    uint64_t v146 = MEMORY[0x1E4FBB1A0];
    long long v145 = v144[0];
LABEL_5:
    ++v45;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v147);
    sub_1BFF993A8(&v145, &v147);
    if (v151 == v45)
    {
      swift_bridgeObjectRelease();
      uint64_t v41 = v117;
LABEL_23:
      sub_1BFF993A8(&v147, &v149);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v148);
      swift_bridgeObjectRelease();
      sub_1BFF6A008((uint64_t)&v149, (uint64_t)&v147);
      uint64_t v67 = (uint64_t)v121;
      char v68 = swift_dynamicCast();
      uint64_t v69 = v122;
      uint64_t v70 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v122 + 56);
      if (v68)
      {
        v70(v67, 0, 1, v41);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v149);
        uint64_t v71 = *(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 32);
        uint64_t v72 = v116;
        v71(v116, v67, v41);
        return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v71)(v118, v72, v41);
      }
      else
      {
        v70(v67, 1, 1, v41);
        sub_1C0E56F54(v67, (uint64_t)&qword_1EB871180, MEMORY[0x1E4F27928], (uint64_t (*)(void))sub_1C0E572B0);
        type metadata accessor for FormatLayoutError();
        sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
        swift_allocError();
        uint64_t v75 = v74;
        __swift_project_boxed_opaque_existential_1(&v149, v150);
        swift_getDynamicType();
        uint64_t v76 = v120;
        swift_bridgeObjectRetain();
        uint64_t v77 = sub_1C1520FAC();
        *uint64_t v75 = v119;
        v75[1] = v76;
        v75[2] = 1702125892;
        v75[3] = 0xE400000000000000;
        v75[4] = v77;
        v75[5] = v78;
        swift_storeEnumTagMultiPayload();
LABEL_26:
        swift_willThrow();
        uint64_t v79 = (uint64_t *)&v149;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v79);
      }
    }
  }
  uint64_t v51 = a4;
  sub_1BFF6A008((uint64_t)&v147, (uint64_t)v144);
  swift_bridgeObjectRetain();
  int v52 = swift_dynamicCast();
  int v53 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v139;
  if (!v52)
  {
    v53(v48, 1, 1, v47);
LABEL_29:
    sub_1C0E56F54(v48, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1C0E572B0);
    type metadata accessor for FormatLayoutError();
    sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
    swift_allocError();
    *uint64_t v80 = 5001813;
    v80[1] = 0xE300000000000000;
    v80[2] = 7958081;
    v80[3] = 0xE300000000000000;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v147);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v148);
    return swift_bridgeObjectRelease();
  }
  v53(v48, 0, 1, v47);
  unint64_t v54 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))v143;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v143)(v48, 1, v47) == 1) {
    goto LABEL_29;
  }
  long long v55 = (char **)*v142;
  ((void (*)(char *, uint64_t, uint64_t))*v142)(v49, v48, v47);
  uint64_t v146 = v47;
  long long v56 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v145);
  uint64_t v57 = v56;
  if (*(void *)(v50 + 16))
  {
    uint64_t v136 = v55;
    uint64_t v58 = (uint64_t)v132;
    sub_1C151564C();
    if ((*v131)(v58, 1, v46) != 1)
    {
      uint64_t v59 = v127;
      (*v124)((char *)v127, (char *)v58, v46);
      uint64_t v60 = sub_1C15155FC();
      if (v60) {
        uint64_t v61 = v60;
      }
      else {
        uint64_t v61 = MEMORY[0x1E4FBC860];
      }
      MEMORY[0x1F4188790](v60);
      *(&v115 - 2) = v128;
      unint64_t v62 = (void (**)(void *, uint64_t))v135;
      unint64_t v63 = sub_1C002FB68((void (*)(void))sub_1C002FECC, (uint64_t)(&v115 - 4), v50);
      uint64_t v135 = (void (**)(char *, uint64_t))v62;
      *(void *)&v144[0] = v61;
      sub_1C002FB3C(v63);
      sub_1C151560C();
      uint64_t v64 = (uint64_t)v126;
      sub_1C151565C();
      uint64_t v46 = v133;
      (*v123)((char *)v59, v133);
      uint64_t v65 = v125;
      uint64_t v66 = v138;
      (*v137)((uint64_t)v125, (uint64_t)v49, v138);
      if (v54(v64, 1, v66) == 1)
      {
        ((void (*)(uint64_t *, char *, uint64_t))v136)(v57, v65, v66);
        sub_1C0E56F54(v64, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1C0E572B0);
      }
      else
      {
        (*(void (**)(char *, uint64_t))v140)(v65, v66);
        ((void (*)(uint64_t *, uint64_t, uint64_t))v136)(v57, v64, v66);
      }
      a4 = v129;
      uint64_t v47 = v66;
      uint64_t v48 = (uint64_t)v141;
      uint64_t v49 = v130;
      goto LABEL_21;
    }
    sub_1C0E56F54(v58, (uint64_t)&unk_1EB8710E0, MEMORY[0x1E4F26ED8], (uint64_t (*)(void))sub_1C0E572B0);
    uint64_t v47 = v138;
    (*v137)((uint64_t)v57, (uint64_t)v49, v138);
  }
  else
  {
    (*v137)((uint64_t)v56, (uint64_t)v49, v47);
  }
  a4 = v51;
  uint64_t v48 = (uint64_t)v141;
LABEL_21:
  (*(void (**)(char *, uint64_t))v140)(v49, v47);
  swift_bridgeObjectRelease();
  goto LABEL_5;
}

uint64_t sub_1C0E4F8B8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t a6@<X8>)
{
  return sub_1C0E52234(a1, a2, a3, a4, a5, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, char *))sub_1C0E4F8B8, (void (**)(char *, uint64_t, uint64_t))sub_1C002FECC, (void (**)(uint64_t *, void (**)(char *), uint64_t))sub_1C002FECC, a6);
}

uint64_t sub_1C0E4F90C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  return sub_1C0E50E00(a1, a2, a3, a4, a5, (void (**)(char *, uint64_t))sub_1C0E4F90C, 0xD000000000000016, 0x80000001C1629490, a6, (uint64_t)&type metadata for FormatVideoNodeContent, (void (*)(void))sub_1C002FECC, (void (*)(void))sub_1C002FECC);
}

uint64_t sub_1C0E4F988(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v106 = a5;
  uint64_t v93 = a3;
  uint64_t v92 = a2;
  sub_1C0E572B0(0, (unint64_t *)&unk_1EB8710E0, MEMORY[0x1E4F26ED8]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v92 - v13;
  uint64_t v108 = sub_1C15156FC();
  uint64_t v15 = *(void *)(v108 - 8);
  MEMORY[0x1F4188790](v108);
  unint64_t v99 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((char *)&v92 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (void (**)(unsigned int (**)(uint64_t, uint64_t, uint64_t), char *, uint64_t))((char *)&v92 - v18);
  sub_1C0E572B0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v98 = (char *)&v92 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v102 = (char *)&v92 - v23;
  MEMORY[0x1F4188790](v24);
  uint64_t v114 = (char *)&v92 - v25;
  MEMORY[0x1F4188790](v26);
  uint64_t v115 = (char *)&v92 - v27;
  uint64_t v28 = sub_1C1515FDC();
  uint64_t v29 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v97 = (char *)&v92 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v31);
  uint64_t v101 = (char *)&v92 - v32;
  MEMORY[0x1F4188790](v33);
  MEMORY[0x1F4188790](v34);
  uint64_t v116 = (char *)&v92 - v36;
  uint64_t v100 = a4;
  switch(a1 >> 60)
  {
    case 1uLL:
      uint64_t v98 = v35;
      uint64_t v102 = v14;
      uint64_t v63 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v64 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
      v121[3] = MEMORY[0x1E4FBB1A0];
      v121[0] = v63;
      v121[1] = v64;
      sub_1BFF6A008((uint64_t)v121, (uint64_t)&v120);
      uint64_t v65 = MEMORY[0x1E4FBC840];
      uint64_t v113 = *(void (**)(char *, uint64_t, uint64_t))(a4 + 16);
      if (v113)
      {
        uint64_t v105 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56);
        uint64_t v112 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
        uint64_t v111 = (uint64_t *)(v29 + 32);
        unint64_t v99 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
        uint64_t v97 = (char *)(v15 + 32);
        uint64_t v95 = (void (**)(void (**)(unsigned int (**)(uint64_t, uint64_t, uint64_t), char *, uint64_t), uint64_t))(v15 + 8);
        uint64_t v104 = (unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 16);
        char v110 = (void (**)(char *, uint64_t))(v29 + 8);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t v66 = 0;
        uint64_t v101 = (char *)(v65 + 8);
        uint64_t v67 = (uint64_t)v115;
        uint64_t v96 = v19;
        do
        {
          uint64_t v55 = *(void *)(a4 + 8 * (void)v66 + 32);
          if (v55)
          {
            sub_1BFF6A008((uint64_t)&v120, (uint64_t)v117);
            swift_bridgeObjectRetain();
            int v68 = swift_dynamicCast();
            uint64_t v69 = *v105;
            if (!v68)
            {
              v69(v67, 1, 1, v28);
LABEL_59:
              sub_1C0E56F54(v67, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1C0E572B0);
              type metadata accessor for FormatLayoutError();
              sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
              swift_allocError();
              void *v91 = 5001813;
              v91[1] = 0xE300000000000000;
              v91[2] = 7958081;
              v91[3] = 0xE300000000000000;
              swift_storeEnumTagMultiPayload();
              swift_willThrow();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v120);
              swift_bridgeObjectRelease();
              uint64_t v61 = v121;
              goto LABEL_26;
            }
            v69(v67, 0, 1, v28);
            uint64_t v70 = *v112;
            if ((*v112)(v67, 1, v28) == 1) {
              goto LABEL_59;
            }
            uint64_t v71 = (void (*)(uint64_t *, char *, uint64_t))*v111;
            uint64_t v72 = v116;
            ((void (*)(char *, uint64_t, uint64_t))*v111)(v116, v67, v28);
            uint64_t v119 = v28;
            boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v118);
            *(void *)&v117[0] = v106;
            if (*(void *)(v55 + 16))
            {
              uint64_t v109 = boxed_opaque_existential_0;
              uint64_t v74 = (uint64_t)v102;
              sub_1C151564C();
              uint64_t v75 = v108;
              if ((*v99)(v74, 1, v108) == 1)
              {
                sub_1C0E56F54(v74, (uint64_t)&unk_1EB8710E0, MEMORY[0x1E4F26ED8], (uint64_t (*)(void))sub_1C0E572B0);
                (*v104)((char *)v109, (uint64_t)v72, v28);
              }
              else
              {
                uint64_t v77 = v96;
                (*(void (**)(void, uint64_t, uint64_t))v97)(v96, v74, v75);
                uint64_t v78 = sub_1C15155FC();
                uint64_t v79 = v6;
                if (v78) {
                  uint64_t v80 = v78;
                }
                else {
                  uint64_t v80 = MEMORY[0x1E4FBC860];
                }
                MEMORY[0x1F4188790](v78);
                *(&v92 - 2) = (uint64_t)v117;
                unint64_t v81 = sub_1C002FB68((void (*)(void))sub_1C002FECC, (uint64_t)(&v92 - 4), v55);
                uint64_t v107 = v79;
                uint64_t v124 = v80;
                sub_1C002FB3C(v81);
                sub_1C151560C();
                uint64_t v82 = (uint64_t)v114;
                sub_1C151565C();
                uint64_t v83 = v77;
                uint64_t v72 = v116;
                (*v95)(v83, v75);
                uint64_t v84 = v98;
                (*v104)(v98, (uint64_t)v72, v28);
                if (v70(v82, 1, v28) == 1)
                {
                  v71(v109, v84, v28);
                  sub_1C0E56F54(v82, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1C0E572B0);
                }
                else
                {
                  (*v110)(v84, v28);
                  v71(v109, (char *)v82, v28);
                }
                uint64_t v6 = v107;
              }
              a4 = v100;
              uint64_t v76 = v72;
              uint64_t v67 = (uint64_t)v115;
            }
            else
            {
              (*v104)((char *)boxed_opaque_existential_0, (uint64_t)v72, v28);
              a4 = v100;
              uint64_t v76 = v72;
            }
            (*v110)(v76, v28);
            swift_bridgeObjectRelease();
          }
          else
          {
            *(void *)&v117[0] = 0;
            *((void *)&v117[0] + 1) = 0xE000000000000000;
            sub_1C152036C();
            uint64_t v119 = MEMORY[0x1E4FBB1A0];
            long long v118 = v117[0];
          }
          uint64_t v66 = (void (*)(char *, uint64_t, uint64_t))((char *)v66 + 1);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v120);
          sub_1BFF993A8(&v118, &v120);
        }
        while (v113 != v66);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1BFF993A8(&v120, &v122);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v121);
      sub_1BFF6A008((uint64_t)&v122, (uint64_t)&v120);
      if (swift_dynamicCast()) {
        goto LABEL_23;
      }
      LOBYTE(v55) = type metadata accessor for FormatLayoutError();
      sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
      swift_allocError();
      uint64_t v89 = v93;
      *int v90 = v92;
      v90[1] = v89;
      v90[2] = 1819242306;
      v90[3] = 0xE400000000000000;
      v90[4] = 0x676E69727453;
      v90[5] = 0xE600000000000000;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      goto LABEL_25;
    case 8uLL:
      uint64_t v55 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain_n();
      swift_retain();
      char v85 = sub_1C0E4F988(v55, v92, v93, a4, v106);
      if (!v5) {
        LOBYTE(v55) = v85;
      }
      swift_release_n();
      swift_release();
      return v55 & 1;
    case 0xBuLL:
      LOBYTE(v55) = type metadata accessor for FormatLayoutError();
      sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
      swift_allocError();
      uint64_t v86 = v93;
      *uint64_t v87 = v92;
      v87[1] = v86;
      v87[2] = 1819242306;
      v87[3] = 0xE400000000000000;
      v87[4] = 0x7463617274736261;
      v87[5] = 0xE800000000000000;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      swift_willThrow();
      return v55 & 1;
    default:
      *(void *)&long long v120 = a1;
      swift_bridgeObjectRetain();
      sub_1BFF6A064(v121);
      sub_1BFF6A008((uint64_t)v121, (uint64_t)&v120);
      uint64_t v116 = *(char **)(a4 + 16);
      if (!v116) {
        goto LABEL_22;
      }
      uint64_t v107 = v5;
      uint64_t v37 = (uint64_t *)(v29 + 56);
      uint64_t v115 = (char *)(v29 + 48);
      uint64_t v114 = (char *)(v29 + 32);
      uint64_t v104 = (unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
      uint64_t v96 = (void (**)(unsigned int (**)(uint64_t, uint64_t, uint64_t), char *, uint64_t))(v15 + 32);
      uint64_t v95 = (void (**)(void (**)(unsigned int (**)(uint64_t, uint64_t, uint64_t), char *, uint64_t), uint64_t))(v15 + 8);
      char v110 = (void (**)(char *, uint64_t))(v29 + 16);
      uint64_t v112 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 8);
      swift_bridgeObjectRetain();
      uint64_t v38 = 0;
      uint64_t v105 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(MEMORY[0x1E4FBC840] + 8);
      uint64_t v39 = v106;
      uint64_t v40 = (uint64_t)v102;
      uint64_t v41 = v101;
      long long v94 = v11;
      uint64_t v103 = v28;
      uint64_t v109 = v37;
      break;
  }
  do
  {
    uint64_t v42 = *(void *)(a4 + 8 * (void)v38 + 32);
    if (v42)
    {
      sub_1BFF6A008((uint64_t)&v120, (uint64_t)v117);
      swift_bridgeObjectRetain();
      int v43 = swift_dynamicCast();
      uint64_t v44 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*v37;
      if (!v43)
      {
        v44(v40, 1, 1, v28);
LABEL_28:
        sub_1C0E56F54(v40, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1C0E572B0);
        LOBYTE(v55) = type metadata accessor for FormatLayoutError();
        sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
        swift_allocError();
        *unint64_t v62 = 5001813;
        v62[1] = 0xE300000000000000;
        v62[2] = 7958081;
        _DWORD v62[3] = 0xE300000000000000;
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v120);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v121);
        swift_bridgeObjectRelease();
        return v55 & 1;
      }
      v44(v40, 0, 1, v28);
      uint64_t v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))v115;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v115)(v40, 1, v28) == 1) {
        goto LABEL_28;
      }
      uint64_t v113 = *(void (**)(char *, uint64_t, uint64_t))v114;
      v113(v41, v40, v28);
      uint64_t v119 = v28;
      uint64_t v46 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v118);
      *(void *)&v117[0] = v39;
      if (*(void *)(v42 + 16))
      {
        uint64_t v111 = v46;
        sub_1C151564C();
        uint64_t v47 = v108;
        if ((*v104)(v11, 1, v108) == 1)
        {
          sub_1C0E56F54((uint64_t)v11, (uint64_t)&unk_1EB8710E0, MEMORY[0x1E4F26ED8], (uint64_t (*)(void))sub_1C0E572B0);
          uint64_t v28 = v103;
          ((void (*)(uint64_t *, char *, uint64_t))*v110)(v111, v41, v103);
        }
        else
        {
          uint64_t v48 = v99;
          (*v96)(v99, v11, v47);
          uint64_t v49 = sub_1C15155FC();
          if (v49) {
            uint64_t v50 = v49;
          }
          else {
            uint64_t v50 = MEMORY[0x1E4FBC860];
          }
          MEMORY[0x1F4188790](v49);
          *(&v92 - 2) = (uint64_t)v117;
          uint64_t v51 = v107;
          unint64_t v52 = sub_1C002FB68((void (*)(void))sub_1C002FECC, (uint64_t)(&v92 - 4), v42);
          uint64_t v107 = v51;
          uint64_t v124 = v50;
          sub_1C002FB3C(v52);
          sub_1C151560C();
          uint64_t v53 = (uint64_t)v98;
          sub_1C151565C();
          (*v95)((void (**)(unsigned int (**)(uint64_t, uint64_t, uint64_t), char *, uint64_t))v48, v47);
          unint64_t v54 = v97;
          uint64_t v28 = v103;
          ((void (*)(char *, char *, uint64_t))*v110)(v97, v41, v103);
          if (v45(v53, 1, v28) == 1)
          {
            v113((char *)v111, (uint64_t)v54, v28);
            sub_1C0E56F54(v53, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1C0E572B0);
          }
          else
          {
            ((void (*)(char *, uint64_t))*v112)(v54, v28);
            v113((char *)v111, v53, v28);
          }
          a4 = v100;
          uint64_t v39 = v106;
          uint64_t v11 = v94;
          uint64_t v40 = (uint64_t)v102;
          uint64_t v41 = v101;
        }
      }
      else
      {
        ((void (*)(uint64_t *, char *, uint64_t))*v110)(v46, v41, v28);
      }
      uint64_t v37 = v109;
      ((void (*)(char *, uint64_t))*v112)(v41, v28);
      swift_bridgeObjectRelease();
    }
    else
    {
      *(void *)&v117[0] = 0;
      *((void *)&v117[0] + 1) = 0xE000000000000000;
      sub_1C152036C();
      uint64_t v119 = MEMORY[0x1E4FBB1A0];
      long long v118 = v117[0];
    }
    ++v38;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v120);
    sub_1BFF993A8(&v118, &v120);
  }
  while (v116 != v38);
  swift_bridgeObjectRelease();
LABEL_22:
  sub_1BFF993A8(&v120, &v122);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v121);
  swift_bridgeObjectRelease();
  sub_1BFF6A008((uint64_t)&v122, (uint64_t)&v120);
  if (swift_dynamicCast())
  {
LABEL_23:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v122);
    LOBYTE(v55) = v118 & 1;
  }
  else
  {
    LOBYTE(v55) = type metadata accessor for FormatLayoutError();
    sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
    swift_allocError();
    uint64_t v57 = v56;
    __swift_project_boxed_opaque_existential_1(&v122, v123);
    swift_getDynamicType();
    uint64_t v58 = v93;
    swift_bridgeObjectRetain();
    uint64_t v59 = sub_1C1520FAC();
    *uint64_t v57 = v92;
    v57[1] = v58;
    v57[2] = 1819242306;
    v57[3] = 0xE400000000000000;
    v57[4] = v59;
    v57[5] = v60;
    swift_storeEnumTagMultiPayload();
LABEL_25:
    swift_willThrow();
    uint64_t v61 = (uint64_t *)&v122;
LABEL_26:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
  }
  return v55 & 1;
}

uint64_t sub_1C0E50D84@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  return sub_1C0E50E00(a1, a2, a3, a4, a5, (void (**)(char *, uint64_t))sub_1C0E50D84, 0xD000000000000017, 0x80000001C1629470, a6, (uint64_t)&type metadata for FormatAsyncImageContent, (void (*)(void))sub_1C002FECC, (void (*)(void))sub_1C002FECC);
}

uint64_t sub_1C0E50E00@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void (**a6)(char *, uint64_t)@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, void (*a11)(void), void (*a12)(void))
{
  uint64_t v105 = a8;
  uint64_t v104 = a7;
  uint64_t v126 = a6;
  uint64_t v13 = v12;
  uint64_t v128 = a5;
  uint64_t v107 = a3;
  uint64_t v106 = a2;
  uint64_t v103 = a9;
  uint64_t v115 = a12;
  uint64_t v108 = a10;
  sub_1C0E572B0(0, (unint64_t *)&unk_1EB8710E0, MEMORY[0x1E4F26ED8]);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v103 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (void (**)(unsigned int (**)(uint64_t, uint64_t, uint64_t), char *, uint64_t))((char *)&v103 - v20);
  uint64_t v123 = sub_1C15156FC();
  uint64_t v22 = *(void *)(v123 - 8);
  MEMORY[0x1F4188790](v123);
  uint64_t v114 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((char *)&v103 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v24);
  uint64_t v129 = (char **)((char *)&v103 - v25);
  sub_1C0E572B0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v113 = (void (*)(void))((char *)&v103 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v28);
  long long v118 = (char *)&v103 - v29;
  MEMORY[0x1F4188790](v30);
  uint64_t v127 = (char *)&v103 - v31;
  MEMORY[0x1F4188790](v32);
  uint64_t v130 = (char *)&v103 - v33;
  uint64_t v34 = sub_1C1515FDC();
  uint64_t v35 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v112 = (char *)&v103 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v37);
  uint64_t v117 = (void (**)(uint64_t *, char *, uint64_t))((char *)&v103 - v38);
  MEMORY[0x1F4188790](v39);
  MEMORY[0x1F4188790](v40);
  uint64_t v131 = (char *)&v103 - v42;
  uint64_t v116 = a4;
  switch(a1 >> 60)
  {
    case 1uLL:
      uint64_t v112 = v41;
      uint64_t v113 = a11;
      uint64_t v71 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v72 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
      v136[3] = MEMORY[0x1E4FBB1A0];
      v136[0] = v71;
      v136[1] = v72;
      sub_1BFF6A008((uint64_t)v136, (uint64_t)&v135);
      uint64_t v73 = MEMORY[0x1E4FBC840];
      uint64_t v126 = *(void (***)(char *, uint64_t))(a4 + 16);
      if (v126)
      {
        long long v118 = (char *)(v35 + 56);
        uint64_t v125 = (uint64_t *)(v35 + 48);
        uint64_t v124 = (void (**)(char *, uint64_t, uint64_t))(v35 + 32);
        uint64_t v114 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
        char v110 = (void (**)(char **, uint64_t, uint64_t))(v22 + 32);
        uint64_t v109 = (char *)(v22 + 8);
        uint64_t v117 = (void (**)(uint64_t *, char *, uint64_t))(v35 + 16);
        uint64_t v121 = (void (**)(char *, uint64_t))(v35 + 8);
        uint64_t v74 = a4;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t v75 = 0;
        uint64_t v115 = (void (*)(void))(v73 + 8);
        uint64_t v76 = (uint64_t)v130;
        uint64_t v111 = v21;
        do
        {
          uint64_t v77 = *(void *)(v74 + 8 * (void)v75 + 32);
          if (v77)
          {
            sub_1BFF6A008((uint64_t)&v135, (uint64_t)&v132);
            swift_bridgeObjectRetain();
            int v78 = swift_dynamicCast();
            uint64_t v79 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v118;
            if (!v78)
            {
              v79(v76, 1, 1, v34);
LABEL_57:
              sub_1C0E56F54(v76, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1C0E572B0);
              type metadata accessor for FormatLayoutError();
              sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
              swift_allocError();
              *uint64_t v102 = 5001813;
              v102[1] = 0xE300000000000000;
              v102[2] = 7958081;
              v102[3] = 0xE300000000000000;
              swift_storeEnumTagMultiPayload();
              swift_willThrow();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v135);
              swift_bridgeObjectRelease();
              uint64_t v69 = v136;
              return __swift_destroy_boxed_opaque_existential_1((uint64_t)v69);
            }
            v79(v76, 0, 1, v34);
            uint64_t v80 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))*v125;
            if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))*v125)(v76, 1, v34) == 1) {
              goto LABEL_57;
            }
            unint64_t v81 = *v124;
            uint64_t v82 = v131;
            (*v124)(v131, v76, v34);
            uint64_t v134 = v34;
            boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v133);
            *(void *)&long long v132 = v128;
            if (*(void *)(v77 + 16))
            {
              long long v120 = boxed_opaque_existential_0;
              uint64_t v84 = (uint64_t)v111;
              sub_1C151564C();
              uint64_t v85 = v123;
              if ((*v114)(v84, 1, v123) == 1)
              {
                sub_1C0E56F54(v84, (uint64_t)&unk_1EB8710E0, MEMORY[0x1E4F26ED8], (uint64_t (*)(void))sub_1C0E572B0);
                (*v117)(v120, v82, v34);
              }
              else
              {
                uint64_t v87 = v129;
                (*v110)(v129, v84, v85);
                uint64_t v88 = sub_1C15155FC();
                uint64_t v89 = v13;
                if (v88) {
                  uint64_t v90 = v88;
                }
                else {
                  uint64_t v90 = MEMORY[0x1E4FBC860];
                }
                MEMORY[0x1F4188790](v88);
                *(&v103 - 2) = &v132;
                unint64_t v91 = sub_1C002FB68(v113, (uint64_t)(&v103 - 4), v77);
                uint64_t v122 = v89;
                uint64_t v139 = v90;
                sub_1C002FB3C(v91);
                sub_1C151560C();
                uint64_t v92 = (uint64_t)v127;
                sub_1C151565C();
                uint64_t v93 = v87;
                uint64_t v82 = v131;
                (*(void (**)(char **, uint64_t))v109)(v93, v85);
                long long v94 = v112;
                (*v117)((uint64_t *)v112, v82, v34);
                if (v80(v92, 1, v34) == 1)
                {
                  v81((char *)v120, (uint64_t)v94, v34);
                  sub_1C0E56F54(v92, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1C0E572B0);
                }
                else
                {
                  (*v121)(v94, v34);
                  v81((char *)v120, v92, v34);
                }
                uint64_t v13 = v122;
              }
              uint64_t v74 = v116;
              uint64_t v86 = v82;
              uint64_t v76 = (uint64_t)v130;
            }
            else
            {
              (*v117)(boxed_opaque_existential_0, v82, v34);
              uint64_t v74 = v116;
              uint64_t v86 = v82;
            }
            (*v121)(v86, v34);
            swift_bridgeObjectRelease();
          }
          else
          {
            *(void *)&long long v132 = 0;
            *((void *)&v132 + 1) = 0xE000000000000000;
            sub_1C152036C();
            uint64_t v134 = MEMORY[0x1E4FBB1A0];
            long long v133 = v132;
          }
          uint64_t v75 = (void (**)(char *, uint64_t))((char *)v75 + 1);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v135);
          sub_1BFF993A8(&v133, &v135);
        }
        while (v126 != v75);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1BFF993A8(&v135, &v137);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v136);
      sub_1BFF6A008((uint64_t)&v137, (uint64_t)&v135);
      if (swift_dynamicCast()) {
        goto LABEL_23;
      }
      type metadata accessor for FormatLayoutError();
      sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
      swift_allocError();
      uint64_t v99 = v107;
      *uint64_t v100 = v106;
      v100[1] = v99;
      uint64_t v101 = v105;
      v100[2] = v104;
      v100[3] = v101;
      v100[4] = 0x676E69727453;
      v100[5] = 0xE600000000000000;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      goto LABEL_25;
    case 8uLL:
      uint64_t v95 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain_n();
      swift_retain();
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v126)(v95, v106, v107, a4, v128);
      swift_release_n();
      return swift_release();
    case 0xBuLL:
      type metadata accessor for FormatLayoutError();
      sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
      swift_allocError();
      uint64_t v96 = v107;
      *uint64_t v97 = v106;
      v97[1] = v96;
      uint64_t v98 = v105;
      v97[2] = v104;
      uint64_t v97[3] = v98;
      v97[4] = 0x7463617274736261;
      v97[5] = 0xE800000000000000;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      return swift_willThrow();
    default:
      *(void *)&long long v135 = a1;
      swift_bridgeObjectRetain();
      sub_1BFF6A064(v136);
      sub_1BFF6A008((uint64_t)v136, (uint64_t)&v135);
      uint64_t v43 = a4;
      uint64_t v131 = *(char **)(a4 + 16);
      if (!v131) {
        goto LABEL_22;
      }
      uint64_t v122 = v12;
      uint64_t v44 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 56);
      uint64_t v130 = (char *)(v35 + 48);
      uint64_t v129 = (char **)(v35 + 32);
      long long v120 = (uint64_t *)(v22 + 48);
      uint64_t v111 = (void (**)(unsigned int (**)(uint64_t, uint64_t, uint64_t), char *, uint64_t))(v22 + 32);
      char v110 = (void (**)(char **, uint64_t, uint64_t))(v22 + 8);
      uint64_t v124 = (void (**)(char *, uint64_t, uint64_t))(v35 + 16);
      uint64_t v126 = (void (**)(char *, uint64_t))(v35 + 8);
      swift_bridgeObjectRetain();
      uint64_t v45 = 0;
      uint64_t v121 = (void (**)(char *, uint64_t))(MEMORY[0x1E4FBC840] + 8);
      uint64_t v46 = (uint64_t)v118;
      uint64_t v47 = (char *)v117;
      uint64_t v109 = v18;
      uint64_t v119 = v34;
      break;
  }
  do
  {
    uint64_t v48 = *(void *)(v43 + 8 * (void)v45 + 32);
    if (v48)
    {
      sub_1BFF6A008((uint64_t)&v135, (uint64_t)&v132);
      swift_bridgeObjectRetain();
      int v49 = swift_dynamicCast();
      uint64_t v50 = *v44;
      if (!v49)
      {
        v50(v46, 1, 1, v34);
LABEL_28:
        sub_1C0E56F54(v46, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1C0E572B0);
        type metadata accessor for FormatLayoutError();
        sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
        swift_allocError();
        *uint64_t v70 = 5001813;
        v70[1] = 0xE300000000000000;
        v70[2] = 7958081;
        v70[3] = 0xE300000000000000;
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v135);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v136);
        return swift_bridgeObjectRelease();
      }
      uint64_t v51 = v44;
      v50(v46, 0, 1, v34);
      unint64_t v52 = *(unsigned int (**)(void (*)(void), uint64_t, uint64_t))v130;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v130)(v46, 1, v34) == 1) {
        goto LABEL_28;
      }
      uint64_t v127 = *v129;
      ((void (*)(char *, uint64_t, uint64_t))v127)(v47, v46, v34);
      uint64_t v134 = v34;
      uint64_t v53 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v133);
      *(void *)&long long v132 = v128;
      if (*(void *)(v48 + 16))
      {
        uint64_t v125 = v53;
        sub_1C151564C();
        uint64_t v54 = v123;
        if (((unsigned int (*)(char *, uint64_t, uint64_t))*v120)(v18, 1, v123) == 1)
        {
          sub_1C0E56F54((uint64_t)v18, (uint64_t)&unk_1EB8710E0, MEMORY[0x1E4F26ED8], (uint64_t (*)(void))sub_1C0E572B0);
          uint64_t v34 = v119;
          (*v124)((char *)v125, (uint64_t)v47, v119);
        }
        else
        {
          uint64_t v55 = v114;
          (*v111)(v114, v18, v54);
          uint64_t v56 = sub_1C15155FC();
          if (v56) {
            uint64_t v57 = v56;
          }
          else {
            uint64_t v57 = MEMORY[0x1E4FBC860];
          }
          MEMORY[0x1F4188790](v56);
          *(&v103 - 2) = &v132;
          uint64_t v58 = v122;
          unint64_t v59 = sub_1C002FB68(v115, (uint64_t)(&v103 - 4), v48);
          uint64_t v122 = v58;
          uint64_t v139 = v57;
          sub_1C002FB3C(v59);
          sub_1C151560C();
          uint64_t v60 = v113;
          sub_1C151565C();
          ((void (*)(unsigned int (**)(uint64_t, uint64_t, uint64_t), uint64_t))*v110)(v55, v54);
          uint64_t v61 = v112;
          uint64_t v34 = v119;
          (*v124)(v112, (uint64_t)v47, v119);
          if (v52(v60, 1, v34) == 1)
          {
            ((void (*)(uint64_t *, char *, uint64_t))v127)(v125, v61, v34);
            sub_1C0E56F54((uint64_t)v60, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1C0E572B0);
          }
          else
          {
            (*v126)(v61, v34);
            ((void (*)(uint64_t *, void (*)(void), uint64_t))v127)(v125, v60, v34);
          }
          uint64_t v43 = v116;
          uint64_t v18 = v109;
          uint64_t v46 = (uint64_t)v118;
          uint64_t v47 = (char *)v117;
        }
      }
      else
      {
        (*v124)((char *)v53, (uint64_t)v47, v34);
      }
      uint64_t v44 = v51;
      (*v126)(v47, v34);
      swift_bridgeObjectRelease();
    }
    else
    {
      *(void *)&long long v132 = 0;
      *((void *)&v132 + 1) = 0xE000000000000000;
      sub_1C152036C();
      uint64_t v134 = MEMORY[0x1E4FBB1A0];
      long long v133 = v132;
    }
    ++v45;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v135);
    sub_1BFF993A8(&v133, &v135);
  }
  while (v131 != v45);
  swift_bridgeObjectRelease();
LABEL_22:
  sub_1BFF993A8(&v135, &v137);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v136);
  swift_bridgeObjectRelease();
  sub_1BFF6A008((uint64_t)&v137, (uint64_t)&v135);
  if (swift_dynamicCast())
  {
LABEL_23:
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v137);
    *uint64_t v103 = v133;
  }
  else
  {
    type metadata accessor for FormatLayoutError();
    sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
    swift_allocError();
    uint64_t v64 = v63;
    __swift_project_boxed_opaque_existential_1(&v137, v138);
    swift_getDynamicType();
    uint64_t v65 = v107;
    swift_bridgeObjectRetain();
    uint64_t v66 = sub_1C1520FAC();
    *uint64_t v64 = v106;
    v64[1] = v65;
    uint64_t v67 = v105;
    void v64[2] = v104;
    v64[3] = v67;
    v64[4] = v66;
    v64[5] = v68;
    swift_storeEnumTagMultiPayload();
LABEL_25:
    swift_willThrow();
    uint64_t v69 = (uint64_t *)&v137;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v69);
  }
  return result;
}

uint64_t sub_1C0E52234@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, void (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, char *)@<X5>, void (**a7)(char *, uint64_t, uint64_t)@<X6>, void (**a8)(uint64_t *, void (**)(char *), uint64_t)@<X7>, uint64_t a9@<X8>)
{
  uint64_t v125 = (void (**)(uint64_t *, void (**)(char *), uint64_t))a8;
  uint64_t v127 = a5;
  uint64_t v116 = a2;
  uint64_t v115 = a9;
  sub_1C0E572B0(0, (unint64_t *)&unk_1EB8710E0, MEMORY[0x1E4F26ED8]);
  MEMORY[0x1F4188790](v15 - 8);
  long long v132 = (char *)&v112 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v112 - v18;
  uint64_t v130 = sub_1C15156FC();
  uint64_t v20 = *(void *)(v130 - 8);
  MEMORY[0x1F4188790](v130);
  uint64_t v124 = (char *)&v112 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v140 = (char *)&v112 - v23;
  sub_1C0E572B0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v123 = (char *)&v112 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v134 = (char **)((char *)&v112 - v27);
  MEMORY[0x1F4188790](v28);
  uint64_t v117 = (void (**)(char *, uint64_t, uint64_t))((char *)&v112 - v29);
  MEMORY[0x1F4188790](v30);
  uint64_t v139 = (char *)&v112 - v31;
  MEMORY[0x1F4188790](v32);
  long long v149 = (char *)&v112 - v33;
  MEMORY[0x1F4188790](v34);
  uint64_t v138 = (void (**)(unsigned int (**)(uint64_t, uint64_t, uint64_t), uint64_t))((char *)&v112 - v35);
  uint64_t v36 = sub_1C1515FDC();
  uint64_t v121 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v122 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((char *)&v112 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v38);
  uint64_t v128 = (uint64_t *)((char *)&v112 - v39);
  MEMORY[0x1F4188790](v40);
  MEMORY[0x1F4188790](v41);
  MEMORY[0x1F4188790](v42);
  MEMORY[0x1F4188790](v43);
  uint64_t v126 = a4;
  switch(a1 >> 60)
  {
    case 1uLL:
      uint64_t v136 = (void (**)(char *))v47;
      long long v118 = v46;
      uint64_t v112 = (char *)&v112 - v44;
      uint64_t v119 = a7;
      uint64_t v83 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v84 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
      v146[3] = MEMORY[0x1E4FBB1A0];
      v146[0] = v83;
      v146[1] = v84;
      sub_1BFF6A008((uint64_t)v146, (uint64_t)&v145);
      uint64_t v85 = MEMORY[0x1E4FBC840];
      long long v137 = *(uint64_t **)(a4 + 16);
      if (!v137)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_56;
      }
      uint64_t v113 = a3;
      uint64_t v133 = v9;
      uint64_t v86 = (char *)(v121 + 56);
      long long v135 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v121 + 48);
      uint64_t v134 = (char **)(v121 + 32);
      uint64_t v122 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
      uint64_t v117 = (void (**)(char *, uint64_t, uint64_t))(v20 + 32);
      uint64_t v114 = (void (**)(char *, uint64_t))(v20 + 8);
      uint64_t v125 = (void (**)(uint64_t *, void (**)(char *), uint64_t))(v121 + 16);
      uint64_t v131 = (void (**)(void (**)(char *), uint64_t))(v121 + 8);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v87 = 0;
      uint64_t v123 = (char *)(v85 + 8);
      uint64_t v88 = (uint64_t)v149;
      uint64_t v124 = v86;
      while (1)
      {
        uint64_t v89 = *(unsigned int (***)(uint64_t, uint64_t, uint64_t))(a4 + 8 * (void)v87 + 32);
        if (v89) {
          break;
        }
        *(void *)&long long v141 = 0;
        *((void *)&v141 + 1) = 0xE000000000000000;
        sub_1C152036C();
        uint64_t v144 = MEMORY[0x1E4FBB1A0];
        long long v143 = v141;
LABEL_34:
        uint64_t v87 = (uint64_t *)((char *)v87 + 1);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v145);
        sub_1BFF993A8(&v143, &v145);
        if (v137 == v87)
        {
          swift_bridgeObjectRelease();
          a3 = v113;
LABEL_56:
          uint64_t v69 = (uint64_t)v138;
          sub_1BFF993A8(&v145, &v147);
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v146);
          sub_1BFF6A008((uint64_t)&v147, (uint64_t)&v145);
          char v107 = swift_dynamicCast();
          uint64_t v108 = v121;
          uint64_t v109 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v121 + 56);
          if (v107)
          {
            v109(v69, 0, 1, v36);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v147);
            uint64_t v73 = *(void (**)(uint64_t, uint64_t, uint64_t))(v108 + 32);
            uint64_t v74 = &v142;
            goto LABEL_25;
          }
          v109(v69, 1, 1, v36);
          sub_1C0E56F54(v69, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1C0E572B0);
          type metadata accessor for FormatLayoutError();
          sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
          swift_allocError();
          *char v110 = v116;
          v110[1] = a3;
          v110[2] = 5001813;
          v110[3] = 0xE300000000000000;
          v110[4] = 0x676E69727453;
          v110[5] = 0xE600000000000000;
          swift_storeEnumTagMultiPayload();
          swift_bridgeObjectRetain();
LABEL_27:
          swift_willThrow();
          unint64_t v81 = (uint64_t *)&v147;
          return __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
        }
      }
      sub_1BFF6A008((uint64_t)&v145, (uint64_t)&v141);
      swift_bridgeObjectRetain();
      int v90 = swift_dynamicCast();
      unint64_t v91 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v86;
      if (!v90)
      {
        v91(v88, 1, 1, v36);
LABEL_60:
        sub_1C0E56F54(v88, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1C0E572B0);
        type metadata accessor for FormatLayoutError();
        sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
        swift_allocError();
        *uint64_t v111 = 5001813;
        v111[1] = 0xE300000000000000;
        v111[2] = 7958081;
        v111[3] = 0xE300000000000000;
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v145);
        swift_bridgeObjectRelease();
        unint64_t v81 = v146;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
      }
      uint64_t v92 = (uint64_t)v19;
      v91(v88, 0, 1, v36);
      uint64_t v93 = *v135;
      if ((*v135)(v88, 1, v36) == 1) {
        goto LABEL_60;
      }
      long long v94 = v136;
      long long v132 = *v134;
      ((void (*)(void (**)(char *), uint64_t, uint64_t))v132)(v136, v88, v36);
      uint64_t v144 = v36;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v143);
      if (v89[2])
      {
        uint64_t v128 = boxed_opaque_existential_0;
        uint64_t v129 = v89;
        sub_1C151564C();
        uint64_t v96 = v130;
        if ((*v122)(v92, 1, v130) == 1)
        {
          sub_1C0E56F54(v92, (uint64_t)&unk_1EB8710E0, MEMORY[0x1E4F26ED8], (uint64_t (*)(void))sub_1C0E572B0);
          (*v125)(v128, v94, v36);
          uint64_t v19 = (char *)v92;
          uint64_t v97 = v94;
          uint64_t v86 = v124;
LABEL_50:
          (*v131)(v97, v36);
          swift_bridgeObjectRelease();
          goto LABEL_34;
        }
        uint64_t v98 = v140;
        (*v117)(v140, v92, v96);
        uint64_t v99 = sub_1C15155FC();
        if (v99) {
          uint64_t v100 = v99;
        }
        else {
          uint64_t v100 = MEMORY[0x1E4FBC860];
        }
        MEMORY[0x1F4188790](v99);
        *(&v112 - 2) = v127;
        uint64_t v101 = v133;
        unint64_t v102 = sub_1C002FB68((void (*)(void))v119, (uint64_t)(&v112 - 4), (uint64_t)v129);
        uint64_t v133 = v101;
        *(void *)&long long v141 = v100;
        sub_1C002FB3C(v102);
        sub_1C151560C();
        uint64_t v103 = (uint64_t)v139;
        sub_1C151565C();
        (*v114)(v98, v130);
        uint64_t v104 = v118;
        (*v125)((uint64_t *)v118, v94, v36);
        if (v93(v103, 1, v36) == 1)
        {
          ((void (*)(uint64_t *, void (**)(char *), uint64_t))v132)(v128, v104, v36);
          sub_1C0E56F54(v103, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1C0E572B0);
        }
        else
        {
          (*v131)(v104, v36);
          ((void (*)(uint64_t *, uint64_t, uint64_t))v132)(v128, v103, v36);
        }
        a4 = v126;
        uint64_t v19 = (char *)v92;
        uint64_t v88 = (uint64_t)v149;
        uint64_t v97 = v136;
      }
      else
      {
        (*v125)(boxed_opaque_existential_0, v94, v36);
        uint64_t v19 = (char *)v92;
        uint64_t v97 = v94;
      }
      uint64_t v86 = v124;
      goto LABEL_50;
    case 8uLL:
      uint64_t v105 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain_n();
      swift_retain();
      a6(v105, v116, a3, a4, v127);
      swift_release_n();
      return swift_release();
    case 0xBuLL:
      type metadata accessor for FormatLayoutError();
      sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
      swift_allocError();
      *uint64_t v106 = v116;
      v106[1] = a3;
      v106[2] = 5001813;
      v106[3] = 0xE300000000000000;
      v106[4] = 0x7463617274736261;
      v106[5] = 0xE800000000000000;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      return swift_willThrow();
    default:
      uint64_t v114 = v45;
      *(void *)&long long v145 = a1;
      swift_bridgeObjectRetain();
      sub_1BFF6A064(v146);
      sub_1BFF6A008((uint64_t)v146, (uint64_t)&v145);
      long long v149 = *(char **)(a4 + 16);
      if (!v149) {
        goto LABEL_23;
      }
      uint64_t v113 = a3;
      uint64_t v133 = v9;
      uint64_t v48 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v121 + 56);
      uint64_t v140 = (char *)(v121 + 48);
      uint64_t v139 = (char *)(v121 + 32);
      uint64_t v129 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
      uint64_t v119 = (void (**)(char *, uint64_t, uint64_t))(v20 + 32);
      long long v118 = (void (**)(char *))(v20 + 8);
      uint64_t v136 = (void (**)(char *))(v121 + 16);
      uint64_t v138 = (void (**)(unsigned int (**)(uint64_t, uint64_t, uint64_t), uint64_t))(v121 + 8);
      swift_bridgeObjectRetain();
      int v49 = 0;
      uint64_t v131 = (void (**)(void (**)(char *), uint64_t))(MEMORY[0x1E4FBC840] + 8);
      uint64_t v50 = v130;
      uint64_t v51 = (uint64_t)v134;
      unint64_t v52 = (char *)v128;
      uint64_t v120 = v36;
      long long v135 = v48;
      break;
  }
  do
  {
    uint64_t v53 = *(void *)(a4 + 8 * (void)v49 + 32);
    if (!v53)
    {
      *(void *)&long long v141 = 0;
      *((void *)&v141 + 1) = 0xE000000000000000;
      sub_1C152036C();
      uint64_t v144 = MEMORY[0x1E4FBB1A0];
      long long v143 = v141;
      goto LABEL_5;
    }
    sub_1BFF6A008((uint64_t)&v145, (uint64_t)&v141);
    swift_bridgeObjectRetain();
    int v54 = swift_dynamicCast();
    uint64_t v55 = *v48;
    if (!v54)
    {
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v55)(v51, 1, 1, v36);
LABEL_30:
      sub_1C0E56F54(v51, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1C0E572B0);
      type metadata accessor for FormatLayoutError();
      sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
      swift_allocError();
      *uint64_t v82 = 5001813;
      v82[1] = 0xE300000000000000;
      v82[2] = 7958081;
      v82[3] = 0xE300000000000000;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v145);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v146);
      return swift_bridgeObjectRelease();
    }
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v55)(v51, 0, 1, v36);
    uint64_t v56 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))v140;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v140)(v51, 1, v36) == 1) {
      goto LABEL_30;
    }
    uint64_t v57 = *(void (**)(uint64_t *, unsigned int (**)(uint64_t, uint64_t, uint64_t), uint64_t))v139;
    (*(void (**)(char *, uint64_t, uint64_t))v139)(v52, v51, v36);
    uint64_t v144 = v36;
    uint64_t v58 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v143);
    if (*(void *)(v53 + 16))
    {
      long long v137 = v58;
      uint64_t v59 = a4;
      uint64_t v60 = (uint64_t)v132;
      sub_1C151564C();
      if ((*v129)(v60, 1, v50) != 1)
      {
        uint64_t v61 = v124;
        (*v119)(v124, v60, v50);
        uint64_t v62 = sub_1C15155FC();
        if (v62) {
          uint64_t v63 = v62;
        }
        else {
          uint64_t v63 = MEMORY[0x1E4FBC860];
        }
        MEMORY[0x1F4188790](v62);
        *(&v112 - 2) = v127;
        uint64_t v64 = v133;
        unint64_t v65 = sub_1C002FB68((void (*)(void))v125, (uint64_t)(&v112 - 4), v53);
        uint64_t v133 = v64;
        *(void *)&long long v141 = v63;
        sub_1C002FB3C(v65);
        sub_1C151560C();
        uint64_t v66 = (uint64_t)v123;
        sub_1C151565C();
        uint64_t v67 = v61;
        uint64_t v36 = v120;
        uint64_t v50 = v130;
        (*v118)(v67);
        uint64_t v68 = v122;
        ((void (*)(unsigned int (**)(uint64_t, uint64_t, uint64_t), char *, uint64_t))*v136)(v122, v52, v36);
        if (v56(v66, 1, v36) == 1)
        {
          v57(v137, v68, v36);
          sub_1C0E56F54(v66, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1C0E572B0);
        }
        else
        {
          (*v138)(v68, v36);
          v57(v137, (unsigned int (**)(uint64_t, uint64_t, uint64_t))v66, v36);
        }
        a4 = v126;
        uint64_t v51 = (uint64_t)v134;
        uint64_t v48 = v135;
        unint64_t v52 = (char *)v128;
        goto LABEL_21;
      }
      sub_1C0E56F54(v60, (uint64_t)&unk_1EB8710E0, MEMORY[0x1E4F26ED8], (uint64_t (*)(void))sub_1C0E572B0);
      ((void (*)(uint64_t *, char *, uint64_t))*v136)(v137, v52, v36);
      a4 = v59;
      uint64_t v51 = (uint64_t)v134;
    }
    else
    {
      ((void (*)(uint64_t *, char *, uint64_t))*v136)(v58, v52, v36);
    }
    uint64_t v48 = v135;
LABEL_21:
    (*v138)((unsigned int (**)(uint64_t, uint64_t, uint64_t))v52, v36);
    swift_bridgeObjectRelease();
LABEL_5:
    ++v49;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v145);
    sub_1BFF993A8(&v143, &v145);
  }
  while (v149 != v49);
  swift_bridgeObjectRelease();
  a3 = v113;
LABEL_23:
  sub_1BFF993A8(&v145, &v147);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v146);
  swift_bridgeObjectRelease();
  sub_1BFF6A008((uint64_t)&v147, (uint64_t)&v145);
  uint64_t v69 = (uint64_t)v117;
  char v70 = swift_dynamicCast();
  uint64_t v71 = v121;
  uint64_t v72 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v121 + 56);
  if ((v70 & 1) == 0)
  {
    v72(v69, 1, 1, v36);
    sub_1C0E56F54(v69, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1C0E572B0);
    type metadata accessor for FormatLayoutError();
    sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
    swift_allocError();
    int v78 = v77;
    __swift_project_boxed_opaque_existential_1(&v147, v148);
    swift_getDynamicType();
    swift_bridgeObjectRetain();
    uint64_t v79 = sub_1C1520FAC();
    *int v78 = v116;
    v78[1] = a3;
    uint64_t v78[2] = 5001813;
    void v78[3] = 0xE300000000000000;
    v78[4] = v79;
    v78[5] = v80;
    swift_storeEnumTagMultiPayload();
    goto LABEL_27;
  }
  v72(v69, 0, 1, v36);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v147);
  uint64_t v73 = *(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 32);
  uint64_t v74 = (char *)&v143 + 8;
LABEL_25:
  uint64_t v75 = *((void *)v74 - 32);
  v73(v75, v69, v36);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v73)(v115, v75, v36);
}

uint64_t sub_1C0E5384C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, void (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, void *)@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, void (**a11)(char *, uint64_t, uint64_t), void (*a12)(char *, uint64_t, uint64_t))
{
  uint64_t v120 = a8;
  uint64_t v119 = a7;
  uint64_t v14 = v12;
  uint64_t v130 = a5;
  uint64_t v122 = a3;
  uint64_t v121 = a2;
  long long v118 = a9;
  uint64_t v129 = a12;
  long long v141 = a11;
  uint64_t v123 = a10;
  sub_1C0E572B0(0, (unint64_t *)&unk_1EB8710E0, MEMORY[0x1E4F26ED8]);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (uint64_t *)((char *)&v118 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v118 - v21;
  uint64_t v137 = sub_1C15156FC();
  uint64_t v23 = *(void *)(v137 - 8);
  MEMORY[0x1F4188790](v137);
  uint64_t v128 = (char *)&v118 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v118 - v26;
  sub_1C0E572B0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v28 - 8);
  uint64_t v127 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((char *)&v118 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v30);
  long long v135 = (void (**)(char *, uint64_t, uint64_t))((char *)&v118 - v31);
  MEMORY[0x1F4188790](v32);
  uint64_t v140 = (void (**)(char *, uint64_t))((char *)&v118 - v33);
  MEMORY[0x1F4188790](v34);
  long long v143 = (char *)&v118 - v35;
  uint64_t v152 = sub_1C1515FDC();
  uint64_t v36 = *(void *)(v152 - 8);
  MEMORY[0x1F4188790](v152);
  uint64_t v126 = (char *)&v118 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v38);
  uint64_t v131 = (char *)&v118 - v39;
  MEMORY[0x1F4188790](v40);
  MEMORY[0x1F4188790](v41);
  uint64_t v144 = (char *)&v118 - v43;
  uint64_t v142 = a4;
  switch(a1 >> 60)
  {
    case 1uLL:
      uint64_t v126 = v42;
      uint64_t v80 = a1 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v81 = a4;
      uint64_t v82 = *(void *)(v80 + 32);
      uint64_t v83 = *(void *)(v80 + 40);
      v149[3] = MEMORY[0x1E4FBB1A0];
      v149[0] = v82;
      v149[1] = v83;
      sub_1BFF6A008((uint64_t)v149, (uint64_t)&v148);
      uint64_t v84 = MEMORY[0x1E4FBC840];
      uint64_t v139 = *(void (***)(char *, char *, uint64_t))(v81 + 16);
      if (v139)
      {
        long long v132 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 56);
        uint64_t v138 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
        long long v135 = (void (**)(char *, uint64_t, uint64_t))(v36 + 32);
        uint64_t v127 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
        uint64_t v125 = (void (**)(char *, uint64_t, uint64_t))(v23 + 32);
        uint64_t v124 = (void (**)(char *, uint64_t))(v23 + 8);
        uint64_t v131 = (char *)(v36 + 16);
        uint64_t v134 = (void (**)(char *, uint64_t))(v36 + 8);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t v85 = 0;
        uint64_t v128 = (char *)(v84 + 8);
        uint64_t v86 = (uint64_t)v143;
        do
        {
          uint64_t v87 = *(void *)(v81 + 8 * (void)v85 + 32);
          if (v87)
          {
            sub_1BFF6A008((uint64_t)&v148, (uint64_t)v145);
            swift_bridgeObjectRetain();
            int v88 = swift_dynamicCast();
            uint64_t v89 = *v132;
            if (!v88)
            {
              ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v89)(v86, 1, 1, v152);
LABEL_57:
              sub_1C0E56F54(v86, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1C0E572B0);
              type metadata accessor for FormatLayoutError();
              sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
              swift_allocError();
              *uint64_t v117 = 5001813;
              v117[1] = 0xE300000000000000;
              _OWORD v117[2] = 7958081;
              v117[3] = 0xE300000000000000;
              swift_storeEnumTagMultiPayload();
              swift_willThrow();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v148);
              swift_bridgeObjectRelease();
              int v78 = v149;
              return __swift_destroy_boxed_opaque_existential_1((uint64_t)v78);
            }
            uint64_t v90 = v14;
            unint64_t v91 = v27;
            uint64_t v92 = (uint64_t)v22;
            uint64_t v93 = v152;
            ((void (*)(uint64_t, void, uint64_t, uint64_t))v89)(v86, 0, 1, v152);
            long long v94 = *v138;
            if ((*v138)(v86, 1, v93) == 1) {
              goto LABEL_57;
            }
            uint64_t v136 = v90;
            uint64_t v95 = *v135;
            uint64_t v96 = v144;
            uint64_t v97 = v152;
            (*v135)(v144, v86, v152);
            uint64_t v147 = v97;
            boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v146);
            if (*(void *)(v87 + 16))
            {
              uint64_t v133 = boxed_opaque_existential_0;
              uint64_t v129 = v95;
              uint64_t v22 = (char *)v92;
              sub_1C151564C();
              uint64_t v99 = v96;
              uint64_t v100 = v137;
              if ((*v127)(v92, 1, v137) == 1)
              {
                sub_1C0E56F54(v92, (uint64_t)&unk_1EB8710E0, MEMORY[0x1E4F26ED8], (uint64_t (*)(void))sub_1C0E572B0);
                (*(void (**)(uint64_t *, char *, uint64_t))v131)(v133, v99, v152);
                uint64_t v27 = v91;
                uint64_t v14 = v136;
                uint64_t v96 = v99;
              }
              else
              {
                (*v125)(v91, v92, v100);
                uint64_t v101 = sub_1C15155FC();
                if (v101) {
                  uint64_t v102 = v101;
                }
                else {
                  uint64_t v102 = MEMORY[0x1E4FBC860];
                }
                MEMORY[0x1F4188790](v101);
                *(&v118 - 2) = v130;
                uint64_t v103 = v136;
                unint64_t v104 = sub_1C002FB68((void (*)(void))v141, (uint64_t)(&v118 - 4), v87);
                uint64_t v136 = v103;
                *(void *)&v145[0] = v102;
                sub_1C002FB3C(v104);
                sub_1C151560C();
                uint64_t v105 = (uint64_t)v140;
                sub_1C151565C();
                (*v124)(v91, v137);
                uint64_t v106 = v126;
                uint64_t v107 = v152;
                (*(void (**)(char *, char *, uint64_t))v131)(v126, v99, v152);
                if (v94(v105, 1, v107) == 1)
                {
                  v129((char *)v133, (uint64_t)v106, v152);
                  sub_1C0E56F54(v105, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1C0E572B0);
                }
                else
                {
                  uint64_t v108 = v106;
                  uint64_t v109 = v152;
                  (*v134)(v108, v152);
                  v129((char *)v133, v105, v109);
                }
                uint64_t v22 = (char *)v92;
                uint64_t v27 = v91;
                uint64_t v14 = v136;
                uint64_t v86 = (uint64_t)v143;
                uint64_t v96 = v144;
              }
            }
            else
            {
              (*(void (**)(uint64_t *, char *, uint64_t))v131)(boxed_opaque_existential_0, v96, v152);
              uint64_t v22 = (char *)v92;
              uint64_t v27 = v91;
              uint64_t v14 = v136;
            }
            (*v134)(v96, v152);
            swift_bridgeObjectRelease();
          }
          else
          {
            *(void *)&v145[0] = 0;
            *((void *)&v145[0] + 1) = 0xE000000000000000;
            sub_1C152036C();
            uint64_t v147 = MEMORY[0x1E4FBB1A0];
            long long v146 = v145[0];
          }
          uint64_t v85 = (void (**)(char *, char *, uint64_t))((char *)v85 + 1);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v148);
          sub_1BFF993A8(&v146, &v148);
          uint64_t v81 = v142;
        }
        while (v139 != v85);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1BFF993A8(&v148, &v150);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v149);
      sub_1BFF6A008((uint64_t)&v150, (uint64_t)&v148);
      if (swift_dynamicCast()) {
        goto LABEL_24;
      }
      type metadata accessor for FormatLayoutError();
      sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
      swift_allocError();
      uint64_t v114 = v122;
      *uint64_t v115 = v121;
      v115[1] = v114;
      uint64_t v116 = v120;
      v115[2] = v119;
      v115[3] = v116;
      v115[4] = 0x676E69727453;
      v115[5] = 0xE600000000000000;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      goto LABEL_26;
    case 8uLL:
      uint64_t v110 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain_n();
      swift_retain();
      a6(v110, v121, v122, a4, v130);
      swift_release_n();
      return swift_release();
    case 0xBuLL:
      type metadata accessor for FormatLayoutError();
      sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
      swift_allocError();
      uint64_t v111 = v122;
      *uint64_t v112 = v121;
      v112[1] = v111;
      uint64_t v113 = v120;
      v112[2] = v119;
      v112[3] = v113;
      v112[4] = 0x7463617274736261;
      v112[5] = 0xE800000000000000;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      return swift_willThrow();
    default:
      *(void *)&long long v148 = a1;
      swift_bridgeObjectRetain();
      sub_1BFF6A064(v149);
      sub_1BFF6A008((uint64_t)v149, (uint64_t)&v148);
      uint64_t v144 = *(char **)(a4 + 16);
      uint64_t v44 = a4;
      if (!v144) {
        goto LABEL_23;
      }
      uint64_t v136 = v12;
      uint64_t v45 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 56);
      long long v143 = (char *)(v36 + 48);
      long long v141 = (void (**)(char *, uint64_t, uint64_t))(v36 + 32);
      long long v132 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
      uint64_t v125 = (void (**)(char *, uint64_t, uint64_t))(v23 + 32);
      uint64_t v124 = (void (**)(char *, uint64_t))(v23 + 8);
      uint64_t v139 = (void (**)(char *, char *, uint64_t))(v36 + 16);
      uint64_t v140 = (void (**)(char *, uint64_t))(v36 + 8);
      swift_bridgeObjectRetain();
      uint64_t v46 = 0;
      uint64_t v134 = (void (**)(char *, uint64_t))(MEMORY[0x1E4FBC840] + 8);
      uint64_t v47 = v137;
      uint64_t v48 = (uint64_t)v135;
      int v49 = v131;
      uint64_t v133 = v19;
      uint64_t v138 = v45;
      break;
  }
  do
  {
    uint64_t v50 = *(void *)(v44 + 8 * (void)v46 + 32);
    if (!v50)
    {
      *(void *)&v145[0] = 0;
      *((void *)&v145[0] + 1) = 0xE000000000000000;
      sub_1C152036C();
      uint64_t v147 = MEMORY[0x1E4FBB1A0];
      long long v146 = v145[0];
      goto LABEL_5;
    }
    sub_1BFF6A008((uint64_t)&v148, (uint64_t)v145);
    swift_bridgeObjectRetain();
    int v51 = swift_dynamicCast();
    unint64_t v52 = *v45;
    if (!v51)
    {
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v52)(v48, 1, 1, v152);
LABEL_29:
      sub_1C0E56F54(v48, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1C0E572B0);
      type metadata accessor for FormatLayoutError();
      sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
      swift_allocError();
      *uint64_t v79 = 5001813;
      v79[1] = 0xE300000000000000;
      v79[2] = 7958081;
      v79[3] = 0xE300000000000000;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v148);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v149);
      return swift_bridgeObjectRelease();
    }
    uint64_t v53 = v152;
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v52)(v48, 0, 1, v152);
    int v54 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))v143;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v143)(v48, 1, v53) == 1) {
      goto LABEL_29;
    }
    uint64_t v55 = *v141;
    uint64_t v56 = v152;
    (*v141)(v49, v48, v152);
    uint64_t v147 = v56;
    uint64_t v57 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v146);
    uint64_t v58 = v57;
    if (*(void *)(v50 + 16))
    {
      uint64_t v59 = (uint64_t)v133;
      sub_1C151564C();
      if ((*v132)(v59, 1, v47) != 1)
      {
        uint64_t v60 = v128;
        (*v125)(v128, v59, v47);
        uint64_t v61 = sub_1C15155FC();
        if (v61) {
          uint64_t v62 = v61;
        }
        else {
          uint64_t v62 = MEMORY[0x1E4FBC860];
        }
        MEMORY[0x1F4188790](v61);
        *(&v118 - 2) = v130;
        uint64_t v63 = v136;
        unint64_t v64 = sub_1C002FB68((void (*)(void))v129, (uint64_t)(&v118 - 4), v50);
        uint64_t v136 = v63;
        *(void *)&v145[0] = v62;
        sub_1C002FB3C(v64);
        sub_1C151560C();
        uint64_t v65 = (uint64_t)v127;
        sub_1C151565C();
        uint64_t v66 = v60;
        uint64_t v67 = v152;
        (*v124)(v66, v137);
        uint64_t v68 = v126;
        (*v139)(v126, v49, v67);
        if (v54(v65, 1, v67) == 1)
        {
          v55((char *)v58, (uint64_t)v68, v152);
          sub_1C0E56F54(v65, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1C0E572B0);
        }
        else
        {
          uint64_t v69 = v68;
          uint64_t v70 = v152;
          (*v140)(v69, v152);
          v55((char *)v58, v65, v70);
        }
        uint64_t v44 = v142;
        uint64_t v48 = (uint64_t)v135;
        int v49 = v131;
        uint64_t v45 = v138;
        uint64_t v47 = v137;
        goto LABEL_21;
      }
      sub_1C0E56F54(v59, (uint64_t)&unk_1EB8710E0, MEMORY[0x1E4F26ED8], (uint64_t (*)(void))sub_1C0E572B0);
      (*v139)((char *)v58, v49, v152);
      uint64_t v48 = (uint64_t)v135;
    }
    else
    {
      (*v139)((char *)v57, v49, v152);
    }
    uint64_t v45 = v138;
    uint64_t v44 = v142;
LABEL_21:
    (*v140)(v49, v152);
    swift_bridgeObjectRelease();
LABEL_5:
    ++v46;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v148);
    sub_1BFF993A8(&v146, &v148);
  }
  while (v144 != v46);
  swift_bridgeObjectRelease();
LABEL_23:
  sub_1BFF993A8(&v148, &v150);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v149);
  swift_bridgeObjectRelease();
  sub_1BFF6A008((uint64_t)&v150, (uint64_t)&v148);
  if (swift_dynamicCast())
  {
LABEL_24:
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v150);
    *long long v118 = v146;
  }
  else
  {
    type metadata accessor for FormatLayoutError();
    sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
    swift_allocError();
    uint64_t v73 = v72;
    __swift_project_boxed_opaque_existential_1(&v150, v151);
    swift_getDynamicType();
    uint64_t v74 = v122;
    swift_bridgeObjectRetain();
    uint64_t v75 = sub_1C1520FAC();
    *uint64_t v73 = v121;
    v73[1] = v74;
    uint64_t v76 = v120;
    v73[2] = v119;
    v73[3] = v76;
    v73[4] = v75;
    v73[5] = v77;
    swift_storeEnumTagMultiPayload();
LABEL_26:
    swift_willThrow();
    int v78 = (uint64_t *)&v150;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v78);
  }
  return result;
}

uint64_t sub_1C0E54CD8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, long long *a5@<X4>, void *a6@<X8>)
{
  return sub_1C0E54DD4(a1, a2, a3, a4, a5, (uint64_t)sub_1C0E54CD8, 0x6F4674616D726F46, 0xEA0000000000746ELL, a6, (uint64_t)&type metadata for FormatFont, (void (**)(char *, uint64_t, uint64_t))sub_1C002FECC, (void (*)(char *, uint64_t, uint64_t))sub_1C002FECC);
}

uint64_t sub_1C0E54D54@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, long long *a5@<X4>, void *a6@<X8>)
{
  return sub_1C0E54DD4(a1, a2, a3, a4, a5, (uint64_t)sub_1C0E54D54, 0x6F4374616D726F46, 0xEB00000000726F6CLL, a6, (uint64_t)&type metadata for FormatColor, (void (**)(char *, uint64_t, uint64_t))sub_1C0A3F4B8, (void (*)(char *, uint64_t, uint64_t))sub_1C002FECC);
}

uint64_t sub_1C0E54DD4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, long long *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, void (**a11)(char *, uint64_t, uint64_t), void (*a12)(char *, uint64_t, uint64_t))
{
  uint64_t v120 = a8;
  uint64_t v119 = a7;
  uint64_t v144 = a6;
  uint64_t v131 = a5;
  uint64_t v122 = a3;
  uint64_t v121 = a2;
  long long v118 = a9;
  uint64_t v128 = a12;
  uint64_t v15 = a10;
  sub_1C0E572B0(0, (unint64_t *)&unk_1EB8710E0, MEMORY[0x1E4F26ED8]);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((char *)&v116 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v19);
  long long v141 = (void (**)(char *, uint64_t))((char *)&v116 - v20);
  uint64_t v137 = sub_1C15156FC();
  uint64_t v21 = *(void *)(v137 - 8);
  MEMORY[0x1F4188790](v137);
  uint64_t v127 = (char *)&v116 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v140 = (uint64_t *)((char *)&v116 - v24);
  sub_1C0E572B0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v126 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((char *)&v116 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v27);
  uint64_t v130 = (void (**)(uint64_t *, char *, uint64_t))((char *)&v116 - v28);
  MEMORY[0x1F4188790](v29);
  uint64_t v139 = (void (**)(char *, char *, uint64_t))((char *)&v116 - v30);
  MEMORY[0x1F4188790](v31);
  long long v143 = (char **)((char *)&v116 - v32);
  uint64_t v33 = sub_1C1515FDC();
  uint64_t v34 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  uint64_t v125 = (char *)&v116 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v36);
  uint64_t v129 = (char *)&v116 - v37;
  MEMORY[0x1F4188790](v38);
  MEMORY[0x1F4188790](v39);
  long long v145 = (char *)&v116 - v41;
  uint64_t v142 = a4;
  switch(a1 >> 60)
  {
    case 1uLL:
      uint64_t v125 = v40;
      uint64_t v136 = v12;
      uint64_t v76 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v77 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
      v155[3] = MEMORY[0x1E4FBB1A0];
      v155[0] = v76;
      v155[1] = v77;
      sub_1BFF6A008((uint64_t)v155, (uint64_t)&v154);
      uint64_t v78 = MEMORY[0x1E4FBC840];
      uint64_t v138 = *(char **)(a4 + 16);
      if (v138)
      {
        uint64_t v124 = a11;
        uint64_t v79 = (char *)(v34 + 56);
        long long v135 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
        uint64_t v134 = (void (**)(char *, uint64_t, uint64_t))(v34 + 32);
        uint64_t v126 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
        uint64_t v123 = (void (**)(uint64_t *, uint64_t, uint64_t))(v21 + 32);
        uint64_t v116 = (void (**)(char *, uint64_t))(v21 + 8);
        uint64_t v130 = (void (**)(uint64_t *, char *, uint64_t))(v34 + 16);
        uint64_t v133 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 8);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t v80 = 0;
        uint64_t v127 = (char *)(v78 + 8);
        uint64_t v81 = v131;
        uint64_t v82 = v137;
        uint64_t v83 = (uint64_t)v143;
        uint64_t v117 = a10;
        uint64_t v129 = v79;
        do
        {
          uint64_t v84 = v15;
          uint64_t v85 = *(void *)(a4 + 8 * (void)v80 + 32);
          if (v85)
          {
            sub_1BFF6A008((uint64_t)&v154, (uint64_t)&v146);
            uint64_t v144 = v85;
            swift_bridgeObjectRetain();
            int v86 = swift_dynamicCast();
            uint64_t v87 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v79;
            if (!v86)
            {
              v87(v83, 1, 1, v33);
LABEL_59:
              sub_1C0E56F54(v83, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1C0E572B0);
              type metadata accessor for FormatLayoutError();
              sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
              swift_allocError();
              *uint64_t v115 = 5001813;
              v115[1] = 0xE300000000000000;
              v115[2] = 7958081;
              v115[3] = 0xE300000000000000;
              swift_storeEnumTagMultiPayload();
              swift_willThrow();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v154);
              swift_bridgeObjectRelease();
              uint64_t v74 = v155;
              return __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
            }
            v87(v83, 0, 1, v33);
            int v88 = *v135;
            if ((*v135)(v83, 1, v33) == 1) {
              goto LABEL_59;
            }
            uint64_t v89 = *v134;
            uint64_t v90 = v145;
            (*v134)(v145, v83, v33);
            uint64_t v153 = v33;
            boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v152);
            uint64_t v151 = *((void *)v81 + 10);
            long long v92 = v81[4];
            long long v93 = v81[2];
            long long v149 = v81[3];
            long long v150 = v92;
            long long v148 = v93;
            long long v94 = *v81;
            long long v147 = v81[1];
            long long v146 = v94;
            if (*(void *)(v144 + 16))
            {
              uint64_t v128 = v89;
              uint64_t v95 = boxed_opaque_existential_0;
              uint64_t v96 = (uint64_t)v141;
              sub_1C151564C();
              if ((*v126)(v96, 1, v82) == 1)
              {
                sub_1C0E56F54(v96, (uint64_t)&unk_1EB8710E0, MEMORY[0x1E4F26ED8], (uint64_t (*)(void))sub_1C0E572B0);
                (*v130)(v95, v90, v33);
                a4 = v142;
                uint64_t v97 = v90;
                uint64_t v15 = v117;
              }
              else
              {
                uint64_t v98 = v140;
                (*v123)(v140, v96, v82);
                uint64_t v99 = sub_1C15155FC();
                if (v99) {
                  uint64_t v100 = v99;
                }
                else {
                  uint64_t v100 = MEMORY[0x1E4FBC860];
                }
                MEMORY[0x1F4188790](v99);
                *(&v116 - 2) = (void (**)(char *, uint64_t))&v146;
                uint64_t v101 = v136;
                unint64_t v102 = sub_1C002FB68((void (*)(void))v124, (uint64_t)(&v116 - 4), v144);
                uint64_t v136 = v101;
                uint64_t v158 = v100;
                uint64_t v103 = v137;
                sub_1C002FB3C(v102);
                sub_1C151560C();
                uint64_t v104 = (uint64_t)v139;
                sub_1C151565C();
                uint64_t v105 = v98;
                uint64_t v106 = v145;
                uint64_t v82 = v103;
                (*v116)((char *)v105, v103);
                uint64_t v107 = v125;
                (*v130)((uint64_t *)v125, v106, v33);
                if (v88(v104, 1, v33) == 1)
                {
                  v128((char *)v95, (uint64_t)v107, v33);
                  sub_1C0E56F54(v104, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1C0E572B0);
                }
                else
                {
                  ((void (*)(char *, uint64_t))*v133)(v107, v33);
                  v128((char *)v95, v104, v33);
                }
                a4 = v142;
                uint64_t v97 = v106;
                uint64_t v15 = v117;
                uint64_t v81 = v131;
              }
              uint64_t v83 = (uint64_t)v143;
            }
            else
            {
              (*v130)(boxed_opaque_existential_0, v90, v33);
              a4 = v142;
              uint64_t v97 = v90;
              uint64_t v15 = v117;
            }
            uint64_t v79 = v129;
            ((void (*)(char *, uint64_t))*v133)(v97, v33);
            swift_bridgeObjectRelease();
          }
          else
          {
            *(void *)&long long v146 = 0;
            *((void *)&v146 + 1) = 0xE000000000000000;
            sub_1C152036C();
            uint64_t v153 = MEMORY[0x1E4FBB1A0];
            long long v152 = v146;
            uint64_t v15 = v84;
          }
          ++v80;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v154);
          sub_1BFF993A8(&v152, &v154);
        }
        while (v138 != v80);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1BFF993A8(&v154, &v156);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v155);
      sub_1BFF6A008((uint64_t)&v156, (uint64_t)&v146);
      if ((swift_dynamicCast() & 1) == 0)
      {
        type metadata accessor for FormatLayoutError();
        sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
        swift_allocError();
        uint64_t v112 = v122;
        *uint64_t v113 = v121;
        v113[1] = v112;
        uint64_t v114 = v120;
        v113[2] = v119;
        v113[3] = v114;
        v113[4] = 0x676E69727453;
        v113[5] = 0xE600000000000000;
        swift_storeEnumTagMultiPayload();
        swift_bridgeObjectRetain();
        goto LABEL_26;
      }
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v156);
      *long long v118 = v154;
      return result;
    case 8uLL:
      uint64_t v108 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain_n();
      swift_retain();
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, long long *))v144)(v108, v121, v122, a4, v131);
      swift_release_n();
      return swift_release();
    case 0xBuLL:
      type metadata accessor for FormatLayoutError();
      sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
      swift_allocError();
      uint64_t v109 = v122;
      *uint64_t v110 = v121;
      v110[1] = v109;
      uint64_t v111 = v120;
      v110[2] = v119;
      v110[3] = v111;
      v110[4] = 0x7463617274736261;
      v110[5] = 0xE800000000000000;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      return swift_willThrow();
    default:
      long long v135 = v18;
      *(void *)&long long v146 = a1;
      swift_bridgeObjectRetain();
      sub_1BFF6A064(v155);
      sub_1BFF6A008((uint64_t)v155, (uint64_t)&v154);
      uint64_t v42 = a4;
      long long v145 = *(char **)(a4 + 16);
      if (!v145) {
        goto LABEL_23;
      }
      uint64_t v117 = a10;
      uint64_t v136 = v12;
      uint64_t v43 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56);
      uint64_t v144 = v34 + 48;
      long long v143 = (char **)(v34 + 32);
      uint64_t v133 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
      uint64_t v124 = (void (**)(char *, uint64_t, uint64_t))(v21 + 32);
      uint64_t v123 = (void (**)(uint64_t *, uint64_t, uint64_t))(v21 + 8);
      uint64_t v139 = (void (**)(char *, char *, uint64_t))(v34 + 16);
      long long v141 = (void (**)(char *, uint64_t))(v34 + 8);
      swift_bridgeObjectRetain();
      uint64_t v44 = 0;
      uint64_t v134 = (void (**)(char *, uint64_t, uint64_t))(MEMORY[0x1E4FBC840] + 8);
      uint64_t v45 = v131;
      uint64_t v46 = (uint64_t)v130;
      uint64_t v47 = v129;
      uint64_t v132 = v33;
      break;
  }
  do
  {
    uint64_t v48 = *(void *)(v42 + 8 * (void)v44 + 32);
    if (!v48)
    {
      *(void *)&long long v146 = 0;
      *((void *)&v146 + 1) = 0xE000000000000000;
      sub_1C152036C();
      uint64_t v153 = MEMORY[0x1E4FBB1A0];
      long long v152 = v146;
      goto LABEL_5;
    }
    sub_1BFF6A008((uint64_t)&v154, (uint64_t)&v146);
    swift_bridgeObjectRetain();
    int v49 = swift_dynamicCast();
    uint64_t v50 = *v43;
    if (!v49)
    {
      v50(v46, 1, 1, v33);
LABEL_29:
      sub_1C0E56F54(v46, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1C0E572B0);
      type metadata accessor for FormatLayoutError();
      sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
      swift_allocError();
      *uint64_t v75 = 5001813;
      v75[1] = 0xE300000000000000;
      v75[2] = 7958081;
      v75[3] = 0xE300000000000000;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v154);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v155);
      return swift_bridgeObjectRelease();
    }
    int v51 = v43;
    v50(v46, 0, 1, v33);
    unint64_t v52 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))v144;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v144)(v46, 1, v33) == 1) {
      goto LABEL_29;
    }
    uint64_t v53 = *v143;
    ((void (*)(char *, uint64_t, uint64_t))*v143)(v47, v46, v33);
    uint64_t v153 = v33;
    int v54 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v152);
    uint64_t v151 = *((void *)v45 + 10);
    long long v55 = v45[4];
    long long v56 = v45[2];
    long long v149 = v45[3];
    long long v150 = v55;
    long long v148 = v56;
    long long v57 = *v45;
    long long v147 = v45[1];
    long long v146 = v57;
    if (*(void *)(v48 + 16))
    {
      uint64_t v138 = v53;
      uint64_t v140 = v54;
      uint64_t v58 = (uint64_t)v135;
      sub_1C151564C();
      uint64_t v59 = v137;
      if ((*v133)(v58, 1, v137) != 1)
      {
        uint64_t v60 = v127;
        (*v124)(v127, v58, v59);
        uint64_t v61 = sub_1C15155FC();
        if (v61) {
          uint64_t v62 = v61;
        }
        else {
          uint64_t v62 = MEMORY[0x1E4FBC860];
        }
        MEMORY[0x1F4188790](v61);
        *(&v116 - 2) = (void (**)(char *, uint64_t))&v146;
        uint64_t v63 = v136;
        unint64_t v64 = sub_1C002FB68((void (*)(void))v128, (uint64_t)(&v116 - 4), v48);
        uint64_t v136 = v63;
        uint64_t v158 = v62;
        sub_1C002FB3C(v64);
        sub_1C151560C();
        uint64_t v65 = (uint64_t)v126;
        sub_1C151565C();
        ((void (*)(char *, uint64_t))*v123)(v60, v59);
        uint64_t v66 = v125;
        uint64_t v33 = v132;
        (*v139)(v125, v47, v132);
        if (v52(v65, 1, v33) == 1)
        {
          ((void (*)(uint64_t *, char *, uint64_t))v138)(v140, v66, v33);
          sub_1C0E56F54(v65, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1C0E572B0);
        }
        else
        {
          (*v141)(v66, v33);
          ((void (*)(uint64_t *, uint64_t, uint64_t))v138)(v140, v65, v33);
        }
        uint64_t v42 = v142;
        uint64_t v45 = v131;
        uint64_t v46 = (uint64_t)v130;
        uint64_t v47 = v129;
        goto LABEL_21;
      }
      sub_1C0E56F54(v58, (uint64_t)&unk_1EB8710E0, MEMORY[0x1E4F26ED8], (uint64_t (*)(void))sub_1C0E572B0);
      uint64_t v33 = v132;
      (*v139)((char *)v140, v47, v132);
    }
    else
    {
      (*v139)((char *)v54, v47, v33);
    }
    uint64_t v42 = v142;
LABEL_21:
    uint64_t v43 = v51;
    (*v141)(v47, v33);
    swift_bridgeObjectRelease();
LABEL_5:
    ++v44;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v154);
    sub_1BFF993A8(&v152, &v154);
  }
  while (v145 != v44);
  swift_bridgeObjectRelease();
LABEL_23:
  sub_1BFF993A8(&v154, &v156);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v155);
  swift_bridgeObjectRelease();
  sub_1BFF6A008((uint64_t)&v156, (uint64_t)&v146);
  if (swift_dynamicCast())
  {
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v156);
    *long long v118 = v154;
  }
  else
  {
    type metadata accessor for FormatLayoutError();
    sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
    swift_allocError();
    uint64_t v69 = v68;
    __swift_project_boxed_opaque_existential_1(&v156, v157);
    swift_getDynamicType();
    uint64_t v70 = v122;
    swift_bridgeObjectRetain();
    uint64_t v71 = sub_1C1520FAC();
    *uint64_t v69 = v121;
    v69[1] = v70;
    uint64_t v72 = v120;
    v69[2] = v119;
    v69[3] = v72;
    v69[4] = v71;
    v69[5] = v73;
    swift_storeEnumTagMultiPayload();
LABEL_26:
    swift_willThrow();
    uint64_t v74 = (uint64_t *)&v156;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
  }
  return result;
}

BOOL _s8NewsFeed22FormatImageNodeBindingO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a1 + 8);
  uint64_t v55 = *(void *)a1;
  unint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  unsigned int v6 = *(unsigned __int8 *)(a1 + 40);
  uint64_t v7 = *(void *)a2;
  unint64_t v8 = *(void *)(a2 + 8);
  unint64_t v10 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  uint64_t v11 = *(void *)(a2 + 32);
  unsigned int v12 = *(unsigned __int8 *)(a2 + 40);
  switch((v6 >> 1) & 0xF)
  {
    case 1u:
      if ((v12 & 0x1E) == 2) {
        goto LABEL_15;
      }
      goto LABEL_30;
    case 2u:
      unsigned __int8 v13 = v6 & 0xE1;
      if ((v12 & 0x1E) == 4)
      {
        uint64_t v62 = *(void *)a1;
        unint64_t v63 = v2;
        unint64_t v64 = v3;
        uint64_t v65 = v4;
        uint64_t v66 = v5;
        char v67 = v6 & 0xE1;
        uint64_t v56 = v7;
        unint64_t v57 = v8;
        unint64_t v58 = v10;
        uint64_t v59 = v9;
        uint64_t v60 = v11;
        char v61 = v12 & 0xE1;
        uint64_t v52 = v5;
        unint64_t v14 = v2;
        sub_1BFF2B584(v7, v8, v10, v9, v11, v12);
        sub_1BFF2B584(v55, v14, v3, v4, v52, v6);
        sub_1BFF2B584(v7, v8, v10, v9, v11, v12);
        unint64_t v50 = v14;
        sub_1BFF2B584(v55, v14, v3, v4, v52, v6);
        char v15 = _s8NewsFeed18FormatGroupBindingV5ImageO2eeoiySbAE_AEtFZ_0((uint64_t)&v62, (uint64_t)&v56);
        goto LABEL_24;
      }
      unsigned int v47 = *(unsigned __int8 *)(a2 + 40);
      unsigned int v22 = *(unsigned __int8 *)(a1 + 40);
      uint64_t v23 = *(void *)a2;
      unint64_t v24 = *(void *)(a2 + 16);
      unint64_t v25 = *(void *)(a2 + 8);
      uint64_t v26 = *(void *)(a2 + 24);
      unint64_t v27 = *(void *)(a1 + 16);
      uint64_t v28 = *(void *)(a1 + 24);
      uint64_t v29 = *(void *)(a2 + 32);
      uint64_t v30 = *(void *)(a1 + 32);
      unint64_t v31 = *(void *)(a1 + 8);
      sub_1C0E56C90(v55, v2, v27, v28, v5, v13, (uint64_t (*)(void))sub_1C0223C2C, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1BFF61744, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C0223C2C);
      goto LABEL_29;
    case 3u:
      if ((v12 & 0x1E) == 6)
      {
        uint64_t v62 = *(void *)a1;
        unint64_t v63 = v2;
        unint64_t v64 = v3;
        uint64_t v65 = v4;
        uint64_t v56 = v7;
        unint64_t v57 = v8;
        unint64_t v58 = v10;
        uint64_t v59 = v9;
        uint64_t v52 = v5;
        unint64_t v14 = v2;
        sub_1BFF2B584(v7, v8, v10, v9, v11, v12);
        sub_1BFF2B584(v55, v14, v3, v4, v52, v6);
        sub_1BFF2B584(v7, v8, v10, v9, v11, v12);
        unint64_t v50 = v14;
        sub_1BFF2B584(v55, v14, v3, v4, v52, v6);
        char v15 = _s8NewsFeed16FormatTagBindingV5ImageO2eeoiySbAE_AEtFZ_0(&v62, &v56);
        goto LABEL_24;
      }
      unsigned int v47 = *(unsigned __int8 *)(a2 + 40);
      unsigned int v22 = *(unsigned __int8 *)(a1 + 40);
      uint64_t v23 = *(void *)a2;
      unint64_t v24 = *(void *)(a2 + 16);
      unint64_t v25 = *(void *)(a2 + 8);
      uint64_t v26 = *(void *)(a2 + 24);
      unint64_t v27 = *(void *)(a1 + 16);
      uint64_t v28 = *(void *)(a1 + 24);
      uint64_t v29 = *(void *)(a2 + 32);
      uint64_t v30 = *(void *)(a1 + 32);
      unint64_t v31 = *(void *)(a1 + 8);
      sub_1C0223C2C(v55, v2);
      goto LABEL_29;
    case 4u:
      if ((v12 & 0x1E) == 8) {
        goto LABEL_7;
      }
      goto LABEL_30;
    case 5u:
      if ((v12 & 0x1E) != 0xA) {
        goto LABEL_30;
      }
      sub_1BFF01078(v55, v2, v3, v4, v5, v6);
      sub_1BFF01078(v7, v8, v10, v9, v11, v12);
      return 1;
    case 6u:
      if ((v12 & 0x1E) != 0xC) {
        goto LABEL_30;
      }
LABEL_15:
      sub_1BFF01078(v55, v2, v3, v4, v5, v6);
      sub_1BFF01078(v7, v8, v10, v9, v11, v12);
      return ((v7 ^ v55) & 1) == 0;
    case 7u:
      if ((v12 & 0x1E) != 0xE)
      {
        uint64_t v48 = *(void *)(a1 + 24);
        uint64_t v32 = *(void *)(a2 + 32);
        uint64_t v33 = *(void *)(a1 + 32);
        unint64_t v34 = *(void *)(a1 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v2 = v34;
        uint64_t v5 = v33;
        uint64_t v11 = v32;
        uint64_t v4 = v48;
        goto LABEL_30;
      }
      unint64_t v51 = *(void *)(a1 + 8);
      uint64_t v53 = *(void *)(a1 + 32);
      uint64_t v45 = *(void *)(a2 + 32);
      if (v55 != v7 || v2 != v8)
      {
        unint64_t v17 = *(void *)(a1 + 8);
        char v18 = sub_1C1520A9C();
        unint64_t v2 = v17;
        if ((v18 & 1) == 0)
        {
          sub_1BFF2B584(v7, v8, v10, v9, v11, v12);
          sub_1BFF2B584(v55, v17, v3, v4, v53, v6);
          sub_1BFF01078(v55, v51, v3, v4, v53, v6);
          uint64_t v39 = v7;
          unint64_t v40 = v8;
          unint64_t v41 = v10;
          uint64_t v42 = v9;
          uint64_t v43 = v11;
          goto LABEL_31;
        }
      }
      uint64_t v19 = v11;
      unint64_t v20 = v2;
      sub_1BFF2B584(v7, v8, v10, v9, v19, v12);
      sub_1BFF2B584(v55, v20, v3, v4, v53, v6);
      sub_1BFF2B584(v7, v8, v10, v9, v45, v12);
      sub_1BFF2B584(v55, v20, v3, v4, v53, v6);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v46 = sub_1C00E3FD8(v3, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFF01078(v55, v51, v3, v4, v53, v6);
      sub_1BFF01078(v7, v8, v10, v9, v45, v12);
      sub_1BFF01078(v7, v8, v10, v9, v45, v12);
      sub_1BFF01078(v55, v51, v3, v4, v53, v6);
      if ((v46 & 1) == 0) {
        goto LABEL_32;
      }
      BOOL v16 = 1;
      break;
    case 8u:
      if ((v12 & 0x1E) == 0x10)
      {
        uint64_t v62 = *(void *)a1;
        unint64_t v63 = v2;
        unint64_t v64 = v3;
        uint64_t v65 = v4;
        uint64_t v66 = v5;
        char v67 = v6 & 1;
        uint64_t v56 = v7;
        unint64_t v57 = v8;
        unint64_t v58 = v10;
        uint64_t v59 = v9;
        uint64_t v60 = v11;
        char v61 = v12 & 1;
        uint64_t v52 = v5;
        unint64_t v14 = v2;
        sub_1BFF2B584(v7, v8, v10, v9, v11, v12);
        sub_1BFF2B584(v55, v14, v3, v4, v52, v6);
        sub_1BFF2B584(v7, v8, v10, v9, v11, v12);
        unint64_t v50 = v14;
        sub_1BFF2B584(v55, v14, v3, v4, v52, v6);
        char v15 = _s8NewsFeed24FormatSportsEventBindingV5ImageO2eeoiySbAE_AEtFZ_0((uint64_t)&v62, (uint64_t)&v56);
LABEL_24:
        unsigned int v21 = v6;
        unsigned int v49 = v6;
        BOOL v16 = v15;
        sub_1BFF01078(v55, v14, v3, v4, v52, v21);
        sub_1BFF01078(v7, v8, v10, v9, v11, v12);
        sub_1BFF01078(v7, v8, v10, v9, v11, v12);
        sub_1BFF01078(v55, v50, v3, v4, v52, v49);
      }
      else
      {
        char v35 = v6 & 1;
        unsigned int v47 = *(unsigned __int8 *)(a2 + 40);
        unsigned int v22 = *(unsigned __int8 *)(a1 + 40);
        uint64_t v23 = *(void *)a2;
        unint64_t v24 = *(void *)(a2 + 16);
        unint64_t v25 = *(void *)(a2 + 8);
        uint64_t v26 = *(void *)(a2 + 24);
        unint64_t v27 = *(void *)(a1 + 16);
        uint64_t v28 = *(void *)(a1 + 24);
        uint64_t v29 = *(void *)(a2 + 32);
        uint64_t v30 = *(void *)(a1 + 32);
        unint64_t v31 = *(void *)(a1 + 8);
        sub_1C05D8BC0(v55, v2, v27, v28, v5, v35, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C0223C2C);
LABEL_29:
        unint64_t v2 = v31;
        uint64_t v5 = v30;
        uint64_t v11 = v29;
        uint64_t v4 = v28;
        unint64_t v3 = v27;
        uint64_t v9 = v26;
        unint64_t v8 = v25;
        unint64_t v10 = v24;
        uint64_t v7 = v23;
        unsigned int v6 = v22;
        unsigned int v12 = v47;
LABEL_30:
        uint64_t v54 = v9;
        uint64_t v36 = v9;
        uint64_t v37 = v5;
        unint64_t v38 = v2;
        sub_1BFF2B584(v7, v8, v10, v36, v11, v12);
        sub_1BFF01078(v55, v38, v3, v4, v37, v6);
        uint64_t v39 = v7;
        unint64_t v40 = v8;
        unint64_t v41 = v10;
        uint64_t v42 = v54;
        uint64_t v43 = v11;
LABEL_31:
        sub_1BFF01078(v39, v40, v41, v42, v43, v12);
LABEL_32:
        BOOL v16 = 0;
      }
      break;
    default:
      if ((v12 & 0x1E) != 0) {
        goto LABEL_30;
      }
LABEL_7:
      sub_1BFF01078(v55, v2, v3, v4, v5, v6);
      sub_1BFF01078(v7, v8, v10, v9, v11, v12);
      return v7 == v55;
  }
  return v16;
}

unint64_t sub_1C0E56B70(uint64_t a1)
{
  unint64_t result = sub_1C0E56B98();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0E56B98()
{
  unint64_t result = qword_1EA1A7C60;
  if (!qword_1EA1A7C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7C60);
  }
  return result;
}

unint64_t sub_1C0E56BEC(void *a1)
{
  a1[1] = sub_1BFDC1CC4();
  a1[2] = sub_1BFD84838();
  unint64_t result = sub_1C0E56C24();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0E56C24()
{
  unint64_t result = qword_1EA1A7C68;
  if (!qword_1EA1A7C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7C68);
  }
  return result;
}

uint64_t destroy for FormatImageNodeBinding(uint64_t a1)
{
  return sub_1BFF01078(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
}

uint64_t sub_1C0E56C90(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, uint64_t (*a7)(void), uint64_t (*a8)(uint64_t, uint64_t, unint64_t, unint64_t), uint64_t (*a9)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  switch(a6 >> 5)
  {
    case 1:
    case 4:
      unint64_t result = a7();
      break;
    case 3:
      unint64_t result = a8(result, a2, a3, a3 >> 8);
      break;
    case 5:
      unint64_t result = sub_1C05D8BC0(result, a2, a3, a4, a5, a6 & 1, a9);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t initializeWithCopy for FormatImageNodeBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  unsigned int v8 = *(unsigned __int8 *)(a2 + 40);
  sub_1BFF2B584(*(void *)a2, v4, v5, v6, v7, v8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for FormatImageNodeBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  unsigned int v8 = *(unsigned __int8 *)(a2 + 40);
  sub_1BFF2B584(*(void *)a2, v4, v5, v6, v7, v8);
  uint64_t v9 = *(void *)a1;
  unint64_t v10 = *(void *)(a1 + 8);
  unint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v13 = *(void *)(a1 + 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  unsigned int v14 = *(unsigned __int8 *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v8;
  sub_1BFF01078(v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for FormatImageNodeBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  char v4 = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  unint64_t v6 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(void *)(a1 + 32) = v3;
  unsigned int v11 = *(unsigned __int8 *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v4;
  sub_1BFF01078(v5, v7, v6, v8, v9, v11);
  return a1;
}

uint64_t sub_1C0E56E80(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 40) >> 1) & 0xF;
}

uint64_t sub_1C0E56E8C(uint64_t result)
{
  *(unsigned char *)(result + 40) &= 0xE1u;
  return result;
}

uint64_t sub_1C0E56E9C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 40) = *(unsigned char *)(result + 40) & 0xE1 | (2 * (a2 & 0xF));
  return result;
}

ValueMetadata *type metadata accessor for FormatImageNodeBinding()
{
  return &type metadata for FormatImageNodeBinding;
}

uint64_t sub_1C0E56EC4()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0E56F04()
{
  if (*(void *)(v0 + 48) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0E56F54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v5 = a4(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1C0E56FB4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0E5701C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0E57058()
{
  sub_1BFF05CCC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0E570A4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0E570EC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C0E5714C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0E5718C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0E571D4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0E5720C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0E57274()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1C0E572B0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

NewsFeed::SportsDataVisualizationResult __swiftcall SportsDataVisualizationResult.init(visualizations:)(NewsFeed::SportsDataVisualizationResult visualizations)
{
  v1->visualizations._rawValue = visualizations.visualizations._rawValue;
  return visualizations;
}

uint64_t SportsDataVisualizationResult.visualizations.getter()
{
  return swift_bridgeObjectRetain();
}

void static SportsDataVisualizationResult.empty.getter(void *a1@<X8>)
{
  *a1 = MEMORY[0x1E4FBC860];
}

uint64_t SportsDataVisualizationResult.scores.getter()
{
  uint64_t v1 = *v0;
  uint64_t v7 = MEMORY[0x1E4FBC860];
  uint64_t v2 = *(void *)(*v0 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain_n();
    for (uint64_t i = 0; i != v2; ++i)
    {
      if (!(*(void *)(v1 + 8 * i + 32) >> 61))
      {
        uint64_t v4 = swift_retain();
        MEMORY[0x1C18C66D0](v4);
        if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v5 = v7;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t SportsDataVisualizationResult.standings.getter()
{
  uint64_t v1 = *v0;
  uint64_t v7 = MEMORY[0x1E4FBC860];
  uint64_t v2 = *(void *)(*v0 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain_n();
    for (uint64_t i = 0; i != v2; ++i)
    {
      if (*(void *)(v1 + 8 * i + 32) >> 61 == 1)
      {
        uint64_t v4 = swift_retain();
        MEMORY[0x1C18C66D0](v4);
        if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v5 = v7;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t SportsDataVisualizationResult.bracketGroups.getter()
{
  uint64_t v1 = *v0;
  uint64_t v7 = MEMORY[0x1E4FBC860];
  uint64_t v2 = *(void *)(*v0 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain_n();
    for (uint64_t i = 0; i != v2; ++i)
    {
      if (*(void *)(v1 + 8 * i + 32) >> 61 == 2)
      {
        uint64_t v4 = swift_retain();
        MEMORY[0x1C18C66D0](v4);
        if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v5 = v7;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t SportsDataVisualizationResult.boxScores.getter()
{
  uint64_t v1 = *v0;
  uint64_t v7 = MEMORY[0x1E4FBC860];
  uint64_t v2 = *(void *)(*v0 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain_n();
    for (uint64_t i = 0; i != v2; ++i)
    {
      if (*(void *)(v1 + 8 * i + 32) >> 61 == 3)
      {
        uint64_t v4 = swift_retain();
        MEMORY[0x1C18C66D0](v4);
        if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v5 = v7;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t SportsDataVisualizationResult.lineScores.getter()
{
  uint64_t v1 = *v0;
  uint64_t v7 = MEMORY[0x1E4FBC860];
  uint64_t v2 = *(void *)(*v0 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain_n();
    for (uint64_t i = 0; i != v2; ++i)
    {
      if (*(void *)(v1 + 8 * i + 32) >> 61 == 4)
      {
        uint64_t v4 = swift_retain();
        MEMORY[0x1C18C66D0](v4);
        if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v5 = v7;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t SportsDataVisualizationResult.injuryReports.getter()
{
  uint64_t v1 = *v0;
  uint64_t v7 = MEMORY[0x1E4FBC860];
  uint64_t v2 = *(void *)(*v0 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain_n();
    for (uint64_t i = 0; i != v2; ++i)
    {
      if (*(void *)(v1 + 8 * i + 32) >> 61 == 5)
      {
        uint64_t v4 = swift_retain();
        MEMORY[0x1C18C66D0](v4);
        if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v5 = v7;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t SportsDataVisualizationResult.keyPlayers.getter()
{
  uint64_t v1 = *v0;
  uint64_t v7 = MEMORY[0x1E4FBC860];
  uint64_t v2 = *(void *)(*v0 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain_n();
    for (uint64_t i = 0; i != v2; ++i)
    {
      if (*(void *)(v1 + 8 * i + 32) >> 61 == 6)
      {
        uint64_t v4 = swift_retain();
        MEMORY[0x1C18C66D0](v4);
        if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v5 = v7;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t SportsEventVisualizationResult.score.getter()
{
  return swift_retain();
}

uint64_t SportsEventVisualizationResult.boxScores.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsEventVisualizationResult.lineScores.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsEventVisualizationResult.injuryReports.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsEventVisualizationResult.keyPlayers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsEventVisualizationResult.__allocating_init(visualizationResult:)()
{
  return SportsEventVisualizationResult.init(visualizationResult:)();
}

uint64_t SportsEventVisualizationResult.init(visualizationResult:)()
{
  uint64_t v1 = v0;
  unint64_t v2 = SportsDataVisualizationResult.scores.getter();
  unint64_t v3 = v2;
  if (!(v2 >> 62))
  {
    uint64_t result = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (result) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
    return 0;
  }
  uint64_t result = sub_1C15204BC();
  if (!result) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v3 & 0xC000000000000001) != 0)
  {
    uint64_t v5 = MEMORY[0x1C18C7CB0](0, v3);
    goto LABEL_6;
  }
  if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v5 = *(void *)(v3 + 32);
    swift_retain();
LABEL_6:
    swift_bridgeObjectRelease();
    v1[2] = v5;
    swift_retain();
    v1[3] = SportsDataVisualizationResult.boxScores.getter();
    v1[4] = SportsDataVisualizationResult.lineScores.getter();
    v1[5] = SportsDataVisualizationResult.injuryReports.getter();
    uint64_t v6 = SportsDataVisualizationResult.keyPlayers.getter();
    swift_bridgeObjectRelease();
    swift_release();
    v1[6] = v6;
    return (uint64_t)v1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0E57C40()
{
  uint64_t result = 0x65726F6373;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x65726F6353786F62;
      break;
    case 2:
      uint64_t result = 0x726F6353656E696CLL;
      break;
    case 3:
      uint64_t result = 0x65527972756A6E69;
      break;
    case 4:
      uint64_t result = 0x6579616C5079656BLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0E57D04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0E59078(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0E57D2C(uint64_t a1)
{
  unint64_t v2 = sub_1C0E58168();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0E57D68(uint64_t a1)
{
  unint64_t v2 = sub_1C0E58168();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SportsEventVisualizationResult.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SportsEventVisualizationResult.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t SportsEventVisualizationResult.encode(to:)(void *a1)
{
  unint64_t v3 = v1;
  sub_1C0E589CC(0, &qword_1EA1A7C70, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0E58168();
  sub_1C1520F0C();
  uint64_t v12 = v3[2];
  HIBYTE(v11) = 0;
  type metadata accessor for SportsScoreDataVisualization();
  sub_1C0E58D20(&qword_1EB868790, (void (*)(uint64_t))type metadata accessor for SportsScoreDataVisualization);
  sub_1C152080C();
  if (!v2)
  {
    uint64_t v12 = v3[3];
    HIBYTE(v11) = 1;
    sub_1C0E583F0(0, &qword_1EA1A7C80, (void (*)(uint64_t))type metadata accessor for SportsBoxScoreDataVisualization);
    sub_1C0E581BC();
    sub_1C152080C();
    uint64_t v12 = v3[4];
    HIBYTE(v11) = 2;
    sub_1C0E583F0(0, &qword_1EA1A7C98, (void (*)(uint64_t))type metadata accessor for SportsLineScoreDataVisualization);
    sub_1C0E58278();
    sub_1C152080C();
    uint64_t v12 = v3[5];
    HIBYTE(v11) = 3;
    sub_1C0E583F0(0, &qword_1EA1A7CB0, (void (*)(uint64_t))type metadata accessor for SportsInjuryReportDataVisualization);
    sub_1C0E58334();
    sub_1C152080C();
    uint64_t v12 = v3[6];
    HIBYTE(v11) = 4;
    sub_1C0E583F0(0, &qword_1EA1A7CC8, (void (*)(uint64_t))type metadata accessor for SportsKeyPlayerDataVisualization);
    sub_1C0E58444();
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1C0E58168()
{
  unint64_t result = qword_1EA1A7C78;
  if (!qword_1EA1A7C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7C78);
  }
  return result;
}

unint64_t sub_1C0E581BC()
{
  unint64_t result = qword_1EA1A7C88;
  if (!qword_1EA1A7C88)
  {
    sub_1C0E583F0(255, &qword_1EA1A7C80, (void (*)(uint64_t))type metadata accessor for SportsBoxScoreDataVisualization);
    sub_1C0E58D20(&qword_1EA1A7C90, (void (*)(uint64_t))type metadata accessor for SportsBoxScoreDataVisualization);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7C88);
  }
  return result;
}

unint64_t sub_1C0E58278()
{
  unint64_t result = qword_1EA1A7CA0;
  if (!qword_1EA1A7CA0)
  {
    sub_1C0E583F0(255, &qword_1EA1A7C98, (void (*)(uint64_t))type metadata accessor for SportsLineScoreDataVisualization);
    sub_1C0E58D20(&qword_1EA1A7CA8, (void (*)(uint64_t))type metadata accessor for SportsLineScoreDataVisualization);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7CA0);
  }
  return result;
}

unint64_t sub_1C0E58334()
{
  unint64_t result = qword_1EA1A7CB8;
  if (!qword_1EA1A7CB8)
  {
    sub_1C0E583F0(255, &qword_1EA1A7CB0, (void (*)(uint64_t))type metadata accessor for SportsInjuryReportDataVisualization);
    sub_1C0E58D20(&qword_1EA1A7CC0, (void (*)(uint64_t))type metadata accessor for SportsInjuryReportDataVisualization);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7CB8);
  }
  return result;
}

void sub_1C0E583F0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151ED5C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1C0E58444()
{
  unint64_t result = qword_1EA1A7CD0;
  if (!qword_1EA1A7CD0)
  {
    sub_1C0E583F0(255, &qword_1EA1A7CC8, (void (*)(uint64_t))type metadata accessor for SportsKeyPlayerDataVisualization);
    sub_1C0E58D20(&qword_1EA1A7CD8, (void (*)(uint64_t))type metadata accessor for SportsKeyPlayerDataVisualization);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7CD0);
  }
  return result;
}

uint64_t SportsEventVisualizationResult.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  SportsEventVisualizationResult.init(from:)(a1);
  return v2;
}

void *SportsEventVisualizationResult.init(from:)(void *a1)
{
  sub_1C0E589CC(0, &qword_1EA1A7CE0, MEMORY[0x1E4FBBDC0]);
  uint64_t v11 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v11 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0E58168();
  sub_1C1520EBC();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v8 = v5;
    type metadata accessor for SportsScoreDataVisualization();
    char v12 = 0;
    sub_1C0E58D20((unint64_t *)&unk_1EB868798, (void (*)(uint64_t))type metadata accessor for SportsScoreDataVisualization);
    uint64_t v9 = v11;
    sub_1C15206EC();
    v1[2] = v13;
    sub_1C0E583F0(0, &qword_1EA1A7C80, (void (*)(uint64_t))type metadata accessor for SportsBoxScoreDataVisualization);
    char v12 = 1;
    sub_1C0E58A30();
    sub_1C15206EC();
    v1[3] = v13;
    sub_1C0E583F0(0, &qword_1EA1A7C98, (void (*)(uint64_t))type metadata accessor for SportsLineScoreDataVisualization);
    char v12 = 2;
    sub_1C0E58AEC();
    sub_1C15206EC();
    v1[4] = v13;
    sub_1C0E583F0(0, &qword_1EA1A7CB0, (void (*)(uint64_t))type metadata accessor for SportsInjuryReportDataVisualization);
    char v12 = 3;
    sub_1C0E58BA8();
    sub_1C15206EC();
    v1[5] = v13;
    sub_1C0E583F0(0, &qword_1EA1A7CC8, (void (*)(uint64_t))type metadata accessor for SportsKeyPlayerDataVisualization);
    char v12 = 4;
    sub_1C0E58C64();
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v9);
    v1[6] = v13;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

void sub_1C0E589CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0E58168();
    unint64_t v7 = a3(a1, &type metadata for SportsEventVisualizationResult.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C0E58A30()
{
  unint64_t result = qword_1EA1A7CE8;
  if (!qword_1EA1A7CE8)
  {
    sub_1C0E583F0(255, &qword_1EA1A7C80, (void (*)(uint64_t))type metadata accessor for SportsBoxScoreDataVisualization);
    sub_1C0E58D20(&qword_1EA1A7CF0, (void (*)(uint64_t))type metadata accessor for SportsBoxScoreDataVisualization);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7CE8);
  }
  return result;
}

unint64_t sub_1C0E58AEC()
{
  unint64_t result = qword_1EA1A7CF8;
  if (!qword_1EA1A7CF8)
  {
    sub_1C0E583F0(255, &qword_1EA1A7C98, (void (*)(uint64_t))type metadata accessor for SportsLineScoreDataVisualization);
    sub_1C0E58D20(&qword_1EA1A7D00, (void (*)(uint64_t))type metadata accessor for SportsLineScoreDataVisualization);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7CF8);
  }
  return result;
}

unint64_t sub_1C0E58BA8()
{
  unint64_t result = qword_1EA1A7D08;
  if (!qword_1EA1A7D08)
  {
    sub_1C0E583F0(255, &qword_1EA1A7CB0, (void (*)(uint64_t))type metadata accessor for SportsInjuryReportDataVisualization);
    sub_1C0E58D20(&qword_1EA1A7D10, (void (*)(uint64_t))type metadata accessor for SportsInjuryReportDataVisualization);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7D08);
  }
  return result;
}

unint64_t sub_1C0E58C64()
{
  unint64_t result = qword_1EA1A7D18;
  if (!qword_1EA1A7D18)
  {
    sub_1C0E583F0(255, &qword_1EA1A7CC8, (void (*)(uint64_t))type metadata accessor for SportsKeyPlayerDataVisualization);
    sub_1C0E58D20(&qword_1EA1A7D20, (void (*)(uint64_t))type metadata accessor for SportsKeyPlayerDataVisualization);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7D18);
  }
  return result;
}

uint64_t sub_1C0E58D20(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_1C0E58D68@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = SportsEventVisualizationResult.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1C0E58DC0(void *a1)
{
  return SportsEventVisualizationResult.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for SportsDataVisualizationResult()
{
  return &type metadata for SportsDataVisualizationResult;
}

uint64_t type metadata accessor for SportsEventVisualizationResult()
{
  return self;
}

uint64_t method lookup function for SportsEventVisualizationResult(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SportsEventVisualizationResult);
}

uint64_t dispatch thunk of SportsEventVisualizationResult.__allocating_init(visualizationResult:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of SportsEventVisualizationResult.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

unsigned char *storeEnumTagSinglePayload for SportsEventVisualizationResult.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0E58F38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsEventVisualizationResult.CodingKeys()
{
  return &type metadata for SportsEventVisualizationResult.CodingKeys;
}

unint64_t sub_1C0E58F74()
{
  unint64_t result = qword_1EA1A7D28;
  if (!qword_1EA1A7D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7D28);
  }
  return result;
}

unint64_t sub_1C0E58FCC()
{
  unint64_t result = qword_1EA1A7D30;
  if (!qword_1EA1A7D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7D30);
  }
  return result;
}

unint64_t sub_1C0E59024()
{
  unint64_t result = qword_1EA1A7D38;
  if (!qword_1EA1A7D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7D38);
  }
  return result;
}

uint64_t sub_1C0E59078(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65726F6373 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65726F6353786F62 && a2 == 0xE900000000000073 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F6353656E696CLL && a2 == 0xEA00000000007365 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65527972756A6E69 && a2 == 0xED00007374726F70 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6579616C5079656BLL && a2 == 0xEA00000000007372)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t FormatStateViewNodeStateLayoutAttributes.state.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatStateViewNodeStateLayoutAttributes.layoutAttributes.getter()
{
  return swift_retain();
}

uint64_t FormatStateViewNodeStateLayoutAttributes.contextLayoutOptions.getter()
{
  return swift_retain();
}

uint64_t sub_1C0E59310()
{
  unint64_t v1 = 0xD000000000000010;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000014;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6574617473;
  }
}

uint64_t sub_1C0E5936C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0E59DCC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0E59394(uint64_t a1)
{
  unint64_t v2 = sub_1C0E596C0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0E593D0(uint64_t a1)
{
  unint64_t v2 = sub_1C0E596C0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatStateViewNodeStateLayoutAttributes.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t FormatStateViewNodeStateLayoutAttributes.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t FormatStateViewNodeStateLayoutAttributes.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C0E59A7C(0, &qword_1EA1A7D40, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0E596C0();
  sub_1C1520F0C();
  LOBYTE(v12) = 0;
  sub_1C15207CC();
  if (!v2)
  {
    uint64_t v12 = *(void *)(v3 + 32);
    HIBYTE(v11) = 1;
    type metadata accessor for FormatLayoutAttributes();
    sub_1BFFD3F40(&qword_1EB88A8A8, (void (*)(uint64_t))type metadata accessor for FormatLayoutAttributes);
    sub_1C152080C();
    uint64_t v12 = *(void *)(v3 + 40);
    HIBYTE(v11) = 2;
    type metadata accessor for FormatContextLayoutOptions();
    sub_1BFFD3F40(&qword_1EA198B58, (void (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1C0E596C0()
{
  unint64_t result = qword_1EA1A7D48;
  if (!qword_1EA1A7D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7D48);
  }
  return result;
}

uint64_t FormatStateViewNodeStateLayoutAttributes.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  FormatStateViewNodeStateLayoutAttributes.init(from:)(a1);
  return v2;
}

void *FormatStateViewNodeStateLayoutAttributes.init(from:)(void *a1)
{
  sub_1C0E59A7C(0, &qword_1EA1A7D50, MEMORY[0x1E4FBBDC0]);
  uint64_t v12 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v12 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0E596C0();
  sub_1C1520EBC();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v8 = v5;
    LOBYTE(v14) = 0;
    uint64_t v9 = v12;
    v1[2] = sub_1C152069C();
    v1[3] = v10;
    type metadata accessor for FormatLayoutAttributes();
    char v13 = 1;
    sub_1BFFD3F40(&qword_1EB88A8B0, (void (*)(uint64_t))type metadata accessor for FormatLayoutAttributes);
    sub_1C15206EC();
    v1[4] = v14;
    type metadata accessor for FormatContextLayoutOptions();
    char v13 = 2;
    sub_1BFFD3F40(&qword_1EA198B88, (void (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions);
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v9);
    v1[5] = v14;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

void sub_1C0E59A7C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0E596C0();
    unint64_t v7 = a3(a1, &type metadata for FormatStateViewNodeStateLayoutAttributes.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void *sub_1C0E59AE0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  unint64_t result = FormatStateViewNodeStateLayoutAttributes.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1C0E59B38(void *a1)
{
  return FormatStateViewNodeStateLayoutAttributes.encode(to:)(a1);
}

uint64_t type metadata accessor for FormatStateViewNodeStateLayoutAttributes()
{
  return self;
}

uint64_t method lookup function for FormatStateViewNodeStateLayoutAttributes(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatStateViewNodeStateLayoutAttributes);
}

uint64_t dispatch thunk of FormatStateViewNodeStateLayoutAttributes.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

unsigned char *storeEnumTagSinglePayload for FormatStateViewNodeStateLayoutAttributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0E59C8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatStateViewNodeStateLayoutAttributes.CodingKeys()
{
  return &type metadata for FormatStateViewNodeStateLayoutAttributes.CodingKeys;
}

unint64_t sub_1C0E59CC8()
{
  unint64_t result = qword_1EA1A7D58;
  if (!qword_1EA1A7D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7D58);
  }
  return result;
}

unint64_t sub_1C0E59D20()
{
  unint64_t result = qword_1EA1A7D60;
  if (!qword_1EA1A7D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7D60);
  }
  return result;
}

unint64_t sub_1C0E59D78()
{
  unint64_t result = qword_1EA1A7D68;
  if (!qword_1EA1A7D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7D68);
  }
  return result;
}

uint64_t sub_1C0E59DCC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6574617473 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C1608CE0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C1608D00)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t FormatCustomItemDefinition.properties.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t static FormatCustomItemDefinition.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1C00DFB04(*a1, *a2);
}

unint64_t sub_1C0E59F24(uint64_t a1)
{
  unint64_t result = sub_1C0E59F4C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0E59F4C()
{
  unint64_t result = qword_1EA1A7D70;
  if (!qword_1EA1A7D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7D70);
  }
  return result;
}

unint64_t sub_1C0E59FA0(void *a1)
{
  a1[1] = sub_1BFDB8F08();
  a1[2] = sub_1C006E210();
  unint64_t result = sub_1C0E59FD8();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0E59FD8()
{
  unint64_t result = qword_1EA1A7D78;
  if (!qword_1EA1A7D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7D78);
  }
  return result;
}

uint64_t sub_1C0E5A02C(uint64_t *a1, uint64_t *a2)
{
  return sub_1C00DFB04(*a1, *a2);
}

ValueMetadata *type metadata accessor for FormatCustomItemDefinition()
{
  return &type metadata for FormatCustomItemDefinition;
}

unint64_t _s8NewsFeed18FormatHOverlayNodeC4sizeAA0C4SizeOvg_0@<X0>(unint64_t *a1@<X8>)
{
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 88);
  *a1 = v3;
  return sub_1BFF35EA4(v3);
}

uint64_t _s8NewsFeed18FormatHOverlayNodeC11adjustmentsSayAA0C10AdjustmentOGvg_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t _s8NewsFeed18FormatHOverlayNodeC8childrenSayAA0c9SourceMapE0VGvg_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t _s8NewsFeed18FormatHOverlayNodeC7reverseAA0C7BooleanOvg_0@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 120);
  uint64_t v4 = *(void *)(v1 + 128);
  char v5 = *(unsigned char *)(v1 + 136);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return sub_1BFE94AB4(v3, v4, v5);
}

uint64_t FormatHOverlayNode.reversed.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 112);
}

uint64_t _s8NewsFeed18FormatHOverlayNodeC10identifierSSvg_0()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t _s8NewsFeed18FormatHOverlayNodeC10targetPathSaySSGvg_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t _s8NewsFeed18FormatHOverlayNodeC4nameSSSgvg_0()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t _s8NewsFeed18FormatHOverlayNodeC11descriptionSSSgvg_0()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*FormatHOverlayNode.identifier.modify())()
{
  return j__swift_endAccess;
}

uint64_t FormatHOverlayNode.targetIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*FormatHOverlayNode.targetPath.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t (*FormatHOverlayNode.name.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t (*FormatHOverlayNode.description.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t (*FormatHOverlayNode.size.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t (*FormatHOverlayNode.adjustments.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t (*FormatHOverlayNode.children.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatHOverlayNode.reversed.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 112) = a1;
  return result;
}

uint64_t (*FormatHOverlayNode.reversed.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t (*FormatHOverlayNode.reverse.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatHOverlayNode.__allocating_init(identifier:targetIdentifier:targetPath:name:description:size:adjustments:children:reversed:reverse:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10, uint64_t a11, uint64_t a12, char a13, uint64_t *a14)
{
  uint64_t v19 = swift_allocObject();
  FormatHOverlayNode.init(identifier:targetIdentifier:targetPath:name:description:size:adjustments:children:reversed:reverse:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
  return v19;
}

uint64_t FormatHOverlayNode.init(identifier:targetIdentifier:targetPath:name:description:size:adjustments:children:reversed:reverse:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10, uint64_t a11, uint64_t a12, char a13, uint64_t *a14)
{
  return sub_1C0E5AFF0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
}

uint64_t FormatHOverlayNode.__deallocating_deinit()
{
  FormatHOverlayNode.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0E5A780@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C088D700(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1C0E5A7AC(void *a1)
{
  return FormatHOverlayNode.encode(to:)(a1);
}

uint64_t sub_1C0E5A7D0(uint64_t *a1, uint64_t *a2)
{
  return static FormatHOverlayNode.== infix(_:_:)(*a1, *a2);
}

uint64_t _s8NewsFeed18FormatHOverlayNodeC10identifierSSvs_0(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatVOverlayNode.identifier.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t _s8NewsFeed18FormatHOverlayNodeC10targetPathSaySSGvs_0(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatVOverlayNode.targetPath.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C0E5A92C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = *a2;
  swift_beginAccess();
  *(void *)(v4 + 56) = v3;
  *(void *)(v4 + 64) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t _s8NewsFeed18FormatHOverlayNodeC4nameSSSgvs_0(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatVOverlayNode.name.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C0E5AA38(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = *a2;
  swift_beginAccess();
  *(void *)(v4 + 72) = v3;
  *(void *)(v4 + 80) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t _s8NewsFeed18FormatHOverlayNodeC11descriptionSSSgvs_0(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatVOverlayNode.description.modify())()
{
  return j_j__swift_endAccess;
}

unint64_t sub_1C0E5AB44(unint64_t *a1, uint64_t *a2)
{
  unint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  unint64_t v4 = *(void *)(v3 + 88);
  *(void *)(v3 + 88) = v2;
  sub_1BFF35EA4(v2);
  return sub_1BFF322A8(v4);
}

unint64_t _s8NewsFeed18FormatHOverlayNodeC4sizeAA0C4SizeOvs_0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 88);
  *(void *)(v1 + 88) = v2;
  return sub_1BFF322A8(v3);
}

uint64_t (*FormatVOverlayNode.size.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t _s8NewsFeed18FormatHOverlayNodeC11adjustmentsSayAA0C10AdjustmentOGvs_0(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 96) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatVOverlayNode.adjustments.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C0E5ACE4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 104) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t _s8NewsFeed18FormatHOverlayNodeC8childrenSayAA0c9SourceMapE0VGvs_0(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 104) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatVOverlayNode.children.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t (*FormatVOverlayNode.reversed.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C0E5AE38@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 120);
  uint64_t v5 = *(void *)(v3 + 128);
  char v6 = *(unsigned char *)(v3 + 136);
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v5;
  *(unsigned char *)(a2 + 16) = v6;
  return sub_1BFE94AB4(v4, v5, v6);
}

uint64_t sub_1C0E5AE8C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  char v4 = *(unsigned char *)(a1 + 16);
  uint64_t v5 = *a2;
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 120);
  uint64_t v7 = *(void *)(v5 + 128);
  char v8 = *(unsigned char *)(v5 + 136);
  *(void *)(v5 + 120) = v2;
  *(void *)(v5 + 128) = v3;
  *(unsigned char *)(v5 + 136) = v4;
  sub_1BFE94AB4(v2, v3, v4);
  return sub_1BFE94AD4(v6, v7, v8);
}

uint64_t _s8NewsFeed18FormatHOverlayNodeC7reverseAA0C7BooleanOvs_0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v1 + 120);
  uint64_t v6 = *(void *)(v1 + 128);
  char v7 = *(unsigned char *)(v1 + 136);
  *(void *)(v1 + 120) = v2;
  *(void *)(v1 + 128) = v3;
  *(unsigned char *)(v1 + 136) = v4;
  return sub_1BFE94AD4(v5, v6, v7);
}

uint64_t (*FormatVOverlayNode.reverse.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C0E5AFCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10, uint64_t a11, uint64_t a12, char a13, uint64_t *a14)
{
  return sub_1C0E5AFF0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1C0E5AFF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10, uint64_t a11, uint64_t a12, char a13, uint64_t *a14)
{
  uint64_t v26 = *a10;
  uint64_t v28 = a14[1];
  uint64_t v29 = *a14;
  int v27 = *((unsigned __int8 *)a14 + 16);
  *(_OWORD *)(v14 + 72) = 0u;
  *(_OWORD *)(v14 + 56) = 0u;
  swift_beginAccess();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  *(void *)(v14 + 32) = a3;
  *(void *)(v14 + 40) = a4;
  swift_beginAccess();
  *(void *)(v14 + 48) = a5;
  swift_beginAccess();
  *(void *)(v14 + 56) = a6;
  *(void *)(v14 + 64) = a7;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)(v14 + 72) = a8;
  *(void *)(v14 + 80) = a9;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)(v14 + 88) = v26;
  swift_beginAccess();
  *(void *)(v14 + 96) = a11;
  swift_beginAccess();
  *(void *)(v14 + 104) = a12;
  swift_beginAccess();
  *(unsigned char *)(v14 + 112) = a13;
  if (v27 == 255) {
    uint64_t v22 = a13 & 1;
  }
  else {
    uint64_t v22 = v29;
  }
  if (v27 == 255) {
    uint64_t v23 = 0;
  }
  else {
    uint64_t v23 = v28;
  }
  swift_beginAccess();
  *(void *)(v14 + 120) = v22;
  *(void *)(v14 + 128) = v23;
  *(unsigned char *)(v14 + 136) = (v27 != 255) & v27;
  return v14;
}

uint64_t _s8NewsFeed18FormatHOverlayNodeCfd_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFF322A8(*(void *)(v0 + 88));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFE94AD4(*(void *)(v0 + 120), *(void *)(v0 + 128), *(unsigned char *)(v0 + 136));
  return v0;
}

uint64_t sub_1C0E5B248(uint64_t a1)
{
  uint64_t result = sub_1C0E5B530(&qword_1EA1A7D80, (void (*)(void))type metadata accessor for FormatHOverlayNode);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for FormatHOverlayNode()
{
  return self;
}

uint64_t sub_1C0E5B2C4(void *a1)
{
  a1[1] = sub_1C0E5B530(qword_1EB87EA98, (void (*)(void))type metadata accessor for FormatHOverlayNode);
  a1[2] = sub_1C0E5B530(&qword_1EB860160, (void (*)(void))type metadata accessor for FormatHOverlayNode);
  uint64_t result = sub_1C0E5B530(&qword_1EA1A7D88, (void (*)(void))type metadata accessor for FormatHOverlayNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1C0E5B370(uint64_t a1)
{
  uint64_t result = sub_1C0E5B530(&qword_1EA1A7D90, (void (*)(void))type metadata accessor for FormatHOverlayNode);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0E5B3C8(uint64_t a1)
{
  uint64_t result = sub_1C0E5B530(&qword_1EA1A7D98, (void (*)(void))type metadata accessor for FormatVOverlayNode);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0E5B420(void *a1)
{
  a1[1] = sub_1C0E5B530(&qword_1EB888878, (void (*)(void))type metadata accessor for FormatVOverlayNode);
  a1[2] = sub_1C0E5B530(&qword_1EB866570, (void (*)(void))type metadata accessor for FormatVOverlayNode);
  uint64_t result = sub_1C0E5B530(&qword_1EA1A7DA0, (void (*)(void))type metadata accessor for FormatVOverlayNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1C0E5B4CC(uint64_t *a1, uint64_t *a2)
{
  return static FormatVOverlayNode.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1C0E5B4D8(uint64_t a1)
{
  uint64_t result = sub_1C0E5B530(&qword_1EA1A7DA8, (void (*)(void))type metadata accessor for FormatVOverlayNode);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0E5B530(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0E5B578(uint64_t *a1, uint64_t *a2)
{
  return sub_1C0172B58(a1, a2);
}

uint64_t sub_1C0E5B594(uint64_t *a1, uint64_t *a2)
{
  return sub_1C0170BD0(a1, a2);
}

uint64_t sub_1C0E5B5B0(uint64_t *a1, uint64_t *a2)
{
  return sub_1C0E5A92C(a1, a2);
}

uint64_t sub_1C0E5B5CC(uint64_t *a1, uint64_t *a2)
{
  return sub_1C0E5AA38(a1, a2);
}

unint64_t sub_1C0E5B5E8(unint64_t *a1, uint64_t *a2)
{
  return sub_1C0E5AB44(a1, a2);
}

uint64_t sub_1C0E5B604(uint64_t *a1, uint64_t *a2)
{
  return sub_1C045E9D0(a1, a2);
}

uint64_t sub_1C0E5B620(uint64_t *a1, uint64_t *a2)
{
  return sub_1C0E5ACE4(a1, a2);
}

uint64_t sub_1C0E5B640@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0E5AE38(a1, a2);
}

uint64_t sub_1C0E5B658(uint64_t a1, uint64_t *a2)
{
  return sub_1C0E5AE8C(a1, a2);
}

uint64_t keypath_getTm_1@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0E5B6C0(uint64_t *a1, uint64_t *a2)
{
  return sub_1C0172B58(a1, a2);
}

uint64_t keypath_get_6Tm@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0E5B728(uint64_t *a1, uint64_t *a2)
{
  return sub_1C0170BD0(a1, a2);
}

uint64_t keypath_get_8Tm@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 64);
  *a2 = *(void *)(v3 + 56);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0E5B790(uint64_t *a1, uint64_t *a2)
{
  return sub_1C0E5A92C(a1, a2);
}

uint64_t keypath_get_10Tm@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 80);
  *a2 = *(void *)(v3 + 72);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0E5B7F8(uint64_t *a1, uint64_t *a2)
{
  return sub_1C0E5AA38(a1, a2);
}

unint64_t keypath_get_12Tm@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  unint64_t v4 = *(void *)(v3 + 88);
  *a2 = v4;
  return sub_1BFF35EA4(v4);
}

unint64_t sub_1C0E5B860(unint64_t *a1, uint64_t *a2)
{
  return sub_1C0E5AB44(a1, a2);
}

uint64_t keypath_get_14Tm@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 96);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0E5B8C8(uint64_t *a1, uint64_t *a2)
{
  return sub_1C045E9D0(a1, a2);
}

uint64_t keypath_get_16Tm@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 104);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0E5B930(uint64_t *a1, uint64_t *a2)
{
  return sub_1C0E5ACE4(a1, a2);
}

uint64_t keypath_get_18Tm@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 112);
  return result;
}

uint64_t keypath_set_19Tm(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 112) = v2;
  return result;
}

uint64_t sub_1C0E5B9DC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0E5AE38(a1, a2);
}

uint64_t sub_1C0E5B9F4(uint64_t a1, uint64_t *a2)
{
  return sub_1C0E5AE8C(a1, a2);
}

uint64_t method lookup function for FormatHOverlayNode(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatHOverlayNode);
}

uint64_t dispatch thunk of FormatHOverlayNode.__allocating_init(identifier:targetIdentifier:targetPath:name:description:size:adjustments:children:reversed:reverse:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t method lookup function for FormatVOverlayNode(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatVOverlayNode);
}

unint64_t ContextMenu.ItemOptions.description.getter()
{
  unint64_t result = 0xD000000000000016;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6F6C6552206E6143;
      break;
    case 2:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 4:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    case 6:
      unint64_t result = 0x69736552206E6143;
      break;
    case 7:
    case 0x10:
    case 0x17:
      unint64_t result = 0xD000000000000014;
      break;
    case 8:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 9:
      unint64_t result = 0xD000000000000019;
      break;
    case 0xA:
      unint64_t result = 0x6B636F6C42207349;
      break;
    case 0xB:
      unint64_t result = 0x6373627553207349;
      break;
    case 0xC:
      unint64_t result = 0xD000000000000011;
      break;
    case 0xD:
      unint64_t result = 0xD000000000000012;
      break;
    case 0xE:
      unint64_t result = 0x6168432065646948;
      break;
    case 0xF:
      unint64_t result = 0xD000000000000013;
      break;
    case 0x11:
      unint64_t result = 0x6C6F462065646948;
      break;
    case 0x12:
      unint64_t result = 0x6F6C422065646948;
      break;
    case 0x13:
      unint64_t result = 0xD000000000000011;
      break;
    case 0x14:
      unint64_t result = 0xD000000000000018;
      break;
    case 0x15:
      unint64_t result = 0x6F74532064616552;
      break;
    case 0x16:
      unint64_t result = 0x726F6853206E6143;
      break;
    case 0x18:
      unint64_t result = 0xD000000000000010;
      break;
    case 0x19:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 0x1A:
      unint64_t result = 0xD000000000000013;
      break;
    case 0x1B:
      unint64_t result = 0xD000000000000017;
      break;
    case 0x1C:
      unint64_t result = 0x6168532065646948;
      break;
    case 0x1D:
      unint64_t result = 0x7661532065646948;
      break;
    case 0x1E:
      unint64_t result = 0x666153206E65704FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t static ContextMenu.MenuType.feedHeadline(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(uint64_t *)((char *)a1 + *(int *)(type metadata accessor for FeedHeadline(0) + 56));
  uint64_t v5 = a1[5];
  uint64_t v7 = *a1;
  uint64_t v6 = a1[1];
  swift_unknownObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  if (v4) {
    uint64_t v9 = v7;
  }
  else {
    uint64_t v9 = 0;
  }
  *(void *)a2 = v5;
  *(void *)(a2 + 8) = v9;
  if (v4) {
    uint64_t v10 = v6;
  }
  else {
    uint64_t v10 = 0;
  }
  if (v4) {
    uint64_t v11 = 0;
  }
  else {
    uint64_t v11 = v7;
  }
  if (v4) {
    uint64_t v12 = 0;
  }
  else {
    uint64_t v12 = v6;
  }
  *(void *)(a2 + 16) = v10;
  *(void *)(a2 + 24) = v11;
  *(void *)(a2 + 32) = v12;
  *(unsigned char *)(a2 + 40) = 0;
  *(unsigned char *)(a2 + 41) = 2 * (v4 == 0);
  return result;
}

void sub_1C0E5BE78(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  if (sub_1BFFD07D4(16, a1)) {
    goto LABEL_2;
  }
  uint64_t v5 = self;
  id v6 = objc_msgSend(v5, sel_currentDevice);
  id v7 = objc_msgSend(v6, sel_userInterfaceIdiom);

  if (v7 == (id)5)
  {
    sub_1C0607A88(0);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1C1527210;
    uint64_t v9 = _s5TeaUI15ContextMenuItemC8NewsFeedE12openInNewTab8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(a2);
    uint64_t v10 = v9;
    if (v9)
    {
      uint64_t v9 = sub_1C151A81C();
      uint64_t v11 = MEMORY[0x1E4FAC030];
    }
    else
    {
      uint64_t v11 = 0;
      *(void *)(v8 + 40) = 0;
      *(void *)(v8 + 48) = 0;
    }
    *(void *)(v8 + 32) = v10;
    *(void *)(v8 + 56) = v9;
    *(void *)(v8 + 64) = v11;
    uint64_t v18 = _s5TeaUI15ContextMenuItemC8NewsFeedE15openInNewWindow8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(a2);
    uint64_t v19 = v18;
    if (v18)
    {
      uint64_t v18 = sub_1C151A81C();
      uint64_t v20 = MEMORY[0x1E4FAC030];
    }
    else
    {
      uint64_t v20 = 0;
      *(void *)(v8 + 80) = 0;
      *(void *)(v8 + 88) = 0;
    }
    *(void *)(v8 + 72) = v19;
    *(void *)(v8 + 96) = v18;
    *(void *)(v8 + 104) = v20;
  }
  else
  {
    id v12 = objc_msgSend(v5, sel_currentDevice);
    id v13 = objc_msgSend(v12, sel_userInterfaceIdiom);

    if (v13 != (id)1)
    {
LABEL_2:
      *(void *)(a3 + 32) = 0;
      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
      return;
    }
    sub_1C0607A88(0);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1C1529AE0;
    uint64_t v15 = _s5TeaUI15ContextMenuItemC8NewsFeedE15openInNewWindow8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(a2);
    uint64_t v16 = v15;
    if (v15)
    {
      uint64_t v15 = sub_1C151A81C();
      uint64_t v17 = MEMORY[0x1E4FAC030];
    }
    else
    {
      uint64_t v17 = 0;
      *(void *)(v14 + 40) = 0;
      *(void *)(v14 + 48) = 0;
    }
    *(void *)(v14 + 32) = v16;
    *(void *)(v14 + 56) = v15;
    *(void *)(v14 + 64) = v17;
  }
  sub_1C151AB2C();
  sub_1C151AB1C();
  swift_bridgeObjectRelease();
}

void sub_1C0E5C070(int a1@<W0>, char a2@<W1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v67 = a5;
  int v68 = a1;
  v73[2] = *MEMORY[0x1E4F143B8];
  uint64_t v10 = sub_1C151AB3C();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  id v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1C151CE3C();
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v66 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1C151B03C();
  uint64_t v17 = *(void *)(v16 - 8);
  *(void *)&double v18 = MEMORY[0x1F4188790](v16).n128_u64[0];
  uint64_t v20 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
  {
    *(void *)(a6 + 32) = 0;
    *(_OWORD *)a6 = 0u;
    *(_OWORD *)(a6 + 16) = 0u;
    return;
  }
  uint64_t v64 = v11;
  id v21 = objc_msgSend(a3, sel_sourceChannel, v18);
  uint64_t v22 = a4;
  id v23 = v21;
  uint64_t v69 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v65 = v22;
  if ((sub_1BFFD07D4(14, v22) & 1) == 0)
  {
    if (v23)
    {
      uint64_t v61 = v10;
      unint64_t v63 = v13;
      uint64_t v62 = a6;
      swift_getObjectType();
      type metadata accessor for Localized();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      unint64_t v25 = self;
      swift_unknownObjectRetain_n();
      id v26 = objc_msgSend(v25, sel_bundleForClass_, ObjCClassFromMetadata);
      sub_1C1515B8C();

      sub_1C0222994(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_1C1529AE0;
      uint64_t v28 = FCTagProviding.localizedTagType.getter();
      uint64_t v30 = v29;
      *(void *)(v27 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v27 + 64) = sub_1BFE9C558();
      *(void *)(v27 + 32) = v28;
      *(void *)(v27 + 40) = v30;
      sub_1C151E66C();
      swift_bridgeObjectRelease();
      if (qword_1EB87C910 != -1) {
        swift_once();
      }
      uint64_t v31 = qword_1EB86FF68;
      swift_unknownObjectRetain();
      swift_retain();
      swift_unknownObjectRetain();
      if (v31 != -1) {
        swift_once();
      }
      uint64_t v32 = (void *)qword_1EB86FF58;
      (*(void (**)(char *, void, uint64_t))(v17 + 104))(v20, *MEMORY[0x1E4FAC3E0], v16);
      *(void *)&long long v71 = v23;
      BYTE8(v71) = 0;
      *(void *)&long long v72 = a3;
      uint64_t v33 = sub_1C151A81C();
      swift_allocObject();
      id v34 = v32;
      uint64_t v35 = sub_1C151A7FC();
      swift_unknownObjectRelease_n();
      *((void *)&v72 + 1) = v33;
      v73[0] = MEMORY[0x1E4FAC030];
      *(void *)&long long v71 = v35;
      a6 = v62;
      id v13 = v63;
      uint64_t v10 = v61;
    }
    else
    {
      v73[0] = 0;
      long long v71 = 0u;
      long long v72 = 0u;
    }
    uint64_t v36 = sub_1C0EE5C48(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v38 = v36[2];
    unint64_t v37 = v36[3];
    if (v38 >= v37 >> 1) {
      uint64_t v36 = sub_1C0EE5C48((void *)(v37 > 1), v38 + 1, 1, v36);
    }
    void v36[2] = v38 + 1;
    sub_1C0E69308((uint64_t)&v71, (uint64_t)&v36[5 * v38 + 4]);
    uint64_t v69 = v36;
  }
  sub_1C0607A88(0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1527210;
  uint64_t v40 = swift_unknownObjectRetain();
  uint64_t v41 = _s5TeaUI15ContextMenuItemC8NewsFeedE6follow3tagACSgSo14FCTagProviding_pSg_tFZ_0(v40);
  swift_unknownObjectRelease();
  uint64_t v42 = 0;
  if (v41)
  {
    uint64_t v42 = sub_1C151A81C();
    uint64_t v43 = MEMORY[0x1E4FAC030];
  }
  else
  {
    uint64_t v43 = 0;
    *(void *)(inited + 40) = 0;
    *(void *)(inited + 48) = 0;
  }
  uint64_t v44 = v67;
  *(void *)(inited + 32) = v41;
  *(void *)(inited + 56) = v42;
  *(void *)(inited + 64) = v43;
  uint64_t v45 = swift_unknownObjectRetain();
  uint64_t v46 = _s5TeaUI15ContextMenuItemC8NewsFeedE5block3tagACSgSo14FCTagProviding_pSg_tFZ_0(v45);
  swift_unknownObjectRelease();
  uint64_t v47 = 0;
  if (v46)
  {
    uint64_t v47 = sub_1C151A81C();
    uint64_t v48 = MEMORY[0x1E4FAC030];
  }
  else
  {
    uint64_t v48 = 0;
    *(void *)(inited + 80) = 0;
    *(void *)(inited + 88) = 0;
  }
  *(void *)(inited + 72) = v46;
  *(void *)(inited + 96) = v47;
  *(void *)(inited + 104) = v48;
  sub_1C1049C54(inited);
  sub_1C0E69398(v44, (uint64_t)v70);
  if (v70[0])
  {
    sub_1C0E69454((uint64_t)v70, (uint64_t)&v71);
    if (v23)
    {
      uint64_t v49 = MEMORY[0x1C18C9C60]((char *)&v72 + 8);
      if (v49)
      {
        unint64_t v50 = (void *)v49;
        uint64_t v51 = MEMORY[0x1C18C9C60](v73);
        if (!v51)
        {
          swift_unknownObjectRetain();
          sub_1C0E694B0((uint64_t)&v71);
          swift_unknownObjectRelease();

          goto LABEL_27;
        }
        uint64_t v52 = (void *)v51;
        uint64_t v67 = *((void *)&v71 + 1);
        unint64_t v63 = v13;
        v70[0] = 0x3A3A776F6C6C6F66;
        v70[1] = 0xE800000000000000;
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        id v53 = objc_msgSend(v23, sel_identifier);
        sub_1C151E62C();
        uint64_t v54 = v10;

        sub_1C151E80C();
        swift_bridgeObjectRelease();
        sub_1C151CE2C();
        sub_1C151A2AC();
        swift_allocObject();
        id v55 = v52;
        id v56 = v50;
        id v13 = v63;
        sub_1C151A25C();
        swift_retain();
        sub_1C1519F9C();

        uint64_t v10 = v54;
        swift_unknownObjectRelease();
        swift_release();
        swift_release();
      }
    }
    sub_1C0E694B0((uint64_t)&v71);
  }
  else
  {
    sub_1BFF5134C((uint64_t)v70, (uint64_t (*)(void))sub_1C0E693FC);
  }
LABEL_27:
  if ((v68 & 1) != 0 && (sub_1BFFD07D4(8, v65) & 1) == 0)
  {
    if (v23)
    {
      id v57 = objc_msgSend(v23, sel_displayName);
      sub_1C151E62C();
    }
    (*(void (**)(char *, void, uint64_t))(v64 + 104))(v13, *MEMORY[0x1E4FAC1C0], v10);
    uint64_t v58 = sub_1C151AB2C();
    swift_allocObject();
    uint64_t v59 = sub_1C151AB0C();
    uint64_t v60 = MEMORY[0x1E4FAC1B0];
    *(void *)(a6 + 24) = v58;
    *(void *)(a6 + 32) = v60;
    swift_unknownObjectRelease();
    *(void *)a6 = v59;
  }
  else
  {
    sub_1C151AB2C();
    sub_1C151AB1C();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
}

uint64_t sub_1C0E5C960@<X0>(int a1@<W0>, char a2@<W1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  uint64_t v62 = a4;
  uint64_t v63 = a8;
  uint64_t v14 = sub_1C151B03C();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    int v60 = a1;
    sub_1C0E69504(0, &qword_1EB86FE08, (uint64_t (*)(uint64_t))sub_1C0E69568, MEMORY[0x1E4FBBE00]);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1C152C7E0;
    if (qword_1EB87CA88 != -1) {
      swift_once();
    }
    uint64_t v61 = a6;
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v19 = (void *)swift_unknownObjectRetain();
    sub_1C04B1BBC(v19);
    if (qword_1EB894618 != -1) {
      swift_once();
    }
    uint64_t v20 = (void *)qword_1EB894610;
    (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E4FAC3E0], v14);
    uint64_t v64 = a3;
    uint64_t v65 = 0;
    long long v66 = 0uLL;
    uint64_t v21 = v62;
    *(void *)&long long v67 = v62;
    *((void *)&v67 + 1) = a5;
    char v68 = 0;
    sub_1C151A81C();
    swift_allocObject();
    id v22 = v20;
    *(void *)(v18 + 32) = sub_1C151A7FC();
    if (v60)
    {
      uint64_t v23 = 0;
      *(void *)(v18 + 40) = 0;
    }
    else
    {
      *(void *)(v18 + 40) = sub_1C0D522C8(a3);
      uint64_t v23 = sub_1C0265D04();
    }
    uint64_t v37 = v61;
    *(void *)(v18 + 48) = v23;
    uint64_t v64 = a3;
    uint64_t v65 = v21;
    *(void *)&long long v66 = a5;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v38 = _s5TeaUI15ContextMenuItemC8NewsFeedE4like7contextAcD013LikingCommandC0V_tFZ_0();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    *(void *)(v18 + 56) = v38;
    uint64_t v64 = a3;
    uint64_t v65 = v21;
    *(void *)&long long v66 = a5;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v39 = _s5TeaUI15ContextMenuItemC8NewsFeedE7dislike7contextAcD013LikingCommandC0V_tFZ_0();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    *(void *)(v18 + 64) = v39;
    uint64_t v64 = (void *)v18;
    sub_1C151EBEC();
    uint64_t v40 = (uint64_t)v64;
    if (sub_1BFFD07D4(0, v37))
    {
      id v41 = objc_msgSend(a3, sel_identifier);
      uint64_t v42 = sub_1C151E62C();
      uint64_t v44 = v43;

      _s5TeaUI15ContextMenuItemC8NewsFeedE17removeFromHistory8headlineACSS_tFZ_0(v42, v44);
      uint64_t v45 = swift_bridgeObjectRelease();
      MEMORY[0x1C18C66D0](v45);
      if (v64[2] >= v64[3] >> 1) {
        sub_1C151EC8C();
      }
      sub_1C151ECEC();
      sub_1C151EBEC();
      uint64_t v40 = (uint64_t)v64;
    }
    sub_1C151AB2C();
    sub_1C0235588(v40);
    swift_bridgeObjectRelease();
    sub_1C151AB1C();
  }
  else
  {
    sub_1C0607A88(0);
    if (a7)
    {
      uint64_t v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_1C152A660;
      long long v67 = 0u;
      long long v66 = 0u;
      uint64_t v64 = a3;
      LOWORD(v65) = 0;
      BYTE2(v65) = 7;
      swift_unknownObjectRetain();
      uint64_t v25 = sub_1C0BFEB58((uint64_t)&v64);
      sub_1BFF5134C((uint64_t)&v64, (uint64_t (*)(void))sub_1C0025BE4);
      uint64_t v26 = sub_1C151AB2C();
      uint64_t v27 = MEMORY[0x1E4FAC1B0];
      uint64_t v61 = v26;
      *(void *)(v24 + 56) = v26;
      *(void *)(v24 + 64) = v27;
      *(void *)(v24 + 32) = v25;
      if (qword_1EB87CA88 != -1) {
        swift_once();
      }
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v28 = (void *)swift_unknownObjectRetain();
      sub_1C04B1BBC(v28);
      if (qword_1EB894618 != -1) {
        swift_once();
      }
      uint64_t v29 = (void *)qword_1EB894610;
      (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E4FAC3E0], v14);
      uint64_t v64 = a3;
      uint64_t v65 = 0;
      long long v66 = 0uLL;
      *(void *)&long long v67 = v62;
      *((void *)&v67 + 1) = a5;
      char v68 = 0;
      uint64_t v30 = sub_1C151A81C();
      swift_allocObject();
      id v31 = v29;
      uint64_t v32 = sub_1C151A7FC();
      uint64_t v33 = MEMORY[0x1E4FAC030];
      *(void *)(v24 + 96) = v30;
      *(void *)(v24 + 104) = v33;
      *(void *)(v24 + 72) = v32;
      uint64_t v34 = sub_1C0D522C8(a3);
      if (v34)
      {
        uint64_t v35 = MEMORY[0x1E4FAC030];
        uint64_t v36 = v30;
      }
      else
      {
        uint64_t v36 = 0;
        uint64_t v35 = 0;
        *(void *)(v24 + 120) = 0;
        *(void *)(v24 + 128) = 0;
      }
      *(void *)(v24 + 112) = v34;
      *(void *)(v24 + 136) = v36;
      *(void *)(v24 + 144) = v35;
      uint64_t v56 = sub_1C0265D04();
      *(void *)(v24 + 176) = v30;
      *(void *)(v24 + 184) = v33;
      *(void *)(v24 + 152) = v56;
    }
    else
    {
      uint64_t v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = xmmword_1C152C7F0;
      if (qword_1EB87CA88 != -1) {
        swift_once();
      }
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v47 = (void *)swift_unknownObjectRetain();
      sub_1C04B1BBC(v47);
      if (qword_1EB894618 != -1) {
        swift_once();
      }
      uint64_t v48 = (void *)qword_1EB894610;
      (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E4FAC3E0], v14);
      uint64_t v64 = a3;
      uint64_t v65 = 0;
      long long v66 = 0uLL;
      *(void *)&long long v67 = v62;
      *((void *)&v67 + 1) = a5;
      char v68 = 0;
      uint64_t v49 = sub_1C151A81C();
      swift_allocObject();
      id v50 = v48;
      uint64_t v51 = sub_1C151A7FC();
      uint64_t v52 = MEMORY[0x1E4FAC030];
      *(void *)(v46 + 56) = v49;
      *(void *)(v46 + 64) = v52;
      *(void *)(v46 + 32) = v51;
      uint64_t v53 = sub_1C0D522C8(a3);
      if (v53)
      {
        uint64_t v54 = MEMORY[0x1E4FAC030];
        uint64_t v55 = v49;
      }
      else
      {
        uint64_t v55 = 0;
        uint64_t v54 = 0;
        *(void *)(v46 + 80) = 0;
        *(void *)(v46 + 88) = 0;
      }
      *(void *)(v46 + 72) = v53;
      *(void *)(v46 + 96) = v55;
      *(void *)(v46 + 104) = v54;
      sub_1C151AB2C();
      uint64_t v57 = sub_1C0265D04();
      *(void *)(v46 + 136) = v49;
      *(void *)(v46 + 144) = v52;
      *(void *)(v46 + 112) = v57;
    }
    sub_1C151AB1C();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0E5D0D8(char a1, uint64_t a2, char a3)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  if (a1)
  {
    uint64_t v5 = _s5TeaUI15ContextMenuItemC8NewsFeedE5AudioV9listenNow8headline14ignorePlaylistACSgSo19FCHeadlineProviding_p_SbtFZ_0(a2, 1);
    if (v5)
    {
      uint64_t v6 = v5;
      *((void *)&v24 + 1) = sub_1C151A81C();
      uint64_t v25 = MEMORY[0x1E4FAC030];
      *(void *)&long long v23 = v6;
    }
    else
    {
      uint64_t v25 = 0;
      long long v24 = 0u;
      long long v23 = 0u;
    }
    uint64_t v9 = sub_1C0EE5C48(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v11 = v9[2];
    unint64_t v10 = v9[3];
    if (v11 >= v10 >> 1) {
      uint64_t v9 = sub_1C0EE5C48((void *)(v10 > 1), v11 + 1, 1, v9);
    }
    _OWORD v9[2] = v11 + 1;
    sub_1C0E69308((uint64_t)&v23, (uint64_t)&v9[5 * v11 + 4]);
    if ((a3 & 1) == 0)
    {
      sub_1C0607A88(0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C1527210;
      uint64_t v13 = _s5TeaUI15ContextMenuItemC8NewsFeedE5AudioV10listenNext8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(a2);
      uint64_t v14 = v13;
      if (v13)
      {
        uint64_t v13 = sub_1C151A81C();
        uint64_t v15 = MEMORY[0x1E4FAC030];
      }
      else
      {
        uint64_t v15 = 0;
        *(void *)(inited + 40) = 0;
        *(void *)(inited + 48) = 0;
      }
      *(void *)(inited + 32) = v14;
      *(void *)(inited + 56) = v13;
      *(void *)(inited + 64) = v15;
      uint64_t v19 = _s5TeaUI15ContextMenuItemC8NewsFeedE5AudioV11listenLater8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(a2);
      uint64_t v20 = v19;
      if (v19)
      {
        uint64_t v19 = sub_1C151A81C();
        uint64_t v21 = MEMORY[0x1E4FAC030];
      }
      else
      {
        uint64_t v21 = 0;
        *(void *)(inited + 80) = 0;
        *(void *)(inited + 88) = 0;
      }
      *(void *)(inited + 72) = v20;
      *(void *)(inited + 96) = v19;
      *(void *)(inited + 104) = v21;
      sub_1C1049C54(inited);
    }
  }
  else
  {
    uint64_t v7 = _s5TeaUI15ContextMenuItemC8NewsFeedE5AudioV07previewH08headlineACSgSo19FCHeadlineProviding_p_tFZ_0(a2);
    if (v7)
    {
      uint64_t v8 = v7;
      *((void *)&v24 + 1) = sub_1C151A81C();
      uint64_t v25 = MEMORY[0x1E4FAC030];
      *(void *)&long long v23 = v8;
    }
    else
    {
      uint64_t v25 = 0;
      long long v24 = 0u;
      long long v23 = 0u;
    }
    uint64_t v16 = sub_1C0EE5C48(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v18 = v16[2];
    unint64_t v17 = v16[3];
    if (v18 >= v17 >> 1) {
      uint64_t v16 = sub_1C0EE5C48((void *)(v17 > 1), v18 + 1, 1, v16);
    }
    void v16[2] = v18 + 1;
    sub_1C0E69308((uint64_t)&v23, (uint64_t)&v16[5 * v18 + 4]);
  }
  sub_1C151AB2C();
  sub_1C151AB1C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0E5D358(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v45 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = sub_1C151B03C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v41 = (void *)MEMORY[0x1E4FBC860];
  if ((a1 & 1) == 0)
  {
    sub_1C0607A88(0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1527210;
    uint64_t v11 = _s5TeaUI15ContextMenuItemC8NewsFeedE5AudioV10listenNext8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(a2);
    uint64_t v12 = v11;
    if (v11)
    {
      uint64_t v11 = sub_1C151A81C();
      uint64_t v13 = MEMORY[0x1E4FAC030];
    }
    else
    {
      uint64_t v13 = 0;
      *(void *)(inited + 40) = 0;
      *(void *)(inited + 48) = 0;
    }
    *(void *)(inited + 32) = v12;
    *(void *)(inited + 56) = v11;
    *(void *)(inited + 64) = v13;
    uint64_t v14 = _s5TeaUI15ContextMenuItemC8NewsFeedE5AudioV11listenLater8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(a2);
    uint64_t v15 = v14;
    if (v14)
    {
      uint64_t v14 = sub_1C151A81C();
      uint64_t v16 = MEMORY[0x1E4FAC030];
    }
    else
    {
      uint64_t v16 = 0;
      *(void *)(inited + 80) = 0;
      *(void *)(inited + 88) = 0;
    }
    *(void *)(inited + 72) = v15;
    *(void *)(inited + 96) = v14;
    *(void *)(inited + 104) = v16;
    sub_1C1049C54(inited);
  }
  uint64_t v40 = a3;
  uint64_t v17 = qword_1EB87CAF0;
  swift_unknownObjectRetain();
  if (v17 != -1) {
    swift_once();
  }
  uint64_t v18 = MEMORY[0x1E4FAC030];
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v20 = self;
  swift_unknownObjectRetain();
  swift_retain();
  id v21 = objc_msgSend(v20, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  if (qword_1EA194A70 != -1) {
    swift_once();
  }
  id v22 = (void *)qword_1EA1AA2D0;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FAC3E0], v6);
  *(void *)&long long v42 = a2;
  uint64_t v23 = sub_1C151A81C();
  swift_allocObject();
  id v24 = v22;
  uint64_t v25 = sub_1C151A7FC();
  swift_unknownObjectRelease();
  *((void *)&v43 + 1) = v23;
  uint64_t v44 = v18;
  *(void *)&long long v42 = v25;
  uint64_t v26 = v41;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v26 = sub_1C0EE5C48(0, v26[2] + 1, 1, v26);
  }
  uint64_t v27 = v40;
  unint64_t v29 = v26[2];
  unint64_t v28 = v26[3];
  if (v29 >= v28 >> 1) {
    uint64_t v26 = sub_1C0EE5C48((void *)(v28 > 1), v29 + 1, 1, v26);
  }
  v26[2] = v29 + 1;
  sub_1C0E69308((uint64_t)&v42, (uint64_t)&v26[5 * v29 + 4]);
  if (sub_1BFFD07D4(2, v27))
  {
    uint64_t v30 = _s5TeaUI15ContextMenuItemC8NewsFeedE5AudioV6remove8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(a2);
    if (v30)
    {
      *((void *)&v43 + 1) = v23;
      uint64_t v44 = v18;
      *(void *)&long long v42 = v30;
    }
    else
    {
      uint64_t v44 = 0;
      long long v42 = 0u;
      long long v43 = 0u;
    }
    unint64_t v32 = v26[2];
    unint64_t v31 = v26[3];
    if (v32 >= v31 >> 1) {
      uint64_t v26 = sub_1C0EE5C48((void *)(v31 > 1), v32 + 1, 1, v26);
    }
    v26[2] = v32 + 1;
    sub_1C0E69308((uint64_t)&v42, (uint64_t)&v26[5 * v32 + 4]);
  }
  if (sub_1BFFD07D4(3, v27))
  {
    uint64_t v33 = _s5TeaUI15ContextMenuItemC8NewsFeedE5AudioV010removeFromH7History8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(a2);
    if (v33)
    {
      *((void *)&v43 + 1) = v23;
      uint64_t v44 = v18;
      *(void *)&long long v42 = v33;
    }
    else
    {
      uint64_t v44 = 0;
      long long v42 = 0u;
      long long v43 = 0u;
    }
    unint64_t v35 = v26[2];
    unint64_t v34 = v26[3];
    if (v35 >= v34 >> 1) {
      uint64_t v26 = sub_1C0EE5C48((void *)(v34 > 1), v35 + 1, 1, v26);
    }
    v26[2] = v35 + 1;
    sub_1C0E69308((uint64_t)&v42, (uint64_t)&v26[5 * v35 + 4]);
  }
  if (sub_1BFFD07D4(4, v27))
  {
    uint64_t v36 = _s5TeaUI15ContextMenuItemC8NewsFeedE5AudioV010removeFromH8Playlist8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(a2);
    if (v36)
    {
      *((void *)&v43 + 1) = v23;
      uint64_t v44 = v18;
      *(void *)&long long v42 = v36;
    }
    else
    {
      uint64_t v44 = 0;
      long long v42 = 0u;
      long long v43 = 0u;
    }
    unint64_t v38 = v26[2];
    unint64_t v37 = v26[3];
    if (v38 >= v37 >> 1) {
      uint64_t v26 = sub_1C0EE5C48((void *)(v37 > 1), v38 + 1, 1, v26);
    }
    v26[2] = v38 + 1;
    sub_1C0E69308((uint64_t)&v42, (uint64_t)&v26[5 * v38 + 4]);
  }
  sub_1C151AB2C();
  sub_1C151AB1C();
  return swift_bridgeObjectRelease();
}

BOOL static ContextMenu.ItemOptions.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ContextMenu.ItemOptions.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t ContextMenu.ItemOptions.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t ContextMenuItemOptionsProviding.contextMenuItemOptions.getter()
{
  return MEMORY[0x1E4FBC870];
}

uint64_t ContextMenuContext.contextMenuItemOptionsWithAccess(_:)(char a1, uint64_t a2)
{
  uint64_t v3 = ContextMenuContext.contextMenuItemOptions.getter(a2);
  if (a1) {
    uint64_t v4 = &unk_1F1B8A060;
  }
  else {
    uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v5 = sub_1BFFEEC2C((uint64_t)v4, v3);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t ContextMenuContext.contextMenuItemOptions.getter(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v26 = (char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v6 = v5;
  v24[1] = v5;
  uint64_t v25 = sub_1C151B1CC();
  uint64_t v7 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v9 = (char *)v24 - v8;
  uint64_t v10 = sub_1C151677C();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a1 + 64);
  v29[0] = *(void *)(a1 + 32);
  v29[1] = v6;
  v29[2] = v14;
  uint64_t v30 = v4;
  uint64_t v15 = sub_1C151A79C();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)v24 - v17;
  sub_1C1519D9C();
  sub_1C1519DCC();
  sub_1C151A7AC();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  uint64_t v19 = v25;
  sub_1C151B1BC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v19);
  sub_1BFC845BC(0, &qword_1EA1A7DB0);
  if (swift_dynamicCast())
  {
    sub_1BFC773DC(v27, (uint64_t)v29);
    uint64_t v20 = v30;
    uint64_t v21 = v31;
    __swift_project_boxed_opaque_existential_1(v29, v30);
    uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(v20, v21);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  }
  else
  {
    uint64_t v28 = 0;
    memset(v27, 0, sizeof(v27));
    sub_1C0E68E9C((uint64_t)v27);
    return MEMORY[0x1E4FBC870];
  }
  return v22;
}

uint64_t sub_1C0E5DD0C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v6 = sub_1BFFD07D4(9, a4);
  char v30 = sub_1BFFD07D4(12, a4);
  char v31 = sub_1BFFD07D4(13, a4);
  unsigned __int8 v36 = sub_1BFFD07D4(11, a4);
  char v32 = sub_1BFFD07D4(10, a4);
  uint64_t v7 = self;
  id v8 = objc_msgSend(v7, sel_mainBundle);
  id v9 = objc_msgSend(v8, sel_bundleIdentifier);

  if (v9)
  {
    uint64_t v10 = sub_1C151E62C();
    uint64_t v12 = v11;

    if (v10 == 0x6C7070612E6D6F63 && v12 == 0xEE007377656E2E65)
    {
      swift_bridgeObjectRelease();
      LOBYTE(v9) = 1;
    }
    else
    {
      LOBYTE(v9) = sub_1C1520A9C();
      swift_bridgeObjectRelease();
    }
  }
  id v14 = objc_msgSend(v7, sel_mainBundle);
  id v15 = objc_msgSend(v14, sel_bundleIdentifier);

  if (v15)
  {
    uint64_t v16 = sub_1C151E62C();
    uint64_t v18 = v17;

    if (v16 == 0xD000000000000010 && v18 == 0x80000001C1629830)
    {
      swift_bridgeObjectRelease();
      char v19 = 1;
    }
    else
    {
      char v19 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    char v19 = 0;
  }
  if (v6)
  {
    sub_1C0607A88(0);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1C152A660;
    char v21 = v19 & 1;
    sub_1C0E5D358(v21, (uint64_t)a1, a4);
    sub_1C0E5BE78(a4, a1, v20 + 72);
    char v22 = v9 & 1;
    sub_1C0E5C960(1, v9 & 1, a1, a2, a3, a4, v21, v20 + 112);
    char v23 = v32 | v36;
LABEL_19:
    uint64_t v25 = v20 + 152;
    int v26 = v23 & 1;
    char v27 = v22;
    goto LABEL_20;
  }
  sub_1C0607A88(0);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1C152A660;
  sub_1C0E5BE78(a4, a1, v20 + 32);
  if ((v9 & v36 & 1) == 0)
  {
    char v28 = v19 & 1;
    sub_1C0E5D0D8(v31 & 1, (uint64_t)a1, v28);
    char v22 = v9 & 1;
    sub_1C0E5C960(0, v9 & 1, a1, a2, a3, a4, v28, v20 + 112);
    char v23 = v32 | v36 | v30;
    goto LABEL_19;
  }
  char v24 = v19 & 1;
  sub_1C0E5C960(0, 1, a1, a2, a3, a4, v24, v20 + 72);
  sub_1C0E5D0D8(v31 & 1, (uint64_t)a1, v24);
  uint64_t v25 = v20 + 152;
  int v26 = 1;
  char v27 = 1;
LABEL_20:
  sub_1C0E5C070(v26, v27, a1, a4, a5, v25);
  return v20;
}

uint64_t sub_1C0E5E0D8(uint64_t a1, uint64_t a2)
{
  if ((sub_1BFFD07D4(11, a2) & 1) == 0) {
    return MEMORY[0x1E4FBC860];
  }
  id v3 = objc_msgSend(self, sel_mainBundle);
  id v4 = objc_msgSend(v3, sel_bundleIdentifier);

  if (!v4) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v5 = sub_1C151E62C();
  uint64_t v7 = v6;

  BOOL v8 = v5 == 0x6C7070612E6D6F63 && v7 == 0xEE007377656E2E65;
  if (v8 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    sub_1C0607A88(0);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1C152C7F0;
    uint64_t v10 = _s5TeaUI15ContextMenuItemC8NewsFeedE5AudioV9listenNow8headline14ignorePlaylistACSgSo19FCHeadlineProviding_p_SbtFZ_0(a1, 1);
    uint64_t v11 = v10;
    if (v10)
    {
      uint64_t v10 = sub_1C151A81C();
      uint64_t v12 = MEMORY[0x1E4FAC030];
    }
    else
    {
      uint64_t v12 = 0;
      *(void *)(v9 + 40) = 0;
      *(void *)(v9 + 48) = 0;
    }
    *(void *)(v9 + 32) = v11;
    *(void *)(v9 + 56) = v10;
    *(void *)(v9 + 64) = v12;
    uint64_t v13 = _s5TeaUI15ContextMenuItemC8NewsFeedE5AudioV10listenNext8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(a1);
    uint64_t v14 = v13;
    if (v13)
    {
      uint64_t v13 = sub_1C151A81C();
      uint64_t v15 = MEMORY[0x1E4FAC030];
    }
    else
    {
      uint64_t v15 = 0;
      *(void *)(v9 + 80) = 0;
      *(void *)(v9 + 88) = 0;
    }
    *(void *)(v9 + 72) = v14;
    *(void *)(v9 + 96) = v13;
    *(void *)(v9 + 104) = v15;
    uint64_t v16 = _s5TeaUI15ContextMenuItemC8NewsFeedE5AudioV11listenLater8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(a1);
    if (v16)
    {
      uint64_t v17 = v16;
      uint64_t v18 = MEMORY[0x1E4FAC030];
      *(void *)(v9 + 136) = sub_1C151A81C();
      *(void *)(v9 + 144) = v18;
      *(void *)(v9 + 112) = v17;
    }
    else
    {
      *(void *)(v9 + 144) = 0;
      *(_OWORD *)(v9 + 112) = 0u;
      *(_OWORD *)(v9 + 128) = 0u;
    }
    return v9;
  }
  if (v5 != 0xD000000000000010 || v7 != 0x80000001C1629830)
  {
    char v19 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v19) {
      goto LABEL_21;
    }
    return MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
LABEL_21:
  sub_1C0607A88(0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C1527210;
  uint64_t v20 = _s5TeaUI15ContextMenuItemC8NewsFeedE5AudioV9listenNow8headline14ignorePlaylistACSgSo19FCHeadlineProviding_p_SbtFZ_0(a1, 1);
  uint64_t v21 = v20;
  if (v20)
  {
    uint64_t v20 = sub_1C151A81C();
    uint64_t v22 = MEMORY[0x1E4FAC030];
  }
  else
  {
    uint64_t v22 = 0;
    *(void *)(v9 + 40) = 0;
    *(void *)(v9 + 48) = 0;
  }
  *(void *)(v9 + 32) = v21;
  *(void *)(v9 + 56) = v20;
  *(void *)(v9 + 64) = v22;
  long long v30 = 0u;
  long long v31 = 0u;
  uint64_t v27 = a1;
  __int16 v28 = 0;
  char v29 = 7;
  swift_unknownObjectRetain();
  uint64_t v24 = sub_1C0BFEB58((uint64_t)&v27);
  sub_1BFF5134C((uint64_t)&v27, (uint64_t (*)(void))sub_1C0025BE4);
  uint64_t v25 = sub_1C151AB2C();
  uint64_t v26 = MEMORY[0x1E4FAC1B0];
  *(void *)(v9 + 96) = v25;
  *(void *)(v9 + 104) = v26;
  *(void *)(v9 + 72) = v24;
  return v9;
}

void *sub_1C0E5E3EC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v126 = a5;
  uint64_t v130 = a4;
  uint64_t v128 = a2;
  v137[1] = *MEMORY[0x1E4F143B8];
  uint64_t v7 = sub_1C151CE3C();
  MEMORY[0x1F4188790](v7 - 8);
  v115[0] = (char *)v115 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FAC5E8];
  sub_1C0E695DC(0, &qword_1EB8945D8, (uint64_t (*)(void))sub_1C0067870, (uint64_t)&type metadata for ManageChannelNotificationsCommandState, MEMORY[0x1E4FAC5E8]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v125 = (char *)v115 - v11;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FAC360];
  sub_1C0E695DC(0, &qword_1EB8945C8, (uint64_t (*)(void))sub_1C0067870, (uint64_t)&type metadata for ManageChannelNotificationsCommandState, MEMORY[0x1E4FAC360]);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v124 = (char *)v115 - v14;
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FAC368];
  sub_1C0E695DC(0, &qword_1EB8945D0, (uint64_t (*)(void))sub_1C0067870, (uint64_t)&type metadata for ManageChannelNotificationsCommandState, MEMORY[0x1E4FAC368]);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v123 = (char *)v115 - v17;
  sub_1C0E695DC(0, (unint64_t *)&unk_1EB86FE60, (uint64_t (*)(void))sub_1C0078974, (uint64_t)&type metadata for BlockingCommandState, v9);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v121 = (char *)v115 - v19;
  sub_1C0E695DC(0, (unint64_t *)&unk_1EB86FE28, (uint64_t (*)(void))sub_1C0078974, (uint64_t)&type metadata for BlockingCommandState, v12);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v120 = (char *)v115 - v21;
  sub_1C0E695DC(0, (unint64_t *)&unk_1EB86FE40, (uint64_t (*)(void))sub_1C0078974, (uint64_t)&type metadata for BlockingCommandState, v15);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v119 = (char *)v115 - v23;
  uint64_t v24 = sub_1C151B03C();
  uint64_t v116 = *(void *)(v24 - 8);
  uint64_t v117 = v24;
  MEMORY[0x1F4188790](v24);
  long long v118 = (char *)v115 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v26 = self;
  id v27 = objc_msgSend(v26, sel_currentDevice);
  id v28 = objc_msgSend(v27, sel_userInterfaceIdiom);

  if (v28 == (id)5)
  {
    sub_1C0607A88(0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1527210;
    uint64_t v30 = _s5TeaUI15ContextMenuItemC8NewsFeedE12openInNewTab5issueACSgSo7FCIssueC_tFZ_0(a1);
    uint64_t v31 = v30;
    char v32 = a1;
    if (v30)
    {
      uint64_t v30 = sub_1C151A81C();
      uint64_t v33 = MEMORY[0x1E4FAC030];
    }
    else
    {
      uint64_t v33 = 0;
      *(void *)(inited + 40) = 0;
      *(void *)(inited + 48) = 0;
    }
    uint64_t v36 = MEMORY[0x1E4FAC030];
    uint64_t v37 = a3;
    *(void *)(inited + 32) = v31;
    *(void *)(inited + 56) = v30;
    *(void *)(inited + 64) = v33;
    uint64_t v40 = _s5TeaUI15ContextMenuItemC8NewsFeedE15openInNewWindow5issueACSgSo7FCIssueC_tFZ_0(v32);
    uint64_t v41 = v40;
    if (v40)
    {
      uint64_t v40 = sub_1C151A81C();
      uint64_t v42 = MEMORY[0x1E4FAC030];
    }
    else
    {
      uint64_t v42 = 0;
      *(void *)(inited + 80) = 0;
      *(void *)(inited + 88) = 0;
    }
    *(void *)(inited + 72) = v41;
    *(void *)(inited + 96) = v40;
    *(void *)(inited + 104) = v42;
    sub_1C1049C54(inited);
  }
  else
  {
    id v34 = objc_msgSend(v26, sel_currentDevice);
    id v35 = objc_msgSend(v34, sel_userInterfaceIdiom);

    char v32 = a1;
    uint64_t v36 = MEMORY[0x1E4FAC030];
    uint64_t v37 = a3;
    if (v35 == (id)1)
    {
      uint64_t v38 = _s5TeaUI15ContextMenuItemC8NewsFeedE15openInNewWindow5issueACSgSo7FCIssueC_tFZ_0(v32);
      if (v38)
      {
        uint64_t v39 = v38;
        *((void *)&v136 + 1) = sub_1C151A81C();
        v137[0] = v36;
        *(void *)&long long v135 = v39;
      }
      else
      {
        v137[0] = 0;
        long long v135 = 0u;
        long long v136 = 0u;
      }
      long long v43 = sub_1C0EE5C48(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v45 = v43[2];
      unint64_t v44 = v43[3];
      if (v45 >= v44 >> 1) {
        long long v43 = sub_1C0EE5C48((void *)(v44 > 1), v45 + 1, 1, v43);
      }
      _OWORD v43[2] = v45 + 1;
      sub_1C0E69308((uint64_t)&v135, (uint64_t)&v43[5 * v45 + 4]);
      uint64_t v133 = v43;
    }
  }
  if (sub_1BFFD07D4(16, v130))
  {
    swift_bridgeObjectRelease();
    uint64_t v46 = (void *)MEMORY[0x1E4FBC860];
  }
  else
  {
    sub_1C151AB2C();
    sub_1C151AB1C();
    swift_bridgeObjectRelease();
    uint64_t v46 = sub_1C0EE5C48(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v48 = v46[2];
    unint64_t v47 = v46[3];
    if (v48 >= v47 >> 1) {
      uint64_t v46 = sub_1C0EE5C48((void *)(v47 > 1), v48 + 1, 1, v46);
    }
    v46[2] = v48 + 1;
    sub_1C0E69308((uint64_t)&v135, (uint64_t)&v46[5 * v48 + 4]);
  }
  sub_1C0607A88(0);
  uint64_t v127 = v49;
  uint64_t v50 = swift_allocObject();
  long long v122 = xmmword_1C1527210;
  *(_OWORD *)(v50 + 16) = xmmword_1C1527210;
  LOBYTE(v135) = 0;
  uint64_t v51 = _s5TeaUI15ContextMenuItemC8NewsFeedE5share5issue0hC0ACSgSo7FCIssueC_AD012CommandShareC0OtFZ_0(v32, (unsigned __int8 *)&v135);
  uint64_t v52 = v51;
  if (v51)
  {
    uint64_t v51 = sub_1C151A81C();
    uint64_t v53 = MEMORY[0x1E4FAC030];
  }
  else
  {
    uint64_t v53 = 0;
    *(void *)(v50 + 40) = 0;
    *(void *)(v50 + 48) = 0;
  }
  *(void *)(v50 + 32) = v52;
  *(void *)(v50 + 56) = v51;
  *(void *)(v50 + 64) = v53;
  uint64_t v54 = _s5TeaUI15ContextMenuItemC8NewsFeedE9copyIssue5issueACSo7FCIssueC_tFZ_0(v32);
  uint64_t v55 = sub_1C151A81C();
  *(void *)(v50 + 96) = v55;
  *(void *)(v50 + 104) = v36;
  *(void *)(v50 + 72) = v54;
  uint64_t v132 = v50;
  if (v37 && (sub_1BFFD07D4(5, v130) & 1) != 0)
  {
    uint64_t v56 = swift_unknownObjectRetain();
    uint64_t v57 = _s5TeaUI15ContextMenuItemC8NewsFeedE6report8headlineACSgSo19FCHeadlineProviding_pSg_tFZ_0(v56);
    if (v57)
    {
      *((void *)&v136 + 1) = v55;
      v137[0] = v36;
      *(void *)&long long v135 = v57;
    }
    else
    {
      v137[0] = 0;
      long long v135 = 0u;
      long long v136 = 0u;
    }
    unint64_t v59 = *(void *)(v50 + 16);
    unint64_t v58 = *(void *)(v50 + 24);
    if (v59 >= v58 >> 1) {
      uint64_t v50 = (uint64_t)sub_1C0EE5C48((void *)(v58 > 1), v59 + 1, 1, (void *)v50);
    }
    *(void *)(v50 + 16) = v59 + 1;
    sub_1C0E69308((uint64_t)&v135, v50 + 40 * v59 + 32);
    swift_unknownObjectRelease();
    uint64_t v132 = v50;
  }
  if ((sub_1BFFD07D4(15, v130) & 1) == 0)
  {
    uint64_t v60 = swift_initStackObject();
    *(_OWORD *)(v60 + 16) = v122;
    uint64_t v61 = _s5TeaUI15ContextMenuItemC8NewsFeedE8download5issueACSo7FCIssueC_tFZ_0(v32);
    *(void *)(v60 + 56) = v55;
    *(void *)(v60 + 64) = v36;
    *(void *)(v60 + 32) = v61;
    uint64_t v62 = _s5TeaUI15ContextMenuItemC8NewsFeedE17removeIssuePrompt5issue7actionsACSgSo7FCIssueCSg_SayAA8CommandsCADE12RemoveIssuesV0J0C6ActionOGtFZ_0(v32, v128);
    if (v62)
    {
      uint64_t v63 = MEMORY[0x1E4FAC030];
      uint64_t v64 = v55;
    }
    else
    {
      uint64_t v64 = 0;
      uint64_t v63 = 0;
      *(void *)(v60 + 80) = 0;
      *(void *)(v60 + 88) = 0;
    }
    *(void *)(v60 + 72) = v62;
    *(void *)(v60 + 96) = v64;
    *(void *)(v60 + 104) = v63;
    sub_1C1049C54(v60);
  }
  uint64_t v65 = sub_1C151AB2C();
  sub_1C151AB1C();
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v115[1] = v65;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    uint64_t v46 = sub_1C0EE5C48(0, v46[2] + 1, 1, v46);
  }
  unint64_t v68 = v46[2];
  unint64_t v67 = v46[3];
  id v129 = v32;
  if (v68 >= v67 >> 1) {
    uint64_t v46 = sub_1C0EE5C48((void *)(v67 > 1), v68 + 1, 1, v46);
  }
  uint64_t v128 = v55;
  v46[2] = v68 + 1;
  sub_1C0E69308((uint64_t)&v135, (uint64_t)&v46[5 * v68 + 4]);
  if (sub_1BFFD07D4(19, v130))
  {
    id v69 = objc_msgSend(v129, sel_sourceChannel);
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    long long v71 = self;
    swift_unknownObjectRetain();
    id v72 = objc_msgSend(v71, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1C1515B8C();

    if (qword_1EB87C910 != -1) {
      swift_once();
    }
    uint64_t v73 = qword_1EB86FF68;
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_retain();
    if (v73 != -1) {
      swift_once();
    }
    uint64_t v74 = (void *)qword_1EB86FF58;
    (*(void (**)(char *, void, uint64_t))(v116 + 104))(v118, *MEMORY[0x1E4FAC3E0], v117);
    *(void *)&long long v135 = v69;
    BYTE8(v135) = 1;
  }
  else
  {
    id v75 = objc_msgSend(v129, sel_sourceChannel);
    swift_getObjectType();
    type metadata accessor for Localized();
    uint64_t v76 = swift_getObjCClassFromMetadata();
    uint64_t v77 = self;
    swift_unknownObjectRetain();
    id v78 = objc_msgSend(v77, sel_bundleForClass_, v76);
    sub_1C1515B8C();

    sub_1C0222994(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v79 = swift_allocObject();
    *(_OWORD *)(v79 + 16) = xmmword_1C1529AE0;
    uint64_t v80 = FCTagProviding.localizedTagType.getter();
    uint64_t v82 = v81;
    *(void *)(v79 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v79 + 64) = sub_1BFE9C558();
    *(void *)(v79 + 32) = v80;
    *(void *)(v79 + 40) = v82;
    sub_1C151E66C();
    swift_bridgeObjectRelease();
    if (qword_1EB87C910 != -1) {
      swift_once();
    }
    uint64_t v83 = qword_1EB86FF68;
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_retain();
    if (v83 != -1) {
      swift_once();
    }
    uint64_t v74 = (void *)qword_1EB86FF58;
    (*(void (**)(char *, void, uint64_t))(v116 + 104))(v118, *MEMORY[0x1E4FAC3E0], v117);
    *(void *)&long long v135 = v75;
    BYTE8(v135) = 0;
  }
  *(void *)&long long v136 = v37;
  uint64_t v84 = v128;
  swift_allocObject();
  id v85 = v74;
  uint64_t v86 = sub_1C151A7FC();
  swift_unknownObjectRelease_n();
  *((void *)&v136 + 1) = v84;
  v137[0] = MEMORY[0x1E4FAC030];
  *(void *)&long long v135 = v86;
  uint64_t v87 = sub_1C0EE5C48(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v89 = v87[2];
  unint64_t v88 = v87[3];
  if (v89 >= v88 >> 1) {
    uint64_t v87 = sub_1C0EE5C48((void *)(v88 > 1), v89 + 1, 1, v87);
  }
  id v90 = v129;
  v87[2] = v89 + 1;
  sub_1C0E69308((uint64_t)&v135, (uint64_t)&v87[5 * v89 + 4]);
  uint64_t v131 = v87;
  uint64_t v91 = swift_initStackObject();
  *(_OWORD *)(v91 + 16) = xmmword_1C152C7F0;
  uint64_t v92 = _s5TeaUI15ContextMenuItemC8NewsFeedE6follow3tagACSgSo14FCTagProviding_pSg_tFZ_0((uint64_t)objc_msgSend(v90, sel_sourceChannel));
  swift_unknownObjectRelease();
  *(void *)&long long v122 = v46;
  if (v92)
  {
    uint64_t v93 = MEMORY[0x1E4FAC030];
  }
  else
  {
    uint64_t v84 = 0;
    uint64_t v93 = 0;
    *(void *)(v91 + 40) = 0;
    *(void *)(v91 + 48) = 0;
  }
  *(void *)(v91 + 32) = v92;
  *(void *)(v91 + 56) = v84;
  *(void *)(v91 + 64) = v93;
  id v94 = objc_msgSend(v90, sel_sourceChannel);
  uint64_t v95 = qword_1EB87B188;
  swift_unknownObjectRetain();
  uint64_t v96 = (void *)v91;
  if (v95 != -1) {
    swift_once();
  }
  LOBYTE(v135) = 1;
  *(void *)(swift_allocObject() + 16) = v94;
  sub_1C0078974();
  swift_unknownObjectRetain();
  swift_retain();
  sub_1C151AEBC();
  LOBYTE(v135) = 1;
  sub_1C151AE9C();
  sub_1C151B2DC();
  *(void *)&long long v135 = v94;
  uint64_t v97 = v128;
  swift_allocObject();
  uint64_t v98 = sub_1C151A80C();
  swift_unknownObjectRelease();
  v96[12] = v97;
  v96[13] = MEMORY[0x1E4FAC030];
  v96[9] = v98;
  id v99 = objc_msgSend(v129, sel_sourceChannel);
  uint64_t v100 = qword_1EB85F568;
  swift_unknownObjectRetain();
  if (v100 != -1) {
    swift_once();
  }
  LOBYTE(v135) = 0;
  sub_1C0067870();
  swift_unknownObjectRetain();
  swift_retain();
  sub_1C151AEBC();
  LOBYTE(v135) = 0;
  sub_1C151AE9C();
  sub_1C151B2DC();
  *(void *)&long long v135 = v99;
  swift_allocObject();
  uint64_t v101 = sub_1C151A80C();
  swift_unknownObjectRelease_n();
  v96[17] = v97;
  v96[18] = MEMORY[0x1E4FAC030];
  v96[14] = v101;
  sub_1C1049C54((uint64_t)v96);
  sub_1C0E69398(v126, (uint64_t)v134);
  uint64_t v102 = v130;
  if (v134[0])
  {
    sub_1C0E69454((uint64_t)v134, (uint64_t)&v135);
    uint64_t v103 = MEMORY[0x1C18C9C60]((char *)&v136 + 8);
    uint64_t v104 = (void *)v122;
    if (!v103)
    {
LABEL_65:
      sub_1C0E694B0((uint64_t)&v135);
      goto LABEL_68;
    }
    uint64_t v105 = (void *)v103;
    uint64_t v106 = MEMORY[0x1C18C9C60](v137);
    if (v106)
    {
      uint64_t v107 = (void *)v106;
      swift_bridgeObjectRetain();
      id v108 = objc_msgSend(v129, sel_sourceChannel);
      v134[0] = 0x3A3A776F6C6C6F66;
      v134[1] = 0xE800000000000000;
      id v109 = objc_msgSend(v108, sel_identifier);
      sub_1C151E62C();

      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151CE2C();
      swift_unknownObjectRelease();
      sub_1C151A2AC();
      swift_allocObject();
      id v110 = v107;
      id v111 = v105;
      sub_1C151A25C();
      swift_retain();
      sub_1C1519F9C();

      uint64_t v102 = v130;
      swift_release();
      swift_release();
      goto LABEL_65;
    }
    sub_1C0E694B0((uint64_t)&v135);
  }
  else
  {
    sub_1BFF5134C((uint64_t)v134, (uint64_t (*)(void))sub_1C0E693FC);
    uint64_t v104 = (void *)v122;
  }
LABEL_68:
  if (sub_1BFFD07D4(20, v102))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C151AB1C();
    swift_bridgeObjectRelease();
    unint64_t v113 = v104[2];
    unint64_t v112 = v104[3];
    if (v113 >= v112 >> 1) {
      uint64_t v104 = sub_1C0EE5C48((void *)(v112 > 1), v113 + 1, 1, v104);
    }
    v104[2] = v113 + 1;
    sub_1C0E69308((uint64_t)&v135, (uint64_t)&v104[5 * v113 + 4]);
  }
  return v104;
}

void *sub_1C0E5F648(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v90 = a4;
  uint64_t v99 = a3;
  v104[2] = *MEMORY[0x1E4F143B8];
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FAC5E8];
  sub_1C0E695DC(0, &qword_1EB8945D8, (uint64_t (*)(void))sub_1C0067870, (uint64_t)&type metadata for ManageChannelNotificationsCommandState, MEMORY[0x1E4FAC5E8]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v98 = (char *)v89 - v8;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FAC360];
  sub_1C0E695DC(0, &qword_1EB8945C8, (uint64_t (*)(void))sub_1C0067870, (uint64_t)&type metadata for ManageChannelNotificationsCommandState, MEMORY[0x1E4FAC360]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v97 = (char *)v89 - v11;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FAC368];
  sub_1C0E695DC(0, &qword_1EB8945D0, (uint64_t (*)(void))sub_1C0067870, (uint64_t)&type metadata for ManageChannelNotificationsCommandState, MEMORY[0x1E4FAC368]);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v96 = (char *)v89 - v14;
  sub_1C0E695DC(0, (unint64_t *)&unk_1EA1A7DC8, (uint64_t (*)(void))sub_1C007685C, (uint64_t)&type metadata for IgnoringCommandState, v6);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v95 = (char *)v89 - v16;
  sub_1C0E695DC(0, &qword_1EA1A7DD8, (uint64_t (*)(void))sub_1C007685C, (uint64_t)&type metadata for IgnoringCommandState, v9);
  MEMORY[0x1F4188790](v17 - 8);
  id v94 = (char *)v89 - v18;
  sub_1C0E695DC(0, &qword_1EA1A7DE0, (uint64_t (*)(void))sub_1C007685C, (uint64_t)&type metadata for IgnoringCommandState, v12);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v93 = (char *)v89 - v20;
  sub_1C0E695DC(0, (unint64_t *)&unk_1EB86FE60, (uint64_t (*)(void))sub_1C0078974, (uint64_t)&type metadata for BlockingCommandState, v6);
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v92 = (char *)v89 - v22;
  sub_1C0E695DC(0, (unint64_t *)&unk_1EB86FE28, (uint64_t (*)(void))sub_1C0078974, (uint64_t)&type metadata for BlockingCommandState, v9);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v91 = (char *)v89 - v24;
  sub_1C0E695DC(0, (unint64_t *)&unk_1EB86FE40, (uint64_t (*)(void))sub_1C0078974, (uint64_t)&type metadata for BlockingCommandState, v12);
  MEMORY[0x1F4188790](v25 - 8);
  v89[1] = (char *)v89 - v26;
  uint64_t v27 = sub_1C151CE3C();
  MEMORY[0x1F4188790](v27 - 8);
  uint64_t v100 = (void *)MEMORY[0x1E4FBC860];
  id v28 = self;
  id v29 = objc_msgSend(v28, sel_currentDevice);
  id v30 = objc_msgSend(v29, sel_userInterfaceIdiom);

  if (v30 == (id)5)
  {
    sub_1C0607A88(0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1527210;
    uint64_t v32 = sub_1C151A81C();
    swift_getObjectType();
    uint64_t v33 = sub_1C00DADA4((uint64_t)a1, a2);
    if (v33)
    {
      uint64_t v34 = MEMORY[0x1E4FAC030];
      uint64_t v35 = v32;
    }
    else
    {
      uint64_t v35 = 0;
      uint64_t v34 = 0;
      *(void *)(inited + 40) = 0;
      *(void *)(inited + 48) = 0;
    }
    uint64_t v38 = MEMORY[0x1E4FAC030];
    *(void *)(inited + 32) = v33;
    *(void *)(inited + 56) = v35;
    *(void *)(inited + 64) = v34;
    uint64_t v42 = sub_1C0ADB0C4((uint64_t)a1, a2);
    if (v42)
    {
      uint64_t v43 = MEMORY[0x1E4FAC030];
    }
    else
    {
      uint64_t v32 = 0;
      uint64_t v43 = 0;
      *(void *)(inited + 80) = 0;
      *(void *)(inited + 88) = 0;
    }
    uint64_t v39 = v99;
    *(void *)(inited + 72) = v42;
    *(void *)(inited + 96) = v32;
    *(void *)(inited + 104) = v43;
    sub_1C1049C54(inited);
  }
  else
  {
    id v36 = objc_msgSend(v28, sel_currentDevice);
    id v37 = objc_msgSend(v36, sel_userInterfaceIdiom);

    uint64_t v38 = MEMORY[0x1E4FAC030];
    uint64_t v39 = v99;
    if (v37 == (id)1)
    {
      uint64_t v40 = sub_1C151A81C();
      swift_getObjectType();
      uint64_t v41 = sub_1C0ADB0C4((uint64_t)a1, a2);
      if (v41)
      {
        *((void *)&v103 + 1) = v40;
        v104[0] = v38;
        *(void *)&long long v102 = v41;
      }
      else
      {
        v104[0] = 0;
        long long v102 = 0u;
        long long v103 = 0u;
      }
      unint64_t v44 = sub_1C0EE5C48(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v46 = v44[2];
      unint64_t v45 = v44[3];
      if (v46 >= v45 >> 1) {
        unint64_t v44 = sub_1C0EE5C48((void *)(v45 > 1), v46 + 1, 1, v44);
      }
      v44[2] = v46 + 1;
      sub_1C0E69308((uint64_t)&v102, (uint64_t)&v44[5 * v46 + 4]);
      uint64_t v100 = v44;
    }
  }
  if (sub_1BFFD07D4(16, v39))
  {
    swift_bridgeObjectRelease();
    unint64_t v47 = (void *)MEMORY[0x1E4FBC860];
  }
  else
  {
    sub_1C151AB2C();
    sub_1C151AB1C();
    swift_bridgeObjectRelease();
    unint64_t v47 = sub_1C0EE5C48(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v49 = v47[2];
    unint64_t v48 = v47[3];
    if (v49 >= v48 >> 1) {
      unint64_t v47 = sub_1C0EE5C48((void *)(v48 > 1), v49 + 1, 1, v47);
    }
    v47[2] = v49 + 1;
    sub_1C0E69308((uint64_t)&v102, (uint64_t)&v47[5 * v49 + 4]);
  }
  sub_1C0607A88(0);
  uint64_t v50 = swift_allocObject();
  *(_OWORD *)(v50 + 16) = xmmword_1C1527210;
  uint64_t v51 = sub_1C151A81C();
  char v52 = sub_1BFFD07D4(24, v39);
  LOBYTE(v102) = 0;
  swift_getObjectType();
  uint64_t v53 = sub_1C04B2AD0(a1, v52 & 1, (unsigned __int8 *)&v102, v51);
  if (v53)
  {
    uint64_t v54 = MEMORY[0x1E4FAC030];
    uint64_t v55 = v51;
  }
  else
  {
    uint64_t v55 = 0;
    uint64_t v54 = 0;
    *(void *)(v50 + 40) = 0;
    *(void *)(v50 + 48) = 0;
  }
  *(void *)(v50 + 32) = v53;
  *(void *)(v50 + 56) = v55;
  *(void *)(v50 + 64) = v54;
  uint64_t v56 = sub_1C03C9640(a1, v51);
  *(void *)(v50 + 96) = v51;
  *(void *)(v50 + 104) = v38;
  *(void *)(v50 + 72) = v56;
  if (sub_1BFFD07D4(22, v39))
  {
    id v57 = objc_msgSend(a1, sel_identifier);
    sub_1C151E62C();

    uint64_t v58 = _s5TeaUI15ContextMenuItemC8NewsFeedE14toggleShortcut3forACSS_tFZ_0();
    swift_bridgeObjectRelease();
    *((void *)&v103 + 1) = v51;
    v104[0] = v38;
    *(void *)&long long v102 = v58;
    unint64_t v60 = *(void *)(v50 + 16);
    unint64_t v59 = *(void *)(v50 + 24);
    if (v60 >= v59 >> 1) {
      uint64_t v50 = (uint64_t)sub_1C0EE5C48((void *)(v59 > 1), v60 + 1, 1, (void *)v50);
    }
    *(void *)(v50 + 16) = v60 + 1;
    sub_1C0E69308((uint64_t)&v102, v50 + 40 * v60 + 32);
    uint64_t v39 = v99;
  }
  if ((sub_1BFFD07D4(17, v39) & 1) == 0)
  {
    uint64_t v61 = _s5TeaUI15ContextMenuItemC8NewsFeedE6follow3tagACSgSo14FCTagProviding_pSg_tFZ_0((uint64_t)a1);
    if (v61)
    {
      *((void *)&v103 + 1) = v51;
      v104[0] = v38;
      *(void *)&long long v102 = v61;
    }
    else
    {
      v104[0] = 0;
      long long v102 = 0u;
      long long v103 = 0u;
    }
    unint64_t v63 = *(void *)(v50 + 16);
    unint64_t v62 = *(void *)(v50 + 24);
    if (v63 >= v62 >> 1) {
      uint64_t v50 = (uint64_t)sub_1C0EE5C48((void *)(v62 > 1), v63 + 1, 1, (void *)v50);
    }
    *(void *)(v50 + 16) = v63 + 1;
    sub_1C0E69308((uint64_t)&v102, v50 + 40 * v63 + 32);
    sub_1C0E69398(v90, (uint64_t)v101);
    if (v101[0])
    {
      sub_1C0E69454((uint64_t)v101, (uint64_t)&v102);
      uint64_t v64 = MEMORY[0x1C18C9C60]((char *)&v103 + 8);
      if (v64)
      {
        uint64_t v65 = (void *)v64;
        uint64_t v66 = MEMORY[0x1C18C9C60](v104);
        if (v66)
        {
          unint64_t v67 = (void *)v66;
          uint64_t v90 = *((void *)&v102 + 1);
          v89[0] = v103;
          v101[0] = 0x3A3A776F6C6C6F66;
          v101[1] = 0xE800000000000000;
          swift_bridgeObjectRetain();
          id v68 = objc_msgSend(a1, sel_identifier);
          sub_1C151E62C();

          sub_1C151E80C();
          swift_bridgeObjectRelease();
          sub_1C151CE2C();
          sub_1C151A2AC();
          swift_allocObject();
          id v69 = v67;
          id v70 = v65;
          sub_1C151A25C();
          swift_retain();
          sub_1C1519F9C();

          swift_release();
          swift_release();
          sub_1C0E694B0((uint64_t)&v102);
          uint64_t v38 = MEMORY[0x1E4FAC030];
        }
        else
        {
          sub_1C0E694B0((uint64_t)&v102);
        }
      }
      else
      {
        sub_1C0E694B0((uint64_t)&v102);
      }
    }
    else
    {
      sub_1BFF5134C((uint64_t)v101, (uint64_t (*)(void))sub_1C0E693FC);
    }
    uint64_t v39 = v99;
  }
  if ((sub_1BFFD07D4(18, v39) & 1) == 0)
  {
    uint64_t v71 = qword_1EB87B188;
    swift_unknownObjectRetain();
    if (v71 != -1) {
      swift_once();
    }
    LOBYTE(v102) = 1;
    *(void *)(swift_allocObject() + 16) = a1;
    sub_1C0078974();
    swift_unknownObjectRetain();
    swift_retain();
    sub_1C151AEBC();
    LOBYTE(v102) = 1;
    sub_1C151AE9C();
    sub_1C151B2DC();
    *(void *)&long long v102 = a1;
    swift_allocObject();
    uint64_t v72 = sub_1C151A80C();
    uint64_t v38 = MEMORY[0x1E4FAC030];
    *((void *)&v103 + 1) = v51;
    v104[0] = MEMORY[0x1E4FAC030];
    *(void *)&long long v102 = v72;
    unint64_t v74 = *(void *)(v50 + 16);
    unint64_t v73 = *(void *)(v50 + 24);
    if (v74 >= v73 >> 1) {
      uint64_t v50 = (uint64_t)sub_1C0EE5C48((void *)(v73 > 1), v74 + 1, 1, (void *)v50);
    }
    uint64_t v39 = v99;
    *(void *)(v50 + 16) = v74 + 1;
    sub_1C0E69308((uint64_t)&v102, v50 + 40 * v74 + 32);
  }
  if (sub_1BFFD07D4(7, v39))
  {
    uint64_t v75 = qword_1EB85E4E0;
    swift_unknownObjectRetain();
    if (v75 != -1) {
      swift_once();
    }
    LOBYTE(v102) = 1;
    sub_1C007685C();
    swift_unknownObjectRetain();
    swift_retain();
    sub_1C151AEBC();
    LOBYTE(v102) = 1;
    sub_1C151AE9C();
    sub_1C151B2DC();
    *(void *)&long long v102 = a1;
    swift_allocObject();
    uint64_t v76 = sub_1C151A80C();
    swift_unknownObjectRelease();
    uint64_t v38 = MEMORY[0x1E4FAC030];
    *((void *)&v103 + 1) = v51;
    v104[0] = MEMORY[0x1E4FAC030];
    *(void *)&long long v102 = v76;
    unint64_t v78 = *(void *)(v50 + 16);
    unint64_t v77 = *(void *)(v50 + 24);
    if (v78 >= v77 >> 1) {
      uint64_t v50 = (uint64_t)sub_1C0EE5C48((void *)(v77 > 1), v78 + 1, 1, (void *)v50);
    }
    uint64_t v39 = v99;
    *(void *)(v50 + 16) = v78 + 1;
    sub_1C0E69308((uint64_t)&v102, v50 + 40 * v78 + 32);
  }
  if (sub_1BFFD07D4(23, v39))
  {
    uint64_t v79 = _s5TeaUI15ContextMenuItemC8NewsFeedE14manageMySportsACyFZ_0();
    *((void *)&v103 + 1) = v51;
    v104[0] = v38;
    *(void *)&long long v102 = v79;
    unint64_t v81 = *(void *)(v50 + 16);
    unint64_t v80 = *(void *)(v50 + 24);
    if (v81 >= v80 >> 1) {
      uint64_t v50 = (uint64_t)sub_1C0EE5C48((void *)(v80 > 1), v81 + 1, 1, (void *)v50);
    }
    *(void *)(v50 + 16) = v81 + 1;
    sub_1C0E69308((uint64_t)&v102, v50 + 40 * v81 + 32);
  }
  uint64_t v82 = qword_1EB85F568;
  swift_unknownObjectRetain();
  if (v82 != -1) {
    swift_once();
  }
  LOBYTE(v102) = 0;
  sub_1C0067870();
  swift_unknownObjectRetain();
  swift_retain();
  sub_1C151AEBC();
  LOBYTE(v102) = 0;
  sub_1C151AE9C();
  sub_1C151B2DC();
  *(void *)&long long v102 = a1;
  swift_allocObject();
  uint64_t v83 = sub_1C151A80C();
  swift_unknownObjectRelease();
  *((void *)&v103 + 1) = v51;
  v104[0] = MEMORY[0x1E4FAC030];
  *(void *)&long long v102 = v83;
  unint64_t v85 = *(void *)(v50 + 16);
  unint64_t v84 = *(void *)(v50 + 24);
  if (v85 >= v84 >> 1) {
    uint64_t v50 = (uint64_t)sub_1C0EE5C48((void *)(v84 > 1), v85 + 1, 1, (void *)v50);
  }
  *(void *)(v50 + 16) = v85 + 1;
  sub_1C0E69308((uint64_t)&v102, v50 + 40 * v85 + 32);
  sub_1C151AB2C();
  sub_1C151AB1C();
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v47 = sub_1C0EE5C48(0, v47[2] + 1, 1, v47);
  }
  unint64_t v87 = v47[2];
  unint64_t v86 = v47[3];
  if (v87 >= v86 >> 1) {
    unint64_t v47 = sub_1C0EE5C48((void *)(v86 > 1), v87 + 1, 1, v47);
  }
  v47[2] = v87 + 1;
  sub_1C0E69308((uint64_t)&v102, (uint64_t)&v47[5 * v87 + 4]);
  return v47;
}

void *sub_1C0E606E8(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v51 = a4;
  uint64_t v50 = a2;
  uint64_t v58 = *MEMORY[0x1E4F143B8];
  uint64_t v10 = sub_1C151B03C();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v14 = sub_1BFFD07D4(16, a6);
  uint64_t v15 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v16 = &off_1C1527000;
  if ((v14 & 1) == 0)
  {
    unint64_t v17 = a3;
    uint64_t v49 = a5;
    char v52 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v18 = self;
    id v19 = objc_msgSend(v18, sel_currentDevice);
    id v20 = objc_msgSend(v19, sel_userInterfaceIdiom);

    if (v20 == (id)5)
    {
      sub_1C0607A88(0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C1527210;
      uint64_t v22 = _s5TeaUI15ContextMenuItemC8NewsFeedE12openInNewTab8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(a1);
      uint64_t v23 = v22;
      if (v22)
      {
        uint64_t v22 = sub_1C151A81C();
        uint64_t v24 = MEMORY[0x1E4FAC030];
      }
      else
      {
        uint64_t v24 = 0;
        *(void *)(inited + 40) = 0;
        *(void *)(inited + 48) = 0;
      }
      a3 = v17;
      *(void *)(inited + 32) = v23;
      *(void *)(inited + 56) = v22;
      *(void *)(inited + 64) = v24;
      uint64_t v29 = _s5TeaUI15ContextMenuItemC8NewsFeedE15openInNewWindow8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(a1);
      uint64_t v30 = v29;
      if (v29)
      {
        uint64_t v29 = sub_1C151A81C();
        uint64_t v31 = MEMORY[0x1E4FAC030];
      }
      else
      {
        uint64_t v31 = 0;
        *(void *)(inited + 80) = 0;
        *(void *)(inited + 88) = 0;
      }
      *(void *)(inited + 72) = v30;
      *(void *)(inited + 96) = v29;
      *(void *)(inited + 104) = v31;
      sub_1C1049C54(inited);
    }
    else
    {
      id v25 = objc_msgSend(v18, sel_currentDevice);
      id v26 = objc_msgSend(v25, sel_userInterfaceIdiom);

      if (v26 == (id)1)
      {
        uint64_t v27 = _s5TeaUI15ContextMenuItemC8NewsFeedE15openInNewWindow8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(a1);
        if (v27)
        {
          uint64_t v28 = v27;
          *((void *)&v54 + 1) = sub_1C151A81C();
          uint64_t v55 = MEMORY[0x1E4FAC030];
          *(void *)&long long v53 = v28;
        }
        else
        {
          uint64_t v55 = 0;
          long long v53 = 0u;
          long long v54 = 0u;
        }
        uint64_t v32 = sub_1C0EE5C48(0, 1, 1, MEMORY[0x1E4FBC860]);
        unint64_t v34 = v32[2];
        unint64_t v33 = v32[3];
        if (v34 >= v33 >> 1) {
          uint64_t v32 = sub_1C0EE5C48((void *)(v33 > 1), v34 + 1, 1, v32);
        }
        v32[2] = v34 + 1;
        sub_1C0E69308((uint64_t)&v53, (uint64_t)&v32[5 * v34 + 4]);
        char v52 = v32;
      }
      a3 = v17;
    }
    sub_1C151AB2C();
    sub_1C151AB1C();
    swift_bridgeObjectRelease();
    uint64_t v15 = sub_1C0EE5C48(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v36 = v15[2];
    unint64_t v35 = v15[3];
    if (v36 >= v35 >> 1) {
      uint64_t v15 = sub_1C0EE5C48((void *)(v35 > 1), v36 + 1, 1, v15);
    }
    v15[2] = v36 + 1;
    sub_1C0E69308((uint64_t)&v53, (uint64_t)&v15[5 * v36 + 4]);
    a5 = v49;
    uint64_t v16 = &off_1C1527000;
  }
  sub_1C0607A88(0);
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = *((_OWORD *)v16 + 33);
  if (qword_1EB87CA88 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v49 = sub_1C04B1BBC(a1);
  v48[1] = v38;
  if (qword_1EB894618 != -1) {
    swift_once();
  }
  uint64_t v39 = (void *)qword_1EB894610;
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E4FAC3E0], v10);
  *(void *)&long long v53 = a1;
  *((void *)&v53 + 1) = v50;
  long long v54 = a3;
  uint64_t v55 = v51;
  uint64_t v56 = a5;
  char v57 = 0;
  uint64_t v40 = sub_1C151A81C();
  swift_allocObject();
  id v41 = v39;
  uint64_t v42 = sub_1C151A7FC();
  *(void *)(v37 + 56) = v40;
  *(void *)(v37 + 64) = MEMORY[0x1E4FAC030];
  *(void *)(v37 + 32) = v42;
  uint64_t v43 = sub_1C0D522C8(a1);
  if (v43)
  {
    uint64_t v44 = MEMORY[0x1E4FAC030];
  }
  else
  {
    uint64_t v40 = 0;
    uint64_t v44 = 0;
    *(void *)(v37 + 80) = 0;
    *(void *)(v37 + 88) = 0;
  }
  *(void *)(v37 + 72) = v43;
  *(void *)(v37 + 96) = v40;
  *(void *)(v37 + 104) = v44;
  sub_1C151AB2C();
  sub_1C151AB1C();
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v15 = sub_1C0EE5C48(0, v15[2] + 1, 1, v15);
  }
  unint64_t v46 = v15[2];
  unint64_t v45 = v15[3];
  if (v46 >= v45 >> 1) {
    uint64_t v15 = sub_1C0EE5C48((void *)(v45 > 1), v46 + 1, 1, v15);
  }
  v15[2] = v46 + 1;
  sub_1C0E69308((uint64_t)&v53, (uint64_t)&v15[5 * v46 + 4]);
  return v15;
}

void *sub_1C0E60CB4(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v164 = a7;
  uint64_t v169 = a4;
  uint64_t v168 = a2;
  uint64_t v181 = *MEMORY[0x1E4F143B8];
  uint64_t v159 = sub_1C151AB3C();
  uint64_t v158 = *(void *)(v159 - 8);
  MEMORY[0x1F4188790](v159);
  uint64_t v160 = (char *)&v157 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C151CE3C();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v157 = (char *)&v157 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0E695DC(0, &qword_1EB8945D8, (uint64_t (*)(void))sub_1C0067870, (uint64_t)&type metadata for ManageChannelNotificationsCommandState, MEMORY[0x1E4FAC5E8]);
  MEMORY[0x1F4188790](v14 - 8);
  size_t v163 = (char *)&v157 - v15;
  sub_1C0E695DC(0, &qword_1EB8945C8, (uint64_t (*)(void))sub_1C0067870, (uint64_t)&type metadata for ManageChannelNotificationsCommandState, MEMORY[0x1E4FAC360]);
  MEMORY[0x1F4188790](v16 - 8);
  unint64_t v162 = (char *)&v157 - v17;
  sub_1C0E695DC(0, &qword_1EB8945D0, (uint64_t (*)(void))sub_1C0067870, (uint64_t)&type metadata for ManageChannelNotificationsCommandState, MEMORY[0x1E4FAC368]);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v161 = (char *)&v157 - v19;
  uint64_t v167 = sub_1C151B03C();
  uint64_t v20 = *(void *)(v167 - 8);
  MEMORY[0x1F4188790](v167);
  uint64_t v166 = (char *)&v157 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v22 = sub_1BFFD07D4(6, a6);
  uint64_t v23 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v24 = (void *)MEMORY[0x1E4FBC860];
  if (v22)
  {
    sub_1C0607A88(0);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1C1529AE0;
    uint64_t v26 = sub_1C04BA8F4();
    uint64_t v27 = v26;
    if (v26)
    {
      uint64_t v26 = sub_1C151A81C();
      uint64_t v28 = MEMORY[0x1E4FAC030];
    }
    else
    {
      uint64_t v28 = 0;
      *(void *)(v25 + 40) = 0;
      *(void *)(v25 + 48) = 0;
    }
    *(void *)(v25 + 32) = v27;
    *(void *)(v25 + 56) = v26;
    *(void *)(v25 + 64) = v28;
    sub_1C151AB2C();
    sub_1C151AB1C();
    swift_bridgeObjectRelease();
    uint64_t v24 = sub_1C0EE5C48(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v30 = v24[2];
    unint64_t v29 = v24[3];
    if (v30 >= v29 >> 1) {
      uint64_t v24 = sub_1C0EE5C48((void *)(v29 > 1), v30 + 1, 1, v24);
    }
    void v24[2] = v30 + 1;
    sub_1C0E69308((uint64_t)&v177, (uint64_t)&v24[5 * v30 + 4]);
  }
  uint64_t v171 = a1;
  uint64_t v170 = a6;
  uint64_t v175 = v23;
  uint64_t v31 = self;
  id v32 = objc_msgSend(v31, sel_currentDevice);
  id v33 = objc_msgSend(v32, sel_userInterfaceIdiom);

  if (v33 == (id)5)
  {
    sub_1C0607A88(0);
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_1C1527210;
    unint64_t v35 = v171;
    uint64_t v36 = _s5TeaUI15ContextMenuItemC8NewsFeedE12openInNewTab8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(v171);
    uint64_t v37 = v36;
    if (v36)
    {
      uint64_t v36 = sub_1C151A81C();
      uint64_t v38 = MEMORY[0x1E4FAC030];
    }
    else
    {
      uint64_t v38 = 0;
      *(void *)(v34 + 40) = 0;
      *(void *)(v34 + 48) = 0;
    }
    uint64_t v41 = v170;
    *(void *)(v34 + 32) = v37;
    *(void *)(v34 + 56) = v36;
    *(void *)(v34 + 64) = v38;
    uint64_t v44 = _s5TeaUI15ContextMenuItemC8NewsFeedE15openInNewWindow8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(v35);
    uint64_t v45 = v44;
    if (v44)
    {
      uint64_t v44 = sub_1C151A81C();
      uint64_t v46 = MEMORY[0x1E4FAC030];
    }
    else
    {
      uint64_t v46 = 0;
      *(void *)(v34 + 80) = 0;
      *(void *)(v34 + 88) = 0;
    }
    *(void *)(v34 + 72) = v45;
    *(void *)(v34 + 96) = v44;
    *(void *)(v34 + 104) = v46;
    sub_1C1049C54(v34);
  }
  else
  {
    id v39 = objc_msgSend(v31, sel_currentDevice);
    id v40 = objc_msgSend(v39, sel_userInterfaceIdiom);

    uint64_t v41 = v170;
    unint64_t v35 = v171;
    if (v40 == (id)1)
    {
      uint64_t v42 = _s5TeaUI15ContextMenuItemC8NewsFeedE15openInNewWindow8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(v171);
      if (v42)
      {
        uint64_t v43 = v42;
        *((void *)&v178 + 1) = sub_1C151A81C();
        v179[0] = MEMORY[0x1E4FAC030];
        *(void *)&long long v177 = v43;
      }
      else
      {
        v179[0] = 0;
        long long v177 = 0u;
        long long v178 = 0u;
      }
      unint64_t v47 = sub_1C0EE5C48(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v49 = v47[2];
      unint64_t v48 = v47[3];
      if (v49 >= v48 >> 1) {
        unint64_t v47 = sub_1C0EE5C48((void *)(v48 > 1), v49 + 1, 1, v47);
      }
      v47[2] = v49 + 1;
      sub_1C0E69308((uint64_t)&v177, (uint64_t)&v47[5 * v49 + 4]);
      uint64_t v175 = v47;
    }
  }
  if (sub_1BFFD07D4(16, v41))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C151AB2C();
    sub_1C151AB1C();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v24 = sub_1C0EE5C48(0, v24[2] + 1, 1, v24);
    }
    unint64_t v51 = v24[2];
    unint64_t v50 = v24[3];
    if (v51 >= v50 >> 1) {
      uint64_t v24 = sub_1C0EE5C48((void *)(v50 > 1), v51 + 1, 1, v24);
    }
    void v24[2] = v51 + 1;
    sub_1C0E69308((uint64_t)&v177, (uint64_t)&v24[5 * v51 + 4]);
  }
  uint64_t v174 = (uint64_t)v23;
  if ((sub_1BFFD07D4(25, v41) & 1) == 0)
  {
    _s5TeaUI15ContextMenuItemC8NewsFeedE15openSportsEvent3forACSo19FCHeadlineProviding_p_tFZ_0((uint64_t)v35);
    MEMORY[0x1C18C66D0]();
    if (*(void *)(v174 + 16) >= *(void *)(v174 + 24) >> 1) {
      sub_1C151EC8C();
    }
    sub_1C151ECEC();
    sub_1C151EBEC();
  }
  if (sub_1BFFD07D4(21, v41))
  {
    *(void *)&long long v177 = v35;
    *((void *)&v177 + 1) = v169;
    *(void *)&long long v178 = a5;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    _s5TeaUI15ContextMenuItemC8NewsFeedE04readG5Story7contextACSgAD0g4Readi7CommandC0V_tFZ_0((uint64_t *)&v177);
    swift_bridgeObjectRelease();
    uint64_t v52 = swift_unknownObjectRelease();
    MEMORY[0x1C18C66D0](v52);
    if (*(void *)(v174 + 16) >= *(void *)(v174 + 24) >> 1) {
      sub_1C151EC8C();
    }
    sub_1C151ECEC();
    sub_1C151EBEC();
  }
  uint64_t v53 = v174;
  if (*(void *)(v174 + 16))
  {
    sub_1C151AB2C();
    sub_1C0235588(v53);
    swift_bridgeObjectRelease();
    sub_1C151AB1C();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v24 = sub_1C0EE5C48(0, v24[2] + 1, 1, v24);
    }
    unint64_t v55 = v24[2];
    unint64_t v54 = v24[3];
    if (v55 >= v54 >> 1) {
      uint64_t v24 = sub_1C0EE5C48((void *)(v54 > 1), v55 + 1, 1, v24);
    }
    void v24[2] = v55 + 1;
    sub_1C0E69308((uint64_t)&v177, (uint64_t)&v24[5 * v55 + 4]);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v173 = v23;
  if ((sub_1BFFD07D4(28, v41) & 1) == 0)
  {
    if (qword_1EB87CA88 != -1) {
      swift_once();
    }
    swift_bridgeObjectRetain();
    uint64_t v56 = v171;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1C04B1BBC(v56);
    if (qword_1EB894618 != -1) {
      swift_once();
    }
    char v57 = (void *)qword_1EB894610;
    (*(void (**)(char *, void, uint64_t))(v20 + 104))(v166, *MEMORY[0x1E4FAC3E0], v167);
    *(void *)&long long v177 = v56;
    *((void *)&v177 + 1) = v168;
    long long v178 = a3;
    v179[0] = v169;
    v179[1] = a5;
    char v180 = 0;
    uint64_t v58 = sub_1C151A81C();
    swift_allocObject();
    id v59 = v57;
    uint64_t v60 = sub_1C151A7FC();
    *((void *)&v178 + 1) = v58;
    v179[0] = MEMORY[0x1E4FAC030];
    *(void *)&long long v177 = v60;
    uint64_t v61 = sub_1C0EE5C48(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v63 = v61[2];
    unint64_t v62 = v61[3];
    if (v63 >= v62 >> 1) {
      uint64_t v61 = sub_1C0EE5C48((void *)(v62 > 1), v63 + 1, 1, v61);
    }
    uint64_t v41 = v170;
    v61[2] = v63 + 1;
    sub_1C0E69308((uint64_t)&v177, (uint64_t)&v61[5 * v63 + 4]);
    uint64_t v173 = v61;
    unint64_t v35 = v171;
    uint64_t v23 = (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C0607A88(0);
  uint64_t v168 = v64;
  uint64_t inited = (_OWORD *)swift_initStackObject();
  long long v165 = xmmword_1C1527210;
  inited[1] = xmmword_1C1527210;
  uint64_t v66 = sub_1C151A81C();
  static ContextMenuItem.replyToSharer(headline:)(v35, inited + 2);
  static ContextMenuItem.hideShare(headline:)(v35, (_OWORD *)((char *)inited + 72));
  sub_1C1049C54((uint64_t)inited);
  if ((sub_1BFFD07D4(29, v41) & 1) == 0)
  {
    uint64_t v67 = sub_1C0265D04();
    *((void *)&v178 + 1) = v66;
    v179[0] = MEMORY[0x1E4FAC030];
    *(void *)&long long v177 = v67;
    id v68 = v173;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v68 = sub_1C0EE5C48(0, v68[2] + 1, 1, v68);
    }
    unint64_t v70 = v68[2];
    unint64_t v69 = v68[3];
    if (v70 >= v69 >> 1) {
      id v68 = sub_1C0EE5C48((void *)(v69 > 1), v70 + 1, 1, v68);
    }
    v68[2] = v70 + 1;
    sub_1C0E69308((uint64_t)&v177, (uint64_t)&v68[5 * v70 + 4]);
    uint64_t v173 = v68;
  }
  uint64_t v71 = sub_1C0D522C8(v35);
  if (v71)
  {
    *((void *)&v178 + 1) = v66;
    v179[0] = MEMORY[0x1E4FAC030];
    *(void *)&long long v177 = v71;
  }
  else
  {
    v179[0] = 0;
    long long v177 = 0u;
    long long v178 = 0u;
  }
  uint64_t v72 = v173;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v72 = sub_1C0EE5C48(0, v72[2] + 1, 1, v72);
  }
  unint64_t v74 = v72[2];
  unint64_t v73 = v72[3];
  if (v74 >= v73 >> 1) {
    uint64_t v72 = sub_1C0EE5C48((void *)(v73 > 1), v74 + 1, 1, v72);
  }
  v72[2] = v74 + 1;
  sub_1C0E69308((uint64_t)&v177, (uint64_t)&v72[5 * v74 + 4]);
  uint64_t v173 = v72;
  if ((sub_1BFFD07D4(26, v41) & 1) == 0)
  {
    uint64_t v75 = swift_allocObject();
    *(_OWORD *)(v75 + 16) = v165;
    uint64_t v76 = v23;
    uint64_t v77 = v20;
    uint64_t v78 = v169;
    *(void *)&long long v177 = v35;
    *((void *)&v177 + 1) = v169;
    *(void *)&long long v178 = a5;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    uint64_t v79 = _s5TeaUI15ContextMenuItemC8NewsFeedE4like7contextAcD013LikingCommandC0V_tFZ_0();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    uint64_t v80 = MEMORY[0x1E4FAC030];
    *(void *)(v75 + 56) = v66;
    *(void *)(v75 + 64) = v80;
    *(void *)(v75 + 32) = v79;
    *(void *)&long long v177 = v35;
    *((void *)&v177 + 1) = v78;
    uint64_t v20 = v77;
    uint64_t v23 = v76;
    *(void *)&long long v178 = a5;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v81 = _s5TeaUI15ContextMenuItemC8NewsFeedE7dislike7contextAcD013LikingCommandC0V_tFZ_0();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    *(void *)(v75 + 96) = v66;
    *(void *)(v75 + 104) = MEMORY[0x1E4FAC030];
    *(void *)(v75 + 72) = v81;
    sub_1C1049C54(v75);
  }
  if (sub_1BFFD07D4(30, v41))
  {
    uint64_t v82 = _s5TeaUI15ContextMenuItemC8NewsFeedE12openInSafari8headlineACSgSo19FCHeadlineProviding_p_tFZ_0(v35);
    if (v82)
    {
      *((void *)&v178 + 1) = v66;
      v179[0] = MEMORY[0x1E4FAC030];
      *(void *)&long long v177 = v82;
    }
    else
    {
      v179[0] = 0;
      long long v177 = 0u;
      long long v178 = 0u;
    }
    uint64_t v83 = v173;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v83 = sub_1C0EE5C48(0, v83[2] + 1, 1, v83);
    }
    unint64_t v85 = v83[2];
    unint64_t v84 = v83[3];
    if (v85 >= v84 >> 1) {
      uint64_t v83 = sub_1C0EE5C48((void *)(v84 > 1), v85 + 1, 1, v83);
    }
    v83[2] = v85 + 1;
    sub_1C0E69308((uint64_t)&v177, (uint64_t)&v83[5 * v85 + 4]);
    uint64_t v173 = v83;
  }
  if (sub_1BFFD07D4(5, v41))
  {
    uint64_t v86 = _s5TeaUI15ContextMenuItemC8NewsFeedE6report8headlineACSgSo19FCHeadlineProviding_pSg_tFZ_0((uint64_t)v35);
    if (v86)
    {
      *((void *)&v178 + 1) = v66;
      v179[0] = MEMORY[0x1E4FAC030];
      *(void *)&long long v177 = v86;
    }
    else
    {
      v179[0] = 0;
      long long v177 = 0u;
      long long v178 = 0u;
    }
    unint64_t v87 = v173;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v87 = sub_1C0EE5C48(0, v87[2] + 1, 1, v87);
    }
    unint64_t v89 = v87[2];
    unint64_t v88 = v87[3];
    if (v89 >= v88 >> 1) {
      unint64_t v87 = sub_1C0EE5C48((void *)(v88 > 1), v89 + 1, 1, v87);
    }
    v87[2] = v89 + 1;
    sub_1C0E69308((uint64_t)&v177, (uint64_t)&v87[5 * v89 + 4]);
    uint64_t v173 = v87;
  }
  if (sub_1BFFD07D4(0, v41))
  {
    id v90 = objc_msgSend(v35, sel_identifier);
    uint64_t v91 = sub_1C151E62C();
    uint64_t v93 = v92;

    uint64_t v94 = _s5TeaUI15ContextMenuItemC8NewsFeedE17removeFromHistory8headlineACSS_tFZ_0(v91, v93);
    swift_bridgeObjectRelease();
    *((void *)&v178 + 1) = v66;
    v179[0] = MEMORY[0x1E4FAC030];
    *(void *)&long long v177 = v94;
    uint64_t v95 = v173;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v95 = sub_1C0EE5C48(0, v95[2] + 1, 1, v95);
    }
    unint64_t v97 = v95[2];
    unint64_t v96 = v95[3];
    if (v97 >= v96 >> 1) {
      uint64_t v95 = sub_1C0EE5C48((void *)(v96 > 1), v97 + 1, 1, v95);
    }
    v95[2] = v97 + 1;
    sub_1C0E69308((uint64_t)&v177, (uint64_t)&v95[5 * v97 + 4]);
    uint64_t v173 = v95;
  }
  if (sub_1BFFD07D4(1, v41))
  {
    uint64_t v98 = sub_1C094CD68((uint64_t)v35);
    if (v98)
    {
      *((void *)&v178 + 1) = v66;
      v179[0] = MEMORY[0x1E4FAC030];
      *(void *)&long long v177 = v98;
    }
    else
    {
      v179[0] = 0;
      long long v177 = 0u;
      long long v178 = 0u;
    }
    uint64_t v99 = v173;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v99 = sub_1C0EE5C48(0, v99[2] + 1, 1, v99);
    }
    unint64_t v101 = v99[2];
    unint64_t v100 = v99[3];
    if (v101 >= v100 >> 1) {
      uint64_t v99 = sub_1C0EE5C48((void *)(v100 > 1), v101 + 1, 1, v99);
    }
    v99[2] = v101 + 1;
    sub_1C0E69308((uint64_t)&v177, (uint64_t)&v99[5 * v101 + 4]);
    uint64_t v173 = v99;
  }
  uint64_t v102 = sub_1C151AB2C();
  sub_1C151AB1C();
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v24 = sub_1C0EE5C48(0, v24[2] + 1, 1, v24);
  }
  unint64_t v104 = v24[2];
  unint64_t v103 = v24[3];
  if (v104 >= v103 >> 1) {
    uint64_t v24 = sub_1C0EE5C48((void *)(v103 > 1), v104 + 1, 1, v24);
  }
  void v24[2] = v104 + 1;
  sub_1C0E69308((uint64_t)&v177, (uint64_t)&v24[5 * v104 + 4]);
  uint64_t v105 = self;
  id v106 = objc_msgSend(v105, sel_mainBundle);
  id v107 = objc_msgSend(v106, sel_bundleIdentifier);

  if (v107)
  {
    uint64_t v169 = v102;
    uint64_t v108 = sub_1C151E62C();
    uint64_t v110 = v109;

    if (v108 == 0x6C7070612E6D6F63 && v110 == 0xEE007377656E2E65)
    {
      swift_bridgeObjectRelease();
      id v111 = v171;
    }
    else
    {
      char v112 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      id v111 = v171;
      if ((v112 & 1) == 0) {
        return v24;
      }
    }
    uint64_t v172 = v23;
    uint64_t v113 = v170;
    uint64_t v114 = &selRef_setSpacing_;
    if ((sub_1BFFD07D4(14, v170) & 1) == 0)
    {
      id v115 = objc_msgSend(v111, sel_sourceChannel);
      if (v115)
      {
        id v116 = v115;
        swift_getObjectType();
        type metadata accessor for Localized();
        uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
        swift_unknownObjectRetain();
        id v118 = objc_msgSend(v105, sel_bundleForClass_, ObjCClassFromMetadata);
        sub_1C1515B8C();

        sub_1C0222994(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
        uint64_t v119 = swift_allocObject();
        *(_OWORD *)(v119 + 16) = xmmword_1C1529AE0;
        uint64_t v120 = FCTagProviding.localizedTagType.getter();
        uint64_t v122 = v121;
        *(void *)(v119 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v119 + 64) = sub_1BFE9C558();
        *(void *)(v119 + 32) = v120;
        *(void *)(v119 + 40) = v122;
        sub_1C151E66C();
        swift_bridgeObjectRelease();
        if (qword_1EB87C910 != -1) {
          swift_once();
        }
        uint64_t v123 = qword_1EB86FF68;
        uint64_t v124 = v171;
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        swift_retain();
        if (v123 != -1) {
          swift_once();
        }
        uint64_t v125 = (void *)qword_1EB86FF58;
        (*(void (**)(char *, void, uint64_t))(v20 + 104))(v166, *MEMORY[0x1E4FAC3E0], v167);
        *(void *)&long long v177 = v116;
        BYTE8(v177) = 0;
        *(void *)&long long v178 = v124;
        swift_allocObject();
        id v126 = v125;
        uint64_t v127 = sub_1C151A7FC();
        swift_unknownObjectRelease_n();
        *((void *)&v178 + 1) = v66;
        v179[0] = MEMORY[0x1E4FAC030];
        *(void *)&long long v177 = v127;
        uint64_t v113 = v170;
      }
      else
      {
        v179[0] = 0;
        long long v177 = 0u;
        long long v178 = 0u;
      }
      uint64_t v128 = sub_1C0EE5C48(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v130 = v128[2];
      unint64_t v129 = v128[3];
      if (v130 >= v129 >> 1) {
        uint64_t v128 = sub_1C0EE5C48((void *)(v129 > 1), v130 + 1, 1, v128);
      }
      id v111 = v171;
      v128[2] = v130 + 1;
      sub_1C0E69308((uint64_t)&v177, (uint64_t)&v128[5 * v130 + 4]);
      uint64_t v172 = v128;
    }
    uint64_t v131 = swift_allocObject();
    *(_OWORD *)(v131 + 16) = xmmword_1C152C7F0;
    uint64_t v132 = _s5TeaUI15ContextMenuItemC8NewsFeedE6follow3tagACSgSo14FCTagProviding_pSg_tFZ_0((uint64_t)objc_msgSend(v111, sel_sourceChannel));
    swift_unknownObjectRelease();
    if (v132)
    {
      uint64_t v133 = MEMORY[0x1E4FAC030];
      uint64_t v134 = v66;
    }
    else
    {
      uint64_t v134 = 0;
      uint64_t v133 = 0;
      *(void *)(v131 + 40) = 0;
      *(void *)(v131 + 48) = 0;
    }
    *(void *)(v131 + 32) = v132;
    *(void *)(v131 + 56) = v134;
    *(void *)(v131 + 64) = v133;
    uint64_t v135 = _s5TeaUI15ContextMenuItemC8NewsFeedE5block3tagACSgSo14FCTagProviding_pSg_tFZ_0((uint64_t)objc_msgSend(v111, sel_sourceChannel));
    swift_unknownObjectRelease();
    if (v135)
    {
      uint64_t v136 = MEMORY[0x1E4FAC030];
      uint64_t v137 = v66;
    }
    else
    {
      uint64_t v137 = 0;
      uint64_t v136 = 0;
      *(void *)(v131 + 80) = 0;
      *(void *)(v131 + 88) = 0;
    }
    *(void *)(v131 + 72) = v135;
    *(void *)(v131 + 96) = v137;
    *(void *)(v131 + 104) = v136;
    id v138 = objc_msgSend(v111, sel_sourceChannel);
    if (v138)
    {
      id v139 = v138;
      uint64_t v140 = qword_1EB85F568;
      swift_unknownObjectRetain();
      if (v140 != -1) {
        swift_once();
      }
      LOBYTE(v177) = 0;
      sub_1C0067870();
      swift_unknownObjectRetain();
      swift_retain();
      sub_1C151AEBC();
      LOBYTE(v177) = 0;
      sub_1C151AE9C();
      sub_1C151B2DC();
      *(void *)&long long v177 = v139;
      swift_allocObject();
      uint64_t v141 = sub_1C151A80C();
      swift_unknownObjectRelease_n();
      uint64_t v142 = MEMORY[0x1E4FAC030];
      *(void *)(v131 + 136) = v66;
      *(void *)(v131 + 144) = v142;
      *(void *)(v131 + 112) = v141;
      uint64_t v113 = v170;
      id v111 = v171;
      uint64_t v114 = &selRef_setSpacing_;
    }
    else
    {
      *(void *)(v131 + 144) = 0;
      *(_OWORD *)(v131 + 112) = 0u;
      *(_OWORD *)(v131 + 128) = 0u;
    }
    sub_1C1049C54(v131);
    if ([v111 v114[66]])
    {
      sub_1C0E69398(v164, (uint64_t)v176);
      if (v176[0])
      {
        sub_1C0E69454((uint64_t)v176, (uint64_t)&v177);
        uint64_t v143 = MEMORY[0x1C18C9C60]((char *)&v178 + 8);
        if (v143)
        {
          uint64_t v144 = (void *)v143;
          uint64_t v145 = MEMORY[0x1C18C9C60](v179);
          if (v145)
          {
            long long v146 = (void *)v145;
            v176[0] = 0x3A3A776F6C6C6F66;
            v176[1] = 0xE800000000000000;
            swift_bridgeObjectRetain();
            id v147 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
            sub_1C151E62C();

            sub_1C151E80C();
            swift_bridgeObjectRelease();
            sub_1C151CE2C();
            swift_unknownObjectRelease();
            sub_1C151A2AC();
            swift_allocObject();
            id v148 = v146;
            id v149 = v144;
            sub_1C151A25C();
            swift_retain();
            sub_1C1519F9C();

            swift_unknownObjectRelease();
            uint64_t v113 = v170;
            swift_release();
            swift_release();
            sub_1C0E694B0((uint64_t)&v177);
          }
          else
          {
            sub_1C0E694B0((uint64_t)&v177);
            swift_unknownObjectRelease();
          }
          id v111 = v171;
        }
        else
        {
          sub_1C0E694B0((uint64_t)&v177);
          swift_unknownObjectRelease();
        }
      }
      else
      {
        swift_unknownObjectRelease();
        sub_1BFF5134C((uint64_t)v176, (uint64_t (*)(void))sub_1C0E693FC);
      }
    }
    if ((sub_1BFFD07D4(10, v113) & 1) != 0
      || (sub_1BFFD07D4(12, v113) & 1) != 0 && (sub_1BFFD07D4(8, v113) & 1) == 0)
    {
      id v150 = [v111 v114[66]];
      if (v150)
      {
        id v151 = objc_msgSend(v150, sel_displayName);
        swift_unknownObjectRelease();
        sub_1C151E62C();
      }
      uint64_t v152 = v169;
      (*(void (**)(char *, void, uint64_t))(v158 + 104))(v160, *MEMORY[0x1E4FAC1C0], v159);
      swift_allocObject();
      uint64_t v153 = sub_1C151AB0C();
      *((void *)&v178 + 1) = v152;
      v179[0] = MEMORY[0x1E4FAC1B0];
      *(void *)&long long v177 = v153;
    }
    else
    {
      sub_1C151AB1C();
      swift_bridgeObjectRelease();
    }
    unint64_t v155 = v24[2];
    unint64_t v154 = v24[3];
    if (v155 >= v154 >> 1) {
      uint64_t v24 = sub_1C0EE5C48((void *)(v154 > 1), v155 + 1, 1, v24);
    }
    void v24[2] = v155 + 1;
    sub_1C0E69308((uint64_t)&v177, (uint64_t)&v24[5 * v155 + 4]);
  }
  return v24;
}

void *sub_1C0E627E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v173 = a3;
  v188[2] = *MEMORY[0x1E4F143B8];
  uint64_t v152 = type metadata accessor for WebEmbedDataVisualization();
  MEMORY[0x1F4188790](v152);
  uint64_t v153 = (uint64_t *)((char *)&v150 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_1C151CE3C();
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v155 = (char *)&v150 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v177 = sub_1C151AB3C();
  uint64_t v154 = *(void *)(v177 - 8);
  MEMORY[0x1F4188790](v177);
  long long v178 = (char *)&v150 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v175 = sub_1C151B03C();
  uint64_t v157 = *(void *)(v175 - 8);
  MEMORY[0x1F4188790](v175);
  uint64_t v176 = (char *)&v150 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FAC5E8];
  sub_1C0E695DC(0, (unint64_t *)&unk_1EB86FE60, (uint64_t (*)(void))sub_1C0078974, (uint64_t)&type metadata for BlockingCommandState, MEMORY[0x1E4FAC5E8]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v172 = (char *)&v150 - v12;
  ObjectType = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FAC360];
  sub_1C0E695DC(0, (unint64_t *)&unk_1EB86FE28, (uint64_t (*)(void))sub_1C0078974, (uint64_t)&type metadata for BlockingCommandState, MEMORY[0x1E4FAC360]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v171 = (char *)&v150 - v15;
  uint64_t inited = MEMORY[0x1E4FAC368];
  sub_1C0E695DC(0, (unint64_t *)&unk_1EB86FE40, (uint64_t (*)(void))sub_1C0078974, (uint64_t)&type metadata for BlockingCommandState, MEMORY[0x1E4FAC368]);
  MEMORY[0x1F4188790](v17 - 8);
  *(void *)&long long v170 = (char *)&v150 - v18;
  uint64_t v19 = (char **__ptr32 *)sub_1C00764C0;
  sub_1C0E695DC(0, &qword_1EB86FE70, (uint64_t (*)(void))sub_1C00764C0, (uint64_t)&type metadata for FollowingCommandState, v10);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v169 = (char *)&v150 - v21;
  sub_1C0E695DC(0, &qword_1EB86FE38, (uint64_t (*)(void))sub_1C00764C0, (uint64_t)&type metadata for FollowingCommandState, ObjectType);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v168 = (char *)&v150 - v23;
  sub_1C0E695DC(0, (unint64_t *)&unk_1EB86FE50, (uint64_t (*)(void))sub_1C00764C0, (uint64_t)&type metadata for FollowingCommandState, (uint64_t (*)(uint64_t, uint64_t, uint64_t))inited);
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v167 = (char *)&v150 - v25;
  uint64_t v26 = *(void **)(a1 + 56);
  uint64_t v27 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v180 = a1;
  if (v26)
  {
    ObjectType = (uint64_t (*)(uint64_t, uint64_t, uint64_t))swift_getObjectType();
    if (objc_msgSend((id)swift_unknownObjectRetain(), sel_isRouteable))
    {
      v185[0] = v27;
      uint64_t v28 = self;
      id v29 = objc_msgSend(v28, sel_currentDevice);
      id v30 = objc_msgSend(v29, sel_userInterfaceIdiom);

      uint64_t v19 = &off_1C1527000;
      if (v30 == (id)5)
      {
        sub_1C0607A88(0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1C1527210;
        uint64_t v31 = sub_1C151A81C();
        uint64_t v32 = swift_unknownObjectRetain();
        uint64_t v33 = sub_1C00DADA4(v32, 8);
        swift_unknownObjectRelease();
        if (v33)
        {
          uint64_t v34 = MEMORY[0x1E4FAC030];
          uint64_t v35 = v31;
        }
        else
        {
          uint64_t v35 = 0;
          uint64_t v34 = 0;
          *(void *)(inited + 40) = 0;
          *(void *)(inited + 48) = 0;
        }
        a1 = v180;
        *(void *)(inited + 32) = v33;
        *(void *)(inited + 56) = v35;
        *(void *)(inited + 64) = v34;
        uint64_t v40 = swift_unknownObjectRetain();
        uint64_t v41 = sub_1C0ADB0C4(v40, 8);
        swift_unknownObjectRelease();
        if (v41)
        {
          uint64_t v42 = MEMORY[0x1E4FAC030];
        }
        else
        {
          uint64_t v31 = 0;
          uint64_t v42 = 0;
          *(void *)(inited + 80) = 0;
          *(void *)(inited + 88) = 0;
        }
        *(void *)(inited + 72) = v41;
        *(void *)(inited + 96) = v31;
        *(void *)(inited + 104) = v42;
        sub_1C1049C54(inited);
      }
      else
      {
        id v36 = objc_msgSend(v28, sel_currentDevice);
        uint64_t inited = (uint64_t)objc_msgSend(v36, sel_userInterfaceIdiom);

        a1 = v180;
        if (inited == 1)
        {
          uint64_t v37 = sub_1C151A81C();
          uint64_t v38 = swift_unknownObjectRetain();
          uint64_t v39 = sub_1C0ADB0C4(v38, 8);
          swift_unknownObjectRelease();
          if (v39)
          {
            *((void *)&v187 + 1) = v37;
            v188[0] = MEMORY[0x1E4FAC030];
            *(void *)&long long v186 = v39;
          }
          else
          {
            v188[0] = 0;
            long long v186 = 0u;
            long long v187 = 0u;
          }
          uint64_t v43 = sub_1C0EE5C48(0, 1, 1, MEMORY[0x1E4FBC860]);
          unint64_t v45 = v43[2];
          unint64_t v44 = v43[3];
          uint64_t inited = v45 + 1;
          if (v45 >= v44 >> 1) {
            uint64_t v43 = sub_1C0EE5C48((void *)(v44 > 1), v45 + 1, 1, v43);
          }
          _OWORD v43[2] = inited;
          sub_1C0E69308((uint64_t)&v186, (uint64_t)&v43[5 * v45 + 4]);
          v185[0] = v43;
        }
      }
      if (sub_1BFFD07D4(16, a2))
      {
        swift_bridgeObjectRelease();
        uint64_t v27 = (void *)MEMORY[0x1E4FBC860];
      }
      else
      {
        sub_1C151AB2C();
        sub_1C151AB1C();
        swift_bridgeObjectRelease();
        uint64_t v27 = sub_1C0EE5C48(0, 1, 1, MEMORY[0x1E4FBC860]);
        unint64_t v47 = v27[2];
        unint64_t v46 = v27[3];
        if (v47 >= v46 >> 1) {
          uint64_t v27 = sub_1C0EE5C48((void *)(v46 > 1), v47 + 1, 1, v27);
        }
        long long v27[2] = v47 + 1;
        sub_1C0E69308((uint64_t)&v186, (uint64_t)&v27[5 * v47 + 4]);
      }
      sub_1C0607A88(0);
      uint64_t v48 = swift_allocObject();
      *(_OWORD *)(v48 + 16) = xmmword_1C1527210;
      uint64_t v49 = sub_1C151A81C();
      uint64_t v50 = _s5TeaUI15ContextMenuItemC8NewsFeedE15openSportsEvent3forAcD0I22ScoreDataVisualizationC_tFZ_0(a1);
      *(void *)(v48 + 56) = v49;
      *(void *)(v48 + 64) = MEMORY[0x1E4FAC030];
      *(void *)(v48 + 32) = v50;
      LOBYTE(v186) = 0;
      uint64_t v51 = sub_1C04B2AD0(v26, 0, (unsigned __int8 *)&v186, v49);
      if (v51)
      {
        uint64_t v52 = MEMORY[0x1E4FAC030];
      }
      else
      {
        uint64_t v49 = 0;
        uint64_t v52 = 0;
        *(void *)(v48 + 80) = 0;
        *(void *)(v48 + 88) = 0;
      }
      *(void *)(v48 + 72) = v51;
      *(void *)(v48 + 96) = v49;
      *(void *)(v48 + 104) = v52;
      sub_1C151AB2C();
      sub_1C151AB1C();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v27 = sub_1C0EE5C48(0, v27[2] + 1, 1, v27);
      }
      unint64_t v54 = v27[2];
      unint64_t v53 = v27[3];
      if (v54 >= v53 >> 1) {
        uint64_t v27 = sub_1C0EE5C48((void *)(v53 > 1), v54 + 1, 1, v27);
      }
      long long v27[2] = v54 + 1;
      sub_1C0E69308((uint64_t)&v186, (uint64_t)&v27[5 * v54 + 4]);
    }
    swift_unknownObjectRelease();
  }
  unint64_t v174 = *(void *)(a1 + 32);
  uint64_t v55 = v174;
  if (v174 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v55 = v174;
    uint64_t v56 = sub_1C15204BC();
  }
  else
  {
    uint64_t v56 = *(void *)((v174 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  id v151 = v26;
  if (v56)
  {
    if (v56 >= 1)
    {
      uint64_t v57 = 0;
      unint64_t v182 = v55 & 0xC000000000000001;
      unint64_t v162 = (void (**)(char *, void, uint64_t))(v157 + 104);
      uint64_t v166 = OBJC_IVAR____TtC8NewsFeed28SportsScoreDataVisualization_metadata;
      long long v165 = (void (**)(char *, void, uint64_t))(v154 + 104);
      unsigned int v161 = *MEMORY[0x1E4FAC3E0];
      uint64_t v158 = (char *)&v187 + 8;
      long long v156 = v188;
      unsigned int v164 = *MEMORY[0x1E4FAC1C0];
      long long v163 = xmmword_1C1527210;
      id v150 = "com.apple.stocks";
      unint64_t v159 = 0x80000001C1629850;
      long long v160 = xmmword_1C1529AE0;
      id v179 = (id)v56;
      while (1)
      {
        if (v182)
        {
          uint64_t v58 = (void *)MEMORY[0x1C18C7CB0](v57, v55);
        }
        else
        {
          uint64_t v58 = *(void **)(v55 + 8 * v57 + 32);
          swift_unknownObjectRetain();
        }
        uint64_t v59 = swift_getObjectType();
        if (!objc_msgSend(v58, sel_isHidden)) {
          break;
        }
        swift_unknownObjectRelease();
LABEL_38:
        if (v56 == ++v57) {
          goto LABEL_83;
        }
      }
      uint64_t v181 = (void (*)(char *, uint64_t, uint64_t))v59;
      uint64_t v183 = v27;
      sub_1C0E69504(0, &qword_1EB86FE08, (uint64_t (*)(uint64_t))sub_1C0E69568, MEMORY[0x1E4FBBE00]);
      uint64_t v60 = swift_allocObject();
      *(_OWORD *)(v60 + 16) = v163;
      uint64_t v61 = qword_1EB87B198;
      swift_unknownObjectRetain_n();
      if (v61 != -1) {
        swift_once();
      }
      LOBYTE(v186) = 1;
      uint64_t v62 = swift_allocObject();
      *(void *)(v62 + 16) = v58;
      *(_WORD *)(v62 + 24) = 256;
      sub_1C00764C0();
      swift_unknownObjectRetain();
      swift_retain();
      sub_1C151AEBC();
      LOBYTE(v186) = 1;
      sub_1C151AE9C();
      sub_1C151B2DC();
      *(void *)&long long v186 = v58;
      WORD4(v186) = 256;
      sub_1C151A81C();
      swift_allocObject();
      uint64_t v63 = sub_1C151A80C();
      swift_unknownObjectRelease();
      *(void *)(v60 + 32) = v63;
      uint64_t v64 = qword_1EB87B188;
      swift_unknownObjectRetain_n();
      if (v64 != -1) {
        swift_once();
      }
      LOBYTE(v186) = 1;
      *(void *)(swift_allocObject() + 16) = v58;
      sub_1C0078974();
      swift_unknownObjectRetain();
      swift_retain();
      sub_1C151AEBC();
      LOBYTE(v186) = 1;
      sub_1C151AE9C();
      sub_1C151B2DC();
      *(void *)&long long v186 = v58;
      swift_allocObject();
      uint64_t v65 = sub_1C151A80C();
      swift_unknownObjectRelease();
      *(void *)(v60 + 40) = v65;
      *(void *)&long long v186 = v60;
      sub_1C151EBEC();
      uint64_t v184 = v186;
      a1 = v180;
      uint64_t v66 = *(void *)(v180 + v166);
      if (v66)
      {
        uint64_t v67 = *(void **)(v66 + 16);
        if (v67)
        {
          if (objc_msgSend((id)swift_unknownObjectRetain(), sel_sportsType) == (id)3)
          {
            id v68 = objc_msgSend(v67, sel_identifier);
            uint64_t v69 = sub_1C151E62C();
            uint64_t v71 = v70;

            id v72 = objc_msgSend(v58, sel_identifier);
            uint64_t v73 = sub_1C151E62C();
            uint64_t v75 = v74;

            if (v69 == v73 && v71 == v75)
            {
              swift_unknownObjectRelease();
              swift_bridgeObjectRelease_n();
            }
            else
            {
              char v100 = sub_1C1520A9C();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v100 & 1) == 0)
              {
                type metadata accessor for Localized();
                uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
                uint64_t v102 = self;
                swift_unknownObjectRetain();
                id v103 = objc_msgSend(v102, sel_bundleForClass_, ObjCClassFromMetadata);
                sub_1C1515B8C();

                sub_1C0222994(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
                uint64_t v104 = swift_allocObject();
                *(_OWORD *)(v104 + 16) = v160;
                uint64_t v105 = FCTagProviding.localizedTagType.getter();
                uint64_t v107 = v106;
                *(void *)(v104 + 56) = MEMORY[0x1E4FBB1A0];
                *(void *)(v104 + 64) = sub_1BFE9C558();
                *(void *)(v104 + 32) = v105;
                *(void *)(v104 + 40) = v107;
                sub_1C151E66C();
                swift_bridgeObjectRelease();
                if (qword_1EB87C910 != -1) {
                  swift_once();
                }
                uint64_t v108 = qword_1EB86FF68;
                swift_unknownObjectRetain();
                swift_retain();
                if (v108 != -1) {
                  swift_once();
                }
                uint64_t v109 = (void *)qword_1EB86FF58;
                (*v162)(v176, v161, v175);
                *(void *)&long long v186 = v58;
                BYTE8(v186) = 0;
                *(void *)&long long v187 = 0;
                swift_allocObject();
                id v110 = v109;
                sub_1C151A7FC();
                uint64_t v111 = swift_unknownObjectRelease();
                MEMORY[0x1C18C66D0](v111);
                if (*(void *)(v184 + 16) >= *(void *)(v184 + 24) >> 1) {
                  sub_1C151EC8C();
                }
                sub_1C151ECEC();
                sub_1C151EBEC();
              }
              swift_unknownObjectRelease();
            }
            a1 = v180;
LABEL_61:
            uint64_t v27 = v183;
            id v87 = objc_msgSend(v58, sel_compactDisplayName, v150);
            sub_1C151E62C();

            sub_1C0235588(v184);
            swift_bridgeObjectRelease();
            (*v165)(v178, v164, v177);
            uint64_t v88 = sub_1C151AB2C();
            swift_allocObject();
            uint64_t v89 = sub_1C151AB0C();
            *((void *)&v187 + 1) = v88;
            v188[0] = MEMORY[0x1E4FAC1B0];
            *(void *)&long long v186 = v89;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v27 = sub_1C0EE5C48(0, v27[2] + 1, 1, v27);
            }
            unint64_t v91 = v27[2];
            unint64_t v90 = v27[3];
            if (v91 >= v90 >> 1) {
              uint64_t v27 = sub_1C0EE5C48((void *)(v90 > 1), v91 + 1, 1, v27);
            }
            long long v27[2] = v91 + 1;
            sub_1C0E69308((uint64_t)&v186, (uint64_t)&v27[5 * v91 + 4]);
            sub_1C0E69398(v173, (uint64_t)v185);
            if (v185[0])
            {
              sub_1C0E69454((uint64_t)v185, (uint64_t)&v186);
              uint64_t v92 = MEMORY[0x1C18C9C60](v158);
              uint64_t v56 = (uint64_t)v179;
              if (v92)
              {
                uint64_t v93 = (void *)v92;
                uint64_t v94 = MEMORY[0x1C18C9C60](v156);
                if (v94)
                {
                  uint64_t v95 = (void *)v94;
                  v185[0] = 0x3A3A776F6C6C6F66;
                  v185[1] = 0xE800000000000000;
                  swift_unknownObjectRetain();
                  swift_bridgeObjectRetain();
                  id v96 = objc_msgSend(v58, sel_identifier);
                  sub_1C151E62C();

                  sub_1C151E80C();
                  uint64_t v97 = v180;
                  swift_bridgeObjectRelease();
                  sub_1C151CE2C();
                  swift_unknownObjectRelease();
                  sub_1C151A2AC();
                  swift_allocObject();
                  id v98 = v95;
                  id v99 = v93;
                  a1 = v97;
                  sub_1C151A25C();
                  swift_retain();
                  sub_1C1519F9C();

                  swift_unknownObjectRelease();
                  swift_release();
                  uint64_t v56 = (uint64_t)v179;
                  swift_release();
                  sub_1C0E694B0((uint64_t)&v186);
                }
                else
                {
                  sub_1C0E694B0((uint64_t)&v186);
                  swift_unknownObjectRelease();
                }
              }
              else
              {
                sub_1C0E694B0((uint64_t)&v186);
                swift_unknownObjectRelease();
              }
              uint64_t v55 = v174;
            }
            else
            {
              swift_unknownObjectRelease();
              sub_1BFF5134C((uint64_t)v185, (uint64_t (*)(void))sub_1C0E693FC);
              uint64_t v55 = v174;
              uint64_t v56 = (uint64_t)v179;
            }
            goto LABEL_38;
          }
          swift_unknownObjectRelease();
        }
      }
      type metadata accessor for Localized();
      uint64_t v76 = swift_getObjCClassFromMetadata();
      uint64_t v77 = self;
      swift_unknownObjectRetain();
      id v78 = objc_msgSend(v77, sel_bundleForClass_, v76);
      sub_1C1515B8C();

      sub_1C0222994(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v79 = swift_allocObject();
      *(_OWORD *)(v79 + 16) = v160;
      uint64_t v80 = FCTagProviding.localizedTagType.getter();
      uint64_t v82 = v81;
      *(void *)(v79 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v79 + 64) = sub_1BFE9C558();
      *(void *)(v79 + 32) = v80;
      *(void *)(v79 + 40) = v82;
      sub_1C151E66C();
      swift_bridgeObjectRelease();
      if (qword_1EB87C910 != -1) {
        swift_once();
      }
      uint64_t v83 = qword_1EB86FF68;
      swift_unknownObjectRetain();
      swift_retain();
      if (v83 != -1) {
        swift_once();
      }
      unint64_t v84 = (void *)qword_1EB86FF58;
      (*v162)(v176, v161, v175);
      *(void *)&long long v186 = v58;
      BYTE8(v186) = 0;
      *(void *)&long long v187 = 0;
      swift_allocObject();
      id v85 = v84;
      sub_1C151A7FC();
      uint64_t v86 = swift_unknownObjectRelease();
      MEMORY[0x1C18C66D0](v86);
      if (*(void *)(v184 + 16) >= *(void *)(v184 + 24) >> 1) {
        sub_1C151EC8C();
      }
      sub_1C151ECEC();
      sub_1C151EBEC();
      goto LABEL_61;
    }
    __break(1u);
LABEL_107:
    swift_once();
LABEL_95:
    *uint64_t v153 = v55;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    swift_retain();
    uint64_t v131 = (void *)sub_1C151E5EC();
    id v132 = objc_msgSend(v179, sel_systemImageNamed_, v131);

    v181(v176, inited, v175);
    swift_allocObject();
    uint64_t v133 = sub_1C151A7FC();
    swift_release();
    *((void *)v19 + 7) = ObjectType;
    uint64_t v134 = MEMORY[0x1E4FAC030];
    *((void *)v19 + 8) = MEMORY[0x1E4FAC030];
    *((void *)v19 + 4) = v133;
    if (v151 && (id v135 = objc_msgSend(v151, sel_UMCCanonicalID)) != 0)
    {
      uint64_t v136 = v135;
      uint64_t v137 = sub_1C151E62C();
      uint64_t v139 = v138;
    }
    else
    {
      uint64_t v137 = 0;
      uint64_t v139 = 0;
    }
    uint64_t v140 = v180;
    uint64_t v141 = sub_1C0E04F64(v137, v139);
    swift_bridgeObjectRelease();
    *((void *)v19 + 12) = ObjectType;
    *((void *)v19 + 13) = v134;
    *((void *)v19 + 9) = v141;
    uint64_t v142 = swift_allocObject();
    *(void *)(v142 + 16) = v140;
    uint64_t v143 = qword_1EB884900;
    swift_retain();
    if (v143 != -1) {
      swift_once();
    }
    *uint64_t v153 = v142;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    swift_retain();
    uint64_t v144 = (void *)sub_1C151E5EC();
    id v145 = objc_msgSend(v179, sel_systemImageNamed_, v144);

    v181(v176, v182, v175);
    swift_allocObject();
    uint64_t v146 = sub_1C151A7FC();
    swift_release();
    *((void *)v19 + 17) = ObjectType;
    *((void *)v19 + 18) = v134;
    *((void *)v19 + 14) = v146;
    sub_1C151AB1C();
    swift_bridgeObjectRelease();
    unint64_t v148 = v27[2];
    unint64_t v147 = v27[3];
    if (v148 >= v147 >> 1) {
      uint64_t v27 = sub_1C0EE5C48((void *)(v147 > 1), v148 + 1, 1, v27);
    }
    long long v27[2] = v148 + 1;
    sub_1C0E69308((uint64_t)&v186, (uint64_t)&v27[5 * v148 + 4]);
    return v27;
  }
LABEL_83:
  swift_bridgeObjectRelease();
  type metadata accessor for Localized();
  uint64_t v112 = swift_getObjCClassFromMetadata();
  id v113 = objc_msgSend(self, sel_bundleForClass_, v112);
  unint64_t v174 = sub_1C1515B8C();
  uint64_t v173 = v114;

  id v115 = (void *)sub_1C151E5EC();
  id v179 = self;
  uint64_t v172 = (char *)objc_msgSend(v179, sel_systemImageNamed_, v115);

  sub_1C0607A88(0);
  uint64_t v171 = v116;
  uint64_t v117 = swift_allocObject();
  long long v170 = xmmword_1C152C7F0;
  *(_OWORD *)(v117 + 16) = xmmword_1C152C7F0;
  if (qword_1EB8853D0 != -1) {
    swift_once();
  }
  swift_retain();
  swift_retain();
  sub_1C0DB7528();
  uint64_t v119 = v157 + 104;
  id v118 = *(void (**)(char *, uint64_t, uint64_t))(v157 + 104);
  uint64_t v120 = v176;
  LODWORD(v182) = *MEMORY[0x1E4FAC3E0];
  uint64_t v121 = v175;
  uint64_t v181 = v118;
  ((void (*)(char *))v118)(v176);
  *(void *)&long long v186 = a1;
  BYTE8(v186) = 1;
  ObjectType = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C151A81C();
  swift_allocObject();
  uint64_t v122 = sub_1C151A7FC();
  *(void *)(v117 + 56) = ObjectType;
  *(void *)(v117 + 64) = MEMORY[0x1E4FAC030];
  *(void *)(v117 + 32) = v122;
  if (qword_1EB885388 != -1) {
    swift_once();
  }
  uint64_t v183 = v27;
  swift_retain();
  swift_retain();
  sub_1C0DB7528();
  v181(v120, v182, v121);
  *(void *)&long long v186 = a1;
  BYTE8(v186) = 0;
  swift_allocObject();
  uint64_t v123 = sub_1C151A7FC();
  *(void *)(v117 + 96) = ObjectType;
  *(void *)(v117 + 104) = MEMORY[0x1E4FAC030];
  *(void *)(v117 + 72) = v123;
  if (qword_1EB8853A0 != -1) {
    swift_once();
  }
  swift_retain();
  swift_retain();
  sub_1C0DB7528();
  uint64_t v157 = v119;
  v181(v120, v182, v121);
  *(void *)&long long v186 = a1;
  BYTE8(v186) = 2;
  swift_allocObject();
  uint64_t v124 = sub_1C151A7FC();
  *(void *)(v117 + 136) = ObjectType;
  *(void *)(v117 + 144) = MEMORY[0x1E4FAC030];
  *(void *)(v117 + 112) = v124;
  (*(void (**)(char *, void, uint64_t))(v154 + 104))(v178, *MEMORY[0x1E4FAC1C0], v177);
  uint64_t v125 = sub_1C151AB2C();
  swift_allocObject();
  uint64_t v126 = sub_1C151AB0C();
  *((void *)&v187 + 1) = v125;
  v188[0] = MEMORY[0x1E4FAC1B0];
  *(void *)&long long v186 = v126;
  uint64_t v27 = v183;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v27 = sub_1C0EE5C48(0, v27[2] + 1, 1, v27);
  }
  unint64_t v128 = v27[2];
  unint64_t v127 = v27[3];
  uint64_t v129 = v180;
  uint64_t inited = v182;
  if (v128 >= v127 >> 1) {
    uint64_t v27 = sub_1C0EE5C48((void *)(v127 > 1), v128 + 1, 1, v27);
  }
  long long v27[2] = v128 + 1;
  sub_1C0E69308((uint64_t)&v186, (uint64_t)&v27[5 * v128 + 4]);
  if (NFInternalBuild())
  {
    uint64_t v19 = (char **__ptr32 *)swift_allocObject();
    *((_OWORD *)v19 + 1) = v170;
    uint64_t v55 = swift_allocObject();
    *(void *)(v55 + 16) = v129;
    uint64_t v130 = qword_1EB8848E8;
    swift_retain();
    if (v130 == -1) {
      goto LABEL_95;
    }
    goto LABEL_107;
  }
  return v27;
}

void *sub_1C0E64834(uint64_t a1)
{
  uint64_t v2 = sub_1C151B03C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for WebEmbedDataVisualization();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (uint64_t *)((char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!NFInternalBuild()) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v34 = v3;
  uint64_t v33 = sub_1C151AB2C();
  sub_1C0607A88(0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C1527210;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  uint64_t v11 = v10 | 0x2000000000000000;
  uint64_t v12 = qword_1EB8848E8;
  swift_retain();
  if (v12 != -1) {
    swift_once();
  }
  *uint64_t v8 = v11;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  swift_retain();
  uint64_t v13 = (void *)sub_1C151E5EC();
  id v32 = self;
  id v14 = objc_msgSend(v32, sel_systemImageNamed_, v13);

  uint64_t v15 = *(void (**)(void))(v34 + 104);
  LODWORD(v34) = *MEMORY[0x1E4FAC3E0];
  uint64_t v31 = (void (*)(char *, void, uint64_t))v15;
  v15(v5);
  uint64_t v16 = sub_1C151A81C();
  uint64_t v30 = v2;
  uint64_t v17 = v16;
  swift_allocObject();
  uint64_t v18 = sub_1C151A7FC();
  swift_release();
  uint64_t v19 = MEMORY[0x1E4FAC030];
  *(void *)(v9 + 56) = v17;
  *(void *)(v9 + 64) = v19;
  *(void *)(v9 + 32) = v18;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a1;
  uint64_t v21 = v20 | 0x2000000000000000;
  uint64_t v22 = qword_1EB884900;
  swift_retain();
  if (v22 != -1) {
    swift_once();
  }
  *uint64_t v8 = v21;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  swift_retain();
  uint64_t v23 = (void *)sub_1C151E5EC();
  id v24 = objc_msgSend(v32, sel_systemImageNamed_, v23);

  v31(v5, v34, v30);
  swift_allocObject();
  uint64_t v25 = sub_1C151A7FC();
  swift_release();
  *(void *)(v9 + 96) = v17;
  *(void *)(v9 + 104) = MEMORY[0x1E4FAC030];
  *(void *)(v9 + 72) = v25;
  sub_1C151AB1C();
  swift_bridgeObjectRelease();
  uint64_t v26 = sub_1C0EE5C48(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v28 = v26[2];
  unint64_t v27 = v26[3];
  if (v28 >= v27 >> 1) {
    uint64_t v26 = sub_1C0EE5C48((void *)(v27 > 1), v28 + 1, 1, v26);
  }
  v26[2] = v28 + 1;
  sub_1C0E69308((uint64_t)v35, (uint64_t)&v26[5 * v28 + 4]);
  return v26;
}

void *sub_1C0E64CD4(uint64_t a1)
{
  uint64_t v2 = sub_1C151B03C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for WebEmbedDataVisualization();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (uint64_t *)((char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!NFInternalBuild()) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v34 = v3;
  uint64_t v33 = sub_1C151AB2C();
  sub_1C0607A88(0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C1527210;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  uint64_t v11 = v10 | 0x4000000000000000;
  uint64_t v12 = qword_1EB8848E8;
  swift_retain();
  if (v12 != -1) {
    swift_once();
  }
  *uint64_t v8 = v11;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  swift_retain();
  uint64_t v13 = (void *)sub_1C151E5EC();
  id v32 = self;
  id v14 = objc_msgSend(v32, sel_systemImageNamed_, v13);

  uint64_t v15 = *(void (**)(void))(v34 + 104);
  LODWORD(v34) = *MEMORY[0x1E4FAC3E0];
  uint64_t v31 = (void (*)(char *, void, uint64_t))v15;
  v15(v5);
  uint64_t v16 = sub_1C151A81C();
  uint64_t v30 = v2;
  uint64_t v17 = v16;
  swift_allocObject();
  uint64_t v18 = sub_1C151A7FC();
  swift_release();
  uint64_t v19 = MEMORY[0x1E4FAC030];
  *(void *)(v9 + 56) = v17;
  *(void *)(v9 + 64) = v19;
  *(void *)(v9 + 32) = v18;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a1;
  uint64_t v21 = v20 | 0x4000000000000000;
  uint64_t v22 = qword_1EB884900;
  swift_retain();
  if (v22 != -1) {
    swift_once();
  }
  *uint64_t v8 = v21;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  swift_retain();
  uint64_t v23 = (void *)sub_1C151E5EC();
  id v24 = objc_msgSend(v32, sel_systemImageNamed_, v23);

  v31(v5, v34, v30);
  swift_allocObject();
  uint64_t v25 = sub_1C151A7FC();
  swift_release();
  *(void *)(v9 + 96) = v17;
  *(void *)(v9 + 104) = MEMORY[0x1E4FAC030];
  *(void *)(v9 + 72) = v25;
  sub_1C151AB1C();
  swift_bridgeObjectRelease();
  uint64_t v26 = sub_1C0EE5C48(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v28 = v26[2];
  unint64_t v27 = v26[3];
  if (v28 >= v27 >> 1) {
    uint64_t v26 = sub_1C0EE5C48((void *)(v27 > 1), v28 + 1, 1, v26);
  }
  v26[2] = v28 + 1;
  sub_1C0E69308((uint64_t)v35, (uint64_t)&v26[5 * v28 + 4]);
  return v26;
}

void *sub_1C0E65174(uint64_t a1)
{
  uint64_t v2 = sub_1C151B03C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for WebEmbedDataVisualization();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (uint64_t *)((char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!NFInternalBuild()) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v34 = v3;
  uint64_t v33 = sub_1C151AB2C();
  sub_1C0607A88(0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C1527210;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  uint64_t v11 = v10 | 0x6000000000000000;
  uint64_t v12 = qword_1EB8848E8;
  swift_retain();
  if (v12 != -1) {
    swift_once();
  }
  *uint64_t v8 = v11;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  swift_retain();
  uint64_t v13 = (void *)sub_1C151E5EC();
  id v32 = self;
  id v14 = objc_msgSend(v32, sel_systemImageNamed_, v13);

  uint64_t v15 = *(void (**)(void))(v34 + 104);
  LODWORD(v34) = *MEMORY[0x1E4FAC3E0];
  uint64_t v31 = (void (*)(char *, void, uint64_t))v15;
  v15(v5);
  uint64_t v16 = sub_1C151A81C();
  uint64_t v30 = v2;
  uint64_t v17 = v16;
  swift_allocObject();
  uint64_t v18 = sub_1C151A7FC();
  swift_release();
  uint64_t v19 = MEMORY[0x1E4FAC030];
  *(void *)(v9 + 56) = v17;
  *(void *)(v9 + 64) = v19;
  *(void *)(v9 + 32) = v18;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a1;
  uint64_t v21 = v20 | 0x6000000000000000;
  uint64_t v22 = qword_1EB884900;
  swift_retain();
  if (v22 != -1) {
    swift_once();
  }
  *uint64_t v8 = v21;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  swift_retain();
  uint64_t v23 = (void *)sub_1C151E5EC();
  id v24 = objc_msgSend(v32, sel_systemImageNamed_, v23);

  v31(v5, v34, v30);
  swift_allocObject();
  uint64_t v25 = sub_1C151A7FC();
  swift_release();
  *(void *)(v9 + 96) = v17;
  *(void *)(v9 + 104) = MEMORY[0x1E4FAC030];
  *(void *)(v9 + 72) = v25;
  sub_1C151AB1C();
  swift_bridgeObjectRelease();
  uint64_t v26 = sub_1C0EE5C48(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v28 = v26[2];
  unint64_t v27 = v26[3];
  if (v28 >= v27 >> 1) {
    uint64_t v26 = sub_1C0EE5C48((void *)(v27 > 1), v28 + 1, 1, v26);
  }
  v26[2] = v28 + 1;
  sub_1C0E69308((uint64_t)v35, (uint64_t)&v26[5 * v28 + 4]);
  return v26;
}

void *sub_1C0E65614(uint64_t a1)
{
  uint64_t v2 = sub_1C151B03C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for WebEmbedDataVisualization();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (unint64_t *)((char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!NFInternalBuild()) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v34 = v3;
  uint64_t v33 = sub_1C151AB2C();
  sub_1C0607A88(0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C1527210;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  unint64_t v11 = v10 | 0x8000000000000000;
  uint64_t v12 = qword_1EB8848E8;
  swift_retain();
  if (v12 != -1) {
    swift_once();
  }
  *uint64_t v8 = v11;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  swift_retain();
  uint64_t v13 = (void *)sub_1C151E5EC();
  id v32 = self;
  id v14 = objc_msgSend(v32, sel_systemImageNamed_, v13);

  uint64_t v15 = *(void (**)(void))(v34 + 104);
  LODWORD(v34) = *MEMORY[0x1E4FAC3E0];
  uint64_t v31 = (void (*)(char *, void, uint64_t))v15;
  v15(v5);
  uint64_t v16 = sub_1C151A81C();
  uint64_t v30 = v2;
  uint64_t v17 = v16;
  swift_allocObject();
  uint64_t v18 = sub_1C151A7FC();
  swift_release();
  uint64_t v19 = MEMORY[0x1E4FAC030];
  *(void *)(v9 + 56) = v17;
  *(void *)(v9 + 64) = v19;
  *(void *)(v9 + 32) = v18;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a1;
  unint64_t v21 = v20 | 0x8000000000000000;
  uint64_t v22 = qword_1EB884900;
  swift_retain();
  if (v22 != -1) {
    swift_once();
  }
  *uint64_t v8 = v21;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  swift_retain();
  uint64_t v23 = (void *)sub_1C151E5EC();
  id v24 = objc_msgSend(v32, sel_systemImageNamed_, v23);

  v31(v5, v34, v30);
  swift_allocObject();
  uint64_t v25 = sub_1C151A7FC();
  swift_release();
  *(void *)(v9 + 96) = v17;
  *(void *)(v9 + 104) = MEMORY[0x1E4FAC030];
  *(void *)(v9 + 72) = v25;
  sub_1C151AB1C();
  swift_bridgeObjectRelease();
  uint64_t v26 = sub_1C0EE5C48(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v28 = v26[2];
  unint64_t v27 = v26[3];
  if (v28 >= v27 >> 1) {
    uint64_t v26 = sub_1C0EE5C48((void *)(v27 > 1), v28 + 1, 1, v26);
  }
  v26[2] = v28 + 1;
  sub_1C0E69308((uint64_t)v35, (uint64_t)&v26[5 * v28 + 4]);
  return v26;
}

void *sub_1C0E65AB4(uint64_t a1)
{
  uint64_t v2 = sub_1C151B03C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for WebEmbedDataVisualization();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (unint64_t *)((char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!NFInternalBuild()) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v34 = v3;
  uint64_t v33 = sub_1C151AB2C();
  sub_1C0607A88(0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C1527210;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  unint64_t v11 = v10 | 0xA000000000000000;
  uint64_t v12 = qword_1EB8848E8;
  swift_retain();
  if (v12 != -1) {
    swift_once();
  }
  *uint64_t v8 = v11;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  swift_retain();
  uint64_t v13 = (void *)sub_1C151E5EC();
  id v32 = self;
  id v14 = objc_msgSend(v32, sel_systemImageNamed_, v13);

  uint64_t v15 = *(void (**)(void))(v34 + 104);
  LODWORD(v34) = *MEMORY[0x1E4FAC3E0];
  uint64_t v31 = (void (*)(char *, void, uint64_t))v15;
  v15(v5);
  uint64_t v16 = sub_1C151A81C();
  uint64_t v30 = v2;
  uint64_t v17 = v16;
  swift_allocObject();
  uint64_t v18 = sub_1C151A7FC();
  swift_release();
  uint64_t v19 = MEMORY[0x1E4FAC030];
  *(void *)(v9 + 56) = v17;
  *(void *)(v9 + 64) = v19;
  *(void *)(v9 + 32) = v18;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a1;
  unint64_t v21 = v20 | 0xA000000000000000;
  uint64_t v22 = qword_1EB884900;
  swift_retain();
  if (v22 != -1) {
    swift_once();
  }
  *uint64_t v8 = v21;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  swift_retain();
  uint64_t v23 = (void *)sub_1C151E5EC();
  id v24 = objc_msgSend(v32, sel_systemImageNamed_, v23);

  v31(v5, v34, v30);
  swift_allocObject();
  uint64_t v25 = sub_1C151A7FC();
  swift_release();
  *(void *)(v9 + 96) = v17;
  *(void *)(v9 + 104) = MEMORY[0x1E4FAC030];
  *(void *)(v9 + 72) = v25;
  sub_1C151AB1C();
  swift_bridgeObjectRelease();
  uint64_t v26 = sub_1C0EE5C48(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v28 = v26[2];
  unint64_t v27 = v26[3];
  if (v28 >= v27 >> 1) {
    uint64_t v26 = sub_1C0EE5C48((void *)(v27 > 1), v28 + 1, 1, v26);
  }
  v26[2] = v28 + 1;
  sub_1C0E69308((uint64_t)v35, (uint64_t)&v26[5 * v28 + 4]);
  return v26;
}

void *sub_1C0E65F5C(uint64_t a1)
{
  uint64_t v2 = sub_1C151B03C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for WebEmbedDataVisualization();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (unint64_t *)((char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!NFInternalBuild()) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v34 = v3;
  uint64_t v33 = sub_1C151AB2C();
  sub_1C0607A88(0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C1527210;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  unint64_t v11 = v10 | 0xC000000000000000;
  uint64_t v12 = qword_1EB8848E8;
  swift_retain();
  if (v12 != -1) {
    swift_once();
  }
  *uint64_t v8 = v11;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  swift_retain();
  uint64_t v13 = (void *)sub_1C151E5EC();
  id v32 = self;
  id v14 = objc_msgSend(v32, sel_systemImageNamed_, v13);

  uint64_t v15 = *(void (**)(void))(v34 + 104);
  LODWORD(v34) = *MEMORY[0x1E4FAC3E0];
  uint64_t v31 = (void (*)(char *, void, uint64_t))v15;
  v15(v5);
  uint64_t v16 = sub_1C151A81C();
  uint64_t v30 = v2;
  uint64_t v17 = v16;
  swift_allocObject();
  uint64_t v18 = sub_1C151A7FC();
  swift_release();
  uint64_t v19 = MEMORY[0x1E4FAC030];
  *(void *)(v9 + 56) = v17;
  *(void *)(v9 + 64) = v19;
  *(void *)(v9 + 32) = v18;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a1;
  unint64_t v21 = v20 | 0xC000000000000000;
  uint64_t v22 = qword_1EB884900;
  swift_retain();
  if (v22 != -1) {
    swift_once();
  }
  *uint64_t v8 = v21;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  swift_retain();
  uint64_t v23 = (void *)sub_1C151E5EC();
  id v24 = objc_msgSend(v32, sel_systemImageNamed_, v23);

  v31(v5, v34, v30);
  swift_allocObject();
  uint64_t v25 = sub_1C151A7FC();
  swift_release();
  *(void *)(v9 + 96) = v17;
  *(void *)(v9 + 104) = MEMORY[0x1E4FAC030];
  *(void *)(v9 + 72) = v25;
  sub_1C151AB1C();
  swift_bridgeObjectRelease();
  uint64_t v26 = sub_1C0EE5C48(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v28 = v26[2];
  unint64_t v27 = v26[3];
  if (v28 >= v27 >> 1) {
    uint64_t v26 = sub_1C0EE5C48((void *)(v27 > 1), v28 + 1, 1, v26);
  }
  v26[2] = v28 + 1;
  sub_1C0E69308((uint64_t)v35, (uint64_t)&v26[5 * v28 + 4]);
  return v26;
}

void sub_1C0E663FC(void *a1, char *a2, uint64_t a3)
{
  uint64_t v175 = a3;
  uint64_t v178 = sub_1C151AB3C();
  uint64_t v157 = *(void *)(v178 - 8);
  MEMORY[0x1F4188790](v178);
  id v179 = (char *)&v154 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v176 = sub_1C151B03C();
  uint64_t v6 = *(void *)(v176 - 8);
  MEMORY[0x1F4188790](v176);
  uint64_t v177 = (char *)&v154 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FAC5E8];
  sub_1C0E695DC(0, &qword_1EB86FE70, (uint64_t (*)(void))sub_1C00764C0, (uint64_t)&type metadata for FollowingCommandState, MEMORY[0x1E4FAC5E8]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v169 = (char *)&v154 - v10;
  unint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FAC360];
  sub_1C0E695DC(0, &qword_1EB86FE38, (uint64_t (*)(void))sub_1C00764C0, (uint64_t)&type metadata for FollowingCommandState, MEMORY[0x1E4FAC360]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v168 = (char *)&v154 - v13;
  id v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FAC368];
  sub_1C0E695DC(0, (unint64_t *)&unk_1EB86FE50, (uint64_t (*)(void))sub_1C00764C0, (uint64_t)&type metadata for FollowingCommandState, MEMORY[0x1E4FAC368]);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v167 = (char *)&v154 - v16;
  sub_1C0E695DC(0, &qword_1EB8945D8, (uint64_t (*)(void))sub_1C0067870, (uint64_t)&type metadata for ManageChannelNotificationsCommandState, v8);
  MEMORY[0x1F4188790](v17 - 8);
  sub_1C0E695DC(0, &qword_1EB8945C8, (uint64_t (*)(void))sub_1C0067870, (uint64_t)&type metadata for ManageChannelNotificationsCommandState, v11);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v20 = (char *)&v154 - v19;
  sub_1C0E695DC(0, &qword_1EB8945D0, (uint64_t (*)(void))sub_1C0067870, (uint64_t)&type metadata for ManageChannelNotificationsCommandState, v14);
  MEMORY[0x1F4188790](v21 - 8);
  long long v186 = (id *)((char *)&v154 - v22);
  sub_1C0E695DC(0, (unint64_t *)&unk_1EB86FE60, (uint64_t (*)(void))sub_1C0078974, (uint64_t)&type metadata for BlockingCommandState, v8);
  MEMORY[0x1F4188790](v23 - 8);
  unint64_t v174 = (char *)&v154 - v24;
  sub_1C0E695DC(0, (unint64_t *)&unk_1EB86FE28, (uint64_t (*)(void))sub_1C0078974, (uint64_t)&type metadata for BlockingCommandState, v11);
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v173 = (char *)&v154 - v26;
  sub_1C0E695DC(0, (unint64_t *)&unk_1EB86FE40, (uint64_t (*)(void))sub_1C0078974, (uint64_t)&type metadata for BlockingCommandState, v14);
  MEMORY[0x1F4188790](v27 - 8);
  uint64_t v172 = (char *)&v154 - v28;
  uint64_t v29 = sub_1C151CE3C();
  MEMORY[0x1F4188790](v29 - 8);
  uint64_t v158 = (char *)&v154 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v31 = objc_msgSend(FCFeedDescriptor.feedTag.getter(), sel_asPuzzleType);
  swift_unknownObjectRelease();
  uint64_t v32 = MEMORY[0x1E4FAC030];
  uint64_t v156 = v6;
  if (v31)
  {
    LOBYTE(v189) = 0;
    uint64_t v33 = _s5TeaUI15ContextMenuItemC8NewsFeedE5share10puzzleType0hC0ACSgSo08FCPuzzleJ9Providing_p_AD012CommandShareC0OtFZ_0((uint64_t)v31, (unsigned __int8 *)&v189);
    if (v33)
    {
      uint64_t v34 = v33;
      *((void *)&v190 + 1) = sub_1C151A81C();
      uint64_t v191 = v32;
      *(void *)&long long v189 = v34;
    }
    else
    {
      uint64_t v191 = 0;
      long long v189 = 0u;
      long long v190 = 0u;
    }
    uint64_t v37 = sub_1C0EE5C48(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v39 = v37[2];
    unint64_t v38 = v37[3];
    if (v39 >= v38 >> 1) {
      uint64_t v37 = sub_1C0EE5C48((void *)(v38 > 1), v39 + 1, 1, v37);
    }
    v37[2] = v39 + 1;
    sub_1C0E69308((uint64_t)&v189, (uint64_t)&v37[5 * v39 + 4]);
    swift_unknownObjectRelease();
    uint64_t v32 = MEMORY[0x1E4FAC030];
  }
  else
  {
    LOBYTE(v189) = 0;
    uint64_t v35 = _s5TeaUI15ContextMenuItemC8NewsFeedE5share14feedDescriptor0hC0ACSgSo06FCFeedJ0C_AD012CommandShareC0OtFZ_0(a1, (unsigned __int8 *)&v189);
    if (v35)
    {
      uint64_t v36 = v35;
      *((void *)&v190 + 1) = sub_1C151A81C();
      uint64_t v191 = v32;
      *(void *)&long long v189 = v36;
    }
    else
    {
      uint64_t v191 = 0;
      long long v189 = 0u;
      long long v190 = 0u;
    }
    uint64_t v37 = sub_1C0EE5C48(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v41 = v37[2];
    unint64_t v40 = v37[3];
    if (v41 >= v40 >> 1) {
      uint64_t v37 = sub_1C0EE5C48((void *)(v40 > 1), v41 + 1, 1, v37);
    }
    v37[2] = v41 + 1;
    sub_1C0E69308((uint64_t)&v189, (uint64_t)&v37[5 * v41 + 4]);
  }
  uint64_t v42 = _s5TeaUI15ContextMenuItemC8NewsFeedE8copyLink14feedDescriptorACSo06FCFeedK0C_tFZ_0(a1);
  uint64_t v43 = sub_1C151A81C();
  *((void *)&v190 + 1) = v43;
  uint64_t v191 = v32;
  *(void *)&long long v189 = v42;
  unint64_t v45 = v37[2];
  unint64_t v44 = v37[3];
  if (v45 >= v44 >> 1) {
    uint64_t v37 = sub_1C0EE5C48((void *)(v44 > 1), v45 + 1, 1, v37);
  }
  v37[2] = v45 + 1;
  sub_1C0E69308((uint64_t)&v189, (uint64_t)&v37[5 * v45 + 4]);
  id v46 = objc_msgSend(FCFeedDescriptor.feedTag.getter(), sel_asPuzzleType);
  swift_unknownObjectRelease();
  if (v46)
  {
    swift_getObjectType();
    if (FCPuzzleTypeProviding.puzzleTypeTraits.getter())
    {
      uint64_t v47 = _s5TeaUI15ContextMenuItemC8NewsFeedE7PuzzlesV21openPuzzleFullArchive10puzzleTypeACSo08FCPuzzleN9Providing_p_tFZ_0(v46);
      *((void *)&v190 + 1) = v43;
      uint64_t v191 = v32;
      *(void *)&long long v189 = v47;
      unint64_t v49 = v37[2];
      unint64_t v48 = v37[3];
      if (v49 >= v48 >> 1) {
        uint64_t v37 = sub_1C0EE5C48((void *)(v48 > 1), v49 + 1, 1, v37);
      }
      v37[2] = v49 + 1;
      sub_1C0E69308((uint64_t)&v189, (uint64_t)&v37[5 * v49 + 4]);
    }
    swift_unknownObjectRelease();
  }
  if ((sub_1BFFD07D4(17, a2) & 1) == 0)
  {
    id v50 = FCFeedDescriptor.feedTag.getter();
    uint64_t v51 = _s5TeaUI15ContextMenuItemC8NewsFeedE6follow3tagACSgSo14FCTagProviding_pSg_tFZ_0((uint64_t)v50);
    swift_unknownObjectRelease();
    if (v51)
    {
      *((void *)&v190 + 1) = v43;
      uint64_t v191 = v32;
      *(void *)&long long v189 = v51;
    }
    else
    {
      uint64_t v191 = 0;
      long long v189 = 0u;
      long long v190 = 0u;
    }
    unint64_t v53 = v37[2];
    unint64_t v52 = v37[3];
    if (v53 >= v52 >> 1) {
      uint64_t v37 = sub_1C0EE5C48((void *)(v52 > 1), v53 + 1, 1, v37);
    }
    v37[2] = v53 + 1;
    sub_1C0E69308((uint64_t)&v189, (uint64_t)&v37[5 * v53 + 4]);
    sub_1C0E69398(v175, (uint64_t)&v187);
    if (v187)
    {
      sub_1C0E69454((uint64_t)&v187, (uint64_t)&v189);
      uint64_t v54 = MEMORY[0x1C18C9C60]((char *)&v190 + 8);
      if (v54)
      {
        uint64_t v55 = (void *)v54;
        unint64_t v185 = (unint64_t)v20;
        uint64_t v56 = MEMORY[0x1C18C9C60](&v191);
        if (v56)
        {
          uint64_t v57 = (void *)v56;
          uint64_t v182 = v190;
          uint64_t v183 = *((void *)&v189 + 1);
          swift_bridgeObjectRetain();
          id v58 = FCFeedDescriptor.feedTag.getter();
          uint64_t v184 = a2;
          uint64_t v187 = 0x3A3A776F6C6C6F66;
          unint64_t v188 = 0xE800000000000000;
          id v59 = objc_msgSend(v58, sel_identifier);
          sub_1C151E62C();

          sub_1C151E80C();
          swift_bridgeObjectRelease();
          sub_1C151CE2C();
          a2 = v184;
          swift_unknownObjectRelease();
          sub_1C151A2AC();
          swift_allocObject();
          id v60 = v57;
          id v61 = v55;
          sub_1C151A25C();
          swift_retain();
          sub_1C1519F9C();

          uint64_t v32 = MEMORY[0x1E4FAC030];
          swift_release();
          swift_release();
          sub_1C0E694B0((uint64_t)&v189);
        }
        else
        {
          sub_1C0E694B0((uint64_t)&v189);
        }
        uint64_t v20 = (char *)v185;
      }
      else
      {
        sub_1C0E694B0((uint64_t)&v189);
      }
    }
    else
    {
      sub_1BFF5134C((uint64_t)&v187, (uint64_t (*)(void))sub_1C0E693FC);
    }
  }
  if ((sub_1BFFD07D4(18, a2) & 1) == 0)
  {
    uint64_t v184 = a2;
    unint64_t v185 = (unint64_t)v20;
    uint64_t v183 = (uint64_t)a1;
    id v62 = FCFeedDescriptor.feedTag.getter();
    uint64_t v63 = qword_1EB87B188;
    swift_unknownObjectRetain();
    if (v63 != -1) {
      swift_once();
    }
    LOBYTE(v189) = 1;
    *(void *)(swift_allocObject() + 16) = v62;
    sub_1C0078974();
    swift_unknownObjectRetain();
    swift_retain();
    sub_1C151AEBC();
    LOBYTE(v189) = 1;
    sub_1C151AE9C();
    sub_1C151B2DC();
    *(void *)&long long v189 = v62;
    swift_allocObject();
    uint64_t v64 = sub_1C151A80C();
    swift_unknownObjectRelease();
    uint64_t v32 = MEMORY[0x1E4FAC030];
    *((void *)&v190 + 1) = v43;
    uint64_t v191 = MEMORY[0x1E4FAC030];
    *(void *)&long long v189 = v64;
    unint64_t v66 = v37[2];
    unint64_t v65 = v37[3];
    if (v66 >= v65 >> 1) {
      uint64_t v37 = sub_1C0EE5C48((void *)(v65 > 1), v66 + 1, 1, v37);
    }
    v37[2] = v66 + 1;
    sub_1C0E69308((uint64_t)&v189, (uint64_t)&v37[5 * v66 + 4]);
    a2 = v184;
  }
  if (sub_1BFFD07D4(23, a2))
  {
    uint64_t v67 = _s5TeaUI15ContextMenuItemC8NewsFeedE14manageMySportsACyFZ_0();
    *((void *)&v190 + 1) = v43;
    uint64_t v191 = v32;
    *(void *)&long long v189 = v67;
    unint64_t v69 = v37[2];
    unint64_t v68 = v37[3];
    if (v69 >= v68 >> 1) {
      uint64_t v37 = sub_1C0EE5C48((void *)(v68 > 1), v69 + 1, 1, v37);
    }
    v37[2] = v69 + 1;
    sub_1C0E69308((uint64_t)&v189, (uint64_t)&v37[5 * v69 + 4]);
  }
  id v70 = FCFeedDescriptor.feedTag.getter();
  uint64_t v71 = qword_1EB85F568;
  swift_unknownObjectRetain();
  if (v71 != -1) {
    swift_once();
  }
  LOBYTE(v189) = 0;
  sub_1C0067870();
  swift_unknownObjectRetain();
  swift_retain();
  sub_1C151AEBC();
  LOBYTE(v189) = 0;
  sub_1C151AE9C();
  sub_1C151B2DC();
  *(void *)&long long v189 = v70;
  swift_allocObject();
  uint64_t v72 = sub_1C151A80C();
  swift_unknownObjectRelease_n();
  *((void *)&v190 + 1) = v43;
  uint64_t v191 = MEMORY[0x1E4FAC030];
  *(void *)&long long v189 = v72;
  unint64_t v74 = v37[2];
  unint64_t v73 = v37[3];
  if (v74 >= v73 >> 1) {
    uint64_t v37 = sub_1C0EE5C48((void *)(v73 > 1), v74 + 1, 1, v37);
  }
  v37[2] = v74 + 1;
  sub_1C0E69308((uint64_t)&v189, (uint64_t)&v37[5 * v74 + 4]);
  uint64_t v180 = sub_1C151AB2C();
  sub_1C151AB1C();
  swift_bridgeObjectRelease();
  uint64_t v75 = sub_1C0EE5C48(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v77 = v75[2];
  unint64_t v76 = v75[3];
  if (v77 >= v76 >> 1) {
    uint64_t v75 = sub_1C0EE5C48((void *)(v76 > 1), v77 + 1, 1, v75);
  }
  v75[2] = v77 + 1;
  sub_1C0E69308((uint64_t)&v189, (uint64_t)&v75[5 * v77 + 4]);
  id v78 = objc_msgSend(FCFeedDescriptor.feedTag.getter(), sel_asSportsEvent);
  swift_unknownObjectRelease();
  if (!v78) {
    return;
  }
  id v79 = objc_msgSend(v78, sel_eventCompetitorTags);
  uint64_t v80 = (unsigned int *)MEMORY[0x1E4FAC3E0];
  if (!v79)
  {
LABEL_83:
    long long v186 = v75;
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v121 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v122 = sub_1C1515B8C();
    uint64_t v182 = v123;
    uint64_t v183 = v122;

    uint64_t v124 = (void *)sub_1C151E5EC();
    id v181 = objc_msgSend(self, sel_systemImageNamed_, v124);

    sub_1C0607A88(0);
    uint64_t v175 = v125;
    uint64_t v126 = swift_allocObject();
    *(_OWORD *)(v126 + 16) = xmmword_1C152C7F0;
    uint64_t v127 = qword_1EB8853D0;
    swift_unknownObjectRetain();
    if (v127 != -1) {
      swift_once();
    }
    swift_unknownObjectRetain();
    swift_retain();
    sub_1C0DB7528();
    unsigned int v128 = *v80;
    uint64_t v129 = *(char **)(v156 + 104);
    uint64_t v130 = v176;
    uint64_t v131 = v177;
    LODWORD(v185) = v128;
    uint64_t v184 = v129;
    ((void (*)(char *))v129)(v177);
    *(void *)&long long v189 = v78;
    BYTE8(v189) = 4;
    swift_allocObject();
    uint64_t v132 = sub_1C151A7FC();
    swift_unknownObjectRelease();
    *(void *)(v126 + 56) = v43;
    *(void *)(v126 + 64) = MEMORY[0x1E4FAC030];
    *(void *)(v126 + 32) = v132;
    uint64_t v133 = qword_1EB885388;
    swift_unknownObjectRetain();
    if (v133 != -1) {
      swift_once();
    }
    swift_unknownObjectRetain();
    swift_retain();
    sub_1C0DB7528();
    ((void (*)(char *, void, uint64_t))v184)(v131, v185, v130);
    *(void *)&long long v189 = v78;
    BYTE8(v189) = 3;
    swift_allocObject();
    uint64_t v134 = sub_1C151A7FC();
    swift_unknownObjectRelease();
    *(void *)(v126 + 96) = v43;
    *(void *)(v126 + 104) = MEMORY[0x1E4FAC030];
    *(void *)(v126 + 72) = v134;
    uint64_t v135 = qword_1EB8853A0;
    swift_unknownObjectRetain();
    if (v135 != -1) {
      swift_once();
    }
    swift_unknownObjectRetain();
    swift_retain();
    sub_1C0DB7528();
    ((void (*)(char *, void, uint64_t))v184)(v131, v185, v130);
    *(void *)&long long v189 = v78;
    BYTE8(v189) = 5;
    swift_allocObject();
    uint64_t v136 = sub_1C151A7FC();
    swift_unknownObjectRelease();
    *(void *)(v126 + 136) = v43;
    *(void *)(v126 + 144) = MEMORY[0x1E4FAC030];
    *(void *)(v126 + 112) = v136;
    (*(void (**)(char *, void, uint64_t))(v157 + 104))(v179, *MEMORY[0x1E4FAC1C0], v178);
    uint64_t v137 = v180;
    swift_allocObject();
    uint64_t v138 = sub_1C151AB0C();
    *((void *)&v190 + 1) = v137;
    uint64_t v191 = MEMORY[0x1E4FAC1B0];
    *(void *)&long long v189 = v138;
    uint64_t v139 = v186;
    unint64_t v141 = v186[2];
    unint64_t v140 = v186[3];
    if (v141 >= v140 >> 1) {
      uint64_t v139 = sub_1C0EE5C48((void *)(v140 > 1), v141 + 1, 1, v186);
    }
    v139[2] = v141 + 1;
    sub_1C0E69308((uint64_t)&v189, (uint64_t)&v139[5 * v141 + 4]);
    if (NFInternalBuild())
    {
      uint64_t v142 = swift_allocObject();
      *(_OWORD *)(v142 + 16) = xmmword_1C1527210;
      uint64_t v143 = _s5TeaUI15ContextMenuItemC8NewsFeedE11sportsEventAeCSgSo08FCSportsI9Providing_p_tFZ_0((uint64_t)v78);
      if (v143)
      {
        uint64_t v144 = MEMORY[0x1E4FAC030];
        uint64_t v145 = v43;
      }
      else
      {
        uint64_t v145 = 0;
        uint64_t v144 = 0;
        *(void *)(v142 + 40) = 0;
        *(void *)(v142 + 48) = 0;
      }
      *(void *)(v142 + 32) = v143;
      *(void *)(v142 + 56) = v145;
      *(void *)(v142 + 64) = v144;
      id v146 = objc_msgSend(v78, sel_UMCCanonicalID, v154);
      if (v146)
      {
        unint64_t v147 = v146;
        uint64_t v148 = sub_1C151E62C();
        uint64_t v150 = v149;
      }
      else
      {
        uint64_t v148 = 0;
        uint64_t v150 = 0;
      }
      uint64_t v151 = sub_1C0E04F64(v148, v150);
      swift_bridgeObjectRelease();
      *(void *)(v142 + 96) = v43;
      *(void *)(v142 + 104) = MEMORY[0x1E4FAC030];
      *(void *)(v142 + 72) = v151;
      sub_1C151AB1C();
      swift_bridgeObjectRelease();
      unint64_t v153 = v139[2];
      unint64_t v152 = v139[3];
      if (v153 >= v152 >> 1) {
        uint64_t v139 = sub_1C0EE5C48((void *)(v152 > 1), v153 + 1, 1, v139);
      }
      v139[2] = v153 + 1;
      sub_1C0E69308((uint64_t)&v189, (uint64_t)&v139[5 * v153 + 4]);
    }
    swift_unknownObjectRelease();
    return;
  }
  uint64_t v81 = v79;
  sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB86B430);
  unint64_t v82 = sub_1C151EBCC();

  if (v82 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v83 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v83 = *(void *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  id v154 = v78;
  if (!v83)
  {
LABEL_82:
    swift_bridgeObjectRelease();
    id v78 = v154;
    uint64_t v80 = (unsigned int *)MEMORY[0x1E4FAC3E0];
    goto LABEL_83;
  }
  if (v83 >= 1)
  {
    unint64_t v84 = 0;
    unint64_t v185 = v82 & 0xC000000000000001;
    unsigned int v166 = *v80;
    long long v165 = (void (**)(char *, void, uint64_t))(v156 + 104);
    unsigned int v164 = *MEMORY[0x1E4FAC1C0];
    long long v163 = (void (**)(char *, void, uint64_t))(v157 + 104);
    unint64_t v159 = (char *)&v190 + 8;
    unint64_t v155 = &v191;
    long long v162 = xmmword_1C152C7F0;
    unint64_t v161 = 0x80000001C1629850;
    long long v160 = xmmword_1C1529AE0;
    unint64_t v171 = v82;
    uint64_t v170 = v83;
    while (1)
    {
      if (v185)
      {
        id v85 = (void *)MEMORY[0x1C18C7CB0](v84, v82);
      }
      else
      {
        id v85 = *(void **)(v82 + 8 * (void)v84 + 32);
        swift_unknownObjectRetain();
      }
      uint64_t ObjectType = swift_getObjectType();
      if (!objc_msgSend(v85, sel_isHidden))
      {
        id v181 = (id)ObjectType;
        uint64_t v184 = v84;
        long long v186 = v75;
        id v87 = objc_msgSend(v85, sel_compactDisplayName);
        uint64_t v88 = sub_1C151E62C();
        uint64_t v182 = v89;
        uint64_t v183 = v88;

        sub_1C0607A88(0);
        uint64_t v90 = swift_allocObject();
        *(_OWORD *)(v90 + 16) = v162;
        uint64_t v91 = qword_1EB87B198;
        swift_unknownObjectRetain_n();
        if (v91 != -1) {
          swift_once();
        }
        LOBYTE(v189) = 1;
        uint64_t v92 = swift_allocObject();
        *(void *)(v92 + 16) = v85;
        *(_WORD *)(v92 + 24) = 256;
        sub_1C00764C0();
        swift_unknownObjectRetain();
        swift_retain();
        sub_1C151AEBC();
        LOBYTE(v189) = 1;
        sub_1C151AE9C();
        sub_1C151B2DC();
        *(void *)&long long v189 = v85;
        WORD4(v189) = 256;
        swift_allocObject();
        uint64_t v93 = sub_1C151A80C();
        swift_unknownObjectRelease();
        *(void *)(v90 + 56) = v43;
        uint64_t v94 = MEMORY[0x1E4FAC030];
        *(void *)(v90 + 64) = MEMORY[0x1E4FAC030];
        *(void *)(v90 + 32) = v93;
        uint64_t v95 = qword_1EB87B188;
        swift_unknownObjectRetain_n();
        if (v95 != -1) {
          swift_once();
        }
        LOBYTE(v189) = 1;
        *(void *)(swift_allocObject() + 16) = v85;
        sub_1C0078974();
        swift_unknownObjectRetain();
        swift_retain();
        sub_1C151AEBC();
        LOBYTE(v189) = 1;
        sub_1C151AE9C();
        sub_1C151B2DC();
        *(void *)&long long v189 = v85;
        swift_allocObject();
        uint64_t v96 = sub_1C151A80C();
        swift_unknownObjectRelease();
        *(void *)(v90 + 96) = v43;
        *(void *)(v90 + 104) = v94;
        *(void *)(v90 + 72) = v96;
        type metadata accessor for Localized();
        uint64_t v97 = swift_getObjCClassFromMetadata();
        id v98 = self;
        swift_unknownObjectRetain();
        id v99 = objc_msgSend(v98, sel_bundleForClass_, v97);
        sub_1C1515B8C();

        sub_1C0222994(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
        uint64_t v100 = swift_allocObject();
        *(_OWORD *)(v100 + 16) = v160;
        uint64_t v101 = FCTagProviding.localizedTagType.getter();
        uint64_t v103 = v102;
        *(void *)(v100 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v100 + 64) = sub_1BFE9C558();
        *(void *)(v100 + 32) = v101;
        *(void *)(v100 + 40) = v103;
        sub_1C151E66C();
        swift_bridgeObjectRelease();
        if (qword_1EB87C910 != -1) {
          swift_once();
        }
        uint64_t v104 = qword_1EB86FF68;
        swift_unknownObjectRetain();
        swift_retain();
        uint64_t v105 = v176;
        unint64_t v84 = v184;
        if (v104 != -1) {
          swift_once();
        }
        uint64_t v106 = (void *)qword_1EB86FF58;
        (*v165)(v177, v166, v105);
        *(void *)&long long v189 = v85;
        BYTE8(v189) = 0;
        *(void *)&long long v190 = 0;
        swift_allocObject();
        id v107 = v106;
        uint64_t v108 = sub_1C151A7FC();
        swift_unknownObjectRelease();
        *(void *)(v90 + 136) = v43;
        *(void *)(v90 + 144) = MEMORY[0x1E4FAC030];
        *(void *)(v90 + 112) = v108;
        (*v163)(v179, v164, v178);
        uint64_t v109 = v180;
        swift_allocObject();
        uint64_t v110 = sub_1C151AB0C();
        *((void *)&v190 + 1) = v109;
        uint64_t v191 = MEMORY[0x1E4FAC1B0];
        *(void *)&long long v189 = v110;
        uint64_t v75 = v186;
        unint64_t v112 = v186[2];
        unint64_t v111 = v186[3];
        if (v112 >= v111 >> 1) {
          uint64_t v75 = sub_1C0EE5C48((void *)(v111 > 1), v112 + 1, 1, v186);
        }
        unint64_t v82 = v171;
        uint64_t v83 = v170;
        v75[2] = v112 + 1;
        sub_1C0E69308((uint64_t)&v189, (uint64_t)&v75[5 * v112 + 4]);
        sub_1C0E69398(v175, (uint64_t)&v187);
        if (!v187)
        {
          swift_unknownObjectRelease();
          sub_1BFF5134C((uint64_t)&v187, (uint64_t (*)(void))sub_1C0E693FC);
          goto LABEL_61;
        }
        sub_1C0E69454((uint64_t)&v187, (uint64_t)&v189);
        uint64_t v113 = MEMORY[0x1C18C9C60](v159);
        if (v113)
        {
          uint64_t v114 = (void *)v113;
          uint64_t v115 = MEMORY[0x1C18C9C60](v155);
          if (v115)
          {
            id v116 = (void *)v115;
            uint64_t v183 = *((void *)&v189 + 1);
            long long v186 = v75;
            uint64_t v187 = 0x3A3A776F6C6C6F66;
            unint64_t v188 = 0xE800000000000000;
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
            id v117 = objc_msgSend(v85, sel_identifier);
            sub_1C151E62C();

            uint64_t v83 = v170;
            sub_1C151E80C();
            swift_bridgeObjectRelease();
            sub_1C151CE2C();
            swift_unknownObjectRelease();
            sub_1C151A2AC();
            swift_allocObject();
            id v118 = v116;
            id v119 = v114;
            uint64_t v75 = v186;
            sub_1C151A25C();
            swift_retain();
            sub_1C1519F9C();

            swift_unknownObjectRelease();
            unint64_t v82 = v171;
            swift_release();
            swift_release();
            sub_1C0E694B0((uint64_t)&v189);
          }
          else
          {
            sub_1C0E694B0((uint64_t)&v189);
            swift_unknownObjectRelease();
          }
          goto LABEL_61;
        }
        sub_1C0E694B0((uint64_t)&v189);
      }
      swift_unknownObjectRelease();
LABEL_61:
      if ((char *)v83 == ++v84) {
        goto LABEL_82;
      }
    }
  }
  __break(1u);
}

void *sub_1C0E68268(void *a1, long long *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151B03C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v8) = *((unsigned char *)a2 + 32);
  long long v10 = a2[1];
  long long v44 = *a2;
  long long v45 = v10;
  LOBYTE(v46) = v8;
  unsigned __int8 v43 = 0;
  uint64_t v11 = _s5TeaUI15ContextMenuItemC8NewsFeedE5share6puzzle0H4Data0hC0ACSgSo17FCPuzzleProviding_p_AD011PuzzleShareJ0VSgAD07CommandnC0OtFZ_0((uint64_t)a1, (uint64_t)&v44, &v43);
  uint64_t v12 = MEMORY[0x1E4FAC030];
  if (v11)
  {
    uint64_t v13 = v11;
    *((void *)&v45 + 1) = sub_1C151A81C();
    uint64_t v46 = v12;
    *(void *)&long long v44 = v13;
  }
  else
  {
    uint64_t v46 = 0;
    long long v44 = 0u;
    long long v45 = 0u;
  }
  id v14 = sub_1C0EE5C48(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v16 = v14[2];
  unint64_t v15 = v14[3];
  if (v16 >= v15 >> 1) {
    id v14 = sub_1C0EE5C48((void *)(v15 > 1), v16 + 1, 1, v14);
  }
  _OWORD v14[2] = v16 + 1;
  sub_1C0E69308((uint64_t)&v44, (uint64_t)&v14[5 * v16 + 4]);
  uint64_t v17 = _s5TeaUI15ContextMenuItemC8NewsFeedE8copyLink6puzzleACSo17FCPuzzleProviding_p_tFZ_0(a1);
  uint64_t v18 = sub_1C151A81C();
  *((void *)&v45 + 1) = v18;
  uint64_t v46 = v12;
  *(void *)&long long v44 = v17;
  unint64_t v20 = v14[2];
  unint64_t v19 = v14[3];
  if (v20 >= v19 >> 1) {
    id v14 = sub_1C0EE5C48((void *)(v19 > 1), v20 + 1, 1, v14);
  }
  _OWORD v14[2] = v20 + 1;
  sub_1C0E69308((uint64_t)&v44, (uint64_t)&v14[5 * v20 + 4]);
  if ((sub_1BFFD07D4(27, a3) & 1) == 0)
  {
    uint64_t v21 = _s5TeaUI15ContextMenuItemC8NewsFeedE7PuzzlesV04moreH06puzzleACSgSo17FCPuzzleProviding_p_tFZ_0(a1);
    if (v21)
    {
      *((void *)&v45 + 1) = v18;
      uint64_t v46 = v12;
      *(void *)&long long v44 = v21;
    }
    else
    {
      uint64_t v46 = 0;
      long long v44 = 0u;
      long long v45 = 0u;
    }
    unint64_t v23 = v14[2];
    unint64_t v22 = v14[3];
    if (v23 >= v22 >> 1) {
      id v14 = sub_1C0EE5C48((void *)(v22 > 1), v23 + 1, 1, v14);
    }
    _OWORD v14[2] = v23 + 1;
    sub_1C0E69308((uint64_t)&v44, (uint64_t)&v14[5 * v23 + 4]);
  }
  if (NFInternalBuild())
  {
    sub_1C151706C();
    sub_1C151704C();
    if (qword_1EB86F9B8 != -1) {
      swift_once();
    }
    sub_1C151703C();
    swift_release();
    if (v44 == 1)
    {
      v41[0] = sub_1C151AB2C();
      sub_1C0607A88(0);
      uint64_t v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_1C1527210;
      if (qword_1EB885450 != -1) {
        swift_once();
      }
      uint64_t v25 = v7;
      uint64_t v42 = v6;
      uint64_t v26 = qword_1EA194AB8;
      swift_retain();
      swift_unknownObjectRetain();
      if (v26 != -1) {
        swift_once();
      }
      uint64_t v27 = (void *)qword_1EA1AA308;
      uint64_t v28 = *MEMORY[0x1E4FAC3E0];
      uint64_t v29 = v25 + 104;
      uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 104);
      v41[1] = v29;
      v30(v9, v28, v42);
      *(void *)&long long v44 = a1;
      swift_allocObject();
      id v31 = v27;
      uint64_t v32 = sub_1C151A7FC();
      *(void *)(v24 + 56) = v18;
      uint64_t v33 = MEMORY[0x1E4FAC030];
      *(void *)(v24 + 64) = MEMORY[0x1E4FAC030];
      *(void *)(v24 + 32) = v32;
      if (qword_1EB8848B8 != -1) {
        swift_once();
      }
      uint64_t v34 = qword_1EA194AC0;
      swift_unknownObjectRetain();
      swift_retain();
      if (v34 != -1) {
        swift_once();
      }
      uint64_t v35 = (void *)qword_1EA1AA310;
      v30(v9, v28, v42);
      *(void *)&long long v44 = a1;
      swift_allocObject();
      id v36 = v35;
      uint64_t v37 = sub_1C151A7FC();
      *(void *)(v24 + 96) = v18;
      *(void *)(v24 + 104) = v33;
      *(void *)(v24 + 72) = v37;
      sub_1C151AB1C();
      swift_bridgeObjectRelease();
      unint64_t v39 = v14[2];
      unint64_t v38 = v14[3];
      if (v39 >= v38 >> 1) {
        id v14 = sub_1C0EE5C48((void *)(v38 > 1), v39 + 1, 1, v14);
      }
      _OWORD v14[2] = v39 + 1;
      sub_1C0E69308((uint64_t)&v44, (uint64_t)&v14[5 * v39 + 4]);
    }
  }
  return v14;
}

uint64_t sub_1C0E687E4(void *a1, uint64_t a2)
{
  sub_1C0607A88(0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C1527210;
  uint64_t v5 = sub_1C151A81C();
  swift_getObjectType();
  char v6 = sub_1BFFD07D4(24, a2);
  unsigned __int8 v13 = 0;
  uint64_t v7 = sub_1C04B2AD0(a1, v6 & 1, &v13, v5);
  uint64_t v8 = MEMORY[0x1E4FAC030];
  if (v7)
  {
    uint64_t v9 = MEMORY[0x1E4FAC030];
    uint64_t v10 = v5;
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v9 = 0;
    *(void *)(v4 + 40) = 0;
    *(void *)(v4 + 48) = 0;
  }
  *(void *)(v4 + 32) = v7;
  *(void *)(v4 + 56) = v10;
  *(void *)(v4 + 64) = v9;
  uint64_t v11 = sub_1C03C9640(a1, v5);
  *(void *)(v4 + 96) = v5;
  *(void *)(v4 + 104) = v8;
  *(void *)(v4 + 72) = v11;
  return v4;
}

uint64_t _s5TeaUI11ContextMenuC8NewsFeedE07contextD6Groups3for7options14sourceItemDataSayAA0cD9Groupable_pSgGAcDE0D4TypeO_ShyAcDE0L7OptionsOGAD012FormatSourcelcdM0VSgtFZ_0(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v71 = a3;
  uint64_t v5 = sub_1C1515FDC();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void **)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  unint64_t v15 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(unsigned __int8 *)(a1 + 40);
  switch(*(unsigned char *)(a1 + 41))
  {
    case 1:
      uint64_t v20 = *(void *)(a1 + 32);
      uint64_t v21 = v14;
      uint64_t v22 = swift_unknownObjectRetain();
      uint64_t v23 = sub_1C0E5E0D8(v22, (uint64_t)a2);
      uint64_t v24 = v12;
      uint64_t v25 = v13;
      uint64_t v26 = v15;
      uint64_t v27 = v21;
      uint64_t v28 = v20;
      uint64_t v29 = v17;
      char v30 = 1;
      goto LABEL_19;
    case 2:
      uint64_t v31 = *(void *)(a1 + 24);
      uint64_t v70 = v16;
      id v32 = objc_msgSend((id)swift_unknownObjectRetain(), sel_routeURL);
      if (v32)
      {
        uint64_t v33 = v32;
        sub_1C1515F1C();

        (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v8, v5);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v11, 0, 1, v5);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) != 1)
        {
          sub_1BFF5134C((uint64_t)v11, (uint64_t (*)(void))sub_1BFF00BEC);
          uint64_t v19 = (uint64_t)sub_1C0E606E8(v12, v13, v15, v31, v70, (uint64_t)a2);
          goto LABEL_24;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v11, 1, 1, v5);
      }
      sub_1BFF5134C((uint64_t)v11, (uint64_t (*)(void))sub_1BFF00BEC);
      uint64_t v19 = (uint64_t)sub_1C0E60CB4(v12, v13, v15, v31, v70, (uint64_t)a2, v71);
LABEL_24:
      uint64_t v68 = v19;
      swift_unknownObjectRelease();
      return v68;
    case 3:
      swift_unknownObjectRetain();
      id v34 = v12;
      uint64_t v23 = (uint64_t)sub_1C0E5E3EC(v34, v13, v15, (uint64_t)a2, v71);

      swift_unknownObjectRelease();
      return v23;
    case 4:
      uint64_t v35 = *(void *)(a1 + 32);
      uint64_t v36 = v14;
      uint64_t v37 = (void *)swift_unknownObjectRetain();
      uint64_t v23 = (uint64_t)sub_1C0E5F648(v37, v13, (uint64_t)a2, v71);
      uint64_t v24 = v12;
      uint64_t v25 = v13;
      uint64_t v26 = v15;
      uint64_t v27 = v36;
      uint64_t v28 = v35;
      uint64_t v29 = v17;
      char v30 = 4;
      goto LABEL_19;
    case 5:
      uint64_t v38 = *(void *)(a1 + 32);
      uint64_t v39 = v14;
      uint64_t v40 = swift_retain();
      uint64_t v23 = (uint64_t)sub_1C0E627E0(v40, (uint64_t)a2, v71);
      uint64_t v24 = v12;
      uint64_t v25 = v13;
      uint64_t v26 = v15;
      uint64_t v27 = v39;
      uint64_t v28 = v38;
      uint64_t v29 = v17;
      char v30 = 5;
      goto LABEL_19;
    case 6:
      uint64_t v41 = *(void *)(a1 + 32);
      uint64_t v42 = v14;
      uint64_t v43 = swift_retain();
      uint64_t v23 = (uint64_t)sub_1C0E64834(v43);
      uint64_t v24 = v12;
      uint64_t v25 = v13;
      uint64_t v26 = v15;
      uint64_t v27 = v42;
      uint64_t v28 = v41;
      uint64_t v29 = v17;
      char v30 = 6;
      goto LABEL_19;
    case 7:
      uint64_t v44 = *(void *)(a1 + 32);
      uint64_t v45 = v14;
      uint64_t v46 = swift_retain();
      uint64_t v23 = (uint64_t)sub_1C0E64CD4(v46);
      uint64_t v24 = v12;
      uint64_t v25 = v13;
      uint64_t v26 = v15;
      uint64_t v27 = v45;
      uint64_t v28 = v44;
      uint64_t v29 = v17;
      char v30 = 7;
      goto LABEL_19;
    case 8:
      uint64_t v47 = *(void *)(a1 + 32);
      uint64_t v48 = v14;
      uint64_t v49 = swift_retain();
      uint64_t v23 = (uint64_t)sub_1C0E65174(v49);
      uint64_t v24 = v12;
      uint64_t v25 = v13;
      uint64_t v26 = v15;
      uint64_t v27 = v48;
      uint64_t v28 = v47;
      uint64_t v29 = v17;
      char v30 = 8;
      goto LABEL_19;
    case 9:
      uint64_t v50 = *(void *)(a1 + 32);
      uint64_t v51 = v14;
      uint64_t v52 = swift_retain();
      uint64_t v23 = (uint64_t)sub_1C0E65614(v52);
      uint64_t v24 = v12;
      uint64_t v25 = v13;
      uint64_t v26 = v15;
      uint64_t v27 = v51;
      uint64_t v28 = v50;
      uint64_t v29 = v17;
      char v30 = 9;
      goto LABEL_19;
    case 0xA:
      uint64_t v53 = *(void *)(a1 + 32);
      uint64_t v54 = v14;
      uint64_t v55 = swift_retain();
      uint64_t v23 = (uint64_t)sub_1C0E65AB4(v55);
      uint64_t v24 = v12;
      uint64_t v25 = v13;
      uint64_t v26 = v15;
      uint64_t v27 = v54;
      uint64_t v28 = v53;
      uint64_t v29 = v17;
      char v30 = 10;
      goto LABEL_19;
    case 0xB:
      uint64_t v56 = *(void *)(a1 + 32);
      uint64_t v57 = v14;
      uint64_t v58 = swift_retain();
      uint64_t v23 = (uint64_t)sub_1C0E65F5C(v58);
      uint64_t v24 = v12;
      uint64_t v25 = v13;
      uint64_t v26 = v15;
      uint64_t v27 = v57;
      uint64_t v28 = v56;
      uint64_t v29 = v17;
      char v30 = 11;
      goto LABEL_19;
    case 0xC:
      uint64_t v59 = *(void *)(a1 + 32);
      uint64_t v60 = v14;
      id v61 = v12;
      sub_1C0E663FC(v61, a2, v71);
      uint64_t v23 = v62;
      uint64_t v24 = v12;
      uint64_t v25 = v13;
      uint64_t v26 = v15;
      uint64_t v27 = v60;
      uint64_t v28 = v59;
      uint64_t v29 = v17;
      char v30 = 12;
      goto LABEL_19;
    case 0xD:
      *(void *)&long long v72 = *(void *)(a1 + 8);
      *((void *)&v72 + 1) = v15;
      uint64_t v73 = v14;
      uint64_t v74 = v16;
      char v75 = v17;
      uint64_t v63 = (void *)swift_unknownObjectRetain();
      uint64_t v19 = (uint64_t)sub_1C0E68268(v63, &v72, (uint64_t)a2);
      goto LABEL_24;
    case 0xE:
      uint64_t v64 = *(void *)(a1 + 32);
      uint64_t v65 = v14;
      unint64_t v66 = (void *)swift_unknownObjectRetain();
      uint64_t v23 = sub_1C0E687E4(v66, (uint64_t)a2);
      uint64_t v24 = v12;
      uint64_t v25 = v13;
      uint64_t v26 = v15;
      uint64_t v27 = v65;
      uint64_t v28 = v64;
      uint64_t v29 = v17;
      char v30 = 14;
LABEL_19:
      sub_1BFF4363C(v24, v25, v26, v27, v28, v29, v30);
      return v23;
    default:
      uint64_t v18 = (void *)swift_unknownObjectRetain();
      uint64_t v19 = sub_1C0E5DD0C(v18, v13, v15, (uint64_t)a2, v71);
      goto LABEL_24;
  }
}

uint64_t sub_1C0E68E9C(uint64_t a1)
{
  sub_1C0222994(0, (unint64_t *)&unk_1EA1A7DB8, &qword_1EA1A7DB0, (uint64_t)&protocol descriptor for ContextMenuItemOptionsProviding, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1C0E68F28()
{
  unint64_t result = qword_1EB87C7D0;
  if (!qword_1EB87C7D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87C7D0);
  }
  return result;
}

void _s8MenuTypeOwxx(uint64_t a1)
{
}

uint64_t _s8MenuTypeOwcp(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 41);
  uint64_t v9 = *(unsigned __int8 *)(a2 + 40);
  sub_1BFF43AA4(*(id *)a2, v4, v5, v6, v7, v9, v8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 41) = v8;
  return a1;
}

uint64_t _s8MenuTypeOwca(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 41);
  uint64_t v9 = *(unsigned __int8 *)(a2 + 40);
  sub_1BFF43AA4(*(id *)a2, v4, v5, v6, v7, v9, v8);
  uint64_t v10 = *(void **)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  uint64_t v15 = *(unsigned __int8 *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v9;
  char v16 = *(unsigned char *)(a1 + 41);
  *(unsigned char *)(a1 + 41) = v8;
  sub_1BFF4363C(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

__n128 __swift_memcpy42_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s8MenuTypeOwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  __int16 v4 = *(_WORD *)(a2 + 40);
  uint64_t v5 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(void *)(a1 + 32) = v3;
  char v11 = *(unsigned char *)(a1 + 41);
  uint64_t v12 = *(unsigned __int8 *)(a1 + 40);
  *(_WORD *)(a1 + 40) = v4;
  sub_1BFF4363C(v5, v7, v6, v8, v9, v12, v11);
  return a1;
}

uint64_t _s8MenuTypeOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF2 && *(unsigned char *)(a1 + 42)) {
    return (*(_DWORD *)a1 + 242);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 41);
  if (v3 <= 0xE) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s8MenuTypeOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF1)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(void *)__n128 result = a2 - 242;
    if (a3 >= 0xF2) {
      *(unsigned char *)(result + 42) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF2) {
      *(unsigned char *)(result + 42) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 41) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C0E691BC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 41);
}

uint64_t sub_1C0E691C4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 41) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ContextMenu.MenuType()
{
  return &type metadata for ContextMenu.MenuType;
}

unsigned char *_s11ItemOptionsOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 30 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 30) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE1)
  {
    unsigned int v6 = ((a2 - 226) >> 8) + 1;
    *__n128 result = a2 + 30;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0E692A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 30;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContextMenu.ItemOptions()
{
  return &type metadata for ContextMenu.ItemOptions;
}

uint64_t dispatch thunk of ContextMenuItemOptionsProviding.contextMenuItemOptions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ContextMenuItemOptionsWithAccessProviding.contextMenuItemOptionsWithAccess(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1C0E69308(uint64_t a1, uint64_t a2)
{
  sub_1C0222994(0, (unint64_t *)&qword_1EB8945F0, (unint64_t *)&qword_1EB8945E0, MEMORY[0x1E4FAC628], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0E69398(uint64_t a1, uint64_t a2)
{
  sub_1C0E693FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C0E693FC()
{
  if (!qword_1EB8943C8)
  {
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8943C8);
    }
  }
}

uint64_t sub_1C0E69454(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C0E694B0(uint64_t a1)
{
  return a1;
}

void sub_1C0E69504(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C0E69568(uint64_t a1)
{
}

uint64_t sub_1C0E6959C()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0E695D4()
{
  return sub_1C10D2E0C();
}

void sub_1C0E695DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C0E69644()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0E69680()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t FormatFontMetricSizing.size.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

void FormatFontMetricSizing.style.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 8);
}

uint64_t _s8NewsFeed22FormatFontMetricSizingV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  int v3 = *(unsigned __int8 *)(a1 + 8);
  uint64_t v4 = *(void *)a2;
  int v5 = *(unsigned __int8 *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v6 = sub_1C00DE998(v2, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v6)
  {
    if (v3 == 12)
    {
      if (v5 == 12) {
        return 1;
      }
    }
    else if (v5 != 12)
    {
      uint64_t v7 = FormatFontScalingStyle.rawValue.getter();
      uint64_t v9 = v8;
      if (v7 == FormatFontScalingStyle.rawValue.getter() && v9 == v10)
      {
        swift_bridgeObjectRelease_n();
        return 1;
      }
      char v12 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v12) {
        return 1;
      }
    }
  }
  return 0;
}

unint64_t sub_1C0E69808(uint64_t a1)
{
  unint64_t result = sub_1C0E69830();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0E69830()
{
  unint64_t result = qword_1EA1A7DE8;
  if (!qword_1EA1A7DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7DE8);
  }
  return result;
}

unint64_t sub_1C0E69884(void *a1)
{
  a1[1] = sub_1BFE41E98();
  a1[2] = sub_1C00744A8();
  unint64_t result = sub_1C0E698BC();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0E698BC()
{
  unint64_t result = qword_1EA1A7DF0;
  if (!qword_1EA1A7DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7DF0);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatFontMetricSizing()
{
  return &type metadata for FormatFontMetricSizing;
}

ValueMetadata *type metadata accessor for J18_V1()
{
  return &type metadata for J18_V1;
}

uint64_t sub_1C0E69930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v10 = v9;
  int v89 = a8;
  uint64_t v94 = a7;
  uint64_t v93 = a6;
  uint64_t v96 = a5;
  uint64_t v91 = a4;
  sub_1C0E6CBD4(0, (unint64_t *)&qword_1EB8710D0, MEMORY[0x1E4F26E08], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  char v16 = (char *)&v85 - v15;
  uint64_t v90 = (int *)type metadata accessor for GroupLayoutBindingContext();
  uint64_t v17 = v90[14];
  uint64_t v92 = v8;
  uint64_t v18 = *(void *)&v8[v17];
  uint64_t v19 = *(void *)(v18 + 16);
  swift_bridgeObjectRetain();
  if (!v19)
  {
LABEL_40:
    uint64_t v67 = *(void *)(a1 + 16);
    if (!v67) {
      goto LABEL_47;
    }
    if (!*(void *)(a1 + 32))
    {
LABEL_51:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return MEMORY[0x1E4FBC860];
    }
    if (v67 == 1)
    {
LABEL_47:
      *(void *)&long long v97 = a1;
      swift_bridgeObjectRetain();
      sub_1BFF8F94C((uint64_t *)&v97);
      if (v10) {
        goto LABEL_73;
      }
      if (*(void *)(v97 + 16))
      {
        uint64_t v70 = *(void *)(v97 + 32);
        swift_release();
        sub_1C0000B6C();
        swift_allocError();
LABEL_50:
        *(_OWORD *)uint64_t v71 = xmmword_1C1590FA0;
        *(void *)(v71 + 16) = a2;
        *(void *)(v71 + 24) = a3;
        *(void *)(v71 + 32) = v96;
        *(void *)(v71 + 40) = v70;
        uint64_t v72 = v94;
        *(void *)(v71 + 48) = v93;
        *(void *)(v71 + 56) = v72;
        *(unsigned char *)(v71 + 64) = 0;
        swift_bridgeObjectRetain();
        swift_willThrow();
        return (uint64_t)v16;
      }
    }
    else
    {
      uint64_t v68 = 5;
      while (1)
      {
        uint64_t v69 = v68 - 3;
        if (__OFADD__(v68 - 4, 1)) {
          break;
        }
        if (!*(void *)(a1 + 8 * v68)) {
          goto LABEL_51;
        }
        ++v68;
        if (v69 == v67) {
          goto LABEL_47;
        }
      }
LABEL_69:
      __break(1u);
    }
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v20 = sub_1BFEA34E4(0x7573734964656546, 0xE900000000000065, a2, a3);
  if ((v21 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_40;
  }
  uint64_t v22 = *(void *)(v18 + 56);
  uint64_t v88 = a1;
  uint64_t v23 = *(void *)(v22 + 8 * v20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v24 = sub_1C13F3ACC(v23);
  a1 = v88;
  swift_bridgeObjectRelease();
  if (!v24) {
    goto LABEL_40;
  }
  uint64_t v25 = MEMORY[0x1E4FBC860];
  uint64_t v105 = MEMORY[0x1E4FBC860];
  uint64_t v26 = *(void *)(v24 + 16);
  uint64_t v87 = a2;
  if (v26)
  {
    uint64_t v85 = a3;
    uint64_t v86 = v10;
    swift_bridgeObjectRetain();
    unint64_t v27 = 0;
    uint64_t v95 = v26 - 1;
    uint64_t v28 = 32;
    while (1)
    {
      long long v97 = *(_OWORD *)(v24 + v28);
      long long v29 = *(_OWORD *)(v24 + v28 + 16);
      long long v30 = *(_OWORD *)(v24 + v28 + 32);
      long long v31 = *(_OWORD *)(v24 + v28 + 64);
      long long v100 = *(_OWORD *)(v24 + v28 + 48);
      long long v101 = v31;
      long long v98 = v29;
      long long v99 = v30;
      long long v32 = *(_OWORD *)(v24 + v28 + 80);
      long long v33 = *(_OWORD *)(v24 + v28 + 96);
      long long v34 = *(_OWORD *)(v24 + v28 + 112);
      *(_OWORD *)&v104[9] = *(_OWORD *)(v24 + v28 + 121);
      long long v103 = v33;
      *(_OWORD *)uint64_t v104 = v34;
      long long v102 = v32;
      uint64_t v35 = (void *)v97;
      int v36 = v31;
      sub_1C0187FB0((uint64_t)&v97);
      id v37 = objc_msgSend(v35, sel_coverImageAssetHandle);
      uint64_t v38 = v37;
      if (v36 != 1) {
        break;
      }
      if (!v37) {
        goto LABEL_18;
      }
      id v39 = v35;
      objc_msgSend(v39, sel_coverImageAspectRatio);
      id v40 = v38;
      id v41 = objc_msgSend(v39, sel_layeredCoverJSON);
      if (v41)
      {
        uint64_t v42 = v41;
        sub_1C151E62C();

        swift_bridgeObjectRetain();
        sub_1C151545C();
        uint64_t v43 = sub_1C15154CC();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v16, 0, 1, v43);
        char v44 = sub_1C151823C();
        swift_bridgeObjectRelease();
        sub_1C03766D8((uint64_t)v16);
        if ((v44 & 1) == 0)
        {
          id v53 = v39;
          objc_msgSend(v53, sel_layeredCoverAspectRatio);
          swift_bridgeObjectRelease();

          uint64_t v51 = qword_1F1B66BF8;
          uint64_t v54 = unk_1F1B66C00;
          if ((unk_1F1B66C00 & ~qword_1F1B66BF8) == 0) {
            uint64_t v54 = 0;
          }
          goto LABEL_29;
        }

        swift_bridgeObjectRelease();
      }
      else
      {
      }
      uint64_t v52 = qword_1F1B66BD0;
      if (!qword_1F1B66BD0)
      {
LABEL_18:
        if (v96) {
          goto LABEL_19;
        }
        goto LABEL_31;
      }
LABEL_30:
      if ((v96 & ~v52) != 0)
      {
LABEL_19:
        sub_1C01880A4((uint64_t)&v97);
        goto LABEL_36;
      }
LABEL_31:
      uint64_t v57 = v105;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F6B88(0, *(void *)(v57 + 16) + 1, 1);
        uint64_t v57 = v105;
      }
      unint64_t v59 = *(void *)(v57 + 16);
      unint64_t v58 = *(void *)(v57 + 24);
      if (v59 >= v58 >> 1)
      {
        sub_1C05F6B88(v58 > 1, v59 + 1, 1);
        uint64_t v57 = v105;
      }
      *(void *)(v57 + 16) = v59 + 1;
      uint64_t v60 = (_OWORD *)(v57 + 144 * v59);
      v60[2] = v97;
      long long v61 = v98;
      long long v62 = v99;
      long long v63 = v101;
      v60[5] = v100;
      v60[6] = v63;
      v60[3] = v61;
      v60[4] = v62;
      long long v64 = v102;
      long long v65 = v103;
      long long v66 = *(_OWORD *)v104;
      *(_OWORD *)((char *)v60 + 153) = *(_OWORD *)&v104[9];
      v60[8] = v65;
      v60[9] = v66;
      v60[7] = v64;
LABEL_36:
      if (v95 == v27)
      {
        swift_bridgeObjectRelease();
        uint64_t v25 = v105;
        uint64_t v10 = v86;
        a3 = v85;
        goto LABEL_53;
      }
      ++v27;
      v28 += 144;
      if (v27 >= *(void *)(v24 + 16))
      {
        __break(1u);
        goto LABEL_69;
      }
    }
    if (v37)
    {
      id v45 = v35;
      objc_msgSend(v45, sel_coverImageAspectRatio);
      id v46 = v38;
      id v47 = objc_msgSend(v45, sel_layeredCoverJSON);
      if (v47)
      {
        uint64_t v48 = v47;
        sub_1C151E62C();

        swift_bridgeObjectRetain();
        sub_1C151545C();
        uint64_t v49 = sub_1C15154CC();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v16, 0, 1, v49);
        char v50 = sub_1C151823C();
        swift_bridgeObjectRelease();
        sub_1C03766D8((uint64_t)v16);
        if ((v50 & 1) == 0)
        {
          id v55 = v45;
          objc_msgSend(v55, sel_layeredCoverAspectRatio);
          swift_bridgeObjectRelease();

          uint64_t v56 = unk_1F1B66C58;
          if ((unk_1F1B66C58 & ~qword_1F1B66C50) == 0) {
            uint64_t v56 = 0;
          }
          uint64_t v51 = v56 | qword_1F1B66C50;
          goto LABEL_28;
        }

        swift_bridgeObjectRelease();
      }
      else
      {
      }
      uint64_t v51 = qword_1F1B66C28;
    }
    else
    {
      uint64_t v51 = 0;
    }
LABEL_28:
    uint64_t v54 = qword_1F1B66C80;
LABEL_29:
    uint64_t v52 = v54 | v51;
    goto LABEL_30;
  }
LABEL_53:
  uint64_t v73 = v92;
  if (v91 && (*v92 & 1) == 0)
  {
    swift_retain();
    uint64_t v74 = sub_1C06245CC(v25);
    swift_release();
    swift_release();
    uint64_t v25 = v74;
  }
  uint64_t v75 = *(void *)&v73[v90[18]];
  uint64_t v76 = *(void *)&v73[v90[19]];
  if (__OFSUB__(v75, v76)) {
    goto LABEL_71;
  }
  uint64_t v77 = sub_1C0F4DBFC(v25, v75 - v76);
  uint64_t v78 = v88;
  char v16 = (char *)sub_1C0E6A908(v88, v77);
  uint64_t v80 = v79;
  swift_bridgeObjectRelease();
  if (v16)
  {
    swift_bridgeObjectRelease();
    *(void *)&long long v97 = 0x7573734964656546;
    *((void *)&v97 + 1) = 0xE900000000000065;
    *(void *)&long long v98 = v87;
    *((void *)&v98 + 1) = a3;
    if ((v89 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v24 = v80;
    }
LABEL_64:
    uint64_t v83 = sub_1C02345C4(v24);
    swift_bridgeObjectRelease();
    sub_1BFEA6AC8((uint64_t *)&v97, v83);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (uint64_t)v16;
  }
  char v16 = (char *)sub_1C0E6A908(v78, v25);
  uint64_t v82 = v81;
  swift_bridgeObjectRelease();
  if (v16)
  {
    *(void *)&long long v97 = 0x7573734964656546;
    *((void *)&v97 + 1) = 0xE900000000000065;
    *(void *)&long long v98 = v87;
    *((void *)&v98 + 1) = a3;
    if ((v89 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v24 = v82;
    }
    goto LABEL_64;
  }
  swift_bridgeObjectRelease();
  *(void *)&long long v97 = v78;
  swift_bridgeObjectRetain();
  sub_1BFF8F94C((uint64_t *)&v97);
  if (!v10)
  {
    if (*(void *)(v97 + 16))
    {
      uint64_t v70 = *(void *)(v97 + 32);
      swift_release();
      sub_1C0000B6C();
      swift_allocError();
      a2 = v87;
      goto LABEL_50;
    }
    goto LABEL_72;
  }
LABEL_73:
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1C0E6A280(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1C00B107C(a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v5 = v4[2];
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 < 2) {
    return (uint64_t)v4;
  }
  unint64_t v7 = 0;
  unint64_t v8 = v5 >> 1;
  unint64_t v9 = v5 - 1;
  uint64_t v10 = 40 * v5 - 8;
  for (uint64_t i = 4; ; i += 5)
  {
    if (v7 == v9) {
      goto LABEL_4;
    }
    unint64_t v12 = v4[2];
    if (v7 >= v12) {
      break;
    }
    uint64_t result = sub_1BFC66384((uint64_t)&v4[i], (uint64_t)v14);
    if (v9 >= v12) {
      goto LABEL_14;
    }
    sub_1BFC66384((uint64_t)v4 + v10, (uint64_t)v13);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1C0378DF0(v4);
      uint64_t v4 = (void *)result;
    }
    if (v7 >= v4[2]) {
      goto LABEL_15;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v4[i]);
    uint64_t result = sub_1BFC773DC(v13, (uint64_t)&v4[i]);
    if (v9 >= v4[2]) {
      goto LABEL_16;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v4 + v10);
    uint64_t result = sub_1BFC773DC(v14, (uint64_t)v4 + v10);
LABEL_4:
    ++v7;
    --v9;
    v10 -= 40;
    if (v8 == v7) {
      return (uint64_t)v4;
    }
  }
  __break(1u);
LABEL_14:
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

void sub_1C0E6A3F4(unint64_t a1)
{
  uint64_t v2 = type metadata accessor for ZIndexable();
  uint64_t v14 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v15 = (uint64_t)&v14 - v6;
  unint64_t v7 = *(void *)(a1 + 16);
  if (v7 < 2) {
    return;
  }
  unint64_t v8 = 0;
  unint64_t v9 = v7 >> 1;
  for (unint64_t i = v7 - 1; ; --i)
  {
    if (v8 == i) {
      goto LABEL_4;
    }
    unint64_t v11 = *(void *)(a1 + 16);
    if (v8 >= v11) {
      break;
    }
    unint64_t v12 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    uint64_t v13 = *(void *)(v14 + 72);
    sub_1BFF1B1AC(a1 + v12 + v13 * v8, v15, (uint64_t (*)(void))type metadata accessor for ZIndexable);
    if (i >= v11) {
      goto LABEL_14;
    }
    sub_1BFF1B1AC(a1 + v12 + v13 * i, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ZIndexable);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      a1 = sub_1C0378F34(a1);
    }
    if (v8 >= *(void *)(a1 + 16)) {
      goto LABEL_15;
    }
    sub_1C0E6CCC0((uint64_t)v4, a1 + v12 + v13 * v8, (uint64_t (*)(void))type metadata accessor for ZIndexable);
    if (i >= *(void *)(a1 + 16)) {
      goto LABEL_16;
    }
    sub_1C0E6CCC0(v15, a1 + v12 + v13 * i, (uint64_t (*)(void))type metadata accessor for ZIndexable);
LABEL_4:
    if (v9 == ++v8) {
      return;
    }
  }
  __break(1u);
LABEL_14:
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
}

uint64_t sub_1C0E6A604()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FormatDebuggerCallStackFrame(0);
  uint64_t v20 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v21 = (uint64_t)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v20 - v5;
  sub_1C0E6CBD4(0, &qword_1EA19CE60, type metadata accessor for FormatDebuggerCallStackFrame, MEMORY[0x1E4FAB048]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  __n128 v10 = MEMORY[0x1F4188790](v7);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))((char *)&v20 - v11, v0, v8, v10);
  sub_1C0E6CC38();
  unint64_t v12 = sub_1C151E96C();
  unint64_t v13 = *(void *)(v12 + 16);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v1, v8);
  if (v13 < 2) {
    return v12;
  }
  unint64_t v15 = 0;
  for (unint64_t i = v13 - 1; ; --i)
  {
    if (v15 == i) {
      goto LABEL_4;
    }
    unint64_t v17 = *(void *)(v12 + 16);
    if (v15 >= v17) {
      break;
    }
    unint64_t v18 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    uint64_t v19 = *(void *)(v20 + 72);
    uint64_t result = sub_1BFF1B1AC(v12 + v18 + v19 * v15, (uint64_t)v6, type metadata accessor for FormatDebuggerCallStackFrame);
    if (i >= v17) {
      goto LABEL_14;
    }
    sub_1BFF1B1AC(v12 + v18 + v19 * i, v21, type metadata accessor for FormatDebuggerCallStackFrame);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_1C0378F84(v12);
      unint64_t v12 = result;
    }
    if (v15 >= *(void *)(v12 + 16)) {
      goto LABEL_15;
    }
    uint64_t result = sub_1C0E6CCC0(v21, v12 + v18 + v19 * v15, type metadata accessor for FormatDebuggerCallStackFrame);
    if (i >= *(void *)(v12 + 16)) {
      goto LABEL_16;
    }
    uint64_t result = sub_1C0E6CCC0((uint64_t)v6, v12 + v18 + v19 * i, type metadata accessor for FormatDebuggerCallStackFrame);
LABEL_4:
    if (v13 >> 1 == ++v15) {
      return v12;
    }
  }
  __break(1u);
LABEL_14:
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1C0E6A908(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_1C001FF6C(v3);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 + 16);
  if (v6)
  {
    int64_t v7 = *(void *)(v4 + 32);
    int64_t v8 = *(void *)(a2 + 16);
    if (v7 == 0x7FFFFFFFFFFFFFFFLL || v8 >= v7)
    {
LABEL_20:
      int64_t v15 = sub_1C0B823EC(v7, a2);
      uint64_t v17 = v16;
      uint64_t v19 = v18;
      unint64_t v21 = v20;
      if (v20)
      {
        sub_1C1520B6C();
        swift_unknownObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t v22 = swift_dynamicCastClass();
        if (!v22)
        {
          swift_unknownObjectRelease();
          uint64_t v22 = MEMORY[0x1E4FBC860];
        }
        uint64_t v23 = *(void *)(v22 + 16);
        swift_release();
        if (__OFSUB__(v21 >> 1, v19))
        {
          __break(1u);
        }
        else if (v23 == (v21 >> 1) - v19)
        {
          uint64_t v10 = swift_dynamicCastClass();
          if (!v10)
          {
            swift_unknownObjectRelease();
            uint64_t v10 = MEMORY[0x1E4FBC860];
          }
          goto LABEL_29;
        }
        swift_unknownObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      uint64_t v10 = sub_1C00B1F7C(v15, v17, v19, v21);
LABEL_29:
      swift_unknownObjectRelease();
      swift_retain();
      uint64_t v24 = swift_bridgeObjectRetain();
      sub_1C0E6CA14(v24, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      return v10;
    }
    if (v6 != 1)
    {
      int64_t v7 = *(void *)(v5 + 40);
      if (v8 >= v7 || v7 == 0x7FFFFFFFFFFFFFFFLL) {
        goto LABEL_20;
      }
      uint64_t v12 = 0;
      uint64_t v13 = v6 - 2;
      while (v13 != v12)
      {
        int64_t v7 = *(void *)(v5 + 8 * v12++ + 48);
        if (v8 >= v7 || v7 == 0x7FFFFFFFFFFFFFFFLL) {
          goto LABEL_20;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1C0E6AAE0(void *a1)
{
  uint64_t v3 = v1;
  sub_1C0E6EA44(0, &qword_1EA1A7EB8, (uint64_t (*)(void))sub_1C0E6E9F0, (uint64_t)&type metadata for J18_V1.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0E6E9F0();
  sub_1C1520F0C();
  long long v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  char v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1C0E6EAAC(&qword_1EA197288, type metadata accessor for CGRect);
  sub_1C152080C();
  if (!v2)
  {
    *(void *)&v12[0] = *(void *)(v3 + 32);
    char v13 = 1;
    sub_1C01BCA00(0, &qword_1EB85DF00, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes, MEMORY[0x1E4FBB320]);
    sub_1C01BD088(&qword_1EA197D78, (void (*)(void))sub_1C01BD118);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C0E6AD3C(uint64_t a1)
{
  unint64_t v2 = sub_1C0E6E9F0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0E6AD78(uint64_t a1)
{
  unint64_t v2 = sub_1C0E6E9F0();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C0E6ADB4@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0E6E72C(a1, v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1C0E6ADFC(void *a1)
{
  return sub_1C0E6AAE0(a1);
}

uint64_t sub_1C0E6AE14()
{
  sub_1C0E6E2D4();
  return sub_1C151798C();
}

uint64_t sub_1C0E6AE90@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  sub_1C0E6EA44(0, &qword_1EB85C818, (uint64_t (*)(void))sub_1C01BC9AC, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes, MEMORY[0x1E4FAB718]);
  swift_allocObject();
  uint64_t result = sub_1C151775C();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1C0E6AF4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v49 = a1;
  id v39 = a3;
  uint64_t v42 = sub_1C151635C();
  uint64_t v6 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for GroupLayoutContext();
  uint64_t v50 = *(void *)(v9 - 8);
  uint64_t v51 = v9;
  MEMORY[0x1F4188790](v9);
  char v44 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v38 - v12;
  uint64_t v14 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v45 = *(void *)(v14 - 8);
  uint64_t v46 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v43 = (uint64_t)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v16 = *v3;
  uint64_t v17 = (void *)*((void *)v3 + 1);
  unsigned __int8 v18 = v3[16];
  sub_1BFF1B1AC(a1, v43, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  id v47 = type metadata accessor for GroupLayoutContext;
  sub_1BFF1B1AC(a2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  sub_1BFFFC7A0(v17, v18);
  sub_1C151634C();
  uint64_t v41 = sub_1C151633C();
  uint64_t v40 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v42);
  uint64_t v60 = &type metadata for J18_V1;
  unint64_t v20 = sub_1C0185CFC();
  unint64_t v61 = v20;
  LOBYTE(v58) = v16;
  *((void *)&v58 + 1) = v17;
  unsigned __int8 v59 = v18;
  type metadata accessor for GroupLayoutKey();
  uint64_t v21 = swift_allocObject();
  sub_1BFFFC7A0(v17, v18);
  uint64_t v56 = sub_1C1520FAC();
  uint64_t v57 = v22;
  uint64_t v54 = 95;
  unint64_t v55 = 0xE100000000000000;
  uint64_t v52 = 45;
  unint64_t v53 = 0xE100000000000000;
  sub_1BFF27ECC();
  uint64_t v23 = sub_1C151FEBC();
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  *(void *)(v21 + 16) = v23;
  *(void *)(v21 + 24) = v25;
  uint64_t v26 = (uint64_t)v44;
  unint64_t v27 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  uint64_t v28 = v40;
  *unint64_t v27 = v41;
  v27[1] = v28;
  sub_1BFC66384((uint64_t)&v58, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  uint64_t v29 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BFF23A3C(v43, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v45 + 56))(v29, 0, 1, v46);
  uint64_t v30 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BFF23A3C((uint64_t)v13, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v50 + 56))(v30, 0, 1, v51);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v58);
  sub_1BFFFC630(v17, v18);
  uint64_t v60 = &type metadata for J18_V1;
  unint64_t v61 = v20;
  LOBYTE(v58) = v16;
  *((void *)&v58 + 1) = v17;
  unsigned __int8 v59 = v18;
  sub_1BFF1B1AC(v48, v26, (uint64_t (*)(void))v47);
  sub_1BFFFC7A0(v17, v18);
  uint64_t v31 = v62;
  uint64_t v32 = sub_1C0E69930((uint64_t)&unk_1F1B834B0, 0, 0, 0, 0, 0, 0, 0);
  if (v31)
  {
    swift_release();
    sub_1BFF1F464(v26, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v58);
  }
  else
  {
    uint64_t v34 = v32;
    uint64_t v35 = type metadata accessor for J18_V1.Bound();
    int v36 = v39;
    v39[3] = v35;
    v36[4] = sub_1C0E6EAAC(&qword_1EA1A7E08, (void (*)(uint64_t))type metadata accessor for J18_V1.Bound);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v36);
    uint64_t *boxed_opaque_existential_0 = v21;
    sub_1BFC773DC(&v58, (uint64_t)(boxed_opaque_existential_0 + 1));
    uint64_t result = sub_1BFF23A3C(v26, (uint64_t)boxed_opaque_existential_0 + *(int *)(v35 + 24), (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v35 + 28)) = v34;
  }
  return result;
}

uint64_t sub_1C0E6B4A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C1517A9C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + *(int *)(type metadata accessor for J18_V1.Bound() + 28));
  uint64_t v34 = v2;
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1C0183444((void (*)(void *__return_ptr, _OWORD *))sub_1C0E6E254, (uint64_t)v33, v8);
  *(void *)&long long v26 = 0;
  swift_bridgeObjectRelease();
  uint64_t v29 = v9;
  *(void *)&long long v36 = v9;
  sub_1C01BCA00(0, &qword_1EB85DF18, (uint64_t)&type metadata for CoverIssueViewLayout.Context, MEMORY[0x1E4FBB320]);
  uint64_t v11 = v10;
  sub_1BFEB3578(&qword_1EB85DF28, &qword_1EB85DF18, (uint64_t)&type metadata for CoverIssueViewLayout.Context);
  uint64_t v28 = v11;
  uint64_t v12 = sub_1C151F0BC();
  uint64_t v13 = *MEMORY[0x1E4FAB6D8];
  uint64_t v14 = sub_1C151759C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v7, v13, v14);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB8F0], v4);
  uint64_t v30 = v12;
  uint64_t v31 = 6;
  uint64_t v32 = v2;
  sub_1C0E6E528(0, &qword_1EA1A7E30, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  uint64_t v15 = sub_1C1517BEC();
  swift_bridgeObjectRelease();
  uint64_t v27 = v15;
  uint64_t v16 = v26;
  uint64_t v17 = sub_1C1517BFC();
  if (v16)
  {
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    v25[1] = v25;
    long long v26 = v36;
    uint64_t v18 = v37;
    uint64_t v19 = v38;
    uint64_t v35 = v39;
    *(void *)&long long v36 = v29;
    MEMORY[0x1F4188790](v17);
    unint64_t v20 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB320];
    sub_1C01BCA00(0, &qword_1EB85DF00, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes, MEMORY[0x1E4FBB320]);
    sub_1BFEB3578(&qword_1EB85DF20, &qword_1EB85DF18, (uint64_t)&type metadata for CoverIssueViewLayout.Context);
    sub_1BFEB3578(&qword_1EB85DF08, &qword_1EB85DF00, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes);
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1C151951C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)&long long v36 = v21;
    sub_1C01BCA00(0, (unint64_t *)&qword_1EB879CB0, (uint64_t)&type metadata for FeedItemLayoutAttributes, v20);
    sub_1BFEB3578((unint64_t *)&qword_1EB879CC0, (unint64_t *)&qword_1EB879CB0, (uint64_t)&type metadata for FeedItemLayoutAttributes);
    sub_1BFEB0FD4();
    uint64_t v22 = sub_1C151E91C();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *(unsigned char *)a1 = 0;
    *(_OWORD *)(a1 + 8) = v26;
    *(void *)(a1 + 24) = v18;
    *(void *)(a1 + 32) = v19;
    uint64_t v24 = MEMORY[0x1E4FBC860];
    *(void *)(a1 + 40) = v22;
    *(void *)(a1 + 48) = v24;
  }
  return result;
}

uint64_t sub_1C0E6B958@<X0>(_OWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  long long v5 = a1[5];
  long long v6 = a1[7];
  long long v32 = a1[6];
  v33[0] = v6;
  *(_OWORD *)((char *)v33 + 9) = *(_OWORD *)((char *)a1 + 121);
  long long v7 = a1[1];
  long long v8 = a1[3];
  long long v28 = a1[2];
  long long v29 = v8;
  long long v9 = a1[3];
  long long v10 = a1[5];
  long long v30 = a1[4];
  long long v31 = v10;
  long long v11 = a1[1];
  v27[0] = *a1;
  v27[1] = v11;
  long long v12 = a1[7];
  v25[6] = v32;
  v26[0] = v12;
  *(_OWORD *)((char *)v26 + 9) = *(_OWORD *)((char *)a1 + 121);
  void v25[2] = v28;
  v25[3] = v9;
  v25[4] = v30;
  v25[5] = v5;
  uint64_t v13 = *a2;
  v25[0] = v27[0];
  v25[1] = v7;
  sub_1C01B3C58(v34);
  sub_1C0181C7C((uint64_t)v34, (uint64_t)v24);
  uint64_t v14 = (char *)a2 + *(int *)(type metadata accessor for J18_V1.Bound() + 24);
  uint64_t v15 = type metadata accessor for GroupLayoutContext();
  uint64_t v16 = *(void *)(*(void *)&v14[*(int *)(v15 + 40)] + 16);
  double v17 = *(double *)&v14[*(int *)(v15 + 32)];
  sub_1BFC66384(v16 + 16, (uint64_t)v22);
  sub_1BFC66384(v16 + 56, (uint64_t)v21);
  double v18 = v17 * *(double *)(v16 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  uint64_t inited = swift_initStackObject();
  sub_1BFC773DC(v22, inited + 16);
  sub_1BFC773DC(v21, inited + 56);
  *(double *)(inited + 96) = v18;
  swift_retain();
  sub_1C0187FB0((uint64_t)v27);
  FeedLayoutStylerFactory.styler()(v23);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  return CoverIssueViewLayout.Context.init(key:model:secondaryModel:styler:)(v13, v25, (uint64_t)v24, (uint64_t)v23, a3);
}

void sub_1C0E6BAEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v49 = a1;
  uint64_t v50 = a4;
  uint64_t v40 = a3;
  sub_1C0E6EA44(0, &qword_1EA1A7E48, (uint64_t (*)(void))sub_1C0E6E280, (uint64_t)&type metadata for J18_V1.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v48 = v5;
  MEMORY[0x1F4188790](v5);
  id v47 = (uint64_t *)((char *)&v39 - v7);
  uint64_t v52 = *(void *)(a2 + 16);
  if (v52)
  {
    uint64_t v8 = *(void *)(a2 + 32);
    uint64_t v51 = a2 + 32;
    unsigned int v46 = *MEMORY[0x1E4FABA08];
    char v44 = (void (**)(uint64_t *, uint64_t))(v6 + 8);
    uint64_t v45 = (void (**)(uint64_t *, void, uint64_t))(v6 + 104);
    unsigned int v43 = *MEMORY[0x1E4FABA28];
    unsigned int v42 = *MEMORY[0x1E4FAB638];
    uint64_t v39 = a2;
    swift_bridgeObjectRetain();
    uint64_t v9 = 0;
    long long v10 = &dword_1EB891000;
    long long v41 = xmmword_1C1529AE0;
    while (1)
    {
      uint64_t v25 = *(void *)(v51 + 8 * v9);
      uint64_t v26 = *(void *)(v25 + 16);
      uint64_t v27 = *(void *)(v8 + 16);
      uint64_t v57 = v25;
      if (v26 != v27) {
        break;
      }
      if (v26 && v25 != v8)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v28 = 32;
        while (1)
        {
          sub_1C01BC5C8(v25 + v28, (uint64_t)v61);
          sub_1C01BC5C8(v8 + v28, (uint64_t)v60);
          uint64_t v30 = v61[0];
          uint64_t v31 = v60[0];
          BOOL v32 = *(void *)(v61[0] + 16) == *(void *)(v60[0] + 16)
             && *(void *)(v61[0] + 24) == *(void *)(v60[0] + 24);
          if (!v32 && (sub_1C1520A9C() & 1) == 0) {
            break;
          }
          uint64_t v33 = *((void *)v10 + 62);
          uint64_t v34 = *(void *)(v30 + v33);
          uint64_t v35 = *(void *)(v30 + v33 + 8);
          long long v36 = (void *)(v31 + v33);
          if (v34 == *v36 && v35 == v36[1])
          {
            sub_1C01BC5C8((uint64_t)v61, (uint64_t)v59);
            sub_1C01BC5C8((uint64_t)v60, (uint64_t)v58);
          }
          else
          {
            char v38 = sub_1C1520A9C();
            sub_1C01BC5C8((uint64_t)v61, (uint64_t)v59);
            sub_1C01BC5C8((uint64_t)v60, (uint64_t)v58);
            if ((v38 & 1) == 0) {
              goto LABEL_33;
            }
          }
          if (v59[2] == v58[2] && v59[3] == v58[3])
          {
            sub_1C01BC710((uint64_t)v59);
            sub_1C01BC710((uint64_t)v58);
            sub_1C01BC710((uint64_t)v60);
            sub_1C01BC710((uint64_t)v61);
          }
          else
          {
            char v29 = sub_1C1520A9C();
            sub_1C01BC710((uint64_t)v59);
            sub_1C01BC710((uint64_t)v58);
            sub_1C01BC710((uint64_t)v60);
            sub_1C01BC710((uint64_t)v61);
            if ((v29 & 1) == 0) {
              goto LABEL_34;
            }
          }
          v28 += 392;
          if (!--v26)
          {
            swift_bridgeObjectRelease();
            goto LABEL_4;
          }
        }
        sub_1C01BC5C8((uint64_t)v61, (uint64_t)v59);
        sub_1C01BC5C8((uint64_t)v60, (uint64_t)v58);
LABEL_33:
        sub_1C01BC710((uint64_t)v59);
        sub_1C01BC710((uint64_t)v58);
        sub_1C01BC710((uint64_t)v60);
        sub_1C01BC710((uint64_t)v61);
LABEL_34:
        swift_bridgeObjectRelease();
        uint64_t v26 = *(void *)(v25 + 16);
LABEL_28:
        if (v26 != v40) {
          goto LABEL_5;
        }
        goto LABEL_4;
      }
      swift_bridgeObjectRetain();
LABEL_4:
      uint64_t v11 = v49;
      v61[0] = v49;
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = 0x4024000000000000;
      uint64_t v13 = v47;
      *id v47 = v12;
      uint64_t v14 = *v45;
      uint64_t v56 = v9;
      uint64_t v15 = v48;
      v14(v13, v46, v48);
      uint64_t v16 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
      sub_1C0E6E528(0, &qword_1EA1A7E50, MEMORY[0x1E4FAB6F0]);
      uint64_t v54 = v17;
      uint64_t v53 = sub_1C0E6E44C(&qword_1EA1A7E58, &qword_1EA1A7E50, v16);
      sub_1C151738C();
      unint64_t v55 = *v44;
      v55(v13, v15);
      v61[0] = v11;
      v14(v13, v43, v15);
      sub_1C0E6E490();
      sub_1C0E6EA44(0, &qword_1EA1A7E68, (uint64_t (*)(void))sub_1C0E6E280, (uint64_t)&type metadata for J18_V1.Layout, MEMORY[0x1E4FAB678]);
      uint64_t v19 = v18;
      uint64_t v20 = *(void *)(v18 - 8);
      unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = v41;
      uint64_t v23 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v20 + 104))(v22 + v21, v42, v19);
      long long v10 = &dword_1EB891000;
      MEMORY[0x1F4188790](v23);
      sub_1C151731C();
      swift_bridgeObjectRelease();
      uint64_t v24 = v15;
      uint64_t v9 = v56;
      v55(v13, v24);
LABEL_5:
      swift_bridgeObjectRelease();
      if (++v9 == v52)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    swift_bridgeObjectRetain();
    goto LABEL_28;
  }
}

void sub_1C0E6C0EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v63 = a1;
  uint64_t v62 = sub_1C1517A9C();
  uint64_t v5 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  unint64_t v61 = (char *)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0E6EA44(0, &qword_1EA1A7E48, (uint64_t (*)(void))sub_1C0E6E280, (uint64_t)&type metadata for J18_V1.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (void *)((char *)v48 - v10);
  uint64_t v12 = *(void *)(a2 + 16);
  if (v12)
  {
    uint64_t v60 = a3 + *(int *)(type metadata accessor for J18_V1.Bound() + 24);
    uint64_t v59 = *(int *)(type metadata accessor for GroupLayoutContext() + 40);
    uint64_t v13 = a2 + 32;
    unsigned int v58 = *MEMORY[0x1E4FAB7A8];
    unsigned int v57 = *MEMORY[0x1E4FAB7B0];
    unsigned int v56 = *MEMORY[0x1E4FAB9E8];
    unint64_t v55 = (void (**)(uint64_t *, void, uint64_t))(v9 + 104);
    unsigned int v54 = *MEMORY[0x1E4FAB5E8];
    unsigned int v53 = *MEMORY[0x1E4FAB620];
    uint64_t v67 = &v70;
    uint64_t v51 = (void (**)(uint64_t *, uint64_t))(v9 + 8);
    uint64_t v52 = (void (**)(char *, void, uint64_t))(v5 + 104);
    unsigned int v50 = *MEMORY[0x1E4FAB8F8];
    v48[1] = a2;
    swift_bridgeObjectRetain();
    long long v49 = xmmword_1C1529AE0;
    do
    {
      uint64_t v65 = v13;
      uint64_t v66 = v12;
      sub_1C01BC5C8(v13, (uint64_t)v69);
      uint64_t v68 = v63;
      uint64_t KeyPath = swift_getKeyPath();
      sub_1BFF35C38();
      uint64_t v15 = v14;
      uint64_t v16 = swift_allocBox();
      uint64_t v18 = v17;
      uint64_t v19 = (char *)v17 + *(int *)(v15 + 48);
      sub_1C151728C();
      uint64_t v20 = swift_allocBox();
      sub_1C151727C();
      *uint64_t v18 = v20;
      uint64_t v21 = sub_1C151786C();
      uint64_t v22 = *(void (**)(uint64_t *, void, uint64_t))(*(void *)(v21 - 8) + 104);
      v22(v18, v58, v21);
      v22((uint64_t *)v19, v57, v21);
      uint64_t *v11 = v16;
      (*v55)(v11, v56, v8);
      sub_1C0E6E490();
      sub_1C0E6EA44(0, &qword_1EA1A7E68, (uint64_t (*)(void))sub_1C0E6E280, (uint64_t)&type metadata for J18_V1.Layout, MEMORY[0x1E4FAB678]);
      uint64_t v24 = v23;
      uint64_t v25 = *(void *)(v23 - 8);
      unint64_t v26 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = v49;
      unint64_t v28 = v27 + v26;
      sub_1C0E6EA44(0, &qword_1EA1A7E70, (uint64_t (*)(void))sub_1C0E6E280, (uint64_t)&type metadata for J18_V1.Layout, MEMORY[0x1E4FAB618]);
      (*(void (**)(unint64_t, void, uint64_t))(*(void *)(v29 - 8) + 104))(v28, v54, v29);
      (*(void (**)(unint64_t, void, uint64_t))(v25 + 104))(v28, v53, v24);
      uint64_t v30 = *(void *)(*(void *)(v60 + v59) + 24);
      uint64_t v31 = v71;
      uint64_t v32 = v72;
      __swift_project_boxed_opaque_existential_1(v67, v71);
      uint64_t v33 = v8;
      uint64_t v34 = *(double (**)(uint64_t, uint64_t))(v32 + 16);
      swift_retain();
      double v35 = v34(v31, v32);
      if (qword_1EB85E720 != -1) {
        swift_once();
      }
      objc_msgSend((id)qword_1EB93C2A0, sel_size);
      double v38 = v35 * (v36 / v37);
      uint64_t v39 = v71;
      uint64_t v40 = v72;
      long long v41 = v67;
      __swift_project_boxed_opaque_existential_1(v67, v71);
      (*(void (**)(uint64_t, uint64_t))(v40 + 48))(v39, v40);
      uint64_t v42 = v71;
      uint64_t v43 = v72;
      __swift_project_boxed_opaque_existential_1(v41, v71);
      uint64_t v44 = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 56))(v42, v43);
      unint64_t v45 = MEMORY[0x1F4188790](v44).n128_u64[0];
      v48[-6] = v30;
      v48[-5] = v69;
      *(double *)&v48[-4] = v38;
      *(double *)&v48[-3] = v35;
      unint64_t v47 = v45;
      (*v52)(v61, v50, v62);
      sub_1C01BC774();
      swift_allocObject();
      sub_1C1517BEC();
      swift_release();
      unsigned int v46 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
      sub_1C0E6E528(0, &qword_1EA1A7E78, MEMORY[0x1E4FAB4D0]);
      sub_1C0E6E44C(&qword_1EA1A7E80, &qword_1EA1A7E78, v46);
      unint64_t v47 = sub_1C01BC91C();
      sub_1C151735C();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      (*v51)(v11, v33);
      sub_1C01BC710((uint64_t)v69);
      uint64_t v13 = v65 + 392;
      uint64_t v12 = v66 - 1;
      uint64_t v8 = v33;
    }
    while (v66 != 1);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C0E6C808@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, const void *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10 = swift_allocObject();
  sub_1C01BC5C8(a2, v10 + 16);
  memcpy((void *)(v10 + 408), a3, 0x180uLL);
  uint64_t v11 = a4 + *(int *)(type metadata accessor for J18_V1.Bound() + 24);
  uint64_t result = type metadata accessor for GroupLayoutContext();
  uint64_t v13 = *(void *)(v11 + *(int *)(result + 28));
  BOOL v14 = __OFADD__(v13, a1);
  uint64_t v15 = v13 + a1;
  if (v14)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v10 + 792) = v15;
    *a5 = v10 | 0x5000000000000000;
  }
  return result;
}

uint64_t sub_1C0E6C8C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C0E6AF4C(a1, a2, a3);
}

uint64_t sub_1C0E6C8E0()
{
  return sub_1C12BC3A0();
}

unint64_t sub_1C0E6C8F0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C0E6C920();
  unint64_t result = sub_1C0E6C974();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0E6C920()
{
  unint64_t result = qword_1EA1A7DF8;
  if (!qword_1EA1A7DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7DF8);
  }
  return result;
}

unint64_t sub_1C0E6C974()
{
  unint64_t result = qword_1EA1A7E00;
  if (!qword_1EA1A7E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7E00);
  }
  return result;
}

uint64_t type metadata accessor for J18_V1.Bound()
{
  uint64_t result = qword_1EA1A7E18;
  if (!qword_1EA1A7E18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0E6CA14(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v4 = 0;
  unint64_t v26 = (void *)(a2 + 48);
  uint64_t v27 = result + 32;
  uint64_t v5 = MEMORY[0x1E4FBC860];
  do
  {
    if (v4 <= v2) {
      unint64_t v6 = v2;
    }
    else {
      unint64_t v6 = v4;
    }
    while (1)
    {
      if (v4 == v6)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = (long long *)(v27 + 144 * v4);
      long long v8 = v7[7];
      long long v34 = v7[6];
      v35[0] = v8;
      *(_OWORD *)((char *)v35 + 9) = *(long long *)((char *)v7 + 121);
      long long v9 = v7[3];
      long long v30 = v7[2];
      long long v31 = v9;
      long long v10 = v7[5];
      long long v32 = v7[4];
      long long v33 = v10;
      long long v11 = v7[1];
      long long v28 = *v7;
      long long v29 = v11;
      ++v4;
      uint64_t v12 = *(void *)(a2 + 16);
      if (!v12) {
        break;
      }
      uint64_t v13 = *((void *)&v28 + 1);
      uint64_t v14 = v29;
      uint64_t v15 = v26;
      while (1)
      {
        uint64_t result = *(v15 - 1);
        if (result == v13 && *v15 == v14) {
          break;
        }
        uint64_t result = sub_1C1520A9C();
        if (result) {
          break;
        }
        v15 += 18;
        if (!--v12) {
          goto LABEL_16;
        }
      }
      if (v4 == v2) {
        return v5;
      }
    }
LABEL_16:
    sub_1C0187FB0((uint64_t)&v28);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v36 = v5;
    if ((result & 1) == 0)
    {
      uint64_t result = sub_1C05F6B88(0, *(void *)(v5 + 16) + 1, 1);
      uint64_t v5 = v36;
    }
    unint64_t v18 = *(void *)(v5 + 16);
    unint64_t v17 = *(void *)(v5 + 24);
    if (v18 >= v17 >> 1)
    {
      uint64_t result = sub_1C05F6B88(v17 > 1, v18 + 1, 1);
      uint64_t v5 = v36;
    }
    *(void *)(v5 + 16) = v18 + 1;
    uint64_t v19 = (_OWORD *)(v5 + 144 * v18);
    _OWORD v19[2] = v28;
    long long v20 = v29;
    long long v21 = v30;
    long long v22 = v32;
    v19[5] = v31;
    v19[6] = v22;
    double v19[3] = v20;
    v19[4] = v21;
    long long v23 = v33;
    long long v24 = v34;
    long long v25 = v35[0];
    *(_OWORD *)((char *)v19 + 153) = *(_OWORD *)((char *)v35 + 9);
    v19[8] = v24;
    v19[9] = v25;
    v19[7] = v23;
  }
  while (v4 != v2);
  return v5;
}

void sub_1C0E6CBD4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1C0E6CC38()
{
  unint64_t result = qword_1EA1A7E10;
  if (!qword_1EA1A7E10)
  {
    sub_1C0E6CBD4(255, &qword_1EA19CE60, type metadata accessor for FormatDebuggerCallStackFrame, MEMORY[0x1E4FAB048]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7E10);
  }
  return result;
}

uint64_t sub_1C0E6CCC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0E6CD28(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    unint64_t v8 = a2 + 1;
    long long v9 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 32) = v9;
    uint64_t v10 = v9;
    long long v11 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v9 - 8);
    swift_retain();
    v11(a1 + 8, v8, v10);
    uint64_t v35 = a3;
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = a1 + v12;
    uint64_t v14 = (uint64_t)a2 + v12;
    uint64_t v15 = sub_1C151772C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = (int *)type metadata accessor for GroupLayoutContext();
    uint64_t v17 = v16[5];
    uint64_t v18 = v13 + v17;
    uint64_t v19 = v14 + v17;
    uint64_t v20 = sub_1C151757C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    uint64_t v21 = v16[6];
    uint64_t v22 = v13 + v21;
    uint64_t v23 = v14 + v21;
    *(_OWORD *)uint64_t v22 = *(_OWORD *)(v14 + v21);
    *(unsigned char *)(v22 + 16) = *(unsigned char *)(v14 + v21 + 16);
    *(_WORD *)(v22 + 17) = *(_WORD *)(v14 + v21 + 17);
    *(unsigned char *)(v22 + 19) = *(unsigned char *)(v14 + v21 + 19);
    *(_DWORD *)(v22 + 20) = *(_DWORD *)(v14 + v21 + 20);
    unint64_t v24 = *(void *)(v14 + v21 + 24);
    if (v24 >= 2) {
      unint64_t v24 = swift_bridgeObjectRetain();
    }
    *(void *)(v22 + 24) = v24;
    uint64_t v25 = type metadata accessor for FeedLayoutSolverOptions(0);
    uint64_t v26 = *(int *)(v25 + 36);
    __dst = (void *)(v22 + v26);
    uint64_t v34 = v25;
    uint64_t v27 = (const void *)(v23 + v26);
    uint64_t v28 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
    uint64_t v29 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      sub_1C0E6CBD4(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
      memcpy(__dst, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      uint64_t v31 = sub_1C151B62C();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v31 - 8) + 16))(__dst, v27, v31);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(__dst, 0, 1, v28);
    }
    *(void *)(v22 + *(int *)(v34 + 40)) = *(void *)(v23 + *(int *)(v34 + 40));
    *(void *)(v13 + v16[7]) = *(void *)(v14 + v16[7]);
    *(void *)(v13 + v16[8]) = *(void *)(v14 + v16[8]);
    *(unsigned char *)(v13 + v16[9]) = *(unsigned char *)(v14 + v16[9]);
    *(void *)(v13 + v16[10]) = *(void *)(v14 + v16[10]);
    *(unsigned char *)(v13 + v16[11]) = *(unsigned char *)(v14 + v16[11]);
    *(void *)(v13 + v16[12]) = *(void *)(v14 + v16[12]);
    *(void *)(a1 + *(int *)(v35 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(v35 + 28));
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1C0E6D0B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a2 + 8;
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  uint64_t v8 = v7;
  long long v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_retain();
  v9(a1 + 8, v6, v8);
  uint64_t v32 = a3;
  uint64_t v33 = a2;
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  uint64_t v14 = (int *)type metadata accessor for GroupLayoutContext();
  uint64_t v15 = v14[5];
  uint64_t v16 = v11 + v15;
  uint64_t v17 = v12 + v15;
  uint64_t v18 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = v14[6];
  uint64_t v20 = v11 + v19;
  uint64_t v21 = v12 + v19;
  *(_OWORD *)uint64_t v20 = *(_OWORD *)(v12 + v19);
  *(unsigned char *)(v20 + 16) = *(unsigned char *)(v12 + v19 + 16);
  *(_WORD *)(v20 + 17) = *(_WORD *)(v12 + v19 + 17);
  *(unsigned char *)(v20 + 19) = *(unsigned char *)(v12 + v19 + 19);
  *(_DWORD *)(v20 + 20) = *(_DWORD *)(v12 + v19 + 20);
  unint64_t v22 = *(void *)(v12 + v19 + 24);
  if (v22 >= 2) {
    unint64_t v22 = swift_bridgeObjectRetain();
  }
  *(void *)(v20 + 24) = v22;
  uint64_t v23 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v24 = *(int *)(v23 + 36);
  __dst = (void *)(v20 + v24);
  uint64_t v25 = (const void *)(v21 + v24);
  uint64_t v26 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    sub_1C0E6CBD4(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    memcpy(__dst, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    uint64_t v29 = sub_1C151B62C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v29 - 8) + 16))(__dst, v25, v29);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v26);
  }
  *(void *)(v20 + *(int *)(v23 + 40)) = *(void *)(v21 + *(int *)(v23 + 40));
  *(void *)(v11 + v14[7]) = *(void *)(v12 + v14[7]);
  *(void *)(v11 + v14[8]) = *(void *)(v12 + v14[8]);
  *(unsigned char *)(v11 + v14[9]) = *(unsigned char *)(v12 + v14[9]);
  *(void *)(v11 + v14[10]) = *(void *)(v12 + v14[10]);
  *(unsigned char *)(v11 + v14[11]) = *(unsigned char *)(v12 + v14[11]);
  *(void *)(v11 + v14[12]) = *(void *)(v12 + v14[12]);
  *(void *)(a1 + *(int *)(v32 + 28)) = *(void *)(v33 + *(int *)(v32 + 28));
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1C0E6D3F8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2 + 1;
  *a1 = *a2;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, v6);
  uint64_t v39 = a3;
  uint64_t v40 = a2;
  uint64_t v7 = *(int *)(a3 + 24);
  long long v41 = a1;
  uint64_t v8 = (char *)a1 + v7;
  long long v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151772C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for GroupLayoutContext();
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  uint64_t v15 = sub_1C151757C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  uint64_t v36 = (int *)v11;
  uint64_t v16 = *(int *)(v11 + 24);
  uint64_t v17 = &v8[v16];
  uint64_t v18 = &v9[v16];
  long long v19 = *(_OWORD *)&v9[v16];
  unsigned char v17[16] = v9[v16 + 16];
  *(_OWORD *)uint64_t v17 = v19;
  v17[17] = v9[v16 + 17];
  v17[18] = v9[v16 + 18];
  v17[19] = v9[v16 + 19];
  v17[20] = v9[v16 + 20];
  v17[21] = v9[v16 + 21];
  v17[22] = v9[v16 + 22];
  v17[23] = v9[v16 + 23];
  uint64_t v20 = (unint64_t *)&v8[v16 + 24];
  unint64_t v21 = *(void *)&v9[v16 + 24];
  if (*v20 >= 2)
  {
    if (v21 >= 2)
    {
      *uint64_t v20 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BFF1F464((uint64_t)(v17 + 24), (uint64_t (*)(void))sub_1C018B80C);
      *uint64_t v20 = *((void *)v18 + 3);
    }
  }
  else
  {
    *uint64_t v20 = v21;
    if (v21 >= 2) {
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v38 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v22 = *(int *)(v38 + 36);
  uint64_t v23 = (uint64_t)&v17[v22];
  uint64_t v24 = &v18[v22];
  uint64_t v25 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  uint64_t v37 = v23;
  LODWORD(v23) = v27(v23, 1, v25);
  int v28 = v27((uint64_t)v24, 1, v25);
  if (v23)
  {
    if (!v28)
    {
      uint64_t v33 = sub_1C151B62C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v37, v24, v33);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v37, 0, 1, v25);
      goto LABEL_16;
    }
    sub_1C0E6CBD4(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v30 = *(void *)(*(void *)(v29 - 8) + 64);
    uint64_t v31 = (void *)v37;
  }
  else
  {
    if (!v28)
    {
      uint64_t v34 = sub_1C151B62C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v34 - 8) + 24))(v37, v24, v34);
      goto LABEL_16;
    }
    sub_1BFF1F464(v37, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C0E6CBD4(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v30 = *(void *)(*(void *)(v32 - 8) + 64);
    uint64_t v31 = (void *)v37;
  }
  memcpy(v31, v24, v30);
LABEL_16:
  *(void *)&v17[*(int *)(v38 + 40)] = *(void *)&v18[*(int *)(v38 + 40)];
  *(void *)&v8[v36[7]] = *(void *)&v9[v36[7]];
  *(void *)&v8[v36[8]] = *(void *)&v9[v36[8]];
  v8[v36[9]] = v9[v36[9]];
  *(void *)&v8[v36[10]] = *(void *)&v9[v36[10]];
  swift_retain();
  swift_release();
  v8[v36[11]] = v9[v36[11]];
  *(void *)&v8[v36[12]] = *(void *)&v9[v36[12]];
  swift_retain();
  swift_release();
  *(void *)((char *)v41 + *(int *)(v39 + 28)) = *(void *)((char *)v40 + *(int *)(v39 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v41;
}

uint64_t sub_1C0E6D88C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  long long v9 = (int *)type metadata accessor for GroupLayoutContext();
  uint64_t v10 = v9[5];
  uint64_t v11 = v6 + v10;
  uint64_t v12 = v7 + v10;
  uint64_t v13 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = v9[6];
  uint64_t v15 = v6 + v14;
  uint64_t v16 = v7 + v14;
  *(_OWORD *)uint64_t v15 = *(_OWORD *)(v7 + v14);
  *(unsigned char *)(v15 + 16) = *(unsigned char *)(v7 + v14 + 16);
  *(_WORD *)(v15 + 17) = *(_WORD *)(v7 + v14 + 17);
  *(unsigned char *)(v15 + 19) = *(unsigned char *)(v7 + v14 + 19);
  *(_DWORD *)(v15 + 20) = *(_DWORD *)(v7 + v14 + 20);
  *(void *)(v15 + 24) = *(void *)(v7 + v14 + 24);
  uint64_t v24 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v17 = *(int *)(v24 + 36);
  __dst = (void *)(v15 + v17);
  uint64_t v18 = (const void *)(v16 + v17);
  uint64_t v19 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    sub_1C0E6CBD4(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    memcpy(__dst, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    uint64_t v22 = sub_1C151B62C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v22 - 8) + 32))(__dst, v18, v22);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
  }
  *(void *)(v15 + *(int *)(v24 + 40)) = *(void *)(v16 + *(int *)(v24 + 40));
  *(void *)(v6 + v9[7]) = *(void *)(v7 + v9[7]);
  *(void *)(v6 + v9[8]) = *(void *)(v7 + v9[8]);
  *(unsigned char *)(v6 + v9[9]) = *(unsigned char *)(v7 + v9[9]);
  *(void *)(v6 + v9[10]) = *(void *)(v7 + v9[10]);
  *(unsigned char *)(v6 + v9[11]) = *(unsigned char *)(v7 + v9[11]);
  *(void *)(v6 + v9[12]) = *(void *)(v7 + v9[12]);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1C0E6DB70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v38 = a3;
  uint64_t v39 = a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v34 = a1;
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for GroupLayoutContext();
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = v7 + v11;
  uint64_t v13 = v8 + v11;
  uint64_t v14 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v37 = (int *)v10;
  uint64_t v15 = *(int *)(v10 + 24);
  uint64_t v16 = v7 + v15;
  uint64_t v17 = v8 + v15;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)(v8 + v15);
  *(unsigned char *)(v16 + 16) = *(unsigned char *)(v8 + v15 + 16);
  *(unsigned char *)(v16 + 17) = *(unsigned char *)(v8 + v15 + 17);
  *(unsigned char *)(v16 + 18) = *(unsigned char *)(v8 + v15 + 18);
  *(unsigned char *)(v16 + 19) = *(unsigned char *)(v8 + v15 + 19);
  *(unsigned char *)(v16 + 20) = *(unsigned char *)(v8 + v15 + 20);
  *(unsigned char *)(v16 + 21) = *(unsigned char *)(v8 + v15 + 21);
  *(unsigned char *)(v16 + 22) = *(unsigned char *)(v8 + v15 + 22);
  *(unsigned char *)(v16 + 23) = *(unsigned char *)(v8 + v15 + 23);
  uint64_t v18 = (unint64_t *)(v7 + v15 + 24);
  unint64_t v19 = *(void *)(v8 + v15 + 24);
  if (*v18 < 2) {
    goto LABEL_4;
  }
  if (v19 < 2)
  {
    sub_1BFF1F464((uint64_t)v18, (uint64_t (*)(void))sub_1C018B80C);
    unint64_t v19 = *(void *)(v17 + 24);
LABEL_4:
    *uint64_t v18 = v19;
    goto LABEL_6;
  }
  *uint64_t v18 = v19;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v36 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v20 = *(int *)(v36 + 36);
  uint64_t v21 = v16 + v20;
  uint64_t v22 = (const void *)(v17 + v20);
  uint64_t v23 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  uint64_t v35 = v21;
  LODWORD(v21) = v25(v21, 1, v23);
  int v26 = v25((uint64_t)v22, 1, v23);
  if (v21)
  {
    if (!v26)
    {
      uint64_t v31 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v31 - 8) + 32))(v35, v22, v31);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v24 + 56))(v35, 0, 1, v23);
      goto LABEL_14;
    }
    sub_1C0E6CBD4(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v28 = *(void *)(*(void *)(v27 - 8) + 64);
    uint64_t v29 = (void *)v35;
  }
  else
  {
    if (!v26)
    {
      uint64_t v32 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v32 - 8) + 40))(v35, v22, v32);
      goto LABEL_14;
    }
    sub_1BFF1F464(v35, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C0E6CBD4(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v28 = *(void *)(*(void *)(v30 - 8) + 64);
    uint64_t v29 = (void *)v35;
  }
  memcpy(v29, v22, v28);
LABEL_14:
  *(void *)(v16 + *(int *)(v36 + 40)) = *(void *)(v17 + *(int *)(v36 + 40));
  *(void *)(v7 + v37[7]) = *(void *)(v8 + v37[7]);
  *(void *)(v7 + v37[8]) = *(void *)(v8 + v37[8]);
  *(unsigned char *)(v7 + v37[9]) = *(unsigned char *)(v8 + v37[9]);
  *(void *)(v7 + v37[10]) = *(void *)(v8 + v37[10]);
  swift_release();
  *(unsigned char *)(v7 + v37[11]) = *(unsigned char *)(v8 + v37[11]);
  *(void *)(v7 + v37[12]) = *(void *)(v8 + v37[12]);
  swift_release();
  *(void *)(v34 + *(int *)(v38 + 28)) = *(void *)(v39 + *(int *)(v38 + 28));
  swift_bridgeObjectRelease();
  return v34;
}

uint64_t sub_1C0E6DFCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0E6DFE0);
}

uint64_t sub_1C0E6DFE0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C0E6E090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0E6E0A4);
}

void *sub_1C0E6E0A4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for GroupLayoutContext();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C0E6E14C()
{
  uint64_t result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C0E6E1FC(uint64_t a1)
{
  uint64_t result = sub_1C0E6EAAC(&qword_1EA1A7E28, (void (*)(uint64_t))type metadata accessor for J18_V1.Bound);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0E6E254@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0E6B958(a1, *(uint64_t **)(v2 + 16), a2);
}

void sub_1C0E6E274(uint64_t a1)
{
  sub_1C0E6BAEC(a1, v1[2], v1[3], v1[4]);
}

unint64_t sub_1C0E6E280()
{
  unint64_t result = qword_1EA1A7E38;
  if (!qword_1EA1A7E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7E38);
  }
  return result;
}

unint64_t sub_1C0E6E2D4()
{
  unint64_t result = qword_1EA1A7E40;
  if (!qword_1EA1A7E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7E40);
  }
  return result;
}

uint64_t sub_1C0E6E328@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, const void *a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1C0E6C808(a1, a2, a3, *(void *)(v4 + 16), a4);
}

uint64_t sub_1C0E6E330()
{
  swift_release();

  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 104) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0 + 152) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  unint64_t v1 = *(void **)(v0 + 168);
  if (v1)
  {

    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 248) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (*(void *)(v0 + 296) >= 0x11uLL) {
      swift_bridgeObjectRelease();
    }
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 312);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0E6E43C()
{
  return swift_deallocObject();
}

uint64_t sub_1C0E6E44C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0E6E528(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C0E6E490()
{
  if (!qword_1EA1A7E60)
  {
    sub_1C0E6EA44(255, &qword_1EA1A7E68, (uint64_t (*)(void))sub_1C0E6E280, (uint64_t)&type metadata for J18_V1.Layout, MEMORY[0x1E4FAB678]);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A7E60);
    }
  }
}

void sub_1C0E6E520(uint64_t a1)
{
  sub_1C0E6C0EC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1C0E6E528(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for J18_V1.Layout;
    v8[1] = &type metadata for J18_V1.Layout.Attributes;
    _OWORD v8[2] = sub_1C0E6E280();
    v8[3] = sub_1C0E6E2D4();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

ValueMetadata *type metadata accessor for J18_V1.Layout.Attributes()
{
  return &type metadata for J18_V1.Layout.Attributes;
}

ValueMetadata *type metadata accessor for J18_V1.Layout()
{
  return &type metadata for J18_V1.Layout;
}

unint64_t sub_1C0E6E5D0()
{
  unint64_t result = qword_1EA1A7E88;
  if (!qword_1EA1A7E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7E88);
  }
  return result;
}

unint64_t sub_1C0E6E628()
{
  unint64_t result = qword_1EA1A7E90;
  if (!qword_1EA1A7E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7E90);
  }
  return result;
}

unint64_t sub_1C0E6E680()
{
  unint64_t result = qword_1EA1A7E98;
  if (!qword_1EA1A7E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7E98);
  }
  return result;
}

unint64_t sub_1C0E6E6D8()
{
  unint64_t result = qword_1EA1A7EA0;
  if (!qword_1EA1A7EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7EA0);
  }
  return result;
}

uint64_t sub_1C0E6E72C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v18 = a2;
  sub_1C0E6EA44(0, &qword_1EA1A7EA8, (uint64_t (*)(void))sub_1C0E6E9F0, (uint64_t)&type metadata for J18_V1.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0E6E9F0();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v18;
  type metadata accessor for CGRect(0);
  char v23 = 0;
  sub_1C0E6EAAC(&qword_1EB87A290, type metadata accessor for CGRect);
  sub_1C15206EC();
  uint64_t v11 = v19;
  uint64_t v12 = v20;
  uint64_t v13 = v21;
  uint64_t v14 = v22;
  sub_1C01BCA00(0, &qword_1EB85DF00, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes, MEMORY[0x1E4FBB320]);
  char v23 = 1;
  sub_1C01BD088(&qword_1EB85DF10, (void (*)(void))sub_1C01BCFCC);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v15 = v19;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  void *v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1C0E6E9F0()
{
  unint64_t result = qword_1EA1A7EB0;
  if (!qword_1EA1A7EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7EB0);
  }
  return result;
}

void sub_1C0E6EA44(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C0E6EAAC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for J18_V1.Layout.Attributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0E6EBC0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for J18_V1.Layout.Attributes.CodingKeys()
{
  return &type metadata for J18_V1.Layout.Attributes.CodingKeys;
}

unint64_t sub_1C0E6EBFC()
{
  unint64_t result = qword_1EA1A7EC0;
  if (!qword_1EA1A7EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7EC0);
  }
  return result;
}

unint64_t sub_1C0E6EC54()
{
  unint64_t result = qword_1EA1A7EC8;
  if (!qword_1EA1A7EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7EC8);
  }
  return result;
}

unint64_t sub_1C0E6ECAC()
{
  unint64_t result = qword_1EA1A7ED0;
  if (!qword_1EA1A7ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7ED0);
  }
  return result;
}

uint64_t dispatch thunk of PuzzleImageShareAttributeProviderType.shareImage(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 8) + **(int **)(a3 + 8));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_1C032DE74;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of PuzzleImageShareAttributeProviderType.shareIcon(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 16) + **(int **)(a3 + 16));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_1C032DE74;
  return v9(a1, a2, a3);
}

id sub_1C0E6EF08()
{
  uint64_t v1 = *(void **)(v0 + 176);
  if (v1)
  {
    id v2 = *(id *)(v0 + 176);
  }
  else
  {
    id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C00]), sel_init);
    objc_msgSend(v3, sel_setUnitsStyle_, 1);
    objc_msgSend(v3, sel_setAllowedUnits_, 192);
    objc_msgSend(v3, sel_setZeroFormattingBehavior_, 1);
    unsigned int v4 = *(void **)(v0 + 176);
    *(void *)(v0 + 176) = v3;
    id v2 = v3;

    uint64_t v1 = 0;
  }
  id v5 = v1;
  return v2;
}

uint64_t sub_1C0E6EFB0(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = sub_1C151631C();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  void v2[6] = swift_task_alloc();
  sub_1BFEEA100(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  v2[7] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C0E6F0CC, 0, 0);
}

uint64_t sub_1C0E6F0CC()
{
  id v2 = (void *)v0[2];
  uint64_t v1 = (void *)v0[3];
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  id v5 = objc_msgSend(v2, sel_identifier);
  uint64_t v6 = sub_1C151E62C();
  uint64_t v8 = v7;

  uint64_t v9 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 + 8) + 48))(v6, v8, v3);
  v0[8] = v9;
  swift_bridgeObjectRelease();
  if (v9)
  {
    id v10 = v9;
    id v11 = objc_msgSend(v10, sel_completedDate);
    uint64_t v12 = v0[7];
    if (v11)
    {
      uint64_t v13 = v11;
      uint64_t v15 = v0[5];
      uint64_t v14 = v0[6];
      uint64_t v16 = v0[4];
      sub_1C15162BC();

      (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v12, v14, v16);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v16);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v12, 1, v16) != 1)
      {
        sub_1BFF97BE4(v0[7]);
        uint64_t v17 = (void *)swift_task_alloc();
        v0[9] = v17;
        void *v17 = v0;
        v17[1] = sub_1C0E6F340;
        uint64_t v19 = v0[2];
        uint64_t v18 = v0[3];
        v17[9] = v10;
        v17[10] = v18;
        v17[8] = v19;
        uint64_t v20 = sub_1C0E6F920;
        goto LABEL_8;
      }
    }
    else
    {
      (*(void (**)(void, uint64_t, uint64_t, void))(v0[5] + 56))(v0[7], 1, 1, v0[4]);
    }
    uint64_t v21 = v0[7];

    sub_1BFF97BE4(v21);
  }
  uint64_t v22 = (void *)swift_task_alloc();
  v0[13] = v22;
  *uint64_t v22 = v0;
  v22[1] = sub_1C0E6F784;
  v22[7] = v0[2];
  uint64_t v20 = sub_1C0E7326C;
LABEL_8:
  return MEMORY[0x1F4188298](v20, 0, 0);
}

uint64_t sub_1C0E6F340(uint64_t a1)
{
  *(void *)(*(void *)v1 + 80) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C0E6F440, 0, 0);
}

uint64_t sub_1C0E6F440()
{
  if (v0[10])
  {
    uint64_t v1 = (void *)v0[8];

    uint64_t v2 = v0[10];
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(uint64_t))v0[1];
    return v3(v2);
  }
  else
  {
    if (qword_1EB8814A0 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1C15198DC();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EB93C7A8);
    uint64_t v6 = sub_1C15198AC();
    os_log_type_t v7 = sub_1C151F38C();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_1BFC31000, v6, v7, "PuzzleImageShareAttributeProvider: Failed to generate completedPuzzleImage, using the regular layout...", v8, 2u);
      MEMORY[0x1C18C9B00](v8, -1, -1);
    }

    uint64_t v9 = (void *)swift_task_alloc();
    v0[11] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_1C0E6F608;
    v9[7] = v0[2];
    return MEMORY[0x1F4188298](sub_1C0E7326C, 0, 0);
  }
}

uint64_t sub_1C0E6F608(uint64_t a1)
{
  *(void *)(*(void *)v1 + 96) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C0E6F708, 0, 0);
}

uint64_t sub_1C0E6F708()
{
  uint64_t v1 = (void *)v0[8];

  uint64_t v2 = v0[12];
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(uint64_t))v0[1];
  return v3(v2);
}

uint64_t sub_1C0E6F784(uint64_t a1)
{
  *(void *)(*(void *)v1 + 112) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C0E6F884, 0, 0);
}

uint64_t sub_1C0E6F884()
{
  uint64_t v1 = *(void *)(v0 + 112);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1C0E6F8FC(uint64_t a1, uint64_t a2)
{
  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  return MEMORY[0x1F4188298](sub_1C0E6F920, 0, 0);
}

uint64_t sub_1C0E6F920()
{
  uint64_t v19 = v0;
  *(void *)(v0 + 88) = sub_1C0E7007C(*(void **)(v0 + 64), *(void **)(v0 + 72));
  *(void *)(v0 + 96) = v1;
  if (v1)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v2;
    void *v2 = v0;
    v2[1] = sub_1C0E6FBD4;
    uint64_t v3 = *(void *)(v0 + 72);
    uint64_t v4 = *(void *)(v0 + 64);
    return sub_1C0E70250(v4, v3);
  }
  else
  {
    if (qword_1EB8814A0 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1C15198DC();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EB93C7A8);
    swift_unknownObjectRetain_n();
    os_log_type_t v7 = sub_1C15198AC();
    os_log_type_t v8 = sub_1C151F36C();
    BOOL v9 = os_log_type_enabled(v7, v8);
    uint64_t v10 = *(void **)(v0 + 64);
    if (v9)
    {
      id v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      uint64_t v18 = v17;
      *(_DWORD *)id v11 = 136315138;
      id v12 = objc_msgSend(v10, sel_identifier);
      uint64_t v13 = sub_1C151E62C();
      unint64_t v15 = v14;

      *(void *)(v0 + 56) = sub_1BFDA76EC(v13, v15, &v18);
      sub_1C151FE1C();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease_n();
      _os_log_impl(&dword_1BFC31000, v7, v8, "PuzzleImageShareAttributeProvider: Failed to get score for puzzle %s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v17, -1, -1);
      MEMORY[0x1C18C9B00](v11, -1, -1);
    }
    else
    {
      swift_unknownObjectRelease_n();
    }

    uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
    return v16(0);
  }
}

uint64_t sub_1C0E6FBD4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 112) = a1;
  *(void *)(v3 + 120) = a2;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C0E6FCD4, 0, 0);
}

uint64_t sub_1C0E6FCD4()
{
  sub_1BFC66384(v0[10] + 136, (uint64_t)(v0 + 2));
  v0[16] = sub_1C151EE6C();
  swift_unknownObjectRetain();
  v0[17] = sub_1C151EE5C();
  uint64_t v2 = sub_1C151EDBC();
  return MEMORY[0x1F4188298](sub_1C0E6FD88, v2, v1);
}

uint64_t sub_1C0E6FD88()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_release();
  type metadata accessor for CompletedShareImageFactory();
  swift_allocObject();
  *(void *)(v0 + 144) = sub_1C0E723E4(v1, v0 + 16);
  swift_unknownObjectRelease();
  return MEMORY[0x1F4188298](sub_1C0E6FE2C, 0, 0);
}

uint64_t sub_1C0E6FE2C()
{
  uint64_t v1 = *(void **)(v0 + 72);
  *(void *)(v0 + 152) = sub_1C0E72F18(*(void **)(v0 + 64));
  *(void *)(v0 + 160) = v2;
  *(void *)(v0 + 168) = sub_1C0E7311C();
  *(void *)(v0 + 176) = v3;
  id v4 = objc_msgSend(v1, sel_rankID);
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = sub_1C151E62C();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  *(void *)(v0 + 184) = v6;
  *(void *)(v0 + 192) = v8;
  *(void *)(v0 + 200) = sub_1C151EE5C();
  uint64_t v10 = sub_1C151EDBC();
  return MEMORY[0x1F4188298](sub_1C0E6FF1C, v10, v9);
}

uint64_t sub_1C0E6FF1C()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = v0[23];
  id v11 = (void *)v0[22];
  uint64_t v3 = (void *)v0[20];
  uint64_t v4 = v0[21];
  uint64_t v5 = v0[19];
  uint64_t v7 = v0[14];
  uint64_t v6 = v0[15];
  uint64_t v8 = v0[11];
  uint64_t v9 = v0[12];
  swift_release();
  v0[26] = sub_1C0E71294(v5, v3, v4, v11, v8, v9, v7, v6, v2, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](sub_1C0E70018, 0, 0);
}

uint64_t sub_1C0E70018()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 208);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1C0E7007C(void *a1, void *a2)
{
  uint64_t v3 = v2;
  swift_getObjectType();
  __int16 v6 = FCPuzzleProviding.puzzleTypeTraits.getter();
  if ((v6 & 0x200) != 0)
  {
    double v22 = (double)(uint64_t)objc_msgSend(a2, sel_playDuration);
    id v23 = sub_1C0E6EF08();
    id v19 = objc_msgSend(v23, sel_stringFromTimeInterval_, v22);

    if (v19)
    {
      uint64_t v21 = sub_1C151E62C();
      goto LABEL_8;
    }
    return 0;
  }
  if ((v6 & 0x400) == 0) {
    return 0;
  }
  id v7 = objc_msgSend(a2, sel_rankID);
  if (!v7) {
    return 0;
  }
  uint64_t v8 = v7;
  uint64_t v9 = sub_1C151E62C();
  uint64_t v11 = v10;

  uint64_t v12 = v3 + 12;
  uint64_t v14 = v3[15];
  uint64_t v13 = v3[16];
  __swift_project_boxed_opaque_existential_1(v12, v14);
  id v15 = objc_msgSend(objc_msgSend(a1, sel_puzzleType), sel_identifier);
  swift_unknownObjectRelease();
  uint64_t v16 = sub_1C151E62C();
  uint64_t v18 = v17;

  id v19 = (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 8))(v9, v11, v16, v18, v14, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v19) {
    return 0;
  }
  id v20 = objc_msgSend(v19, sel_name);
  uint64_t v21 = sub_1C151E62C();

LABEL_8:
  return v21;
}

uint64_t sub_1C0E70250(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  v3[7] = type metadata accessor for PuzzleStatisticValue(0);
  v3[8] = swift_task_alloc();
  v3[9] = swift_task_alloc();
  v3[10] = type metadata accessor for PuzzleStatisticCategory(0);
  v3[11] = swift_task_alloc();
  v3[12] = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
  v3[13] = swift_task_alloc();
  v3[14] = type metadata accessor for PuzzleStatistic();
  v3[15] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C0E70388, 0, 0);
}

uint64_t sub_1C0E70388()
{
  swift_getObjectType();
  uint64_t v1 = FCPuzzleProviding.puzzleTypeTraits.getter();
  *(void *)(v0 + 128) = v1;
  if ((~(_WORD)v1 & 0xA00) != 0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void, void))(v0 + 8);
    return v10(0, 0);
  }
  else
  {
    uint64_t v2 = *(void **)(v0 + 48);
    uint64_t v3 = *(void **)(v0 + 32);
    uint64_t v4 = v2[10];
    uint64_t v5 = v2[11];
    __swift_project_boxed_opaque_existential_1(v2 + 7, v4);
    *(unsigned char *)(v0 + 160) = 4;
    id v6 = objc_msgSend(v3, sel_puzzleType);
    *(void *)(v0 + 136) = v6;
    uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, id, uint64_t, uint64_t))(*(void *)(v5 + 16) + **(int **)(v5 + 16));
    id v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v7;
    void *v7 = v0;
    v7[1] = sub_1C0E70570;
    uint64_t v8 = *(void *)(v0 + 120);
    return v11(v8, v0 + 160, v6, v4, v5);
  }
}

uint64_t sub_1C0E70570()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C0E70CA8;
  }
  else
  {
    swift_unknownObjectRelease();
    uint64_t v2 = sub_1C0E7068C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C0E7068C()
{
  sub_1C0E7393C(*(void *)(v0 + 120) + *(int *)(*(void *)(v0 + 112) + 20), *(void *)(v0 + 88), type metadata accessor for PuzzleStatisticCategory);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v4 = *(void *)(v0 + 88);
    sub_1BFDA73B8(*(void *)(v0 + 120), (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
    uint64_t v5 = type metadata accessor for PuzzleStatisticCategory;
LABEL_19:
    uint64_t v31 = v5;
    uint64_t v30 = v4;
    goto LABEL_20;
  }
  uint64_t v1 = *(void **)(v0 + 32);
  sub_1C0E738D8(*(void *)(v0 + 88), *(void *)(v0 + 104));
  id v2 = objc_msgSend(v1, sel_difficulty);
  if (v2 == (id)30)
  {
    uint64_t v6 = 6;
LABEL_9:
    uint64_t v3 = *(void *)(v0 + 104) + *(int *)(*(void *)(v0 + 96) + 4 * v6);
    goto LABEL_10;
  }
  if (v2 == (id)20)
  {
    uint64_t v6 = 5;
    goto LABEL_9;
  }
  if (v2 != (id)10)
  {
    uint64_t v4 = *(void *)(v0 + 120);
    uint64_t v32 = *(void *)(v0 + 104);
LABEL_18:
    sub_1BFDA73B8(v32, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
    uint64_t v5 = (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStatistic;
    goto LABEL_19;
  }
  uint64_t v3 = *(void *)(v0 + 104);
LABEL_10:
  uint64_t v7 = *(void *)(v0 + 64);
  uint64_t v8 = *(void *)(v0 + 72);
  sub_1C0E7393C(v3, v8, type metadata accessor for PuzzleStatisticValue);
  sub_1C0E7393C(v8, v7, type metadata accessor for PuzzleStatisticValue);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v9 = *(void *)(v0 + 64);
    id v10 = *(id *)v9;
    char v11 = *(unsigned char *)(v9 + 8);
    id v12 = objc_msgSend(*(id *)(v0 + 40), sel_playDuration);
    if ((v11 & 1) == 0 && v12 == v10)
    {
      uint64_t v13 = *(void *)(v0 + 128);
      type metadata accessor for Localized();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v15 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      if ((v13 & 2) != 0)
      {
        uint64_t v36 = *(void **)(v0 + 32);
        sub_1C1515B8C();

        sub_1BFEEA100(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
        uint64_t v37 = swift_allocObject();
        *(_OWORD *)(v37 + 16) = xmmword_1C1529AE0;
        id v38 = objc_msgSend(v36, sel_difficultyDescription, 0x80000001C1629C20);
        if (v38)
        {
          uint64_t v39 = v38;
          uint64_t v40 = sub_1C151E62C();
          unint64_t v42 = v41;
        }
        else
        {
          uint64_t v40 = 0;
          unint64_t v42 = 0;
        }
        uint64_t v43 = *(void *)(v0 + 120);
        uint64_t v44 = *(void *)(v0 + 104);
        uint64_t v45 = *(void *)(v0 + 72);
        *(void *)(v37 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v37 + 64) = sub_1BFE9C558();
        if (v42) {
          uint64_t v46 = v40;
        }
        else {
          uint64_t v46 = 0;
        }
        if (v42) {
          unint64_t v47 = v42;
        }
        else {
          unint64_t v47 = 0xE000000000000000;
        }
        *(void *)(v37 + 32) = v46;
        *(void *)(v37 + 40) = v47;
        uint64_t v24 = sub_1C151E66C();
        uint64_t v26 = v48;
        swift_bridgeObjectRelease();
        sub_1BFDA73B8(v45, type metadata accessor for PuzzleStatisticValue);
        sub_1BFDA73B8(v44, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
        sub_1BFDA73B8(v43, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
      }
      else
      {
        uint64_t v16 = *(void *)(v0 + 120);
        uint64_t v17 = *(void *)(v0 + 104);
        uint64_t v18 = *(void *)(v0 + 72);
        id v19 = *(void **)(v0 + 32);
        sub_1C1515B8C();

        sub_1BFEEA100(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
        uint64_t v20 = swift_allocObject();
        *(_OWORD *)(v20 + 16) = xmmword_1C1529AE0;
        uint64_t v21 = sub_1C0E70FFC(v19);
        uint64_t v23 = v22;
        *(void *)(v20 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v20 + 64) = sub_1BFE9C558();
        *(void *)(v20 + 32) = v21;
        *(void *)(v20 + 40) = v23;
        uint64_t v24 = sub_1C151E66C();
        uint64_t v26 = v25;
        swift_bridgeObjectRelease();
        sub_1BFDA73B8(v18, type metadata accessor for PuzzleStatisticValue);
        sub_1BFDA73B8(v17, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
        sub_1BFDA73B8(v16, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
      }
      goto LABEL_21;
    }
    uint64_t v4 = *(void *)(v0 + 120);
    uint64_t v33 = *(void *)(v0 + 104);
    sub_1BFDA73B8(*(void *)(v0 + 72), type metadata accessor for PuzzleStatisticValue);
    uint64_t v32 = v33;
    goto LABEL_18;
  }
  uint64_t v27 = *(void *)(v0 + 120);
  uint64_t v28 = *(void *)(v0 + 104);
  uint64_t v29 = *(void *)(v0 + 64);
  sub_1BFDA73B8(*(void *)(v0 + 72), type metadata accessor for PuzzleStatisticValue);
  sub_1BFDA73B8(v28, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
  sub_1BFDA73B8(v27, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
  uint64_t v30 = v29;
  uint64_t v31 = type metadata accessor for PuzzleStatisticValue;
LABEL_20:
  sub_1BFDA73B8(v30, v31);
  uint64_t v24 = 0;
  uint64_t v26 = 0;
LABEL_21:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v34(v24, v26);
}

uint64_t sub_1C0E70CA8()
{
  uint64_t v23 = v0;
  swift_unknownObjectRelease();
  if (qword_1EB8814A0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[19];
  uint64_t v2 = sub_1C15198DC();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB93C7A8);
  swift_unknownObjectRetain();
  id v3 = v1;
  swift_unknownObjectRetain();
  id v4 = v1;
  uint64_t v5 = sub_1C15198AC();
  os_log_type_t v6 = sub_1C151F36C();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = (void *)v0[19];
  uint64_t v9 = (void *)v0[4];
  if (v7)
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v20 = (void *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v22 = v21;
    *(_DWORD *)uint64_t v10 = 136315394;
    id v11 = objc_msgSend(objc_msgSend(v9, sel_puzzleType), sel_identifier);
    swift_unknownObjectRelease();
    uint64_t v12 = sub_1C151E62C();
    log = v5;
    unint64_t v14 = v13;

    v0[2] = sub_1BFDA76EC(v12, v14, &v22);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    *(_WORD *)(v10 + 12) = 2112;
    id v15 = v8;
    uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v16;
    sub_1C151FE1C();
    *uint64_t v20 = v16;

    _os_log_impl(&dword_1BFC31000, log, v6, "Failed to get fastest time for puzzleType %s [%@]", (uint8_t *)v10, 0x16u);
    sub_1C01DA31C();
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v20, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v21, -1, -1);
    MEMORY[0x1C18C9B00](v10, -1, -1);
  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void, void))v0[1];
  return v17(0, 0);
}

uint64_t sub_1C0E70FFC(void *a1)
{
  id v2 = objc_msgSend(objc_msgSend(a1, sel_puzzleType), sel_nameCompact);
  swift_unknownObjectRelease();
  if (v2)
  {
    uint64_t v3 = sub_1C151E62C();
    unint64_t v5 = v4;

    uint64_t v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0) {
      uint64_t v6 = v3 & 0xFFFFFFFFFFFFLL;
    }
    if (v6) {
      return v3;
    }
    swift_bridgeObjectRelease();
  }
  id v8 = objc_msgSend(objc_msgSend(a1, sel_puzzleType), sel_nameForSharing);
  swift_unknownObjectRelease();
  uint64_t v9 = sub_1C151E62C();

  return v9;
}

uint64_t sub_1C0E710F8()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);

  return swift_deallocClassInstance();
}

uint64_t sub_1C0E71150(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C0328A38;
  return sub_1C0E6EFB0(a1);
}

uint64_t sub_1C0E711E8(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C032DE74;
  v3[7] = a1;
  return MEMORY[0x1F4188298](sub_1C0E7326C, 0, 0);
}

id sub_1C0E71294(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = v10;
  uint64_t v56 = a7;
  uint64_t v57 = a8;
  uint64_t v54 = a5;
  uint64_t v55 = a6;
  unint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFEEA100(0, &qword_1EA1A1280, MEMORY[0x1E4FB1290], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v54 - v16;
  sub_1BFEEA100(0, (unint64_t *)&qword_1EA1A17D0, MEMORY[0x1E4F273A8], v14);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v20 = (char *)&v54 - v19;
  id v21 = sub_1C0E71B80(a9, a10);
  if (v21)
  {
    uint64_t v23 = v21;
    uint64_t v24 = v22;
    uint64_t v25 = *(void **)(v10 + 88);
    if (a2) {
      a2 = (void *)sub_1C151E5EC();
    }
    objc_msgSend(v25, sel_setText_, a2, v54, v55, v56);

    objc_msgSend(v25, sel_setTextColor_, v23);
    uint64_t v26 = *(void **)(v11 + 96);
    if (a4) {
      a4 = (void *)sub_1C151E5EC();
    }
    objc_msgSend(v26, sel_setText_, a4);

    id v27 = objc_msgSend(v23, sel_colorWithAlphaComponent_, 0.7);
    objc_msgSend(v26, sel_setTextColor_, v27);

    uint64_t v28 = *(void **)(v11 + 104);
    uint64_t v29 = (void *)sub_1C151E5EC();
    objc_msgSend(v28, sel_setText_, v29);

    objc_msgSend(v28, sel_setTextColor_, v23);
    uint64_t v30 = v11 + OBJC_IVAR____TtC8NewsFeedP33_1AB23A019A94525840AAA3EBFB74EFAE26CompletedShareImageFactory_buttonConfig;
    swift_beginAccess();
    id v31 = v24;
    sub_1C151FC5C();
    swift_endAccess();
    id v32 = v31;
    uint64_t v33 = v57;
    sub_1C0E71934(v57, v24, (uint64_t)v20);

    swift_beginAccess();
    sub_1C151FC3C();
    swift_endAccess();
    uint64_t v34 = *(void **)(v11 + 112);
    uint64_t v35 = sub_1C151FCDC();
    uint64_t v36 = *(void *)(v35 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v17, v30, v35);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v17, 0, 1, v35);
    sub_1C151FD0C();
    objc_msgSend(v34, sel_setPreferredBehavioralStyle_, 1);
    id v37 = objc_msgSend(*(id *)(v11 + 80), sel_arrangedSubviews);
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2C0);
    uint64_t v38 = sub_1C151EBCC();

    if ((v38 & 0xC000000000000001) != 0)
    {
      id v39 = (id)MEMORY[0x1C18C7CB0](1, v38);
    }
    else
    {
      if (*(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
      {
        __break(1u);
        goto LABEL_18;
      }
      id v39 = *(id *)(v38 + 40);
    }
    uint64_t v40 = v39;
    swift_bridgeObjectRelease();
    objc_msgSend(v40, sel_setHidden_, v33 == 0);

    objc_msgSend(*(id *)(v11+ OBJC_IVAR____TtC8NewsFeedP33_1AB23A019A94525840AAA3EBFB74EFAE26CompletedShareImageFactory_widthConstraint), sel_setConstant_, 288.0);
    unint64_t v41 = *(void **)(v11 + 64);
    objc_msgSend(v41, sel_setBackgroundColor_, v32);
    objc_msgSend(v41, sel_setNeedsLayout);
    objc_msgSend(v41, sel_layoutIfNeeded);
    id v42 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17E0]), sel_init);
    objc_msgSend(v42, sel_setPreferredRange_, 2);
    objc_msgSend(v41, sel_bounds);
    id v45 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17D8]), sel_initWithSize_format_, v42, v43, v44);
    uint64_t v46 = swift_allocObject();
    *(void *)(v46 + 16) = sub_1C0E73A04;
    *(void *)(v46 + 24) = v11;
    aBlock[4] = sub_1BFD2E744;
    aBlock[5] = v46;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BFD2E6D0;
    aBlock[3] = &block_descriptor_69;
    unint64_t v47 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    id v48 = objc_msgSend(v45, sel_imageWithActions_, v47);

    _Block_release(v47);
    LOBYTE(v42) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((v42 & 1) == 0) {
      return v48;
    }
    __break(1u);
  }
  if (qword_1EB8814A0 != -1) {
LABEL_18:
  }
    swift_once();
  uint64_t v49 = sub_1C15198DC();
  __swift_project_value_buffer(v49, (uint64_t)qword_1EB93C7A8);
  unsigned int v50 = sub_1C15198AC();
  os_log_type_t v51 = sub_1C151F36C();
  if (os_log_type_enabled(v50, v51))
  {
    uint64_t v52 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v52 = 0;
    _os_log_impl(&dword_1BFC31000, v50, v51, "Could not get configured theme. Skipping image generation", v52, 2u);
    MEMORY[0x1C18C9B00](v52, -1, -1);
  }

  return 0;
}

uint64_t sub_1C0E71934@<X0>(uint64_t a1@<X1>, void *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1C1515BDC();
  MEMORY[0x1F4188790](v6 - 8);
  if (a1)
  {
    swift_bridgeObjectRetain();
    sub_1C1515BCC();
    sub_1C1515B4C();
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x1F4188790](KeyPath);
    *(&v16 - 2) = v8;
    swift_getKeyPath();
    id v17 = objc_msgSend(self, sel_systemFontOfSize_weight_, 12.0, *MEMORY[0x1E4FB09E0]);
    sub_1BFF67A50();
    sub_1C15159BC();
    uint64_t v9 = swift_getKeyPath();
    MEMORY[0x1F4188790](v9);
    *(&v16 - 2) = v10;
    swift_getKeyPath();
    id v17 = a2;
    sub_1BFF67B4C();
    id v11 = a2;
    sub_1C15159BC();
    uint64_t v12 = sub_1C1515B3C();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a3, 0, 1, v12);
  }
  else
  {
    uint64_t v14 = sub_1C1515B3C();
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    return v15(a3, 1, 1, v14);
  }
}

id sub_1C0E71B80(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)v2[2];
  swift_getObjectType();
  __int16 v6 = FCPuzzleProviding.puzzleTypeTraits.getter();
  if ((v6 & 0x1000) == 0)
  {
    if ((v6 & 0x2000) == 0)
    {
      if (qword_1EB8814A0 != -1) {
        swift_once();
      }
      uint64_t v7 = sub_1C15198DC();
      __swift_project_value_buffer(v7, (uint64_t)qword_1EB93C7A8);
      swift_retain_n();
      uint64_t v8 = sub_1C15198AC();
      os_log_type_t v9 = sub_1C151F36C();
      if (os_log_type_enabled(v8, v9))
      {
        uint64_t v10 = (uint8_t *)swift_slowAlloc();
        uint64_t v11 = swift_slowAlloc();
        uint64_t v42 = v11;
        *(_DWORD *)uint64_t v10 = 136315138;
        id v12 = objc_msgSend(v5, sel_identifier);
        uint64_t v13 = sub_1C151E62C();
        unint64_t v15 = v14;

        sub_1BFDA76EC(v13, v15, &v42);
        sub_1C151FE1C();
        swift_release_n();
        swift_bridgeObjectRelease();
        uint64_t v16 = "No theme trait defined for %s. Cannot configure theme";
LABEL_17:
        _os_log_impl(&dword_1BFC31000, v8, v9, v16, v10, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C18C9B00](v11, -1, -1);
        MEMORY[0x1C18C9B00](v10, -1, -1);

        return 0;
      }
      goto LABEL_18;
    }
    uint64_t v19 = v2[6];
    uint64_t v20 = v2[7];
    __swift_project_boxed_opaque_existential_1(v2 + 3, v19);
    id v21 = (void *)(*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 8))(v5, a1, a2, v19, v20);
    uint64_t v22 = v21;
    if (v21)
    {
      id v23 = objc_msgSend(v21, sel_shareTextForegroundColor);
      if (v23)
      {
        uint64_t v24 = v23;
        id v18 = objc_msgSend(v23, sel_ne_color);

        id v25 = objc_msgSend(v22, sel_navigationBarBackgroundColor);
        if (v25)
        {
          uint64_t v26 = v25;
          objc_msgSend(v25, sel_ne_color);
          swift_unknownObjectRelease();

          return v18;
        }
      }
    }
    if (qword_1EB8814A0 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_1C15198DC();
    __swift_project_value_buffer(v32, (uint64_t)qword_1EB93C7A8);
    swift_retain_n();
    uint64_t v33 = sub_1C15198AC();
    os_log_type_t v34 = sub_1C151F36C();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      uint64_t v42 = v36;
      *(_DWORD *)uint64_t v35 = 136315138;
      id v37 = objc_msgSend(v5, sel_identifier);
      uint64_t v38 = sub_1C151E62C();
      unint64_t v40 = v39;

      sub_1BFDA76EC(v38, v40, &v42);
      sub_1C151FE1C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BFC31000, v33, v34, "No text or background color defined for %s. Cannot configure theme", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v36, -1, -1);
      MEMORY[0x1C18C9B00](v35, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    swift_unknownObjectRelease();
    return 0;
  }
  id v17 = objc_msgSend(objc_msgSend(v5, sel_puzzleType), sel_themeColor);
  swift_unknownObjectRelease();
  if (!v17)
  {
    if (qword_1EB8814A0 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_1C15198DC();
    __swift_project_value_buffer(v27, (uint64_t)qword_1EB93C7A8);
    swift_retain_n();
    uint64_t v8 = sub_1C15198AC();
    os_log_type_t v9 = sub_1C151F36C();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      uint64_t v42 = v11;
      *(_DWORD *)uint64_t v10 = 136315138;
      id v28 = objc_msgSend(v5, sel_identifier);
      uint64_t v29 = sub_1C151E62C();
      unint64_t v31 = v30;

      sub_1BFDA76EC(v29, v31, &v42);
      sub_1C151FE1C();
      swift_release_n();
      swift_bridgeObjectRelease();
      uint64_t v16 = "No background color defined for %s. Cannot configure theme";
      goto LABEL_17;
    }
LABEL_18:

    swift_release_n();
    return 0;
  }
  objc_msgSend(v17, sel_ne_color);

  return objc_msgSend(self, sel_whiteColor);
}

id *sub_1C0E721AC()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 3));

  uint64_t v1 = (char *)v0
     + OBJC_IVAR____TtC8NewsFeedP33_1AB23A019A94525840AAA3EBFB74EFAE26CompletedShareImageFactory_buttonConfig;
  uint64_t v2 = sub_1C151FCDC();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  objc_release(*(id *)((char *)v0
                     + OBJC_IVAR____TtC8NewsFeedP33_1AB23A019A94525840AAA3EBFB74EFAE26CompletedShareImageFactory_widthConstraint));
  return v0;
}

uint64_t sub_1C0E72268()
{
  sub_1C0E721AC();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0E722BC()
{
  return type metadata accessor for CompletedShareImageFactory();
}

uint64_t type metadata accessor for CompletedShareImageFactory()
{
  uint64_t result = qword_1EA1A7F18;
  if (!qword_1EA1A7F18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0E72310()
{
  uint64_t result = sub_1C151FCDC();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t sub_1C0E723E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v89 = a2;
  sub_1BFEEA100(0, &qword_1EA1A1280, MEMORY[0x1E4FB1290], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v88 = (char *)&v81 - v7;
  uint64_t v8 = sub_1C151FBEC();
  uint64_t v86 = *(void *)(v8 - 8);
  uint64_t v87 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v85 = (char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_1C151FC6C();
  uint64_t v10 = *(void *)(v84 - 8);
  MEMORY[0x1F4188790](v84);
  uint64_t v83 = (char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C151FCDC();
  uint64_t v81 = *(void *)(v12 - 8);
  uint64_t v82 = v12;
  MEMORY[0x1F4188790](v12);
  unint64_t v14 = (char *)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v3 + OBJC_IVAR____TtC8NewsFeedP33_1AB23A019A94525840AAA3EBFB74EFAE26CompletedShareImageFactory_width) = 0;
  unint64_t v15 = (_OWORD *)(v3
                 + OBJC_IVAR____TtC8NewsFeedP33_1AB23A019A94525840AAA3EBFB74EFAE26CompletedShareImageFactory_textInsets);
  __asm { FMOV            V0.2D, #14.0 }
  _OWORD *v15 = _Q0;
  v15[1] = _Q0;
  *(void *)(v3 + 16) = a1;
  sub_1BFC66384(a2, v3 + 24);
  id v21 = objc_allocWithZone(MEMORY[0x1E4FB1930]);
  swift_unknownObjectRetain();
  id v22 = objc_msgSend(v21, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)(v3 + 88) = v22;
  id v23 = self;
  id v24 = v22;
  id v25 = objc_msgSend(v23, sel_systemFontOfSize_, 15.0);
  objc_msgSend(v24, sel_setFont_, v25);

  objc_msgSend(*(id *)(v3 + 88), sel_setAdjustsFontForContentSizeCategory_, 0);
  id v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), (SEL)&selRef_initWithString_attributes_, 0.0, 0.0, 0.0, 0.0);
  *(void *)(v3 + 96) = v26;
  double v27 = *MEMORY[0x1E4FB09E0];
  id v28 = v26;
  id v29 = objc_msgSend(v23, sel_systemFontOfSize_weight_, 13.0, v27);
  objc_msgSend(v28, sel_setFont_, v29);

  objc_msgSend(*(id *)(v3 + 96), sel_setAdjustsFontForContentSizeCategory_, 0);
  id v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), (SEL)&selRef_initWithString_attributes_, 0.0, 0.0, 0.0, 0.0);
  *(void *)(v3 + 104) = v30;
  id v31 = v30;
  id v32 = objc_msgSend(v23, sel_systemFontOfSize_weight_, 28.0, v27);
  objc_msgSend(v31, sel_setFont_, v32);

  objc_msgSend(*(id *)(v3 + 104), sel_setAdjustsFontForContentSizeCategory_, 0);
  *(void *)(v3 + 112) = objc_msgSend(self, sel_buttonWithType_, 1);
  sub_1C151FCCC();
  uint64_t v33 = v3 + OBJC_IVAR____TtC8NewsFeedP33_1AB23A019A94525840AAA3EBFB74EFAE26CompletedShareImageFactory_buttonConfig;
  uint64_t v34 = v81;
  uint64_t v35 = v82;
  (*(void (**)(uint64_t, char *, uint64_t))(v81 + 32))(v3 + OBJC_IVAR____TtC8NewsFeedP33_1AB23A019A94525840AAA3EBFB74EFAE26CompletedShareImageFactory_buttonConfig, v14, v82);
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v83, *MEMORY[0x1E4FB1250], v84);
  swift_beginAccess();
  sub_1C151FBDC();
  swift_endAccess();
  id v36 = objc_msgSend(self, sel_whiteColor);
  swift_beginAccess();
  sub_1C151FC4C();
  (*(void (**)(char *, void, uint64_t))(v86 + 104))(v85, *MEMORY[0x1E4FB1218], v87);
  sub_1C151FBFC();
  swift_endAccess();
  id v37 = objc_msgSend(self, sel_configurationWithPointSize_weight_scale_, 4, 1, 12.0);
  uint64_t v38 = (void *)sub_1C151E5EC();
  id v39 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v38, v37);

  swift_beginAccess();
  sub_1C151FC9C();
  sub_1C151FC2C();
  sub_1C151FC0C();
  sub_1C151FC1C();
  swift_endAccess();
  unint64_t v40 = *(void **)(v3 + 112);
  unint64_t v41 = v88;
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v88, v33, v35);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v41, 0, 1, v35);
  sub_1C151FD0C();
  LODWORD(v42) = 1144750080;
  objc_msgSend(v40, sel_setContentHuggingPriority_forAxis_, 0, v42);
  sub_1C0E7388C(0, (unint64_t *)&qword_1EB87A920, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_1C15320F0;
  double v44 = *(void **)(v3 + 104);
  *(void *)(v43 + 32) = v44;
  *(void *)(v43 + 40) = v40;
  uint64_t v90 = v43;
  sub_1C151EBEC();
  id v45 = objc_allocWithZone(MEMORY[0x1E4FB1C60]);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2C0);
  id v46 = v44;
  id v47 = v40;
  id v48 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  id v49 = objc_msgSend(v45, sel_initWithArrangedSubviews_, v48);

  *(void *)(v3 + 80) = v49;
  objc_msgSend(v49, sel_setAxis_, 0);
  objc_msgSend(v49, sel_setAlignment_, 3);
  *(void *)(v3 + 64) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v50 = swift_allocObject();
  *(_OWORD *)(v50 + 16) = xmmword_1C1540C60;
  os_log_type_t v51 = *(void **)(v3 + 88);
  uint64_t v52 = *(void **)(v3 + 96);
  *(void *)(v50 + 32) = v51;
  *(void *)(v50 + 40) = v52;
  *(void *)(v50 + 48) = v49;
  uint64_t v90 = v50;
  sub_1C151EBEC();
  id v53 = objc_allocWithZone(MEMORY[0x1E4FB1C60]);
  id v54 = v51;
  id v55 = v52;
  id v56 = v49;
  uint64_t v57 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  id v58 = objc_msgSend(v53, sel_initWithArrangedSubviews_, v57);

  *(void *)(v3 + 72) = v58;
  objc_msgSend(v58, sel_setAxis_, 1);
  objc_msgSend(v58, sel_setSpacing_, 0.0);
  objc_msgSend(v58, sel_setCustomSpacing_afterView_, *(void *)(v3 + 88), 12.0);
  uint64_t v59 = *(void **)(v3 + 64);
  objc_msgSend(v59, sel_addSubview_, v58);
  objc_msgSend(v59, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v58, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(*(id *)(v3 + 80), sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v60 = objc_msgSend(v59, sel_widthAnchor);
  id v61 = objc_msgSend(v60, sel_constraintEqualToConstant_, 0.1);

  *(void *)(v3
            + OBJC_IVAR____TtC8NewsFeedP33_1AB23A019A94525840AAA3EBFB74EFAE26CompletedShareImageFactory_widthConstraint) = v61;
  uint64_t v62 = self;
  uint64_t v63 = swift_allocObject();
  *(_OWORD *)(v63 + 16) = xmmword_1C15847D0;
  id v64 = objc_msgSend(*(id *)(v3 + 72), sel_topAnchor);
  id v65 = objc_msgSend(*(id *)(v3 + 64), sel_topAnchor);
  uint64_t v66 = (double *)(v3
                 + OBJC_IVAR____TtC8NewsFeedP33_1AB23A019A94525840AAA3EBFB74EFAE26CompletedShareImageFactory_textInsets);
  id v67 = objc_msgSend(v64, sel_constraintEqualToAnchor_constant_, v65, *(double *)(v3+ OBJC_IVAR____TtC8NewsFeedP33_1AB23A019A94525840AAA3EBFB74EFAE26CompletedShareImageFactory_textInsets));

  *(void *)(v63 + 32) = v67;
  id v68 = objc_msgSend(*(id *)(v3 + 72), sel_leadingAnchor);
  id v69 = objc_msgSend(*(id *)(v3 + 64), sel_leadingAnchor);
  id v70 = objc_msgSend(v68, sel_constraintEqualToAnchor_constant_, v69, v66[1]);

  *(void *)(v63 + 40) = v70;
  id v71 = objc_msgSend(*(id *)(v3 + 72), sel_trailingAnchor);
  id v72 = objc_msgSend(*(id *)(v3 + 64), sel_trailingAnchor);
  id v73 = objc_msgSend(v71, sel_constraintEqualToAnchor_constant_, v72, -v66[3]);

  *(void *)(v63 + 48) = v73;
  id v74 = objc_msgSend(*(id *)(v3 + 72), sel_bottomAnchor);
  id v75 = objc_msgSend(*(id *)(v3 + 64), sel_bottomAnchor);
  id v76 = objc_msgSend(v74, sel_constraintEqualToAnchor_constant_, v75, -v66[2]);

  uint64_t v77 = *(void **)(v3
                 + OBJC_IVAR____TtC8NewsFeedP33_1AB23A019A94525840AAA3EBFB74EFAE26CompletedShareImageFactory_widthConstraint);
  *(void *)(v63 + 56) = v76;
  *(void *)(v63 + 64) = v77;
  uint64_t v90 = v63;
  sub_1C151EBEC();
  sub_1BFC39268(0, (unint64_t *)&qword_1EA1A7F70);
  id v78 = v77;
  uint64_t v79 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  objc_msgSend(v62, sel_activateConstraints_, v79);

  __swift_destroy_boxed_opaque_existential_1(v89);
  return v3;
}

uint64_t sub_1C0E72F18(void *a1)
{
  swift_getObjectType();
  id v2 = objc_msgSend(objc_msgSend(a1, sel_puzzleType), sel_name);
  swift_unknownObjectRelease();
  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_1C151E62C();
  uint64_t v5 = v4;

  char v6 = FCPuzzleProviding.puzzleTypeTraits.getter();
  uint64_t v7 = MEMORY[0x1E4FBB1A0];
  if (v6 < 0)
  {
    sub_1BFF27ECC();
    uint64_t v3 = sub_1C151FE7C();
    uint64_t v9 = v8;
    swift_bridgeObjectRelease();
    uint64_t v5 = v9;
  }
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v11 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  sub_1BFEEA100(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1C1529AE0;
  *(void *)(v12 + 56) = v7;
  *(void *)(v12 + 64) = sub_1BFE9C558();
  *(void *)(v12 + 32) = v3;
  *(void *)(v12 + 40) = v5;
  uint64_t v13 = sub_1C151E66C();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1C0E7311C()
{
  swift_getObjectType();
  __int16 v0 = FCPuzzleProviding.puzzleTypeTraits.getter();
  if ((v0 & 0x200) == 0 && (v0 & 0x400) == 0) {
    return 0;
  }
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v1 = sub_1C1515B8C();

  return v1;
}

uint64_t sub_1C0E7324C(uint64_t a1)
{
  *(void *)(v1 + 56) = a1;
  return MEMORY[0x1F4188298](sub_1C0E7326C, 0, 0);
}

uint64_t sub_1C0E7326C()
{
  id v1 = objc_msgSend(*(id *)(v0 + 56), sel_thumbnailSmallImageAssetHandle);
  *(void *)(v0 + 64) = v1;
  if (v1)
  {
    id v2 = v1;
    id v3 = objc_msgSend(v1, sel_filePath);
    if (v3)
    {
      uint64_t v4 = v3;
      uint64_t v5 = sub_1C151E62C();
      uint64_t v7 = v6;

      *(void *)(v0 + 32) = v5;
      *(void *)(v0 + 40) = v7;
      sub_1C0E7388C(0, (unint64_t *)&qword_1EB85C880, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAB088]);
      swift_allocObject();
      uint64_t v8 = sub_1C151908C();
    }
    else
    {
      *(void *)(swift_task_alloc() + 16) = v2;
      sub_1C0E7388C(0, (unint64_t *)&qword_1EB85C880, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAB088]);
      swift_allocObject();
      uint64_t v8 = sub_1C151911C();
      swift_task_dealloc();
    }
    *(void *)(v0 + 72) = v8;
    id v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 80) = v11;
    void *v11 = v0;
    v11[1] = sub_1C0E73470;
    return MEMORY[0x1F415EBC8](v0 + 16);
  }
  else
  {
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
}

uint64_t sub_1C0E73470()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v2 = sub_1C0E73640;
  }
  else
  {
    swift_release();
    id v2 = sub_1C0E7358C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C0E7358C()
{
  uint64_t v1 = *(void **)(v0 + 64);
  id v2 = objc_allocWithZone(MEMORY[0x1E4FB1818]);
  id v3 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v2, sel_initWithContentsOfFile_, v3);

  uint64_t v5 = *(uint64_t (**)(id))(v0 + 8);
  return v5(v4);
}

uint64_t sub_1C0E73640()
{
  uint64_t v19 = v0;
  swift_release();
  if (qword_1EB8814A0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1C15198DC();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EB93C7A8);
  swift_unknownObjectRetain_n();
  id v2 = sub_1C15198AC();
  os_log_type_t v3 = sub_1C151F36C();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = *(void **)(v0 + 88);
  uint64_t v6 = *(void **)(v0 + 56);
  if (v4)
  {
    uint64_t v16 = *(void **)(v0 + 64);
    id v17 = *(void **)(v0 + 88);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v18 = v15;
    *(_DWORD *)uint64_t v7 = 136315138;
    id v8 = objc_msgSend(v6, sel_identifier);
    uint64_t v9 = sub_1C151E62C();
    unint64_t v11 = v10;

    *(void *)(v0 + 48) = sub_1BFDA76EC(v9, v11, &v18);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    _os_log_impl(&dword_1BFC31000, v2, v3, "Failed downloading asset handle for Puzzle ID: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v15, -1, -1);
    MEMORY[0x1C18C9B00](v7, -1, -1);

    uint64_t v12 = v17;
  }
  else
  {

    swift_unknownObjectRelease_n();
    uint64_t v12 = v5;
  }

  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13(0);
}

void sub_1C0E7388C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C0E738D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0E7393C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0E739B0()
{
  return 8;
}

uint64_t sub_1C0E739BC()
{
  return swift_release();
}

uint64_t sub_1C0E739C4(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_1C0E739D8(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1C0E739F0()
{
  return 8;
}

id sub_1C0E73A04()
{
  uint64_t v1 = *(void **)(v0 + 64);
  objc_msgSend(v1, sel_bounds);
  return objc_msgSend(v1, sel_drawViewHierarchyInRect_afterScreenUpdates_, 1);
}

uint64_t sub_1C0E73A54()
{
  return swift_deallocObject();
}

uint64_t FeedContentConfigType.seenContentMarker()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v25 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v22 - v11;
  __n128 v14 = MEMORY[0x1F4188790](v13);
  id v23 = (char *)&v22 - v15;
  uint64_t v24 = v3;
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, __n128))(a2 + 40);
  v16(a1, a2, v14);
  ((void (*)(uint64_t, uint64_t))v16)(a1, a2);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 48))(AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v7 + 8);
  v19(v9, AssociatedTypeWitness);
  uint64_t v28 = v18;
  uint64_t v26 = a1;
  uint64_t v27 = a2;
  swift_getAssociatedTypeWitness();
  sub_1C151ED5C();
  swift_getWitnessTable();
  sub_1C152023C();
  uint64_t v20 = v23;
  (*(void (**)(void))(AssociatedConformanceWitness + 64))();
  swift_bridgeObjectRelease();
  v19(v12, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(a2 + 56))(v20, a1, a2);
  return ((uint64_t (*)(char *, uint64_t))v19)(v20, AssociatedTypeWitness);
}

uint64_t sub_1C0E73D20()
{
  void (*v1)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v4;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v1 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(AssociatedConformanceWitness + 56);
  id v2 = swift_checkMetadataState();
  v1(&v4, v2, AssociatedConformanceWitness);
  return v4;
}

uint64_t sub_1C0E73E28()
{
  return sub_1C0E73D20() & 1;
}

uint64_t dispatch thunk of FeedContentConfigType.feedConfig.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of FeedContentConfigType.knobsConfig.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of FeedContentConfigType.replacing(feedConfig:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t FormatEdgeInsets.description.getter()
{
  return 540701736;
}

double FormatEdgeInsets.top.getter()
{
  return *(double *)v0;
}

double FormatEdgeInsets.left.getter()
{
  return *(double *)(v0 + 8);
}

double FormatEdgeInsets.bottom.getter()
{
  return *(double *)(v0 + 16);
}

double FormatEdgeInsets.right.getter()
{
  return *(double *)(v0 + 24);
}

uint64_t FormatEdgeInsetsEquation.top.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t FormatEdgeInsetsEquation.left.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 8);
  return swift_bridgeObjectRetain();
}

uint64_t FormatEdgeInsetsEquation.bottom.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t FormatEdgeInsetsEquation.right.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t FormatEdgeInsetsEquation.description.getter()
{
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_1C0BA9458(v0);
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  uint64_t v1 = swift_bridgeObjectRetain();
  sub_1C0BA9458(v1);
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_1C0BA9458(v2);
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  uint64_t v3 = swift_bridgeObjectRetain();
  sub_1C0BA9458(v3);
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  return 540701736;
}

uint64_t _s8NewsFeed24FormatEdgeInsetsEquationV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v7 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v9 = a2[2];
  uint64_t v8 = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v10 = sub_1C00DE998(v3, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v10 & 1) == 0) {
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v11 = sub_1C00DE998(v2, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0) {
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v12 = sub_1C00DE998(v5, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0) {
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v13 = sub_1C00DE998(v4, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13 & 1;
}

BOOL _s8NewsFeed16FormatEdgeInsetsV2eeoiySbAC_ACtFZ_0(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2] && a1[3] == a2[3];
}

unint64_t sub_1C0E742E4(uint64_t a1)
{
  unint64_t result = sub_1C0E7430C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0E7430C()
{
  unint64_t result = qword_1EA1A7F78;
  if (!qword_1EA1A7F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7F78);
  }
  return result;
}

uint64_t sub_1C0E74360(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0E744B0(a1, a2, a3, (uint64_t (*)(void))sub_1BFCFE1A4, (uint64_t (*)(void))sub_1BFD52758, (uint64_t (*)(void))sub_1C0E743A0);
}

unint64_t sub_1C0E743A0()
{
  unint64_t result = qword_1EA1A7F80;
  if (!qword_1EA1A7F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7F80);
  }
  return result;
}

unint64_t sub_1C0E743F4(uint64_t a1)
{
  unint64_t result = sub_1C0E7441C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0E7441C()
{
  unint64_t result = qword_1EA1A7F88;
  if (!qword_1EA1A7F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7F88);
  }
  return result;
}

uint64_t sub_1C0E74470(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0E744B0(a1, a2, a3, (uint64_t (*)(void))sub_1BFE1C834, (uint64_t (*)(void))sub_1BFDF60D0, (uint64_t (*)(void))sub_1C0E74504);
}

uint64_t sub_1C0E744B0(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0E74504()
{
  unint64_t result = qword_1EA1A7F90;
  if (!qword_1EA1A7F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7F90);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatEdgeInsets()
{
  return &type metadata for FormatEdgeInsets;
}

uint64_t destroy for FormatMediaTimingFunctionControlPoints()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for FormatMediaTimingFunctionControlPoints(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FormatMediaTimingFunctionControlPoints(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for FormatMediaTimingFunctionControlPoints(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatEdgeInsetsEquation()
{
  return &type metadata for FormatEdgeInsetsEquation;
}

uint64_t sub_1C0E74704()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t destroy for FormatNodeBinderAuxiliary()
{
  return sub_1C0E74778();
}

uint64_t sub_1C0E74778()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FormatNodeBinderAuxiliary(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  char v9 = *((unsigned char *)a2 + 48);
  sub_1C0E74704();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v9;
  return a1;
}

uint64_t assignWithCopy for FormatNodeBinderAuxiliary(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  char v9 = *((unsigned char *)a2 + 48);
  sub_1C0E74704();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v9;
  sub_1C0E74778();
  return a1;
}

uint64_t assignWithTake for FormatNodeBinderAuxiliary(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 48);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = v3;
  sub_1C0E74778();
  return a1;
}

uint64_t sub_1C0E74938(uint64_t result, char a2)
{
  *(unsigned char *)(result + 48) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for FormatNodeBinderAuxiliary()
{
  return &type metadata for FormatNodeBinderAuxiliary;
}

uint64_t sub_1C0E74954()
{
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  strcpy((char *)v1, "<html><body>");
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  return v1[0];
}

uint64_t sub_1C0E74A24@<X0>(uint64_t a1@<X0>, uint64_t **a2@<X8>)
{
  uint64_t v5 = (uint64_t *)*v2;
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  sub_1C0E750C4(a1);
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  swift_beginAccess();
  sub_1C151E80C();
  swift_endAccess();
  swift_bridgeObjectRelease();
  a2[3] = v5;
  a2[4] = (uint64_t *)&off_1F1C01D50;
  *a2 = v2;
  return swift_retain();
}

uint64_t sub_1C0E74B58@<X0>(uint64_t a1@<X0>, uint64_t **a2@<X8>)
{
  long long v4 = (uint64_t *)*v2;
  uint64_t v11 = 4091964;
  unint64_t v12 = 0xE300000000000000;
  sub_1C035BD34(a1, (uint64_t)v8);
  uint64_t v5 = v9;
  if (v9)
  {
    uint64_t v6 = v10;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    (*(void (**)(uint64_t, uint64_t))(v6 + 64))(v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  }
  else
  {
    sub_1C035BDF0((uint64_t)v8);
  }
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  swift_beginAccess();
  sub_1C151E80C();
  swift_endAccess();
  swift_bridgeObjectRelease();
  a2[3] = v4;
  a2[4] = (uint64_t *)&off_1F1C01D50;
  *a2 = v2;
  return swift_retain();
}

uint64_t sub_1C0E74CB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t **a5@<X8>)
{
  uint64_t v10 = (uint64_t *)*v5;
  v18[1] = a2;
  uint64_t v19 = v10;
  uint64_t v11 = sub_1C15154CC();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  __n128 v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = 0;
  unint64_t v21 = 0xE000000000000000;
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  uint64_t v20 = 0x3D6665726820613CLL;
  unint64_t v21 = 0xE900000000000022;
  uint64_t v22 = a3;
  uint64_t v23 = a4;
  sub_1C151541C();
  sub_1BFF27ECC();
  sub_1C151FECC();
  uint64_t v16 = v15;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (!v16) {
    swift_bridgeObjectRetain();
  }
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  sub_1C0E750C4(a1);
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  swift_beginAccess();
  sub_1C151E80C();
  swift_endAccess();
  swift_bridgeObjectRelease();
  a5[3] = v19;
  a5[4] = (uint64_t *)&off_1F1C01D50;
  *a5 = v5;
  return swift_retain();
}

uint64_t type metadata accessor for SharingHTMLBuilder()
{
  return self;
}

uint64_t sub_1C0E74F0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = *v3;
  swift_beginAccess();
  sub_1C151E80C();
  swift_endAccess();
  a3[3] = a1;
  a3[4] = a2;
  *a3 = v7;
  return swift_retain();
}

uint64_t sub_1C0E74F94@<X0>(uint64_t a1@<X0>, uint64_t **a2@<X8>)
{
  return sub_1C0E74A24(a1, a2);
}

uint64_t sub_1C0E74FB8@<X0>(uint64_t a1@<X0>, uint64_t **a2@<X8>)
{
  return sub_1C0E74B58(a1, a2);
}

uint64_t sub_1C0E74FDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t **a5@<X8>)
{
  return sub_1C0E74CB0(a1, a2, a3, a4, a5);
}

uint64_t sub_1C0E75000@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, void *a4@<X8>)
{
  uint64_t v8 = *v4;
  sub_1C0E750C4(a1);
  swift_beginAccess();
  sub_1C151E80C();
  swift_endAccess();
  swift_bridgeObjectRelease();
  a4[3] = a2;
  a4[4] = a3;
  *a4 = v8;
  return swift_retain();
}

uint64_t sub_1C0E750A0()
{
  return sub_1C0E74954();
}

uint64_t sub_1C0E750C4(uint64_t a1)
{
  sub_1C151E7AC();
  sub_1C151F1DC();
  if (v2)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_1BFF27ECC();
    a1 = sub_1C151FEBC();
  }
  sub_1C151E7AC();
  sub_1C151F1DC();
  if ((v3 & 1) == 0)
  {
    sub_1BFF27ECC();
    a1 = sub_1C151FEBC();
    swift_bridgeObjectRelease();
  }
  sub_1C151E7AC();
  sub_1C151F1DC();
  if ((v4 & 1) == 0)
  {
    sub_1BFF27ECC();
    a1 = sub_1C151FEBC();
    swift_bridgeObjectRelease();
  }
  sub_1C151E7AC();
  sub_1C151F1DC();
  if ((v5 & 1) == 0)
  {
    sub_1BFF27ECC();
    a1 = sub_1C151FEBC();
    swift_bridgeObjectRelease();
  }
  sub_1C151E7AC();
  sub_1C151F1DC();
  if ((v6 & 1) == 0)
  {
    sub_1BFF27ECC();
    a1 = sub_1C151FEBC();
    swift_bridgeObjectRelease();
  }
  return a1;
}

uint64_t FormatIssue.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatIssue.properties.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatIssue.__allocating_init(identifier:overrides:selectors:properties:)(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  long long v11 = a3[1];
  *(_OWORD *)(v10 + 32) = *a3;
  *(_OWORD *)(v10 + 48) = v11;
  swift_beginAccess();
  *(void *)(v10 + 64) = a4;
  swift_beginAccess();
  *(void *)(v10 + 72) = a5;
  return v10;
}

uint64_t FormatIssue.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatIssue.overrides.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 56);
  *(void *)a1 = *(void *)(v1 + 32);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 40);
  *(void *)(a1 + 24) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FormatIssue.selectors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 64) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatIssue.selectors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatIssue.properties.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 72) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatIssue.properties.modify())()
{
  return j__swift_endAccess;
}

NewsFeed::FormatIssue::Overrides __swiftcall FormatIssue.Overrides.init(title:issueDescription:)(Swift::String_optional title, Swift::String_optional issueDescription)
{
  Swift::String_optional *v2 = title;
  v2[1] = issueDescription;
  result.issueDescription = issueDescription;
  result.title = title;
  return result;
}

uint64_t FormatIssue.init(identifier:overrides:selectors:properties:)(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  long long v8 = a3[1];
  *(_OWORD *)(v5 + 32) = *a3;
  *(_OWORD *)(v5 + 48) = v8;
  swift_beginAccess();
  *(void *)(v5 + 64) = a4;
  swift_beginAccess();
  *(void *)(v5 + 72) = a5;
  return v5;
}

uint64_t FormatIssue.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  FormatIssue.init(from:)(a1);
  return v2;
}

uint64_t FormatIssue.init(from:)(void *a1)
{
  sub_1C0E76880(0, &qword_1EB860DA8, (uint64_t (*)(void))sub_1C0E766A0, (uint64_t)&type metadata for FormatIssue.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v20 = *(void *)(v3 - 8);
  uint64_t v21 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v20 - v4;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0E766A0();
  char v6 = v5;
  uint64_t v7 = v22;
  sub_1C1520EBC();
  if (v7)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v9 = v20;
    uint64_t v8 = v21;
    LOBYTE(v24) = 0;
    *(void *)(v1 + 16) = sub_1C152069C();
    *(void *)(v1 + 24) = v10;
    LOBYTE(v23) = 1;
    sub_1C0E766F4();
    sub_1C152065C();
    uint64_t v11 = v24;
    uint64_t v12 = v26;
    v13.i64[0] = 1;
    int8x16_t v14 = vandq_s8(v25, (int8x16_t)vdupq_lane_s64(vmvnq_s8((int8x16_t)vceqq_s64((int64x2_t)v25, v13)).i64[0], 0));
    uint64_t v15 = v25.i64[0];
    if (v25.i64[0] == 1) {
      uint64_t v11 = 0;
    }
    *(void *)(v1 + 32) = v11;
    if (v15 == 1) {
      uint64_t v16 = 0;
    }
    else {
      uint64_t v16 = v12;
    }
    *(int8x16_t *)(v1 + 40) = v14;
    *(void *)(v1 + 56) = v16;
    sub_1BFEBC4B4();
    LOBYTE(v23) = 2;
    sub_1BFDB25E8();
    sub_1C152065C();
    if (v24) {
      uint64_t v17 = v24;
    }
    else {
      uint64_t v17 = MEMORY[0x1E4FBC870];
    }
    swift_beginAccess();
    *(void *)(v1 + 64) = v17;
    sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879DC0);
    char v27 = 3;
    sub_1BFDB23BC((unint64_t *)&qword_1EB879DC8, (void (*)(void))sub_1C0081A44);
    sub_1C152065C();
    if (v23) {
      uint64_t v19 = v23;
    }
    else {
      uint64_t v19 = MEMORY[0x1E4FBC860];
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
    swift_beginAccess();
    *(void *)(v1 + 72) = v19;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

uint64_t sub_1C0E75BA0()
{
  uint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656469727265766FLL;
      break;
    case 2:
      uint64_t result = 0x726F7463656C6573;
      break;
    case 3:
      uint64_t result = 0x69747265706F7270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0E75C34(uint64_t a1)
{
  unint64_t v2 = sub_1C0E766A0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0E75C70(uint64_t a1)
{
  unint64_t v2 = sub_1C0E766A0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatIssue.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatIssue.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t FormatIssue.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C0E76880(0, &qword_1EB860DD0, (uint64_t (*)(void))sub_1C0E766A0, (uint64_t)&type metadata for FormatIssue.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0E766A0();
  sub_1C1520F0C();
  LOBYTE(v17) = 0;
  sub_1C15207CC();
  if (!v2)
  {
    long long v10 = *(_OWORD *)(v3 + 48);
    long long v17 = *(_OWORD *)(v3 + 32);
    long long v18 = v10;
    LOBYTE(v15) = 1;
    sub_1C0E76748();
    sub_1C152080C();
    swift_beginAccess();
    uint64_t v12 = *(void *)(v3 + 64);
    if (*(void *)(v12 + 16))
    {
      char v19 = 2;
      swift_bridgeObjectRetain_n();
      int64x2_t v13 = sub_1BFE71F8C(v12);
      swift_bridgeObjectRelease();
      uint64_t v16 = v13;
      swift_retain();
      sub_1BFD8BB48((uint64_t *)&v16);
      swift_release();
      uint64_t v15 = (uint64_t)v16;
      sub_1C0E7679C();
      sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879F20);
      sub_1BFD8BA00();
      sub_1C1520BAC();
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_beginAccess();
    uint64_t v14 = *(void *)(v3 + 72);
    if (*(void *)(v14 + 16))
    {
      char v19 = 3;
      uint64_t v16 = (void *)v14;
      sub_1C0E7679C();
      sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879DC0);
      sub_1BFDB23BC((unint64_t *)&qword_1EB85DEE0, (void (*)(void))sub_1C00FC944);
      sub_1C1520BAC();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C0E760B8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = FormatIssue.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1C0E76110(void *a1)
{
  return FormatIssue.encode(to:)(a1);
}

uint64_t sub_1C0E76134(void **a1, void **a2)
{
  return _s8NewsFeed11FormatIssueC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t FormatIssue.Overrides.title.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatIssue.Overrides.issueDescription.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

double static FormatIssue.Overrides.none.getter@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_1C0E761AC()
{
  if (*v0) {
    return 0xD000000000000010;
  }
  else {
    return 0x656C746974;
  }
}

uint64_t sub_1C0E761E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0E76F80(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0E76210(uint64_t a1)
{
  unint64_t v2 = sub_1C0E7682C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0E7624C(uint64_t a1)
{
  unint64_t v2 = sub_1C0E7682C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatIssue.Overrides.encode(to:)(void *a1)
{
  sub_1C0E76880(0, &qword_1EB860DD8, (uint64_t (*)(void))sub_1C0E7682C, (uint64_t)&type metadata for FormatIssue.Overrides.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v11 - v6;
  uint64_t v8 = *(void *)(v1 + 16);
  v11[1] = *(void *)(v1 + 24);
  _OWORD v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0E7682C();
  sub_1C1520F0C();
  char v13 = 0;
  uint64_t v9 = v11[3];
  sub_1C152074C();
  if (!v9)
  {
    char v12 = 1;
    sub_1C152074C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t FormatIssue.Overrides.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v20 = a2;
  sub_1C0E76880(0, &qword_1EB860DB0, (uint64_t (*)(void))sub_1C0E7682C, (uint64_t)&type metadata for FormatIssue.Overrides.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v19 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0E7682C();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  long long v10 = v20;
  char v22 = 0;
  uint64_t v11 = sub_1C152060C();
  uint64_t v13 = v12;
  char v21 = 1;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1C152060C();
  uint64_t v16 = v15;
  long long v17 = *(void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v19 = v14;
  v17(v8, v5);
  uint64_t *v10 = v11;
  v10[1] = v13;
  v10[2] = v19;
  v10[3] = v16;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0E76670@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatIssue.Overrides.init(from:)(a1, a2);
}

uint64_t sub_1C0E76688(void *a1)
{
  return FormatIssue.Overrides.encode(to:)(a1);
}

unint64_t sub_1C0E766A0()
{
  unint64_t result = qword_1EB85FBC0;
  if (!qword_1EB85FBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85FBC0);
  }
  return result;
}

unint64_t sub_1C0E766F4()
{
  unint64_t result = qword_1EB85FBF8;
  if (!qword_1EB85FBF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85FBF8);
  }
  return result;
}

unint64_t sub_1C0E76748()
{
  unint64_t result = qword_1EB85FBF0;
  if (!qword_1EB85FBF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85FBF0);
  }
  return result;
}

unint64_t sub_1C0E7679C()
{
  unint64_t result = qword_1EA1A7F98;
  if (!qword_1EA1A7F98)
  {
    sub_1C0E76880(255, &qword_1EB860DD0, (uint64_t (*)(void))sub_1C0E766A0, (uint64_t)&type metadata for FormatIssue.CodingKeys, MEMORY[0x1E4FBBDE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7F98);
  }
  return result;
}

unint64_t sub_1C0E7682C()
{
  unint64_t result = qword_1EB85FBD8;
  if (!qword_1EB85FBD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85FBD8);
  }
  return result;
}

void sub_1C0E76880(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C0E768E8(void *a1)
{
  a1[1] = sub_1C0E76974(&qword_1EB85FC10);
  a1[2] = sub_1C0E76974((unint64_t *)&unk_1EB85FC00);
  uint64_t result = sub_1C0E76974(&qword_1EA1A7FA0);
  a1[3] = result;
  return result;
}

uint64_t sub_1C0E76974(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatIssue();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for FormatIssue()
{
  return self;
}

unint64_t sub_1C0E769D8(void *a1)
{
  a1[1] = sub_1C0E766F4();
  a1[2] = sub_1C0E76748();
  unint64_t result = sub_1C0E76A10();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0E76A10()
{
  unint64_t result = qword_1EA1A7FA8;
  if (!qword_1EA1A7FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7FA8);
  }
  return result;
}

uint64_t sub_1C0E76A64@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 64);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0E76AB4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 72);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatIssue(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatIssue);
}

uint64_t dispatch thunk of FormatIssue.__allocating_init(identifier:overrides:selectors:properties:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of FormatIssue.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

ValueMetadata *type metadata accessor for FormatIssue.Overrides()
{
  return &type metadata for FormatIssue.Overrides;
}

unsigned char *storeEnumTagSinglePayload for FormatIssue.Overrides.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0E76C34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatIssue.Overrides.CodingKeys()
{
  return &type metadata for FormatIssue.Overrides.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for FormatIssue.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0E76D38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatIssue.CodingKeys()
{
  return &type metadata for FormatIssue.CodingKeys;
}

unint64_t sub_1C0E76D74()
{
  unint64_t result = qword_1EA1A7FB0;
  if (!qword_1EA1A7FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7FB0);
  }
  return result;
}

unint64_t sub_1C0E76DCC()
{
  unint64_t result = qword_1EA1A7FB8;
  if (!qword_1EA1A7FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7FB8);
  }
  return result;
}

unint64_t sub_1C0E76E24()
{
  unint64_t result = qword_1EB85FBE8;
  if (!qword_1EB85FBE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85FBE8);
  }
  return result;
}

unint64_t sub_1C0E76E7C()
{
  unint64_t result = qword_1EB85FBE0;
  if (!qword_1EB85FBE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85FBE0);
  }
  return result;
}

unint64_t sub_1C0E76ED4()
{
  unint64_t result = qword_1EB85FBD0;
  if (!qword_1EB85FBD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85FBD0);
  }
  return result;
}

unint64_t sub_1C0E76F2C()
{
  unint64_t result = qword_1EB85FBC8;
  if (!qword_1EB85FBC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85FBC8);
  }
  return result;
}

uint64_t sub_1C0E76F80(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C15FF900)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

NewsFeed::FormatDerivedDataErrorScope_optional __swiftcall FormatDerivedDataErrorScope.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 10;
  if (v3 < 0xA) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

uint64_t FormatDerivedDataErrorScope.rawValue.getter()
{
  uint64_t result = 0x697461726F636564;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x70756F7267;
      break;
    case 2:
      uint64_t result = 1953459315;
      break;
    case 3:
      uint64_t result = 0x656C797473;
      break;
    case 4:
      uint64_t result = 0x686374697773;
      break;
    case 5:
      uint64_t result = 0x6143686374697773;
      break;
    case 6:
      uint64_t result = 1835365481;
      break;
    case 7:
      uint64_t result = 0x6E6F6974706FLL;
      break;
    case 8:
      uint64_t result = 0x746165706572;
      break;
    case 9:
      uint64_t result = 0x7261696C69787561;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0E771E8(unsigned __int8 *a1, char *a2)
{
  return sub_1C147DCC8(*a1, *a2);
}

unint64_t sub_1C0E771F8()
{
  unint64_t result = qword_1EA1A7FC0;
  if (!qword_1EA1A7FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A7FC0);
  }
  return result;
}

uint64_t sub_1C0E7724C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0E77294()
{
  return sub_1C0448498();
}

uint64_t sub_1C0E7729C()
{
  return sub_1C1520E0C();
}

NewsFeed::FormatDerivedDataErrorScope_optional sub_1C0E772E0(Swift::String *a1)
{
  return FormatDerivedDataErrorScope.init(rawValue:)(*a1);
}

uint64_t sub_1C0E772EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = FormatDerivedDataErrorScope.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unsigned char *storeEnumTagSinglePayload for FormatDerivedDataErrorScope(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0E773E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatDerivedDataErrorScope()
{
  return &type metadata for FormatDerivedDataErrorScope;
}

uint64_t *sub_1C0E77418(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
        uint64_t v7 = *(void *)(a2 + 8);
        *a1 = *(void *)a2;
        a1[1] = v7;
        uint64_t v8 = *(void **)(a2 + 16);
        swift_bridgeObjectRetain();
        id v9 = v8;
        a1[2] = (uint64_t)v8;
        swift_storeEnumTagMultiPayload();
        return a1;
      case 4u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v12 = *(void *)(a2 + 16);
        a1[1] = *(void *)(a2 + 8);
        a1[2] = v12;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 5u:
        uint64_t v13 = *(void *)(a2 + 8);
        *a1 = *(void *)a2;
        a1[1] = v13;
        uint64_t v14 = *(void *)(a2 + 24);
        a1[2] = *(void *)(a2 + 16);
        a1[3] = v14;
        a1[4] = *(void *)(a2 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 6u:
      case 0x11u:
      case 0x14u:
      case 0x15u:
      case 0x16u:
      case 0x17u:
      case 0x21u:
        uint64_t v32 = *(void *)(a2 + 8);
        *a1 = *(void *)a2;
        a1[1] = v32;
        uint64_t v33 = *(void *)(a2 + 16);
        uint64_t v34 = *(void *)(a2 + 24);
        a1[2] = v33;
        a1[3] = v34;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 7u:
      case 8u:
      case 0xFu:
      case 0x10u:
      case 0x12u:
      case 0x13u:
      case 0x19u:
      case 0x27u:
      case 0x29u:
      case 0x2Bu:
        uint64_t v31 = *(void *)(a2 + 8);
        *a1 = *(void *)a2;
        a1[1] = v31;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 9u:
        uint64_t v15 = *(void *)(a2 + 8);
        *a1 = *(void *)a2;
        a1[1] = v15;
        uint64_t v16 = *(void *)(a2 + 16);
        uint64_t v17 = *(void *)(a2 + 24);
        unsigned __int8 v18 = *(unsigned char *)(a2 + 32);
        swift_bridgeObjectRetain();
        sub_1C015F808(v16, v17, v18);
        a1[2] = v16;
        a1[3] = v17;
        *((unsigned char *)a1 + 32) = v18;
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0xAu:
        uint64_t v19 = *(void *)(a2 + 8);
        *a1 = *(void *)a2;
        a1[1] = v19;
        *((unsigned char *)a1 + 16) = *(unsigned char *)(a2 + 16);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0xBu:
      case 0xCu:
        uint64_t v20 = *(void *)(a2 + 8);
        *a1 = *(void *)a2;
        a1[1] = v20;
        *((_WORD *)a1 + 8) = *(_WORD *)(a2 + 16);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0xDu:
        uint64_t v21 = *(void *)(a2 + 8);
        *a1 = *(void *)a2;
        a1[1] = v21;
        *((unsigned char *)a1 + 16) = *(unsigned char *)(a2 + 16);
        a1[3] = *(void *)(a2 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0xEu:
        uint64_t v22 = *(void *)(a2 + 8);
        *a1 = *(void *)a2;
        a1[1] = v22;
        uint64_t v23 = *(void *)(a2 + 16);
        uint64_t v24 = *(void *)(a2 + 24);
        uint64_t v25 = *(void *)(a2 + 32);
        char v26 = *(unsigned char *)(a2 + 40);
        swift_bridgeObjectRetain();
        sub_1C0387CE0(v23, v24, v25, v26);
        a1[2] = v23;
        a1[3] = v24;
        a1[4] = v25;
        *((unsigned char *)a1 + 40) = v26;
        uint64_t v27 = *(void *)(a2 + 48);
        uint64_t v28 = *(void *)(a2 + 56);
        uint64_t v29 = *(void *)(a2 + 64);
        char v30 = *(unsigned char *)(a2 + 72);
        sub_1C0387CE0(v27, v28, v29, v30);
        a1[6] = v27;
        a1[7] = v28;
        a1[8] = v29;
        *((unsigned char *)a1 + 72) = v30;
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0x18u:
      case 0x1Bu:
      case 0x26u:
        *a1 = *(void *)a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0x1Au:
        uint64_t v35 = *(void *)a2;
        uint64_t v36 = *(void *)(a2 + 8);
        *a1 = v35;
        a1[1] = v36;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0x1Cu:
        uint64_t v37 = *(void *)(a2 + 8);
        *a1 = *(void *)a2;
        a1[1] = v37;
        sub_1C03BCC64();
        uint64_t v140 = v38;
        uint64_t v39 = *(int *)(v38 + 48);
        unint64_t v40 = (uint64_t *)((char *)a1 + v39);
        uint64_t v41 = a2 + v39;
        uint64_t v42 = *(void *)(a2 + v39 + 8);
        *unint64_t v40 = *(void *)(a2 + v39);
        v40[1] = v42;
        uint64_t v43 = *(void *)(a2 + v39 + 24);
        v40[2] = *(void *)(a2 + v39 + 16);
        v40[3] = v43;
        uint64_t v44 = *(void *)(a2 + v39 + 40);
        v40[4] = *(void *)(a2 + v39 + 32);
        v40[5] = v44;
        uint64_t v134 = *(void *)(a2 + v39 + 56);
        v40[6] = *(void *)(a2 + v39 + 48);
        v40[7] = v134;
        v40[8] = *(void *)(a2 + v39 + 64);
        uint64_t v45 = type metadata accessor for FormatSlotDefinition();
        uint64_t v46 = *(int *)(v45 + 40);
        __dst = (char *)v40 + v46;
        uint64_t v138 = (int *)v45;
        uint64_t v133 = (void *)(v41 + v46);
        uint64_t v47 = sub_1C1518CDC();
        uint64_t v48 = *(void *)(v47 - 8);
        id v49 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v142 = v49;
        uint64_t v132 = v48;
        if (v49((char *)v133, 1, v47))
        {
          sub_1BFF71E30();
          memcpy(__dst, v133, *(void *)(*(void *)(v50 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, void *, uint64_t))(v48 + 16))(__dst, v133, v47);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(__dst, 0, 1, v47);
        }
        uint64_t v94 = *(int *)(v140 + 64);
        uint64_t v95 = (uint64_t *)((char *)a1 + v94);
        uint64_t v96 = (void *)(a2 + v94);
        uint64_t v97 = v96[1];
        *uint64_t v95 = *v96;
        v95[1] = v97;
        uint64_t v98 = *(int *)(v140 + 80);
        long long v99 = (uint64_t *)((char *)a1 + v98);
        long long v100 = (void *)(a2 + v98);
        uint64_t v101 = v100[1];
        *long long v99 = *v100;
        v99[1] = v101;
        uint64_t v102 = v100[3];
        v99[2] = v100[2];
        v99[3] = v102;
        uint64_t v103 = v100[5];
        v99[4] = v100[4];
        v99[5] = v103;
        uint64_t v104 = v100[7];
        v99[6] = v100[6];
        v99[7] = v104;
        v99[8] = v100[8];
        uint64_t v105 = v138[10];
        uint64_t v106 = (char *)v99 + v105;
        id v107 = (char *)v100 + v105;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v142(v107, 1, v47)) {
          goto LABEL_47;
        }
        (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v106, v107, v47);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v132 + 56))(v106, 0, 1, v47);
        goto LABEL_49;
      case 0x1Du:
        uint64_t v51 = *(void *)(a2 + 8);
        *a1 = *(void *)a2;
        a1[1] = v51;
        uint64_t v52 = *(void *)(a2 + 24);
        a1[2] = *(void *)(a2 + 16);
        a1[3] = v52;
        uint64_t v53 = *(void *)(a2 + 40);
        a1[4] = *(void *)(a2 + 32);
        a1[5] = v53;
        uint64_t v143 = *(void *)(a2 + 56);
        a1[6] = *(void *)(a2 + 48);
        a1[7] = v143;
        a1[8] = *(void *)(a2 + 64);
        uint64_t v54 = type metadata accessor for FormatSlotDefinition();
        uint64_t v55 = *(int *)(v54 + 40);
        uint64_t v139 = (char *)a1 + v55;
        uint64_t v141 = v54;
        uint64_t v136 = (void *)(a2 + v55);
        uint64_t v56 = sub_1C1518CDC();
        uint64_t v57 = *(void *)(v56 - 8);
        id v58 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v144 = v58;
        uint64_t v135 = v57;
        if (v58((char *)v136, 1, v56))
        {
          sub_1BFF71E30();
          memcpy(v139, v136, *(void *)(*(void *)(v59 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, void *, uint64_t))(v57 + 16))(v139, v136, v56);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(v139, 0, 1, v56);
        }
        sub_1C03BC8BC();
        uint64_t v109 = *(int *)(v108 + 48);
        uint64_t v110 = (uint64_t *)((char *)a1 + v109);
        unint64_t v111 = (void *)(a2 + v109);
        uint64_t v112 = v111[1];
        *uint64_t v110 = *v111;
        v110[1] = v112;
        uint64_t v113 = v111[3];
        v110[2] = v111[2];
        v110[3] = v113;
        uint64_t v114 = v111[5];
        v110[4] = v111[4];
        v110[5] = v114;
        uint64_t v115 = v111[7];
        v110[6] = v111[6];
        v110[7] = v115;
        v110[8] = v111[8];
        uint64_t v116 = *(int *)(v141 + 40);
        uint64_t v106 = (char *)v110 + v116;
        id v107 = (char *)v111 + v116;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v144(v107, 1, v56)) {
          goto LABEL_47;
        }
        (*(void (**)(char *, char *, uint64_t))(v135 + 16))(v106, v107, v56);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v135 + 56))(v106, 0, 1, v56);
        goto LABEL_49;
      case 0x1Eu:
        uint64_t v60 = *(void *)(a2 + 8);
        *a1 = *(void *)a2;
        a1[1] = v60;
        uint64_t v61 = *(void *)(a2 + 24);
        a1[2] = *(void *)(a2 + 16);
        a1[3] = v61;
        uint64_t v62 = *(void *)(a2 + 32);
        uint64_t v63 = *(void *)(a2 + 40);
        uint64_t v64 = *(void *)(a2 + 48);
        uint64_t v65 = *(void *)(a2 + 56);
        char v66 = *(unsigned char *)(a2 + 64);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFF429DC(v62, v63, v64, v65, v66);
        a1[4] = v62;
        a1[5] = v63;
        a1[6] = v64;
        a1[7] = v65;
        *((unsigned char *)a1 + 64) = v66;
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0x1Fu:
      case 0x24u:
        uint64_t v67 = *(void *)(a2 + 8);
        *a1 = *(void *)a2;
        a1[1] = v67;
        a1[2] = *(void *)(a2 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0x20u:
        id v68 = *(void **)a2;
        id v69 = v68;
        *a1 = (uint64_t)v68;
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0x22u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v70 = *(void *)(a2 + 8);
        uint64_t v71 = *(void *)(a2 + 16);
        a1[1] = v70;
        a1[2] = v71;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 0x23u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        sub_1C0C3BF8C();
        uint64_t v73 = v72;
        uint64_t v74 = *(int *)(v72 + 48);
        id v75 = (uint64_t *)((char *)a1 + v74);
        uint64_t v76 = a2 + v74;
        *id v75 = *(void *)(a2 + v74);
        uint64_t v77 = *(void *)(a2 + v74 + 16);
        v75[1] = *(void *)(a2 + v74 + 8);
        v75[2] = v77;
        uint64_t v79 = (uint64_t *)(a2 + v74 + 24);
        uint64_t v78 = *v79;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v78)
        {
          uint64_t v80 = *(void *)(v76 + 32);
          v75[3] = v78;
          v75[4] = v80;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v75 + 3) = *(_OWORD *)v79;
        }
        uint64_t v146 = type metadata accessor for FormatSlotDefinitionItemSet();
        uint64_t v117 = *(int *)(v146 + 36);
        id v118 = (char *)v75 + v117;
        id v119 = (const void *)(v76 + v117);
        uint64_t v120 = sub_1C1518CDC();
        uint64_t v121 = *(void *)(v120 - 8);
        uint64_t v145 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v121 + 48);
        if (v145(v119, 1, v120))
        {
          sub_1BFF71E30();
          memcpy(v118, v119, *(void *)(*(void *)(v122 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v121 + 16))(v118, v119, v120);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v121 + 56))(v118, 0, 1, v120);
        }
        uint64_t v123 = *(int *)(v73 + 64);
        uint64_t v124 = (uint64_t *)((char *)a1 + v123);
        uint64_t v125 = a2 + v123;
        *uint64_t v124 = *(void *)(a2 + v123);
        uint64_t v126 = *(void *)(a2 + v123 + 16);
        v124[1] = *(void *)(a2 + v123 + 8);
        v124[2] = v126;
        unsigned int v128 = (uint64_t *)(a2 + v123 + 24);
        uint64_t v127 = *v128;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v127)
        {
          uint64_t v129 = *(void *)(v125 + 32);
          v124[3] = v127;
          v124[4] = v129;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v124 + 3) = *(_OWORD *)v128;
        }
        uint64_t v130 = *(int *)(v146 + 36);
        uint64_t v106 = (char *)v124 + v130;
        id v107 = (char *)(v125 + v130);
        if (v145((const void *)(v125 + v130), 1, v120))
        {
LABEL_47:
          sub_1BFF71E30();
          memcpy(v106, v107, *(void *)(*(void *)(v131 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v106, v107, v120);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v121 + 56))(v106, 0, 1, v120);
        }
LABEL_49:
        swift_storeEnumTagMultiPayload();
        break;
      case 0x25u:
        uint64_t v81 = *(void *)(a2 + 8);
        *a1 = *(void *)a2;
        a1[1] = v81;
        uint64_t v82 = *(void *)(a2 + 24);
        a1[2] = *(void *)(a2 + 16);
        a1[3] = v82;
        uint64_t v83 = *(void *)(a2 + 32);
        uint64_t v84 = *(void *)(a2 + 40);
        a1[4] = v83;
        a1[5] = v84;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0x2Au:
        uint64_t v85 = *(void *)a2;
        uint64_t v86 = *(void *)(a2 + 8);
        unsigned __int8 v87 = *(unsigned char *)(a2 + 16);
        sub_1C024FAC0(v85, v86, v87);
        *a1 = v85;
        a1[1] = v86;
        *((unsigned char *)a1 + 16) = v87;
        swift_storeEnumTagMultiPayload();
        break;
      case 0x2Cu:
        uint64_t v88 = *(void *)a2;
        uint64_t v89 = *(void *)(a2 + 8);
        unsigned __int8 v90 = *(unsigned char *)(a2 + 16);
        sub_1C02CDD4C(*(void *)a2, v89, v90);
        *a1 = v88;
        a1[1] = v89;
        *((unsigned char *)a1 + 16) = v90;
        uint64_t v91 = *(void *)(a2 + 24);
        unint64_t v92 = *(void *)(a2 + 32);
        unsigned __int8 v93 = *(unsigned char *)(a2 + 40);
        sub_1C00F5ACC(v91, v92, v93);
        a1[3] = v91;
        a1[4] = v92;
        *((unsigned char *)a1 + 40) = v93;
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, (const void *)a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

void sub_1C0E784DC(uint64_t a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
      swift_bridgeObjectRelease();
      BOOL v2 = *(void **)(a1 + 16);
      goto LABEL_3;
    case 4u:
    case 7u:
    case 8u:
    case 0xAu:
    case 0xBu:
    case 0xCu:
    case 0xFu:
    case 0x10u:
    case 0x12u:
    case 0x13u:
    case 0x18u:
    case 0x19u:
    case 0x1Bu:
    case 0x26u:
    case 0x27u:
    case 0x29u:
    case 0x2Bu:
      goto LABEL_7;
    case 5u:
    case 0x25u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 6u:
    case 0xDu:
    case 0x11u:
    case 0x14u:
    case 0x15u:
    case 0x16u:
    case 0x17u:
    case 0x1Au:
    case 0x1Fu:
    case 0x21u:
    case 0x22u:
    case 0x24u:
      swift_bridgeObjectRelease();
LABEL_7:
      swift_bridgeObjectRelease();
      return;
    case 9u:
      swift_bridgeObjectRelease();
      uint64_t v3 = *(void *)(a1 + 16);
      uint64_t v4 = *(void *)(a1 + 24);
      unsigned __int8 v5 = *(unsigned char *)(a1 + 32);
      sub_1C015FB90(v3, v4, v5);
      return;
    case 0xEu:
      swift_bridgeObjectRelease();
      sub_1C033D2B4(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
      uint64_t v6 = *(void *)(a1 + 48);
      uint64_t v7 = *(void *)(a1 + 56);
      uint64_t v8 = *(void *)(a1 + 64);
      char v9 = *(unsigned char *)(a1 + 72);
      sub_1C033D2B4(v6, v7, v8, v9);
      return;
    case 0x1Cu:
      swift_bridgeObjectRelease();
      sub_1C03BCC64();
      uint64_t v11 = v10;
      uint64_t v12 = a1 + *(int *)(v10 + 48);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v13 = type metadata accessor for FormatSlotDefinition();
      uint64_t v14 = v12 + *(int *)(v13 + 40);
      uint64_t v15 = sub_1C1518CDC();
      uint64_t v42 = *(void *)(v15 - 8);
      uint64_t v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48);
      if (!v16(v14, 1, v15)) {
        (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v14, v15);
      }
      swift_bridgeObjectRelease();
      uint64_t v17 = a1 + *(int *)(v11 + 80);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v18 = *(int *)(v13 + 40);
      goto LABEL_37;
    case 0x1Du:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v19 = type metadata accessor for FormatSlotDefinition();
      uint64_t v20 = a1 + *(int *)(v19 + 40);
      uint64_t v15 = sub_1C1518CDC();
      uint64_t v42 = *(void *)(v15 - 8);
      uint64_t v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48);
      if (!v21(v20, 1, v15)) {
        (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v20, v15);
      }
      sub_1C03BC8BC();
      uint64_t v23 = a1 + *(int *)(v22 + 48);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v24 = v23 + *(int *)(v19 + 40);
      if (!v21(v24, 1, v15)) {
        goto LABEL_23;
      }
      return;
    case 0x1Eu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v26 = *(void *)(a1 + 32);
      uint64_t v27 = *(void *)(a1 + 40);
      uint64_t v28 = *(void *)(a1 + 48);
      uint64_t v29 = *(void *)(a1 + 56);
      char v30 = *(unsigned char *)(a1 + 64);
      sub_1BFEC41E8(v26, v27, v28, v29, v30);
      return;
    case 0x20u:
      BOOL v2 = *(void **)a1;
LABEL_3:

      return;
    case 0x23u:
      sub_1C0C3BF8C();
      uint64_t v32 = v31;
      uint64_t v33 = a1 + *(int *)(v31 + 48);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v33 + 24))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v34 = type metadata accessor for FormatSlotDefinitionItemSet();
      uint64_t v35 = v33 + *(int *)(v34 + 36);
      uint64_t v15 = sub_1C1518CDC();
      uint64_t v42 = *(void *)(v15 - 8);
      uint64_t v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48);
      if (!v16(v35, 1, v15)) {
        (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v35, v15);
      }
      uint64_t v17 = a1 + *(int *)(v32 + 64);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v17 + 24))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v18 = *(int *)(v34 + 36);
LABEL_37:
      uint64_t v24 = v17 + v18;
      if (!v16(v24, 1, v15))
      {
LABEL_23:
        uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
        v25(v24, v15);
      }
      break;
    case 0x2Au:
      uint64_t v36 = *(void *)a1;
      uint64_t v37 = *(void *)(a1 + 8);
      unsigned __int8 v38 = *(unsigned char *)(a1 + 16);
      sub_1C024F49C(v36, v37, v38);
      break;
    case 0x2Cu:
      sub_1C00BB39C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
      uint64_t v39 = *(void *)(a1 + 24);
      unint64_t v40 = *(void *)(a1 + 32);
      unsigned __int8 v41 = *(unsigned char *)(a1 + 40);
      sub_1C00F5AEC(v39, v40, v41);
      break;
    default:
      return;
  }
}

uint64_t *sub_1C0E78BC4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
      uint64_t v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      uint64_t v7 = (void *)a2[2];
      swift_bridgeObjectRetain();
      id v8 = v7;
      a1[2] = (uint64_t)v7;
      goto LABEL_45;
    case 4u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v9 = a2[2];
      a1[1] = a2[1];
      a1[2] = v9;
      swift_bridgeObjectRetain();
      goto LABEL_45;
    case 5u:
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      uint64_t v11 = a2[3];
      a1[2] = a2[2];
      a1[3] = v11;
      a1[4] = a2[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_45;
    case 6u:
    case 0x11u:
    case 0x14u:
    case 0x15u:
    case 0x16u:
    case 0x17u:
    case 0x21u:
      uint64_t v29 = a2[1];
      *a1 = *a2;
      a1[1] = v29;
      uint64_t v30 = a2[2];
      uint64_t v31 = a2[3];
      a1[2] = v30;
      a1[3] = v31;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_45;
    case 7u:
    case 8u:
    case 0xFu:
    case 0x10u:
    case 0x12u:
    case 0x13u:
    case 0x19u:
    case 0x27u:
    case 0x29u:
    case 0x2Bu:
      uint64_t v28 = a2[1];
      *a1 = *a2;
      a1[1] = v28;
      swift_bridgeObjectRetain();
      goto LABEL_45;
    case 9u:
      uint64_t v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      uint64_t v13 = a2[2];
      uint64_t v14 = a2[3];
      unsigned __int8 v15 = *((unsigned char *)a2 + 32);
      swift_bridgeObjectRetain();
      sub_1C015F808(v13, v14, v15);
      a1[2] = v13;
      a1[3] = v14;
      *((unsigned char *)a1 + 32) = v15;
      goto LABEL_45;
    case 0xAu:
      uint64_t v16 = a2[1];
      *a1 = *a2;
      a1[1] = v16;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      swift_bridgeObjectRetain();
      goto LABEL_45;
    case 0xBu:
    case 0xCu:
      uint64_t v17 = a2[1];
      *a1 = *a2;
      a1[1] = v17;
      *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
      swift_bridgeObjectRetain();
      goto LABEL_45;
    case 0xDu:
      uint64_t v18 = a2[1];
      *a1 = *a2;
      a1[1] = v18;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_45;
    case 0xEu:
      uint64_t v19 = a2[1];
      *a1 = *a2;
      a1[1] = v19;
      uint64_t v20 = a2[2];
      uint64_t v21 = a2[3];
      uint64_t v22 = a2[4];
      char v23 = *((unsigned char *)a2 + 40);
      swift_bridgeObjectRetain();
      sub_1C0387CE0(v20, v21, v22, v23);
      a1[2] = v20;
      a1[3] = v21;
      a1[4] = v22;
      *((unsigned char *)a1 + 40) = v23;
      uint64_t v24 = a2[6];
      uint64_t v25 = a2[7];
      uint64_t v26 = a2[8];
      char v27 = *((unsigned char *)a2 + 72);
      sub_1C0387CE0(v24, v25, v26, v27);
      a1[6] = v24;
      a1[7] = v25;
      a1[8] = v26;
      *((unsigned char *)a1 + 72) = v27;
      goto LABEL_45;
    case 0x18u:
    case 0x1Bu:
    case 0x26u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      goto LABEL_45;
    case 0x1Au:
      uint64_t v32 = *a2;
      uint64_t v33 = a2[1];
      *a1 = v32;
      a1[1] = v33;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_45;
    case 0x1Cu:
      uint64_t v34 = a2[1];
      *a1 = *a2;
      a1[1] = v34;
      sub_1C03BCC64();
      uint64_t v138 = v35;
      uint64_t v36 = *(int *)(v35 + 48);
      uint64_t v37 = (uint64_t *)((char *)a1 + v36);
      uint64_t v38 = (uint64_t)a2 + v36;
      uint64_t v39 = *(uint64_t *)((char *)a2 + v36 + 8);
      *uint64_t v37 = *(uint64_t *)((char *)a2 + v36);
      v37[1] = v39;
      uint64_t v40 = *(uint64_t *)((char *)a2 + v36 + 24);
      v37[2] = *(uint64_t *)((char *)a2 + v36 + 16);
      v37[3] = v40;
      uint64_t v41 = *(uint64_t *)((char *)a2 + v36 + 40);
      v37[4] = *(uint64_t *)((char *)a2 + v36 + 32);
      v37[5] = v41;
      uint64_t v132 = *(uint64_t *)((char *)a2 + v36 + 56);
      v37[6] = *(uint64_t *)((char *)a2 + v36 + 48);
      v37[7] = v132;
      v37[8] = *(uint64_t *)((char *)a2 + v36 + 64);
      uint64_t v42 = type metadata accessor for FormatSlotDefinition();
      uint64_t v43 = *(int *)(v42 + 40);
      __dst = (char *)v37 + v43;
      uint64_t v136 = (int *)v42;
      uint64_t v131 = (void *)(v38 + v43);
      uint64_t v44 = sub_1C1518CDC();
      uint64_t v45 = *(void *)(v44 - 8);
      uint64_t v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v140 = v46;
      uint64_t v130 = v45;
      if (v46((char *)v131, 1, v44))
      {
        sub_1BFF71E30();
        memcpy(__dst, v131, *(void *)(*(void *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, void *, uint64_t))(v45 + 16))(__dst, v131, v44);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(__dst, 0, 1, v44);
      }
      uint64_t v91 = *(int *)(v138 + 64);
      unint64_t v92 = (uint64_t *)((char *)a1 + v91);
      unsigned __int8 v93 = (uint64_t *)((char *)a2 + v91);
      uint64_t v94 = v93[1];
      *unint64_t v92 = *v93;
      v92[1] = v94;
      uint64_t v95 = *(int *)(v138 + 80);
      uint64_t v96 = (uint64_t *)((char *)a1 + v95);
      uint64_t v97 = (uint64_t *)((char *)a2 + v95);
      uint64_t v98 = v97[1];
      *uint64_t v96 = *v97;
      v96[1] = v98;
      uint64_t v99 = v97[3];
      _OWORD v96[2] = v97[2];
      v96[3] = v99;
      uint64_t v100 = v97[5];
      v96[4] = v97[4];
      v96[5] = v100;
      uint64_t v101 = v97[7];
      v96[6] = v97[6];
      v96[7] = v101;
      v96[8] = v97[8];
      uint64_t v102 = v136[10];
      uint64_t v103 = (char *)v96 + v102;
      uint64_t v104 = (char *)v97 + v102;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v140(v104, 1, v44)) {
        goto LABEL_33;
      }
      (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v103, v104, v44);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v130 + 56))(v103, 0, 1, v44);
      goto LABEL_45;
    case 0x1Du:
      uint64_t v48 = a2[1];
      *a1 = *a2;
      a1[1] = v48;
      uint64_t v49 = a2[3];
      a1[2] = a2[2];
      a1[3] = v49;
      uint64_t v50 = a2[5];
      a1[4] = a2[4];
      a1[5] = v50;
      uint64_t v141 = a2[7];
      a1[6] = a2[6];
      a1[7] = v141;
      a1[8] = a2[8];
      uint64_t v51 = type metadata accessor for FormatSlotDefinition();
      uint64_t v52 = *(int *)(v51 + 40);
      uint64_t v137 = (char *)a1 + v52;
      uint64_t v139 = v51;
      uint64_t v134 = (char *)a2 + v52;
      uint64_t v53 = sub_1C1518CDC();
      uint64_t v54 = *(void *)(v53 - 8);
      uint64_t v55 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v142 = v55;
      uint64_t v133 = v54;
      if (v55(v134, 1, v53))
      {
        sub_1BFF71E30();
        memcpy(v137, v134, *(void *)(*(void *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v137, v134, v53);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v137, 0, 1, v53);
      }
      sub_1C03BC8BC();
      uint64_t v106 = *(int *)(v105 + 48);
      id v107 = (uint64_t *)((char *)a1 + v106);
      uint64_t v108 = (uint64_t *)((char *)a2 + v106);
      uint64_t v109 = v108[1];
      *id v107 = *v108;
      v107[1] = v109;
      uint64_t v110 = v108[3];
      v107[2] = v108[2];
      v107[3] = v110;
      uint64_t v111 = v108[5];
      v107[4] = v108[4];
      v107[5] = v111;
      uint64_t v112 = v108[7];
      v107[6] = v108[6];
      v107[7] = v112;
      v107[8] = v108[8];
      uint64_t v113 = *(int *)(v139 + 40);
      uint64_t v103 = (char *)v107 + v113;
      uint64_t v104 = (char *)v108 + v113;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v142(v104, 1, v53)) {
        goto LABEL_33;
      }
      (*(void (**)(char *, char *, uint64_t))(v133 + 16))(v103, v104, v53);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v133 + 56))(v103, 0, 1, v53);
      goto LABEL_45;
    case 0x1Eu:
      uint64_t v57 = a2[1];
      *a1 = *a2;
      a1[1] = v57;
      uint64_t v58 = a2[3];
      a1[2] = a2[2];
      a1[3] = v58;
      uint64_t v59 = a2[4];
      uint64_t v60 = a2[5];
      uint64_t v61 = a2[6];
      uint64_t v62 = a2[7];
      char v63 = *((unsigned char *)a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFF429DC(v59, v60, v61, v62, v63);
      a1[4] = v59;
      a1[5] = v60;
      a1[6] = v61;
      a1[7] = v62;
      *((unsigned char *)a1 + 64) = v63;
      goto LABEL_45;
    case 0x1Fu:
    case 0x24u:
      uint64_t v64 = a2[1];
      *a1 = *a2;
      a1[1] = v64;
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_45;
    case 0x20u:
      uint64_t v65 = (void *)*a2;
      id v66 = v65;
      *a1 = (uint64_t)v65;
      goto LABEL_45;
    case 0x22u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v67 = a2[1];
      uint64_t v68 = a2[2];
      a1[1] = v67;
      a1[2] = v68;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_45;
    case 0x23u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      sub_1C0C3BF8C();
      uint64_t v70 = v69;
      uint64_t v71 = *(int *)(v69 + 48);
      uint64_t v72 = (uint64_t *)((char *)a1 + v71);
      uint64_t v73 = (uint64_t)a2 + v71;
      *uint64_t v72 = *(uint64_t *)((char *)a2 + v71);
      uint64_t v74 = *(uint64_t *)((char *)a2 + v71 + 16);
      v72[1] = *(uint64_t *)((char *)a2 + v71 + 8);
      v72[2] = v74;
      uint64_t v76 = (uint64_t *)((char *)a2 + v71 + 24);
      uint64_t v75 = *v76;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v75)
      {
        uint64_t v77 = *(void *)(v73 + 32);
        v72[3] = v75;
        v72[4] = v77;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v72 + 3) = *(_OWORD *)v76;
      }
      uint64_t v144 = type metadata accessor for FormatSlotDefinitionItemSet();
      uint64_t v115 = *(int *)(v144 + 36);
      uint64_t v116 = (char *)v72 + v115;
      uint64_t v117 = (const void *)(v73 + v115);
      uint64_t v118 = sub_1C1518CDC();
      uint64_t v119 = *(void *)(v118 - 8);
      uint64_t v143 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v119 + 48);
      if (v143(v117, 1, v118))
      {
        sub_1BFF71E30();
        memcpy(v116, v117, *(void *)(*(void *)(v120 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v119 + 16))(v116, v117, v118);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v119 + 56))(v116, 0, 1, v118);
      }
      uint64_t v121 = *(int *)(v70 + 64);
      uint64_t v122 = (uint64_t *)((char *)a1 + v121);
      uint64_t v123 = (uint64_t)a2 + v121;
      *uint64_t v122 = *(uint64_t *)((char *)a2 + v121);
      uint64_t v124 = *(uint64_t *)((char *)a2 + v121 + 16);
      v122[1] = *(uint64_t *)((char *)a2 + v121 + 8);
      v122[2] = v124;
      uint64_t v126 = (uint64_t *)((char *)a2 + v121 + 24);
      uint64_t v125 = *v126;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v125)
      {
        uint64_t v127 = *(void *)(v123 + 32);
        v122[3] = v125;
        v122[4] = v127;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v122 + 3) = *(_OWORD *)v126;
      }
      uint64_t v128 = *(int *)(v144 + 36);
      uint64_t v103 = (char *)v122 + v128;
      uint64_t v104 = (char *)(v123 + v128);
      if (v143((const void *)(v123 + v128), 1, v118))
      {
LABEL_33:
        sub_1BFF71E30();
        memcpy(v103, v104, *(void *)(*(void *)(v114 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v103, v104, v118);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v119 + 56))(v103, 0, 1, v118);
      }
      goto LABEL_45;
    case 0x25u:
      uint64_t v78 = a2[1];
      *a1 = *a2;
      a1[1] = v78;
      uint64_t v79 = a2[3];
      a1[2] = a2[2];
      a1[3] = v79;
      uint64_t v80 = a2[4];
      uint64_t v81 = a2[5];
      a1[4] = v80;
      a1[5] = v81;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_45;
    case 0x2Au:
      uint64_t v82 = *a2;
      uint64_t v83 = a2[1];
      unsigned __int8 v84 = *((unsigned char *)a2 + 16);
      sub_1C024FAC0(v82, v83, v84);
      *a1 = v82;
      a1[1] = v83;
      *((unsigned char *)a1 + 16) = v84;
      goto LABEL_45;
    case 0x2Cu:
      uint64_t v85 = *a2;
      uint64_t v86 = a2[1];
      unsigned __int8 v87 = *((unsigned char *)a2 + 16);
      sub_1C02CDD4C(*a2, v86, v87);
      *a1 = v85;
      a1[1] = v86;
      *((unsigned char *)a1 + 16) = v87;
      uint64_t v88 = a2[3];
      unint64_t v89 = a2[4];
      unsigned __int8 v90 = *((unsigned char *)a2 + 40);
      sub_1C00F5ACC(v88, v89, v90);
      a1[3] = v88;
      a1[4] = v89;
      *((unsigned char *)a1 + 40) = v90;
LABEL_45:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t *sub_1C0E79B98(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a1 != (uint64_t *)a2)
  {
    sub_1C0E7E338((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataError);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
        *a1 = *(void *)a2;
        a1[1] = *(void *)(a2 + 8);
        uint64_t v6 = *(void **)(a2 + 16);
        swift_bridgeObjectRetain();
        id v7 = v6;
        a1[2] = (uint64_t)v6;
        goto LABEL_46;
      case 4u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        a1[1] = *(void *)(a2 + 8);
        a1[2] = *(void *)(a2 + 16);
        swift_bridgeObjectRetain();
        goto LABEL_46;
      case 5u:
        *a1 = *(void *)a2;
        a1[1] = *(void *)(a2 + 8);
        a1[2] = *(void *)(a2 + 16);
        a1[3] = *(void *)(a2 + 24);
        a1[4] = *(void *)(a2 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_46;
      case 6u:
      case 0x11u:
      case 0x14u:
      case 0x15u:
      case 0x16u:
      case 0x17u:
      case 0x21u:
        *a1 = *(void *)a2;
        a1[1] = *(void *)(a2 + 8);
        a1[2] = *(void *)(a2 + 16);
        a1[3] = *(void *)(a2 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_46;
      case 7u:
      case 8u:
      case 0xFu:
      case 0x10u:
      case 0x12u:
      case 0x13u:
      case 0x19u:
      case 0x27u:
      case 0x29u:
      case 0x2Bu:
        *a1 = *(void *)a2;
        a1[1] = *(void *)(a2 + 8);
        swift_bridgeObjectRetain();
        goto LABEL_46;
      case 9u:
        *a1 = *(void *)a2;
        a1[1] = *(void *)(a2 + 8);
        uint64_t v8 = *(void *)(a2 + 16);
        uint64_t v9 = *(void *)(a2 + 24);
        unsigned __int8 v10 = *(unsigned char *)(a2 + 32);
        swift_bridgeObjectRetain();
        sub_1C015F808(v8, v9, v10);
        a1[2] = v8;
        a1[3] = v9;
        *((unsigned char *)a1 + 32) = v10;
        goto LABEL_46;
      case 0xAu:
        *a1 = *(void *)a2;
        a1[1] = *(void *)(a2 + 8);
        *((unsigned char *)a1 + 16) = *(unsigned char *)(a2 + 16);
        swift_bridgeObjectRetain();
        goto LABEL_46;
      case 0xBu:
      case 0xCu:
        *a1 = *(void *)a2;
        a1[1] = *(void *)(a2 + 8);
        *((unsigned char *)a1 + 16) = *(unsigned char *)(a2 + 16);
        *((unsigned char *)a1 + 17) = *(unsigned char *)(a2 + 17);
        swift_bridgeObjectRetain();
        goto LABEL_46;
      case 0xDu:
        *a1 = *(void *)a2;
        a1[1] = *(void *)(a2 + 8);
        *((unsigned char *)a1 + 16) = *(unsigned char *)(a2 + 16);
        a1[3] = *(void *)(a2 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_46;
      case 0xEu:
        *a1 = *(void *)a2;
        a1[1] = *(void *)(a2 + 8);
        uint64_t v11 = *(void *)(a2 + 16);
        uint64_t v12 = *(void *)(a2 + 24);
        uint64_t v13 = *(void *)(a2 + 32);
        char v14 = *(unsigned char *)(a2 + 40);
        swift_bridgeObjectRetain();
        sub_1C0387CE0(v11, v12, v13, v14);
        a1[2] = v11;
        a1[3] = v12;
        a1[4] = v13;
        *((unsigned char *)a1 + 40) = v14;
        uint64_t v15 = *(void *)(a2 + 48);
        uint64_t v16 = *(void *)(a2 + 56);
        uint64_t v17 = *(void *)(a2 + 64);
        char v18 = *(unsigned char *)(a2 + 72);
        sub_1C0387CE0(v15, v16, v17, v18);
        a1[6] = v15;
        a1[7] = v16;
        a1[8] = v17;
        *((unsigned char *)a1 + 72) = v18;
        goto LABEL_46;
      case 0x18u:
      case 0x1Bu:
      case 0x26u:
        *a1 = *(void *)a2;
        swift_bridgeObjectRetain();
        goto LABEL_46;
      case 0x1Au:
        *a1 = *(void *)a2;
        a1[1] = *(void *)(a2 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_46;
      case 0x1Cu:
        *a1 = *(void *)a2;
        a1[1] = *(void *)(a2 + 8);
        sub_1C03BCC64();
        uint64_t v91 = v19;
        uint64_t v20 = *(int *)(v19 + 48);
        uint64_t v21 = (uint64_t *)((char *)a1 + v20);
        uint64_t v22 = a2 + v20;
        *uint64_t v21 = *(void *)(a2 + v20);
        v21[1] = *(void *)(a2 + v20 + 8);
        long long v21[2] = *(void *)(a2 + v20 + 16);
        v21[3] = *(void *)(a2 + v20 + 24);
        v21[4] = *(void *)(a2 + v20 + 32);
        v21[5] = *(void *)(a2 + v20 + 40);
        v21[6] = *(void *)(a2 + v20 + 48);
        v21[7] = *(void *)(a2 + v20 + 56);
        v21[8] = *(void *)(a2 + v20 + 64);
        uint64_t v23 = type metadata accessor for FormatSlotDefinition();
        uint64_t v24 = *(int *)(v23 + 40);
        __dst = (char *)v21 + v24;
        unint64_t v89 = (int *)v23;
        uint64_t v86 = (void *)(v22 + v24);
        uint64_t v25 = sub_1C1518CDC();
        uint64_t v26 = *(void *)(v25 - 8);
        char v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unsigned __int8 v93 = v27;
        if (v27((char *)v86, 1, v25))
        {
          sub_1BFF71E30();
          memcpy(__dst, v86, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, void *, uint64_t))(v26 + 16))(__dst, v86, v25);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
        }
        uint64_t v58 = *(int *)(v91 + 64);
        uint64_t v59 = (uint64_t *)((char *)a1 + v58);
        uint64_t v60 = (void *)(a2 + v58);
        *uint64_t v59 = *v60;
        v59[1] = v60[1];
        uint64_t v61 = *(int *)(v91 + 80);
        uint64_t v62 = (uint64_t *)((char *)a1 + v61);
        char v63 = (void *)(a2 + v61);
        *uint64_t v62 = *v63;
        v62[1] = v63[1];
        v62[2] = v63[2];
        _DWORD v62[3] = v63[3];
        v62[4] = v63[4];
        v62[5] = v63[5];
        v62[6] = v63[6];
        v62[7] = v63[7];
        v62[8] = v63[8];
        uint64_t v64 = v89[10];
        uint64_t v65 = (char *)v62 + v64;
        id v66 = (char *)v63 + v64;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v93(v66, 1, v25)) {
          goto LABEL_34;
        }
        (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v65, v66, v25);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v65, 0, 1, v25);
        goto LABEL_46;
      case 0x1Du:
        *a1 = *(void *)a2;
        a1[1] = *(void *)(a2 + 8);
        a1[2] = *(void *)(a2 + 16);
        a1[3] = *(void *)(a2 + 24);
        a1[4] = *(void *)(a2 + 32);
        a1[5] = *(void *)(a2 + 40);
        a1[6] = *(void *)(a2 + 48);
        a1[7] = *(void *)(a2 + 56);
        a1[8] = *(void *)(a2 + 64);
        uint64_t v29 = type metadata accessor for FormatSlotDefinition();
        uint64_t v30 = *(int *)(v29 + 40);
        unsigned __int8 v90 = (char *)a1 + v30;
        uint64_t v92 = v29;
        unsigned __int8 v87 = (void *)(a2 + v30);
        uint64_t v31 = sub_1C1518CDC();
        uint64_t v32 = *(void *)(v31 - 8);
        uint64_t v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v94 = v33;
        if (v33((char *)v87, 1, v31))
        {
          sub_1BFF71E30();
          memcpy(v90, v87, *(void *)(*(void *)(v34 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, void *, uint64_t))(v32 + 16))(v90, v87, v31);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v90, 0, 1, v31);
        }
        sub_1C03BC8BC();
        uint64_t v68 = *(int *)(v67 + 48);
        uint64_t v69 = (uint64_t *)((char *)a1 + v68);
        uint64_t v70 = (void *)(a2 + v68);
        *uint64_t v69 = *v70;
        v69[1] = v70[1];
        v69[2] = v70[2];
        v69[3] = v70[3];
        v69[4] = v70[4];
        v69[5] = v70[5];
        v69[6] = v70[6];
        v69[7] = v70[7];
        v69[8] = v70[8];
        uint64_t v71 = *(int *)(v92 + 40);
        uint64_t v65 = (char *)v69 + v71;
        id v66 = (char *)v70 + v71;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v94(v66, 1, v31)) {
          goto LABEL_34;
        }
        (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v65, v66, v31);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v65, 0, 1, v31);
        goto LABEL_46;
      case 0x1Eu:
        *a1 = *(void *)a2;
        a1[1] = *(void *)(a2 + 8);
        a1[2] = *(void *)(a2 + 16);
        a1[3] = *(void *)(a2 + 24);
        uint64_t v35 = *(void *)(a2 + 32);
        uint64_t v36 = *(void *)(a2 + 40);
        uint64_t v37 = *(void *)(a2 + 48);
        uint64_t v38 = *(void *)(a2 + 56);
        char v39 = *(unsigned char *)(a2 + 64);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFF429DC(v35, v36, v37, v38, v39);
        a1[4] = v35;
        a1[5] = v36;
        a1[6] = v37;
        a1[7] = v38;
        *((unsigned char *)a1 + 64) = v39;
        goto LABEL_46;
      case 0x1Fu:
      case 0x24u:
        *a1 = *(void *)a2;
        a1[1] = *(void *)(a2 + 8);
        a1[2] = *(void *)(a2 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_46;
      case 0x20u:
        uint64_t v40 = *(void **)a2;
        id v41 = v40;
        *a1 = (uint64_t)v40;
        goto LABEL_46;
      case 0x22u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        a1[1] = *(void *)(a2 + 8);
        a1[2] = *(void *)(a2 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_46;
      case 0x23u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        sub_1C0C3BF8C();
        uint64_t v43 = v42;
        uint64_t v44 = *(int *)(v42 + 48);
        uint64_t v45 = (char *)a1 + v44;
        uint64_t v46 = a2 + v44;
        *(_DWORD *)uint64_t v45 = *(_DWORD *)(a2 + v44);
        *((_DWORD *)v45 + 1) = *(_DWORD *)(a2 + v44 + 4);
        *((void *)v45 + 1) = *(void *)(a2 + v44 + 8);
        *((void *)v45 + 2) = *(void *)(a2 + v44 + 16);
        uint64_t v48 = (uint64_t *)(a2 + v44 + 24);
        uint64_t v47 = *v48;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v47)
        {
          *((void *)v45 + 3) = v47;
          *((void *)v45 + 4) = *(void *)(v46 + 32);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v45 + 24) = *(_OWORD *)v48;
        }
        uint64_t v96 = type metadata accessor for FormatSlotDefinitionItemSet();
        uint64_t v73 = *(int *)(v96 + 36);
        uint64_t v74 = &v45[v73];
        uint64_t v75 = (const void *)(v46 + v73);
        uint64_t v76 = sub_1C1518CDC();
        uint64_t v77 = *(void *)(v76 - 8);
        uint64_t v95 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v77 + 48);
        if (v95(v75, 1, v76))
        {
          sub_1BFF71E30();
          memcpy(v74, v75, *(void *)(*(void *)(v78 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v77 + 16))(v74, v75, v76);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v77 + 56))(v74, 0, 1, v76);
        }
        uint64_t v79 = *(int *)(v43 + 64);
        uint64_t v80 = (char *)a1 + v79;
        uint64_t v81 = a2 + v79;
        *(_DWORD *)uint64_t v80 = *(_DWORD *)(a2 + v79);
        *((_DWORD *)v80 + 1) = *(_DWORD *)(a2 + v79 + 4);
        *((void *)v80 + 1) = *(void *)(a2 + v79 + 8);
        *((void *)v80 + 2) = *(void *)(a2 + v79 + 16);
        uint64_t v83 = (uint64_t *)(a2 + v79 + 24);
        uint64_t v82 = *v83;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v82)
        {
          *((void *)v80 + 3) = v82;
          *((void *)v80 + 4) = *(void *)(v81 + 32);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v80 + 24) = *(_OWORD *)v83;
        }
        uint64_t v84 = *(int *)(v96 + 36);
        uint64_t v65 = &v80[v84];
        id v66 = (char *)(v81 + v84);
        if (v95((const void *)(v81 + v84), 1, v76))
        {
LABEL_34:
          sub_1BFF71E30();
          memcpy(v65, v66, *(void *)(*(void *)(v72 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v65, v66, v76);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v77 + 56))(v65, 0, 1, v76);
        }
        goto LABEL_46;
      case 0x25u:
        *a1 = *(void *)a2;
        a1[1] = *(void *)(a2 + 8);
        a1[2] = *(void *)(a2 + 16);
        a1[3] = *(void *)(a2 + 24);
        a1[4] = *(void *)(a2 + 32);
        a1[5] = *(void *)(a2 + 40);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_46;
      case 0x2Au:
        uint64_t v49 = *(void *)a2;
        uint64_t v50 = *(void *)(a2 + 8);
        unsigned __int8 v51 = *(unsigned char *)(a2 + 16);
        sub_1C024FAC0(v49, v50, v51);
        *a1 = v49;
        a1[1] = v50;
        *((unsigned char *)a1 + 16) = v51;
        goto LABEL_46;
      case 0x2Cu:
        uint64_t v52 = *(void *)a2;
        uint64_t v53 = *(void *)(a2 + 8);
        unsigned __int8 v54 = *(unsigned char *)(a2 + 16);
        sub_1C02CDD4C(*(void *)a2, v53, v54);
        *a1 = v52;
        a1[1] = v53;
        *((unsigned char *)a1 + 16) = v54;
        uint64_t v55 = *(void *)(a2 + 24);
        unint64_t v56 = *(void *)(a2 + 32);
        unsigned __int8 v57 = *(unsigned char *)(a2 + 40);
        sub_1C00F5ACC(v55, v56, v57);
        a1[3] = v55;
        a1[4] = v56;
        *((unsigned char *)a1 + 40) = v57;
LABEL_46:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t type metadata accessor for FormatDerivedDataError()
{
  uint64_t result = qword_1EA1A7FC8;
  if (!qword_1EA1A7FC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

_OWORD *sub_1C0E7AE18(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 35:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      sub_1C0C3BF8C();
      uint64_t v23 = v22;
      uint64_t v24 = *(int *)(v22 + 48);
      uint64_t v25 = (char *)a1 + v24;
      uint64_t v26 = (char *)a2 + v24;
      *(void *)uint64_t v25 = *(void *)((char *)a2 + v24);
      *(_OWORD *)(v25 + 8) = *(_OWORD *)((char *)a2 + v24 + 8);
      *(_OWORD *)(v25 + 24) = *(_OWORD *)((char *)a2 + v24 + 24);
      uint64_t v27 = type metadata accessor for FormatSlotDefinitionItemSet();
      uint64_t v28 = *(int *)(v27 + 36);
      uint64_t v29 = &v25[v28];
      uint64_t v30 = &v26[v28];
      uint64_t v18 = sub_1C1518CDC();
      uint64_t v19 = *(void *)(v18 - 8);
      uint64_t v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
      if (v31(v30, 1, v18))
      {
        sub_1BFF71E30();
        memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v29, v30, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v29, 0, 1, v18);
      }
      uint64_t v51 = *(int *)(v23 + 64);
      uint64_t v52 = (char *)a1 + v51;
      uint64_t v53 = (char *)a2 + v51;
      *(void *)uint64_t v52 = *(void *)v53;
      *(_OWORD *)(v52 + 8) = *(_OWORD *)(v53 + 8);
      *(_OWORD *)(v52 + 24) = *(_OWORD *)(v53 + 24);
      uint64_t v54 = *(int *)(v27 + 36);
      uint64_t v49 = &v52[v54];
      uint64_t v50 = &v53[v54];
      if (v31(&v53[v54], 1, v18)) {
        goto LABEL_16;
      }
      goto LABEL_20;
    case 29:
      long long v33 = a2[1];
      *a1 = *a2;
      a1[1] = v33;
      long long v34 = a2[3];
      a1[2] = a2[2];
      a1[3] = v34;
      *((void *)a1 + 8) = *((void *)a2 + 8);
      uint64_t v35 = type metadata accessor for FormatSlotDefinition();
      uint64_t v36 = *(int *)(v35 + 40);
      uint64_t v37 = (char *)a1 + v36;
      uint64_t v38 = (char *)a2 + v36;
      uint64_t v39 = sub_1C1518CDC();
      uint64_t v40 = *(void *)(v39 - 8);
      id v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48);
      if (v41(v38, 1, v39))
      {
        sub_1BFF71E30();
        memcpy(v37, v38, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v37, v38, v39);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
      }
      sub_1C03BC8BC();
      uint64_t v57 = *(int *)(v56 + 48);
      uint64_t v58 = (char *)a1 + v57;
      uint64_t v59 = (char *)a2 + v57;
      long long v60 = *((_OWORD *)v59 + 1);
      *(_OWORD *)uint64_t v58 = *(_OWORD *)v59;
      *((_OWORD *)v58 + 1) = v60;
      long long v61 = *((_OWORD *)v59 + 3);
      *((_OWORD *)v58 + 2) = *((_OWORD *)v59 + 2);
      *((_OWORD *)v58 + 3) = v61;
      *((void *)v58 + 8) = *((void *)v59 + 8);
      uint64_t v62 = *(int *)(v35 + 40);
      uint64_t v49 = &v58[v62];
      uint64_t v50 = &v59[v62];
      if (!v41(&v59[v62], 1, v39))
      {
        (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v49, v50, v39);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v49, 0, 1, v39);
        goto LABEL_23;
      }
      goto LABEL_16;
    case 28:
      *a1 = *a2;
      sub_1C03BCC64();
      uint64_t v8 = v7;
      uint64_t v9 = *(int *)(v7 + 48);
      unsigned __int8 v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      long long v12 = *(_OWORD *)((char *)a2 + v9 + 16);
      *(_OWORD *)unsigned __int8 v10 = *(_OWORD *)((char *)a2 + v9);
      *((_OWORD *)v10 + 1) = v12;
      long long v13 = *(_OWORD *)((char *)a2 + v9 + 48);
      *((_OWORD *)v10 + 2) = *(_OWORD *)((char *)a2 + v9 + 32);
      *((_OWORD *)v10 + 3) = v13;
      *((void *)v10 + 8) = *(void *)((char *)a2 + v9 + 64);
      uint64_t v14 = type metadata accessor for FormatSlotDefinition();
      uint64_t v15 = *(int *)(v14 + 40);
      uint64_t v16 = &v10[v15];
      uint64_t v17 = &v11[v15];
      uint64_t v18 = sub_1C1518CDC();
      uint64_t v19 = *(void *)(v18 - 8);
      uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
      if (v20(v17, 1, v18))
      {
        sub_1BFF71E30();
        memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
      *(_OWORD *)((char *)a1 + *(int *)(v8 + 64)) = *(_OWORD *)((char *)a2 + *(int *)(v8 + 64));
      uint64_t v43 = *(int *)(v8 + 80);
      uint64_t v44 = (char *)a1 + v43;
      uint64_t v45 = (char *)a2 + v43;
      long long v46 = *((_OWORD *)v45 + 1);
      *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
      *((_OWORD *)v44 + 1) = v46;
      long long v47 = *((_OWORD *)v45 + 3);
      *((_OWORD *)v44 + 2) = *((_OWORD *)v45 + 2);
      *((_OWORD *)v44 + 3) = v47;
      *((void *)v44 + 8) = *((void *)v45 + 8);
      uint64_t v48 = *(int *)(v14 + 40);
      uint64_t v49 = &v44[v48];
      uint64_t v50 = &v45[v48];
      if (v20(&v45[v48], 1, v18))
      {
LABEL_16:
        sub_1BFF71E30();
        memcpy(v49, v50, *(void *)(*(void *)(v55 - 8) + 64));
LABEL_23:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
LABEL_20:
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v49, v50, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v49, 0, 1, v18);
      goto LABEL_23;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

_OWORD *sub_1C0E7B45C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  sub_1C0E7E338((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataError);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 35:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      sub_1C0C3BF8C();
      uint64_t v63 = v21;
      uint64_t v22 = *(int *)(v21 + 48);
      uint64_t v23 = (char *)a1 + v22;
      uint64_t v24 = (char *)a2 + v22;
      *(void *)uint64_t v23 = *(void *)((char *)a2 + v22);
      *(_OWORD *)(v23 + 8) = *(_OWORD *)((char *)a2 + v22 + 8);
      *(_OWORD *)(v23 + 24) = *(_OWORD *)((char *)a2 + v22 + 24);
      uint64_t v25 = type metadata accessor for FormatSlotDefinitionItemSet();
      uint64_t v26 = *(int *)(v25 + 36);
      uint64_t v27 = &v23[v26];
      uint64_t v28 = &v24[v26];
      uint64_t v17 = sub_1C1518CDC();
      uint64_t v18 = *(void *)(v17 - 8);
      uint64_t v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
      if (v29(v28, 1, v17))
      {
        sub_1BFF71E30();
        memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v27, v28, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v27, 0, 1, v17);
      }
      uint64_t v41 = *(int *)(v63 + 64);
      uint64_t v42 = (char *)a1 + v41;
      uint64_t v43 = (char *)a2 + v41;
      *(void *)uint64_t v42 = *(void *)v43;
      *(_OWORD *)(v42 + 8) = *(_OWORD *)(v43 + 8);
      *(_OWORD *)(v42 + 24) = *(_OWORD *)(v43 + 24);
      uint64_t v44 = *(int *)(v25 + 36);
      uint64_t v45 = &v42[v44];
      long long v46 = &v43[v44];
      if (!v29(&v43[v44], 1, v17)) {
        goto LABEL_22;
      }
      goto LABEL_17;
    case 29:
      long long v31 = a2[1];
      *a1 = *a2;
      a1[1] = v31;
      long long v32 = a2[3];
      a1[2] = a2[2];
      a1[3] = v32;
      *((void *)a1 + 8) = *((void *)a2 + 8);
      uint64_t v33 = type metadata accessor for FormatSlotDefinition();
      uint64_t v34 = *(int *)(v33 + 40);
      uint64_t v35 = (char *)a1 + v34;
      uint64_t v36 = (char *)a2 + v34;
      uint64_t v37 = sub_1C1518CDC();
      uint64_t v38 = *(void *)(v37 - 8);
      uint64_t v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
      if (v39(v36, 1, v37))
      {
        sub_1BFF71E30();
        memcpy(v35, v36, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v35, v36, v37);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
      }
      sub_1C03BC8BC();
      uint64_t v48 = *(int *)(v47 + 48);
      uint64_t v49 = (char *)a1 + v48;
      uint64_t v50 = (char *)a2 + v48;
      long long v51 = *((_OWORD *)v50 + 1);
      *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
      *((_OWORD *)v49 + 1) = v51;
      long long v52 = *((_OWORD *)v50 + 3);
      *((_OWORD *)v49 + 2) = *((_OWORD *)v50 + 2);
      *((_OWORD *)v49 + 3) = v52;
      *((void *)v49 + 8) = *((void *)v50 + 8);
      uint64_t v53 = *(int *)(v33 + 40);
      uint64_t v45 = &v49[v53];
      long long v46 = &v50[v53];
      if (!v39(&v50[v53], 1, v37))
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v45, v46, v37);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v45, 0, 1, v37);
        goto LABEL_23;
      }
LABEL_17:
      sub_1BFF71E30();
      memcpy(v45, v46, *(void *)(*(void *)(v54 - 8) + 64));
LABEL_23:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 28:
      *a1 = *a2;
      sub_1C03BCC64();
      uint64_t v8 = v7;
      uint64_t v9 = *(int *)(v7 + 48);
      unsigned __int8 v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      long long v12 = *(_OWORD *)((char *)a2 + v9 + 16);
      *(_OWORD *)unsigned __int8 v10 = *(_OWORD *)((char *)a2 + v9);
      *((_OWORD *)v10 + 1) = v12;
      long long v13 = *(_OWORD *)((char *)a2 + v9 + 48);
      *((_OWORD *)v10 + 2) = *(_OWORD *)((char *)a2 + v9 + 32);
      *((_OWORD *)v10 + 3) = v13;
      *((void *)v10 + 8) = *(void *)((char *)a2 + v9 + 64);
      uint64_t v62 = type metadata accessor for FormatSlotDefinition();
      uint64_t v14 = *(int *)(v62 + 40);
      uint64_t v15 = &v10[v14];
      uint64_t v16 = &v11[v14];
      uint64_t v17 = sub_1C1518CDC();
      uint64_t v18 = *(void *)(v17 - 8);
      uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
      if (v19(v16, 1, v17))
      {
        sub_1BFF71E30();
        memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      *(_OWORD *)((char *)a1 + *(int *)(v8 + 64)) = *(_OWORD *)((char *)a2 + *(int *)(v8 + 64));
      uint64_t v55 = *(int *)(v8 + 80);
      uint64_t v56 = (char *)a1 + v55;
      uint64_t v57 = (char *)a2 + v55;
      long long v58 = *((_OWORD *)v57 + 1);
      *(_OWORD *)uint64_t v56 = *(_OWORD *)v57;
      *((_OWORD *)v56 + 1) = v58;
      long long v59 = *((_OWORD *)v57 + 3);
      *((_OWORD *)v56 + 2) = *((_OWORD *)v57 + 2);
      *((_OWORD *)v56 + 3) = v59;
      *((void *)v56 + 8) = *((void *)v57 + 8);
      uint64_t v60 = *(int *)(v62 + 40);
      uint64_t v45 = &v56[v60];
      long long v46 = &v57[v60];
      if (!v19(&v57[v60], 1, v17))
      {
LABEL_22:
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v45, v46, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v45, 0, 1, v17);
        goto LABEL_23;
      }
      goto LABEL_17;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

uint64_t sub_1C0E7BAC4()
{
  uint64_t v11 = &unk_1C15AFF78;
  long long v12 = &unk_1C15AFF78;
  long long v13 = &unk_1C15AFF78;
  uint64_t v14 = &unk_1C15AFF78;
  uint64_t v15 = &unk_1C15AFF78;
  uint64_t v16 = &unk_1C15AFF90;
  uint64_t v17 = &unk_1C15AFFA8;
  uint64_t v18 = &unk_1C15AFFC0;
  uint64_t v19 = &unk_1C15AFFC0;
  uint64_t v20 = &unk_1C15AFFD8;
  uint64_t v21 = &unk_1C15AFFF0;
  uint64_t v22 = &unk_1C15B0008;
  uint64_t v23 = &unk_1C15B0008;
  uint64_t v24 = &unk_1C15AFFA8;
  uint64_t v25 = &unk_1C15B0020;
  uint64_t v26 = &unk_1C15AFFC0;
  uint64_t v27 = &unk_1C15AFFC0;
  uint64_t v28 = &unk_1C15AFFA8;
  uint64_t v29 = &unk_1C15AFFC0;
  uint64_t v30 = &unk_1C15AFFC0;
  long long v31 = &unk_1C15AFFA8;
  long long v32 = &unk_1C15AFFA8;
  uint64_t v33 = &unk_1C15AFFA8;
  uint64_t v34 = &unk_1C15AFFA8;
  uint64_t v0 = MEMORY[0x1E4FBAD80];
  uint64_t v35 = MEMORY[0x1E4FBAD80] + 64;
  uint64_t v36 = &unk_1C15AFFC0;
  uint64_t v37 = &unk_1C15AFFC0;
  uint64_t v38 = MEMORY[0x1E4FBAD80] + 64;
  uint64_t v6 = &unk_1C15AFFC0;
  uint64_t result = type metadata accessor for FormatSlotDefinition();
  if (v2 <= 0x3F)
  {
    uint64_t v7 = *(void *)(result - 8) + 64;
    uint64_t v8 = &unk_1C15AFFC0;
    uint64_t v9 = v7;
    swift_getTupleTypeLayout();
    uint64_t v39 = &v10;
    swift_getTupleTypeLayout2();
    uint64_t v40 = &v5;
    uint64_t v41 = &unk_1C15B0038;
    uint64_t v42 = &unk_1C15AFF78;
    uint64_t v43 = &unk_1C15B0050;
    uint64_t v44 = &unk_1C15AFFA8;
    uint64_t v45 = &unk_1C15AFF78;
    uint64_t result = type metadata accessor for FormatSlotDefinitionItemSet();
    if (v3 <= 0x3F)
    {
      swift_getTupleTypeLayout3();
      long long v46 = &v4;
      uint64_t v47 = &unk_1C15AFF78;
      uint64_t v48 = &unk_1C15B0080;
      uint64_t v49 = v0 + 64;
      uint64_t v50 = &unk_1C15AFFC0;
      long long v51 = &unk_1C15B0098;
      long long v52 = &unk_1C15AFFC0;
      uint64_t v53 = &unk_1C15B00B0;
      uint64_t v54 = &unk_1C15AFFC0;
      uint64_t v55 = &unk_1C15B00C8;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C0E7BCC8()
{
  uint64_t v1 = type metadata accessor for FormatDerivedDataError();
  MEMORY[0x1F4188790](v1);
  unint64_t v3 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0E7E2D4(v0, (uint64_t)v3);
  uint64_t v4 = 0xD000000000000027;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      id v5 = *(id *)v3;
      uint64_t v6 = *((void *)v3 + 1);
      uint64_t v7 = (void *)*((void *)v3 + 2);
      uint64_t v8 = 0x697461726F636544;
      uint64_t v9 = 0xEA00000000006E6FLL;
      goto LABEL_7;
    case 2u:
      id v5 = *(id *)v3;
      uint64_t v6 = *((void *)v3 + 1);
      uint64_t v7 = (void *)*((void *)v3 + 2);
      uint64_t v8 = 0x656C797453;
      goto LABEL_5;
    case 3u:
      id v5 = *(id *)v3;
      uint64_t v6 = *((void *)v3 + 1);
      uint64_t v7 = (void *)*((void *)v3 + 2);
      uint64_t v8 = 0x6E6F6974704FLL;
      uint64_t v9 = 0xE600000000000000;
      goto LABEL_7;
    case 4u:
      return *((void *)v3 + 1);
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0xD000000000000043;
    case 6u:
      unint64_t v45 = 0;
      unint64_t v46 = 0xE000000000000000;
      sub_1C15200FC();
      sub_1C151E80C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      goto LABEL_45;
    case 7u:
      unint64_t v45 = 0;
      unint64_t v46 = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      unint64_t v10 = 0xD000000000000019;
      uint64_t v11 = "Invalid slot definition '";
      goto LABEL_21;
    case 8u:
      swift_bridgeObjectRelease();
      return 0xD00000000000002CLL;
    case 9u:
      uint64_t v12 = *((void *)v3 + 2);
      uint64_t v13 = *((void *)v3 + 3);
      unsigned __int8 v14 = v3[32];
      swift_bridgeObjectRelease();
      sub_1C015FB90(v12, v13, v14);
      return 0xD00000000000002CLL;
    case 0xAu:
      swift_bridgeObjectRelease();
      return 0xD00000000000003ELL;
    case 0xBu:
      swift_bridgeObjectRelease();
      return 0xD000000000000059;
    case 0xCu:
      swift_bridgeObjectRelease();
      return 0xD000000000000046;
    case 0xDu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0xD00000000000004FLL;
    case 0xEu:
      uint64_t v15 = *((void *)v3 + 2);
      uint64_t v16 = *((void *)v3 + 3);
      uint64_t v17 = *((void *)v3 + 4);
      uint64_t v18 = *((void *)v3 + 6);
      uint64_t v19 = *((void *)v3 + 7);
      uint64_t v20 = *((void *)v3 + 8);
      char v21 = v3[40];
      char v22 = v3[72];
      swift_bridgeObjectRelease();
      sub_1C033D2B4(v15, v16, v17, v21);
      sub_1C033D2B4(v18, v19, v20, v22);
      return 0xD000000000000057;
    case 0xFu:
      unint64_t v45 = 0;
      unint64_t v46 = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      unint64_t v10 = 0xD000000000000025;
      uint64_t v11 = "Unable to create a system image for '";
LABEL_21:
      unint64_t v45 = v10;
      unint64_t v46 = (unint64_t)(v11 - 32) | 0x8000000000000000;
      goto LABEL_45;
    case 0x10u:
      swift_bridgeObjectRelease();
      return 0xD000000000000015;
    case 0x11u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0xD00000000000001BLL;
    case 0x12u:
      swift_bridgeObjectRelease();
      return 0xD000000000000032;
    case 0x13u:
      swift_bridgeObjectRelease();
      return 0xD00000000000002CLL;
    case 0x14u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0xD000000000000046;
    case 0x15u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0xD00000000000004BLL;
    case 0x16u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0xD000000000000055;
    case 0x17u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0xD00000000000005ALL;
    case 0x18u:
      swift_bridgeObjectRelease();
      return 0xD00000000000004DLL;
    case 0x19u:
      unint64_t v45 = 0;
      unint64_t v46 = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      unint64_t v45 = 0xD000000000000011;
      unint64_t v46 = 0x80000001C162BBF0;
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      goto LABEL_46;
    case 0x1Au:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0xD000000000000047;
    case 0x1Bu:
      swift_bridgeObjectRelease();
      return 0xD000000000000041;
    case 0x1Cu:
      swift_bridgeObjectRelease();
      sub_1C03BCC64();
      uint64_t v24 = v23;
      uint64_t v25 = (uint64_t)&v3[*(int *)(v23 + 48)];
      swift_bridgeObjectRelease();
      sub_1C0E7E338((uint64_t)&v3[*(int *)(v24 + 80)], (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
      sub_1C0E7E338(v25, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
      return 0xD000000000000053;
    case 0x1Du:
      sub_1C03BC8BC();
      sub_1C0E7E338((uint64_t)&v3[*(int *)(v26 + 48)], (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
      sub_1C0E7E338((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
      return 0xD00000000000003BLL;
    case 0x1Eu:
      uint64_t v27 = *((void *)v3 + 4);
      uint64_t v28 = *((void *)v3 + 5);
      uint64_t v29 = *((void *)v3 + 6);
      uint64_t v30 = *((void *)v3 + 7);
      char v31 = v3[64];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFEC41E8(v27, v28, v29, v30, v31);
      return 0xD000000000000060;
    case 0x1Fu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0xD000000000000051;
    case 0x20u:

      return 0xD000000000000053;
    case 0x21u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0xD00000000000003CLL;
    case 0x22u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0xD000000000000039;
    case 0x23u:
      sub_1C0C3BF8C();
      uint64_t v33 = (uint64_t)&v3[*(int *)(v32 + 48)];
      sub_1C0E7E338((uint64_t)&v3[*(int *)(v32 + 64)], (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
      sub_1C0E7E338(v33, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
      return 0xD000000000000060;
    case 0x24u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0xD000000000000025;
    case 0x25u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v45 = 0;
      unint64_t v46 = 0xE000000000000000;
      sub_1C15200FC();
      sub_1C151E80C();
LABEL_45:
      sub_1C151E80C();
      swift_bridgeObjectRelease();
LABEL_46:
      sub_1C151E80C();
      goto LABEL_47;
    case 0x26u:
      swift_bridgeObjectRelease();
      return 0xD000000000000034;
    case 0x27u:
      swift_bridgeObjectRelease();
      return 0xD000000000000058;
    case 0x28u:
      return 0xD000000000000032;
    case 0x29u:
      swift_bridgeObjectRelease();
      return 0x6C616E7265746E49;
    case 0x2Au:
      int64_t v34 = *(void *)v3;
      uint64_t v35 = *((void *)v3 + 1);
      unsigned __int8 v36 = v3[16];
      unint64_t v45 = 0;
      unint64_t v46 = 0xE000000000000000;
      sub_1C15200FC();
      unint64_t v48 = v45;
      unint64_t v49 = v46;
      sub_1C151E80C();
      unint64_t v45 = v34;
      unint64_t v46 = v35;
      unsigned __int8 v47 = v36;
      sub_1C152036C();
      sub_1C024F49C(v34, v35, v36);
      return v48;
    case 0x2Bu:
      unint64_t v45 = 0;
      unint64_t v46 = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      unint64_t v45 = 0xD00000000000001FLL;
      unint64_t v46 = 0x80000001C162B5E0;
      sub_1C151E80C();
      swift_bridgeObjectRelease();
LABEL_47:
      uint64_t v4 = v45;
      break;
    case 0x2Cu:
      uint64_t v37 = *(void *)v3;
      uint64_t v38 = *((void *)v3 + 1);
      uint64_t v39 = *((void *)v3 + 3);
      unint64_t v40 = *((void *)v3 + 4);
      unsigned __int8 v41 = v3[16];
      unsigned __int8 v42 = v3[40];
      sub_1C00BB39C(v37, v38, v41);
      sub_1C00F5AEC(v39, v40, v42);
      uint64_t v4 = 0xD00000000000001CLL;
      break;
    case 0x2Du:
      return v4;
    case 0x2Eu:
      uint64_t v4 = 0x656C6C65636E6143;
      break;
    case 0x2Fu:
      uint64_t v4 = 0x6C706D4920746F4ELL;
      break;
    case 0x30u:
      uint64_t v4 = 0xD000000000000015;
      break;
    case 0x31u:
      uint64_t v4 = 0xD000000000000035;
      break;
    default:
      id v5 = *(id *)v3;
      uint64_t v6 = *((void *)v3 + 1);
      uint64_t v7 = (void *)*((void *)v3 + 2);
      uint64_t v8 = 0x70756F7247;
LABEL_5:
      uint64_t v9 = 0xE500000000000000;
LABEL_7:
      uint64_t v4 = sub_1C0E7E468(v8, v9, (int)v5, v6, v7);

      swift_bridgeObjectRelease();
      break;
  }
  return v4;
}

unint64_t sub_1C0E7C720(uint64_t a1)
{
  unint64_t result = sub_1C00DAB28();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0E7C748()
{
  uint64_t v1 = type metadata accessor for FormatSlotDefinitionItemSet();
  MEMORY[0x1F4188790](v1 - 8);
  unint64_t v3 = (char *)&v64 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v64 - v5;
  uint64_t v7 = type metadata accessor for FormatSlotDefinition();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FormatDerivedDataError();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0E7E2D4(v0, (uint64_t)v12);
  uint64_t v13 = 0xD000000000000062;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 4u:
      char v18 = *v12;
      swift_bridgeObjectRelease();
      *(void *)&long long v71 = 0;
      *((void *)&v71 + 1) = 0xE000000000000000;
      sub_1C15200FC();
      sub_1C151E80C();
      LOBYTE(v68[0]) = v18;
      sub_1C152036C();
      goto LABEL_39;
    case 5u:
      uint64_t v19 = *((void *)v12 + 4);
      *(void *)&long long v71 = 0;
      *((void *)&v71 + 1) = 0xE000000000000000;
      sub_1C15200FC();
      sub_1C151E80C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      MEMORY[0x1C18C6710](v19, MEMORY[0x1E4FBB1A0]);
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      goto LABEL_39;
    case 6u:
      swift_bridgeObjectRelease();
      *(void *)&long long v71 = 0;
      *((void *)&v71 + 1) = 0xE000000000000000;
      sub_1C15200FC();
      sub_1C151E80C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      goto LABEL_39;
    case 7u:
      swift_bridgeObjectRelease();
      return 0xD00000000000002CLL;
    case 8u:
    case 0xFu:
    case 0x10u:
    case 0x12u:
    case 0x13u:
    case 0x27u:
    case 0x2Bu:
      goto LABEL_38;
    case 9u:
      sub_1C015FB90(*((void *)v12 + 2), *((void *)v12 + 3), v12[32]);
LABEL_38:
      *(void *)&long long v71 = 0;
      *((void *)&v71 + 1) = 0xE000000000000000;
      sub_1C15200FC();
      sub_1C151E80C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      goto LABEL_39;
    case 0xAu:
      char v20 = v12[16];
      *(void *)&long long v71 = 0;
      *((void *)&v71 + 1) = 0xE000000000000000;
      sub_1C15200FC();
      sub_1C151E80C();
      sub_1C151E80C();
      sub_1C151E80C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      goto LABEL_13;
    case 0xBu:
      char v21 = v12[16];
      char v22 = v12[17];
      *(void *)&long long v71 = 0;
      *((void *)&v71 + 1) = 0xE000000000000000;
      sub_1C15200FC();
      sub_1C151E80C();
      sub_1C151E80C();
      sub_1C151E80C();
      LOBYTE(v68[0]) = v21;
      FormatOptionType.rawValue.getter();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      LOBYTE(v68[0]) = v22;
      goto LABEL_14;
    case 0xCu:
      char v23 = v12[16];
      char v20 = v12[17];
      *(void *)&long long v71 = 0;
      *((void *)&v71 + 1) = 0xE000000000000000;
      sub_1C15200FC();
      sub_1C151E80C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      LOBYTE(v68[0]) = v23;
      FormatOptionType.rawValue.getter();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
LABEL_13:
      sub_1C151E80C();
      LOBYTE(v68[0]) = v20;
LABEL_14:
      FormatOptionType.rawValue.getter();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      return v71;
    case 0xDu:
      char v24 = v12[16];
      *(void *)&long long v71 = 0;
      *((void *)&v71 + 1) = 0xE000000000000000;
      sub_1C15200FC();
      sub_1C151E80C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      LOBYTE(v68[0]) = v24;
      sub_1C152036C();
      sub_1C151E80C();
      sub_1C007E638();
      goto LABEL_33;
    case 0xEu:
      uint64_t v25 = *((void *)v12 + 2);
      uint64_t v26 = *((void *)v12 + 3);
      uint64_t v27 = *((void *)v12 + 4);
      uint64_t v28 = *((void *)v12 + 6);
      uint64_t v66 = *((void *)v12 + 7);
      uint64_t v67 = v28;
      uint64_t v65 = *((void *)v12 + 8);
      char v29 = v12[40];
      char v30 = v12[72];
      *(void *)&long long v71 = 0;
      *((void *)&v71 + 1) = 0xE000000000000000;
      sub_1C15200FC();
      v68[0] = v71;
      sub_1C151E80C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      *(void *)&long long v71 = v25;
      *((void *)&v71 + 1) = v26;
      uint64_t v72 = v27;
      LOBYTE(v73) = v29;
      FormatDerivedDataOptionType.description.getter();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C033D2B4(v25, v26, v27, v29);
      sub_1C151E80C();
      uint64_t v32 = v66;
      uint64_t v31 = v67;
      *(void *)&long long v71 = v67;
      *((void *)&v71 + 1) = v66;
      uint64_t v33 = v65;
      uint64_t v72 = v65;
      LOBYTE(v73) = v30;
      FormatDerivedDataOptionType.description.getter();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C033D2B4(v31, v32, v33, v30);
      goto LABEL_43;
    case 0x11u:
      *(void *)&long long v71 = 0;
      *((void *)&v71 + 1) = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      *(void *)&long long v71 = 0x67616D6920656854;
      *((void *)&v71 + 1) = 0xEB00000000272065;
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      goto LABEL_39;
    case 0x14u:
    case 0x15u:
    case 0x16u:
    case 0x17u:
    case 0x21u:
      *(void *)&long long v71 = 0;
      *((void *)&v71 + 1) = 0xE000000000000000;
      sub_1C15200FC();
      sub_1C151E80C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      goto LABEL_39;
    case 0x18u:
      *(void *)&long long v71 = 0;
      *((void *)&v71 + 1) = 0xE000000000000000;
      sub_1C15200FC();
      sub_1C151E80C();
      sub_1C151EFCC();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_39;
    case 0x19u:
      swift_bridgeObjectRelease();
      return 0xD0000000000000C6;
    case 0x1Au:
      uint64_t v35 = *(void *)v12;
      uint64_t v34 = *((void *)v12 + 1);
      *(void *)&long long v71 = 0;
      *((void *)&v71 + 1) = 0xE000000000000000;
      sub_1C15200FC();
      sub_1C151E80C();
      uint64_t v36 = MEMORY[0x1E4FBB550];
      MEMORY[0x1C18C6710](v35, MEMORY[0x1E4FBB550]);
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      MEMORY[0x1C18C6710](v34, v36);
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_39;
    case 0x1Bu:
      uint64_t v37 = *(void *)v12;
      *(void *)&long long v71 = 0;
      *((void *)&v71 + 1) = 0xE000000000000000;
      sub_1C15200FC();
      sub_1C151E80C();
      MEMORY[0x1C18C6710](v37, MEMORY[0x1E4FBB1A0]);
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_39;
    case 0x1Cu:
      sub_1C03BCC64();
      uint64_t v39 = (uint64_t)&v12[*(int *)(v38 + 80)];
      sub_1C0E7E398((uint64_t)&v12[*(int *)(v38 + 48)], (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
      *(void *)&long long v71 = 0;
      *((void *)&v71 + 1) = 0xE000000000000000;
      sub_1C15200FC();
      sub_1C151E80C();
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      goto LABEL_25;
    case 0x1Du:
      sub_1C03BC8BC();
      uint64_t v39 = (uint64_t)&v12[*(int *)(v40 + 48)];
      sub_1C0E7E398((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
      *(void *)&long long v71 = 0;
      *((void *)&v71 + 1) = 0xE000000000000000;
      sub_1C15200FC();
      sub_1C151E80C();
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
LABEL_25:
      sub_1C151E80C();
      uint64_t v13 = v71;
      sub_1C0E7E338((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
      sub_1C0E7E338(v39, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinition);
      return v13;
    case 0x1Eu:
      uint64_t v41 = *((void *)v12 + 4);
      uint64_t v42 = *((void *)v12 + 5);
      uint64_t v43 = *((void *)v12 + 6);
      uint64_t v44 = *((void *)v12 + 7);
      char v45 = v12[64];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFEC41E8(v41, v42, v43, v44, v45);
      *(void *)&long long v71 = 0;
      *((void *)&v71 + 1) = 0xE000000000000000;
      sub_1C15200FC();
      sub_1C151E80C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      goto LABEL_39;
    case 0x1Fu:
    case 0x24u:
      uint64_t v51 = *((void *)v12 + 2);
      *(void *)&long long v71 = 0;
      *((void *)&v71 + 1) = 0xE000000000000000;
      sub_1C15200FC();
      sub_1C151E80C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      MEMORY[0x1C18C6710](v51, MEMORY[0x1E4FBB1A0]);
      goto LABEL_34;
    case 0x20u:
      unint64_t v46 = *(void **)v12;
      *(void *)&long long v71 = 0;
      *((void *)&v71 + 1) = 0xE000000000000000;
      sub_1C15200FC();
      sub_1C151E80C();
      *(void *)&v68[0] = v46;
      sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
      sub_1C152036C();

      return v71;
    case 0x22u:
      char v47 = *v12;
      *(void *)&long long v71 = 0;
      *((void *)&v71 + 1) = 0xE000000000000000;
      sub_1C15200FC();
      sub_1C151E80C();
      LOBYTE(v68[0]) = v47;
      sub_1C152036C();
      sub_1C151E80C();
      sub_1C0081EF8();
      sub_1C151EFCC();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      sub_1C151EFCC();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_39;
    case 0x23u:
      char v48 = *v12;
      sub_1C0C3BF8C();
      uint64_t v50 = (uint64_t)&v12[*(int *)(v49 + 64)];
      sub_1C0E7E398((uint64_t)&v12[*(int *)(v49 + 48)], (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
      sub_1C0E7E398(v50, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
      *(void *)&long long v71 = 0;
      *((void *)&v71 + 1) = 0xE000000000000000;
      sub_1C15200FC();
      sub_1C151E80C();
      LOBYTE(v68[0]) = v48;
      sub_1C152036C();
      sub_1C151E80C();
      sub_1C0081EF8();
      swift_bridgeObjectRetain();
      sub_1C151EFCC();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      LODWORD(v68[0]) = *((_DWORD *)v6 + 1);
      sub_1C152088C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      swift_bridgeObjectRetain();
      sub_1C151EFCC();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      LODWORD(v68[0]) = *((_DWORD *)v3 + 1);
      sub_1C152088C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v13 = v71;
      sub_1C0E7E338((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
      sub_1C0E7E338((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
      return v13;
    case 0x25u:
      *(void *)&long long v71 = 0;
      *((void *)&v71 + 1) = 0xE000000000000000;
      sub_1C15200FC();
      sub_1C151E80C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
LABEL_39:
      sub_1C151E80C();
      return v71;
    case 0x26u:
      *(void *)&long long v71 = 0;
      *((void *)&v71 + 1) = 0xE000000000000000;
      sub_1C15200FC();
      sub_1C151E80C();
LABEL_33:
      sub_1C151EFCC();
LABEL_34:
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v71;
    case 0x28u:
      char v52 = *v12;
      char v53 = v12[1];
      *(void *)&long long v71 = 0;
      *((void *)&v71 + 1) = 0xE000000000000000;
      sub_1C15200FC();
      sub_1C151E80C();
      LOBYTE(v68[0]) = v53;
      sub_1C152036C();
      sub_1C151E80C();
      LOBYTE(v68[0]) = v52;
      sub_1C152036C();
      return v71;
    case 0x29u:
      return *(void *)v12;
    case 0x2Au:
      uint64_t v54 = *(void *)v12;
      uint64_t v55 = *((void *)v12 + 1);
      unsigned __int8 v56 = v12[16];
      *(void *)&long long v71 = 0;
      *((void *)&v71 + 1) = 0xE000000000000000;
      sub_1C15200FC();
      v68[0] = v71;
      sub_1C151E80C();
      *(void *)&long long v71 = v54;
      *((void *)&v71 + 1) = v55;
      LOBYTE(v72) = v56;
      sub_1C152036C();
      sub_1C024F49C(v54, v55, v56);
      goto LABEL_43;
    case 0x2Cu:
      uint64_t v58 = *(void *)v12;
      uint64_t v59 = *((void *)v12 + 1);
      uint64_t v60 = *((void *)v12 + 3);
      unint64_t v61 = *((void *)v12 + 4);
      unsigned __int8 v62 = v12[40];
      char v63 = v12[16];
      *(void *)&long long v71 = 0;
      *((void *)&v71 + 1) = 0xE000000000000000;
      sub_1C15200FC();
      v68[0] = v71;
      sub_1C151E80C();
      *(void *)&long long v71 = v60;
      *((void *)&v71 + 1) = v61;
      LOBYTE(v72) = v62;
      sub_1C0CDD228();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C00F5AEC(v60, v61, v62);
      sub_1C151E80C();
      sub_1C0C195EC(v58, v59, v63);
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C00BB39C(v58, v59, v63);
      sub_1C151E80C();
LABEL_43:
      uint64_t v13 = *(void *)&v68[0];
      break;
    case 0x2Du:
      return v13;
    case 0x2Eu:
      uint64_t v13 = 0xD000000000000016;
      break;
    case 0x2Fu:
      uint64_t v13 = 0xD000000000000041;
      break;
    case 0x30u:
      uint64_t v13 = 0xD000000000000053;
      break;
    case 0x31u:
      uint64_t v13 = 0xD00000000000014ALL;
      break;
    default:
      unsigned __int8 v14 = (void *)*((void *)v12 + 2);
      swift_bridgeObjectRelease();
      uint64_t v70 = v14;
      id v15 = v14;
      sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
      sub_1BFC845BC(0, (unint64_t *)&unk_1EA1A5FA0);
      if (swift_dynamicCast())
      {
        sub_1BFC773DC(v68, (uint64_t)&v71);
        uint64_t v16 = v73;
        uint64_t v17 = v74;
        __swift_project_boxed_opaque_existential_1(&v71, v73);
        uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 24))(v16, v17);

        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v71);
      }
      else
      {
        uint64_t v69 = 0;
        memset(v68, 0, sizeof(v68));

        sub_1C0E7E338((uint64_t)v68, (uint64_t (*)(void))sub_1C0E7E400);
        uint64_t v13 = 0;
      }
      break;
  }
  return v13;
}

uint64_t sub_1C0E7E2D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatDerivedDataError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0E7E338(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C0E7E398(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1C0E7E400()
{
  if (!qword_1EA1B0940)
  {
    sub_1BFC845BC(255, (unint64_t *)&unk_1EA1A5FA0);
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1B0940);
    }
  }
}

uint64_t sub_1C0E7E468(uint64_t a1, uint64_t a2, int a3, int a4, id a5)
{
  id v14 = a5;
  id v7 = a5;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  sub_1BFC845BC(0, (unint64_t *)&unk_1EA1A5FA0);
  if (swift_dynamicCast())
  {
    sub_1BFC773DC(v12, (uint64_t)v15);
    uint64_t v8 = v16;
    uint64_t v9 = v17;
    __swift_project_boxed_opaque_existential_1(v15, v16);
    uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  else
  {
    uint64_t v13 = 0;
    memset(v12, 0, sizeof(v12));
    sub_1C0E7E338((uint64_t)v12, (uint64_t (*)(void))sub_1C0E7E400);
    v15[0] = a1;
    v15[1] = a2;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    sub_1C151E80C();
    sub_1C151E80C();
    return v15[0];
  }
  return v10;
}

unint64_t _s8NewsFeed14FormatHBoxNodeC4sizeAA0C4SizeOvg_0@<X0>(unint64_t *a1@<X8>)
{
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 64);
  *a1 = v3;
  return sub_1BFF35EA4(v3);
}

uint64_t _s8NewsFeed14FormatHBoxNodeC11adjustmentsSayAA0C10AdjustmentOGvg_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t _s8NewsFeed14FormatHBoxNodeC7reverseAA0C7BooleanOvg_0@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 112);
  uint64_t v4 = *(void *)(v1 + 120);
  char v5 = *(unsigned char *)(v1 + 128);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return sub_1BFE94AB4(v3, v4, v5);
}

uint64_t FormatHBoxNode.reversed.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 104);
}

uint64_t _s8NewsFeed14FormatHBoxNodeC4nameSSSgvg_0()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t _s8NewsFeed14FormatHBoxNodeC11descriptionSSSgvg_0()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*FormatHBoxNode.identifier.modify())()
{
  return j__swift_endAccess;
}

uint64_t (*FormatHBoxNode.name.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t (*FormatHBoxNode.description.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t (*FormatHBoxNode.size.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t (*FormatHBoxNode.adjustments.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t (*FormatHBoxNode.children.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatHBoxNode.reversed.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 104) = a1;
  return result;
}

uint64_t (*FormatHBoxNode.reversed.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t (*FormatHBoxNode.reverse.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatHBoxNode.__allocating_init(identifier:name:description:size:resize:adjustments:children:reversed:reverse:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t *a8, uint64_t a9, uint64_t a10, char a11, uint64_t *a12)
{
  uint64_t v17 = swift_allocObject();
  FormatHBoxNode.init(identifier:name:description:size:resize:adjustments:children:reversed:reverse:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
  return v17;
}

uint64_t FormatHBoxNode.init(identifier:name:description:size:resize:adjustments:children:reversed:reverse:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t *a8, uint64_t a9, uint64_t a10, char a11, uint64_t *a12)
{
  return sub_1C0E7F168(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

uint64_t FormatHBoxNode.__deallocating_deinit()
{
  FormatHBoxNode.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0E7EBA0(uint64_t *a1, uint64_t *a2)
{
  return static FormatHBoxNode.== infix(_:_:)(*a1, *a2);
}

uint64_t (*FormatVBoxNode.identifier.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t _s8NewsFeed14FormatHBoxNodeC4nameSSSgvs_0(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatVBoxNode.name.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t _s8NewsFeed14FormatHBoxNodeC11descriptionSSSgvs_0(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatVBoxNode.description.modify())()
{
  return j_j__swift_endAccess;
}

unint64_t sub_1C0E7ED5C(unint64_t *a1, uint64_t *a2)
{
  unint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  unint64_t v4 = *(void *)(v3 + 64);
  *(void *)(v3 + 64) = v2;
  sub_1BFF35EA4(v2);
  return sub_1BFF322A8(v4);
}

unint64_t _s8NewsFeed14FormatHBoxNodeC4sizeAA0C4SizeOvs_0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 64);
  *(void *)(v1 + 64) = v2;
  return sub_1BFF322A8(v3);
}

uint64_t (*FormatVBoxNode.size.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t _s8NewsFeed14FormatHBoxNodeC6resizeAA0c3BoxE6ResizeVSgvg_0@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 80);
  *a1 = *(void *)(v1 + 72);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t _s8NewsFeed14FormatHBoxNodeC11adjustmentsSayAA0C10AdjustmentOGvs_0(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 88) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatVBoxNode.adjustments.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t (*FormatVBoxNode.children.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t (*FormatVBoxNode.reversed.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C0E7EFB8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 112);
  uint64_t v5 = *(void *)(v3 + 120);
  char v6 = *(unsigned char *)(v3 + 128);
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v5;
  *(unsigned char *)(a2 + 16) = v6;
  return sub_1BFE94AB4(v4, v5, v6);
}

uint64_t sub_1C0E7F00C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  char v4 = *(unsigned char *)(a1 + 16);
  uint64_t v5 = *a2;
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 112);
  uint64_t v7 = *(void *)(v5 + 120);
  char v8 = *(unsigned char *)(v5 + 128);
  *(void *)(v5 + 112) = v2;
  *(void *)(v5 + 120) = v3;
  *(unsigned char *)(v5 + 128) = v4;
  sub_1BFE94AB4(v2, v3, v4);
  return sub_1BFE94AD4(v6, v7, v8);
}

uint64_t _s8NewsFeed14FormatHBoxNodeC7reverseAA0C7BooleanOvs_0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v1 + 112);
  uint64_t v6 = *(void *)(v1 + 120);
  char v7 = *(unsigned char *)(v1 + 128);
  *(void *)(v1 + 112) = v2;
  *(void *)(v1 + 120) = v3;
  *(unsigned char *)(v1 + 128) = v4;
  return sub_1BFE94AD4(v5, v6, v7);
}

uint64_t (*FormatVBoxNode.reverse.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatVBoxNode.init(identifier:name:description:size:resize:adjustments:children:reversed:reverse:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t *a8, uint64_t a9, uint64_t a10, char a11, uint64_t *a12)
{
  return sub_1C0E7F168(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

uint64_t sub_1C0E7F168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t *a8, uint64_t a9, uint64_t a10, char a11, uint64_t *a12)
{
  uint64_t v23 = *a8;
  uint64_t v24 = *a7;
  uint64_t v25 = a8[1];
  uint64_t v26 = a12[1];
  uint64_t v27 = *a12;
  int v19 = *((unsigned __int8 *)a12 + 16);
  *(_OWORD *)(v12 + 48) = 0u;
  *(_OWORD *)(v12 + 32) = 0u;
  swift_beginAccess();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  swift_beginAccess();
  *(void *)(v12 + 32) = a3;
  *(void *)(v12 + 40) = a4;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)(v12 + 48) = a5;
  *(void *)(v12 + 56) = a6;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)(v12 + 64) = v24;
  *(void *)(v12 + 72) = v23;
  *(void *)(v12 + 80) = v25;
  swift_beginAccess();
  *(void *)(v12 + 88) = a9;
  swift_beginAccess();
  *(void *)(v12 + 96) = a10;
  swift_beginAccess();
  *(unsigned char *)(v12 + 104) = a11;
  if (v19 == 255) {
    uint64_t v20 = a11 & 1;
  }
  else {
    uint64_t v20 = v27;
  }
  if (v19 == 255) {
    uint64_t v21 = 0;
  }
  else {
    uint64_t v21 = v26;
  }
  swift_beginAccess();
  *(void *)(v12 + 112) = v20;
  *(void *)(v12 + 120) = v21;
  *(unsigned char *)(v12 + 128) = (v19 != 255) & v19;
  return v12;
}

uint64_t _s8NewsFeed14FormatHBoxNodeCfd_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFF322A8(*(void *)(v0 + 64));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFE94AD4(*(void *)(v0 + 112), *(void *)(v0 + 120), *(unsigned char *)(v0 + 128));
  return v0;
}

uint64_t sub_1C0E7F390(uint64_t *a1, uint64_t *a2)
{
  return static FormatVBoxNode.== infix(_:_:)(*a1, *a2);
}

uint64_t FormatBoxNodeResize.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static FormatBoxNodeResize.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1C1520A9C();
  }
}

uint64_t sub_1C0E7F3FC(uint64_t a1)
{
  uint64_t result = sub_1C0E7F6B4(&qword_1EA1A7FD8, (void (*)(void))type metadata accessor for FormatHBoxNode);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0E7F454(void *a1)
{
  a1[1] = sub_1C0E7F6B4(&qword_1EB87D7A0, (void (*)(void))type metadata accessor for FormatHBoxNode);
  a1[2] = sub_1C0E7F6B4(&qword_1EB85FD60, (void (*)(void))type metadata accessor for FormatHBoxNode);
  uint64_t result = sub_1C0E7F6B4(&qword_1EA1A7FE0, (void (*)(void))type metadata accessor for FormatHBoxNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1C0E7F500(uint64_t a1)
{
  uint64_t result = sub_1C0E7F6B4(&qword_1EA1A7FE8, (void (*)(void))type metadata accessor for FormatHBoxNode);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0E7F558(uint64_t a1)
{
  uint64_t result = sub_1C0E7F6B4(&qword_1EA1A7FF0, (void (*)(void))type metadata accessor for FormatVBoxNode);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0E7F5B0(void *a1)
{
  a1[1] = sub_1C0E7F6B4(&qword_1EB87DB98, (void (*)(void))type metadata accessor for FormatVBoxNode);
  a1[2] = sub_1C0E7F6B4(&qword_1EB85FD88, (void (*)(void))type metadata accessor for FormatVBoxNode);
  uint64_t result = sub_1C0E7F6B4(&qword_1EA1A7FF8, (void (*)(void))type metadata accessor for FormatVBoxNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1C0E7F65C(uint64_t a1)
{
  uint64_t result = sub_1C0E7F6B4(&qword_1EA1A8000, (void (*)(void))type metadata accessor for FormatVBoxNode);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0E7F6B4(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0E7F6F8(uint64_t a1)
{
  unint64_t result = sub_1C0E7F720();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0E7F720()
{
  unint64_t result = qword_1EA1A8008;
  if (!qword_1EA1A8008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8008);
  }
  return result;
}

unint64_t sub_1C0E7F774(void *a1)
{
  a1[1] = sub_1BFF32310();
  a1[2] = sub_1C08EB8CC();
  unint64_t result = sub_1C0E7F7AC();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0E7F7AC()
{
  unint64_t result = qword_1EA1A8010;
  if (!qword_1EA1A8010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8010);
  }
  return result;
}

uint64_t sub_1C0E7F800@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatBoxNodeResize.init(from:)(a1, a2);
}

uint64_t sub_1C0E7F818(void *a1)
{
  return FormatBoxNodeResize.encode(to:)(a1);
}

uint64_t sub_1C0E7F834(uint64_t *a1, uint64_t *a2)
{
  return sub_1C0172B58(a1, a2);
}

uint64_t sub_1C0E7F850(uint64_t *a1, uint64_t *a2)
{
  return sub_1C00FE080(a1, a2);
}

uint64_t sub_1C0E7F86C(uint64_t *a1, uint64_t *a2)
{
  return sub_1C00FE1D4(a1, a2);
}

unint64_t sub_1C0E7F888(unint64_t *a1, uint64_t *a2)
{
  return sub_1C0E7ED5C(a1, a2);
}

uint64_t sub_1C0E7F8A4(uint64_t *a1, uint64_t *a2)
{
  return sub_1C00FE6B0(a1, a2);
}

uint64_t sub_1C0E7F8C0(uint64_t *a1, uint64_t *a2)
{
  return sub_1C045E9D0(a1, a2);
}

uint64_t sub_1C0E7F8E0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0E7EFB8(a1, a2);
}

uint64_t sub_1C0E7F8F8(uint64_t a1, uint64_t *a2)
{
  return sub_1C0E7F00C(a1, a2);
}

uint64_t sub_1C0E7F914(uint64_t *a1, uint64_t *a2)
{
  return sub_1C0172B58(a1, a2);
}

uint64_t keypath_get_7Tm@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 40);
  *a2 = *(void *)(v3 + 32);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0E7F97C(uint64_t *a1, uint64_t *a2)
{
  return sub_1C00FE080(a1, a2);
}

uint64_t keypath_get_9Tm@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 56);
  *a2 = *(void *)(v3 + 48);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0E7F9E4(uint64_t *a1, uint64_t *a2)
{
  return sub_1C00FE1D4(a1, a2);
}

unint64_t keypath_get_11Tm@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  unint64_t v4 = *(void *)(v3 + 64);
  *a2 = v4;
  return sub_1BFF35EA4(v4);
}

unint64_t sub_1C0E7FA4C(unint64_t *a1, uint64_t *a2)
{
  return sub_1C0E7ED5C(a1, a2);
}

uint64_t keypath_get_13Tm@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 88);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0E7FAB4(uint64_t *a1, uint64_t *a2)
{
  return sub_1C00FE6B0(a1, a2);
}

uint64_t sub_1C0E7FAD0(uint64_t *a1, uint64_t *a2)
{
  return sub_1C045E9D0(a1, a2);
}

uint64_t keypath_get_17Tm@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 104);
  return result;
}

uint64_t keypath_set_18Tm(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 104) = v2;
  return result;
}

uint64_t sub_1C0E7FB7C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0E7EFB8(a1, a2);
}

uint64_t sub_1C0E7FB94(uint64_t a1, uint64_t *a2)
{
  return sub_1C0E7F00C(a1, a2);
}

uint64_t method lookup function for FormatHBoxNode(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatHBoxNode);
}

uint64_t dispatch thunk of FormatHBoxNode.__allocating_init(identifier:name:description:size:resize:adjustments:children:reversed:reverse:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t method lookup function for FormatVBoxNode(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatVBoxNode);
}

uint64_t dispatch thunk of FormatVBoxNode.__allocating_init(identifier:name:description:size:resize:adjustments:children:reversed:reverse:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

ValueMetadata *type metadata accessor for FormatBoxNodeResize()
{
  return &type metadata for FormatBoxNodeResize;
}

uint64_t FormatVBoxNode.__allocating_init(identifier:name:description:size:resize:adjustments:children:reversed:reverse:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t *a8, uint64_t a9, uint64_t a10, char a11, uint64_t *a12)
{
  return FormatHBoxNode.__allocating_init(identifier:name:description:size:resize:adjustments:children:reversed:reverse:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

uint64_t FeedLayoutStylerFactory.styler()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v4 + 24))(v19, v3, v4);
  sub_1BFC66384((uint64_t)(v1 + 7), (uint64_t)&v16);
  uint64_t v5 = type metadata accessor for CoverIssueViewStyler();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = 0x4012000000000000;
  long long v7 = v19[1];
  *(_OWORD *)(v6 + 24) = v19[0];
  *(_OWORD *)(v6 + 40) = v7;
  *(_OWORD *)(v6 + 56) = v19[2];
  uint64_t v8 = v17;
  uint64_t v9 = v18;
  __swift_project_boxed_opaque_existential_1(&v16, v17);
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v9 + 40))(v14, v8, v9);
  uint64_t v10 = v15;
  long long v11 = v14[1];
  *(_OWORD *)(v6 + 72) = v14[0];
  *(_OWORD *)(v6 + 88) = v11;
  long long v12 = v14[3];
  *(_OWORD *)(v6 + 104) = v14[2];
  *(_OWORD *)(v6 + 120) = v12;
  *(void *)(v6 + 136) = v10;
  uint64_t result = sub_1BFC773DC(&v16, v6 + 144);
  a1[3] = v5;
  a1[4] = (uint64_t)&off_1F1BF7B68;
  *a1 = v6;
  return result;
}

{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  long long v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  long long v11;
  long long v12;
  uint64_t result;
  _OWORD v14[4];
  uint64_t v15;
  long long v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD v19[3];

  uint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v4 + 24))(v19, v3, v4);
  sub_1BFC66384((uint64_t)(v1 + 7), (uint64_t)&v16);
  uint64_t v5 = type metadata accessor for CoverChannelViewStyler();
  uint64_t v6 = swift_allocObject();
  long long v7 = v19[1];
  *(_OWORD *)(v6 + 16) = v19[0];
  *(_OWORD *)(v6 + 32) = v7;
  *(_OWORD *)(v6 + 48) = v19[2];
  uint64_t v8 = v17;
  uint64_t v9 = v18;
  __swift_project_boxed_opaque_existential_1(&v16, v17);
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v9 + 40))(v14, v8, v9);
  uint64_t v10 = v15;
  long long v11 = v14[1];
  *(_OWORD *)(v6 + 64) = v14[0];
  *(_OWORD *)(v6 + 80) = v11;
  long long v12 = v14[3];
  *(_OWORD *)(v6 + 96) = v14[2];
  *(_OWORD *)(v6 + 112) = v12;
  *(void *)(v6 + 128) = v10;
  uint64_t result = sub_1BFC773DC(&v16, v6 + 136);
  a1[3] = v5;
  a1[4] = (uint64_t)&off_1F1BA0438;
  *a1 = v6;
  return result;
}

uint64_t FeedLayoutStylerFactory.__allocating_init(fontBookProvider:colorPaletteProvider:scaleFactor:)(long long *a1, long long *a2, double a3)
{
  uint64_t v6 = swift_allocObject();
  sub_1BFC773DC(a1, v6 + 16);
  sub_1BFC773DC(a2, v6 + 56);
  *(double *)(v6 + 96) = a3;
  return v6;
}

uint64_t sub_1C0E7FDFC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v4 + 16))(&v14, v3, v4);
  sub_1BFC66384((uint64_t)(v1 + 7), (uint64_t)&v11);
  uint64_t v5 = type metadata accessor for GapOfflineViewStyler();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = v14;
  uint64_t v7 = v12;
  uint64_t v8 = v13;
  __swift_project_boxed_opaque_existential_1(&v11, v12);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v8 + 24))(&v10, v7, v8);
  *(_OWORD *)(v6 + 32) = v10;
  uint64_t result = sub_1BFC773DC(&v11, v6 + 48);
  a1[3] = v5;
  a1[4] = (uint64_t)&off_1F1C13110;
  *a1 = v6;
  return result;
}

uint64_t FeedLayoutStylerFactory.init(fontBookProvider:colorPaletteProvider:scaleFactor:)(long long *a1, long long *a2, double a3)
{
  sub_1BFC773DC(a1, v3 + 16);
  sub_1BFC773DC(a2, v3 + 56);
  *(double *)(v3 + 96) = a3;
  return v3;
}

uint64_t FeedLayoutStylerFactory.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  return v0;
}

uint64_t method lookup function for FeedLayoutStylerFactory(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedLayoutStylerFactory);
}

uint64_t dispatch thunk of FeedLayoutStylerFactory.__allocating_init(fontBookProvider:colorPaletteProvider:scaleFactor:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t static SharingPuzzleActivity.== infix(_:_:)()
{
  return 1;
}

uint64_t SharingPuzzleActivity.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t SharingPuzzleActivity.hashValue.getter()
{
  return sub_1C1520E0C();
}

BOOL static SharingPuzzleTypeActivity.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SharingPuzzleTypeActivity.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t SharingPuzzleTypeActivity.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C0E801A0()
{
  unint64_t result = qword_1EA1A8018;
  if (!qword_1EA1A8018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8018);
  }
  return result;
}

unint64_t sub_1C0E801F8()
{
  unint64_t result = qword_1EA1A8020;
  if (!qword_1EA1A8020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8020);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SharingPuzzleActivity(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C0E802E8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SharingPuzzleTypeActivity(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0E803DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SharingPuzzleTypeActivity()
{
  return &type metadata for SharingPuzzleTypeActivity;
}

id sub_1C0E80414@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  id result = objc_msgSend(*(id *)(v4 + 16), sel_subscribedTagIDs);
  if (result)
  {
    long long v10 = result;
    uint64_t v11 = sub_1C151EBCC();

    uint64_t v12 = sub_1BFEF4060(v11);
    swift_bridgeObjectRelease();
    id v13 = objc_msgSend(a3, sel_identifier);
    uint64_t v14 = sub_1C151E62C();
    uint64_t v16 = v15;

    LOBYTE(v13) = sub_1BFF896B4(v14, v16, v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_OWORD *)(a4 + 80) = xmmword_1C152C800;
    *(_OWORD *)(a4 + 96) = 0u;
    *(_OWORD *)(a4 + 112) = 0u;
    *(_OWORD *)(a4 + 128) = 0u;
    *(unsigned char *)(a4 + 144) = 0;
    *(void *)a4 = a1;
    *(void *)(a4 + 8) = a2;
    *(void *)(a4 + 16) = a3;
    *(unsigned char *)(a4 + 24) = 0;
    *(void *)(a4 + 48) = 0;
    *(void *)(a4 + 56) = 0xE000000000000000;
    *(void *)(a4 + 32) = 0;
    *(unsigned char *)(a4 + 40) = 0;
    uint64_t v17 = MEMORY[0x1E4FBC870];
    *(void *)(a4 + 64) = v13 & 1;
    *(void *)(a4 + 72) = v17;
    swift_bridgeObjectRetain();
    return (id)swift_unknownObjectRetain();
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_1C0E80554@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = self;
  uint64_t v8 = (void *)sub_1C151E5EC();
  LODWORD(v7) = objc_msgSend(v7, sel_isPuzzleTypeIdentifier_, v8);

  if (v7)
  {
    uint64_t v9 = *(void **)(v3 + 32);
    long long v10 = (void *)sub_1C151E5EC();
    id v11 = objc_msgSend(v9, sel_cachedPuzzleTypeForID_, v10);

    if (!v11)
    {
      uint64_t v12 = (void *)sub_1C151E5EC();
      id v13 = objc_msgSend(v9, sel_cachedPuzzleTypeForID_, v12);
      goto LABEL_6;
    }
LABEL_7:
    swift_unknownObjectRetain();
    sub_1C0E80414(a1, a2, v11, a3);
    swift_unknownObjectRelease_n();
    return result;
  }
  uint64_t v14 = *(void **)(v3 + 24);
  uint64_t v15 = (void *)sub_1C151E5EC();
  id v11 = objc_msgSend(v14, sel_fastCachedTagForID_, v15);

  if (v11) {
    goto LABEL_7;
  }
  uint64_t v12 = (void *)sub_1C151E5EC();
  id v13 = objc_msgSend(v14, sel_slowCachedTagForID_, v12);
LABEL_6:
  id v11 = v13;

  if (v11) {
    goto LABEL_7;
  }
  *(unsigned char *)(a3 + 144) = 0;
  double result = 0.0;
  *(_OWORD *)(a3 + 112) = 0u;
  *(_OWORD *)(a3 + 128) = 0u;
  *(_OWORD *)(a3 + 80) = 0u;
  *(_OWORD *)(a3 + 96) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)a3 = 0u;
  return result;
}

uint64_t sub_1C0E80704()
{
  return swift_deallocClassInstance();
}

uint64_t FeedGroupClusterOrderingMode.rawValue.getter()
{
  uint64_t v1 = 0x6C616E6F73726570;
  if (*v0 != 1) {
    uint64_t v1 = 0x6669737265766964;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6C616369706F74;
  }
}

uint64_t sub_1C0E807B8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C1492EAC(*a1, *a2);
}

unint64_t sub_1C0E807C8()
{
  unint64_t result = qword_1EA1A8028;
  if (!qword_1EA1A8028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8028);
  }
  return result;
}

uint64_t sub_1C0E8081C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0E808D0()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0E80970()
{
  return sub_1C1520E0C();
}

void sub_1C0E80A20(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xEC00000064657A69;
  uint64_t v5 = 0x6C616E6F73726570;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6669737265766964;
    unint64_t v4 = 0xEB00000000646569;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6C616369706F74;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1C0E80A90()
{
  return sub_1C151EAEC();
}

uint64_t SharingModule.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t SharingModule.init()()
{
  return v0;
}

uint64_t SharingModule.deinit()
{
  return v0;
}

uint64_t SharingModule.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

id _s8NewsFeed13SharingModuleC20createViewController3forSo06UIViewG0CAA0C6IntentV_tF_0(long long *a1)
{
  uint64_t v1 = *((void *)a1 + 2);
  long long v13 = *a1;
  int v2 = *(void **)a1;
  id v3 = objc_msgSend((id)swift_unknownObjectRetain(), sel_activityItems);
  sub_1C151EBCC();

  id v4 = objc_msgSend(v2, sel_activities);
  sub_1C0E80DC8();
  sub_1C151EBCC();

  id v5 = objc_allocWithZone(MEMORY[0x1E4F42718]);
  BOOL v6 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v5, sel_initWithActivityItems_applicationActivities_, v6, v7);

  id v9 = objc_msgSend(v2, sel_excludedActivityTypes);
  objc_msgSend(v8, sel_setExcludedActivityTypes_, v9);

  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = v13;
  *(void *)(v10 + 32) = v1;
  aBlock[4] = sub_1C0E80E48;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C09F4A18;
  aBlock[3] = &block_descriptor_70;
  id v11 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_setCompletionWithItemsHandler_, v11);
  swift_unknownObjectRelease();
  _Block_release(v11);
  return v8;
}

uint64_t dispatch thunk of SharingModuleType.createViewController(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t type metadata accessor for SharingModule()
{
  return self;
}

uint64_t method lookup function for SharingModule(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SharingModule);
}

uint64_t dispatch thunk of SharingModule.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

unint64_t sub_1C0E80DC8()
{
  unint64_t result = qword_1EA1A8030;
  if (!qword_1EA1A8030)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA1A8030);
  }
  return result;
}

uint64_t sub_1C0E80E08()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1C0E80E48(void *a1)
{
  if (a1)
  {
    int v2 = *(void (**)(void))(v1 + 24);
    id v3 = a1;
    v2();
  }
}

uint64_t sub_1C0E80EA8()
{
  uint64_t v0 = (void *)sub_1C15176CC();
  char v1 = sub_1C0F1493C();

  return v1 & 1;
}

uint64_t static FormatContentSizeCategoryExpression.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2 = *a2;
  unsigned __int8 v5 = *a1;
  unsigned __int8 v4 = v2;
  return _s8NewsFeed25FormatContentSizeCategoryO2eeoiySbAC_ACtFZ_0(&v5, &v4) & 1;
}

uint64_t sub_1C0E80F38@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatContentSizeCategoryExpression.init(from:)(a1, a2);
}

uint64_t sub_1C0E80F50(void *a1)
{
  return FormatContentSizeCategoryExpression.encode(to:)(a1);
}

uint64_t sub_1C0E80F68(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2 = *a2;
  unsigned __int8 v5 = *a1;
  unsigned __int8 v4 = v2;
  return _s8NewsFeed25FormatContentSizeCategoryO2eeoiySbAC_ACtFZ_0(&v5, &v4) & 1;
}

unint64_t sub_1C0E80FA4(uint64_t a1)
{
  unint64_t result = sub_1C0E80FCC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0E80FCC()
{
  unint64_t result = qword_1EA1A8038;
  if (!qword_1EA1A8038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8038);
  }
  return result;
}

unint64_t sub_1C0E81020(void *a1)
{
  a1[1] = sub_1C088410C();
  a1[2] = sub_1C08FBFEC();
  unint64_t result = sub_1C0E81058();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0E81058()
{
  unint64_t result = qword_1EA1A8040;
  if (!qword_1EA1A8040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8040);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatContentSizeCategory(unsigned __int8 *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 == 1) {
    goto LABEL_17;
  }
  if ((a2 + 254) >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 254) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 254;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 254;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 254;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  if (v6 <= 0xDF) {
    unsigned int v7 = -1;
  }
  else {
    unsigned int v7 = (v6 ^ 0xE0) >> 5;
  }
  return v7 + 1;
}

unsigned char *storeEnumTagSinglePayload for FormatContentSizeCategoryExpression(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 254 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 254) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 1)
  {
    unsigned int v6 = ((a2 - 2) >> 8) + 1;
    *unint64_t result = a2 - 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0E81210);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = -32;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatContentSizeCategoryExpression()
{
  return &type metadata for FormatContentSizeCategoryExpression;
}

BOOL static Heading.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Heading.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t Heading.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C0E812D4()
{
  unint64_t result = qword_1EA1A8048;
  if (!qword_1EA1A8048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8048);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for Heading(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0E813F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Heading()
{
  return &type metadata for Heading;
}

ValueMetadata *type metadata accessor for Format()
{
  return &type metadata for Format;
}

uint64_t sub_1C0E8143C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151A43C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_1C00FA474(a1 + 16, (uint64_t)&v14);
  if (v15)
  {
    sub_1BFC773DC(&v14, (uint64_t)v16);
    uint64_t v17 = v6;
    __swift_project_boxed_opaque_existential_1(v16, v16[3]);
    sub_1C151A41C();
    char v10 = sub_1C151B9FC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v17);
    char v11 = v10 ^ 1;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  }
  else
  {
    sub_1C00FA504((uint64_t)&v14);
    char v11 = 0;
  }
  return LayeredMediaViewRenderer.render(view:renderedViewModel:forceAsync:)(a2, *(void *)(a3 + 24), v11 & 1);
}

void sub_1C0E815E4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1C151A43C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_1C00FA474(a2 + 16, (uint64_t)&v18);
  if (v19)
  {
    sub_1BFC773DC(&v18, (uint64_t)aBlock);
    __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v15);
    sub_1C151A42C();
    char v9 = sub_1C151B9FC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
    if ((v9 & 1) == 0)
    {
      sub_1C151F8EC();
      return;
    }
  }
  else
  {
    sub_1C00FA504((uint64_t)&v18);
  }
  char v10 = self;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a3;
  uint64_t v16 = sub_1C0E81D84;
  uint64_t v17 = v11;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BFC9FC68;
  uint64_t v15 = &block_descriptor_71;
  uint64_t v12 = _Block_copy(aBlock);
  id v13 = a3;
  swift_release();
  objc_msgSend(v10, sel_animateWithDuration_animations_, v12, 0.15);
  _Block_release(v12);
}

uint64_t sub_1C0E81810()
{
  sub_1C00FA504(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0E81850(uint64_t a1, char *a2, uint64_t a3, long long *a4, uint64_t a5)
{
  uint64_t v10 = *v5;
  long long v11 = a4[1];
  long long v57 = *a4;
  long long v58 = v11;
  char v59 = *((unsigned char *)a4 + 32);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  long long v14 = &a2[OBJC_IVAR____TtC8NewsFeed22FormatLayeredMediaView_identifier];
  *(void *)long long v14 = v13;
  *((void *)v14 + 1) = v12;
  uint64_t v15 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1C151F8FC();
  objc_msgSend(a2, sel_setUserInteractionEnabled_, *(unsigned __int8 *)(a1 + 120));
  uint64_t result = sub_1C12E90CC(*(void *)(*((void *)&v58 + 1) + 16));
  if ((result & 1) == 0) {
    return result;
  }
  uint64_t v52 = a5;
  id v17 = objc_allocWithZone((Class)type metadata accessor for LayeredMediaView(0));
  uint64_t v18 = swift_retain();
  uint64_t v19 = sub_1C1248B48(v18);
  sub_1C151F94C();
  objc_msgSend(a2, sel_bounds);
  sub_1C151F8FC();
  sub_1C151F8EC();
  objc_msgSend(v19, sel_setAccessibilityIgnoresInvertColors_, 1);
  sub_1C12E91C0(v19);
  uint64_t v20 = *(void *)(a1 + 152);
  uint64_t v51 = v15;
  uint64_t v53 = a3;
  if (v20)
  {
    uint64_t v21 = *(void *)(v20 + 80);
    uint64_t v22 = *(void *)(v20 + 88);
    char v23 = *(unsigned char *)(v20 + 96);
    sub_1BFEF6828(v21, v22, v23);
  }
  else
  {
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    char v23 = -2;
  }
  id v24 = objc_msgSend(a2, sel_layer, v51);
  objc_msgSend(a2, sel_bounds);
  uint64_t v54 = v21;
  uint64_t v55 = v22;
  char v56 = v23;
  sub_1BFE6A0C8(v24, (uint64_t)&v54, v25, v26, v27, v28);

  sub_1BFEF68AC(v21, v22, v23);
  if (v20)
  {
    uint64_t v29 = *(void *)(v20 + 80);
    uint64_t v30 = *(void *)(v20 + 88);
    char v31 = *(unsigned char *)(v20 + 96);
    sub_1BFEF6828(v29, v30, v31);
  }
  else
  {
    uint64_t v29 = 0;
    uint64_t v30 = 0;
    char v31 = -2;
  }
  id v32 = objc_msgSend(v19, sel_layer);
  objc_msgSend(v19, sel_bounds);
  uint64_t v54 = v29;
  uint64_t v55 = v30;
  char v56 = v31;
  sub_1BFE6A0C8(v32, (uint64_t)&v54, v33, v34, v35, v36);

  sub_1BFEF68AC(v29, v30, v31);
  if (!v20 || (unint64_t v37 = *(void *)(v20 + 64), v37 >> 61) || (v37 & 0xF000000000000007) == 0xF000000000000007)
  {
    id v41 = objc_msgSend(self, sel_clearColor);
    sub_1C151F95C();

    uint64_t v40 = *(void *)(a1 + 144);
    if (!v20)
    {
      uint64_t v43 = 0;
      uint64_t v44 = 0;
      uint64_t v42 = 0;
      char v45 = -2;
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v54 = *(void *)(v37 + 16);
    sub_1BFEF683C(v37);
    uint64_t v38 = swift_retain();
    Class v39 = FormatColor.color.getter(v38);
    sub_1C151F95C();
    swift_release();

    sub_1BFEF68C0(v37);
    uint64_t v40 = *(void *)(a1 + 144);
  }
  uint64_t v42 = *(void *)(v20 + 72);
  uint64_t v43 = *(void *)(v20 + 80);
  uint64_t v44 = *(void *)(v20 + 88);
  char v45 = *(unsigned char *)(v20 + 96);
  swift_bridgeObjectRetain();
  sub_1BFEF6828(v43, v44, v45);
LABEL_15:
  id v46 = objc_msgSend(a2, sel_layer);
  uint64_t v54 = v43;
  uint64_t v55 = v44;
  char v56 = v45;
  sub_1BFE69BFC(v40, v46, v52, v42, &v54);

  swift_bridgeObjectRelease();
  sub_1BFEF68AC(v43, v44, v45);
  if (v20)
  {
    uint64_t v47 = *(void *)(v20 + 56);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v47 = 0;
  }
  uint64_t v54 = v47;
  sub_1BFE69FD4(v40, a2, &v54, v53);
  uint64_t v48 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v48);
  sub_1C151932C();
  uint64_t v49 = (void *)sub_1C151806C();
  *(void *)(swift_allocObject() + 16) = v19;
  uint64_t v50 = v19;
  sub_1C151901C();

  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1C0E81D10()
{
  return sub_1C0E8143C(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1C0E81D30()
{
  return swift_deallocObject();
}

void sub_1C0E81D68(uint64_t a1, uint64_t a2)
{
  sub_1C0E815E4(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1C0E81D84()
{
  return sub_1C151F8EC();
}

ValueMetadata *type metadata accessor for FormatStateViewNodeData()
{
  return &type metadata for FormatStateViewNodeData;
}

uint64_t FormatImageNode.adjustments.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t FormatImageNode.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 88);
  *a1 = v3;
  return sub_1BFE6FA30(v3);
}

uint64_t FormatImageNode.identifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatImageNode.zIndex.getter()
{
  swift_beginAccess();
  return *(void *)(v0 + 80);
}

uint64_t FormatImageNode.isUserInteractionEnabled.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 96);
}

uint64_t FormatImageNode.shouldCancelContextMenu.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 97);
}

uint64_t FormatImageNode.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatImageNode.name.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 128);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatImageNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatImageNode.identifier.modify())()
{
  return j__swift_endAccess;
}

unint64_t FormatImageNode.size.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 32);
  *a1 = v2;
  return sub_1BFF35EA4(v2);
}

uint64_t FormatImageNode.resize.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 40);
  return swift_retain();
}

uint64_t FormatImageNode.adjustments.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatImageNode.adjustments.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatImageNode.style.getter()
{
  return swift_retain();
}

uint64_t FormatImageNode.animation.getter()
{
  return swift_retain();
}

uint64_t FormatImageNode.content.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 72);
  return swift_retain();
}

uint64_t FormatImageNode.zIndex.setter(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 80) = a1;
  return result;
}

uint64_t (*FormatImageNode.zIndex.modify())()
{
  return j_j__swift_endAccess;
}

unint64_t FormatImageNode.visibility.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 88);
  *(void *)(v1 + 88) = v2;
  return sub_1BFF0056C(v3);
}

uint64_t (*FormatImageNode.visibility.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatImageNode.isUserInteractionEnabled.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 96) = a1;
  return result;
}

uint64_t (*FormatImageNode.isUserInteractionEnabled.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatImageNode.shouldCancelContextMenu.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 97) = a1;
  return result;
}

uint64_t (*FormatImageNode.shouldCancelContextMenu.modify())()
{
  return j_j__swift_endAccess;
}

void FormatImageNode.accessibilityRole.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 112);
  *(void *)a1 = *(void *)(v1 + 104);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t FormatImageNode.selectors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 120) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatImageNode.selectors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C0E82430(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = *a2;
  swift_beginAccess();
  *(void *)(v4 + 128) = v3;
  *(void *)(v4 + 136) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatImageNode.name.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatImageNode.name.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatImageNode.__allocating_init(identifier:size:resize:adjustments:style:animation:content:zIndex:visibility:isUserInteractionEnabled:shouldCancelContextMenu:accessibilityRole:selectors:name:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t a9, uint64_t *a10, char a11, char a12, uint64_t *a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v19 = swift_allocObject();
  FormatImageNode.init(identifier:size:resize:adjustments:style:animation:content:zIndex:visibility:isUserInteractionEnabled:shouldCancelContextMenu:accessibilityRole:selectors:name:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
  return v19;
}

uint64_t FormatImageNode.deinit()
{
  swift_bridgeObjectRelease();
  sub_1BFF322A8(*(void *)(v0 + 32));
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_1BFF0056C(*(void *)(v0 + 88));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatImageNode.__deallocating_deinit()
{
  FormatImageNode.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0E82698(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1BFF05C60(&qword_1EA1A8050, a2, (void (*)(uint64_t))type metadata accessor for FormatImageNode);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0E826F0(void *a1, uint64_t a2)
{
  a1[1] = sub_1BFF05C60(&qword_1EB87DFF8, a2, (void (*)(uint64_t))type metadata accessor for FormatImageNode);
  a1[2] = sub_1BFF05C60(&qword_1EB85FE80, v3, (void (*)(uint64_t))type metadata accessor for FormatImageNode);
  uint64_t result = sub_1BFF05C60(&qword_1EA1A8058, v4, (void (*)(uint64_t))type metadata accessor for FormatImageNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1C0E8279C(void *a1, void *a2)
{
  return static FormatImageNode.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1C0E827A8(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1BFF05C60(&qword_1EA1A8060, a2, (void (*)(uint64_t))type metadata accessor for FormatImageNode);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0E82800@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0E82850@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0E828A0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(void *)(v3 + 80);
  return result;
}

uint64_t sub_1C0E828E8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(void *)(v3 + 80) = v2;
  return result;
}

unint64_t sub_1C0E8292C@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  unint64_t v4 = *(void *)(v3 + 88);
  *a2 = v4;
  return sub_1BFE6FA30(v4);
}

uint64_t sub_1C0E8297C@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 96);
  return result;
}

uint64_t sub_1C0E829C4(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 96) = v2;
  return result;
}

uint64_t sub_1C0E82A08@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 97);
  return result;
}

uint64_t sub_1C0E82A50(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 97) = v2;
  return result;
}

uint64_t sub_1C0E82A94@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 120);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0E82AE4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 136);
  *a2 = *(void *)(v3 + 128);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatImageNode(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatImageNode);
}

uint64_t dispatch thunk of FormatImageNode.__allocating_init(identifier:size:resize:adjustments:style:animation:content:zIndex:visibility:isUserInteractionEnabled:shouldCancelContextMenu:accessibilityRole:selectors:name:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t sub_1C0E82B90()
{
  sub_1BFF05BFC(0, (unint64_t *)&qword_1EB871380, MEMORY[0x1E4FABA40]);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_release();
  swift_release();
  swift_unownedRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  return swift_deallocObject();
}

uint64_t sub_1C0E82CA0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t FeedDescriptor.init(feedDescriptor:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

id FeedDescriptor.feedDescriptor.getter()
{
  return *v0;
}

id FeedDescriptor.groupItem.getter@<X0>(id *a1@<X8>)
{
  id v3 = *v1;
  *a1 = *v1;
  type metadata accessor for FeedGroupItem();
  swift_storeEnumTagMultiPayload();
  return v3;
}

id sub_1C0E82D48@<X0>(id *a1@<X8>)
{
  id v3 = *v1;
  *a1 = *v1;
  type metadata accessor for FeedGroupItem();
  swift_storeEnumTagMultiPayload();
  return v3;
}

void *sub_1C0E82DA8()
{
  uint64_t v1 = *v0;
  FCFeedDescriptor.feedTag.getter();
  uint64_t ObjectType = swift_getObjectType();
  id v3 = sub_1BFFAFDA8(0x2D64656566, 0xE500000000000000, ObjectType);
  swift_unknownObjectRelease();
  id v4 = objc_msgSend(v1, sel_alternativeFeedDescriptor);
  if (v4)
  {
    uint64_t v5 = v4;
    FCFeedDescriptor.feedTag.getter();
    uint64_t v6 = swift_getObjectType();
    uint64_t v7 = sub_1BFFAFDA8(0x646565662D746C61, 0xE90000000000002DLL, v6);
    swift_unknownObjectRelease();
    sub_1BFEF95B8((uint64_t)v7);
  }
  return v3;
}

ValueMetadata *type metadata accessor for FeedDescriptor()
{
  return &type metadata for FeedDescriptor;
}

uint64_t sub_1C0E82E9C(uint64_t result, uint64_t a2)
{
  if ((result & 0x8000000000000000) == 0) {
    return a2;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0E82EDC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  int64_t v5 = a5 >> 1;
  unint64_t v6 = (a5 >> 1) - a4;
  if (__OFSUB__(a5 >> 1, a4))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v7 = v6 - result;
  if (__OFSUB__(v6, result))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v7 < 1)
  {
    uint64_t v7 = 0;
  }
  else if ((v6 & 0x8000000000000000) == 0)
  {
    int64_t v8 = a5 >> 1;
    if (v6 < v7)
    {
LABEL_10:
      if (v8 >= a4)
      {
        if (v5 >= a4)
        {
          if (v5 >= v8)
          {
            if ((v8 & 0x8000000000000000) == 0) {
              return a2;
            }
            goto LABEL_21;
          }
LABEL_20:
          __break(1u);
LABEL_21:
          __break(1u);
          goto LABEL_22;
        }
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
  }
  int64_t v8 = a4 + v7;
  if (!__OFADD__(a4, v7)) {
    goto LABEL_10;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t FeedItemIdentifier.init(identifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1BFF27ECC();
  unint64_t v6 = (void *)sub_1C151FF1C();
  uint64_t v7 = (uint64_t)v6;
  unint64_t v8 = v6[2];
  if (!v8)
  {
    MEMORY[0x1C18C7910](0x7261696C69787561, 0xE900000000000079);
LABEL_17:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_18:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    char v25 = 0;
LABEL_23:
    *(void *)a3 = a1;
    *(void *)(a3 + 8) = a2;
    *(void *)(a3 + 16) = v23;
    *(void *)(a3 + 24) = v24;
    *(unsigned char *)(a3 + 32) = v25;
    return result;
  }
  uint64_t v34 = a2;
  unint64_t v11 = v6[4];
  unint64_t v9 = v6[5];
  uint64_t v10 = v6 + 4;
  uint64_t v13 = v6[6];
  uint64_t v12 = v6[7];
  swift_bridgeObjectRetain();
  unint64_t v14 = MEMORY[0x1C18C7910](0x7261696C69787561, 0xE900000000000079);
  if (!v12)
  {
    a2 = v34;
    goto LABEL_17;
  }
  if (v13 == v16 && v12 == v17 && v11 >> 16 == v14 >> 16 && v9 >> 16 == v15 >> 16)
  {
    uint64_t result = swift_bridgeObjectRelease_n();
  }
  else
  {
    char v21 = sub_1C152087C();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    a2 = v34;
    if ((v21 & 1) == 0) {
      goto LABEL_18;
    }
  }
  if (v8 > *(void *)(v7 + 16))
  {
    __break(1u);
  }
  else
  {
    CGFloat v26 = &v10[4 * v8];
    uint64_t v27 = *(v26 - 4);
    uint64_t v28 = *(v26 - 3);
    uint64_t v30 = *(v26 - 2);
    uint64_t v29 = *(v26 - 1);
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRelease();
    if (*(void *)(v7 + 16) >= v8)
    {
      char v25 = 1;
      sub_1C0E82EDC(1, v7, v7 + 32, 1, (2 * v8) | 1);
      sub_1C0E831D0();
      sub_1C0E83228();
      uint64_t v31 = v27;
      sub_1C046D770();
      a1 = sub_1C151EA7C();
      a2 = v32;
      swift_unknownObjectRelease();
      uint64_t v23 = MEMORY[0x1C18C6220](v31, v28, v30, v29);
      uint64_t v24 = v33;
      uint64_t result = swift_bridgeObjectRelease();
      goto LABEL_23;
    }
  }
  __break(1u);
  return result;
}

void sub_1C0E831D0()
{
  if (!qword_1EA1A8068)
  {
    unint64_t v0 = sub_1C151FF4C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A8068);
    }
  }
}

unint64_t sub_1C0E83228()
{
  unint64_t result = qword_1EA1A8070;
  if (!qword_1EA1A8070)
  {
    sub_1C0E831D0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8070);
  }
  return result;
}

uint64_t Blueprint.section(for:)(long long *a1)
{
  sub_1C0E832CC(a1, (uint64_t)&v2);
  return sub_1C151CC4C();
}

uint64_t sub_1C0E832CC(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(unsigned char *)(a2 + 32) = *((unsigned char *)a1 + 32);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1C0E832E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = vars8;
  }
  return swift_bridgeObjectRetain();
}

uint64_t destroy for FeedItemIdentifier(uint64_t a1)
{
  return sub_1C0E83338(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t sub_1C0E83338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (a5)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for FeedItemIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_1C0E832E4(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for FeedItemIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_1C0E832E4(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  char v12 = *(unsigned char *)(a1 + 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  sub_1C0E83338(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for FeedItemIdentifier(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  char v8 = *(unsigned char *)(a1 + 32);
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  *(unsigned char *)(a1 + 32) = v3;
  sub_1C0E83338(v4, v6, v5, v7, v8);
  return a1;
}

ValueMetadata *type metadata accessor for FeedItemIdentifier()
{
  return &type metadata for FeedItemIdentifier;
}

void *LayeredMediaLayerProviderFactory.createLayerProvider(loader:traits:)(uint64_t a1, uint64_t a2)
{
  sub_1BFC66384(a1, (uint64_t)v24);
  sub_1BFC66384(v2 + 16, (uint64_t)v22);
  uint64_t v4 = *(void *)(v2 + 56);
  uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
  __n128 v6 = MEMORY[0x1F4188790](v5);
  char v8 = (void *)((char *)&v21[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v9 + 16))(v8, v6);
  uint64_t v10 = *v8;
  uint64_t v11 = type metadata accessor for LayeredMediaVariantFactory();
  v21[3] = v11;
  v21[4] = &off_1F1B9F868;
  v21[0] = v10;
  type metadata accessor for LayeredMediaLayerProvider();
  char v12 = (void *)swift_allocObject();
  uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v11);
  __n128 v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (void *)((char *)&v21[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v17 + 16))(v16, v14);
  uint64_t v18 = *v16;
  v12[11] = v11;
  v12[12] = &off_1F1B9F868;
  char v12[8] = v18;
  sub_1BFC773DC(v24, (uint64_t)(v12 + 2));
  _OWORD v12[7] = a2;
  v12[13] = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return v12;
}

uint64_t LayeredMediaLayerProviderFactory.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return v0;
}

uint64_t LayeredMediaLayerProviderFactory.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

void *sub_1C0E8371C(uint64_t a1, uint64_t a2)
{
  return LayeredMediaLayerProviderFactory.createLayerProvider(loader:traits:)(a1, a2);
}

uint64_t dispatch thunk of LayeredMediaLayerProviderFactoryType.createLayerProvider(loader:traits:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t method lookup function for LayeredMediaLayerProviderFactory(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LayeredMediaLayerProviderFactory);
}

uint64_t sub_1C0E83770@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a1;
  uint64_t v29 = a2;
  uint64_t v3 = sub_1C151B0DC();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  __n128 v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C151B10C();
  uint64_t v27 = *(void *)(v7 - 8);
  uint64_t v28 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v30 = *(_OWORD *)(v2 + 16);
  uint64_t v10 = *(void *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 40);
  uint64_t v12 = *(void *)(v2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFDB3920(v12);
  uint64_t v13 = swift_bridgeObjectRetain();
  sub_1C024C2BC(v13);
  swift_bridgeObjectRelease();
  *(_OWORD *)__n128 v6 = v30;
  *((void *)v6 + 2) = v10;
  *((void *)v6 + 3) = v11;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FAC408], v3);
  swift_bridgeObjectRetain();
  *(void *)&long long v30 = v6;
  sub_1C151B09C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFDB3960(v12);
  CGFloat v26 = v9;
  unint64_t v14 = sub_1C151B0AC();
  unint64_t v15 = v14;
  if (!(v14 >> 62))
  {
    uint64_t v16 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v16) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    uint64_t v24 = v28;
    char v25 = v26;
    sub_1C151B0FC();
    sub_1C151B0EC();
    sub_1C151B09C();
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v25, v24);
  }
  uint64_t v16 = sub_1C15204BC();
  if (!v16) {
    goto LABEL_11;
  }
LABEL_3:
  uint64_t v32 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1C152028C();
  if ((v16 & 0x8000000000000000) == 0)
  {
    uint64_t v18 = self;
    uint64_t v19 = 0;
    do
    {
      if ((v15 & 0xC000000000000001) != 0) {
        id v20 = (id)MEMORY[0x1C18C7CB0](v19, v15);
      }
      else {
        id v20 = *(id *)(v15 + 8 * v19 + 32);
      }
      char v21 = v20;
      ++v19;
      id v22 = objc_msgSend(v18, sel_traitCollectionWithUserInterfaceStyle_, v31);
      id v23 = objc_msgSend(v21, sel_resolvedColorWithTraitCollection_, v22);

      sub_1C152025C();
      sub_1C152029C();
      sub_1C15202AC();
      sub_1C152026C();
    }
    while (v16 != v19);
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t FormatGradient.auxViewRequirements.getter()
{
  return sub_1C00B92B4((uint64_t)&unk_1F1B89CA8);
}

uint64_t FormatGradient.colors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatGradient.locations.getter()
{
  return swift_bridgeObjectRetain();
}

__n128 FormatGradient.direction.getter@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 16);
  long long v3 = *(_OWORD *)(v1 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t FormatGradient.offset.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 56);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BFDB3920(v2);
}

uint64_t sub_1C0E83B40()
{
  return sub_1C00B92B4((uint64_t)&unk_1F1B68880);
}

BOOL _s8NewsFeed14FormatGradientV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  double v4 = *(double *)(a1 + 16);
  double v3 = *(double *)(a1 + 24);
  double v6 = *(double *)(a1 + 32);
  double v5 = *(double *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  uint64_t v9 = *(void *)(a2 + 8);
  double v11 = *(double *)(a2 + 16);
  double v10 = *(double *)(a2 + 24);
  double v13 = *(double *)(a2 + 32);
  double v12 = *(double *)(a2 + 40);
  uint64_t v15 = *(void *)(a2 + 48);
  uint64_t v14 = *(void *)(a2 + 56);
  if ((sub_1C00F0618(*(void *)a1, *(void *)a2) & 1) == 0) {
    return 0;
  }
  if (!v2)
  {
    if (v9) {
      return 0;
    }
    BOOL v21 = v4 == v11 && v3 == v10;
    BOOL v22 = v21 && v6 == v13;
    if (!v22 || v5 != v12) {
      return 0;
    }
    goto LABEL_28;
  }
  if (!v9) {
    return 0;
  }
  BOOL v16 = sub_1C00F1720(v2, v9);
  BOOL result = 0;
  if (v16)
  {
    BOOL v18 = v4 == v11 && v3 == v10;
    BOOL v19 = v18 && v6 == v13;
    if (v19 && v5 == v12)
    {
LABEL_28:
      if (v8)
      {
        if (v15)
        {
          sub_1BFDB3920(v8);
          sub_1BFDB3920(v8);
          sub_1BFDB3920(v15);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v24 = sub_1C00DE998(v8, v15);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v24)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            char v25 = sub_1C00DE998(v7, v14);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1BFDB3960(v15);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1BFDB3960(v8);
            return (v25 & 1) != 0;
          }
          sub_1BFDB3960(v15);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v26 = v8;
LABEL_38:
          sub_1BFDB3960(v26);
          return 0;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else if (!v15)
      {
        return 1;
      }
      sub_1BFDB3920(v15);
      sub_1BFDB3960(v8);
      uint64_t v26 = v15;
      goto LABEL_38;
    }
  }
  return result;
}

void *sub_1C0E83D40(uint64_t *a1)
{
  sub_1C0181BEC(0);
  uint64_t v70 = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  double v5 = (char *)v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *a1;
  uint64_t v8 = a1[2];
  uint64_t v7 = a1[3];
  int64_t v75 = a1[1];
  uint64_t v76 = v7;
  uint64_t v9 = a1[4];
  uint64_t v78 = (void (*)(void, void, void, void))a1[5];
  uint64_t v79 = v9;
  uint64_t v10 = a1[6];
  uint64_t v67 = a1[7];
  uint64_t v68 = v10;
  double v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1BFF5D868(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  long long v77 = xmmword_1C152C7F0;
  uint64_t v69 = (void *)inited;
  *(_OWORD *)(inited + 16) = xmmword_1C152C7F0;
  sub_1BFF5D868(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v11);
  uint64_t v13 = *(void *)(v3 + 72);
  uint64_t v14 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v15 = (v14 + 32) & ~v14;
  uint64_t v65 = v14 | 7;
  uint64_t v66 = v16;
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = v77;
  *(void *)&long long v77 = v15;
  BOOL v18 = (void *)(v17 + v15);
  uint64_t v19 = v6;
  char v20 = v6 == 0;
  if (v20) {
    uint64_t v21 = 0;
  }
  else {
    uint64_t v21 = v8;
  }
  if (v20) {
    uint64_t v22 = 0;
  }
  else {
    uint64_t v22 = v76;
  }
  uint64_t v23 = v79;
  if (v20) {
    uint64_t v23 = 0;
  }
  uint64_t v76 = v23;
  char v24 = v78;
  if (v20) {
    char v24 = 0;
  }
  uint64_t v78 = v24;
  sub_1C0438BB8(0x6F50207472617453, 0xEB00000000746E69, v21, v22, v20, v18);
  uint64_t v25 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56);
  uint64_t v28 = v26 + 56;
  v27(v18, 0, 1, v25);
  uint64_t v79 = v13;
  uint64_t v29 = (void *)((char *)v18 + v13);
  sub_1C0438BB8(0x6E696F5020646E45, 0xE900000000000074, v76, (uint64_t)v78, v20, v29);
  uint64_t v78 = (void (*)(void, void, void, void))v27;
  v27(v29, 0, 1, v25);
  uint64_t v30 = v19;
  if (v19)
  {
    uint64_t v19 = v75;
    swift_bridgeObjectRetain();
  }
  uint64_t v31 = 2 * v79;
  sub_1C0438F64(0x6E6F697461636F4CLL, 0xE900000000000073, v19, (void *)((char *)v18 + 2 * v79));
  v78((char *)v18 + v31, 0, 1, v25);
  sub_1C09BCFA4(0x746E656964617247, 0xE800000000000000, 0, 0, v17, v80);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v32 = v69;
  v69[7] = &type metadata for FormatInspectionGroup;
  v32[8] = &off_1F1BDEC90;
  uint64_t v33 = swift_allocObject();
  v32[4] = v33;
  *(void *)(v33 + 48) = v81;
  long long v34 = v80[1];
  *(_OWORD *)(v33 + 16) = v80[0];
  *(_OWORD *)(v33 + 32) = v34;
  uint64_t v35 = MEMORY[0x1E4FBC860];
  if (v30)
  {
    swift_bridgeObjectRetain();
    uint64_t v36 = v30;
  }
  else
  {
    uint64_t v36 = MEMORY[0x1E4FBC860];
  }
  uint64_t v64 = v32 + 4;
  int64_t v37 = *(void *)(v36 + 16);
  if (v37)
  {
    v62[1] = v31;
    uint64_t v63 = v30;
    int64_t v75 = v37;
    uint64_t v76 = v28;
    *(void *)&v84[0] = v35;
    sub_1C05F62D0(0, v37, 0);
    uint64_t v35 = *(void *)&v84[0];
    uint64_t v38 = 0;
    uint64_t v74 = type metadata accessor for FormatInspectionItem.Value(0);
    uint64_t v39 = *(void *)(v74 - 8);
    uint64_t v40 = *(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56);
    uint64_t v72 = v39 + 56;
    uint64_t v73 = v40;
    id v41 = (long long *)v5;
    uint64_t v42 = v5 + 16;
    long long v71 = xmmword_1C1549090;
    do
    {
      uint64_t v43 = v36;
      uint64_t v44 = (void *)((char *)v41 + *(int *)(v25 + 24));
      *uint64_t v44 = *(void *)(v36 + 8 * v38 + 32);
      uint64_t v45 = v74;
      swift_storeEnumTagMultiPayload();
      v73(v44, 0, 1, v45);
      *id v41 = v71;
      *uint64_t v42 = 0;
      v42[1] = 0;
      id v46 = (char *)v41 + *(int *)(v25 + 28);
      *(void *)id v46 = 0;
      *((void *)v46 + 1) = 0;
      v46[16] = -1;
      v78(v41, 0, 1, v25);
      *(void *)&v84[0] = v35;
      unint64_t v47 = *(void *)(v35 + 16);
      unint64_t v48 = *(void *)(v35 + 24);
      swift_retain();
      if (v47 >= v48 >> 1)
      {
        sub_1C05F62D0(v48 > 1, v47 + 1, 1);
        uint64_t v35 = *(void *)&v84[0];
      }
      ++v38;
      *(void *)(v35 + 16) = v47 + 1;
      sub_1C0100634((uint64_t)v41, v35 + v77 + v47 * v79);
      uint64_t v36 = v43;
    }
    while (v75 != v38);
    swift_bridgeObjectRelease();
    uint64_t v32 = v69;
    uint64_t v30 = v63;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1C09BCFA4(0x73726F6C6F43, 0xE600000000000000, 0, 0, v35, v82);
  swift_bridgeObjectRelease();
  v32[12] = &type metadata for FormatInspectionGroup;
  v32[13] = &off_1F1BDEC90;
  uint64_t v49 = swift_allocObject();
  v32[9] = v49;
  *(void *)(v49 + 48) = v83;
  long long v50 = v82[1];
  *(_OWORD *)(v49 + 16) = v82[0];
  *(_OWORD *)(v49 + 32) = v50;
  uint64_t v51 = v77;
  uint64_t v52 = swift_allocObject();
  *(_OWORD *)(v52 + 16) = xmmword_1C1527210;
  uint64_t v53 = (void *)(v52 + v51);
  uint64_t v54 = v67;
  if (v30 && v68)
  {
    uint64_t v55 = v68;
    swift_bridgeObjectRetain();
    sub_1C042F6B0(88, 0xE100000000000000, v55, v53);
    char v56 = (void (*)(char *, void, uint64_t, uint64_t))v78;
    v78(v53, 0, 1, v25);
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_1C042F6B0(88, 0xE100000000000000, 0, v53);
    char v56 = (void (*)(char *, void, uint64_t, uint64_t))v78;
    v78(v53, 0, 1, v25);
    uint64_t v54 = 0;
  }
  long long v57 = (char *)v53 + v79;
  sub_1C042F6B0(89, 0xE100000000000000, v54, (void *)((char *)v53 + v79));
  v56(v57, 0, 1, v25);
  sub_1C09BCFA4(0x74657366664FLL, 0xE600000000000000, 0, 0, v52, v84);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v32[17] = &type metadata for FormatInspectionGroup;
  v32[18] = &off_1F1BDEC90;
  uint64_t v58 = swift_allocObject();
  v32[14] = v58;
  *(void *)(v58 + 48) = v85;
  long long v59 = v84[1];
  *(_OWORD *)(v58 + 16) = v84[0];
  *(_OWORD *)(v58 + 32) = v59;
  uint64_t v60 = sub_1C131B79C((uint64_t)v32);
  swift_setDeallocating();
  sub_1C01004A4(0);
  swift_arrayDestroy();
  return v60;
}

unint64_t sub_1C0E844B4(uint64_t a1)
{
  unint64_t result = sub_1C0E844DC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0E844DC()
{
  unint64_t result = qword_1EA1A8078;
  if (!qword_1EA1A8078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8078);
  }
  return result;
}

unint64_t sub_1C0E84530(void *a1)
{
  a1[1] = sub_1BFDD94E8();
  a1[2] = sub_1BFDAB90C();
  unint64_t result = sub_1C0E84568();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0E84568()
{
  unint64_t result = qword_1EA1A8080;
  if (!qword_1EA1A8080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8080);
  }
  return result;
}

uint64_t destroy for FormatGradient(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 48);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for FormatGradient(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  uint64_t v7 = (_OWORD *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    uint64_t v8 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = v6;
    *(void *)(a1 + 56) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *v7;
  }
  return a1;
}

void *assignWithCopy for FormatGradient(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1[6];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  uint64_t v5 = a2[6];
  if (!v4)
  {
    if (v5)
    {
      a1[6] = v5;
      a1[7] = a2[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
    return a1;
  }
  if (!v5)
  {
    sub_1C0E8479C((uint64_t)(a1 + 6));
    goto LABEL_7;
  }
  a1[6] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0E8479C(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for FormatGradient(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 48);
  uint64_t v5 = *(void *)(a1 + 48);
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  if (!v5) {
    goto LABEL_5;
  }
  if (!v4)
  {
    sub_1C0E8479C(a1 + 48);
LABEL_5:
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    return a1;
  }
  *(void *)(a1 + 48) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatGradient()
{
  return &type metadata for FormatGradient;
}

uint64_t sub_1C0E8489C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t FeedSuggestionClusteringRequest.configuration.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t FeedSuggestionClusteringRequest.feedItems.getter()
{
  return swift_bridgeObjectRetain();
}

id FeedSuggestionClusteringRequest.feedItemScoreProfiles.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t FeedSuggestionClusteringRequest.feedContextByFeedID.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedSuggestionClusteringRequest.ignoreTagIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedSuggestionClusteringRequest.tagIDSorter.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_retain();
  return v1;
}

uint64_t FeedSuggestionClusteringRequest.init(configuration:feedItems:feedItemScoreProfiles:feedContextByFeedID:ignoreTagIDs:tagIDSorter:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  *a8 = result;
  a8[1] = a2;
  a8[2] = a3;
  a8[3] = a4;
  a8[4] = a5;
  a8[5] = a6;
  a8[6] = a7;
  return result;
}

uint64_t destroy for FeedSuggestionClusteringRequest(uint64_t a1)
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for FeedSuggestionClusteringRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v4;
  uint64_t v6 = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = v6;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  id v7 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for FeedSuggestionClusteringRequest(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[2];
  uint64_t v5 = (void *)a1[2];
  a1[2] = v4;
  id v6 = v4;

  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[6];
  a1[5] = a2[5];
  a1[6] = v7;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for FeedSuggestionClusteringRequest(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();

  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = v4;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for FeedSuggestionClusteringRequest()
{
  return &type metadata for FeedSuggestionClusteringRequest;
}

uint64_t sub_1C0E84B7C()
{
  uint64_t v1 = *(void *)(v0 + 8);
  char v2 = *(unsigned char *)v0;
  sub_1C1520DBC();
  sub_1C0A0DF90(v2);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  sub_1C1520DDC();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_1C1476008((uint64_t)v4, v1);
    swift_bridgeObjectRelease();
  }
  return sub_1C1520E0C();
}

uint64_t sub_1C0E84C1C(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 8);
  sub_1C0A0DF90(*(unsigned char *)v1);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  if (!v3) {
    return sub_1C1520DDC();
  }
  sub_1C1520DDC();
  swift_bridgeObjectRetain();
  sub_1C1476008(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0E84CC4()
{
  uint64_t v1 = *(void *)(v0 + 8);
  char v2 = *(unsigned char *)v0;
  sub_1C1520DBC();
  sub_1C0A0DF90(v2);
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  sub_1C1520DDC();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_1C1476008((uint64_t)v4, v1);
    swift_bridgeObjectRelease();
  }
  return sub_1C1520E0C();
}

uint64_t sub_1C0E84D60(uint64_t a1, uint64_t a2)
{
  return sub_1C0E86200(*(unsigned char *)a1, *(void *)(a1 + 8), *(unsigned char *)a2, *(void *)(a2 + 8));
}

void *sub_1C0E84D78(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  uint64_t v55 = a2;
  uint64_t v54 = a1;
  uint64_t v51 = *v3;
  uint64_t v49 = sub_1C1515A1C();
  uint64_t v48 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  id v46 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_1C1515BDC();
  uint64_t v45 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  uint64_t v44 = (uint64_t)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF2E9EC(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v53 = (char *)&v40 - v8;
  uint64_t v52 = sub_1C1515A2C();
  uint64_t v9 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  double v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C1515A3C();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1C1515A5C();
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v43 = sub_1C1515B3C();
  uint64_t v42 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  id v41 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v50 = OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_styles;
  *(void *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_styles) = MEMORY[0x1E4FBC868];
  uint64_t v19 = (_OWORD *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_baseStyle);
  long long v20 = a3[5];
  v19[4] = a3[4];
  v19[5] = v20;
  v19[6] = a3[6];
  *(_OWORD *)((char *)v19 + 105) = *(_OWORD *)((char *)a3 + 105);
  long long v21 = a3[1];
  *uint64_t v19 = *a3;
  v19[1] = v21;
  long long v22 = a3[3];
  _OWORD v19[2] = a3[2];
  _OWORD v19[3] = v22;
  long long v59 = v3;
  *((unsigned char *)v3 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_buildType) = 1;
  char v24 = (char *)&v40 - v23;
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4F27300], v12);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4F272E8], v52);
  sub_1BFF6364C((uint64_t)a3);
  sub_1C1515A4C();
  uint64_t v25 = sub_1C1515FDC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v53, 1, 1, v25);
  sub_1C0078880();
  uint64_t v26 = v56;
  sub_1C1515B2C();
  if (v26)
  {
    sub_1BFF630AC((uint64_t)a3);
    uint64_t v27 = v59;
    swift_bridgeObjectRelease();
    long long v28 = v19[5];
    v57[4] = v19[4];
    v57[5] = v28;
    *(_OWORD *)uint64_t v58 = v19[6];
    *(_OWORD *)&v58[9] = *(_OWORD *)((char *)v19 + 105);
    long long v29 = v19[1];
    v57[0] = *v19;
    v57[1] = v29;
    long long v30 = v19[3];
    v57[2] = v19[2];
    v57[3] = v30;
    sub_1BFF630AC((uint64_t)v57);
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v27 = v59;
    uint64_t v31 = v42;
    uint64_t v32 = v43;
    (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))((uint64_t)v59 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_attributedString, v24, v43);
    uint64_t v33 = (uint64_t)v27 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_attributedString;
    swift_beginAccess();
    uint64_t v34 = (uint64_t)v41;
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v41, v33, v32);
    uint64_t v35 = v44;
    sub_1BFF669D0(v34, v44);
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v34, v32);
    uint64_t v36 = v48;
    int64_t v37 = v46;
    uint64_t v38 = v49;
    (*(void (**)(char *, void, uint64_t))(v48 + 104))(v46, *MEMORY[0x1E4F272C8], v49);
    swift_beginAccess();
    sub_1C15159DC();
    swift_endAccess();
    sub_1BFF630AC((uint64_t)a3);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v38);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v35, v47);
  }
  return v27;
}

uint64_t sub_1C0E854A8(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3;
  sub_1C0E86A1C(a3, (uint64_t)v42);
  uint64_t v7 = sub_1C0E86A1C((uint64_t)v42, (uint64_t)v46);
  uint64_t v8 = *(void *)(*(void *)(v3 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_baseStyle + 104) + 288);
  if (v8 && *(void *)(v8 + 16))
  {
    uint64_t v47 = a2;
    uint64_t v9 = a1(v7);
    uint64_t v11 = v10;
    uint64_t v12 = *(void *)(v8 + 16);
    if (v12)
    {
      uint64_t v13 = v9;
      uint64_t v38 = v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v14 = 0;
      uint64_t v15 = v11;
      uint64_t v37 = v13;
      do
      {
        int v19 = *(unsigned __int8 *)(v8 + v14 + 32);
        if (*(unsigned char *)(v8 + v14 + 32))
        {
          uint64_t v43 = v13;
          uint64_t v44 = v15;
          if (v19 == 1)
          {
            sub_1BFF27ECC();
            uint64_t v16 = sub_1C151FE7C();
          }
          else
          {
            sub_1BFF27ECC();
            uint64_t v16 = sub_1C151FEAC();
          }
        }
        else
        {
          uint64_t v43 = v13;
          uint64_t v44 = v15;
          sub_1BFF27ECC();
          uint64_t v16 = sub_1C151FE8C();
        }
        uint64_t v13 = v16;
        uint64_t v18 = v17;
        swift_bridgeObjectRelease();
        uint64_t v15 = v18;
        ++v14;
      }
      while (v12 != v14);
      swift_bridgeObjectRelease();
      if (v37 == v13 && v11 == v18)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v13 = 0;
        uint64_t v15 = 0;
        uint64_t v4 = v38;
      }
      else
      {
        char v32 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        if (v32)
        {
          swift_bridgeObjectRelease();
          uint64_t v13 = 0;
          uint64_t v15 = 0;
        }
        uint64_t v4 = v38;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v13 = 0;
      uint64_t v15 = 0;
    }
  }
  else
  {
    uint64_t v13 = 0;
    uint64_t v15 = 0;
  }
  sub_1C0E86A1C(v4, (uint64_t)&v43);
  if (sub_1C00A0A24(&v43) != 1)
  {
    uint64_t v20 = *(void *)(v45 + 288);
    if (v20)
    {
      if (*(void *)(v20 + 16))
      {
        if (v15)
        {
          sub_1C0E86A1C((uint64_t)v46, (uint64_t)&v40);
          sub_1BFF6364C((uint64_t)&v40);
          uint64_t v21 = v13;
          uint64_t v22 = v15;
          uint64_t v23 = *(void *)(v20 + 16);
          if (v23) {
            goto LABEL_17;
          }
        }
        else
        {
          sub_1C0E86A1C((uint64_t)v46, (uint64_t)&v40);
          uint64_t v34 = sub_1BFF6364C((uint64_t)&v40);
          uint64_t v21 = a1(v34);
          uint64_t v22 = v35;
          uint64_t v23 = *(void *)(v20 + 16);
          if (v23)
          {
LABEL_17:
            uint64_t v39 = v4;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v24 = 0;
            uint64_t v47 = v22;
            uint64_t v25 = v22;
            uint64_t v26 = v21;
            do
            {
              int v30 = *(unsigned __int8 *)(v20 + v24 + 32);
              if (*(unsigned char *)(v20 + v24 + 32))
              {
                uint64_t v40 = v26;
                uint64_t v41 = v25;
                if (v30 == 1)
                {
                  sub_1BFF27ECC();
                  uint64_t v27 = sub_1C151FE7C();
                }
                else
                {
                  sub_1BFF27ECC();
                  uint64_t v27 = sub_1C151FEAC();
                }
              }
              else
              {
                uint64_t v40 = v26;
                uint64_t v41 = v25;
                sub_1BFF27ECC();
                uint64_t v27 = sub_1C151FE8C();
              }
              uint64_t v26 = v27;
              uint64_t v29 = v28;
              swift_bridgeObjectRelease();
              uint64_t v25 = v29;
              ++v24;
            }
            while (v23 != v24);
            swift_bridgeObjectRelease();
            BOOL v33 = v21 == v26 && v47 == v29;
            if (v33 || (sub_1C1520A9C() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              sub_1C0E86B8C(v39);
              swift_bridgeObjectRelease();
            }
            else
            {
              sub_1C0E86B8C(v39);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return v26;
            }
            return v13;
          }
        }
        swift_bridgeObjectRetain();
        sub_1C0E86B8C(v4);
        swift_bridgeObjectRelease();
      }
    }
  }
  return v13;
}

uint64_t sub_1C0E8588C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v6 = v3;
  uint64_t v10 = (uint64_t *)(v3 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_styles);
  swift_beginAccess();
  uint64_t v11 = *v10;
  uint64_t v12 = *(void *)(*v10 + 16);
  swift_bridgeObjectRetain();
  if (v12)
  {
    swift_bridgeObjectRetain();
    unint64_t v13 = sub_1C10520A4(a1, a2);
    if (v14)
    {
      uint64_t v15 = (_OWORD *)(*(void *)(v11 + 56) + (v13 << 7));
      long long v17 = v15[2];
      long long v16 = v15[3];
      long long v18 = v15[1];
      *(_OWORD *)uint64_t v58 = *v15;
      *(_OWORD *)&v58[16] = v18;
      *(_OWORD *)long long v59 = v17;
      *(_OWORD *)&v59[16] = v16;
      long long v19 = v15[4];
      long long v20 = v15[5];
      long long v21 = v15[6];
      *(_OWORD *)&v62[9] = *(_OWORD *)((char *)v15 + 105);
      long long v61 = v20;
      *(_OWORD *)unsigned __int8 v62 = v21;
      long long v60 = v19;
      swift_endAccess();
      sub_1BFF6364C((uint64_t)v58);
      swift_bridgeObjectRelease();
      char v22 = v62[24];
      long long v23 = *(_OWORD *)&v62[8];
      uint64_t v24 = *((void *)&v61 + 1);
      char v25 = v62[0];
      char v26 = v61;
      long long v27 = v60;
      char v28 = v59[24];
      long long v29 = *(_OWORD *)&v59[8];
      uint64_t v30 = *(void *)&v58[24];
      char v31 = v59[0];
      long long v32 = *(_OWORD *)&v58[8];
      uint64_t v33 = *(void *)v58;
LABEL_4:
      *(void *)uint64_t v58 = v33;
      *(_OWORD *)&v58[8] = v32;
      *(void *)&v58[24] = v30;
      v59[0] = v31;
      *(_OWORD *)&v59[8] = v29;
      v59[24] = v28;
      long long v60 = v27;
      LOBYTE(v61) = v26;
      *((void *)&v61 + 1) = v24;
      v62[0] = v25;
      *(_OWORD *)&v62[8] = v23;
      v62[24] = v22;
      v75[4] = v27;
      v75[5] = v61;
      v76[0] = *(_OWORD *)v62;
      *(_OWORD *)((char *)v76 + 9) = *(_OWORD *)&v62[9];
      v75[0] = *(_OWORD *)v58;
      v75[1] = *(_OWORD *)&v58[16];
      v75[2] = *(_OWORD *)v59;
      v75[3] = *(_OWORD *)&v59[16];
      swift_beginAccess();
      sub_1BFF6364C((uint64_t)v58);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v57 = *v10;
      uint64_t *v10 = 0x8000000000000000;
      sub_1C1065F70(v75, a1, a2, isUniquelyReferenced_nonNull_native);
      uint64_t *v10 = v57;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_endAccess();
      long long v36 = v61;
      a3[4] = v60;
      a3[5] = v36;
      a3[6] = *(_OWORD *)v62;
      *(_OWORD *)((char *)a3 + 105) = *(_OWORD *)&v62[9];
      long long v37 = *(_OWORD *)&v58[16];
      *a3 = *(_OWORD *)v58;
      a3[1] = v37;
      long long v38 = *(_OWORD *)&v59[16];
      a3[2] = *(_OWORD *)v59;
      a3[3] = v38;
      return result;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v54 = v10;
  uint64_t v55 = a3;
  swift_endAccess();
  uint64_t v56 = *(void **)(v6 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_baseStyle);
  uint64_t v39 = *(void *)(v6 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_baseStyle + 104);
  if (a2) {
    uint64_t v40 = a2;
  }
  else {
    uint64_t v40 = MEMORY[0x1E4FBC870];
  }
  sub_1BFEFDD10(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  uint64_t v77 = a1;
  *(void *)(inited + 32) = sub_1C0A0DA78(a1);
  *(void *)(inited + 40) = v42;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v43 = v5;
  uint64_t v44 = sub_1BFFB9A98(inited, v40);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t v45 = (uint64_t *)sub_1BFF1B2E4(v44, 0);
  swift_bridgeObjectRelease();
  id v46 = (uint64_t *)(*(uint64_t *)((char *)v45 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                  + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  uint64_t v48 = *v46;
  uint64_t v47 = v46[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v49 = swift_retain();
  uint64_t v50 = sub_1BFF6B3AC(v49, (uint64_t)v45, v48, v47);
  if (!v43)
  {
    a1 = v50;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    if (!a1)
    {
      swift_retain();
      a1 = v39;
    }
    char v51 = v77;
    int v52 = dword_1C15B0FF8[(char)v77];
    swift_retain();
    uint64_t v53 = sub_1C0609070(v56, v52, v39, a1, v45);
    swift_release();
    sub_1BFF6492C(v53, a1, (objc_class *)v45, v77, &v63);
    swift_bridgeObjectRelease();
    LOBYTE(a1) = v51;
    char v22 = v74;
    long long v23 = v73;
    uint64_t v24 = v71;
    char v25 = v72;
    char v26 = v70;
    long long v27 = v69;
    char v28 = v68;
    long long v29 = v67;
    char v31 = v66;
    long long v32 = v64;
    uint64_t v30 = v65;
    uint64_t v33 = v63;
    uint64_t v10 = v54;
    a3 = v55;
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t sub_1C0E85D5C()
{
  uint64_t v0 = sub_1C15159AC();
  MEMORY[0x1F4188790](v0);
  uint64_t v1 = sub_1C1515CBC();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF2F030();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1515AAC();
  swift_beginAccess();
  sub_1C0E868F8(&qword_1EB863388, (void (*)(uint64_t))sub_1BFF2F030);
  sub_1C1515B6C();
  swift_endAccess();
  sub_1C0E86898((uint64_t)v7, (uint64_t (*)(void))sub_1BFF2F030);
  sub_1C1515C7C();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1C0E868F8(&qword_1EA19CAB0, MEMORY[0x1E4F27270]);
  return sub_1C151E8CC();
}

uint64_t sub_1C0E85FB4()
{
  return type metadata accessor for FormatAttributedString();
}

unsigned char *storeEnumTagSinglePayload for FormatAttributedString.BuildType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0E86088);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatAttributedString.BuildType()
{
  return &type metadata for FormatAttributedString.BuildType;
}

uint64_t assignWithCopy for FormatAttributedString.StyleKey(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatAttributedString.StyleKey(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatAttributedString.StyleKey()
{
  return &type metadata for FormatAttributedString.StyleKey;
}

unint64_t sub_1C0E86154()
{
  unint64_t result = qword_1EB862F30;
  if (!qword_1EB862F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB862F30);
  }
  return result;
}

unint64_t sub_1C0E861AC()
{
  unint64_t result = qword_1EA1A8088;
  if (!qword_1EA1A8088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8088);
  }
  return result;
}

uint64_t sub_1C0E86200(unsigned __int8 a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v5 = 1684828002;
  unint64_t v6 = 0xE400000000000000;
  uint64_t v7 = a1;
  uint64_t v10 = 1684828002;
  switch(v7)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v10 = 0x63696C617469;
      break;
    case 2:
      uint64_t v10 = 0x6E696C7265646E75;
      unint64_t v6 = 0xE900000000000065;
      break;
    case 3:
      uint64_t v10 = 0x6874656B69727473;
      unint64_t v6 = 0xED00006867756F72;
      break;
    case 4:
      uint64_t v10 = 0x7069726373627573;
      unint64_t v6 = 0xE900000000000074;
      break;
    case 5:
      uint64_t v10 = 0x7263737265707573;
      unint64_t v6 = 0xEB00000000747069;
      break;
    case 6:
      uint64_t v10 = 1701080931;
      break;
    case 7:
      uint64_t v10 = 1802398060;
      break;
    case 8:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v10 = 0x31676E6964616568;
      break;
    case 9:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v10 = 0x32676E6964616568;
      break;
    case 10:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v10 = 0x33676E6964616568;
      break;
    case 11:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v10 = 0x34676E6964616568;
      break;
    case 12:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v10 = 0x35676E6964616568;
      break;
    case 13:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v10 = 0x36676E6964616568;
      break;
    case 14:
      uint64_t v10 = 0x7061726761726170;
      unint64_t v6 = 0xE900000000000068;
      break;
    case 15:
      uint64_t v10 = 1851879539;
      break;
    case 16:
      unint64_t v6 = 0xE300000000000000;
      uint64_t v10 = 6648432;
      break;
    case 17:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v10 = 0x6567616D69;
      break;
    default:
      break;
  }
  unint64_t v11 = 0xE400000000000000;
  switch(a3)
  {
    case 1:
      unint64_t v11 = 0xE600000000000000;
      if (v10 == 0x63696C617469) {
        goto LABEL_52;
      }
      goto LABEL_55;
    case 2:
      unint64_t v11 = 0xE900000000000065;
      if (v10 != 0x6E696C7265646E75) {
        goto LABEL_55;
      }
      goto LABEL_52;
    case 3:
      unint64_t v11 = 0xED00006867756F72;
      if (v10 != 0x6874656B69727473) {
        goto LABEL_55;
      }
      goto LABEL_52;
    case 4:
      unint64_t v11 = 0xE900000000000074;
      if (v10 != 0x7069726373627573) {
        goto LABEL_55;
      }
      goto LABEL_52;
    case 5:
      unint64_t v11 = 0xEB00000000747069;
      if (v10 != 0x7263737265707573) {
        goto LABEL_55;
      }
      goto LABEL_52;
    case 6:
      if (v10 != 1701080931) {
        goto LABEL_55;
      }
      goto LABEL_52;
    case 7:
      if (v10 != 1802398060) {
        goto LABEL_55;
      }
      goto LABEL_52;
    case 8:
      unint64_t v11 = 0xE800000000000000;
      if (v10 != 0x31676E6964616568) {
        goto LABEL_55;
      }
      goto LABEL_52;
    case 9:
      unint64_t v11 = 0xE800000000000000;
      if (v10 != 0x32676E6964616568) {
        goto LABEL_55;
      }
      goto LABEL_52;
    case 10:
      unint64_t v11 = 0xE800000000000000;
      if (v10 != 0x33676E6964616568) {
        goto LABEL_55;
      }
      goto LABEL_52;
    case 11:
      unint64_t v11 = 0xE800000000000000;
      if (v10 != 0x34676E6964616568) {
        goto LABEL_55;
      }
      goto LABEL_52;
    case 12:
      unint64_t v11 = 0xE800000000000000;
      if (v10 != 0x35676E6964616568) {
        goto LABEL_55;
      }
      goto LABEL_52;
    case 13:
      unint64_t v11 = 0xE800000000000000;
      if (v10 != 0x36676E6964616568) {
        goto LABEL_55;
      }
      goto LABEL_52;
    case 14:
      unint64_t v11 = 0xE900000000000068;
      if (v10 != 0x7061726761726170) {
        goto LABEL_55;
      }
      goto LABEL_52;
    case 15:
      if (v10 != 1851879539) {
        goto LABEL_55;
      }
      goto LABEL_52;
    case 16:
      unint64_t v11 = 0xE300000000000000;
      uint64_t v5 = 6648432;
      goto LABEL_51;
    case 17:
      unint64_t v11 = 0xE500000000000000;
      if (v10 != 0x6567616D69) {
        goto LABEL_55;
      }
      goto LABEL_52;
    default:
LABEL_51:
      if (v10 != v5) {
        goto LABEL_55;
      }
LABEL_52:
      if (v6 == v11)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
LABEL_55:
        char v12 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = 0;
        if ((v12 & 1) == 0) {
          return result;
        }
      }
      if (a2)
      {
        if (a4)
        {
          swift_bridgeObjectRetain();
          uint64_t v14 = swift_bridgeObjectRetain();
          char v15 = sub_1BFEFAE14(v14, a4);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v15) {
            return 1;
          }
        }
      }
      else if (!a4)
      {
        return 1;
      }
      return 0;
  }
}

uint64_t sub_1C0E86748()
{
  return sub_1C0E868F8(&qword_1EB884CD0, MEMORY[0x1E4F27388]);
}

void sub_1C0E8677C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_1C0E867FC()
{
  return sub_1C0E868F8(&qword_1EB884CC8, MEMORY[0x1E4F27368]);
}

void sub_1C0E86834(void *a1@<X8>)
{
  *a1 = &type metadata for FormatAttributeScope;
}

unint64_t sub_1C0E86844()
{
  unint64_t result = qword_1EB8612E8;
  if (!qword_1EB8612E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8612E8);
  }
  return result;
}

uint64_t sub_1C0E86898(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C0E868F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0E86940()
{
  unint64_t result = qword_1EB862EA8;
  if (!qword_1EB862EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB862EA8);
  }
  return result;
}

uint64_t sub_1C0E86994(uint64_t a1, uint64_t a2)
{
  sub_1BFF2E9EC(0, &qword_1EB88E3A0, (void (*)(uint64_t))type metadata accessor for FormatAttributedStringAttachment);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0E86A14()
{
  return sub_1C0E85D5C();
}

uint64_t sub_1C0E86A1C(uint64_t a1, uint64_t a2)
{
  sub_1BFEFDD10(0, &qword_1EB862FE8, (uint64_t)&type metadata for FormatAttributedStringStyle, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0E86AA4(uint64_t a1)
{
  sub_1BFF2E9EC(0, &qword_1EB88E3A0, (void (*)(uint64_t))type metadata accessor for FormatAttributedStringAttachment);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C0E86B1C()
{
}

unint64_t sub_1C0E86B38()
{
  unint64_t result = qword_1EA1A8098;
  if (!qword_1EA1A8098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A8098);
  }
  return result;
}

uint64_t sub_1C0E86B8C(uint64_t a1)
{
  return a1;
}

void sub_1C0E86BF0(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, void *a9)
{
  if (a1)
  {

    swift_release();
    swift_release();
  }
}

char *sub_1C0E86C78(char a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  char v4 = a1 & 1;
  sub_1BFEC067C(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v40 - v6;
  v1[OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_isLoading] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v8 = OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_activityIndicatorView;
  id v9 = objc_allocWithZone(MEMORY[0x1E4FB1400]);
  uint64_t v10 = v1;
  *(void *)&v1[v8] = objc_msgSend(v9, sel_initWithActivityIndicatorStyle_, 100);
  uint64_t v11 = OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_titleLabel;
  sub_1C151A4AC();
  *(void *)&v10[v11] = sub_1C151A47C();
  uint64_t v12 = OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_tableView;
  *(void *)&v10[v12] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1D00]), sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v10[OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_changeSet] = MEMORY[0x1E4FBC860];
  v10[OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_source] = v4;

  v40.receiver = v10;
  v40.super_class = ObjectType;
  unint64_t v13 = (char *)objc_msgSendSuper2(&v40, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v14 = OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_tableView;
  uint64_t v15 = *(void *)&v13[OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_tableView];
  long long v16 = v13;
  objc_msgSend(v16, sel_addSubview_, v15);
  uint64_t v17 = OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_titleLabel;
  long long v18 = *(void **)&v16[OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_titleLabel];
  objc_msgSend(v16, sel_addSubview_, v18);
  objc_msgSend(v16, sel_addSubview_, *(void *)&v16[OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_activityIndicatorView]);
  long long v19 = self;
  id v20 = v18;
  id v21 = objc_msgSend(v19, sel_systemFillColor);
  objc_msgSend(v20, sel_setBackgroundColor_, v21);

  char v22 = *(void **)&v16[v17];
  objc_msgSend(v22, sel_setTextAlignment_, 1);
  objc_msgSend(v22, sel_setNumberOfLines_, 0);
  uint64_t v23 = sub_1C151928C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v7, 1, 1, v23);
  id v24 = v22;
  id v25 = sub_1C0E879B4((uint64_t)v7);
  sub_1BFEC001C((uint64_t)v7);
  objc_msgSend(v24, sel_setAttributedText_, v25);

  char v26 = (void *)sub_1C151A49C();
  swift_allocObject();
  swift_unknownObjectWeakInit();

  swift_release();
  long long v27 = *(void **)&v13[v14];
  type metadata accessor for DebugFormatUploadDiffTableViewCell();
  id v28 = v27;
  sub_1C151F26C();

  long long v29 = *(void **)&v13[v14];
  objc_msgSend(v29, sel_setDelegate_, v16);
  objc_msgSend(v29, sel_setDataSource_, v16);
  id v30 = v29;
  id v31 = objc_msgSend(v19, sel_secondarySystemBackgroundColor);
  objc_msgSend(v30, sel_setBackgroundColor_, v31);

  long long v32 = *(void **)&v13[v14];
  objc_msgSend(v32, sel_setSeparatorStyle_, 0);
  objc_msgSend(v32, sel_setRowHeight_, *MEMORY[0x1E4FB2F28]);
  uint64_t v33 = self;
  double v34 = *MEMORY[0x1E4FB09D8];
  id v35 = v32;
  id v36 = objc_msgSend(v33, sel_monospacedDigitSystemFontOfSize_weight_, 12.0, v34);
  objc_msgSend(v36, sel_lineHeight);
  double v38 = v37;

  objc_msgSend(v35, sel_setEstimatedRowHeight_, v38);
  return v16;
}

void sub_1C0E87130(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1C18C9C60](v1);
  if (v2)
  {
    uint64_t v3 = (char *)v2;
    if (MEMORY[0x1C18C9C60](v2 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_delegate))
    {
      id v4 = *(id *)&v3[OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_titleLabel];
      sub_1C022EF40((uint64_t)v3, (uint64_t)v4);

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

id sub_1C0E871FC()
{
  v14.receiver = v0;
  v14.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v14, sel_layoutSubviews);
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_titleLabel];
  objc_msgSend(v0, sel_safeAreaInsets);
  double v3 = v2;
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v1, sel_setFrame_, 0.0, v3, CGRectGetWidth(v15), 32.0);
  id v4 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_tableView];
  objc_msgSend(v0, sel_safeAreaInsets);
  double v6 = v5;
  objc_msgSend(v1, sel_bounds);
  double v7 = v6 + CGRectGetHeight(v16);
  objc_msgSend(v0, sel_bounds);
  double Width = CGRectGetWidth(v17);
  objc_msgSend(v0, sel_bounds);
  double Height = CGRectGetHeight(v18);
  objc_msgSend(v0, sel_safeAreaInsets);
  double v11 = Height - v10;
  objc_msgSend(v1, sel_bounds);
  objc_msgSend(v4, sel_setFrame_, 0.0, v7, Width, v11 - CGRectGetHeight(v19));
  uint64_t v12 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_activityIndicatorView];
  objc_msgSend(v0, sel_bounds);
  return objc_msgSend(v12, sel_setFrame_);
}

uint64_t type metadata accessor for DebugFormatUploadDiffView()
{
  return self;
}

unint64_t sub_1C0E87660()
{
  uint64_t v1 = v0;
  type metadata accessor for DebugFormatUploadDiffTableViewCell();
  double v2 = (char *)sub_1C151F24C();
  unint64_t v3 = sub_1C151676C();
  unint64_t v4 = v1 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_changeSet;
  unint64_t result = swift_beginAccess();
  uint64_t v6 = *(void *)v4;
  if ((*(void *)v4 & 0xC000000000000001) == 0)
  {
    if ((v3 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v3 < *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v7 = *(void *)(v6 + 8 * v3 + 32);
      swift_retain();
      goto LABEL_5;
    }
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v7 = MEMORY[0x1C18C7CB0](v3);
LABEL_5:
  swift_endAccess();
  unint64_t v4 = *(void *)(v7 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  unint64_t result = sub_1C151675C();
  if ((v4 & 0xC000000000000001) != 0)
  {
LABEL_13:
    id v8 = (id)MEMORY[0x1C18C7CB0](result, v4);
    goto LABEL_9;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v8 = *(id *)(v4 + 8 * result + 32);
LABEL_9:
    id v9 = v8;
    swift_bridgeObjectRelease();
    objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC8NewsFeed34DebugFormatUploadDiffTableViewCell_label], sel_setAttributedText_, v9);
    double v10 = self;
    double v11 = v2;
    id v12 = objc_msgSend(v10, sel_systemBackgroundColor);
    objc_msgSend(v11, sel_setBackgroundColor_, v12);

    return (unint64_t)v11;
  }
  __break(1u);
  return result;
}

id sub_1C0E879B4(uint64_t a1)
{
  sub_1BFEC067C(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  unint64_t v4 = (char *)&v35 - v3;
  sub_1C151E6DC();
  swift_bridgeObjectRelease();
  sub_1BFEC067C(0, (unint64_t *)&qword_1EB87A910, (uint64_t (*)(uint64_t))sub_1C0063E08, MEMORY[0x1E4FBBE00]);
  uint64_t v41 = v5;
  uint64_t inited = swift_initStackObject();
  uint64_t v7 = (void **)MEMORY[0x1E4FB06F8];
  long long v39 = xmmword_1C1527210;
  *(_OWORD *)(inited + 16) = xmmword_1C1527210;
  id v8 = *v7;
  *(void *)(inited + 32) = *v7;
  id v9 = self;
  double v10 = *MEMORY[0x1E4FB09B8];
  id v38 = v8;
  id v40 = v9;
  id v11 = objc_msgSend(v9, sel_systemFontOfSize_weight_, 11.0, v10);
  uint64_t v12 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
  *(void *)(inited + 40) = v11;
  unint64_t v13 = (void *)*MEMORY[0x1E4FB0700];
  uint64_t v37 = v12;
  *(void *)(inited + 64) = v12;
  *(void *)(inited + 72) = v13;
  objc_super v14 = self;
  id v35 = v13;
  id v36 = v14;
  id v15 = objc_msgSend(v14, sel_systemGray2Color);
  uint64_t v16 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
  *(void *)(inited + 104) = v16;
  *(void *)(inited + 80) = v15;
  sub_1BFF991DC(inited);
  id v17 = objc_allocWithZone(MEMORY[0x1E4F28E48]);
  CGRect v18 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BFF9A290();
  CGRect v19 = (void *)sub_1C151E32C();
  swift_bridgeObjectRelease();
  id v20 = objc_msgSend(v17, sel_initWithString_attributes_, v18, v19);

  uint64_t v42 = 10;
  unint64_t v43 = 0xE100000000000000;
  sub_1BFEC03F4(a1, (uint64_t)v4);
  uint64_t v21 = sub_1C151928C();
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v4, 1, v21) == 1)
  {
    sub_1BFEC001C((uint64_t)v4);
  }
  else
  {
    sub_1C151920C();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v4, v21);
  }
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t v23 = swift_initStackObject();
  *(_OWORD *)(v23 + 16) = v39;
  id v24 = v38;
  *(void *)(v23 + 32) = v38;
  double v25 = *MEMORY[0x1E4FB09E0];
  id v26 = v24;
  *(void *)(v23 + 40) = objc_msgSend(v40, sel_systemFontOfSize_weight_, 11.0, v25);
  long long v27 = v35;
  *(void *)(v23 + 64) = v37;
  *(void *)(v23 + 72) = v27;
  id v28 = v27;
  id v29 = objc_msgSend(v36, sel_systemGray2Color);
  *(void *)(v23 + 104) = v16;
  *(void *)(v23 + 80) = v29;
  sub_1BFF991DC(v23);
  id v30 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  id v31 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  long long v32 = (void *)sub_1C151E32C();
  swift_bridgeObjectRelease();
  id v33 = objc_msgSend(v30, sel_initWithString_attributes_, v31, v32);

  objc_msgSend(v20, sel_appendAttributedString_, v33);
  return v20;
}

void sub_1C0E87EC4()
{
  uint64_t v1 = v0;
  v0[OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_isLoading] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v2 = OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_activityIndicatorView;
  *(void *)&v1[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1400]), sel_initWithActivityIndicatorStyle_, 100);
  uint64_t v3 = OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_titleLabel;
  sub_1C151A4AC();
  *(void *)&v1[v3] = sub_1C151A47C();
  uint64_t v4 = OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_tableView;
  *(void *)&v1[v4] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1D00]), sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v1[OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_changeSet] = MEMORY[0x1E4FBC860];

  sub_1C152040C();
  __break(1u);
}

uint64_t sub_1C0E87FE4(unint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_changeSet);
  uint64_t result = swift_beginAccess();
  if ((*v3 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1C18C7CB0](a1);
    goto LABEL_5;
  }
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a1)
  {
    swift_retain();
LABEL_5:
    swift_endAccess();
    sub_1C152088C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    sub_1C152088C();
    sub_1C151E80C();
    swift_release();
    swift_bridgeObjectRelease();
    return 0x2073656E694CLL;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0E88128()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1C0E88160()
{
  sub_1C0E87130(v0);
}

uint64_t sub_1C0E88168(uint64_t a1)
{
  sub_1BFEC8548(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for FormatWebEmbed.Resolved();
  MEMORY[0x1F4188790](v23);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1F4188790](v8);
  double v10 = (id *)((char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v24 = MEMORY[0x1E4FBC860];
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    uint64_t v22 = v7;
    v21[1] = v1;
    uint64_t v13 = *(void *)(type metadata accessor for FormatContentSlotItemResolution() - 8);
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    uint64_t v15 = *(void *)(v13 + 72);
    v21[0] = a1;
    swift_bridgeObjectRetain();
    long long v21[2] = v8;
    do
    {
      sub_1C0E8C8AC(v14, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:

          break;
        case 2u:
        case 4u:
        case 5u:
          swift_unknownObjectRelease();
          break;
        case 3u:
          uint64_t v16 = (uint64_t)v22;
          sub_1C0E8C844((uint64_t)v10, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
          sub_1C0E8C8AC(v16 + *(int *)(v23 + 36), (uint64_t)v5, (uint64_t (*)(void))sub_1BFEC8548);
          sub_1BFEC84E0();
          uint64_t v18 = v17;
          uint64_t v19 = (uint64_t)v5;
          uint64_t v20 = *(void *)(v17 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v19, 1, v17) != 1)
          {
            sub_1C151948C();
            (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v18);
            sub_1C0E8C914(v16, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
            uint64_t v5 = (char *)v19;
            goto LABEL_12;
          }
          sub_1C0E8C914(v19, (uint64_t (*)(void))sub_1BFEC8548);
          sub_1C0E8C914(v16, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
          uint64_t v5 = (char *)v19;
          break;
        case 6u:
        case 7u:
          sub_1C0E8C914((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
          break;
        case 8u:
          swift_bridgeObjectRelease();
          break;
        default:
LABEL_12:
          MEMORY[0x1C18C66D0]();
          if (*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C151EC8C();
          }
          sub_1C151ECEC();
          sub_1C151EBEC();
          break;
      }
      v14 += v15;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
    return v24;
  }
  return result;
}

uint64_t sub_1C0E8857C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v12 = MEMORY[0x1E4FBC860];
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    v11[1] = v1;
    uint64_t v8 = *(void *)(type metadata accessor for FormatContentSlotItemResolution() - 8);
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1C0E8C8AC(v9, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        MEMORY[0x1C18C66D0]();
        if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
      else
      {
        sub_1C0E8C914((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
      }
      v9 += v10;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

uint64_t sub_1C0E8874C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v12 = MEMORY[0x1E4FBC860];
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    v11[1] = v1;
    uint64_t v8 = *(void *)(type metadata accessor for FormatContentSlotItemResolution() - 8);
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1C0E8C8AC(v9, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        MEMORY[0x1C18C66D0]();
        if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
      else
      {
        sub_1C0E8C914((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
      }
      v9 += v10;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

uint64_t sub_1C0E8891C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)&long long v109 = a4;
  uint64_t v8 = type metadata accessor for ScoredFormatContentSlotItemResolution();
  uint64_t v95 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v87 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FormatContentSlotItemResolution();
  uint64_t v101 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v98 = (char *)v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0E89734(0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v97 = (char *)v87 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for FeedPersonalizationClusteringRules();
  uint64_t v99 = *(void *)(v15 - 8);
  int64_t v100 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v96 = (uint64_t)v87 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFC66384(a3 + 24, (uint64_t)v112);
  uint64_t v17 = v113;
  uint64_t v18 = v114;
  __swift_project_boxed_opaque_existential_1(v112, v113);
  uint64_t v19 = sub_1C0E88168((uint64_t)a1);
  uint64_t v104 = type metadata accessor for FormatServiceOptions();
  uint64_t v105 = a2;
  uint64_t v20 = a2 + *(int *)(v104 + 40);
  uint64_t v21 = type metadata accessor for FormatTransformData();
  uint64_t v93 = *(int *)(v21 + 32);
  LOBYTE(v110) = *(unsigned char *)(v20 + v93);
  uint64_t v106 = (*(uint64_t (**)(uint64_t, void **, uint64_t, uint64_t))(v18 + 16))(v19, &v110, v17, v18);
  swift_bridgeObjectRelease();
  uint64_t v22 = v114;
  __swift_project_boxed_opaque_existential_1(v112, v113);
  sub_1C0E8857C((uint64_t)a1);
  uint64_t v23 = *(int *)(v21 + 36);
  uint64_t v94 = v20;
  LOBYTE(v110) = *(unsigned char *)(v20 + v23);
  uint64_t v103 = (void *)(*(uint64_t (**)(void))(v22 + 24))();
  swift_bridgeObjectRelease();
  uint64_t v24 = v113;
  uint64_t v25 = v114;
  __swift_project_boxed_opaque_existential_1(v112, v113);
  unint64_t v26 = sub_1C0E8874C((uint64_t)a1);
  uint64_t v27 = sub_1C0A793E8(v26);
  swift_bridgeObjectRelease();
  uint64_t v28 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v27, v24, v25);
  uint64_t v29 = (uint64_t)v97;
  uint64_t v102 = (void *)v28;
  swift_bridgeObjectRelease();
  sub_1C0E8C8AC(v109, v29, (uint64_t (*)(void))sub_1C0E89734);
  int v30 = (*(uint64_t (**)(uint64_t, uint64_t, int64_t))(v99 + 48))(v29, 1, v100);
  uint64_t v31 = MEMORY[0x1E4FBB550];
  uint64_t v32 = MEMORY[0x1E4FBB5C8];
  id v107 = a1;
  uint64_t v108 = v4;
  if (v30 == 1)
  {
    sub_1C0E8C914(v29, (uint64_t (*)(void))sub_1C0E89734);
    id v33 = (void *)v106;
LABEL_13:
    uint64_t v36 = v101;
    uint64_t v37 = (uint64_t)v98;
    goto LABEL_14;
  }
  uint64_t v34 = v96;
  sub_1C0E8C844(v29, v96, (uint64_t (*)(void))type metadata accessor for FeedPersonalizationClusteringRules);
  id v33 = (void *)v106;
  int64_t v35 = *(void *)(v106 + 16);
  if (v35 != a1[2])
  {
    sub_1C0E8C914(v34, (uint64_t (*)(void))type metadata accessor for FeedPersonalizationClusteringRules);
    goto LABEL_13;
  }
  uint64_t v36 = v101;
  uint64_t v37 = (uint64_t)v98;
  if (*(unsigned char *)(v34 + 24) == 1 || (id v38 = *(void **)(v34 + 16), (uint64_t)v38 >= v35))
  {
    sub_1C0E8C914(v34, (uint64_t (*)(void))type metadata accessor for FeedPersonalizationClusteringRules);
  }
  else
  {
    uint64_t v99 = *(void *)(v105 + *(int *)(v104 + 52));
    int64_t v100 = v35;
    sub_1C0086AE0(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
    uint64_t v97 = v39;
    uint64_t v40 = swift_allocObject();
    long long v90 = xmmword_1C152C7F0;
    *(_OWORD *)(v40 + 16) = xmmword_1C152C7F0;
    *(void *)(v40 + 56) = v31;
    *(void *)(v40 + 64) = v32;
    *(void *)(v40 + 32) = v100;
    int v41 = *(unsigned __int8 *)(v34 + 8);
    uint64_t v92 = *(void **)v34;
    uint64_t v110 = v92;
    int v91 = v41;
    char v111 = v41;
    sub_1C01BCA00(0, &qword_1EB87A090, v31, MEMORY[0x1E4FBB718]);
    uint64_t v42 = sub_1C151E6AC();
    uint64_t v44 = v43;
    *(void *)(v40 + 96) = MEMORY[0x1E4FBB1A0];
    unint64_t v45 = sub_1BFE9C558();
    *(void *)(v40 + 104) = v45;
    *(void *)(v40 + 72) = v42;
    *(void *)(v40 + 80) = v44;
    uint64_t v110 = v38;
    char v111 = 0;
    uint64_t v46 = sub_1C151E6AC();
    *(void *)(v40 + 136) = MEMORY[0x1E4FBB1A0];
    *(void *)(v40 + 144) = v45;
    *(void *)(v40 + 112) = v46;
    *(void *)(v40 + 120) = v47;
    sub_1C151F38C();
    sub_1C15197BC();
    swift_bridgeObjectRelease();
    uint64_t v48 = v113;
    uint64_t v49 = v114;
    uint64_t v50 = __swift_project_boxed_opaque_existential_1(v112, v113);
    int64_t v51 = v100;
    int v52 = (void *)MEMORY[0x1E4FBC860];
    if (v100)
    {
      v87[1] = v50;
      uint64_t v88 = v49;
      uint64_t v89 = v48;
      uint64_t v110 = (void *)MEMORY[0x1E4FBC860];
      sub_1C05F69F4(0, v100, 0);
      int v52 = v110;
      uint64_t v53 = (long long *)(v106 + 32);
      do
      {
        long long v109 = *v53;
        uint64_t v110 = v52;
        unint64_t v55 = v52[2];
        unint64_t v54 = v52[3];
        swift_unknownObjectRetain();
        id v56 = *((id *)&v109 + 1);
        if (v55 >= v54 >> 1)
        {
          sub_1C05F69F4(v54 > 1, v55 + 1, 1);
          int v52 = v110;
        }
        v52[2] = v55 + 1;
        uint64_t v57 = &v52[3 * v55];
        *((_OWORD *)v57 + 2) = v109;
        _OWORD v57[6] = 0;
        ++v53;
        --v51;
      }
      while (v51);
      id v33 = (void *)v106;
      uint64_t v48 = v89;
      uint64_t v49 = v88;
    }
    else
    {
      id v33 = (void *)v106;
    }
    LOWORD(v110) = *(unsigned __int8 *)(v94 + v93);
    uint64_t v75 = (*(uint64_t (**)(void *, void **, uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 56))(v52, &v110, 1, v96, v48, v49);
    swift_bridgeObjectRelease();
    uint64_t v76 = sub_1C0E897BC(v75, v105, (uint64_t)v33);
    swift_bridgeObjectRelease();
    uint64_t v110 = v107;
    sub_1C0660618();
    sub_1C0E8C424((unint64_t *)&qword_1EB880D18, (void (*)(uint64_t))sub_1C0660618);
    sub_1C0E8C424(&qword_1EB87C2D0, (void (*)(uint64_t))type metadata accessor for FormatContentSlotItemResolution);
    uint64_t v77 = sub_1C151E91C();
    uint64_t v78 = v108;
    uint64_t v71 = (void *)sub_1C0E8C46C(v76, v77);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v91) {
      uint64_t v79 = 1;
    }
    else {
      uint64_t v79 = (uint64_t)v92;
    }
    uint64_t v80 = v71[2];
    if (v80 >= v79)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v84 = swift_allocObject();
      *(_OWORD *)(v84 + 16) = xmmword_1C1527210;
      uint64_t v85 = MEMORY[0x1E4FBB550];
      *(void *)(v84 + 56) = MEMORY[0x1E4FBB550];
      uint64_t v86 = MEMORY[0x1E4FBB5C8];
      *(void *)(v84 + 64) = MEMORY[0x1E4FBB5C8];
      *(void *)(v84 + 72) = v80;
      *(void *)(v84 + 32) = v100;
      *(void *)(v84 + 96) = v85;
      *(void *)(v84 + 104) = v86;
      sub_1C151F38C();
      sub_1C15197BC();
      swift_bridgeObjectRelease();
      sub_1C0E8C914(v96, (uint64_t (*)(void))type metadata accessor for FeedPersonalizationClusteringRules);
LABEL_24:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v112);
      return (uint64_t)v71;
    }
    uint64_t v108 = v78;
    uint64_t v81 = swift_allocObject();
    *(_OWORD *)(v81 + 16) = v90;
    uint64_t v82 = MEMORY[0x1E4FBB550];
    *(void *)(v81 + 56) = MEMORY[0x1E4FBB550];
    *(void *)(v81 + 64) = MEMORY[0x1E4FBB5C8];
    *(void *)(v81 + 32) = v100;
    swift_bridgeObjectRelease();
    *(void *)(v81 + 96) = v82;
    uint64_t v83 = MEMORY[0x1E4FBB5C8];
    *(void *)(v81 + 104) = MEMORY[0x1E4FBB5C8];
    *(void *)(v81 + 112) = v79;
    *(void *)(v81 + 72) = v80;
    uint64_t v32 = v83;
    *(void *)(v81 + 136) = v82;
    *(void *)(v81 + 144) = v83;
    uint64_t v31 = v82;
    sub_1C151F38C();
    sub_1C15197BC();
    swift_bridgeObjectRelease();
    sub_1C0E8C914(v96, (uint64_t (*)(void))type metadata accessor for FeedPersonalizationClusteringRules);
  }
LABEL_14:
  sub_1C0086AE0(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
  uint64_t v58 = swift_allocObject();
  *(_OWORD *)(v58 + 16) = xmmword_1C1529AE0;
  uint64_t v59 = v107[2];
  *(void *)(v58 + 56) = v31;
  *(void *)(v58 + 64) = v32;
  *(void *)(v58 + 32) = v59;
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  uint64_t v110 = v33;
  long long v60 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB320];
  sub_1C01BCA00(0, &qword_1EB88FF68, (uint64_t)&type metadata for FeedScoredHeadline, MEMORY[0x1E4FBB320]);
  sub_1BFEB35D0((unint64_t *)&unk_1EB88FF70, &qword_1EB88FF68, (uint64_t)&type metadata for FeedScoredHeadline);
  sub_1C04A43C4();
  uint64_t v61 = sub_1C151E91C();
  swift_bridgeObjectRelease();
  uint64_t v110 = v103;
  sub_1C01BCA00(0, &qword_1EB88FF50, (uint64_t)&type metadata for FeedScoredIssue, v60);
  sub_1BFEB35D0((unint64_t *)&unk_1EB88FF58, &qword_1EB88FF50, (uint64_t)&type metadata for FeedScoredIssue);
  sub_1C09506E0();
  uint64_t v62 = sub_1C151E91C();
  swift_bridgeObjectRelease();
  uint64_t v110 = v102;
  sub_1C01BCA00(0, &qword_1EB88FF98, (uint64_t)&type metadata for FeedScoredTag, v60);
  sub_1BFEB35D0(&qword_1EB88FFA0, &qword_1EB88FF98, (uint64_t)&type metadata for FeedScoredTag);
  sub_1C0E89768();
  uint64_t v63 = sub_1C151E91C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v64 = v108;
  uint64_t v65 = (void *)sub_1C0E8C22C((uint64_t)v107, v61, v62, v63);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  uint64_t v110 = v65;
  swift_bridgeObjectRetain();
  sub_1C0E8A27C(&v110);
  if (!v64)
  {
    swift_bridgeObjectRelease();
    char v66 = v110;
    int64_t v67 = v110[2];
    if (v67)
    {
      uint64_t v108 = 0;
      uint64_t v110 = (void *)MEMORY[0x1E4FBC860];
      sub_1C05F694C(0, v67, 0);
      uint64_t v68 = *(unsigned __int8 *)(v95 + 80);
      *(void *)&long long v109 = v66;
      uint64_t v69 = (uint64_t)v66 + ((v68 + 32) & ~v68);
      uint64_t v70 = *(void *)(v95 + 72);
      uint64_t v71 = v110;
      do
      {
        sub_1C0E8C8AC(v69, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ScoredFormatContentSlotItemResolution);
        sub_1C0E8C8AC((uint64_t)v10, v37, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
        sub_1C0E8C914((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ScoredFormatContentSlotItemResolution);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C05F694C(0, v71[2] + 1, 1);
          uint64_t v71 = v110;
        }
        unint64_t v73 = v71[2];
        unint64_t v72 = v71[3];
        if (v73 >= v72 >> 1)
        {
          sub_1C05F694C(v72 > 1, v73 + 1, 1);
          uint64_t v71 = v110;
        }
        v71[2] = v73 + 1;
        sub_1C0E8C844(v37, (uint64_t)v71+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(void *)(v36 + 72) * v73, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
        v69 += v70;
        --v67;
      }
      while (v67);
      swift_release();
    }
    else
    {
      swift_release();
      uint64_t v71 = (void *)MEMORY[0x1E4FBC860];
    }
    goto LABEL_24;
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ScoredFormatContentSlotItemResolution()
{
  uint64_t result = qword_1EB88F4D8;
  if (!qword_1EB88F4D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C0E89734(uint64_t a1)
{
}

unint64_t sub_1C0E89768()
{
  unint64_t result = qword_1EB886C78;
  if (!qword_1EB886C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB886C78);
  }
  return result;
}

uint64_t sub_1C0E897BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    uint64_t v4 = *(void *)(a1 + 16);
    if (v4)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = (void **)(a1 + 40);
      uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
      do
      {
        uint64_t v8 = *v5;
        uint64_t v9 = swift_dynamicCastObjCProtocolConditional();
        if (v9)
        {
          uint64_t v10 = v9;
          swift_unknownObjectRetain();
          id v11 = v8;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v6 = sub_1C0EE25A4(0, v6[2] + 1, 1, v6);
          }
          unint64_t v13 = v6[2];
          unint64_t v12 = v6[3];
          if (v13 >= v12 >> 1) {
            uint64_t v6 = sub_1C0EE25A4((void *)(v12 > 1), v13 + 1, 1, v6);
          }
          _OWORD v6[2] = v13 + 1;
          uint64_t v7 = &v6[2 * v13];
          _OWORD v7[4] = v10;
          v7[5] = v11;
        }
        v5 += 3;
        --v4;
      }
      while (v4);
      swift_bridgeObjectRelease();
    }
    else
    {
      return MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    type metadata accessor for FormatServiceOptions();
    sub_1C151F38C();
    sub_1C15197BC();
    uint64_t v16 = a3;
    swift_bridgeObjectRetain();
    sub_1C0E8A210(&v16);
    return v16;
  }
  return (uint64_t)v6;
}

uint64_t sub_1C0E8995C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v86 = a5;
  uint64_t v83 = a3;
  uint64_t v84 = a4;
  uint64_t v85 = a2;
  sub_1BFEC8548(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FormatWebEmbed.Resolved();
  MEMORY[0x1F4188790](v9);
  id v11 = (char *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FormatContentSlotItemResolution();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v82 = (uint64_t)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v82 - v15;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v82 - v18;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v82 - v21;
  uint64_t v23 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (id *)((char *)&v82 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v87 = a1;
  sub_1C0E8C8AC(a1, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      id v39 = *v25;
      id v40 = objc_msgSend(v39, sel_identifier);
      uint64_t v41 = sub_1C151E62C();
      uint64_t v43 = v42;

      uint64_t v44 = v83;
      if (*(void *)(v83 + 16) && (unint64_t v45 = sub_1BFEF2D8C(v41, v43), (v46 & 1) != 0))
      {
        uint64_t v47 = *(void *)(v44 + 56) + 16 * v45;
        uint64_t v48 = *(void **)(v47 + 8);
        id v49 = *(id *)v47;
        id v50 = v48;
        swift_bridgeObjectRelease();
        sub_1C0E8C8AC(v87, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
        if (v49)
        {
          id v51 = v49;
          objc_msgSend(v50, sel_agedPersonalizationScore);
          uint64_t v38 = v52;

          sub_1C019BB14(v49, v50);
          sub_1C019BB14(v49, v50);
LABEL_25:
          uint64_t v65 = v86;
          uint64_t v66 = (uint64_t)v19;
          goto LABEL_29;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1C0E8C8AC(v87, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
      }

      uint64_t v38 = 0;
      goto LABEL_25;
    case 2u:
      id v53 = objc_msgSend(*v25, sel_identifier);
      uint64_t v54 = sub_1C151E62C();
      uint64_t v56 = v55;

      uint64_t v57 = v84;
      if (*(void *)(v84 + 16) && (unint64_t v58 = sub_1BFEF2D8C(v54, v56), (v59 & 1) != 0))
      {
        uint64_t v60 = *(void *)(v57 + 56) + 24 * v58;
        uint64_t v61 = *(void *)(v60 + 8);
        uint64_t v38 = *(void *)(v60 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        sub_1C0E8C8AC(v87, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
        if (v61)
        {
          swift_bridgeObjectRelease();
          goto LABEL_28;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        sub_1C0E8C8AC(v87, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
      }
      uint64_t v38 = 0;
LABEL_28:
      uint64_t v65 = v86;
      uint64_t v66 = (uint64_t)v16;
      goto LABEL_29;
    case 3u:
      sub_1C0E8C844((uint64_t)v25, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
      sub_1C0E8C8AC((uint64_t)&v11[*(int *)(v9 + 36)], (uint64_t)v8, (uint64_t (*)(void))sub_1BFEC8548);
      sub_1BFEC84E0();
      uint64_t v63 = v62;
      uint64_t v64 = *(void *)(v62 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v8, 1, v62) == 1)
      {
        sub_1C0E8C914((uint64_t)v8, (uint64_t (*)(void))sub_1BFEC8548);
        sub_1C0E8C914((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
        uint64_t v65 = v86;
        sub_1C0E8C8AC(v87, v86, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
        uint64_t v38 = 0;
        goto LABEL_30;
      }
      sub_1C151948C();
      uint64_t v68 = v88;
      (*(void (**)(char *, uint64_t))(v64 + 8))(v8, v63);
      id v69 = objc_msgSend(v68, sel_identifier);
      uint64_t v70 = sub_1C151E62C();
      uint64_t v72 = v71;

      uint64_t v73 = v85;
      if (*(void *)(v85 + 16) && (unint64_t v74 = sub_1BFEF2D8C(v70, v72), (v75 & 1) != 0))
      {
        uint64_t v76 = (uint64_t *)(*(void *)(v73 + 56) + 16 * v74);
        uint64_t v77 = *v76;
        uint64_t v78 = (void *)v76[1];
        swift_unknownObjectRetain();
        id v79 = v78;
        swift_bridgeObjectRelease();
        uint64_t v80 = v82;
        sub_1C0E8C8AC(v87, v82, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
        if (v77)
        {
          swift_unknownObjectRetain();
          objc_msgSend(v79, sel_sortingScore);
          uint64_t v38 = v81;
          swift_unknownObjectRelease();
          sub_1C0E8C974(v77, v79);
          sub_1C0E8C974(v77, v79);
          sub_1C0E8C914((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
          goto LABEL_37;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v80 = v82;
        sub_1C0E8C8AC(v87, v82, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
      }
      sub_1C0E8C914((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
      swift_unknownObjectRelease();
      uint64_t v38 = 0;
LABEL_37:
      uint64_t v65 = v86;
      sub_1C0E8C844(v80, v86, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
      goto LABEL_30;
    case 4u:
    case 5u:
      swift_unknownObjectRelease();
      goto LABEL_19;
    case 6u:
    case 7u:
      sub_1C0E8C914((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
      goto LABEL_19;
    case 8u:
      swift_bridgeObjectRelease();
LABEL_19:
      uint64_t v65 = v86;
      sub_1C0E8C8AC(v87, v86, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
      uint64_t v38 = 0;
      goto LABEL_30;
    default:
      id v26 = objc_msgSend(*v25, sel_identifier);
      uint64_t v27 = sub_1C151E62C();
      uint64_t v29 = v28;

      uint64_t v30 = v85;
      if (*(void *)(v85 + 16) && (unint64_t v31 = sub_1BFEF2D8C(v27, v29), (v32 & 1) != 0))
      {
        id v33 = (uint64_t *)(*(void *)(v30 + 56) + 16 * v31);
        uint64_t v34 = *v33;
        int64_t v35 = (void *)v33[1];
        swift_unknownObjectRetain();
        id v36 = v35;
        swift_bridgeObjectRelease();
        sub_1C0E8C8AC(v87, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
        if (v34)
        {
          swift_unknownObjectRetain();
          objc_msgSend(v36, sel_sortingScore);
          uint64_t v38 = v37;
          swift_unknownObjectRelease();
          sub_1C0E8C974(v34, v36);
          sub_1C0E8C974(v34, v36);
          goto LABEL_22;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1C0E8C8AC(v87, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
      }
      swift_unknownObjectRelease();
      uint64_t v38 = 0;
LABEL_22:
      uint64_t v65 = v86;
      uint64_t v66 = (uint64_t)v22;
LABEL_29:
      sub_1C0E8C844(v66, v65, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
LABEL_30:
      uint64_t result = type metadata accessor for ScoredFormatContentSlotItemResolution();
      *(void *)(v65 + *(int *)(result + 20)) = v38;
      return result;
  }
}

uint64_t sub_1C0E8A210(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1C0636428(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1C0E8A324(v5);
  *a1 = v2;
  return result;
}

void sub_1C0E8A27C(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for ScoredFormatContentSlotItemResolution() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_1C063643C(v3);
  }
  uint64_t v4 = v3[2];
  v5[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1C0E8AB0C(v5);
  *a1 = v3;
}

uint64_t sub_1C0E8A324(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[1];
  uint64_t result = sub_1C152086C();
  if (result < v4)
  {
    if (v4 >= 0) {
      uint64_t v6 = v4;
    }
    else {
      uint64_t v6 = v4 + 1;
    }
    if (v4 >= -1)
    {
      uint64_t v113 = result;
      long long v109 = a1;
      if (v4 < 2)
      {
        uint64_t v9 = MEMORY[0x1E4FBC860];
        uint64_t v117 = (char *)(MEMORY[0x1E4FBC860] + 32);
        if (v4 != 1)
        {
          unint64_t v13 = *(void *)(MEMORY[0x1E4FBC860] + 16);
          uint64_t v12 = (char *)MEMORY[0x1E4FBC860];
          if (v13 < 2) {
            goto LABEL_113;
          }
          goto LABEL_101;
        }
        uint64_t v112 = MEMORY[0x1E4FBC860];
        uint64_t v118 = v1;
      }
      else
      {
        uint64_t v118 = v1;
        uint64_t v7 = v6 >> 1;
        uint64_t v8 = sub_1C151ECCC();
        *(void *)(v8 + 16) = v7;
        uint64_t v112 = v8;
        uint64_t v117 = (char *)(v8 + 32);
      }
      uint64_t v10 = 0;
      uint64_t v11 = *a1;
      uint64_t v110 = *a1 - 16;
      uint64_t v111 = *a1 + 40;
      uint64_t v12 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v116 = v4;
      uint64_t v120 = *a1;
      while (1)
      {
        uint64_t v14 = v10++;
        uint64_t v115 = v14;
        if (v10 < v4)
        {
          uint64_t v15 = v12;
          uint64_t v16 = *(void **)(v11 + 16 * v10 + 8);
          uint64_t v17 = *(void **)(v11 + 16 * v14 + 8);
          swift_unknownObjectRetain();
          id v18 = v16;
          swift_unknownObjectRetain();
          id v19 = v17;
          objc_msgSend(v18, sel_sortingScore);
          double v21 = v20;
          objc_msgSend(v19, sel_sortingScore);
          double v23 = v22;

          uint64_t v4 = v116;
          swift_unknownObjectRelease();

          swift_unknownObjectRelease();
          uint64_t v10 = v14 + 2;
          if (v14 + 2 < v116)
          {
            uint64_t v24 = (void **)(v111 + 16 * v14);
            while (1)
            {
              uint64_t v25 = *v24;
              id v26 = *(v24 - 2);
              swift_unknownObjectRetain();
              id v27 = v25;
              swift_unknownObjectRetain();
              id v28 = v26;
              objc_msgSend(v27, sel_sortingScore);
              double v30 = v29;
              objc_msgSend(v28, sel_sortingScore);
              double v32 = v31;

              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              if (v23 <= v21 == v32 > v30) {
                break;
              }
              ++v10;
              v24 += 2;
              uint64_t v4 = v116;
              if (v116 == v10)
              {
                uint64_t v10 = v116;
                goto LABEL_23;
              }
            }
            uint64_t v4 = v116;
LABEL_23:
            uint64_t v14 = v115;
          }
          uint64_t v12 = v15;
          uint64_t v11 = v120;
          if (v23 <= v21)
          {
            if (v10 < v14) {
              goto LABEL_137;
            }
            if (v14 < v10)
            {
              id v33 = (long long *)(v110 + 16 * v10);
              uint64_t v34 = v10;
              uint64_t v35 = v14;
              id v36 = (long long *)(v120 + 16 * v14);
              do
              {
                if (v35 != --v34)
                {
                  if (!v120) {
                    goto LABEL_142;
                  }
                  long long v37 = *v36;
                  *id v36 = *v33;
                  *id v33 = v37;
                }
                ++v35;
                --v33;
                ++v36;
              }
              while (v35 < v34);
            }
          }
        }
        if (v10 < v4)
        {
          if (__OFSUB__(v10, v14)) {
            goto LABEL_135;
          }
          if (v10 - v14 < v113)
          {
            if (__OFADD__(v14, v113)) {
              goto LABEL_138;
            }
            if (v14 + v113 >= v4) {
              uint64_t v38 = v4;
            }
            else {
              uint64_t v38 = v14 + v113;
            }
            if (v38 < v14)
            {
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
              break;
            }
            if (v10 != v38)
            {
              uint64_t v108 = v12;
              uint64_t v39 = v110 + 16 * v10;
              uint64_t v114 = v38;
              do
              {
                long long v40 = *(_OWORD *)(v11 + 16 * v10);
                uint64_t v41 = v39;
                while (1)
                {
                  uint64_t v119 = (void *)*((void *)&v40 + 1);
                  uint64_t v42 = *(void **)(v41 + 8);
                  swift_unknownObjectRetain();
                  id v43 = v119;
                  swift_unknownObjectRetain();
                  id v44 = v42;
                  objc_msgSend(v43, sel_sortingScore);
                  double v46 = v45;
                  objc_msgSend(v44, sel_sortingScore);
                  double v48 = v47;

                  swift_unknownObjectRelease();
                  swift_unknownObjectRelease();
                  if (v48 > v46) {
                    break;
                  }
                  uint64_t v11 = v120;
                  if (!v120) {
                    goto LABEL_140;
                  }
                  long long v40 = *(_OWORD *)(v41 + 16);
                  *(_OWORD *)(v41 + 16) = *(_OWORD *)v41;
                  *(_OWORD *)uint64_t v41 = v40;
                  v41 -= 16;
                  if (v10 == ++v14) {
                    goto LABEL_43;
                  }
                }
                uint64_t v11 = v120;
LABEL_43:
                ++v10;
                v39 += 16;
                uint64_t v14 = v115;
              }
              while (v10 != v114);
              uint64_t v10 = v114;
              uint64_t v12 = v108;
            }
          }
        }
        if (v10 < v14) {
          goto LABEL_130;
        }
        id v49 = v12;
        if (swift_isUniquelyReferenced_nonNull_native()) {
          uint64_t v12 = v49;
        }
        else {
          uint64_t v12 = sub_1C0634CC8(0, *((void *)v49 + 2) + 1, 1, v49);
        }
        unint64_t v51 = *((void *)v12 + 2);
        unint64_t v50 = *((void *)v12 + 3);
        unint64_t v13 = v51 + 1;
        uint64_t v11 = v120;
        if (v51 >= v50 >> 1)
        {
          int64_t v100 = sub_1C0634CC8((char *)(v50 > 1), v51 + 1, 1, v12);
          uint64_t v11 = v120;
          uint64_t v12 = v100;
        }
        *((void *)v12 + 2) = v13;
        uint64_t v52 = v12 + 32;
        id v53 = &v12[16 * v51 + 32];
        *(void *)id v53 = v14;
        *((void *)v53 + 1) = v10;
        if (v51)
        {
          while (1)
          {
            unint64_t v54 = v13 - 1;
            if (v13 >= 4)
            {
              char v59 = &v52[16 * v13];
              uint64_t v60 = *((void *)v59 - 8);
              uint64_t v61 = *((void *)v59 - 7);
              BOOL v65 = __OFSUB__(v61, v60);
              uint64_t v62 = v61 - v60;
              if (v65) {
                goto LABEL_119;
              }
              uint64_t v64 = *((void *)v59 - 6);
              uint64_t v63 = *((void *)v59 - 5);
              BOOL v65 = __OFSUB__(v63, v64);
              uint64_t v57 = v63 - v64;
              char v58 = v65;
              if (v65) {
                goto LABEL_120;
              }
              unint64_t v66 = v13 - 2;
              int64_t v67 = &v52[16 * v13 - 32];
              uint64_t v69 = *(void *)v67;
              uint64_t v68 = *((void *)v67 + 1);
              BOOL v65 = __OFSUB__(v68, v69);
              uint64_t v70 = v68 - v69;
              if (v65) {
                goto LABEL_122;
              }
              BOOL v65 = __OFADD__(v57, v70);
              uint64_t v71 = v57 + v70;
              if (v65) {
                goto LABEL_125;
              }
              if (v71 >= v62)
              {
                uint64_t v89 = &v52[16 * v54];
                uint64_t v91 = *(void *)v89;
                uint64_t v90 = *((void *)v89 + 1);
                BOOL v65 = __OFSUB__(v90, v91);
                uint64_t v92 = v90 - v91;
                if (v65) {
                  goto LABEL_129;
                }
                BOOL v82 = v57 < v92;
                goto LABEL_87;
              }
            }
            else
            {
              if (v13 != 3)
              {
                uint64_t v83 = *((void *)v12 + 4);
                uint64_t v84 = *((void *)v12 + 5);
                BOOL v65 = __OFSUB__(v84, v83);
                uint64_t v76 = v84 - v83;
                char v77 = v65;
                goto LABEL_81;
              }
              uint64_t v56 = *((void *)v12 + 4);
              uint64_t v55 = *((void *)v12 + 5);
              BOOL v65 = __OFSUB__(v55, v56);
              uint64_t v57 = v55 - v56;
              char v58 = v65;
            }
            if (v58) {
              goto LABEL_121;
            }
            unint64_t v66 = v13 - 2;
            uint64_t v72 = &v52[16 * v13 - 32];
            uint64_t v74 = *(void *)v72;
            uint64_t v73 = *((void *)v72 + 1);
            BOOL v75 = __OFSUB__(v73, v74);
            uint64_t v76 = v73 - v74;
            char v77 = v75;
            if (v75) {
              goto LABEL_124;
            }
            uint64_t v78 = &v52[16 * v54];
            uint64_t v80 = *(void *)v78;
            uint64_t v79 = *((void *)v78 + 1);
            BOOL v65 = __OFSUB__(v79, v80);
            uint64_t v81 = v79 - v80;
            if (v65) {
              goto LABEL_127;
            }
            if (__OFADD__(v76, v81)) {
              goto LABEL_128;
            }
            if (v76 + v81 >= v57)
            {
              BOOL v82 = v57 < v81;
LABEL_87:
              if (v82) {
                unint64_t v54 = v66;
              }
              goto LABEL_89;
            }
LABEL_81:
            if (v77) {
              goto LABEL_123;
            }
            uint64_t v85 = &v52[16 * v54];
            uint64_t v87 = *(void *)v85;
            uint64_t v86 = *((void *)v85 + 1);
            BOOL v65 = __OFSUB__(v86, v87);
            uint64_t v88 = v86 - v87;
            if (v65) {
              goto LABEL_126;
            }
            if (v88 < v76) {
              goto LABEL_15;
            }
LABEL_89:
            unint64_t v93 = v54 - 1;
            if (v54 - 1 >= v13)
            {
              __break(1u);
LABEL_116:
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
              goto LABEL_139;
            }
            if (!v11) {
              goto LABEL_141;
            }
            uint64_t v94 = v12;
            uint64_t v95 = &v52[16 * v93];
            uint64_t v96 = *(void *)v95;
            uint64_t v97 = &v52[16 * v54];
            uint64_t v98 = *((void *)v97 + 1);
            sub_1C0E8B9D0((char *)(v11 + 16 * *(void *)v95), (char *)(v11 + 16 * *(void *)v97), v11 + 16 * v98, v117);
            if (v118)
            {
              uint64_t v9 = v112;
              goto LABEL_113;
            }
            if (v98 < v96) {
              goto LABEL_116;
            }
            if (v54 > *((void *)v94 + 2)) {
              goto LABEL_117;
            }
            *(void *)uint64_t v95 = v96;
            *(void *)&v52[16 * v93 + 8] = v98;
            unint64_t v99 = *((void *)v94 + 2);
            if (v54 >= v99) {
              goto LABEL_118;
            }
            unint64_t v13 = v99 - 1;
            memmove(&v52[16 * v54], v97 + 16, 16 * (v99 - 1 - v54));
            uint64_t v12 = v94;
            *((void *)v94 + 2) = v99 - 1;
            uint64_t v11 = v120;
            if (v99 <= 2) {
              goto LABEL_15;
            }
          }
        }
        unint64_t v13 = 1;
LABEL_15:
        uint64_t v4 = v116;
        if (v10 >= v116)
        {
          uint64_t v2 = v118;
          uint64_t v9 = v112;
          if (v13 < 2)
          {
LABEL_113:
            swift_bridgeObjectRelease();
            *(void *)(v9 + 16) = 0;
            return swift_bridgeObjectRelease();
          }
LABEL_101:
          uint64_t v101 = *v109;
          while (1)
          {
            unint64_t v102 = v13 - 2;
            if (v13 < 2) {
              goto LABEL_131;
            }
            if (!v101) {
              goto LABEL_143;
            }
            uint64_t v103 = v12;
            uint64_t v104 = *(void *)&v12[16 * v102 + 32];
            uint64_t v105 = *(void *)&v12[16 * v13 + 24];
            sub_1C0E8B9D0((char *)(v101 + 16 * v104), (char *)(v101 + 16 * *(void *)&v12[16 * v13 + 16]), v101 + 16 * v105, v117);
            if (v2) {
              goto LABEL_113;
            }
            if (v105 < v104) {
              goto LABEL_132;
            }
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v103 = sub_1C063604C((uint64_t)v103);
            }
            if (v102 >= *((void *)v103 + 2)) {
              goto LABEL_133;
            }
            uint64_t v106 = &v103[16 * v102 + 32];
            *(void *)uint64_t v106 = v104;
            *((void *)v106 + 1) = v105;
            unint64_t v107 = *((void *)v103 + 2);
            if (v13 > v107) {
              goto LABEL_134;
            }
            memmove(&v103[16 * v13 + 16], &v103[16 * v13 + 32], 16 * (v107 - v13));
            uint64_t v12 = v103;
            *((void *)v103 + 2) = v107 - 1;
            unint64_t v13 = v107 - 1;
            if (v107 <= 2) {
              goto LABEL_113;
            }
          }
        }
      }
    }
    uint64_t result = sub_1C15203FC();
    __break(1u);
    return result;
  }
  if (v4 < 0) {
    goto LABEL_136;
  }
  if (v4) {
    return sub_1C0E8B5D0(0, v4, 1, a1);
  }
  return result;
}

void sub_1C0E8AB0C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v140 = type metadata accessor for ScoredFormatContentSlotItemResolution();
  uint64_t v134 = *(void *)(v140 - 8);
  MEMORY[0x1F4188790](v140);
  uint64_t v131 = (uint64_t)&v126 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v141 = (uint64_t)&v126 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v137 = (uint64_t)&v126 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v136 = (uint64_t)&v126 - v10;
  uint64_t v11 = a1[1];
  uint64_t v12 = sub_1C152086C();
  if (v12 >= v11)
  {
    if (v11 < 0) {
      goto LABEL_138;
    }
    if (v11) {
      sub_1C0E8B708(0, v11, 1, a1);
    }
    return;
  }
  if (v11 >= 0) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v11 + 1;
  }
  if (v11 < -1) {
    goto LABEL_146;
  }
  uint64_t v128 = v12;
  if (v11 < 2)
  {
    uint64_t v17 = (char *)MEMORY[0x1E4FBC860];
    unint64_t v133 = MEMORY[0x1E4FBC860]
         + ((*(unsigned __int8 *)(v134 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v134 + 80));
    uint64_t v127 = MEMORY[0x1E4FBC860];
    if (v11 != 1)
    {
      unint64_t v19 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_104:
      uint64_t v119 = v17;
      if (v19 >= 2)
      {
        uint64_t v120 = *a1;
        do
        {
          unint64_t v121 = v19 - 2;
          if (v19 < 2) {
            goto LABEL_133;
          }
          if (!v120) {
            goto LABEL_145;
          }
          uint64_t v122 = *(void *)&v119[16 * v121 + 32];
          uint64_t v123 = *(void *)&v119[16 * v19 + 24];
          sub_1C0E8BD48(v120 + *(void *)(v134 + 72) * v122, v120 + *(void *)(v134 + 72) * *(void *)&v119[16 * v19 + 16], v120 + *(void *)(v134 + 72) * v123, v133);
          if (v2) {
            break;
          }
          if (v123 < v122) {
            goto LABEL_134;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v119 = sub_1C063604C((uint64_t)v119);
          }
          if (v121 >= *((void *)v119 + 2)) {
            goto LABEL_135;
          }
          uint64_t v124 = &v119[16 * v121 + 32];
          *(void *)uint64_t v124 = v122;
          *((void *)v124 + 1) = v123;
          unint64_t v125 = *((void *)v119 + 2);
          if (v19 > v125) {
            goto LABEL_136;
          }
          memmove(&v119[16 * v19 + 16], &v119[16 * v19 + 32], 16 * (v125 - v19));
          *((void *)v119 + 2) = v125 - 1;
          unint64_t v19 = v125 - 1;
        }
        while (v125 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v127 + 16) = 0;
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v14 = v13 >> 1;
    uint64_t v15 = sub_1C151ECCC();
    *(void *)(v15 + 16) = v14;
    uint64_t v16 = *(unsigned __int8 *)(v134 + 80);
    uint64_t v127 = v15;
    unint64_t v133 = v15 + ((v16 + 32) & ~v16);
  }
  uint64_t v18 = 0;
  uint64_t v17 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v138 = a1;
  while (1)
  {
    uint64_t v20 = v18;
    uint64_t v21 = v18 + 1;
    uint64_t v132 = v18;
    if (v18 + 1 >= v11)
    {
      uint64_t v31 = v18 + 1;
      goto LABEL_24;
    }
    uint64_t v135 = *a1;
    uint64_t v142 = *(void *)(v134 + 72);
    uint64_t v22 = v142;
    uint64_t v23 = v136;
    sub_1C0E8C8AC(v135 + v142 * v21, v136, (uint64_t (*)(void))type metadata accessor for ScoredFormatContentSlotItemResolution);
    uint64_t v24 = v135 + v22 * v20;
    uint64_t v25 = v137;
    sub_1C0E8C8AC(v24, v137, (uint64_t (*)(void))type metadata accessor for ScoredFormatContentSlotItemResolution);
    uint64_t v26 = *(int *)(v140 + 20);
    double v27 = *(double *)(v23 + v26);
    double v28 = *(double *)(v25 + v26);
    uint64_t v29 = v25;
    uint64_t v30 = v135;
    sub_1C0E8C914(v29, (uint64_t (*)(void))type metadata accessor for ScoredFormatContentSlotItemResolution);
    sub_1C0E8C914(v23, (uint64_t (*)(void))type metadata accessor for ScoredFormatContentSlotItemResolution);
    uint64_t v31 = v20 + 2;
    if (v20 + 2 >= v11)
    {
LABEL_21:
      if (v28 > v27) {
        goto LABEL_24;
      }
LABEL_42:
      if (v31 < v20) {
        goto LABEL_139;
      }
      if (v20 < v31)
      {
        uint64_t v129 = v17;
        uint64_t v130 = v11;
        uint64_t v55 = 0;
        uint64_t v56 = v20;
        uint64_t v57 = v142;
        uint64_t v58 = v142 * (v31 - 1);
        uint64_t v59 = v31 * v142;
        uint64_t v60 = v56;
        uint64_t v61 = v56 * v142;
        do
        {
          if (v60 != v31 + v55 - 1)
          {
            uint64_t v63 = v31;
            uint64_t v64 = v135;
            if (!v135) {
              goto LABEL_144;
            }
            unint64_t v65 = v135 + v61;
            uint64_t v139 = v135 + v58;
            sub_1C0E8C844(v135 + v61, v131, (uint64_t (*)(void))type metadata accessor for ScoredFormatContentSlotItemResolution);
            if (v61 < v58 || v65 >= v64 + v59)
            {
              uint64_t v62 = v139;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              uint64_t v62 = v139;
              if (v61 != v58) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            sub_1C0E8C844(v131, v62, (uint64_t (*)(void))type metadata accessor for ScoredFormatContentSlotItemResolution);
            uint64_t v31 = v63;
            uint64_t v57 = v142;
          }
          ++v60;
          --v55;
          v58 -= v57;
          v59 -= v57;
          v61 += v57;
        }
        while (v60 < v31 + v55);
        a1 = v138;
        uint64_t v17 = v129;
        uint64_t v11 = v130;
        uint64_t v20 = v132;
      }
      goto LABEL_24;
    }
    uint64_t v126 = v2;
    uint64_t v129 = v17;
    uint64_t v139 = v142 * v21;
    uint64_t v32 = v142 * v31;
    while (1)
    {
      uint64_t v33 = v11;
      uint64_t v34 = v31;
      uint64_t v35 = v136;
      sub_1C0E8C8AC(v30 + v32, v136, (uint64_t (*)(void))type metadata accessor for ScoredFormatContentSlotItemResolution);
      uint64_t v36 = v137;
      sub_1C0E8C8AC(v30 + v139, v137, (uint64_t (*)(void))type metadata accessor for ScoredFormatContentSlotItemResolution);
      BOOL v37 = *(double *)(v36 + *(int *)(v140 + 20)) > *(double *)(v35 + *(int *)(v140 + 20));
      sub_1C0E8C914(v36, (uint64_t (*)(void))type metadata accessor for ScoredFormatContentSlotItemResolution);
      sub_1C0E8C914(v35, (uint64_t (*)(void))type metadata accessor for ScoredFormatContentSlotItemResolution);
      if (v28 <= v27 == v37) {
        break;
      }
      ++v31;
      v30 += v142;
      uint64_t v11 = v33;
      if (v33 == v34 + 1)
      {
        uint64_t v31 = v33;
        a1 = v138;
        uint64_t v17 = v129;
        uint64_t v2 = v126;
        uint64_t v20 = v132;
        goto LABEL_21;
      }
    }
    a1 = v138;
    uint64_t v17 = v129;
    uint64_t v2 = v126;
    uint64_t v20 = v132;
    uint64_t v11 = v33;
    if (v28 <= v27) {
      goto LABEL_42;
    }
LABEL_24:
    if (v31 >= v11) {
      goto LABEL_56;
    }
    if (__OFSUB__(v31, v20)) {
      goto LABEL_137;
    }
    if (v31 - v20 >= v128) {
      goto LABEL_56;
    }
    if (__OFADD__(v20, v128)) {
      goto LABEL_140;
    }
    uint64_t v38 = v20 + v128 >= v11 ? v11 : v20 + v128;
    if (v38 < v20) {
      break;
    }
    if (v31 != v38)
    {
      uint64_t v129 = v17;
      uint64_t v130 = v38;
      uint64_t v126 = v2;
      uint64_t v39 = *(void *)(v134 + 72);
      uint64_t v142 = v39 * (v31 - 1);
      uint64_t v135 = v39;
      uint64_t v40 = v31 * v39;
      do
      {
        uint64_t v42 = 0;
        uint64_t v43 = v20;
        uint64_t v139 = v31;
        while (1)
        {
          uint64_t v44 = *a1;
          uint64_t v45 = v40;
          uint64_t v46 = v40 + v42 + *a1;
          uint64_t v47 = v136;
          sub_1C0E8C8AC(v46, v136, (uint64_t (*)(void))type metadata accessor for ScoredFormatContentSlotItemResolution);
          uint64_t v48 = v142 + v42 + v44;
          uint64_t v49 = v137;
          sub_1C0E8C8AC(v48, v137, (uint64_t (*)(void))type metadata accessor for ScoredFormatContentSlotItemResolution);
          uint64_t v50 = *(int *)(v140 + 20);
          double v51 = *(double *)(v47 + v50);
          double v52 = *(double *)(v49 + v50);
          sub_1C0E8C914(v49, (uint64_t (*)(void))type metadata accessor for ScoredFormatContentSlotItemResolution);
          sub_1C0E8C914(v47, (uint64_t (*)(void))type metadata accessor for ScoredFormatContentSlotItemResolution);
          if (v52 > v51) {
            break;
          }
          uint64_t v53 = *a1;
          if (!*a1) {
            goto LABEL_142;
          }
          uint64_t v40 = v45;
          uint64_t v54 = v53 + v142 + v42;
          sub_1C0E8C844(v53 + v45 + v42, v141, (uint64_t (*)(void))type metadata accessor for ScoredFormatContentSlotItemResolution);
          swift_arrayInitWithTakeFrontToBack();
          sub_1C0E8C844(v141, v54, (uint64_t (*)(void))type metadata accessor for ScoredFormatContentSlotItemResolution);
          v42 -= v135;
          ++v43;
          a1 = v138;
          uint64_t v41 = v139;
          if (v139 == v43) {
            goto LABEL_35;
          }
        }
        uint64_t v41 = v139;
        uint64_t v40 = v45;
LABEL_35:
        uint64_t v31 = v41 + 1;
        v142 += v135;
        v40 += v135;
        uint64_t v20 = v132;
      }
      while (v31 != v130);
      uint64_t v31 = v130;
      uint64_t v2 = v126;
      uint64_t v17 = v129;
    }
LABEL_56:
    if (v31 < v20) {
      goto LABEL_132;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v139 = v31;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v17 = sub_1C0634CC8(0, *((void *)v17 + 2) + 1, 1, v17);
    }
    unint64_t v68 = *((void *)v17 + 2);
    unint64_t v67 = *((void *)v17 + 3);
    unint64_t v19 = v68 + 1;
    if (v68 >= v67 >> 1) {
      uint64_t v17 = sub_1C0634CC8((char *)(v67 > 1), v68 + 1, 1, v17);
    }
    *((void *)v17 + 2) = v19;
    uint64_t v69 = v17 + 32;
    uint64_t v70 = &v17[16 * v68 + 32];
    uint64_t v71 = v139;
    *(void *)uint64_t v70 = v20;
    *((void *)v70 + 1) = v71;
    if (v68)
    {
      while (1)
      {
        unint64_t v72 = v19 - 1;
        if (v19 >= 4)
        {
          char v77 = &v69[16 * v19];
          uint64_t v78 = *((void *)v77 - 8);
          uint64_t v79 = *((void *)v77 - 7);
          BOOL v83 = __OFSUB__(v79, v78);
          uint64_t v80 = v79 - v78;
          if (v83) {
            goto LABEL_121;
          }
          uint64_t v82 = *((void *)v77 - 6);
          uint64_t v81 = *((void *)v77 - 5);
          BOOL v83 = __OFSUB__(v81, v82);
          uint64_t v75 = v81 - v82;
          char v76 = v83;
          if (v83) {
            goto LABEL_122;
          }
          unint64_t v84 = v19 - 2;
          uint64_t v85 = &v69[16 * v19 - 32];
          uint64_t v87 = *(void *)v85;
          uint64_t v86 = *((void *)v85 + 1);
          BOOL v83 = __OFSUB__(v86, v87);
          uint64_t v88 = v86 - v87;
          if (v83) {
            goto LABEL_124;
          }
          BOOL v83 = __OFADD__(v75, v88);
          uint64_t v89 = v75 + v88;
          if (v83) {
            goto LABEL_127;
          }
          if (v89 >= v80)
          {
            unint64_t v107 = &v69[16 * v72];
            uint64_t v109 = *(void *)v107;
            uint64_t v108 = *((void *)v107 + 1);
            BOOL v83 = __OFSUB__(v108, v109);
            uint64_t v110 = v108 - v109;
            if (v83) {
              goto LABEL_131;
            }
            BOOL v100 = v75 < v110;
            goto LABEL_93;
          }
        }
        else
        {
          if (v19 != 3)
          {
            uint64_t v101 = *((void *)v17 + 4);
            uint64_t v102 = *((void *)v17 + 5);
            BOOL v83 = __OFSUB__(v102, v101);
            uint64_t v94 = v102 - v101;
            char v95 = v83;
            goto LABEL_87;
          }
          uint64_t v74 = *((void *)v17 + 4);
          uint64_t v73 = *((void *)v17 + 5);
          BOOL v83 = __OFSUB__(v73, v74);
          uint64_t v75 = v73 - v74;
          char v76 = v83;
        }
        if (v76) {
          goto LABEL_123;
        }
        unint64_t v84 = v19 - 2;
        uint64_t v90 = &v69[16 * v19 - 32];
        uint64_t v92 = *(void *)v90;
        uint64_t v91 = *((void *)v90 + 1);
        BOOL v93 = __OFSUB__(v91, v92);
        uint64_t v94 = v91 - v92;
        char v95 = v93;
        if (v93) {
          goto LABEL_126;
        }
        uint64_t v96 = &v69[16 * v72];
        uint64_t v98 = *(void *)v96;
        uint64_t v97 = *((void *)v96 + 1);
        BOOL v83 = __OFSUB__(v97, v98);
        uint64_t v99 = v97 - v98;
        if (v83) {
          goto LABEL_129;
        }
        if (__OFADD__(v94, v99)) {
          goto LABEL_130;
        }
        if (v94 + v99 >= v75)
        {
          BOOL v100 = v75 < v99;
LABEL_93:
          if (v100) {
            unint64_t v72 = v84;
          }
          goto LABEL_95;
        }
LABEL_87:
        if (v95) {
          goto LABEL_125;
        }
        uint64_t v103 = &v69[16 * v72];
        uint64_t v105 = *(void *)v103;
        uint64_t v104 = *((void *)v103 + 1);
        BOOL v83 = __OFSUB__(v104, v105);
        uint64_t v106 = v104 - v105;
        if (v83) {
          goto LABEL_128;
        }
        if (v106 < v94) {
          goto LABEL_14;
        }
LABEL_95:
        unint64_t v111 = v72 - 1;
        if (v72 - 1 >= v19)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        uint64_t v112 = *a1;
        if (!*a1) {
          goto LABEL_143;
        }
        uint64_t v113 = v17;
        uint64_t v114 = &v69[16 * v111];
        uint64_t v115 = *(void *)v114;
        uint64_t v116 = &v69[16 * v72];
        uint64_t v117 = *((void *)v116 + 1);
        sub_1C0E8BD48(v112 + *(void *)(v134 + 72) * *(void *)v114, v112 + *(void *)(v134 + 72) * *(void *)v116, v112 + *(void *)(v134 + 72) * v117, v133);
        if (v2) {
          goto LABEL_115;
        }
        if (v117 < v115) {
          goto LABEL_118;
        }
        if (v72 > *((void *)v113 + 2)) {
          goto LABEL_119;
        }
        *(void *)uint64_t v114 = v115;
        *(void *)&v69[16 * v111 + 8] = v117;
        unint64_t v118 = *((void *)v113 + 2);
        if (v72 >= v118) {
          goto LABEL_120;
        }
        uint64_t v17 = v113;
        unint64_t v19 = v118 - 1;
        memmove(&v69[16 * v72], v116 + 16, 16 * (v118 - 1 - v72));
        *((void *)v113 + 2) = v118 - 1;
        a1 = v138;
        if (v118 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v19 = 1;
LABEL_14:
    uint64_t v11 = a1[1];
    uint64_t v18 = v139;
    if (v139 >= v11) {
      goto LABEL_104;
    }
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  sub_1C15203FC();
  __break(1u);
}

uint64_t sub_1C0E8B5D0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v17 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v5 = *a4;
    uint64_t v6 = *a4 + 16 * a3 - 16;
LABEL_5:
    long long v7 = *(_OWORD *)(v5 + 16 * v4);
    uint64_t v8 = v17;
    uint64_t v19 = v6;
    while (1)
    {
      uint64_t v18 = (void *)*((void *)&v7 + 1);
      uint64_t v9 = *(void **)(v6 + 8);
      swift_unknownObjectRetain();
      id v10 = v18;
      swift_unknownObjectRetain();
      id v11 = v9;
      objc_msgSend(v10, sel_sortingScore);
      double v13 = v12;
      objc_msgSend(v11, sel_sortingScore);
      double v15 = v14;

      swift_unknownObjectRelease();
      uint64_t result = swift_unknownObjectRelease();
      if (v15 > v13)
      {
LABEL_4:
        ++v4;
        uint64_t v6 = v19 + 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v5) {
        break;
      }
      long long v7 = *(_OWORD *)(v6 + 16);
      *(_OWORD *)(v6 + 16) = *(_OWORD *)v6;
      *(_OWORD *)uint64_t v6 = v7;
      v6 -= 16;
      if (v4 == ++v8) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

void sub_1C0E8B708(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v27 = a1;
  uint64_t v30 = type metadata accessor for ScoredFormatContentSlotItemResolution();
  MEMORY[0x1F4188790](v30);
  uint64_t v31 = (uint64_t)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  id v10 = (char *)&v25 - v9;
  MEMORY[0x1F4188790](v11);
  double v14 = (char *)&v25 - v13;
  uint64_t v29 = a3;
  uint64_t v26 = a2;
  if (a3 != a2)
  {
    uint64_t v15 = *(void *)(v12 + 72);
    uint64_t v33 = v15 * (v29 - 1);
    uint64_t v28 = v15;
    uint64_t v32 = v15 * v29;
LABEL_5:
    uint64_t v16 = 0;
    uint64_t v17 = v27;
    while (1)
    {
      uint64_t v18 = *a4;
      uint64_t v19 = a4;
      sub_1C0E8C8AC(v32 + v16 + *a4, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ScoredFormatContentSlotItemResolution);
      sub_1C0E8C8AC(v33 + v16 + v18, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ScoredFormatContentSlotItemResolution);
      uint64_t v20 = *(int *)(v30 + 20);
      double v21 = *(double *)&v14[v20];
      double v22 = *(double *)&v10[v20];
      sub_1C0E8C914((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ScoredFormatContentSlotItemResolution);
      sub_1C0E8C914((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ScoredFormatContentSlotItemResolution);
      if (v22 > v21)
      {
LABEL_4:
        v33 += v28;
        v32 += v28;
        if (++v29 == v26) {
          return;
        }
        goto LABEL_5;
      }
      uint64_t v23 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v24 = v23 + v33 + v16;
      sub_1C0E8C844(v23 + v32 + v16, v31, (uint64_t (*)(void))type metadata accessor for ScoredFormatContentSlotItemResolution);
      swift_arrayInitWithTakeFrontToBack();
      sub_1C0E8C844(v31, v24, (uint64_t (*)(void))type metadata accessor for ScoredFormatContentSlotItemResolution);
      v16 -= v28;
      ++v17;
      a4 = v19;
      if (v29 == v17) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1C0E8B9D0(char *__src, char *a2, unint64_t a3, char *a4)
{
  uint64_t v4 = a2;
  uint64_t v5 = __src;
  int64_t v6 = a2 - __src;
  int64_t v7 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v7 = a2 - __src;
  }
  uint64_t v8 = v7 >> 4;
  uint64_t v9 = a3 - (void)a2;
  uint64_t v10 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v10 = a3 - (void)a2;
  }
  uint64_t v11 = v10 >> 4;
  uint64_t v43 = __src;
  uint64_t v42 = a4;
  if (v8 >= v10 >> 4)
  {
    if (v9 >= -15)
    {
      if (a4 != a2 || &a2[16 * v11] <= a4) {
        memmove(a4, a2, 16 * v11);
      }
      uint64_t v23 = &a4[16 * v11];
      uint64_t v41 = v23;
      uint64_t v43 = v4;
      if (v5 < v4 && v9 >= 16)
      {
        uint64_t v24 = (char *)(a3 - 16);
        uint64_t v25 = v4;
        while (1)
        {
          uint64_t v38 = v24 + 16;
          uint64_t v40 = v4;
          uint64_t v26 = (void *)*((void *)v23 - 1);
          uint64_t v27 = v23 - 16;
          uint64_t v28 = (void *)*((void *)v25 - 1);
          v25 -= 16;
          unint64_t v29 = (unint64_t)v23;
          swift_unknownObjectRetain();
          id v30 = v26;
          swift_unknownObjectRetain();
          id v31 = v28;
          objc_msgSend(v30, sel_sortingScore);
          double v33 = v32;
          objc_msgSend(v31, sel_sortingScore);
          double v35 = v34;

          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          if (v35 <= v33)
          {
            if (v38 != v40 || v24 >= v40) {
              *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
            }
            uint64_t v43 = v25;
            uint64_t v23 = (char *)v29;
            if (v25 <= v5) {
              goto LABEL_43;
            }
          }
          else
          {
            uint64_t v41 = v27;
            if ((unint64_t)v38 < v29 || (unint64_t)v24 >= v29 || v38 != (char *)v29) {
              *(_OWORD *)uint64_t v24 = *(_OWORD *)v27;
            }
            uint64_t v25 = v40;
            uint64_t v23 = v27;
            if (v40 <= v5) {
              goto LABEL_43;
            }
          }
          v24 -= 16;
          uint64_t v4 = v25;
          if (v23 <= a4) {
            goto LABEL_43;
          }
        }
      }
      goto LABEL_43;
    }
  }
  else if (v6 >= -15)
  {
    if (a4 != __src || &__src[16 * v8] <= a4) {
      memmove(a4, __src, 16 * v8);
    }
    uint64_t v12 = &a4[16 * v8];
    uint64_t v41 = v12;
    if ((unint64_t)v4 < a3 && v6 >= 16)
    {
      uint64_t v13 = a4;
      do
      {
        double v14 = (void *)*((void *)v4 + 1);
        uint64_t v15 = (void *)*((void *)v13 + 1);
        swift_unknownObjectRetain();
        id v16 = v14;
        swift_unknownObjectRetain();
        id v17 = v15;
        objc_msgSend(v16, sel_sortingScore);
        double v19 = v18;
        objc_msgSend(v17, sel_sortingScore);
        double v21 = v20;

        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        if (v21 <= v19)
        {
          double v22 = v4 + 16;
          if (v5 < v4 || v5 >= v22 || v5 != v4) {
            *(_OWORD *)uint64_t v5 = *(_OWORD *)v4;
          }
        }
        else
        {
          if (v5 != v13) {
            *(_OWORD *)uint64_t v5 = *(_OWORD *)v13;
          }
          v13 += 16;
          uint64_t v42 = v13;
          double v22 = v4;
        }
        v5 += 16;
        if (v13 >= v12) {
          break;
        }
        uint64_t v4 = v22;
      }
      while ((unint64_t)v22 < a3);
      uint64_t v43 = v5;
    }
LABEL_43:
    sub_1C0634DF8((void **)&v43, (const void **)&v42, &v41);
    return 1;
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0E8BD48(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v42 = type metadata accessor for ScoredFormatContentSlotItemResolution();
  MEMORY[0x1F4188790](v42);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v40 - v11;
  uint64_t v14 = *(void *)(v13 + 72);
  if (!v14)
  {
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  if (a2 - a1 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_69;
  }
  int64_t v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_70;
  }
  uint64_t v16 = (uint64_t)(a2 - a1) / v14;
  unint64_t v45 = a1;
  unint64_t v44 = a4;
  uint64_t v17 = v15 / v14;
  if (v16 >= v15 / v14)
  {
    if ((v17 & 0x8000000000000000) == 0)
    {
      uint64_t v19 = v17 * v14;
      if (a4 < a2 || a2 + v19 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v30 = a4 + v19;
      unint64_t v43 = a4 + v19;
      unint64_t v45 = a2;
      unint64_t v41 = a1;
      if (v19 >= 1 && a1 < a2)
      {
        do
        {
          unint64_t v32 = a3 - v14;
          sub_1C0E8C8AC(v30 - v14, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ScoredFormatContentSlotItemResolution);
          unint64_t v33 = a2 - v14;
          sub_1C0E8C8AC(a2 - v14, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ScoredFormatContentSlotItemResolution);
          uint64_t v34 = *(int *)(v42 + 20);
          double v35 = *(double *)&v12[v34];
          double v36 = *(double *)&v9[v34];
          sub_1C0E8C914((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ScoredFormatContentSlotItemResolution);
          sub_1C0E8C914((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ScoredFormatContentSlotItemResolution);
          if (v36 <= v35)
          {
            if (a3 < a2 || v32 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v45 -= v14;
          }
          else
          {
            unint64_t v37 = v43;
            v43 -= v14;
            if (a3 < v37 || v32 >= v37)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v37)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v33 = a2;
          }
          unint64_t v30 = v43;
          if (v43 <= a4) {
            break;
          }
          a2 = v33;
          a3 -= v14;
        }
        while (v33 > v41);
      }
      goto LABEL_67;
    }
  }
  else if ((v16 & 0x8000000000000000) == 0)
  {
    uint64_t v18 = v16 * v14;
    if (a4 < a1 || a1 + v18 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v20 = a4 + v18;
    unint64_t v43 = a4 + v18;
    if (v18 >= 1 && a2 < a3)
    {
      do
      {
        sub_1C0E8C8AC(a2, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ScoredFormatContentSlotItemResolution);
        sub_1C0E8C8AC(a4, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ScoredFormatContentSlotItemResolution);
        uint64_t v22 = *(int *)(v42 + 20);
        double v23 = *(double *)&v12[v22];
        double v24 = *(double *)&v9[v22];
        sub_1C0E8C914((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ScoredFormatContentSlotItemResolution);
        sub_1C0E8C914((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ScoredFormatContentSlotItemResolution);
        unint64_t v25 = v45;
        if (v24 <= v23)
        {
          unint64_t v28 = a2 + v14;
          if (v45 < a2 || v45 >= v28)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v45 == a2)
          {
            unint64_t v25 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          unint64_t v26 = v44 + v14;
          if (v45 < v44 || v45 >= v26)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v45 != v44)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v44 = v26;
          unint64_t v28 = a2;
        }
        unint64_t v45 = v25 + v14;
        a4 = v44;
        if (v44 >= v20) {
          break;
        }
        a2 = v28;
      }
      while (v28 < a3);
    }
LABEL_67:
    sub_1C06355FC(&v45, &v44, (uint64_t *)&v43);
    return 1;
  }
LABEL_71:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0E8C22C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v21 = a3;
  uint64_t v22 = a4;
  uint64_t v20 = a2;
  uint64_t v7 = type metadata accessor for ScoredFormatContentSlotItemResolution();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (v11)
  {
    uint64_t v23 = MEMORY[0x1E4FBC860];
    sub_1C05F6A14(0, v11, 0);
    uint64_t v12 = v23;
    uint64_t v13 = *(void *)(type metadata accessor for FormatContentSlotItemResolution() - 8);
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    uint64_t v15 = *(void *)(v13 + 72);
    while (1)
    {
      sub_1C0E8995C(v14, v20, v21, v22, (uint64_t)v10);
      if (v5) {
        break;
      }
      uint64_t v5 = 0;
      uint64_t v23 = v12;
      unint64_t v17 = *(void *)(v12 + 16);
      unint64_t v16 = *(void *)(v12 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1C05F6A14(v16 > 1, v17 + 1, 1);
        uint64_t v12 = v23;
      }
      *(void *)(v12 + 16) = v17 + 1;
      sub_1C0E8C844((uint64_t)v10, v12+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v17, (uint64_t (*)(void))type metadata accessor for ScoredFormatContentSlotItemResolution);
      v14 += v15;
      if (!--v11) {
        return v12;
      }
    }
    swift_release();
  }
  return v12;
}

uint64_t sub_1C0E8C424(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0E8C46C(uint64_t a1, uint64_t a2)
{
  sub_1C0E8C810(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for FormatContentSlotItemResolution();
  MEMORY[0x1F4188790](v37);
  uint64_t v36 = (uint64_t)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v32 = (uint64_t)v31 - v11;
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12) {
    return MEMORY[0x1E4FBC860];
  }
  v31[1] = v2;
  uint64_t v33 = v10;
  uint64_t v34 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  double v35 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  swift_bridgeObjectRetain();
  v31[0] = a1;
  uint64_t v13 = (void **)(a1 + 40);
  unint64_t v14 = MEMORY[0x1E4FBC860];
  do
  {
    unint64_t v38 = v14;
    uint64_t v15 = (uint64_t)v7;
    unint64_t v16 = *(v13 - 1);
    unint64_t v17 = *v13;
    swift_unknownObjectRetain_n();
    id v18 = v17;
    id v19 = objc_msgSend(v16, sel_articleID, v31[0]);
    uint64_t v20 = sub_1C151E62C();
    uint64_t v22 = v21;

    swift_unknownObjectRelease();
    if (*(void *)(a2 + 16) && (unint64_t v23 = sub_1BFEF2D8C(v20, v22), (v24 & 1) != 0))
    {
      uint64_t v7 = (char *)v15;
      sub_1C0E8C8AC(*(void *)(a2 + 56) + *(void *)(v33 + 72) * v23, v15, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
      uint64_t v25 = 0;
    }
    else
    {
      uint64_t v25 = 1;
      uint64_t v7 = (char *)v15;
    }
    uint64_t v26 = v37;
    (*v35)(v7, v25, 1, v37);

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    if ((*v34)(v7, 1, v26) == 1)
    {
      sub_1C0E8C914((uint64_t)v7, (uint64_t (*)(void))sub_1C0E8C810);
      unint64_t v14 = v38;
    }
    else
    {
      uint64_t v27 = v32;
      sub_1C0E8C844((uint64_t)v7, v32, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
      sub_1C0E8C844(v27, v36, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
      unint64_t v14 = v38;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v14 = sub_1C0EE2804(0, *(void *)(v14 + 16) + 1, 1, v14);
      }
      unint64_t v29 = *(void *)(v14 + 16);
      unint64_t v28 = *(void *)(v14 + 24);
      if (v29 >= v28 >> 1) {
        unint64_t v14 = sub_1C0EE2804(v28 > 1, v29 + 1, 1, v14);
      }
      *(void *)(v14 + 16) = v29 + 1;
      sub_1C0E8C844(v36, v14+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(void *)(v33 + 72) * v29, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
    }
    v13 += 2;
    --v12;
  }
  while (v12);
  swift_bridgeObjectRelease();
  return v14;
}

void sub_1C0E8C810(uint64_t a1)
{
}

uint64_t sub_1C0E8C844(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0E8C8AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0E8C914(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C0E8C974(uint64_t a1, void *a2)
{
  if (a1)
  {
    swift_unknownObjectRelease();
  }
}

char *sub_1C0E8C9B4(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *(void *)a1 = *a2;
    a1 = &v7[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    type metadata accessor for FormatContentSlotItemObject.Resolved();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v8 = *a2;
        *(void *)a1 = *a2;
        uint64_t v9 = v8;
        goto LABEL_80;
      case 3u:
        uint64_t v168 = v6;
        uint64_t v10 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v10;
        unsigned int v166 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
        uint64_t v11 = v166[5];
        uint64_t v12 = &a1[v11];
        uint64_t v13 = (char *)a2 + v11;
        uint64_t v14 = *(uint64_t *)((char *)a2 + v11 + 8);
        *(void *)uint64_t v12 = *(char **)((char *)a2 + v11);
        *((void *)v12 + 1) = v14;
        uint64_t v15 = (int *)type metadata accessor for FormatWebEmbed();
        uint64_t v16 = v15[5];
        uint64_t v156 = &v13[v16];
        uint64_t v158 = &v12[v16];
        uint64_t v17 = sub_1C1515FDC();
        uint64_t v18 = *(void *)(v17 - 8);
        id v19 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v19(v158, v156, v17);
        uint64_t v20 = v15[6];
        __dst = &v12[v20];
        uint64_t v21 = &v13[v20];
        uint64_t v154 = v17;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(&v13[v20], 1, v17))
        {
          sub_1C0086AE0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
          memcpy(__dst, v21, *(void *)(*(void *)(v22 - 8) + 64));
        }
        else
        {
          v19(__dst, v21, v17);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
        }
        *(void *)&v12[v15[7]] = *(void *)&v13[v15[7]];
        uint64_t v41 = v15[8];
        uint64_t v42 = &v12[v41];
        unint64_t v43 = &v13[v41];
        uint64_t v44 = *((void *)v43 + 1);
        *(void *)uint64_t v42 = *(void *)v43;
        *((void *)v42 + 1) = v44;
        uint64_t v45 = v15[9];
        uint64_t v46 = &v12[v45];
        uint64_t v47 = &v13[v45];
        uint64_t v48 = *((void *)v47 + 1);
        *(void *)uint64_t v46 = *(void *)v47;
        *((void *)v46 + 1) = v48;
        *(void *)&v12[v15[10]] = *(void *)&v13[v15[10]];
        *(void *)&v12[v15[11]] = *(void *)&v13[v15[11]];
        *(void *)&v12[v15[12]] = *(void *)&v13[v15[12]];
        *(void *)&a1[v166[6]] = *(char **)((char *)a2 + v166[6]);
        *(void *)&a1[v166[7]] = *(char **)((char *)a2 + v166[7]);
        uint64_t v49 = v166[8];
        unint64_t v159 = (uint64_t *)((char *)a2 + v49);
        __dsta = &a1[v49];
        uint64_t v50 = type metadata accessor for WebEmbedDataVisualization();
        uint64_t v155 = *(void *)(v50 - 8);
        uint64_t v157 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v155 + 48);
        uint64_t v51 = v50;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        if (v157(v159, 1, v51))
        {
          sub_1C0086AE0(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
          memcpy(__dsta, v159, *(void *)(*(void *)(v52 - 8) + 64));
        }
        else
        {
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          uint64_t v55 = *v159;
          if (EnumCaseMultiPayload == 1)
          {
            uint64_t v56 = v159[1];
            *(void *)__dsta = v55;
            *((void *)__dsta + 1) = v56;
            uint64_t v57 = type metadata accessor for GenericDataVisualization();
            uint64_t v58 = *(int *)(v57 + 20);
            uint64_t v59 = &__dsta[v58];
            uint64_t v60 = (char *)v159 + v58;
            swift_bridgeObjectRetain();
            v19(v59, v60, v154);
            *(void *)&__dsta[*(int *)(v57 + 24)] = *(uint64_t *)((char *)v159 + *(int *)(v57 + 24));
            swift_bridgeObjectRetain();
          }
          else
          {
            *(void *)__dsta = v55;
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(char *, void, uint64_t, uint64_t))(v155 + 56))(__dsta, 0, 1, v51);
        }
        uint64_t v78 = v166[9];
        uint64_t v79 = &a1[v78];
        uint64_t v80 = (char *)a2 + v78;
        sub_1BFEC84E0();
        uint64_t v82 = v81;
        uint64_t v83 = *(void *)(v81 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v80, 1, v81))
        {
          sub_1BFEC8548(0);
          memcpy(v79, v80, *(void *)(*(void *)(v84 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v79, v80, v82);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v79, 0, 1, v82);
        }
        goto LABEL_36;
      case 6u:
        *(void *)a1 = *a2;
        uint64_t v32 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
        uint64_t v33 = &a1[v32];
        uint64_t v34 = (char **)((char *)a2 + v32);
        type metadata accessor for PuzzleStatisticCategory(0);
        swift_unknownObjectRetain();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v64 = type metadata accessor for PuzzleStatisticValue(0);
            int v65 = swift_getEnumCaseMultiPayload();
            uint64_t v171 = v64;
            if (v65 == 5)
            {
              uint64_t v115 = type metadata accessor for PuzzleStreak();
              uint64_t v116 = *(void *)(v115 - 8);
              if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v116 + 48))(v34, 1, v115))
              {
                sub_1C0086AE0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                memcpy(v33, v34, *(void *)(*(void *)(v117 - 8) + 64));
              }
              else
              {
                uint64_t v126 = sub_1C151555C();
                (*(void (**)(char *, void *, uint64_t))(*(void *)(v126 - 8) + 16))(v33, v34, v126);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v116 + 56))(v33, 0, 1, v115);
              }
              uint64_t v64 = v171;
            }
            else
            {
              if (v65 != 4)
              {
                memcpy(v33, v34, *(void *)(*(void *)(v64 - 8) + 64));
                goto LABEL_59;
              }
              uint64_t v66 = type metadata accessor for PuzzleStreak();
              uint64_t v67 = *(void *)(v66 - 8);
              if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v67 + 48))(v34, 1, v66))
              {
                sub_1C0086AE0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                memcpy(v33, v34, *(void *)(*(void *)(v68 - 8) + 64));
              }
              else
              {
                uint64_t v125 = sub_1C151555C();
                (*(void (**)(char *, void *, uint64_t))(*(void *)(v125 - 8) + 16))(v33, v34, v125);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v33, 0, 1, v66);
              }
              uint64_t v64 = v171;
            }
            swift_storeEnumTagMultiPayload();
LABEL_59:
            uint64_t v127 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
            uint64_t v128 = *(int *)(v127 + 20);
            uint64_t v129 = &v33[v128];
            uint64_t v130 = (char *)v34 + v128;
            int v131 = swift_getEnumCaseMultiPayload();
            if (v131 == 5)
            {
              __dste = v33;
              uint64_t v135 = type metadata accessor for PuzzleStreak();
              uint64_t v136 = *(void *)(v135 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v136 + 48))(v130, 1, v135))
              {
                sub_1C0086AE0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                memcpy(v129, v130, *(void *)(*(void *)(v137 - 8) + 64));
              }
              else
              {
                uint64_t v139 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v139 - 8) + 16))(v129, v130, v139);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v136 + 56))(v129, 0, 1, v135);
              }
              uint64_t v64 = v171;
              swift_storeEnumTagMultiPayload();
              uint64_t v33 = __dste;
            }
            else if (v131 == 4)
            {
              __dstd = v33;
              uint64_t v132 = type metadata accessor for PuzzleStreak();
              uint64_t v133 = *(void *)(v132 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v133 + 48))(v130, 1, v132))
              {
                sub_1C0086AE0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                memcpy(v129, v130, *(void *)(*(void *)(v134 - 8) + 64));
              }
              else
              {
                uint64_t v138 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 16))(v129, v130, v138);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v133 + 56))(v129, 0, 1, v132);
              }
              uint64_t v33 = __dstd;
              uint64_t v64 = v171;
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v129, v130, *(void *)(*(void *)(v64 - 8) + 64));
            }
            uint64_t v140 = *(int *)(v127 + 24);
            uint64_t v141 = &v33[v140];
            uint64_t v142 = (char *)v34 + v140;
            int v143 = swift_getEnumCaseMultiPayload();
            if (v143 == 5)
            {
              uint64_t v144 = type metadata accessor for PuzzleStreak();
              uint64_t v145 = *(void *)(v144 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v145 + 48))(v142, 1, v144)) {
                goto LABEL_73;
              }
            }
            else
            {
              if (v143 != 4)
              {
                memcpy(v141, v142, *(void *)(*(void *)(v64 - 8) + 64));
                goto LABEL_79;
              }
              uint64_t v144 = type metadata accessor for PuzzleStreak();
              uint64_t v145 = *(void *)(v144 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v145 + 48))(v142, 1, v144))
              {
LABEL_73:
                sub_1C0086AE0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                memcpy(v141, v142, *(void *)(*(void *)(v146 - 8) + 64));
                goto LABEL_78;
              }
            }
            uint64_t v147 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v147 - 8) + 16))(v141, v142, v147);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v145 + 56))(v141, 0, 1, v144);
            goto LABEL_78;
          case 2u:
            uint64_t v61 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
            uint64_t v62 = *((void *)v61 - 1);
            if ((*(unsigned int (**)(void *, uint64_t, int *))(v62 + 48))(v34, 1, v61))
            {
              sub_1C0086AE0(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
              memcpy(v33, v34, *(void *)(*(void *)(v63 - 8) + 64));
            }
            else
            {
              uint64_t v170 = v6;
              uint64_t v85 = sub_1C151631C();
              (*(void (**)(char *, void *, uint64_t))(*(void *)(v85 - 8) + 16))(v33, v34, v85);
              uint64_t v86 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
              uint64_t v87 = v86[5];
              uint64_t v88 = &v33[v87];
              uint64_t v89 = (void *)((char *)v34 + v87);
              uint64_t v90 = v89[1];
              *(void *)uint64_t v88 = *v89;
              *((void *)v88 + 1) = v90;
              uint64_t v91 = v86[6];
              __dstc = v33;
              uint64_t v92 = &v33[v91];
              BOOL v93 = (void *)((char *)v34 + v91);
              uint64_t v94 = v93[1];
              *(void *)uint64_t v92 = *v93;
              *((void *)v92 + 1) = v94;
              char v95 = v93 + 2;
              unint64_t v96 = v93[3];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v96 >> 60 == 15)
              {
                *((_OWORD *)v92 + 1) = *(_OWORD *)v95;
              }
              else
              {
                uint64_t v118 = *v95;
                sub_1BFE95820(*v95, v96);
                *((void *)v92 + 2) = v118;
                *((void *)v92 + 3) = v96;
              }
              *(void *)&__dstc[v86[7]] = *(void *)((char *)v34 + v86[7]);
              *(void *)&__dstc[v86[8]] = *(void *)((char *)v34 + v86[8]);
              *(void *)&__dstc[v61[5]] = *(void *)((char *)v34 + v61[5]);
              *(void *)&__dstc[v61[6]] = *(void *)((char *)v34 + v61[6]);
              uint64_t v119 = v61[7];
              uint64_t v120 = &__dstc[v119];
              unint64_t v121 = (void *)((char *)v34 + v119);
              uint64_t v122 = v121[1];
              *(void *)uint64_t v120 = *v121;
              *((void *)v120 + 1) = v122;
              uint64_t v123 = *(void (**)(char *, void, uint64_t, int *))(v62 + 56);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v123(__dstc, 0, 1, v61);
              uint64_t v6 = v170;
            }
            goto LABEL_79;
          case 3u:
            uint64_t v169 = v6;
            uint64_t v69 = v34[1];
            *(void *)uint64_t v33 = *v34;
            *((void *)v33 + 1) = v69;
            unsigned char v33[16] = *((unsigned char *)v34 + 16);
            uint64_t v70 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
            uint64_t v71 = v70[6];
            __dstb = v33;
            unint64_t v72 = &v33[v71];
            uint64_t v73 = (char *)v34 + v71;
            uint64_t v74 = type metadata accessor for PuzzleStreak();
            uint64_t v75 = *(void *)(v74 - 8);
            char v76 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48);
            if (v76(v73, 1, v74))
            {
              sub_1C0086AE0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v72, v73, *(void *)(*(void *)(v77 - 8) + 64));
            }
            else
            {
              uint64_t v97 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 16))(v72, v73, v97);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
            }
            uint64_t v98 = v70[7];
            uint64_t v99 = &__dstb[v98];
            BOOL v100 = (char *)v34 + v98;
            if (v76((char *)v34 + v98, 1, v74))
            {
              sub_1C0086AE0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v99, v100, *(void *)(*(void *)(v101 - 8) + 64));
            }
            else
            {
              uint64_t v102 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 16))(v99, v100, v102);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56))(v99, 0, 1, v74);
            }
            uint64_t v6 = v169;
            uint64_t v103 = v70[8];
            uint64_t v104 = &__dstb[v103];
            uint64_t v105 = (_OWORD *)((char *)v34 + v103);
            long long v106 = v105[1];
            *(_OWORD *)uint64_t v104 = *v105;
            *((_OWORD *)v104 + 1) = v106;
            *(_OWORD *)(v104 + 25) = *(_OWORD *)((char *)v105 + 25);
            uint64_t v107 = v70[9];
            uint64_t v108 = &__dstb[v107];
            uint64_t v109 = (_OWORD *)((char *)v34 + v107);
            *(_OWORD *)(v108 + 25) = *(_OWORD *)((char *)v109 + 25);
            long long v110 = v109[1];
            *(_OWORD *)uint64_t v108 = *v109;
            *((_OWORD *)v108 + 1) = v110;
            uint64_t v111 = v70[10];
            uint64_t v112 = &__dstb[v111];
            uint64_t v113 = (_OWORD *)((char *)v34 + v111);
            long long v114 = v113[1];
            *(_OWORD *)uint64_t v112 = *v113;
            *((_OWORD *)v112 + 1) = v114;
            *(_OWORD *)(v112 + 25) = *(_OWORD *)((char *)v113 + 25);
            goto LABEL_79;
          default:
            uint64_t v35 = type metadata accessor for PuzzleStatisticValue(0);
            int v36 = swift_getEnumCaseMultiPayload();
            if (v36 == 5)
            {
              uint64_t v37 = type metadata accessor for PuzzleStreak();
              uint64_t v38 = *(void *)(v37 - 8);
              if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v38 + 48))(v34, 1, v37)) {
                goto LABEL_14;
              }
            }
            else
            {
              if (v36 != 4)
              {
                memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
                goto LABEL_79;
              }
              uint64_t v37 = type metadata accessor for PuzzleStreak();
              uint64_t v38 = *(void *)(v37 - 8);
              if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v38 + 48))(v34, 1, v37))
              {
LABEL_14:
                sub_1C0086AE0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                memcpy(v33, v34, *(void *)(*(void *)(v39 - 8) + 64));
                goto LABEL_78;
              }
            }
            uint64_t v124 = sub_1C151555C();
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v124 - 8) + 16))(v33, v34, v124);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v33, 0, 1, v37);
LABEL_78:
            swift_storeEnumTagMultiPayload();
LABEL_79:
            swift_storeEnumTagMultiPayload();
LABEL_80:
            swift_storeEnumTagMultiPayload();
LABEL_81:
            uint64_t v148 = (int *)type metadata accessor for FormatContentSlotItemResolution();
            uint64_t v149 = v148[5];
            uint64_t v150 = &a1[v149];
            uint64_t v151 = (char **)((char *)a2 + v149);
            if (*v151)
            {
              uint64_t v152 = v151[1];
              *(void *)uint64_t v150 = *v151;
              *((void *)v150 + 1) = v152;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)uint64_t v150 = *(_OWORD *)v151;
            }
            *(void *)&a1[v148[6]] = *(char **)((char *)a2 + v148[6]);
            *(void *)&a1[v148[7]] = *(char **)((char *)a2 + v148[7]);
            *(void *)&a1[*(int *)(v6 + 20)] = *(char **)((char *)a2 + *(int *)(v6 + 20));
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            break;
        }
        break;
      case 7u:
        uint64_t v168 = v6;
        unint64_t v23 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v23;
        char v24 = a2[3];
        *((void *)a1 + 2) = a2[2];
        *((void *)a1 + 3) = v24;
        uint64_t v25 = type metadata accessor for FormatCustomItem.Resolved();
        uint64_t v26 = *(int *)(v25 + 24);
        uint64_t v167 = &a1[v26];
        uint64_t v27 = (char *)a2 + v26;
        uint64_t v28 = type metadata accessor for FormatCustomItem.Action();
        uint64_t v29 = *(void *)(v28 - 8);
        unint64_t v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v30(v27, 1, v28))
        {
          sub_1C0086AE0(0, &qword_1EB887B40, (uint64_t (*)(uint64_t))type metadata accessor for FormatCustomItem.Action, MEMORY[0x1E4FBB718]);
          memcpy(v167, v27, *(void *)(*(void *)(v31 - 8) + 64));
        }
        else
        {
          uint64_t v53 = sub_1C1515FDC();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v167, v27, v53);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v167, 0, 1, v28);
        }
        *(void *)&a1[*(int *)(v25 + 28)] = *(char **)((char *)a2 + *(int *)(v25 + 28));
        swift_bridgeObjectRetain();
LABEL_36:
        swift_storeEnumTagMultiPayload();
        uint64_t v6 = v168;
        goto LABEL_81;
      case 8u:
        uint64_t v40 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v40;
        a1[16] = *((unsigned char *)a2 + 16);
        swift_bridgeObjectRetain();
        goto LABEL_80;
      default:
        *(void *)a1 = *a2;
        swift_unknownObjectRetain();
        goto LABEL_80;
    }
  }
  return a1;
}

uint64_t sub_1C0E8E2B4(id *a1)
{
  type metadata accessor for FormatContentSlotItemObject.Resolved();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 2u:
    case 4u:
    case 5u:
      swift_unknownObjectRelease();
      break;
    case 1u:

      break;
    case 3u:
      swift_bridgeObjectRelease();
      uint64_t v2 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
      uint64_t v3 = (char *)a1 + v2[5];
      swift_bridgeObjectRelease();
      uint64_t v4 = type metadata accessor for FormatWebEmbed();
      int v5 = &v3[*(int *)(v4 + 20)];
      uint64_t v6 = sub_1C1515FDC();
      uint64_t v7 = *(void *)(v6 - 8);
      uint64_t v8 = *(void (**)(char *, uint64_t))(v7 + 8);
      v8(v5, v6);
      uint64_t v9 = &v3[*(int *)(v4 + 24)];
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6)) {
        v8(v9, v6);
      }
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      uint64_t v10 = (char *)a1 + v2[8];
      uint64_t v11 = type metadata accessor for WebEmbedDataVisualization();
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          swift_bridgeObjectRelease();
          uint64_t v12 = type metadata accessor for GenericDataVisualization();
          v8(&v10[*(int *)(v12 + 20)], v6);
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_release();
        }
      }
      uint64_t v38 = (char *)a1 + v2[9];
      sub_1BFEC84E0();
      uint64_t v40 = v39;
      uint64_t v41 = *(void *)(v39 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v38, 1, v39)) {
        (*(void (**)(char *, uint64_t))(v41 + 8))(v38, v40);
      }
      break;
    case 6u:
      swift_unknownObjectRelease();
      uint64_t v13 = (char *)a1 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      type metadata accessor for PuzzleStatisticCategory(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          type metadata accessor for PuzzleStatisticValue(0);
          goto LABEL_23;
        case 1u:
          type metadata accessor for PuzzleStatisticValue(0);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
          {
            uint64_t v18 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v13, 1, v18))
            {
              uint64_t v19 = sub_1C151555C();
              (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v13, v19);
            }
          }
          uint64_t v20 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          uint64_t v21 = &v13[*(int *)(v20 + 20)];
          int v22 = swift_getEnumCaseMultiPayload();
          if (v22 == 5 || v22 == 4)
          {
            uint64_t v23 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v21, 1, v23))
            {
              uint64_t v24 = sub_1C151555C();
              (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 8))(v21, v24);
            }
          }
          v13 += *(int *)(v20 + 24);
LABEL_23:
          int v25 = swift_getEnumCaseMultiPayload();
          if (v25 == 5 || v25 == 4)
          {
            uint64_t v26 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48))(v13, 1, v26))goto LABEL_34; {
          }
            }
          goto LABEL_38;
        case 2u:
          uint64_t v27 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v13, 1, v27)) {
            goto LABEL_38;
          }
          uint64_t v28 = sub_1C151631C();
          (*(void (**)(char *, uint64_t))(*(void *)(v28 - 8) + 8))(v13, v28);
          uint64_t v29 = type metadata accessor for PuzzleLeaderboardEntry();
          swift_bridgeObjectRelease();
          unint64_t v30 = &v13[*(int *)(v29 + 24)];
          swift_bridgeObjectRelease();
          unint64_t v31 = *((void *)v30 + 3);
          if (v31 >> 60 != 15) {
            sub_1BFE95664(*((void *)v30 + 2), v31);
          }
          swift_bridgeObjectRelease();
          goto LABEL_13;
        case 3u:
          uint64_t v32 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
          uint64_t v33 = &v13[*(int *)(v32 + 24)];
          uint64_t v34 = type metadata accessor for PuzzleStreak();
          uint64_t v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48);
          if (!v35(v33, 1, v34))
          {
            uint64_t v36 = sub_1C151555C();
            (*(void (**)(char *, uint64_t))(*(void *)(v36 - 8) + 8))(v33, v36);
          }
          v13 += *(int *)(v32 + 28);
          if (!v35(v13, 1, v34))
          {
LABEL_34:
            uint64_t v37 = sub_1C151555C();
            (*(void (**)(char *, uint64_t))(*(void *)(v37 - 8) + 8))(v13, v37);
          }
          goto LABEL_38;
        default:
          goto LABEL_38;
      }
    case 7u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (char *)a1 + *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 24);
      uint64_t v15 = type metadata accessor for FormatCustomItem.Action();
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
      {
        uint64_t v16 = sub_1C1515FDC();
        (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v14, v16);
      }
      goto LABEL_13;
    case 8u:
LABEL_13:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
LABEL_38:
  if (*(id *)((char *)a1 + *(int *)(type metadata accessor for FormatContentSlotItemResolution() + 20)))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_1C0E8EAC4(void *a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for FormatContentSlotItemObject.Resolved();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v6 = *(void **)a2;
      *a1 = *(void *)a2;
      id v7 = v6;
      goto LABEL_79;
    case 3u:
      uint64_t v167 = a3;
      uint64_t v8 = *(void *)(a2 + 8);
      *a1 = *(void *)a2;
      a1[1] = v8;
      unsigned int v166 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
      uint64_t v9 = v166[5];
      uint64_t v10 = (void *)((char *)a1 + v9);
      uint64_t v171 = a2;
      uint64_t v11 = a2 + v9;
      uint64_t v12 = *(void *)(a2 + v9);
      uint64_t v13 = *(void *)(v11 + 8);
      void *v10 = v12;
      v10[1] = v13;
      uint64_t v14 = (int *)type metadata accessor for FormatWebEmbed();
      uint64_t v15 = v14[5];
      uint64_t v162 = v11 + v15;
      __dsta = (char *)v10 + v15;
      uint64_t v16 = sub_1C1515FDC();
      uint64_t v17 = *(void *)(v16 - 8);
      uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v18(__dsta, v162, v16);
      uint64_t v19 = v14[6];
      uint64_t v20 = (char *)v10 + v19;
      uint64_t v21 = (const void *)(v11 + v19);
      uint64_t v159 = v16;
      uint64_t v158 = (void (*)(char *, char *, uint64_t))v18;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v11 + v19, 1, v16))
      {
        sub_1C0086AE0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
        memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        v18(v20, (uint64_t)v21, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
      }
      *(void *)((char *)v10 + v14[7]) = *(void *)(v11 + v14[7]);
      uint64_t v41 = v14[8];
      uint64_t v42 = (void *)((char *)v10 + v41);
      unint64_t v43 = (void *)(v11 + v41);
      uint64_t v44 = v43[1];
      *uint64_t v42 = *v43;
      v42[1] = v44;
      uint64_t v45 = v14[9];
      uint64_t v46 = (void *)((char *)v10 + v45);
      uint64_t v47 = (void *)(v11 + v45);
      uint64_t v48 = v47[1];
      *uint64_t v46 = *v47;
      v46[1] = v48;
      *(void *)((char *)v10 + v14[10]) = *(void *)(v11 + v14[10]);
      *(void *)((char *)v10 + v14[11]) = *(void *)(v11 + v14[11]);
      *(void *)((char *)v10 + v14[12]) = *(void *)(v11 + v14[12]);
      *(void *)((char *)a1 + v166[6]) = *(void *)(v171 + v166[6]);
      *(void *)((char *)a1 + v166[7]) = *(void *)(v171 + v166[7]);
      uint64_t v49 = v166[8];
      __dst = (void *)((char *)a1 + v49);
      unint64_t v161 = (uint64_t *)(v171 + v49);
      uint64_t v50 = type metadata accessor for WebEmbedDataVisualization();
      uint64_t v160 = *(void *)(v50 - 8);
      long long v163 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v160 + 48);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      if (v163(v161, 1, v50))
      {
        sub_1C0086AE0(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
        memcpy(__dst, v161, *(void *)(*(void *)(v51 - 8) + 64));
        a2 = v171;
        a3 = v167;
      }
      else
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v54 = *v161;
        a3 = v167;
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v55 = v161[1];
          void *__dst = v54;
          __dst[1] = v55;
          uint64_t v56 = type metadata accessor for GenericDataVisualization();
          uint64_t v57 = *(int *)(v56 + 20);
          uint64_t v58 = (char *)__dst + v57;
          uint64_t v59 = (char *)v161 + v57;
          swift_bridgeObjectRetain();
          v158(v58, v59, v159);
          *(void *)((char *)__dst + *(int *)(v56 + 24)) = *(uint64_t *)((char *)v161 + *(int *)(v56 + 24));
          swift_bridgeObjectRetain();
        }
        else
        {
          void *__dst = v54;
          swift_retain();
        }
        a2 = v171;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v160 + 56))(__dst, 0, 1, v50);
      }
      uint64_t v78 = v166[9];
      uint64_t v79 = (char *)a1 + v78;
      uint64_t v80 = (const void *)(a2 + v78);
      sub_1BFEC84E0();
      uint64_t v82 = v81;
      uint64_t v83 = *(void *)(v81 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v83 + 48))(v80, 1, v81))
      {
        sub_1BFEC8548(0);
        memcpy(v79, v80, *(void *)(*(void *)(v84 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v83 + 16))(v79, v80, v82);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v79, 0, 1, v82);
      }
      goto LABEL_79;
    case 6u:
      *a1 = *(void *)a2;
      uint64_t v33 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      uint64_t v34 = (void *)((char *)a1 + v33);
      uint64_t v35 = (void *)(a2 + v33);
      type metadata accessor for PuzzleStatisticCategory(0);
      swift_unknownObjectRetain();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v64 = type metadata accessor for PuzzleStatisticValue(0);
          int v65 = swift_getEnumCaseMultiPayload();
          uint64_t v172 = v64;
          if (v65 == 5)
          {
            uint64_t v116 = type metadata accessor for PuzzleStreak();
            uint64_t v117 = *(void *)(v116 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v117 + 48))(v35, 1, v116))
            {
              sub_1C0086AE0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v34, v35, *(void *)(*(void *)(v118 - 8) + 64));
            }
            else
            {
              uint64_t v128 = sub_1C151555C();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v128 - 8) + 16))(v34, v35, v128);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v117 + 56))(v34, 0, 1, v116);
            }
            uint64_t v119 = a3;
            uint64_t v64 = v172;
          }
          else
          {
            if (v65 != 4)
            {
              uint64_t v119 = a3;
              memcpy(v34, v35, *(void *)(*(void *)(v64 - 8) + 64));
              goto LABEL_57;
            }
            uint64_t v66 = type metadata accessor for PuzzleStreak();
            uint64_t v67 = *(void *)(v66 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v67 + 48))(v35, 1, v66))
            {
              sub_1C0086AE0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v34, v35, *(void *)(*(void *)(v68 - 8) + 64));
            }
            else
            {
              uint64_t v126 = sub_1C151555C();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v126 - 8) + 16))(v34, v35, v126);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v67 + 56))(v34, 0, 1, v66);
            }
            uint64_t v119 = a3;
            uint64_t v64 = v172;
          }
          swift_storeEnumTagMultiPayload();
LABEL_57:
          uint64_t v129 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          uint64_t v130 = *(int *)(v129 + 20);
          int v131 = (char *)v34 + v130;
          uint64_t v132 = (char *)v35 + v130;
          int v133 = swift_getEnumCaseMultiPayload();
          if (v133 == 5)
          {
            uint64_t v138 = a2;
            uint64_t v139 = type metadata accessor for PuzzleStreak();
            uint64_t v140 = *(void *)(v139 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v140 + 48))(v132, 1, v139))
            {
              sub_1C0086AE0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v131, v132, *(void *)(*(void *)(v141 - 8) + 64));
            }
            else
            {
              uint64_t v143 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v143 - 8) + 16))(v131, v132, v143);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v140 + 56))(v131, 0, 1, v139);
            }
            a2 = v138;
            uint64_t v64 = v172;
          }
          else
          {
            if (v133 != 4)
            {
              memcpy(v131, v132, *(void *)(*(void *)(v64 - 8) + 64));
              goto LABEL_69;
            }
            uint64_t v134 = a2;
            uint64_t v135 = type metadata accessor for PuzzleStreak();
            uint64_t v136 = *(void *)(v135 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v136 + 48))(v132, 1, v135))
            {
              sub_1C0086AE0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v131, v132, *(void *)(*(void *)(v137 - 8) + 64));
            }
            else
            {
              uint64_t v142 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 16))(v131, v132, v142);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v136 + 56))(v131, 0, 1, v135);
            }
            a2 = v134;
            uint64_t v64 = v172;
          }
          swift_storeEnumTagMultiPayload();
LABEL_69:
          uint64_t v144 = *(int *)(v129 + 24);
          uint64_t v145 = (char *)v34 + v144;
          uint64_t v146 = (char *)v35 + v144;
          int v147 = swift_getEnumCaseMultiPayload();
          if (v147 == 5)
          {
            uint64_t v148 = type metadata accessor for PuzzleStreak();
            uint64_t v149 = *(void *)(v148 - 8);
            a3 = v119;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v149 + 48))(v146, 1, v148)) {
              goto LABEL_72;
            }
          }
          else
          {
            a3 = v119;
            if (v147 != 4)
            {
              memcpy(v145, v146, *(void *)(*(void *)(v64 - 8) + 64));
              goto LABEL_78;
            }
            uint64_t v148 = type metadata accessor for PuzzleStreak();
            uint64_t v149 = *(void *)(v148 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v149 + 48))(v146, 1, v148))
            {
LABEL_72:
              sub_1C0086AE0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v145, v146, *(void *)(*(void *)(v150 - 8) + 64));
              goto LABEL_77;
            }
          }
          uint64_t v151 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v151 - 8) + 16))(v145, v146, v151);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v149 + 56))(v145, 0, 1, v148);
          goto LABEL_77;
        case 2u:
          uint64_t v60 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          uint64_t v61 = *((void *)v60 - 1);
          if ((*(unsigned int (**)(void *, uint64_t, int *))(v61 + 48))(v35, 1, v60))
          {
            sub_1C0086AE0(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
            size_t v63 = *(void *)(*(void *)(v62 - 8) + 64);
            goto LABEL_44;
          }
          uint64_t v170 = a3;
          uint64_t v174 = a2;
          uint64_t v85 = sub_1C151631C();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v85 - 8) + 16))(v34, v35, v85);
          uint64_t v86 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
          uint64_t v87 = v86[5];
          uint64_t v88 = (void *)((char *)v34 + v87);
          uint64_t v89 = (void *)((char *)v35 + v87);
          uint64_t v90 = v89[1];
          *uint64_t v88 = *v89;
          v88[1] = v90;
          uint64_t v91 = v86[6];
          uint64_t v92 = (char *)v34 + v91;
          BOOL v93 = (void *)((char *)v35 + v91);
          uint64_t v94 = v93[1];
          *(void *)uint64_t v92 = *v93;
          *((void *)v92 + 1) = v94;
          char v95 = v93 + 2;
          unint64_t v96 = v93[3];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v96 >> 60 == 15)
          {
            *((_OWORD *)v92 + 1) = *(_OWORD *)v95;
          }
          else
          {
            uint64_t v120 = *v95;
            sub_1BFE95820(*v95, v96);
            *((void *)v92 + 2) = v120;
            *((void *)v92 + 3) = v96;
          }
          a2 = v174;
          *(void *)((char *)v34 + v86[7]) = *(void *)((char *)v35 + v86[7]);
          *(void *)((char *)v34 + v86[8]) = *(void *)((char *)v35 + v86[8]);
          *(void *)((char *)v34 + v60[5]) = *(void *)((char *)v35 + v60[5]);
          *(void *)((char *)v34 + v60[6]) = *(void *)((char *)v35 + v60[6]);
          uint64_t v121 = v60[7];
          uint64_t v122 = (void *)((char *)v34 + v121);
          uint64_t v123 = (void *)((char *)v35 + v121);
          uint64_t v124 = v123[1];
          *uint64_t v122 = *v123;
          v122[1] = v124;
          uint64_t v125 = *(void (**)(void *, void, uint64_t, int *))(v61 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v125(v34, 0, 1, v60);
          a3 = v170;
          goto LABEL_78;
        case 3u:
          uint64_t v169 = a3;
          uint64_t v173 = a2;
          uint64_t v69 = v35[1];
          *uint64_t v34 = *v35;
          v34[1] = v69;
          *((unsigned char *)v34 + 16) = *((unsigned char *)v35 + 16);
          uint64_t v70 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
          uint64_t v71 = v70[6];
          unint64_t v72 = (char *)v34 + v71;
          uint64_t v73 = (char *)v35 + v71;
          uint64_t v74 = type metadata accessor for PuzzleStreak();
          uint64_t v75 = *(void *)(v74 - 8);
          char v76 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48);
          if (v76(v73, 1, v74))
          {
            sub_1C0086AE0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v72, v73, *(void *)(*(void *)(v77 - 8) + 64));
          }
          else
          {
            uint64_t v97 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 16))(v72, v73, v97);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
          }
          uint64_t v98 = v70[7];
          uint64_t v99 = (char *)v34 + v98;
          BOOL v100 = (char *)v35 + v98;
          if (v76((char *)v35 + v98, 1, v74))
          {
            sub_1C0086AE0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v99, v100, *(void *)(*(void *)(v101 - 8) + 64));
          }
          else
          {
            uint64_t v102 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 16))(v99, v100, v102);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56))(v99, 0, 1, v74);
          }
          a2 = v173;
          a3 = v169;
          uint64_t v103 = v70[8];
          uint64_t v104 = (_OWORD *)((char *)v34 + v103);
          uint64_t v105 = (_OWORD *)((char *)v35 + v103);
          long long v106 = v105[1];
          *uint64_t v104 = *v105;
          v104[1] = v106;
          *(_OWORD *)((char *)v104 + 25) = *(_OWORD *)((char *)v105 + 25);
          uint64_t v107 = v70[9];
          uint64_t v108 = (_OWORD *)((char *)v34 + v107);
          uint64_t v109 = (_OWORD *)((char *)v35 + v107);
          *(_OWORD *)((char *)v108 + 25) = *(_OWORD *)((char *)v109 + 25);
          long long v110 = v109[1];
          *uint64_t v108 = *v109;
          v108[1] = v110;
          uint64_t v111 = v70[10];
          uint64_t v112 = (_OWORD *)((char *)v34 + v111);
          uint64_t v113 = (_OWORD *)((char *)v35 + v111);
          long long v114 = v113[1];
          *uint64_t v112 = *v113;
          v112[1] = v114;
          *(_OWORD *)((char *)v112 + 25) = *(_OWORD *)((char *)v113 + 25);
          goto LABEL_78;
        default:
          uint64_t v36 = type metadata accessor for PuzzleStatisticValue(0);
          int v37 = swift_getEnumCaseMultiPayload();
          if (v37 == 5)
          {
            uint64_t v38 = type metadata accessor for PuzzleStreak();
            uint64_t v39 = *(void *)(v38 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v39 + 48))(v35, 1, v38))
            {
LABEL_42:
              sub_1C0086AE0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v34, v35, *(void *)(*(void *)(v115 - 8) + 64));
              goto LABEL_77;
            }
          }
          else
          {
            if (v37 != 4)
            {
              size_t v63 = *(void *)(*(void *)(v36 - 8) + 64);
LABEL_44:
              memcpy(v34, v35, v63);
              goto LABEL_78;
            }
            uint64_t v38 = type metadata accessor for PuzzleStreak();
            uint64_t v39 = *(void *)(v38 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v39 + 48))(v35, 1, v38)) {
              goto LABEL_42;
            }
          }
          uint64_t v127 = sub_1C151555C();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v127 - 8) + 16))(v34, v35, v127);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v34, 0, 1, v38);
LABEL_77:
          swift_storeEnumTagMultiPayload();
LABEL_78:
          swift_storeEnumTagMultiPayload();
LABEL_79:
          swift_storeEnumTagMultiPayload();
LABEL_80:
          uint64_t v152 = (int *)type metadata accessor for FormatContentSlotItemResolution();
          uint64_t v153 = v152[5];
          uint64_t v154 = (void *)((char *)a1 + v153);
          uint64_t v155 = (void *)(a2 + v153);
          if (*v155)
          {
            uint64_t v156 = v155[1];
            *uint64_t v154 = *v155;
            v154[1] = v156;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)uint64_t v154 = *(_OWORD *)v155;
          }
          *(void *)((char *)a1 + v152[6]) = *(void *)(a2 + v152[6]);
          *(void *)((char *)a1 + v152[7]) = *(void *)(a2 + v152[7]);
          *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          return a1;
      }
    case 7u:
      uint64_t v168 = a3;
      uint64_t v23 = *(void *)(a2 + 8);
      *a1 = *(void *)a2;
      a1[1] = v23;
      uint64_t v24 = *(void *)(a2 + 24);
      a1[2] = *(void *)(a2 + 16);
      a1[3] = v24;
      uint64_t v25 = type metadata accessor for FormatCustomItem.Resolved();
      uint64_t v26 = *(int *)(v25 + 24);
      uint64_t v27 = (char *)a1 + v26;
      uint64_t v28 = (const void *)(a2 + v26);
      uint64_t v29 = type metadata accessor for FormatCustomItem.Action();
      uint64_t v30 = *(void *)(v29 - 8);
      unint64_t v31 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v31(v28, 1, v29))
      {
        sub_1C0086AE0(0, &qword_1EB887B40, (uint64_t (*)(uint64_t))type metadata accessor for FormatCustomItem.Action, MEMORY[0x1E4FBB718]);
        memcpy(v27, v28, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        uint64_t v52 = sub_1C1515FDC();
        (*(void (**)(char *, const void *, uint64_t))(*(void *)(v52 - 8) + 16))(v27, v28, v52);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      }
      *(void *)((char *)a1 + *(int *)(v25 + 28)) = *(void *)(a2 + *(int *)(v25 + 28));
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      a3 = v168;
      goto LABEL_80;
    case 8u:
      uint64_t v40 = *(void *)(a2 + 8);
      *a1 = *(void *)a2;
      a1[1] = v40;
      *((unsigned char *)a1 + 16) = *(unsigned char *)(a2 + 16);
      swift_bridgeObjectRetain();
      goto LABEL_79;
    default:
      *a1 = *(void *)a2;
      swift_unknownObjectRetain();
      goto LABEL_79;
  }
}

void *sub_1C0E9038C(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C0E8C914((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
    type metadata accessor for FormatContentSlotItemObject.Resolved();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v6 = (void *)*a2;
        *a1 = *a2;
        id v7 = v6;
        goto LABEL_79;
      case 3u:
        uint64_t v160 = a3;
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v157 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
        uint64_t v8 = v157[5];
        uint64_t v9 = (void *)((char *)a1 + v8);
        uint64_t v10 = (char *)a2 + v8;
        *uint64_t v9 = *(void *)((char *)a2 + v8);
        v9[1] = *(void *)((char *)a2 + v8 + 8);
        uint64_t v11 = (int *)type metadata accessor for FormatWebEmbed();
        uint64_t v12 = v11[5];
        uint64_t v149 = &v10[v12];
        uint64_t v151 = (char *)v9 + v12;
        uint64_t v13 = sub_1C1515FDC();
        uint64_t v14 = *(void *)(v13 - 8);
        uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v15(v151, v149, v13);
        uint64_t v16 = v11[6];
        __dst = (char *)v9 + v16;
        uint64_t v17 = &v10[v16];
        uint64_t v146 = v13;
        uint64_t v145 = v15;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(&v10[v16], 1, v13))
        {
          sub_1C0086AE0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
          memcpy(__dst, v17, *(void *)(*(void *)(v18 - 8) + 64));
        }
        else
        {
          v15(__dst, v17, v13);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
        }
        *(void *)((char *)v9 + v11[7]) = *(void *)&v10[v11[7]];
        uint64_t v34 = v11[8];
        uint64_t v35 = (void *)((char *)v9 + v34);
        uint64_t v36 = &v10[v34];
        *uint64_t v35 = *(void *)v36;
        v35[1] = *((void *)v36 + 1);
        uint64_t v37 = v11[9];
        uint64_t v38 = (void *)((char *)v9 + v37);
        uint64_t v39 = &v10[v37];
        *uint64_t v38 = *(void *)v39;
        v38[1] = *((void *)v39 + 1);
        *(void *)((char *)v9 + v11[10]) = *(void *)&v10[v11[10]];
        *(void *)((char *)v9 + v11[11]) = *(void *)&v10[v11[11]];
        *(void *)((char *)v9 + v11[12]) = *(void *)&v10[v11[12]];
        *(void *)((char *)a1 + v157[6]) = *(void *)((char *)a2 + v157[6]);
        *(void *)((char *)a1 + v157[7]) = *(void *)((char *)a2 + v157[7]);
        uint64_t v40 = v157[8];
        __dsta = (void *)((char *)a1 + v40);
        uint64_t v148 = (void *)((char *)a2 + v40);
        uint64_t v41 = type metadata accessor for WebEmbedDataVisualization();
        uint64_t v147 = *(void *)(v41 - 8);
        uint64_t v150 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v147 + 48);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        if (v150(v148, 1, v41))
        {
          sub_1C0086AE0(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
          memcpy(__dsta, v148, *(void *)(*(void *)(v42 - 8) + 64));
          a3 = v160;
        }
        else
        {
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          a3 = v160;
          void *__dsta = *v148;
          if (EnumCaseMultiPayload == 1)
          {
            __dsta[1] = v148[1];
            uint64_t v45 = type metadata accessor for GenericDataVisualization();
            uint64_t v46 = *(int *)(v45 + 20);
            uint64_t v47 = (char *)__dsta + v46;
            uint64_t v48 = (char *)v148 + v46;
            swift_bridgeObjectRetain();
            v145(v47, v48, v146);
            *(void *)((char *)__dsta + *(int *)(v45 + 24)) = *(void *)((char *)v148 + *(int *)(v45 + 24));
            swift_bridgeObjectRetain();
          }
          else
          {
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(v147 + 56))(__dsta, 0, 1, v41);
        }
        uint64_t v66 = v157[9];
        uint64_t v67 = (char *)a1 + v66;
        uint64_t v68 = (char *)a2 + v66;
        sub_1BFEC84E0();
        uint64_t v70 = v69;
        uint64_t v71 = *(void *)(v69 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v68, 1, v69))
        {
          sub_1BFEC8548(0);
          memcpy(v67, v68, *(void *)(*(void *)(v72 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v67, v68, v70);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v67, 0, 1, v70);
        }
        goto LABEL_79;
      case 6u:
        *a1 = *a2;
        uint64_t v26 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
        uint64_t v27 = (void *)((char *)a1 + v26);
        uint64_t v28 = (void *)((char *)a2 + v26);
        type metadata accessor for PuzzleStatisticCategory(0);
        swift_unknownObjectRetain();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v52 = type metadata accessor for PuzzleStatisticValue(0);
            int v53 = swift_getEnumCaseMultiPayload();
            uint64_t v159 = v52;
            if (v53 == 5)
            {
              uint64_t v104 = type metadata accessor for PuzzleStreak();
              uint64_t v105 = *(void *)(v104 - 8);
              if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v105 + 48))(v28, 1, v104))
              {
                sub_1C0086AE0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                memcpy(v27, v28, *(void *)(*(void *)(v106 - 8) + 64));
              }
              else
              {
                uint64_t v115 = sub_1C151555C();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v115 - 8) + 16))(v27, v28, v115);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v105 + 56))(v27, 0, 1, v104);
              }
              uint64_t v107 = v159;
            }
            else
            {
              if (v53 != 4)
              {
                memcpy(v27, v28, *(void *)(*(void *)(v52 - 8) + 64));
                uint64_t v107 = v52;
                goto LABEL_57;
              }
              uint64_t v54 = type metadata accessor for PuzzleStreak();
              uint64_t v55 = *(void *)(v54 - 8);
              if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v55 + 48))(v28, 1, v54))
              {
                sub_1C0086AE0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                memcpy(v27, v28, *(void *)(*(void *)(v56 - 8) + 64));
              }
              else
              {
                uint64_t v114 = sub_1C151555C();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v114 - 8) + 16))(v27, v28, v114);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v55 + 56))(v27, 0, 1, v54);
              }
              uint64_t v107 = v159;
            }
            swift_storeEnumTagMultiPayload();
LABEL_57:
            uint64_t v116 = v27;
            uint64_t v117 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
            uint64_t v118 = *(int *)(v117 + 20);
            uint64_t v154 = v116;
            uint64_t v119 = (char *)v116 + v118;
            uint64_t v120 = (char *)v28 + v118;
            int v121 = swift_getEnumCaseMultiPayload();
            if (v121 == 5)
            {
              uint64_t v165 = a3;
              uint64_t v125 = type metadata accessor for PuzzleStreak();
              uint64_t v126 = *(void *)(v125 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v126 + 48))(v120, 1, v125))
              {
                sub_1C0086AE0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                memcpy(v119, v120, *(void *)(*(void *)(v127 - 8) + 64));
              }
              else
              {
                uint64_t v130 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 16))(v119, v120, v130);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v126 + 56))(v119, 0, 1, v125);
              }
              uint64_t v128 = v159;
              a3 = v165;
            }
            else
            {
              if (v121 != 4)
              {
                uint64_t v128 = v107;
                memcpy(v119, v120, *(void *)(*(void *)(v107 - 8) + 64));
                goto LABEL_69;
              }
              uint64_t v164 = a3;
              uint64_t v122 = type metadata accessor for PuzzleStreak();
              uint64_t v123 = *(void *)(v122 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v123 + 48))(v120, 1, v122))
              {
                sub_1C0086AE0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                memcpy(v119, v120, *(void *)(*(void *)(v124 - 8) + 64));
              }
              else
              {
                uint64_t v129 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v129 - 8) + 16))(v119, v120, v129);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v123 + 56))(v119, 0, 1, v122);
              }
              uint64_t v128 = v159;
              a3 = v164;
            }
            swift_storeEnumTagMultiPayload();
LABEL_69:
            uint64_t v131 = *(int *)(v117 + 24);
            uint64_t v132 = (char *)v154 + v131;
            int v133 = (char *)v28 + v131;
            int v134 = swift_getEnumCaseMultiPayload();
            if (v134 == 5)
            {
              uint64_t v135 = type metadata accessor for PuzzleStreak();
              uint64_t v136 = *(void *)(v135 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v136 + 48))(v133, 1, v135)) {
                goto LABEL_72;
              }
            }
            else
            {
              if (v134 != 4)
              {
                memcpy(v132, v133, *(void *)(*(void *)(v128 - 8) + 64));
                goto LABEL_78;
              }
              uint64_t v135 = type metadata accessor for PuzzleStreak();
              uint64_t v136 = *(void *)(v135 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v136 + 48))(v133, 1, v135))
              {
LABEL_72:
                sub_1C0086AE0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                memcpy(v132, v133, *(void *)(*(void *)(v137 - 8) + 64));
                goto LABEL_77;
              }
            }
            uint64_t v138 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 16))(v132, v133, v138);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v136 + 56))(v132, 0, 1, v135);
            goto LABEL_77;
          case 2u:
            uint64_t v49 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
            uint64_t v50 = *((void *)v49 - 1);
            if ((*(unsigned int (**)(void *, uint64_t, int *))(v50 + 48))(v28, 1, v49))
            {
              sub_1C0086AE0(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
              memcpy(v27, v28, *(void *)(*(void *)(v51 - 8) + 64));
            }
            else
            {
              uint64_t v163 = a3;
              uint64_t v73 = sub_1C151631C();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v73 - 8) + 16))(v27, v28, v73);
              uint64_t v74 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
              uint64_t v75 = v74[5];
              char v76 = (void *)((char *)v27 + v75);
              uint64_t v77 = (void *)((char *)v28 + v75);
              *char v76 = *v77;
              v76[1] = v77[1];
              uint64_t v78 = v74[6];
              uint64_t v153 = v27;
              uint64_t v79 = (char *)v27 + v78;
              uint64_t v80 = (void *)((char *)v28 + v78);
              *(void *)uint64_t v79 = *v80;
              *((void *)v79 + 1) = v80[1];
              uint64_t v81 = v80 + 2;
              unint64_t v82 = v80[3];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v82 >> 60 == 15)
              {
                *((_OWORD *)v79 + 1) = *(_OWORD *)v81;
              }
              else
              {
                uint64_t v108 = *v81;
                sub_1BFE95820(*v81, v82);
                *((void *)v79 + 2) = v108;
                *((void *)v79 + 3) = v82;
              }
              a3 = v163;
              *(void *)((char *)v153 + v74[7]) = *(void *)((char *)v28 + v74[7]);
              *(void *)((char *)v153 + v74[8]) = *(void *)((char *)v28 + v74[8]);
              *(void *)((char *)v153 + v49[5]) = *(void *)((char *)v28 + v49[5]);
              *(void *)((char *)v153 + v49[6]) = *(void *)((char *)v28 + v49[6]);
              uint64_t v109 = v49[7];
              long long v110 = (void *)((char *)v153 + v109);
              uint64_t v111 = (void *)((char *)v28 + v109);
              *long long v110 = *v111;
              v110[1] = v111[1];
              uint64_t v112 = *(void (**)(void *, void, uint64_t, int *))(v50 + 56);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v112(v153, 0, 1, v49);
            }
            goto LABEL_78;
          case 3u:
            uint64_t v162 = a3;
            *uint64_t v27 = *v28;
            uint64_t v57 = v28[1];
            *((unsigned char *)v27 + 16) = *((unsigned char *)v28 + 16);
            v27[1] = v57;
            uint64_t v58 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
            uint64_t v59 = v58[6];
            uint64_t v152 = v27;
            uint64_t v60 = (char *)v27 + v59;
            uint64_t v61 = (char *)v28 + v59;
            uint64_t v62 = type metadata accessor for PuzzleStreak();
            uint64_t v63 = *(void *)(v62 - 8);
            uint64_t v64 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48);
            if (v64(v61, 1, v62))
            {
              sub_1C0086AE0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v60, v61, *(void *)(*(void *)(v65 - 8) + 64));
            }
            else
            {
              uint64_t v83 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16))(v60, v61, v83);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
            }
            uint64_t v84 = v58[7];
            uint64_t v85 = (char *)v152 + v84;
            uint64_t v86 = (char *)v28 + v84;
            if (v64((char *)v28 + v84, 1, v62))
            {
              sub_1C0086AE0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v85, v86, *(void *)(*(void *)(v87 - 8) + 64));
            }
            else
            {
              uint64_t v88 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 16))(v85, v86, v88);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v85, 0, 1, v62);
            }
            a3 = v162;
            uint64_t v89 = v58[8];
            uint64_t v90 = (_OWORD *)((char *)v152 + v89);
            uint64_t v91 = (long long *)((char *)v28 + v89);
            long long v92 = *v91;
            long long v93 = v91[1];
            *(_OWORD *)((char *)v90 + 25) = *(long long *)((char *)v91 + 25);
            *uint64_t v90 = v92;
            v90[1] = v93;
            uint64_t v94 = v58[9];
            char v95 = (_OWORD *)((char *)v152 + v94);
            unint64_t v96 = (long long *)((char *)v28 + v94);
            long long v97 = *v96;
            long long v98 = v96[1];
            *(_OWORD *)((char *)v95 + 25) = *(long long *)((char *)v96 + 25);
            *char v95 = v97;
            v95[1] = v98;
            uint64_t v99 = v58[10];
            BOOL v100 = (_OWORD *)((char *)v152 + v99);
            uint64_t v101 = (long long *)((char *)v28 + v99);
            long long v102 = *v101;
            long long v103 = v101[1];
            *(_OWORD *)((char *)v100 + 25) = *(long long *)((char *)v101 + 25);
            *BOOL v100 = v102;
            v100[1] = v103;
            goto LABEL_78;
          default:
            uint64_t v29 = type metadata accessor for PuzzleStatisticValue(0);
            int v30 = swift_getEnumCaseMultiPayload();
            if (v30 == 5)
            {
              uint64_t v31 = type metadata accessor for PuzzleStreak();
              uint64_t v32 = *(void *)(v31 - 8);
              if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v32 + 48))(v28, 1, v31)) {
                goto LABEL_13;
              }
            }
            else
            {
              if (v30 != 4)
              {
                memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
                goto LABEL_78;
              }
              uint64_t v31 = type metadata accessor for PuzzleStreak();
              uint64_t v32 = *(void *)(v31 - 8);
              if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v32 + 48))(v28, 1, v31))
              {
LABEL_13:
                sub_1C0086AE0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                memcpy(v27, v28, *(void *)(*(void *)(v33 - 8) + 64));
                goto LABEL_77;
              }
            }
            uint64_t v113 = sub_1C151555C();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v113 - 8) + 16))(v27, v28, v113);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(v27, 0, 1, v31);
LABEL_77:
            swift_storeEnumTagMultiPayload();
LABEL_78:
            swift_storeEnumTagMultiPayload();
LABEL_79:
            swift_storeEnumTagMultiPayload();
            break;
        }
        break;
      case 7u:
        uint64_t v161 = a3;
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        uint64_t v19 = type metadata accessor for FormatCustomItem.Resolved();
        uint64_t v20 = *(int *)(v19 + 24);
        uint64_t v158 = (char *)a1 + v20;
        uint64_t v21 = (char *)a2 + v20;
        uint64_t v22 = type metadata accessor for FormatCustomItem.Action();
        uint64_t v23 = *(void *)(v22 - 8);
        uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v24(v21, 1, v22))
        {
          sub_1C0086AE0(0, &qword_1EB887B40, (uint64_t (*)(uint64_t))type metadata accessor for FormatCustomItem.Action, MEMORY[0x1E4FBB718]);
          memcpy(v158, v21, *(void *)(*(void *)(v25 - 8) + 64));
        }
        else
        {
          uint64_t v43 = sub_1C1515FDC();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v158, v21, v43);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v158, 0, 1, v22);
        }
        a3 = v161;
        *(void *)((char *)a1 + *(int *)(v19 + 28)) = *(void *)((char *)a2 + *(int *)(v19 + 28));
        swift_bridgeObjectRetain();
        goto LABEL_79;
      case 8u:
        *a1 = *a2;
        a1[1] = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        swift_bridgeObjectRetain();
        goto LABEL_79;
      default:
        *a1 = *a2;
        swift_unknownObjectRetain();
        goto LABEL_79;
    }
  }
  uint64_t v139 = (int *)type metadata accessor for FormatContentSlotItemResolution();
  uint64_t v140 = v139[5];
  uint64_t v141 = (void *)((char *)a1 + v140);
  uint64_t v142 = (char *)a2 + v140;
  uint64_t v143 = *(void *)((char *)a2 + v140);
  if (!*(void *)((char *)a1 + v140))
  {
    if (v143)
    {
      *uint64_t v141 = v143;
      v141[1] = *((void *)v142 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_87;
    }
LABEL_86:
    *(_OWORD *)uint64_t v141 = *(_OWORD *)v142;
    goto LABEL_87;
  }
  if (!v143)
  {
    sub_1C01B4324((uint64_t)a1 + v140);
    goto LABEL_86;
  }
  *uint64_t v141 = v143;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v141[1] = *((void *)v142 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_87:
  *(void *)((char *)a1 + v139[6]) = *(void *)((char *)a2 + v139[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v139[7]) = *(void *)((char *)a2 + v139[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

_OWORD *sub_1C0E91D20(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 7:
      long long v22 = a2[1];
      *a1 = *a2;
      a1[1] = v22;
      uint64_t v23 = type metadata accessor for FormatCustomItem.Resolved();
      uint64_t v24 = *(int *)(v23 + 24);
      uint64_t v25 = (char *)a1 + v24;
      uint64_t v26 = (char *)a2 + v24;
      uint64_t v27 = type metadata accessor for FormatCustomItem.Action();
      uint64_t v28 = *(void *)(v27 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      {
        sub_1C0086AE0(0, &qword_1EB887B40, (uint64_t (*)(uint64_t))type metadata accessor for FormatCustomItem.Action, MEMORY[0x1E4FBB718]);
        memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        uint64_t v44 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v25, v26, v44);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      }
      *(void *)((char *)a1 + *(int *)(v23 + 28)) = *(void *)((char *)a2 + *(int *)(v23 + 28));
      goto LABEL_76;
    case 6:
      *(void *)a1 = *(void *)a2;
      uint64_t v30 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      uint64_t v31 = (void *)((char *)a1 + v30);
      uint64_t v32 = (void *)((char *)a2 + v30);
      type metadata accessor for PuzzleStatisticCategory(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v50 = type metadata accessor for PuzzleStatisticValue(0);
          int v51 = swift_getEnumCaseMultiPayload();
          uint64_t v129 = v50;
          if (v51 == 5)
          {
            uint64_t v96 = type metadata accessor for PuzzleStreak();
            uint64_t v97 = *(void *)(v96 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v97 + 48))(v32, 1, v96))
            {
              sub_1C0086AE0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v31, v32, *(void *)(*(void *)(v98 - 8) + 64));
            }
            else
            {
              uint64_t v101 = sub_1C151555C();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v101 - 8) + 32))(v31, v32, v101);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v97 + 56))(v31, 0, 1, v96);
            }
            uint64_t v50 = v129;
          }
          else
          {
            if (v51 != 4)
            {
              memcpy(v31, v32, *(void *)(*(void *)(v50 - 8) + 64));
              goto LABEL_54;
            }
            uint64_t v52 = type metadata accessor for PuzzleStreak();
            uint64_t v53 = *(void *)(v52 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v53 + 48))(v32, 1, v52))
            {
              sub_1C0086AE0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v31, v32, *(void *)(*(void *)(v54 - 8) + 64));
            }
            else
            {
              uint64_t v100 = sub_1C151555C();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v100 - 8) + 32))(v31, v32, v100);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v53 + 56))(v31, 0, 1, v52);
            }
            uint64_t v50 = v129;
          }
          swift_storeEnumTagMultiPayload();
LABEL_54:
          uint64_t v102 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          uint64_t v103 = *(int *)(v102 + 20);
          uint64_t v104 = (char *)v31 + v103;
          uint64_t v105 = (char *)v32 + v103;
          int v106 = swift_getEnumCaseMultiPayload();
          if (v106 == 5)
          {
            uint64_t v127 = v31;
            uint64_t v110 = type metadata accessor for PuzzleStreak();
            uint64_t v111 = *(void *)(v110 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v111 + 48))(v105, 1, v110))
            {
              sub_1C0086AE0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v104, v105, *(void *)(*(void *)(v112 - 8) + 64));
            }
            else
            {
              uint64_t v114 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 32))(v104, v105, v114);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v111 + 56))(v104, 0, 1, v110);
            }
            uint64_t v50 = v129;
          }
          else
          {
            if (v106 != 4)
            {
              memcpy(v104, v105, *(void *)(*(void *)(v50 - 8) + 64));
              goto LABEL_66;
            }
            uint64_t v127 = v31;
            uint64_t v107 = type metadata accessor for PuzzleStreak();
            uint64_t v108 = *(void *)(v107 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v108 + 48))(v105, 1, v107))
            {
              sub_1C0086AE0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v104, v105, *(void *)(*(void *)(v109 - 8) + 64));
            }
            else
            {
              uint64_t v113 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v113 - 8) + 32))(v104, v105, v113);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v104, 0, 1, v107);
            }
            uint64_t v50 = v129;
          }
          swift_storeEnumTagMultiPayload();
          uint64_t v31 = v127;
LABEL_66:
          uint64_t v115 = *(int *)(v102 + 24);
          uint64_t v116 = (char *)v31 + v115;
          uint64_t v117 = (char *)v32 + v115;
          int v118 = swift_getEnumCaseMultiPayload();
          if (v118 == 5)
          {
            uint64_t v119 = type metadata accessor for PuzzleStreak();
            uint64_t v120 = *(void *)(v119 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v120 + 48))(v117, 1, v119)) {
              goto LABEL_69;
            }
LABEL_73:
            uint64_t v122 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v122 - 8) + 32))(v116, v117, v122);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v120 + 56))(v116, 0, 1, v119);
            goto LABEL_74;
          }
          if (v118 == 4)
          {
            uint64_t v119 = type metadata accessor for PuzzleStreak();
            uint64_t v120 = *(void *)(v119 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v120 + 48))(v117, 1, v119))
            {
LABEL_69:
              sub_1C0086AE0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v116, v117, *(void *)(*(void *)(v121 - 8) + 64));
              goto LABEL_74;
            }
            goto LABEL_73;
          }
          memcpy(v116, v117, *(void *)(*(void *)(v50 - 8) + 64));
          goto LABEL_75;
        case 2u:
          uint64_t v46 = a2;
          uint64_t v47 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          uint64_t v48 = *((void *)v47 - 1);
          if ((*(unsigned int (**)(void *, uint64_t, int *))(v48 + 48))(v32, 1, v47))
          {
            sub_1C0086AE0(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
            memcpy(v31, v32, *(void *)(*(void *)(v49 - 8) + 64));
          }
          else
          {
            uint64_t v72 = sub_1C151631C();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v72 - 8) + 32))(v31, v32, v72);
            uint64_t v73 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
            *(_OWORD *)((char *)v31 + v73[5]) = *(_OWORD *)((char *)v32 + v73[5]);
            uint64_t v74 = v73[6];
            uint64_t v75 = (_OWORD *)((char *)v31 + v74);
            char v76 = (_OWORD *)((char *)v32 + v74);
            long long v77 = v76[1];
            *uint64_t v75 = *v76;
            v75[1] = v77;
            *(void *)((char *)v31 + v73[7]) = *(void *)((char *)v32 + v73[7]);
            *(void *)((char *)v31 + v73[8]) = *(void *)((char *)v32 + v73[8]);
            *(void *)((char *)v31 + v47[5]) = *(void *)((char *)v32 + v47[5]);
            *(void *)((char *)v31 + v47[6]) = *(void *)((char *)v32 + v47[6]);
            *(_OWORD *)((char *)v31 + v47[7]) = *(_OWORD *)((char *)v32 + v47[7]);
            (*(void (**)(void *, void, uint64_t, int *))(v48 + 56))(v31, 0, 1, v47);
          }
          a2 = v46;
          goto LABEL_75;
        case 3u:
          uint64_t v130 = a2;
          uint64_t v55 = v32[1];
          *uint64_t v31 = *v32;
          v31[1] = v55;
          *((unsigned char *)v31 + 16) = *((unsigned char *)v32 + 16);
          uint64_t v56 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
          uint64_t v57 = v56[6];
          uint64_t v58 = v31;
          uint64_t v59 = (char *)v31 + v57;
          uint64_t v60 = (char *)v32 + v57;
          uint64_t v61 = type metadata accessor for PuzzleStreak();
          uint64_t v62 = *(void *)(v61 - 8);
          uint64_t v63 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48);
          if (v63(v60, 1, v61))
          {
            sub_1C0086AE0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v59, v60, *(void *)(*(void *)(v64 - 8) + 64));
          }
          else
          {
            uint64_t v78 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 32))(v59, v60, v78);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
          }
          uint64_t v79 = v56[7];
          uint64_t v80 = (char *)v58 + v79;
          uint64_t v81 = (char *)v32 + v79;
          if (v63((char *)v32 + v79, 1, v61))
          {
            sub_1C0086AE0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v80, v81, *(void *)(*(void *)(v82 - 8) + 64));
          }
          else
          {
            uint64_t v83 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 32))(v80, v81, v83);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v80, 0, 1, v61);
          }
          a2 = v130;
          uint64_t v84 = v56[8];
          uint64_t v85 = (_OWORD *)((char *)v58 + v84);
          uint64_t v86 = (_OWORD *)((char *)v32 + v84);
          long long v87 = v86[1];
          _OWORD *v85 = *v86;
          v85[1] = v87;
          *(_OWORD *)((char *)v85 + 25) = *(_OWORD *)((char *)v86 + 25);
          uint64_t v88 = v56[9];
          uint64_t v89 = (_OWORD *)((char *)v58 + v88);
          uint64_t v90 = (_OWORD *)((char *)v32 + v88);
          *(_OWORD *)((char *)v89 + 25) = *(_OWORD *)((char *)v90 + 25);
          long long v91 = v90[1];
          _OWORD *v89 = *v90;
          v89[1] = v91;
          uint64_t v92 = v56[10];
          long long v93 = (_OWORD *)((char *)v58 + v92);
          uint64_t v94 = (_OWORD *)((char *)v32 + v92);
          long long v95 = v94[1];
          *long long v93 = *v94;
          v93[1] = v95;
          *(_OWORD *)((char *)v93 + 25) = *(_OWORD *)((char *)v94 + 25);
          goto LABEL_75;
        default:
          uint64_t v33 = type metadata accessor for PuzzleStatisticValue(0);
          int v34 = swift_getEnumCaseMultiPayload();
          if (v34 == 5)
          {
            uint64_t v35 = type metadata accessor for PuzzleStreak();
            uint64_t v36 = *(void *)(v35 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v36 + 48))(v32, 1, v35)) {
              goto LABEL_12;
            }
          }
          else
          {
            if (v34 != 4)
            {
              memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
LABEL_75:
              swift_storeEnumTagMultiPayload();
LABEL_76:
              swift_storeEnumTagMultiPayload();
              goto LABEL_77;
            }
            uint64_t v35 = type metadata accessor for PuzzleStreak();
            uint64_t v36 = *(void *)(v35 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v36 + 48))(v32, 1, v35))
            {
LABEL_12:
              sub_1C0086AE0(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v31, v32, *(void *)(*(void *)(v37 - 8) + 64));
              goto LABEL_74;
            }
          }
          uint64_t v99 = sub_1C151555C();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v99 - 8) + 32))(v31, v32, v99);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(v31, 0, 1, v35);
LABEL_74:
          swift_storeEnumTagMultiPayload();
          goto LABEL_75;
      }
    case 3:
      uint64_t v126 = a3;
      *a1 = *a2;
      uint64_t v125 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
      uint64_t v8 = v125[5];
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v128 = a2;
      uint64_t v10 = (char *)a2 + v8;
      *(_OWORD *)((char *)a1 + v8) = *(_OWORD *)((char *)a2 + v8);
      uint64_t v11 = (int *)type metadata accessor for FormatWebEmbed();
      uint64_t v12 = v11[5];
      uint64_t v13 = &v9[v12];
      uint64_t v14 = &v10[v12];
      uint64_t v15 = sub_1C1515FDC();
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
      v17(v13, v14, v15);
      uint64_t v18 = v11[6];
      uint64_t v19 = &v9[v18];
      uint64_t v20 = &v10[v18];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(&v10[v18], 1, v15))
      {
        sub_1C0086AE0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
        memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        v17(v19, v20, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v19, 0, 1, v15);
      }
      a2 = v128;
      *(void *)&v9[v11[7]] = *(void *)&v10[v11[7]];
      *(_OWORD *)&v9[v11[8]] = *(_OWORD *)&v10[v11[8]];
      *(_OWORD *)&v9[v11[9]] = *(_OWORD *)&v10[v11[9]];
      *(void *)&v9[v11[10]] = *(void *)&v10[v11[10]];
      *(void *)&v9[v11[11]] = *(void *)&v10[v11[11]];
      *(void *)&v9[v11[12]] = *(void *)&v10[v11[12]];
      *(void *)((char *)a1 + v125[6]) = *(void *)((char *)v128 + v125[6]);
      *(void *)((char *)a1 + v125[7]) = *(void *)((char *)v128 + v125[7]);
      uint64_t v38 = v125[8];
      uint64_t v39 = (_OWORD *)((char *)a1 + v38);
      uint64_t v40 = (_OWORD *)((char *)v128 + v38);
      uint64_t v41 = type metadata accessor for WebEmbedDataVisualization();
      uint64_t v42 = *(void *)(v41 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
      {
        sub_1C0086AE0(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
        memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *uint64_t v39 = *v40;
          uint64_t v45 = type metadata accessor for GenericDataVisualization();
          v17((char *)v39 + *(int *)(v45 + 20), (char *)v40 + *(int *)(v45 + 20), v15);
          *(void *)((char *)v39 + *(int *)(v45 + 24)) = *(void *)((char *)v40 + *(int *)(v45 + 24));
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v39, v40, *(void *)(v42 + 64));
        }
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      }
      a3 = v126;
      uint64_t v65 = v125[9];
      uint64_t v66 = (char *)a1 + v65;
      uint64_t v67 = (char *)v128 + v65;
      sub_1BFEC84E0();
      uint64_t v69 = v68;
      uint64_t v70 = *(void *)(v68 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v67, 1, v68))
      {
        sub_1BFEC8548(0);
        memcpy(v66, v67, *(void *)(*(void *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v66, v67, v69);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v66, 0, 1, v69);
      }
      goto LABEL_76;
  }
  memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_77:
  uint64_t v123 = (int *)type metadata accessor for FormatContentSlotItemResolution();
  *(_OWORD *)((char *)a1 + v123[5]) = *(_OWORD *)((char *)a2 + v123[5]);
  *(void *)((char *)a1 + v123[6]) = *(void *)((char *)a2 + v123[6]);
  *(void *)((char *)a1 + v123[7]) = *(void *)((char *)a2 + v123[7]);
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}